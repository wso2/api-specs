openapi: 3.0.1
info:
  title: Magento B2B
  version: 2.2.10
  description: >-
    This is a generated connector for [Magento REST API v2.2](https://devdocs.magento.com/guides/v2.4/rest/bk-rest.html) OpenAPI specification.

    The Magento B2B Rest API service enables applications to build and manage a customized commerce store. 
  x-ballerina-init-description: >
    The connector initialization requires setting the API credentials. 
 
    Follow [this guide](https://devdocs.magento.com/guides/v2.4/get-started/authentication/gs-authentication-token.html) and obtain tokens.
  x-ballerina-display:
    label: Magento Cart
    iconPath: "icon.png"
tags:
- name: carts/
- name: carts/{cartId}
- name: carts/{cartId}/billing-address
- name: carts/{cartId}/coupons
- name: carts/{cartId}/coupons/{couponCode}
- name: carts/{cartId}/estimate-shipping-methods
- name: carts/{cartId}/estimate-shipping-methods-by-address-id
- name: carts/{cartId}/gift-message
- name: carts/{cartId}/gift-message/{itemId}
- name: carts/{cartId}/giftCards
- name: carts/{cartId}/giftCards/{giftCardCode}
- name: carts/{cartId}/items
- name: carts/{cartId}/items/{itemId}
- name: carts/{cartId}/order
- name: carts/{cartId}/payment-methods
- name: carts/{cartId}/selected-payment-method
- name: carts/{cartId}/shipping-information
- name: carts/{cartId}/shipping-methods
- name: carts/{cartId}/totals
- name: carts/{cartId}/totals-information
- name: carts/{quoteId}/giftCards
- name: carts/{quoteId}/items
- name: carts/guest-carts/{cartId}/checkGiftCard/{giftCardCode}
- name: carts/guest-carts/{cartId}/giftCards
- name: carts/guest-carts/{cartId}/giftCards/{giftCardCode}
- name: carts/licence
- name: carts/mine
- name: carts/mine/balance/apply
- name: carts/mine/balance/unapply
- name: carts/mine/billing-address
- name: carts/mine/checkGiftCard/{giftCardCode}
- name: carts/mine/checkout-fields
- name: carts/mine/collect-totals
- name: carts/mine/collection-point/search-request
- name: carts/mine/collection-point/search-result
- name: carts/mine/collection-point/select
- name: carts/mine/coupons
- name: carts/mine/coupons/{couponCode}
- name: carts/mine/delivery-option
- name: carts/mine/estimate-shipping-methods
- name: carts/mine/estimate-shipping-methods-by-address-id
- name: carts/mine/gift-message
- name: carts/mine/gift-message/{itemId}
- name: carts/mine/giftCards
- name: carts/mine/giftCards/{giftCardCode}
- name: carts/mine/items
- name: carts/mine/items/{itemId}
- name: carts/mine/order
- name: carts/mine/payment-information
- name: carts/mine/payment-methods
- name: carts/mine/selected-payment-method
- name: carts/mine/set-payment-information
- name: carts/mine/shipping-information
- name: carts/mine/shipping-methods
- name: carts/mine/totals
- name: carts/mine/totals-information
- name: carts/search
- name: categories
- name: categories/{categoryId}
- name: categories/{categoryId}/move
- name: categories/{categoryId}/products
- name: categories/{categoryId}/products/{sku}
- name: categories/{id}
- name: categories/attributes
- name: categories/attributes/{attributeCode}
- name: categories/attributes/{attributeCode}/options
- name: categories/list
- name: cmsBlock
- name: cmsBlock/{blockId}
- name: cmsBlock/{id}
- name: cmsBlock/search
- name: cmsPage
- name: cmsPage/{id}
- name: cmsPage/{pageId}
- name: cmsPage/search
security:
  - bearerAuth: []
paths:
  /V1/carts/:
    post:
      tags:
      - carts/
      summary: Creates an empty cart and quote for a guest
      description: Creates an empty cart and quote for a guest.
      operationId: createEmptyCartForGuest
      responses:
        200:
          description: 200 Success.
          content:
            application/json:
              schema:
                type: integer
                description: Cart ID.
            application/xml:
              schema:
                type: integer
                description: Cart ID.
        400:
          description: 400 Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        401:
          description: 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
  /V1/carts/guest-carts/{cartId}/checkGiftCard/{giftCardCode}:
    get:
      tags:
      - carts/guest-carts/{cartId}/checkGiftCard/{giftCardCode}
      summary: Checks gift card balance if added to the cart
      operationId: checkGiftCardAddedToCart
      parameters:
      - name: cartId
        in: path
        required: true
        schema:
          type: string
      - name: giftCardCode
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: 200 Success.
          content:
            application/json:
              schema:
                type: number
            application/xml:
              schema:
                type: number
        400:
          description: 400 Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
  /V1/carts/guest-carts/{cartId}/giftCards:
    post:
      tags:
      - carts/guest-carts/{cartId}/giftCards
      summary: Adds gift card to the cart
      operationId: addGiftCardToGuestCart
      parameters:
      - name: cartId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
              - giftCardAccountData
              type: object
              properties:
                giftCardAccountData:
                  $ref: '#/components/schemas/gift-card-account-data-gift-card-account-interface'
              xml:
                name: request
          application/xml:
            schema:
              required:
              - giftCardAccountData
              type: object
              properties:
                giftCardAccountData:
                  $ref: '#/components/schemas/gift-card-account-data-gift-card-account-interface'
              xml:
                name: request
        required: false
      responses:
        200:
          description: 200 Success.
          content:
            application/json:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
      x-codegen-request-body-name: giftCardAccountGuestGiftCardAccountManagementV1AddGiftCardPostBody
  /V1/carts/guest-carts/{cartId}/giftCards/{giftCardCode}:
    delete:
      tags:
      - carts/guest-carts/{cartId}/giftCards/{giftCardCode}
      summary: Removes GiftCard Account entity
      description: Remove GiftCard Account entity
      operationId: deleteGiftCardAccountByQuoteId
      parameters:
      - name: cartId
        in: path
        required: true
        schema:
          type: string
      - name: giftCardCode
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: 200 Success.
          content:
            application/json:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
  /V1/carts/licence:
    get:
      tags:
      - carts/licence
      summary: Lists active checkout agreements.
      description: Lists active checkout agreements.
      operationId: ListsActiveCheckoutAgreements
      responses:
        200:
          description: 200 Success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/checkout-agreements-data-agreement-interface'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/checkout-agreements-data-agreement-interface'
        401:
          description: 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
  /V1/carts/mine:
    get:
      tags:
      - carts/mine
      summary: Returns information for the cart for a specified customer
      description: Returns information for the cart for a specified customer
      operationId: getInformationForCartForSpecifiedCustomer
      responses:
        200:
          description: 200 Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/quote-data-cart-interface'
            application/xml:
              schema:
                $ref: '#/components/schemas/quote-data-cart-interface'
        400:
          description: 400 Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        401:
          description: 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
    put:
      tags:
      - carts/mine
      summary: Saves quote
      description: Save quote
      operationId: saveQuote
      requestBody:
        content:
          application/json:
            schema:
              required:
              - quote
              type: object
              properties:
                quote:
                  $ref: '#/components/schemas/quote-data-cart-interface'
              xml:
                name: request
          application/xml:
            schema:
              required:
              - quote
              type: object
              properties:
                quote:
                  $ref: '#/components/schemas/quote-data-cart-interface'
              xml:
                name: request
        required: false
      responses:
        401:
          description: 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
      x-codegen-request-body-name: quoteCartRepositoryV1SavePutBody
    post:
      tags:
      - carts/mine
      summary: Creates an empty cart and quote for a specified customer if customer
        does not have a cart yet.
      description: Creates an empty cart and quote for a specified customer if customer
        does not have a cart yet.
      operationId: createEmptyCartForCustomerIfNoCart
      responses:
        200:
          description: 200 Success.
          content:
            application/json:
              schema:
                type: integer
                description: new cart ID if customer did not have a cart or ID of
                  the existing cart otherwise.
            application/xml:
              schema:
                type: integer
                description: new cart ID if customer did not have a cart or ID of
                  the existing cart otherwise.
        400:
          description: 400 Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        401:
          description: 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
  /V1/carts/mine/balance/apply:
    post:
      tags:
      - carts/mine/balance/apply
      summary: Applies store credit
      description: Apply store credit
      operationId: ApplyStoreCreditCustomerBalance
      responses:
        200:
          description: 200 Success.
          content:
            application/json:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
        401:
          description: 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
  /V1/carts/mine/balance/unapply:
    post:
      tags:
      - carts/mine/balance/unapply
      summary: Unapplies store credit.
      description: Unapply store credit.
      operationId: unapplyStoreCreditCustomerBalance
      responses:
        200:
          description: 200 Success.
          content:
            application/json:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
        401:
          description: 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
  /V1/carts/mine/billing-address:
    get:
      tags:
      - carts/mine/billing-address
      summary: Returns the billing address for a specified quote
      description: Returns the billing address for a specified quote.
      operationId: getBillingAddressForSpecifiedQuote
      responses:
        200:
          description: 200 Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/quote-data-address-interface'
            application/xml:
              schema:
                $ref: '#/components/schemas/quote-data-address-interface'
        400:
          description: 400 Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        401:
          description: 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
    post:
      tags:
      - carts/mine/billing-address
      summary: Assigns a specified billing address to a specified cart
      description: Assigns a specified billing address to a specified cart.
      operationId: assignsSpecifiedBillingAddress
      requestBody:
        content:
          application/json:
            schema:
              required:
              - address
              type: object
              properties:
                address:
                  $ref: '#/components/schemas/quote-data-address-interface'
                useForShipping:
                  type: boolean
              xml:
                name: request
          application/xml:
            schema:
              required:
              - address
              type: object
              properties:
                address:
                  $ref: '#/components/schemas/quote-data-address-interface'
                useForShipping:
                  type: boolean
              xml:
                name: request
        required: false
      responses:
        200:
          description: 200 Success.
          content:
            application/json:
              schema:
                type: integer
                description: Address ID.
            application/xml:
              schema:
                type: integer
                description: Address ID.
        400:
          description: 400 Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        401:
          description: 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
      x-codegen-request-body-name: quoteBillingAddressManagementV1AssignPostBody
  /V1/carts/mine/checkGiftCard/{giftCardCode}:
    get:
      tags:
      - carts/mine/checkGiftCard/{giftCardCode}
      summary: Checks gift card balance if applied to given cart
      operationId: getGiftCardBalanceIfAppliedGivenCart
      parameters:
      - name: giftCardCode
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: 200 Success.
          content:
            application/json:
              schema:
                type: number
            application/xml:
              schema:
                type: number
        400:
          description: 400 Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        401:
          description: 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
  /V1/carts/mine/checkout-fields:
    post:
      tags:
      - carts/mine/checkout-fields
      summary: Saves Checkout Fields
      operationId: saveCheckoutFields
      requestBody:
        content:
          application/json:
            schema:
              required:
              - serviceSelection
              type: object
              properties:
                serviceSelection:
                  type: array
                  items:
                    $ref: '#/components/schemas/framework-attribute-interface'
              xml:
                name: request
          application/xml:
            schema:
              required:
              - serviceSelection
              type: object
              properties:
                serviceSelection:
                  type: array
                  items:
                    $ref: '#/components/schemas/framework-attribute-interface'
              xml:
                name: request
        required: false
      responses:
        400:
          description: 400 Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        401:
          description: 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
      x-codegen-request-body-name: temandoShippingQuoteCartCheckoutFieldManagementV1SaveCheckoutFieldsPostBody
  /V1/carts/mine/collect-totals:
    put:
      tags:
      - carts/mine/collect-totals
      summary: Sets shipping/billing methods and additional data for cart and collect
        totals.
      description: Set shipping/billing methods and additional data for cart and collect
        totals.
      operationId: setShippingBillingMethodsAndCollectTotal
      requestBody:
        content:
          application/json:
            schema:
              required:
              - paymentMethod
              type: object
              properties:
                paymentMethod:
                  $ref: '#/components/schemas/quote-data-payment-interface'
                shippingCarrierCode:
                  type: string
                  description: The carrier code.
                shippingMethodCode:
                  type: string
                  description: The shipping method code.
                additionalData:
                  $ref: '#/components/schemas/quote-data-totals-additional-data-interface'
              xml:
                name: request
          application/xml:
            schema:
              required:
              - paymentMethod
              type: object
              properties:
                paymentMethod:
                  $ref: '#/components/schemas/quote-data-payment-interface'
                shippingCarrierCode:
                  type: string
                  description: The carrier code.
                shippingMethodCode:
                  type: string
                  description: The shipping method code.
                additionalData:
                  $ref: '#/components/schemas/quote-data-totals-additional-data-interface'
              xml:
                name: request
        required: false
      responses:
        200:
          description: 200 Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/quote-data-totals-interface'
            application/xml:
              schema:
                $ref: '#/components/schemas/quote-data-totals-interface'
        401:
          description: 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
      x-codegen-request-body-name: quoteCartTotalManagementV1CollectTotalsPutBody
  /V1/carts/mine/collection-point/search-request:
    put:
      tags:
      - carts/mine/collection-point/search-request
      summary: Shipping collection point search request
      operationId: saveSearchRequest
      requestBody:
        content:
          application/json:
            schema:
              required:
              - countryId
              - postcode
              type: object
              properties:
                countryId:
                  type: string
                postcode:
                  type: string
              xml:
                name: request
          application/xml:
            schema:
              required:
              - countryId
              - postcode
              type: object
              properties:
                countryId:
                  type: string
                postcode:
                  type: string
              xml:
                name: request
        required: false
      responses:
        200:
          description: 200 Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/temando-shipping-data-collection-point-search-request-interface'
            application/xml:
              schema:
                $ref: '#/components/schemas/temando-shipping-data-collection-point-search-request-interface'
        401:
          description: 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        500:
          description: Internal Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
      x-codegen-request-body-name: temandoShippingCollectionPointCartCollectionPointManagementV1SaveSearchRequestPutBody
    delete:
      tags:
      - carts/mine/collection-point/search-request
      summary: Deletes cart collection point search request
      operationId: deleteCartCollectionPointSearchRequest
      responses:
        200:
          description: 200 Success.
          content:
            application/json:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
        401:
          description: 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        500:
          description: Internal Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
  /V1/carts/mine/collection-point/search-result:
    get:
      tags:
      - carts/mine/collection-point/search-result
      summary: Gets collection points search request
      operationId: getCollectionPointsSearchRequest
      responses:
        200:
          description: 200 Success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/temando-shipping-data-collection-point-quote-collection-point-interface'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/temando-shipping-data-collection-point-quote-collection-point-interface'
        401:
          description: 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
  /V1/carts/mine/collection-point/select:
    post:
      tags:
      - carts/mine/collection-point/select
      summary: Selects cart collection point
      operationId: selectCollectionPoint
      requestBody:
        content:
          application/json:
            schema:
              required:
              - entityId
              type: object
              properties:
                entityId:
                  type: integer
              xml:
                name: request
          application/xml:
            schema:
              required:
              - entityId
              type: object
              properties:
                entityId:
                  type: integer
              xml:
                name: request
        required: false
      responses:
        200:
          description: 200 Success.
          content:
            application/json:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
        401:
          description: 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        500:
          description: Internal Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
      x-codegen-request-body-name: temandoShippingCollectionPointCartCollectionPointManagementV1SelectCollectionPointPostBody
  /V1/carts/mine/coupons:
    get:
      tags:
      - carts/mine/coupons
      summary: Returns information for a coupon in a specified cart
      description: Returns information for a coupon in a specified cart.
      operationId: getInformationForCoupon
      responses:
        200:
          description: 200 Success.
          content:
            application/json:
              schema:
                type: string
                description: The coupon code data.
            application/xml:
              schema:
                type: string
                description: The coupon code data.
        400:
          description: 400 Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        401:
          description: 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
    delete:
      tags:
      - carts/mine/coupons
      summary: Deletes a coupon from a specified cart
      description: Deletes a coupon from a specified cart.
      operationId: deleteCouponFromCart
      responses:
        200:
          description: 200 Success.
          content:
            application/json:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
        400:
          description: 400 Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        401:
          description: 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
  /V1/carts/mine/coupons/{couponCode}:
    put:
      tags:
      - carts/mine/coupons/{couponCode}
      summary: Adds a coupon by code to a specified cart
      description: Adds a coupon by code to a specified cart.
      operationId: addCouponByCodeToCart
      parameters:
      - name: couponCode
        in: path
        description: The coupon code data.
        required: true
        schema:
          type: string
      responses:
        200:
          description: 200 Success.
          content:
            application/json:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
        400:
          description: 400 Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        401:
          description: 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
  /V1/carts/mine/delivery-option:
    post:
      tags:
      - carts/mine/delivery-option
      summary: Handles selected delivery option
      description: Handle selected delivery option.
      operationId: handleSelectedDeliveryOption
      requestBody:
        content:
          application/json:
            schema:
              required:
              - selectedOption
              type: object
              properties:
                selectedOption:
                  type: string
              xml:
                name: request
          application/xml:
            schema:
              required:
              - selectedOption
              type: object
              properties:
                selectedOption:
                  type: string
              xml:
                name: request
        required: false
      responses:
        401:
          description: 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        500:
          description: Internal Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
      x-codegen-request-body-name: temandoShippingQuoteCartDeliveryOptionManagementV1SavePostBody
  /V1/carts/mine/estimate-shipping-methods:
    post:
      tags:
      - carts/mine/estimate-shipping-methods
      summary: Estimates shipping by address and return list of available shipping methods
      description: Estimate shipping by address and return list of available shipping
        methods
      operationId: estimateShippingByExtendedAddress
      requestBody:
        content:
          application/json:
            schema:
              required:
              - address
              type: object
              properties:
                address:
                  $ref: '#/components/schemas/quote-data-address-interface'
              xml:
                name: request
          application/xml:
            schema:
              required:
              - address
              type: object
              properties:
                address:
                  $ref: '#/components/schemas/quote-data-address-interface'
              xml:
                name: request
        required: false
      responses:
        200:
          description: 200 Success.
          content:
            application/json:
              schema:
                type: array
                description: An array of shipping methods
                items:
                  $ref: '#/components/schemas/quote-data-shipping-method-interface'
            application/xml:
              schema:
                type: array
                description: An array of shipping methods
                items:
                  $ref: '#/components/schemas/quote-data-shipping-method-interface'
        401:
          description: 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
      x-codegen-request-body-name: quoteShipmentEstimationV1EstimateByExtendedAddressPostBody
  /V1/carts/mine/estimate-shipping-methods-by-address-id:
    post:
      tags:
      - carts/mine/estimate-shipping-methods-by-address-id
      summary: Estimates shipping
      description: Estimate shipping
      operationId: estimateShippingMethodsByAddressId
      requestBody:
        content:
          application/json:
            schema:
              required:
              - addressId
              type: object
              properties:
                addressId:
                  type: integer
                  description: The estimate address id
              xml:
                name: request
          application/xml:
            schema:
              required:
              - addressId
              type: object
              properties:
                addressId:
                  type: integer
                  description: The estimate address id
              xml:
                name: request
        required: false
      responses:
        200:
          description: 200 Success.
          content:
            application/json:
              schema:
                type: array
                description: An array of shipping methods.
                items:
                  $ref: '#/components/schemas/quote-data-shipping-method-interface'
            application/xml:
              schema:
                type: array
                description: An array of shipping methods.
                items:
                  $ref: '#/components/schemas/quote-data-shipping-method-interface'
        401:
          description: 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
      x-codegen-request-body-name: quoteShippingMethodManagementV1EstimateByAddressIdPostBody
  /V1/carts/mine/gift-message:
    get:
      tags:
      - carts/mine/gift-message
      summary: Returns the gift message for a specified order
      description: Return the gift message for a specified order
      operationId: getGiftMessageForSpecifiedOrder
      responses:
        200:
          description: 200 Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/gift-message-data-message-interface'
            application/xml:
              schema:
                $ref: '#/components/schemas/gift-message-data-message-interface'
        401:
          description: 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
    post:
      tags:
      - carts/mine/gift-message
      summary: Sets the gift message for an entire order
      description: Set the gift message for an entire order
      operationId: setGiftMessageForAnOrder
      requestBody:
        content:
          application/json:
            schema:
              required:
              - giftMessage
              type: object
              properties:
                giftMessage:
                  $ref: '#/components/schemas/gift-message-data-message-interface'
              xml:
                name: request
          application/xml:
            schema:
              required:
              - giftMessage
              type: object
              properties:
                giftMessage:
                  $ref: '#/components/schemas/gift-message-data-message-interface'
              xml:
                name: request
        required: false
      responses:
        200:
          description: 200 Success.
          content:
            application/json:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
        400:
          description: 400 Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        401:
          description: 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
      x-codegen-request-body-name: giftMessageCartRepositoryV1SavePostBody
  /V1/carts/mine/gift-message/{itemId}:
    get:
      tags:
      - carts/mine/gift-message/{itemId}
      summary: Returns the gift message for a specified item in a specified shopping
        cart
      description: Return the gift message for a specified item in a specified shopping
        cart.
      operationId: getGiftMessageForSpecifiedItem
      parameters:
      - name: itemId
        in: path
        description: The item ID.
        required: true
        schema:
          type: integer
      responses:
        200:
          description: 200 Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/gift-message-data-message-interface'
            application/xml:
              schema:
                $ref: '#/components/schemas/gift-message-data-message-interface'
        400:
          description: 400 Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        401:
          description: 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
    post:
      tags:
      - carts/mine/gift-message/{itemId}
      summary: Sets the gift message for a specified item in a specified shopping
        cart
      description: Set the gift message for a specified item in a specified shopping
        cart.
      operationId: setGiftMessageForSpecifiedItem
      parameters:
      - name: itemId
        in: path
        description: The item ID.
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              required:
              - giftMessage
              type: object
              properties:
                giftMessage:
                  $ref: '#/components/schemas/gift-message-data-message-interface'
              xml:
                name: request
          application/xml:
            schema:
              required:
              - giftMessage
              type: object
              properties:
                giftMessage:
                  $ref: '#/components/schemas/gift-message-data-message-interface'
              xml:
                name: request
        required: false
      responses:
        200:
          description: 200 Success.
          content:
            application/json:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
        400:
          description: 400 Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        401:
          description: 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
      x-codegen-request-body-name: giftMessageItemRepositoryV1SavePostBody
  /V1/carts/mine/giftCards:
    post:
      tags:
      - carts/mine/giftCards
      summary: Adds gift card to the cart
      operationId: addGiftCardToCart
      requestBody:
        content:
          application/json:
            schema:
              required:
              - giftCardAccountData
              type: object
              properties:
                giftCardAccountData:
                  $ref: '#/components/schemas/gift-card-account-data-gift-card-account-interface'
              xml:
                name: request
          application/xml:
            schema:
              required:
              - giftCardAccountData
              type: object
              properties:
                giftCardAccountData:
                  $ref: '#/components/schemas/gift-card-account-data-gift-card-account-interface'
              xml:
                name: request
        required: false
      responses:
        200:
          description: 200 Success.
          content:
            application/json:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
        401:
          description: 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
      x-codegen-request-body-name: giftCardAccountGiftCardAccountManagementV1SaveByQuoteIdPostBody
  /V1/carts/mine/giftCards/{giftCardCode}:
    delete:
      tags:
      - carts/mine/giftCards/{giftCardCode}
      summary: Removes GiftCard Account entity
      description: Remove GiftCard Account entity
      operationId: removeGiftCardAccountEntity
      parameters:
      - name: giftCardCode
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: 200 Success.
          content:
            application/json:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
        401:
          description: 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
  /V1/carts/mine/items:
    get:
      tags:
      - carts/mine/items
      summary: Lists items that are assigned to a specified cart
      description: Lists items that are assigned to a specified cart.
      operationId: listItemsAssignedToSpecifiedCart
      responses:
        200:
          description: 200 Success.
          content:
            application/json:
              schema:
                type: array
                description: Array of items.
                items:
                  $ref: '#/components/schemas/quote-data-cart-item-interface'
            application/xml:
              schema:
                type: array
                description: Array of items.
                items:
                  $ref: '#/components/schemas/quote-data-cart-item-interface'
        400:
          description: 400 Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        401:
          description: 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
    post:
      tags:
      - carts/mine/items
      summary: Adds/updates the specified cart item
      description: Add/update the specified cart item
      operationId: addOrUpdateSpecificCartItem
      requestBody:
        content:
          application/json:
            schema:
              required:
              - cartItem
              type: object
              properties:
                cartItem:
                  $ref: '#/components/schemas/quote-data-cart-item-interface'
              xml:
                name: request
          application/xml:
            schema:
              required:
              - cartItem
              type: object
              properties:
                cartItem:
                  $ref: '#/components/schemas/quote-data-cart-item-interface'
              xml:
                name: request
        required: false
      responses:
        200:
          description: 200 Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/quote-data-cart-item-interface'
            application/xml:
              schema:
                $ref: '#/components/schemas/quote-data-cart-item-interface'
        400:
          description: 400 Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        401:
          description: 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
      x-codegen-request-body-name: quoteCartItemRepositoryV1SavePostBody
  /V1/carts/mine/items/{itemId}:
    put:
      tags:
      - carts/mine/items/{itemId}
      summary: Adds/updates the specified cart item
      description: Add/update the specified cart item.
      operationId: addOrUpdateSpecificCartItemByID
      parameters:
      - name: itemId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
              - cartItem
              type: object
              properties:
                cartItem:
                  $ref: '#/components/schemas/quote-data-cart-item-interface'
              xml:
                name: request
          application/xml:
            schema:
              required:
              - cartItem
              type: object
              properties:
                cartItem:
                  $ref: '#/components/schemas/quote-data-cart-item-interface'
              xml:
                name: request
        required: false
      responses:
        200:
          description: 200 Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/quote-data-cart-item-interface'
            application/xml:
              schema:
                $ref: '#/components/schemas/quote-data-cart-item-interface'
        400:
          description: 400 Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        401:
          description: 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
      x-codegen-request-body-name: quoteCartItemRepositoryV1SavePutBody
    delete:
      tags:
      - carts/mine/items/{itemId}
      summary: Removes the specified item from the specified cart
      description: Removes the specified item from the specified cart.
      operationId: RemovesTheSpecifiedItemFromSpecifiedCart
      parameters:
      - name: itemId
        in: path
        description: The item ID of the item to be removed.
        required: true
        schema:
          type: integer
      responses:
        200:
          description: 200 Success.
          content:
            application/json:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
        400:
          description: 400 Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        401:
          description: 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
  /V1/carts/mine/order:
    put:
      tags:
      - carts/mine/order
      summary: Places an order for a specified cart
      description: Places an order for a specified cart.
      operationId: placeAnOrderForSpecifiedCart
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                paymentMethod:
                  $ref: '#/components/schemas/quote-data-payment-interface'
              xml:
                name: request
          application/xml:
            schema:
              type: object
              properties:
                paymentMethod:
                  $ref: '#/components/schemas/quote-data-payment-interface'
              xml:
                name: request
        required: false
      responses:
        200:
          description: 200 Success.
          content:
            application/json:
              schema:
                type: integer
                description: Order ID.
            application/xml:
              schema:
                type: integer
                description: Order ID.
        400:
          description: 400 Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        401:
          description: 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
      x-codegen-request-body-name: quoteCartManagementV1PlaceOrderPutBody
  /V1/carts/mine/payment-information:
    get:
      tags:
      - carts/mine/payment-information
      summary: Gets payment information
      description: Get payment information
      operationId: getPaymentInformation
      responses:
        200:
          description: 200 Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/checkout-data-payment-details-interface'
            application/xml:
              schema:
                $ref: '#/components/schemas/checkout-data-payment-details-interface'
        401:
          description: 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
    post:
      tags:
      - carts/mine/payment-information
      summary: Sets payment information and place order for a specified cart
      description: Set payment information and place order for a specified cart.
      operationId: savePaymentInformationAndPlaceOrderForSpecifiedCart
      requestBody:
        content:
          application/json:
            schema:
              required:
              - paymentMethod
              type: object
              properties:
                paymentMethod:
                  $ref: '#/components/schemas/quote-data-payment-interface'
                billingAddress:
                  $ref: '#/components/schemas/quote-data-address-interface'
              xml:
                name: request
          application/xml:
            schema:
              required:
              - paymentMethod
              type: object
              properties:
                paymentMethod:
                  $ref: '#/components/schemas/quote-data-payment-interface'
                billingAddress:
                  $ref: '#/components/schemas/quote-data-address-interface'
              xml:
                name: request
        required: false
      responses:
        200:
          description: 200 Success.
          content:
            application/json:
              schema:
                type: integer
                description: Order ID.
            application/xml:
              schema:
                type: integer
                description: Order ID.
        400:
          description: 400 Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        401:
          description: 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
      x-codegen-request-body-name: checkoutPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostBody
  /V1/carts/mine/payment-methods:
    get:
      tags:
      - carts/mine/payment-methods
      summary: Lists available payment methods for a specified shopping cart
      description: Lists available payment methods for a specified shopping cart.
        This call returns an array of objects, but detailed information about each
        object’s attributes might not be included.  See http://devdocs.magento.com/codelinks/attributes.html#PaymentMethodManagementInterface
        to determine which call to use to get detailed information about all attributes
        for an object.
      operationId: listAvailablePaymentMethodsForSpecifiedShoppingCart
      responses:
        200:
          description: 200 Success.
          content:
            application/json:
              schema:
                type: array
                description: Array of payment methods.
                items:
                  $ref: '#/components/schemas/quote-data-payment-method-interface'
            application/xml:
              schema:
                type: array
                description: Array of payment methods.
                items:
                  $ref: '#/components/schemas/quote-data-payment-method-interface'
        400:
          description: 400 Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        401:
          description: 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
  /V1/carts/mine/selected-payment-method:
    get:
      tags:
      - carts/mine/selected-payment-method
      summary: Returns the payment method for a specified shopping cart
      description: Returns the payment method for a specified shopping cart.
      operationId: getThePaymentMethodForSpecifiedShoppingCart
      responses:
        200:
          description: 200 Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/quote-data-payment-interface'
            application/xml:
              schema:
                $ref: '#/components/schemas/quote-data-payment-interface'
        400:
          description: 400 Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        401:
          description: 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
    put:
      tags:
      - carts/mine/selected-payment-method
      summary: Adds a specified payment method to a specified shopping cart
      description: Adds a specified payment method to a specified shopping cart.
      operationId: addSpecifiedPaymentMethodSpecifiedShoppingCart
      requestBody:
        content:
          application/json:
            schema:
              required:
              - method
              type: object
              properties:
                method:
                  $ref: '#/components/schemas/quote-data-payment-interface'
              xml:
                name: request
          application/xml:
            schema:
              required:
              - method
              type: object
              properties:
                method:
                  $ref: '#/components/schemas/quote-data-payment-interface'
              xml:
                name: request
        required: false
      responses:
        200:
          description: 200 Success.
          content:
            application/json:
              schema:
                type: string
                description: redirect url or error message.
            application/xml:
              schema:
                type: string
                description: redirect url or error message.
        400:
          description: 400 Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        401:
          description: 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
      x-codegen-request-body-name: quotePaymentMethodManagementV1SetPutBody
  /V1/carts/mine/set-payment-information:
    post:
      tags:
      - carts/mine/set-payment-information
      summary: Sets payment information for a specified cart
      description: Set payment information for a specified cart.
      operationId: setPaymentInformationForSpecifiedCart
      requestBody:
        content:
          application/json:
            schema:
              required:
              - paymentMethod
              type: object
              properties:
                paymentMethod:
                  $ref: '#/components/schemas/quote-data-payment-interface'
                billingAddress:
                  $ref: '#/components/schemas/quote-data-address-interface'
              xml:
                name: request
          application/xml:
            schema:
              required:
              - paymentMethod
              type: object
              properties:
                paymentMethod:
                  $ref: '#/components/schemas/quote-data-payment-interface'
                billingAddress:
                  $ref: '#/components/schemas/quote-data-address-interface'
              xml:
                name: request
        required: false
      responses:
        200:
          description: 200 Success.
          content:
            application/json:
              schema:
                type: integer
                description: Order ID.
            application/xml:
              schema:
                type: integer
                description: Order ID.
        400:
          description: 400 Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        401:
          description: 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
      x-codegen-request-body-name: checkoutPaymentInformationManagementV1SavePaymentInformationPostBody
  /V1/carts/mine/shipping-information:
    post:
      tags:
      - carts/mine/shipping-information
      summary: Saves address information
      operationId: saveAddressInformation
      requestBody:
        content:
          application/json:
            schema:
              required:
              - addressInformation
              type: object
              properties:
                addressInformation:
                  $ref: '#/components/schemas/checkout-data-shipping-information-interface'
              xml:
                name: request
          application/xml:
            schema:
              required:
              - addressInformation
              type: object
              properties:
                addressInformation:
                  $ref: '#/components/schemas/checkout-data-shipping-information-interface'
              xml:
                name: request
        required: false
      responses:
        200:
          description: 200 Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/checkout-data-payment-details-interface'
            application/xml:
              schema:
                $ref: '#/components/schemas/checkout-data-payment-details-interface'
        401:
          description: 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
      x-codegen-request-body-name: checkoutShippingInformationManagementV1SaveAddressInformationPostBody
  /V1/carts/mine/shipping-methods:
    get:
      tags:
      - carts/mine/shipping-methods
      summary: Lists applicable shipping methods for a specified quote
      description: Lists applicable shipping methods for a specified quote.
      operationId: listApplicableShippingMethodsForSpecifiedQuote
      responses:
        200:
          description: 200 Success.
          content:
            application/json:
              schema:
                type: array
                description: An array of shipping methods.
                items:
                  $ref: '#/components/schemas/quote-data-shipping-method-interface'
            application/xml:
              schema:
                type: array
                description: An array of shipping methods.
                items:
                  $ref: '#/components/schemas/quote-data-shipping-method-interface'
        400:
          description: 400 Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        401:
          description: 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
  /V1/carts/mine/totals:
    get:
      tags:
      - carts/mine/totals
      summary: Returns quote totals data for a specified cart
      description: Returns quote totals data for a specified cart.
      operationId: getQuoteTotalDataForSpecifiedCart
      responses:
        200:
          description: 200 Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/quote-data-totals-interface'
            application/xml:
              schema:
                $ref: '#/components/schemas/quote-data-totals-interface'
        400:
          description: 400 Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        401:
          description: 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
  /V1/carts/mine/totals-information:
    post:
      tags:
      - carts/mine/totals-information
      summary: Calculates quote totals based on address and shipping method
      description: Calculate quote totals based on address and shipping method.
      operationId: calculateQuoteTotalBasedOnAddressAndShippingMethod
      requestBody:
        content:
          application/json:
            schema:
              required:
              - addressInformation
              type: object
              properties:
                addressInformation:
                  $ref: '#/components/schemas/checkout-data-totals-information-interface'
              xml:
                name: request
          application/xml:
            schema:
              required:
              - addressInformation
              type: object
              properties:
                addressInformation:
                  $ref: '#/components/schemas/checkout-data-totals-information-interface'
              xml:
                name: request
        required: false
      responses:
        200:
          description: 200 Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/quote-data-totals-interface'
            application/xml:
              schema:
                $ref: '#/components/schemas/quote-data-totals-interface'
        401:
          description: 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
      x-codegen-request-body-name: checkoutTotalsInformationManagementV1CalculatePostBody
  /V1/carts/search:
    get:
      tags:
      - carts/search
      summary: Enables administrative users to list carts that match specified
        search criteria
      description: Enables administrative users to list carts that match specified
        search criteria. This call returns an array of objects, but detailed information
        about each object’s attributes might not be included.  See http://devdocs.magento.com/codelinks/attributes.html#CartRepositoryInterface
        to determine which call to use to get detailed information about all attributes
        for an object.
      operationId: enablesAdministrativeUsersToListCarts
      parameters:
      - name: searchCriteria[filterGroups][0][filters][0][field]
        in: query
        description: Field
        schema:
          type: string
      - name: searchCriteria[filterGroups][0][filters][0][value]
        in: query
        description: Value
        schema:
          type: string
      - name: searchCriteria[filterGroups][0][filters][0][conditionType]
        in: query
        description: Condition type
        schema:
          type: string
      - name: searchCriteria[sortOrders][0][field]
        in: query
        description: Sorting field.
        schema:
          type: string
      - name: searchCriteria[sortOrders][0][direction]
        in: query
        description: Sorting direction.
        schema:
          type: string
      - name: searchCriteria[pageSize]
        in: query
        description: Page size.
        schema:
          type: integer
      - name: searchCriteria[currentPage]
        in: query
        description: Current page.
        schema:
          type: integer
      responses:
        200:
          description: 200 Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/quote-data-cart-search-results-interface'
            application/xml:
              schema:
                $ref: '#/components/schemas/quote-data-cart-search-results-interface'
        401:
          description: 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
  /V1/carts/{cartId}:
    get:
      tags:
      - carts/{cartId}
      summary: Enables an administrative user to return information for a specified cart
      description: Enables an administrative user to return information for a specified cart.
      operationId: enablesAdministrativeUserToReturnInformation 
      parameters:
      - name: cartId
        in: path
        required: true
        schema:
          type: integer
      responses:
        200:
          description: 200 Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/quote-data-cart-interface'
            application/xml:
              schema:
                $ref: '#/components/schemas/quote-data-cart-interface'
        400:
          description: 400 Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        401:
          description: 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
    put:
      tags:
      - carts/{cartId}
      summary: Assigns a specified customer to a specified shopping cart
      description: Assigns a specified customer to a specified shopping cart.
      operationId: assignSpecifiedCustomerToShoppingCart
      parameters:
      - name: cartId
        in: path
        description: The cart ID.
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              required:
              - customerId
              - storeId
              type: object
              properties:
                customerId:
                  type: integer
                  description: The customer ID.
                storeId:
                  type: integer
              xml:
                name: request
          application/xml:
            schema:
              required:
              - customerId
              - storeId
              type: object
              properties:
                customerId:
                  type: integer
                  description: The customer ID.
                storeId:
                  type: integer
              xml:
                name: request
        required: false
      responses:
        200:
          description: 200 Success.
          content:
            application/json:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
        401:
          description: 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
      x-codegen-request-body-name: quoteCartManagementV1AssignCustomerPutBody
  /V1/carts/{cartId}/billing-address:
    get:
      tags:
      - carts/{cartId}/billing-address
      summary: Returns the billing address for a specified quote
      description: Returns the billing address for a specified quote.
      operationId: quoteBillingAddressForSpecifiedQuote
      parameters:
      - name: cartId
        in: path
        description: The cart ID.
        required: true
        schema:
          type: integer
      responses:
        200:
          description: 200 Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/quote-data-address-interface'
            application/xml:
              schema:
                $ref: '#/components/schemas/quote-data-address-interface'
        400:
          description: 400 Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        401:
          description: 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
    post:
      tags:
      - carts/{cartId}/billing-address
      summary: Assigns a specified billing address to a specified cart
      description: Assigns a specified billing address to a specified cart.
      operationId: assignBillingAddressToSpecifiedCartByID
      parameters:
      - name: cartId
        in: path
        description: The cart ID.
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              required:
              - address
              type: object
              properties:
                address:
                  $ref: '#/components/schemas/quote-data-address-interface'
                useForShipping:
                  type: boolean
              xml:
                name: request
          application/xml:
            schema:
              required:
              - address
              type: object
              properties:
                address:
                  $ref: '#/components/schemas/quote-data-address-interface'
                useForShipping:
                  type: boolean
              xml:
                name: request
        required: false
      responses:
        200:
          description: 200 Success.
          content:
            application/json:
              schema:
                type: integer
                description: Address ID.
            application/xml:
              schema:
                type: integer
                description: Address ID.
        400:
          description: 400 Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        401:
          description: 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
      x-codegen-request-body-name: quoteBillingAddressManagementV1AssignPostBody
  /V1/carts/{cartId}/coupons:
    get:
      tags:
      - carts/{cartId}/coupons
      summary: Returns information for a coupon in a specified cart
      description: Returns information for a coupon in a specified cart.
      operationId: getInformationForCouponInSpecifiedCart
      parameters:
      - name: cartId
        in: path
        description: The cart ID.
        required: true
        schema:
          type: integer
      responses:
        200:
          description: 200 Success.
          content:
            application/json:
              schema:
                type: string
                description: The coupon code data.
            application/xml:
              schema:
                type: string
                description: The coupon code data.
        400:
          description: 400 Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        401:
          description: 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
    delete:
      tags:
      - carts/{cartId}/coupons
      summary: Deletes a coupon from a specified cart
      description: Deletes a coupon from a specified cart.
      operationId: deleteCouponFromASpecCartByID
      parameters:
      - name: cartId
        in: path
        description: The cart ID.
        required: true
        schema:
          type: integer
      responses:
        200:
          description: 200 Success.
          content:
            application/json:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
        400:
          description: 400 Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        401:
          description: 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
  /V1/carts/{cartId}/coupons/{couponCode}:
    put:
      tags:
      - carts/{cartId}/coupons/{couponCode}
      summary: Adds a coupon by code to a specified cart
      description: Adds a coupon by code to a specified cart.
      operationId: addQuoteCouponByCodeToSpecifiedCartByID
      parameters:
      - name: cartId
        in: path
        description: The cart ID.
        required: true
        schema:
          type: integer
      - name: couponCode
        in: path
        description: The coupon code data.
        required: true
        schema:
          type: string
      responses:
        200:
          description: 200 Success.
          content:
            application/json:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
        400:
          description: 400 Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        401:
          description: 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
  /V1/carts/{cartId}/estimate-shipping-methods:
    post:
      tags:
      - carts/{cartId}/estimate-shipping-methods
      summary: Estimates shipping by address and return list of available shipping
        methods
      description: Estimate shipping by address and return list of available shipping
        methods
      operationId: estimateShippingByAddressByCartID
      parameters:
      - name: cartId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
              - address
              type: object
              properties:
                address:
                  $ref: '#/components/schemas/quote-data-address-interface'
              xml:
                name: request
          application/xml:
            schema:
              required:
              - address
              type: object
              properties:
                address:
                  $ref: '#/components/schemas/quote-data-address-interface'
              xml:
                name: request
        required: false
      responses:
        200:
          description: 200 Success.
          content:
            application/json:
              schema:
                type: array
                description: An array of shipping methods
                items:
                  $ref: '#/components/schemas/quote-data-shipping-method-interface'
            application/xml:
              schema:
                type: array
                description: An array of shipping methods
                items:
                  $ref: '#/components/schemas/quote-data-shipping-method-interface'
        401:
          description: 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
      x-codegen-request-body-name: quoteShipmentEstimationV1EstimateByExtendedAddressPostBody
  /V1/carts/{cartId}/estimate-shipping-methods-by-address-id:
    post:
      tags:
      - carts/{cartId}/estimate-shipping-methods-by-address-id
      summary: Estimates shipping
      description: Estimate shipping
      operationId: estimateShippingMethodsByAddressIdAndCartID
      parameters:
      - name: cartId
        in: path
        description: The shopping cart ID.
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              required:
              - addressId
              type: object
              properties:
                addressId:
                  type: integer
                  description: The estimate address id
              xml:
                name: request
          application/xml:
            schema:
              required:
              - addressId
              type: object
              properties:
                addressId:
                  type: integer
                  description: The estimate address id
              xml:
                name: request
        required: false
      responses:
        200:
          description: 200 Success.
          content:
            application/json:
              schema:
                type: array
                description: An array of shipping methods.
                items:
                  $ref: '#/components/schemas/quote-data-shipping-method-interface'
            application/xml:
              schema:
                type: array
                description: An array of shipping methods.
                items:
                  $ref: '#/components/schemas/quote-data-shipping-method-interface'
        401:
          description: 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
      x-codegen-request-body-name: quoteShippingMethodManagementV1EstimateByAddressIdPostBody
  /V1/carts/{cartId}/gift-message:
    get:
      tags:
      - carts/{cartId}/gift-message
      summary: Returns the gift message for a specified order
      description: Return the gift message for a specified order.
      operationId: getGiftMessageForSpecificOrderByCartID
      parameters:
      - name: cartId
        in: path
        description: The shopping cart ID.
        required: true
        schema:
          type: integer
      responses:
        200:
          description: 200 Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/gift-message-data-message-interface'
            application/xml:
              schema:
                $ref: '#/components/schemas/gift-message-data-message-interface'
        401:
          description: 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
    post:
      tags:
      - carts/{cartId}/gift-message
      summary: Sets the gift message for an entire order
      description: Set the gift message for an entire order.
      operationId: setGiftMessageForEntireOrderByCartID
      parameters:
      - name: cartId
        in: path
        description: The cart ID.
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              required:
              - giftMessage
              type: object
              properties:
                giftMessage:
                  $ref: '#/components/schemas/gift-message-data-message-interface'
              xml:
                name: request
          application/xml:
            schema:
              required:
              - giftMessage
              type: object
              properties:
                giftMessage:
                  $ref: '#/components/schemas/gift-message-data-message-interface'
              xml:
                name: request
        required: false
      responses:
        200:
          description: 200 Success.
          content:
            application/json:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
        400:
          description: 400 Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        401:
          description: 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
      x-codegen-request-body-name: giftMessageCartRepositoryV1SavePostBody
  /V1/carts/{cartId}/gift-message/{itemId}:
    get:
      tags:
      - carts/{cartId}/gift-message/{itemId}
      summary: Returns the gift message for a specified item in a specified shopping
        cart
      description: Return the gift message for a specified item in a specified shopping
        cart.
      operationId: getGiftMessageForSpecificItemOfSpecShopping
      parameters:
      - name: cartId
        in: path
        description: The shopping cart ID.
        required: true
        schema:
          type: integer
      - name: itemId
        in: path
        description: The item ID.
        required: true
        schema:
          type: integer
      responses:
        200:
          description: 200 Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/gift-message-data-message-interface'
            application/xml:
              schema:
                $ref: '#/components/schemas/gift-message-data-message-interface'
        400:
          description: 400 Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        401:
          description: 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
    post:
      tags:
      - carts/{cartId}/gift-message/{itemId}
      summary: Sets the gift message for a specified item in a specified shopping
        cart
      description: Set the gift message for a specified item in a specified shopping
        cart.
      operationId: setGiftMessageForSpecItemInASpecShopping
      parameters:
      - name: cartId
        in: path
        description: The cart ID.
        required: true
        schema:
          type: integer
      - name: itemId
        in: path
        description: The item ID.
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              required:
              - giftMessage
              type: object
              properties:
                giftMessage:
                  $ref: '#/components/schemas/gift-message-data-message-interface'
              xml:
                name: request
          application/xml:
            schema:
              required:
              - giftMessage
              type: object
              properties:
                giftMessage:
                  $ref: '#/components/schemas/gift-message-data-message-interface'
              xml:
                name: request
        required: false
      responses:
        200:
          description: 200 Success.
          content:
            application/json:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
        400:
          description: 400 Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        401:
          description: 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
      x-codegen-request-body-name: giftMessageItemRepositoryV1SavePostBody
  /V1/carts/{cartId}/giftCards/{giftCardCode}:
    delete:
      tags:
      - carts/{cartId}/giftCards/{giftCardCode}
      summary: Removes GiftCard Account entity
      description: Remove GiftCard Account entity
      operationId: removeGiftCardAccountEntityByCartID
      parameters:
      - name: cartId
        in: path
        required: true
        schema:
          type: integer
      - name: giftCardCode
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: 200 Success.
          content:
            application/json:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
        401:
          description: 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
  /V1/carts/{cartId}/items:
    get:
      tags:
      - carts/{cartId}/items
      summary: Lists items that are assigned to a specified cart
      description: Lists items that are assigned to a specified cart.
      operationId: listItemsAssignedToSpecificCart
      parameters:
      - name: cartId
        in: path
        description: The cart ID.
        required: true
        schema:
          type: integer
      responses:
        200:
          description: 200 Success.
          content:
            application/json:
              schema:
                type: array
                description: Array of items.
                items:
                  $ref: '#/components/schemas/quote-data-cart-item-interface'
            application/xml:
              schema:
                type: array
                description: Array of items.
                items:
                  $ref: '#/components/schemas/quote-data-cart-item-interface'
        400:
          description: 400 Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        401:
          description: 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
  /V1/carts/{cartId}/items/{itemId}:
    put:
      tags:
      - carts/{cartId}/items/{itemId}
      summary: Adds/updates the specified cart item
      description: Add/update the specified cart item.
      operationId: addOrUpdateTheSpecificCartItem
      parameters:
      - name: cartId
        in: path
        required: true
        schema:
          type: string
      - name: itemId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
              - cartItem
              type: object
              properties:
                cartItem:
                  $ref: '#/components/schemas/quote-data-cart-item-interface'
              xml:
                name: request
          application/xml:
            schema:
              required:
              - cartItem
              type: object
              properties:
                cartItem:
                  $ref: '#/components/schemas/quote-data-cart-item-interface'
              xml:
                name: request
        required: false
      responses:
        200:
          description: 200 Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/quote-data-cart-item-interface'
            application/xml:
              schema:
                $ref: '#/components/schemas/quote-data-cart-item-interface'
        400:
          description: 400 Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        401:
          description: 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
      x-codegen-request-body-name: quoteCartItemRepositoryV1SavePutBody
    delete:
      tags:
      - carts/{cartId}/items/{itemId}
      summary: Removes the specified item from the specified cart
      description: Removes the specified item from the specified cart.
      operationId: removesSpecificItemFromSpecifiedCart
      parameters:
      - name: cartId
        in: path
        description: The cart ID.
        required: true
        schema:
          type: integer
      - name: itemId
        in: path
        description: The item ID of the item to be removed.
        required: true
        schema:
          type: integer
      responses:
        200:
          description: 200 Success.
          content:
            application/json:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
        400:
          description: 400 Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        401:
          description: 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
  /V1/carts/{cartId}/order:
    put:
      tags:
      - carts/{cartId}/order
      summary: Places an order for a specified cart
      description: Places an order for a specified cart.
      operationId: placesAnOrderForSpecifiedCart
      parameters:
      - name: cartId
        in: path
        description: The cart ID.
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                paymentMethod:
                  $ref: '#/components/schemas/quote-data-payment-interface'
              xml:
                name: request
          application/xml:
            schema:
              type: object
              properties:
                paymentMethod:
                  $ref: '#/components/schemas/quote-data-payment-interface'
              xml:
                name: request
        required: false
      responses:
        200:
          description: 200 Success.
          content:
            application/json:
              schema:
                type: integer
                description: Order ID.
            application/xml:
              schema:
                type: integer
                description: Order ID.
        400:
          description: 400 Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        401:
          description: 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
      x-codegen-request-body-name: quoteCartManagementV1PlaceOrderPutBody
  /V1/carts/{cartId}/payment-methods:
    get:
      tags:
      - carts/{cartId}/payment-methods
      summary: Lists available payment methods for a specified shopping cart
      description: Lists available payment methods for a specified shopping cart.
        This call returns an array of objects, but detailed information about each
        object’s attributes might not be included.  See http://devdocs.magento.com/codelinks/attributes.html#PaymentMethodManagementInterface
        to determine which call to use to get detailed information about all attributes
        for an object.
      operationId: listAvailablePaymentMethodsForShoppingCart
      parameters:
      - name: cartId
        in: path
        description: The cart ID.
        required: true
        schema:
          type: integer
      responses:
        200:
          description: 200 Success.
          content:
            application/json:
              schema:
                type: array
                description: Array of payment methods.
                items:
                  $ref: '#/components/schemas/quote-data-payment-method-interface'
            application/xml:
              schema:
                type: array
                description: Array of payment methods.
                items:
                  $ref: '#/components/schemas/quote-data-payment-method-interface'
        400:
          description: 400 Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        401:
          description: 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
  /V1/carts/{cartId}/selected-payment-method:
    get:
      tags:
      - carts/{cartId}/selected-payment-method
      summary: Returns the payment method for a specified shopping cart
      description: Returns the payment method for a specified shopping cart.
      operationId: getPaymentMethodForSpecifiedShoppingCartByID
      parameters:
      - name: cartId
        in: path
        description: The cart ID.
        required: true
        schema:
          type: integer
      responses:
        200:
          description: 200 Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/quote-data-payment-interface'
            application/xml:
              schema:
                $ref: '#/components/schemas/quote-data-payment-interface'
        400:
          description: 400 Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        401:
          description: 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
    put:
      tags:
      - carts/{cartId}/selected-payment-method
      summary: Adds a specified payment method to a specified shopping cart
      description: Adds a specified payment method to a specified shopping cart.
      operationId: addSpecifiedPaymentMethodToSpecifiedShoppingCart
      parameters:
      - name: cartId
        in: path
        description: The cart ID.
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              required:
              - method
              type: object
              properties:
                method:
                  $ref: '#/components/schemas/quote-data-payment-interface'
              xml:
                name: request
          application/xml:
            schema:
              required:
              - method
              type: object
              properties:
                method:
                  $ref: '#/components/schemas/quote-data-payment-interface'
              xml:
                name: request
        required: false
      responses:
        200:
          description: 200 Success.
          content:
            application/json:
              schema:
                type: string
                description: redirect url or error message.
            application/xml:
              schema:
                type: string
                description: redirect url or error message.
        400:
          description: 400 Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        401:
          description: 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
      x-codegen-request-body-name: quotePaymentMethodManagementV1SetPutBody
  /V1/carts/{cartId}/shipping-information:
    post:
      tags:
      - carts/{cartId}/shipping-information
      summary: checks out Shipping Information By ID
      operationId: checkoutShippingInformationByID
      parameters:
      - name: cartId
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              required:
              - addressInformation
              type: object
              properties:
                addressInformation:
                  $ref: '#/components/schemas/checkout-data-shipping-information-interface'
              xml:
                name: request
          application/xml:
            schema:
              required:
              - addressInformation
              type: object
              properties:
                addressInformation:
                  $ref: '#/components/schemas/checkout-data-shipping-information-interface'
              xml:
                name: request
        required: false
      responses:
        200:
          description: 200 Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/checkout-data-payment-details-interface'
            application/xml:
              schema:
                $ref: '#/components/schemas/checkout-data-payment-details-interface'
        401:
          description: 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
      x-codegen-request-body-name: checkoutShippingInformationManagementV1SaveAddressInformationPostBody
  /V1/carts/{cartId}/shipping-methods:
    get:
      tags:
      - carts/{cartId}/shipping-methods
      summary: Lists applicable shipping methods for a specified quote
      description: Lists applicable shipping methods for a specified quote.
      operationId: getApplicableShippingMethodsForSpecifiedQuote
      parameters:
      - name: cartId
        in: path
        description: The shopping cart ID.
        required: true
        schema:
          type: integer
      responses:
        200:
          description: 200 Success.
          content:
            application/json:
              schema:
                type: array
                description: An array of shipping methods.
                items:
                  $ref: '#/components/schemas/quote-data-shipping-method-interface'
            application/xml:
              schema:
                type: array
                description: An array of shipping methods.
                items:
                  $ref: '#/components/schemas/quote-data-shipping-method-interface'
        400:
          description: 400 Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        401:
          description: 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
  /V1/carts/{cartId}/totals:
    get:
      tags:
      - carts/{cartId}/totals
      summary: Returns quote totals data for a specified cart
      description: Returns quote totals data for a specified cart.
      operationId: getQuoteTotalsDataForASpecifiedCart
      parameters:
      - name: cartId
        in: path
        description: The cart ID.
        required: true
        schema:
          type: integer
      responses:
        200:
          description: 200 Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/quote-data-totals-interface'
            application/xml:
              schema:
                $ref: '#/components/schemas/quote-data-totals-interface'
        400:
          description: 400 Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        401:
          description: 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
  /V1/carts/{cartId}/totals-information:
    post:
      tags:
      - carts/{cartId}/totals-information
      summary: Calculates quote totals based on address and shipping method
      description: Calculate quote totals based on address and shipping method.
      operationId: checkoutTotalsBasedOnAddressAndShippingMethod
      parameters:
      - name: cartId
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              required:
              - addressInformation
              type: object
              properties:
                addressInformation:
                  $ref: '#/components/schemas/checkout-data-totals-information-interface'
              xml:
                name: request
          application/xml:
            schema:
              required:
              - addressInformation
              type: object
              properties:
                addressInformation:
                  $ref: '#/components/schemas/checkout-data-totals-information-interface'
              xml:
                name: request
        required: false
      responses:
        200:
          description: 200 Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/quote-data-totals-interface'
            application/xml:
              schema:
                $ref: '#/components/schemas/quote-data-totals-interface'
        401:
          description: 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
      x-codegen-request-body-name: checkoutTotalsInformationManagementV1CalculatePostBody
  /V1/carts/{quoteId}/giftCards:
    get:
      tags:
      - carts/{quoteId}/giftCards
      summary: Returns GiftCard Account cards
      description: Return GiftCard Account cards
      operationId: getGiftCardsByQuoteID
      parameters:
      - name: quoteId
        in: path
        required: true
        schema:
          type: integer
      responses:
        200:
          description: 200 Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/gift-card-account-data-gift-card-account-interface'
            application/xml:
              schema:
                $ref: '#/components/schemas/gift-card-account-data-gift-card-account-interface'
        401:
          description: 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
  /V1/carts/{quoteId}/items:
    post:
      tags:
      - carts/{quoteId}/items
      summary: Adds/updates the specified cart item
      description: Add/update the specified cart item.
      operationId: addOrUpdateTheSpecifiedCartItem
      parameters:
      - name: quoteId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
              - cartItem
              type: object
              properties:
                cartItem:
                  $ref: '#/components/schemas/quote-data-cart-item-interface'
              xml:
                name: request
          application/xml:
            schema:
              required:
              - cartItem
              type: object
              properties:
                cartItem:
                  $ref: '#/components/schemas/quote-data-cart-item-interface'
              xml:
                name: request
        required: false
      responses:
        200:
          description: 200 Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/quote-data-cart-item-interface'
            application/xml:
              schema:
                $ref: '#/components/schemas/quote-data-cart-item-interface'
        400:
          description: 400 Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        401:
          description: 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-response'
            application/xml:
              schema:
                $ref: '#/components/schemas/error-response'
      x-codegen-request-body-name: quoteCartItemRepositoryV1SavePostBody
components:
  securitySchemes:
    bearerAuth:            # arbitrary name for the security scheme
      type: http
      scheme: bearer
  schemas:
    error-response:
      required:
      - message
      type: object
      properties:
        message:
          type: string
          description: Error message
        errors:
          $ref: '#/components/schemas/error-errors'
        code:
          type: integer
          description: Error code
        parameters:
          $ref: '#/components/schemas/error-parameters'
        trace:
          type: string
          description: Stack trace
    error-errors:
      type: array
      description: Errors list
      items:
        $ref: '#/components/schemas/error-errors-item'
    error-errors-item:
      type: object
      properties:
        message:
          type: string
          description: Error message
        parameters:
          $ref: '#/components/schemas/error-parameters'
      description: Error details
    error-parameters:
      type: array
      description: Error parameters list
      items:
        $ref: '#/components/schemas/error-parameters-item'
    error-parameters-item:
      type: object
      properties:
        resources:
          type: string
          description: ACL resource
        fieldName:
          type: string
          description: Missing or invalid field name
        fieldValue:
          type: string
          description: Incorrect field value
      description: Error parameters item
    framework-search-criteria-interface:
      required:
      - filter_groups
      type: object
      properties:
        filter_groups:
          type: array
          description: A list of filter groups.
          items:
            $ref: '#/components/schemas/framework-search-filter-group'
        sort_orders:
          type: array
          description: Sort order.
          items:
            $ref: '#/components/schemas/framework-sort-order'
        page_size:
          type: integer
          description: Page size.
        current_page:
          type: integer
          description: Current page.
      description: Search criteria interface.
    framework-search-filter-group:
      type: object
      properties:
        filters:
          type: array
          description: A list of filters in this group
          items:
            $ref: '#/components/schemas/framework-filter'
      description: Groups two or more filters together using a logical OR
    framework-filter:
      required:
      - field
      - value
      type: object
      properties:
        field:
          type: string
          description: Field
        value:
          type: string
          description: Value
        condition_type:
          type: string
          description: Condition type
      description: Filter which can be used by any methods from service layer.
    framework-sort-order:
      required:
      - direction
      - field
      type: object
      properties:
        field:
          type: string
          description: Sorting field.
        direction:
          type: string
          description: Sorting direction.
      description: Data object for sort order.
    customer-data-option-interface:
      required:
      - label
      type: object
      properties:
        label:
          type: string
          description: Option label
        value:
          type: string
          description: Option value
        options:
          type: array
          description: Nested options
          items:
            $ref: '#/components/schemas/customer-data-option-interface'
      description: Option interface.
    customer-data-customer-interface:
      required:
      - email
      - firstname
      - lastname
      type: object
      properties:
        id:
          type: integer
          description: Customer id
        group_id:
          type: integer
          description: Group id
        default_billing:
          type: string
          description: Default billing address id
        default_shipping:
          type: string
          description: Default shipping address id
        confirmation:
          type: string
          description: Confirmation
        created_at:
          type: string
          description: Created at time
        updated_at:
          type: string
          description: Updated at time
        created_in:
          type: string
          description: Created in area
        dob:
          type: string
          description: Date of birth
        email:
          type: string
          description: Email address
        firstname:
          type: string
          description: First name
        lastname:
          type: string
          description: Last name
        middlename:
          type: string
          description: Middle name
        prefix:
          type: string
          description: Prefix
        suffix:
          type: string
          description: Suffix
        gender:
          type: integer
          description: Gender
        store_id:
          type: integer
          description: Store id
        taxvat:
          type: string
          description: Tax Vat
        website_id:
          type: integer
          description: Website id
        addresses:
          type: array
          description: Customer addresses.
          items:
            $ref: '#/components/schemas/customer-data-address-interface'
        disable_auto_group_change:
          type: integer
          description: Disable auto group change flag.
        extension_attributes:
          $ref: '#/components/schemas/customer-data-customer-extension-interface'
        custom_attributes:
          type: array
          description: Custom attributes values.
          items:
            $ref: '#/components/schemas/framework-attribute-interface'
      description: Customer interface.
    customer-data-address-interface:
      type: object
      properties:
        id:
          type: integer
          description: ID
        customer_id:
          type: integer
          description: Customer ID
        region:
          $ref: '#/components/schemas/customer-data-region-interface'
        region_id:
          type: integer
          description: Region ID
        country_id:
          type: string
          description: Country code in ISO_3166-2 format
        street:
          type: array
          description: Street
          items:
            type: string
        company:
          type: string
          description: Company
        telephone:
          type: string
          description: Telephone number
        fax:
          type: string
          description: Fax number
        postcode:
          type: string
          description: Postcode
        city:
          type: string
          description: City name
        firstname:
          type: string
          description: First name
        lastname:
          type: string
          description: Last name
        middlename:
          type: string
          description: Middle name
        prefix:
          type: string
          description: Prefix
        suffix:
          type: string
          description: Suffix
        vat_id:
          type: string
          description: Vat id
        default_shipping:
          type: boolean
          description: If this address is default shipping address.
        default_billing:
          type: boolean
          description: If this address is default billing address
        extension_attributes:
          $ref: '#/components/schemas/customer-data-address-extension-interface'
        custom_attributes:
          type: array
          description: Custom attributes values.
          items:
            $ref: '#/components/schemas/framework-attribute-interface'
      description: Customer address interface.
    customer-data-region-interface:
      required:
      - region
      - region_code
      - region_id
      type: object
      properties:
        region_code:
          type: string
          description: Region code
        region:
          type: string
          description: Region
        region_id:
          type: integer
          description: Region id
        extension_attributes:
          $ref: '#/components/schemas/customer-data-region-extension-interface'
      description: Customer address region interface.
    customer-data-region-extension-interface:
      type: object
      description: ExtensionInterface class for @see \Magento\Customer\Api\Data\RegionInterface
    customer-data-address-extension-interface:
      type: object
      description: ExtensionInterface class for @see \Magento\Customer\Api\Data\AddressInterface
    framework-attribute-interface:
      required:
      - attribute_code
      - value
      type: object
      properties:
        attribute_code:
          type: string
          description: Attribute code
        value:
          type: string
          description: Attribute value
      description: Interface for custom attribute value.
    customer-data-customer-extension-interface:
      type: object
      properties:
        company_attributes:
          $ref: '#/components/schemas/company-data-company-customer-interface'
        is_subscribed:
          type: boolean
        amazon_id:
          type: string
        vertex_customer_code:
          type: string
      description: ExtensionInterface class for @see \Magento\Customer\Api\Data\CustomerInterface
    company-data-company-customer-interface:
      type: object
      properties:
        customer_id:
          type: integer
          description: Customer ID.
        company_id:
          type: integer
          description: Company ID.
        job_title:
          type: string
          description: Get job title.
        status:
          type: integer
          description: Customer status.
        telephone:
          type: string
          description: Get telephone.
        extension_attributes:
          $ref: '#/components/schemas/company-data-company-customer-extension-interface'
      description: Extended customer custom attributes interface.
    company-data-company-customer-extension-interface:
      type: object
      description: ExtensionInterface class for @see \Magento\Company\Api\Data\CompanyCustomerInterface
    framework-data-image-content-interface:
      required:
      - base64_encoded_data
      - name
      - type
      type: object
      properties:
        base64_encoded_data:
          type: string
          description: Media data (base64 encoded content)
        type:
          type: string
          description: MIME type
        name:
          type: string
          description: Image name
      description: Image Content data interface
    quote-data-cart-interface:
      required:
      - customer
      - id
      - store_id
      type: object
      properties:
        id:
          type: integer
          description: Cart/quote ID.
        created_at:
          type: string
          description: Cart creation date and time. Otherwise, null.
        updated_at:
          type: string
          description: Cart last update date and time. Otherwise, null.
        converted_at:
          type: string
          description: Cart conversion date and time. Otherwise, null.
        is_active:
          type: boolean
          description: Active status flag value. Otherwise, null.
        is_virtual:
          type: boolean
          description: Virtual flag value. Otherwise, null.
        items:
          type: array
          description: Array of items. Otherwise, null.
          items:
            $ref: '#/components/schemas/quote-data-cart-item-interface'
        items_count:
          type: integer
          description: Number of different items or products in the cart. Otherwise,
            null.
        items_qty:
          type: number
          description: Total quantity of all cart items. Otherwise, null.
        customer:
          $ref: '#/components/schemas/customer-data-customer-interface'
        billing_address:
          $ref: '#/components/schemas/quote-data-address-interface'
        reserved_order_id:
          type: string
          description: Reserved order ID. Otherwise, null.
        orig_order_id:
          type: integer
          description: Original order ID. Otherwise, null.
        currency:
          $ref: '#/components/schemas/quote-data-currency-interface'
        customer_is_guest:
          type: boolean
          description: For guest customers, false for logged in customers
        customer_note:
          type: string
          description: Notice text
        customer_note_notify:
          type: boolean
          description: Customer notification flag
        customer_tax_class_id:
          type: integer
          description: Customer tax class ID.
        store_id:
          type: integer
          description: Store identifier
        extension_attributes:
          $ref: '#/components/schemas/quote-data-cart-extension-interface'
      description: Interface CartInterface
    quote-data-cart-item-interface:
      required:
      - qty
      - quote_id
      type: object
      properties:
        item_id:
          type: integer
          description: Item ID. Otherwise, null.
        sku:
          type: string
          description: Product SKU. Otherwise, null.
        qty:
          type: number
          description: Product quantity.
        name:
          type: string
          description: Product name. Otherwise, null.
        price:
          type: number
          description: Product price. Otherwise, null.
        product_type:
          type: string
          description: Product type. Otherwise, null.
        quote_id:
          type: string
          description: Quote id.
        product_option:
          $ref: '#/components/schemas/quote-data-product-option-interface'
        extension_attributes:
          $ref: '#/components/schemas/quote-data-cart-item-extension-interface'
      description: Interface CartItemInterface
    quote-data-product-option-interface:
      type: object
      properties:
        extension_attributes:
          $ref: '#/components/schemas/quote-data-product-option-extension-interface'
      description: Product option interface
    quote-data-product-option-extension-interface:
      type: object
      properties:
        custom_options:
          type: array
          items:
            $ref: '#/components/schemas/catalog-data-custom-option-interface'
        bundle_options:
          type: array
          items:
            $ref: '#/components/schemas/bundle-data-bundle-option-interface'
        configurable_item_options:
          type: array
          items:
            $ref: '#/components/schemas/configurable-product-data-configurable-item-option-value-interface'
        downloadable_option:
          $ref: '#/components/schemas/downloadable-data-downloadable-option-interface'
        giftcard_item_option:
          $ref: '#/components/schemas/gift-card-data-gift-card-option-interface'
      description: ExtensionInterface class for @see \Magento\Quote\Api\Data\ProductOptionInterface
    catalog-data-custom-option-interface:
      required:
      - option_id
      - option_value
      type: object
      properties:
        option_id:
          type: string
          description: Option id
        option_value:
          type: string
          description: Option value
        extension_attributes:
          $ref: '#/components/schemas/catalog-data-custom-option-extension-interface'
      description: Interface CustomOptionInterface
    catalog-data-custom-option-extension-interface:
      type: object
      properties:
        file_info:
          $ref: '#/components/schemas/framework-data-image-content-interface'
      description: ExtensionInterface class for @see \Magento\Catalog\Api\Data\CustomOptionInterface
    bundle-data-bundle-option-interface:
      required:
      - option_id
      - option_qty
      - option_selections
      type: object
      properties:
        option_id:
          type: integer
          description: Bundle option id.
        option_qty:
          type: integer
          description: Bundle option quantity.
        option_selections:
          type: array
          description: Bundle option selection ids.
          items:
            type: integer
        extension_attributes:
          $ref: '#/components/schemas/bundle-data-bundle-option-extension-interface'
      description: Interface BundleOptionInterface
    bundle-data-bundle-option-extension-interface:
      type: object
      description: ExtensionInterface class for @see \Magento\Bundle\Api\Data\BundleOptionInterface
    configurable-product-data-configurable-item-option-value-interface:
      required:
      - option_id
      type: object
      properties:
        option_id:
          type: string
          description: Option SKU
        option_value:
          type: integer
          description: Item id
        extension_attributes:
          $ref: '#/components/schemas/configurable-product-data-configurable-item-option-value-extension-interface'
      description: Interface ConfigurableItemOptionValueInterface
    configurable-product-data-configurable-item-option-value-extension-interface:
      type: object
      description: ExtensionInterface class for @see \Magento\ConfigurableProduct\Api\Data\ConfigurableItemOptionValueInterface
    downloadable-data-downloadable-option-interface:
      required:
      - downloadable_links
      type: object
      properties:
        downloadable_links:
          type: array
          description: The list of downloadable links
          items:
            type: integer
      description: Downloadable Option
    gift-card-data-gift-card-option-interface:
      required:
      - giftcard_amount
      - giftcard_recipient_email
      - giftcard_recipient_name
      - giftcard_sender_email
      - giftcard_sender_name
      type: object
      properties:
        giftcard_amount:
          type: string
          description: Gift card amount.
        custom_giftcard_amount:
          type: number
          description: Gift card open amount value.
        giftcard_sender_name:
          type: string
          description: Gift card sender name.
        giftcard_recipient_name:
          type: string
          description: Gift card recipient name.
        giftcard_sender_email:
          type: string
          description: Gift card sender email.
        giftcard_recipient_email:
          type: string
          description: Gift card recipient email.
        giftcard_message:
          type: string
          description: Giftcard message.
        extension_attributes:
          $ref: '#/components/schemas/gift-card-data-gift-card-option-extension-interface'
      description: Interface GiftCardOptionInterface
    gift-card-data-gift-card-option-extension-interface:
      type: object
      description: ExtensionInterface class for @see \Magento\GiftCard\Api\Data\GiftCardOptionInterface 
    quote-data-cart-item-extension-interface:
      type: object
      properties:
        negotiable_quote_item:
          $ref: '#/components/schemas/negotiable-quote-data-negotiable-quote-item-interface'
      description: ExtensionInterface class for @see \Magento\Quote\Api\Data\CartItemInterface
    negotiable-quote-data-negotiable-quote-item-interface:
      required:
      - item_id
      - original_discount_amount
      - original_price
      - original_tax_amount
      type: object
      properties:
        item_id:
          type: integer
          description: Quote item id
        original_price:
          type: number
          description: Quote item original price
        original_tax_amount:
          type: number
          description: Quote item original tax amount
        original_discount_amount:
          type: number
          description: Quote item original discount amount
        extension_attributes:
          $ref: '#/components/schemas/negotiable-quote-data-negotiable-quote-item-extension-interface'
      description: Interface CompanyQuoteConfigInterface
    negotiable-quote-data-negotiable-quote-item-extension-interface:
      type: object
      description: ExtensionInterface class for @see \Magento\NegotiableQuote\Api\Data\NegotiableQuoteItemInterface
    quote-data-address-interface:
      required:
      - city
      - country_id
      - email
      - firstname
      - lastname
      - postcode
      - region
      - region_code
      - region_id
      - street
      - telephone
      type: object
      properties:
        id:
          type: integer
          description: Id
        region:
          type: string
          description: Region name
        region_id:
          type: integer
          description: Region id
        region_code:
          type: string
          description: Region code
        country_id:
          type: string
          description: Country id
        street:
          type: array
          description: Street
          items:
            type: string
        company:
          type: string
          description: Company
        telephone:
          type: string
          description: Telephone number
        fax:
          type: string
          description: Fax number
        postcode:
          type: string
          description: Postcode
        city:
          type: string
          description: City name
        firstname:
          type: string
          description: First name
        lastname:
          type: string
          description: Last name
        middlename:
          type: string
          description: Middle name
        prefix:
          type: string
          description: Prefix
        suffix:
          type: string
          description: Suffix
        vat_id:
          type: string
          description: Vat id
        customer_id:
          type: integer
          description: Customer id
        email:
          type: string
          description: Billing/shipping email
        same_as_billing:
          type: integer
          description: Same as billing flag
        customer_address_id:
          type: integer
          description: Customer address id
        save_in_address_book:
          type: integer
          description: Save in address book flag
        extension_attributes:
          $ref: '#/components/schemas/quote-data-address-extension-interface'
        custom_attributes:
          type: array
          description: Custom attributes values.
          items:
            $ref: '#/components/schemas/framework-attribute-interface'
      description: Interface AddressInterface
    quote-data-address-extension-interface:
      type: object
      properties:
        gift_registry_id:
          type: integer
        checkout_fields:
          type: array
          items:
            $ref: '#/components/schemas/framework-attribute-interface'
      description: ExtensionInterface class for @see \Magento\Quote\Api\Data\AddressInterface
    quote-data-currency-interface:
      type: object
      properties:
        global_currency_code:
          type: string
          description: Global currency code
        base_currency_code:
          type: string
          description: Base currency code
        store_currency_code:
          type: string
          description: Store currency code
        quote_currency_code:
          type: string
          description: Quote currency code
        store_to_base_rate:
          type: number
          description: Store currency to base currency rate
        store_to_quote_rate:
          type: number
          description: Store currency to quote currency rate
        base_to_global_rate:
          type: number
          description: Base currency to global currency rate
        base_to_quote_rate:
          type: number
          description: Base currency to quote currency rate
        extension_attributes:
          $ref: '#/components/schemas/quote-data-currency-extension-interface'
      description: Interface CurrencyInterface
    quote-data-currency-extension-interface:
      type: object
      description: ExtensionInterface class for @see \Magento\Quote\Api\Data\CurrencyInterface
    quote-data-cart-extension-interface:
      type: object
      properties:
        shipping_assignments:
          type: array
          items:
            $ref: '#/components/schemas/quote-data-shipping-assignment-interface'
        negotiable_quote:
          $ref: '#/components/schemas/negotiable-quote-data-negotiable-quote-interface'
        amazon_order_reference_id:
          type: string
      description: ExtensionInterface class for @see \Magento\Quote\Api\Data\CartInterface
    quote-data-shipping-assignment-interface:
      required:
      - items
      - shipping
      type: object
      properties:
        shipping:
          $ref: '#/components/schemas/quote-data-shipping-interface'
        items:
          type: array
          items:
            $ref: '#/components/schemas/quote-data-cart-item-interface'
        extension_attributes:
          $ref: '#/components/schemas/quote-data-shipping-assignment-extension-interface'
      description: Interface ShippingAssignmentInterface
    quote-data-shipping-interface:
      required:
      - address
      - method
      type: object
      properties:
        address:
          $ref: '#/components/schemas/quote-data-address-interface'
        method:
          type: string
          description: Shipping method
        extension_attributes:
          $ref: '#/components/schemas/quote-data-shipping-extension-interface'
      description: Interface ShippingInterface
    quote-data-shipping-extension-interface:
      type: object
      description: ExtensionInterface class for @see \Magento\Quote\Api\Data\ShippingInterface
    quote-data-shipping-assignment-extension-interface:
      type: object
      description: ExtensionInterface class for @see \Magento\Quote\Api\Data\ShippingAssignmentInterface
    negotiable-quote-data-negotiable-quote-interface:
      required:
      - applied_rule_ids
      - creator_id
      - creator_type
      - deleted_sku
      - email_notification_status
      - expiration_period
      - has_unconfirmed_changes
      - is_address_draft
      - is_customer_price_changed
      - is_regular_quote
      - is_shipping_tax_changed
      - negotiated_price_type
      - negotiated_price_value
      - notifications
      - quote_id
      - quote_name
      - shipping_price
      - status
      type: object
      properties:
        quote_id:
          type: integer
          description: Negotiable quote ID.
        is_regular_quote:
          type: boolean
          description: Is regular quote.
        status:
          type: string
          description: Negotiable quote status.
        negotiated_price_type:
          type: integer
          description: Negotiated price type.
        negotiated_price_value:
          type: number
          description: Negotiated price value.
        shipping_price:
          type: number
          description: Proposed shipping price.
        quote_name:
          type: string
          description: Negotiable quote name.
        expiration_period:
          type: string
          description: Expiration period.
        email_notification_status:
          type: integer
          description: Email notification status.
        has_unconfirmed_changes:
          type: boolean
          description: Has unconfirmed changes.
        is_shipping_tax_changed:
          type: boolean
          description: Shipping tax changes.
        is_customer_price_changed:
          type: boolean
          description: Customer price changes.
        notifications:
          type: integer
          description: Quote notifications.
        applied_rule_ids:
          type: string
          description: Quote rules.
        is_address_draft:
          type: boolean
          description: Is address draft.
        deleted_sku:
          type: string
          description: Deleted products sku.
        creator_id:
          type: integer
          description: Quote creator id.
        creator_type:
          type: integer
          description: Quote creator type.
        original_total_price:
          type: number
          description: Quote original total price.
        base_original_total_price:
          type: number
          description: Quote original total price in base currency.
        negotiated_total_price:
          type: number
          description: Quote negotiated total price.
        base_negotiated_total_price:
          type: number
          description: Quote negotiated total price in base currency.
        extension_attributes:
          $ref: '#/components/schemas/negotiable-quote-data-negotiable-quote-extension-interface'
      description: Interface NegotiableQuoteInterface
    negotiable-quote-data-negotiable-quote-extension-interface:
      type: object
      description: ExtensionInterface class for @see \Magento\NegotiableQuote\Api\Data\NegotiableQuoteInterface
    quote-data-cart-search-results-interface:
      required:
      - items
      - search_criteria
      - total_count
      type: object
      properties:
        items:
          type: array
          description: Carts list.
          items:
            $ref: '#/components/schemas/quote-data-cart-interface'
        search_criteria:
          $ref: '#/components/schemas/framework-search-criteria-interface'
        total_count:
          type: integer
          description: Total count.
      description: Interface CartSearchResultsInterface
    quote-data-payment-interface:
      required:
      - method
      type: object
      properties:
        po_number:
          type: string
          description: Purchase order number
        method:
          type: string
          description: Payment method code
        additional_data:
          type: array
          description: Payment additional details
          items:
            type: string
        extension_attributes:
          $ref: '#/components/schemas/quote-data-payment-extension-interface'
      description: Interface PaymentInterface
    quote-data-payment-extension-interface:
      type: object
      properties:
        agreement_ids:
          type: array
          items:
            type: string
      description: ExtensionInterface class for @see \Magento\Quote\Api\Data\PaymentInterface
    quote-data-shipping-method-interface:
      required:
      - amount
      - available
      - base_amount
      - carrier_code
      - error_message
      - method_code
      - price_excl_tax
      - price_incl_tax
      type: object
      properties:
        carrier_code:
          type: string
          description: Shipping carrier code.
        method_code:
          type: string
          description: Shipping method code.
        carrier_title:
          type: string
          description: Shipping carrier title. Otherwise, null.
        method_title:
          type: string
          description: Shipping method title. Otherwise, null.
        amount:
          type: number
          description: Shipping amount in store currency.
        base_amount:
          type: number
          description: Shipping amount in base currency.
        available:
          type: boolean
          description: The value of the availability flag for the current shipping
            method.
        extension_attributes:
          $ref: '#/components/schemas/quote-data-shipping-method-extension-interface'
        error_message:
          type: string
          description: Shipping Error message.
        price_excl_tax:
          type: number
          description: Shipping price excl tax.
        price_incl_tax:
          type: number
          description: Shipping price incl tax.
      description: Interface ShippingMethodInterface
    quote-data-shipping-method-extension-interface:
      type: object
      description: ExtensionInterface class for @see \Magento\Quote\Api\Data\ShippingMethodInterface
    quote-data-payment-method-interface:
      required:
      - code
      - title
      type: object
      properties:
        code:
          type: string
          description: Payment method code
        title:
          type: string
          description: Payment method title
      description: Interface PaymentMethodInterface
    quote-data-totals-interface:
      required:
      - total_segments
      - weee_tax_applied_amount
      type: object
      properties:
        grand_total:
          type: number
          description: Grand total in quote currency
        base_grand_total:
          type: number
          description: Grand total in base currency
        subtotal:
          type: number
          description: Subtotal in quote currency
        base_subtotal:
          type: number
          description: Subtotal in base currency
        discount_amount:
          type: number
          description: Discount amount in quote currency
        base_discount_amount:
          type: number
          description: Discount amount in base currency
        subtotal_with_discount:
          type: number
          description: Subtotal in quote currency with applied discount
        base_subtotal_with_discount:
          type: number
          description: Subtotal in base currency with applied discount
        shipping_amount:
          type: number
          description: Shipping amount in quote currency
        base_shipping_amount:
          type: number
          description: Shipping amount in base currency
        shipping_discount_amount:
          type: number
          description: Shipping discount amount in quote currency
        base_shipping_discount_amount:
          type: number
          description: Shipping discount amount in base currency
        tax_amount:
          type: number
          description: Tax amount in quote currency
        base_tax_amount:
          type: number
          description: Tax amount in base currency
        weee_tax_applied_amount:
          type: number
          description: Item weee tax applied amount in quote currency.
        shipping_tax_amount:
          type: number
          description: Shipping tax amount in quote currency
        base_shipping_tax_amount:
          type: number
          description: Shipping tax amount in base currency
        subtotal_incl_tax:
          type: number
          description: Subtotal including tax in quote currency
        base_subtotal_incl_tax:
          type: number
          description: Subtotal including tax in base currency
        shipping_incl_tax:
          type: number
          description: Shipping including tax in quote currency
        base_shipping_incl_tax:
          type: number
          description: Shipping including tax in base currency
        base_currency_code:
          type: string
          description: Base currency code
        quote_currency_code:
          type: string
          description: Quote currency code
        coupon_code:
          type: string
          description: Applied coupon code
        items_qty:
          type: integer
          description: Items qty
        items:
          type: array
          description: Totals by items
          items:
            $ref: '#/components/schemas/quote-data-totals-item-interface'
        total_segments:
          type: array
          description: Dynamically calculated totals
          items:
            $ref: '#/components/schemas/quote-data-total-segment-interface'
        extension_attributes:
          $ref: '#/components/schemas/quote-data-totals-extension-interface'
      description: Interface TotalsInterface
    quote-data-totals-item-interface:
      required:
      - base_price
      - base_row_total
      - item_id
      - options
      - price
      - qty
      - row_total
      - weee_tax_applied
      - weee_tax_applied_amount
      type: object
      properties:
        item_id:
          type: integer
          description: Item id
        price:
          type: number
          description: Item price in quote currency.
        base_price:
          type: number
          description: Item price in base currency.
        qty:
          type: number
          description: Item quantity.
        row_total:
          type: number
          description: Row total in quote currency.
        base_row_total:
          type: number
          description: Row total in base currency.
        row_total_with_discount:
          type: number
          description: Row total with discount in quote currency. Otherwise, null.
        tax_amount:
          type: number
          description: Tax amount in quote currency. Otherwise, null.
        base_tax_amount:
          type: number
          description: Tax amount in base currency. Otherwise, null.
        tax_percent:
          type: number
          description: Tax percent. Otherwise, null.
        discount_amount:
          type: number
          description: Discount amount in quote currency. Otherwise, null.
        base_discount_amount:
          type: number
          description: Discount amount in base currency. Otherwise, null.
        discount_percent:
          type: number
          description: Discount percent. Otherwise, null.
        price_incl_tax:
          type: number
          description: Price including tax in quote currency. Otherwise, null.
        base_price_incl_tax:
          type: number
          description: Price including tax in base currency. Otherwise, null.
        row_total_incl_tax:
          type: number
          description: Row total including tax in quote currency. Otherwise, null.
        base_row_total_incl_tax:
          type: number
          description: Row total including tax in base currency. Otherwise, null.
        options:
          type: string
          description: Item price in quote currency.
        weee_tax_applied_amount:
          type: number
          description: Item weee tax applied amount in quote currency.
        weee_tax_applied:
          type: string
          description: Item weee tax applied in quote currency.
        extension_attributes:
          $ref: '#/components/schemas/quote-data-totals-item-extension-interface'
        name:
          type: string
          description: Product name. Otherwise, null.
      description: Interface TotalsItemInterface
    quote-data-totals-item-extension-interface:
      type: object
      properties:
        negotiable_quote_item_totals:
          $ref: '#/components/schemas/negotiable-quote-data-negotiable-quote-item-totals-interface'
      description: ExtensionInterface class for @see \Magento\Quote\Api\Data\TotalsItemInterface
    negotiable-quote-data-negotiable-quote-item-totals-interface:
      required:
      - base_cart_price
      - base_cart_price_incl_tax
      - base_cart_tax
      - base_catalog_price
      - base_catalog_price_incl_tax
      - cart_price
      - cart_price_incl_tax
      - cart_tax
      - catalog_price
      - catalog_price_incl_tax
      - cost
      type: object
      properties:
        cost:
          type: number
          description: Cost for quote item.
        catalog_price:
          type: number
          description: Catalog price for quote item.
        base_catalog_price:
          type: number
          description: Catalog price for quote item in base currency.
        catalog_price_incl_tax:
          type: number
          description: Catalog price with included tax for quote item.
        base_catalog_price_incl_tax:
          type: number
          description: Catalog price with included tax for quote item in base currency.
        cart_price:
          type: number
          description: Cart price for quote item.
        base_cart_price:
          type: number
          description: Cart price for quote item in base currency.
        cart_tax:
          type: number
          description: Tax from catalog price for quote item.
        base_cart_tax:
          type: number
          description: Tax from catalog price for quote item in base currency.
        cart_price_incl_tax:
          type: number
          description: Cart price with included tax for quote item.
        base_cart_price_incl_tax:
          type: number
          description: Cart price with included tax for quote item in base currency.
        extension_attributes:
          $ref: '#/components/schemas/negotiable-quote-data-negotiable-quote-item-totals-extension-interface'
      description: Extension attribute for quote item totals model.
    negotiable-quote-data-negotiable-quote-item-totals-extension-interface:
      type: object
      description: ExtensionInterface class for @see \Magento\NegotiableQuote\Api\Data\NegotiableQuoteItemTotalsInterface
    quote-data-total-segment-interface:
      required:
      - code
      - value
      type: object
      properties:
        code:
          type: string
          description: Code
        title:
          type: string
          description: Total title
        value:
          type: number
          description: Total value
        area:
          type: string
          description: Display area code.
        extension_attributes:
          $ref: '#/components/schemas/quote-data-total-segment-extension-interface'
      description: Interface TotalsInterface
    quote-data-total-segment-extension-interface:
      type: object
      properties:
        tax_grandtotal_details:
          type: array
          items:
            $ref: '#/components/schemas/tax-data-grand-total-details-interface'
        gift_cards:
          type: string
        gw_order_id:
          type: string
        gw_item_ids:
          type: array
          items:
            type: string
        gw_allow_gift_receipt:
          type: string
        gw_add_card:
          type: string
        gw_price:
          type: string
        gw_base_price:
          type: string
        gw_items_price:
          type: string
        gw_items_base_price:
          type: string
        gw_card_price:
          type: string
        gw_card_base_price:
          type: string
        gw_base_tax_amount:
          type: string
        gw_tax_amount:
          type: string
        gw_items_base_tax_amount:
          type: string
        gw_items_tax_amount:
          type: string
        gw_card_base_tax_amount:
          type: string
        gw_card_tax_amount:
          type: string
        gw_price_incl_tax:
          type: string
        gw_base_price_incl_tax:
          type: string
        gw_card_price_incl_tax:
          type: string
        gw_card_base_price_incl_tax:
          type: string
        gw_items_price_incl_tax:
          type: string
        gw_items_base_price_incl_tax:
          type: string
        vertex_tax_calculation_messages:
          type: array
          items:
            type: string
      description: ExtensionInterface class for @see \Magento\Quote\Api\Data\TotalSegmentInterface    
    tax-data-grand-total-details-interface:
      required:
      - amount
      - group_id
      - rates
      type: object
      properties:
        amount:
          type: number
          description: Tax amount value
        rates:
          type: array
          description: Tax rates info
          items:
            $ref: '#/components/schemas/tax-data-grand-total-rates-interface'
        group_id:
          type: integer
          description: Group identifier
      description: Interface GrandTotalDetailsInterface
    tax-data-grand-total-rates-interface:
      required:
      - percent
      - title
      type: object
      properties:
        percent:
          type: string
          description: Tax percentage value
        title:
          type: string
          description: Rate title
      description: Interface GrandTotalRatesInterface  
    quote-data-totals-extension-interface:
      type: object
      properties:
        coupon_label:
          type: string
        base_customer_balance_amount:
          type: number
        customer_balance_amount:
          type: number
        negotiable_quote_totals:
          $ref: '#/components/schemas/negotiable-quote-data-negotiable-quote-totals-interface'
        reward_points_balance:
          type: number
        reward_currency_amount:
          type: number
        base_reward_currency_amount:
          type: number
      description: ExtensionInterface class for @see \Magento\Quote\Api\Data\TotalsInterface
    negotiable-quote-data-negotiable-quote-totals-interface:
      required:
      - base_cost_total
      - base_original_price_incl_tax
      - base_original_tax
      - base_original_total
      - base_to_quote_rate
      - cost_total
      - created_at
      - customer_group
      - items_count
      - negotiated_price_type
      - negotiated_price_value
      - original_price_incl_tax
      - original_tax
      - original_total
      - quote_status
      - updated_at
      type: object
      properties:
        items_count:
          type: integer
          description: The number of different items or products in the cart.
        quote_status:
          type: string
          description: Negotiable quote status.
        created_at:
          type: string
          description: The cart creation date and time.
        updated_at:
          type: string
          description: The cart last update date and time.
        customer_group:
          type: integer
          description: Customer group id.
        base_to_quote_rate:
          type: number
          description: Base currency to quote currency rate.
        cost_total:
          type: number
          description: Total cost for quote.
        base_cost_total:
          type: number
          description: Total cost for quote in base currency.
        original_total:
          type: number
          description: Original quote total.
        base_original_total:
          type: number
          description: Original quote total in base currency.
        original_tax:
          type: number
          description: Original tax amount for quote.
        base_original_tax:
          type: number
          description: Original tax amount for quote in base currency.
        original_price_incl_tax:
          type: number
          description: Original price with included tax for quote.
        base_original_price_incl_tax:
          type: number
          description: Original price with included tax for quote in base currency.
        negotiated_price_type:
          type: integer
          description: Negotiable quote type.
        negotiated_price_value:
          type: number
          description: Negotiable price value for quote.
      description: Extension attribute for quote totals model.
    quote-data-totals-additional-data-interface:
      type: object
      properties:
        extension_attributes:
          $ref: '#/components/schemas/quote-data-totals-additional-data-extension-interface'
        custom_attributes:
          type: array
          description: Custom attributes values.
          items:
            $ref: '#/components/schemas/framework-attribute-interface'
      description: Additional data for totals collection.
    quote-data-totals-additional-data-extension-interface:
      type: object
      properties:
        gift_messages:
          type: array
          items:
            $ref: '#/components/schemas/gift-message-data-message-interface'
      description: ExtensionInterface class for @see \Magento\Quote\Api\Data\TotalsAdditionalDataInterface
    gift-message-data-message-interface:
      required:
      - message
      - recipient
      - sender
      type: object
      properties:
        gift_message_id:
          type: integer
          description: Gift message ID. Otherwise, null.
        customer_id:
          type: integer
          description: Customer ID. Otherwise, null.
        sender:
          type: string
          description: Sender name.
        recipient:
          type: string
          description: Recipient name.
        message:
          type: string
          description: Message text.
        extension_attributes:
          $ref: '#/components/schemas/gift-message-data-message-extension-interface'
      description: Interface MessageInterface
    gift-message-data-message-extension-interface:
      type: object
      properties:
        entity_id:
          type: string
        entity_type:
          type: string
        wrapping_id:
          type: integer
        wrapping_allow_gift_receipt:
          type: boolean
        wrapping_add_printed_card:
          type: boolean
      description: ExtensionInterface class for @see \Magento\GiftMessage\Api\Data\MessageInterface
    framework-criteria-interface:
      required:
      - criteria_list
      - filters
      - limit
      - mapper_interface_name
      - orders
      type: object
      properties:
        mapper_interface_name:
          type: string
          description: Associated Mapper Interface name
        criteria_list:
          type: array
          description: Criteria objects added to current Composite Criteria
          items:
            $ref: '#/components/schemas/framework-criteria-interface'
        filters:
          type: array
          description: List of filters
          items:
            type: string
        orders:
          type: array
          description: Ordering criteria
          items:
            type: string
        limit:
          type: array
          description: Limit
          items:
            type: string
      description: Interface CriteriaInterface
    checkout-data-shipping-information-interface:
      required:
      - shipping_address
      - shipping_carrier_code
      - shipping_method_code
      type: object
      properties:
        shipping_address:
          $ref: '#/components/schemas/quote-data-address-interface'
        billing_address:
          $ref: '#/components/schemas/quote-data-address-interface'
        shipping_method_code:
          type: string
          description: Shipping method code
        shipping_carrier_code:
          type: string
          description: Carrier code
        extension_attributes:
          $ref: '#/components/schemas/checkout-data-shipping-information-extension-interface'
        custom_attributes:
          type: array
          description: Custom attributes values.
          items:
            $ref: '#/components/schemas/framework-attribute-interface'
      description: Interface ShippingInformationInterface
    checkout-data-shipping-information-extension-interface:
      type: object
      description: ExtensionInterface class for @see \Magento\Checkout\Api\Data\ShippingInformationInterface
    checkout-data-payment-details-interface:
      required:
      - payment_methods
      - totals
      type: object
      properties:
        payment_methods:
          type: array
          items:
            $ref: '#/components/schemas/quote-data-payment-method-interface'
        totals:
          $ref: '#/components/schemas/quote-data-totals-interface'
        extension_attributes:
          $ref: '#/components/schemas/checkout-data-payment-details-extension-interface'
      description: Interface PaymentDetailsInterface
    checkout-data-payment-details-extension-interface:
      type: object
      description: ExtensionInterface class for @see \Magento\Checkout\Api\Data\PaymentDetailsInterface
    checkout-data-totals-information-interface:
      required:
      - address
      type: object
      properties:
        address:
          $ref: '#/components/schemas/quote-data-address-interface'
        shipping_method_code:
          type: string
          description: Shipping method code
        shipping_carrier_code:
          type: string
          description: Carrier code
        extension_attributes:
          $ref: '#/components/schemas/checkout-data-totals-information-extension-interface'
        custom_attributes:
          type: array
          description: Custom attributes values.
          items:
            $ref: '#/components/schemas/framework-attribute-interface'
      description: Interface TotalsInformationInterface
    checkout-data-totals-information-extension-interface:
      type: object
      description: ExtensionInterface class for @see \Magento\Checkout\Api\Data\TotalsInformationInterface
    checkout-agreements-data-agreement-interface:
      required:
      - agreement_id
      - checkbox_text
      - content
      - is_active
      - is_html
      - mode
      - name
      type: object
      properties:
        agreement_id:
          type: integer
          description: Agreement ID.
        name:
          type: string
          description: Agreement name.
        content:
          type: string
          description: Agreement content.
        content_height:
          type: string
          description: Agreement content height. Otherwise, null.
        checkbox_text:
          type: string
          description: Agreement checkbox text.
        is_active:
          type: boolean
          description: Agreement status.
        is_html:
          type: boolean
          description: '* true - HTML. * false - plain text.'
        mode:
          type: integer
          description: The agreement applied mode.
        extension_attributes:
          $ref: '#/components/schemas/checkout-agreements-data-agreement-extension-interface'
      description: Interface AgreementInterface  
    checkout-agreements-data-agreement-extension-interface:
      type: object
      description: ExtensionInterface class for @see \Magento\CheckoutAgreements\Api\Data\AgreementInterface
    gift-card-account-data-gift-card-account-interface:
      required:
      - base_gift_cards_amount
      - base_gift_cards_amount_used
      - gift_cards
      - gift_cards_amount
      - gift_cards_amount_used
      type: object
      properties:
        gift_cards:
          type: array
          description: Cards codes
          items:
            type: string
        gift_cards_amount:
          type: number
          description: Cards amount in quote currency
        base_gift_cards_amount:
          type: number
          description: Cards amount in base currency
        gift_cards_amount_used:
          type: number
          description: Cards amount used in quote currency
        base_gift_cards_amount_used:
          type: number
          description: Cards amount used in base currency
        extension_attributes:
          $ref: '#/components/schemas/gift-card-account-data-gift-card-account-extension-interface'
      description: Gift Card Account data
    gift-card-account-data-gift-card-account-extension-interface:
      type: object
      description: ExtensionInterface class for @see \Magento\GiftCardAccount\Api\Data\GiftCardAccountInterface
    temando-shipping-data-collection-point-search-request-interface:
      required:
      - country_id
      - pending
      - postcode
      - shipping_address_id
      type: object
      properties:
        shipping_address_id:
          type: integer
        country_id:
          type: string
        postcode:
          type: string
        pending:
          type: boolean
      description: Temando Collection Point Search Request Interface
    temando-shipping-data-collection-point-quote-collection-point-interface:
      required:
      - city
      - collection_point_id
      - country
      - entity_id
      - name
      - opening_hours
      - postcode
      - recipient_address_id
      - region
      - selected
      - shipping_experiences
      - street
      type: object
      properties:
        entity_id:
          type: integer
        collection_point_id:
          type: string
        recipient_address_id:
          type: integer
        name:
          type: string
        country:
          type: string
        region:
          type: string
        postcode:
          type: string
        city:
          type: string
        street:
          type: array
          items:
            type: string
        opening_hours:
          type: array
          items:
            type: string
        shipping_experiences:
          type: array
          items:
            type: string
        selected:
          type: boolean
      description: Temando Quote Collection Point Interface – Checkout/Quoting

x-tagGroups:
- name: addresses
  tags:
  - addresses/{addressId}
- name: amazon billing address
  tags:
  - amazon-billing-address/{amazonOrderReferenceId}
- name: amazon shipping address
  tags:
  - amazon-shipping-address/{amazonOrderReferenceId}
- name: amazon
  tags:
  - amazon/order-ref
- name: analytics
  tags:
  - analytics/link
- name: attributeMetadata
  tags:
  - attributeMetadata/customer
  - attributeMetadata/customer/attribute/{attributeCode}
  - attributeMetadata/customer/custom
  - attributeMetadata/customer/form/{formCode}
  - attributeMetadata/customerAddress
  - attributeMetadata/customerAddress/attribute/{attributeCode}
  - attributeMetadata/customerAddress/custom
  - attributeMetadata/customerAddress/form/{formCode}
- name: bulk
  tags:
  - bulk/{bulkUuid}/detailed-status
  - bulk/{bulkUuid}/operation-status/{status}
  - bulk/{bulkUuid}/status
- name: bundle products
  tags:
  - bundle-products/options/add
  - bundle-products/options/types
  - bundle-products/options/{optionId}
  - bundle-products/{productSku}/children
  - bundle-products/{sku}/links/{id}
  - bundle-products/{sku}/links/{optionId}
  - bundle-products/{sku}/options/all
  - bundle-products/{sku}/options/{optionId}
  - bundle-products/{sku}/options/{optionId}/children/{childSku}
- name: carts
  tags:
  - carts/
  - carts/guest-carts/{cartId}/checkGiftCard/{giftCardCode}
  - carts/guest-carts/{cartId}/giftCards
  - carts/guest-carts/{cartId}/giftCards/{giftCardCode}
  - carts/licence
  - carts/mine
  - carts/mine/balance/apply
  - carts/mine/balance/unapply
  - carts/mine/billing-address
  - carts/mine/checkGiftCard/{giftCardCode}
  - carts/mine/checkout-fields
  - carts/mine/collect-totals
  - carts/mine/collection-point/search-request
  - carts/mine/collection-point/search-result
  - carts/mine/collection-point/select
  - carts/mine/coupons
  - carts/mine/coupons/{couponCode}
  - carts/mine/delivery-option
  - carts/mine/estimate-shipping-methods
  - carts/mine/estimate-shipping-methods-by-address-id
  - carts/mine/gift-message
  - carts/mine/gift-message/{itemId}
  - carts/mine/giftCards
  - carts/mine/giftCards/{giftCardCode}
  - carts/mine/items
  - carts/mine/items/{itemId}
  - carts/mine/order
  - carts/mine/payment-information
  - carts/mine/payment-methods
  - carts/mine/selected-payment-method
  - carts/mine/set-payment-information
  - carts/mine/shipping-information
  - carts/mine/shipping-methods
  - carts/mine/totals
  - carts/mine/totals-information
  - carts/search
  - carts/{cartId}
  - carts/{cartId}/billing-address
  - carts/{cartId}/coupons
  - carts/{cartId}/coupons/{couponCode}
  - carts/{cartId}/estimate-shipping-methods
  - carts/{cartId}/estimate-shipping-methods-by-address-id
  - carts/{cartId}/gift-message
  - carts/{cartId}/gift-message/{itemId}
  - carts/{cartId}/giftCards
  - carts/{cartId}/giftCards/{giftCardCode}
  - carts/{cartId}/items
  - carts/{cartId}/items/{itemId}
  - carts/{cartId}/order
  - carts/{cartId}/payment-methods
  - carts/{cartId}/selected-payment-method
  - carts/{cartId}/shipping-information
  - carts/{cartId}/shipping-methods
  - carts/{cartId}/totals
  - carts/{cartId}/totals-information
  - carts/{quoteId}/giftCards
  - carts/{quoteId}/items
- name: categories
  tags:
  - categories
  - categories/attributes
  - categories/attributes/{attributeCode}
  - categories/attributes/{attributeCode}/options
  - categories/list
  - categories/{categoryId}
  - categories/{categoryId}/move
  - categories/{categoryId}/products
  - categories/{categoryId}/products/{sku}
  - categories/{id}
- name: cmsBlock
  tags:
  - cmsBlock
  - cmsBlock/search
  - cmsBlock/{blockId}
  - cmsBlock/{id}
- name: cmsPage
  tags:
  - cmsPage
  - cmsPage/search
  - cmsPage/{id}
  - cmsPage/{pageId}
- name: company
  tags:
  - company/
  - company/assignRoles
  - company/role/
  - company/role/{id}
  - company/role/{roleId}
  - company/role/{roleId}/users
  - company/{companyId}
- name: companyCredits
  tags:
  - companyCredits/
  - companyCredits/company/{companyId}
  - companyCredits/history
  - companyCredits/history/{historyId}
  - companyCredits/{creditId}
  - companyCredits/{creditId}/decreaseBalance
  - companyCredits/{creditId}/increaseBalance
  - companyCredits/{id}
- name: configurable products
  tags:
  - configurable-products/variation
  - configurable-products/{sku}/child
  - configurable-products/{sku}/children
  - configurable-products/{sku}/children/{childSku}
  - configurable-products/{sku}/options
  - configurable-products/{sku}/options/all
  - configurable-products/{sku}/options/{id}
- name: coupons
  tags:
  - coupons
  - coupons/deleteByCodes
  - coupons/deleteByIds
  - coupons/generate
  - coupons/search
  - coupons/{couponId}
- name: creditmemo
  tags:
  - creditmemo
  - creditmemo/refund
  - creditmemo/{id}
  - creditmemo/{id}/comments
  - creditmemo/{id}/emails
- name: creditmemos
  tags:
  - creditmemos
- name: customerGroups
  tags:
  - customerGroups
  - customerGroups/default
  - customerGroups/default/{id}
  - customerGroups/default/{storeId}
  - customerGroups/search
  - customerGroups/{id}
  - customerGroups/{id}/permissions
- name: customers
  tags:
  - customers
  - customers/addresses/{addressId}
  - customers/confirm
  - customers/isEmailAvailable
  - customers/me
  - customers/me/activate
  - customers/me/billingAddress
  - customers/me/password
  - customers/me/shippingAddress
  - customers/password
  - customers/resetPassword
  - customers/search
  - customers/validate
  - customers/{customerId}
  - customers/{customerId}/billingAddress
  - customers/{customerId}/carts
  - customers/{customerId}/confirm
  - customers/{customerId}/password/resetLinkToken/{resetPasswordLinkToken}
  - customers/{customerId}/permissions/readonly
  - customers/{customerId}/shippingAddress
  - customers/{email}/activate
- name: directory
  tags:
  - directory/countries
  - directory/countries/{countryId}
  - directory/currency
- name: eav
  tags:
  - eav/attribute-sets
  - eav/attribute-sets/list
  - eav/attribute-sets/{attributeSetId}
- name: gift wrappings
  tags:
  - gift-wrappings
  - gift-wrappings/{id}
  - gift-wrappings/{wrappingId}
- name: giftregistry
  tags:
  - giftregistry/mine/estimate-shipping-methods
- name: guest carts
  tags:
  - guest-carts
  - guest-carts/{cartId}
  - guest-carts/{cartId}/billing-address
  - guest-carts/{cartId}/checkout-fields
  - guest-carts/{cartId}/collect-totals
  - guest-carts/{cartId}/collection-point/search-request
  - guest-carts/{cartId}/collection-point/search-result
  - guest-carts/{cartId}/collection-point/select
  - guest-carts/{cartId}/coupons
  - guest-carts/{cartId}/coupons/{couponCode}
  - guest-carts/{cartId}/delivery-option
  - guest-carts/{cartId}/estimate-shipping-methods
  - guest-carts/{cartId}/gift-message
  - guest-carts/{cartId}/gift-message/{itemId}
  - guest-carts/{cartId}/items
  - guest-carts/{cartId}/items/{itemId}
  - guest-carts/{cartId}/order
  - guest-carts/{cartId}/payment-information
  - guest-carts/{cartId}/payment-methods
  - guest-carts/{cartId}/selected-payment-method
  - guest-carts/{cartId}/set-payment-information
  - guest-carts/{cartId}/shipping-information
  - guest-carts/{cartId}/shipping-methods
  - guest-carts/{cartId}/totals
  - guest-carts/{cartId}/totals-information
- name: guest giftregistry
  tags:
  - guest-giftregistry/{cartId}/estimate-shipping-methods
- name: hierarchy
  tags:
  - hierarchy/move/{id}
  - hierarchy/{id}
- name: integration
  tags:
  - integration/admin/token
  - integration/customer/token
- name: invoice
  tags:
  - invoice/{invoiceId}/refund
- name: invoices
  tags:
  - invoices
  - invoices/
  - invoices/comments
  - invoices/{id}
  - invoices/{id}/capture
  - invoices/{id}/comments
  - invoices/{id}/emails
  - invoices/{id}/void
- name: modules
  tags:
  - modules
- name: negotiable carts
  tags:
  - negotiable-carts/{cartId}/billing-address
  - negotiable-carts/{cartId}/coupons
  - negotiable-carts/{cartId}/coupons/{couponCode}
  - negotiable-carts/{cartId}/estimate-shipping-methods
  - negotiable-carts/{cartId}/estimate-shipping-methods-by-address-id
  - negotiable-carts/{cartId}/giftCards
  - negotiable-carts/{cartId}/giftCards/{giftCardCode}
  - negotiable-carts/{cartId}/payment-information
  - negotiable-carts/{cartId}/set-payment-information
  - negotiable-carts/{cartId}/shipping-information
  - negotiable-carts/{cartId}/totals
- name: negotiableQuote
  tags:
  - negotiableQuote/attachmentContent
  - negotiableQuote/decline
  - negotiableQuote/pricesUpdated
  - negotiableQuote/request
  - negotiableQuote/submitToCustomer
  - negotiableQuote/{quoteId}
  - negotiableQuote/{quoteId}/comments
  - negotiableQuote/{quoteId}/shippingMethod
- name: order
  tags:
  - order/{orderId}/invoice
  - order/{orderId}/refund
  - order/{orderId}/ship
- name: orders
  tags:
  - orders
  - orders/
  - orders/create
  - orders/items
  - orders/items/{id}
  - orders/{id}
  - orders/{id}/cancel
  - orders/{id}/comments
  - orders/{id}/emails
  - orders/{id}/hold
  - orders/{id}/statuses
  - orders/{id}/unhold
  - orders/{parent_id}
- name: products
  tags:
  - products
  - products/attribute-sets
  - products/attribute-sets/attributes
  - products/attribute-sets/groups
  - products/attribute-sets/groups/list
  - products/attribute-sets/groups/{groupId}
  - products/attribute-sets/sets/list
  - products/attribute-sets/{attributeSetId}
  - products/attribute-sets/{attributeSetId}/attributes
  - products/attribute-sets/{attributeSetId}/attributes/{attributeCode}
  - products/attribute-sets/{attributeSetId}/groups
  - products/attributes
  - products/attributes/types
  - products/attributes/{attributeCode}
  - products/attributes/{attributeCode}/options
  - products/attributes/{attributeCode}/options/{optionId}
  - products/base-prices
  - products/base-prices-information
  - products/cost
  - products/cost-delete
  - products/cost-information
  - products/downloadable-links/samples/{id}
  - products/downloadable-links/{id}
  - products/links/types
  - products/links/{type}/attributes
  - products/media/types/{attributeSetName}
  - products/options
  - products/options/types
  - products/options/{optionId}
  - products/special-price
  - products/special-price-delete
  - products/special-price-information
  - products/tier-prices
  - products/tier-prices-delete
  - products/tier-prices-information
  - products/types
  - products/{productSku}/stockItems/{itemId}
  - products/{sku}
  - products/{sku}/downloadable-links
  - products/{sku}/downloadable-links/samples
  - products/{sku}/downloadable-links/samples/{id}
  - products/{sku}/downloadable-links/{id}
  - products/{sku}/group-prices/{customerGroupId}/tiers
  - products/{sku}/group-prices/{customerGroupId}/tiers/{qty}
  - products/{sku}/group-prices/{customerGroupId}/tiers/{qty}/price/{price}
  - products/{sku}/links
  - products/{sku}/links/{type}
  - products/{sku}/links/{type}/{linkedProductSku}
  - products/{sku}/media
  - products/{sku}/media/{entryId}
  - products/{sku}/options
  - products/{sku}/options/{optionId}
  - products/{sku}/websites
  - products/{sku}/websites/{websiteId}
- name: products render info
  tags:
  - products-render-info
- name: requisition_lists
  tags:
  - requisition_lists
- name: returns
  tags:
  - returns
  - returns/{id}
  - returns/{id}/comments
  - returns/{id}/labels
  - returns/{id}/tracking-numbers
  - returns/{id}/tracking-numbers/{trackId}
- name: returnsAttributeMetadata
  tags:
  - returnsAttributeMetadata
  - returnsAttributeMetadata/custom
  - returnsAttributeMetadata/form/{formCode}
  - returnsAttributeMetadata/{attributeCode}
- name: reward
  tags:
  - reward/mine/use-reward
- name: salesRules
  tags:
  - salesRules
  - salesRules/search
  - salesRules/{ruleId}
- name: search
  tags:
  - search
- name: sharedCatalog
  tags:
  - sharedCatalog
  - sharedCatalog/
  - sharedCatalog/{id}
  - sharedCatalog/{id}/assignCategories
  - sharedCatalog/{id}/assignProducts
  - sharedCatalog/{id}/categories
  - sharedCatalog/{id}/products
  - sharedCatalog/{id}/unassignCategories
  - sharedCatalog/{id}/unassignProducts
  - sharedCatalog/{sharedCatalogId}
  - sharedCatalog/{sharedCatalogId}/assignCompanies
  - sharedCatalog/{sharedCatalogId}/companies
  - sharedCatalog/{sharedCatalogId}/unassignCompanies
- name: shipment
  tags:
  - shipment/
  - shipment/track
  - shipment/track/{id}
  - shipment/{id}
  - shipment/{id}/comments
  - shipment/{id}/emails
  - shipment/{id}/label
- name: shipments
  tags:
  - shipments
- name: stockItems
  tags:
  - stockItems/lowStock/
  - stockItems/{productSku}
- name: stockStatuses
  tags:
  - stockStatuses/{productSku}
- name: store
  tags:
  - store/storeConfigs
  - store/storeGroups
  - store/storeViews
  - store/websites
- name: taxClasses
  tags:
  - taxClasses
  - taxClasses/search
  - taxClasses/{classId}
  - taxClasses/{taxClassId}
- name: taxRates
  tags:
  - taxRates
  - taxRates/search
  - taxRates/{rateId}
- name: taxRules
  tags:
  - taxRules
  - taxRules/search
  - taxRules/{ruleId}
- name: team
  tags:
  - team/
  - team/{companyId}
  - team/{teamId}
- name: temando
  tags:
  - temando/rma/{rmaId}/shipments
- name: transactions
  tags:
  - transactions
  - transactions/{id}
- name: worldpay guest carts
  tags:
  - worldpay-guest-carts/{cartId}/payment-information
