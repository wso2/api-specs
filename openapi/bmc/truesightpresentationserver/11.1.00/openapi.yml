openapi: 3.0.1
info:
  title: Hardware Sentry TrueSight Presentation Server REST API
  description: >
    This is a generated connector for [BMC Hardware Sentry TrueSight Presentation Server REST API v1.0](https://docs.bmc.com/docs/display/tsps107/Getting+started) OpenAPI specification.  

    The BMC Hardware Sentry TrueSight Presentation Server API provides the capability to access data from various TrueSight products to provide a consolidated set of views for monitoring the infrastructure, real and synthetic applications, and capacity planning.
  x-ballerina-init-description: >
    The connector initialization requires setting the API credentials.

    Create a [user account](https://docs.bmc.com/docs/sso90/managing-users-474056900.html#Managingusers-Toaddanewuser) in BMC Hardware Sentry TrueSight Presentation Server and obtain tokens following [this guide](https://docs.bmc.com/docs/display/tsps107/TSWS+authentication).
  x-ballerina-display:
    label: Bmc TrueSight Presentation Server
    iconPath: "icon.png"
  contact:
    name: Sentry on BMC Community
    url: https://community.bmc.com/s/group/0F93n000000PlUtCAK/sentry-software
  license:
    name: BMC Connector SDK License Agreement
    url: >-
      https://www.bmc.com/content/dam/bmc/corporate/Connector_SDK_License_Agreement.pdf
  version: 11.1.00
  
tags:
  - name: Actions
    description: API operations to interact with the PATROL Agent.
  - name: Applications
    description: API operations to interact with the monitored Applications.
  - name: Devices
    description: API operations to interact with the monitored Devices.
  - name: Groups
    description: API operations to interact with the monitored Groups.
  - name: Historical Data
    description: API operations to get historical data.
  - name: Services
    description: API operations to interact with the monitored Services.
paths:
  /hardware/actions/{deviceId}/collect-now:
    post:
      tags:
        - Actions
      summary: Triggers a new collect on a specific device.
      description: >-
        You need to provide the <b>Device ID</b> and <b>Monitor Class</b>
        parameters to identify the device:<br>- Use the <b>/hardware/devices</b>
        service in the <b>Device</b> section to retrieve the <b>Device ID</b> of
        any device.<br>- Use the <b>/hardware/device-monitors/{deviceId}</b>
        service in the <b>Device</b> section to retrieve the <b>Monitor
        Class</b> of a device.
      operationId: collectNow
      parameters:
        - name: deviceId
          in: path
          description: The ID of the device.
          required: true
          schema:
            type: integer
            format: int32
          example: 42
        - name: monitorClass
          in: query
          description: The Monitor Class of the device.
          required: true
          schema:
            type: string
          example: MS_HW_FAN
      responses:
        '200':
          description: Successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ActionResponse'
        '403':
          description: Forbidden operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Unexpected error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /hardware/actions/{deviceId}/rediscover:
    post:
      tags:
        - Actions
      summary: Triggers a new discovery on a specific device.
      description: >-
        You need to provide the <b>Device ID</b> to identify the device:<br>-
        Use the <b>/hardware/devices</b> service in the <b>Device</b> section to
        retrieve the <b>Device ID</b> of a device.
      operationId: rediscover
      parameters:
        - name: deviceId
          in: path
          description: The ID of the device.
          required: true
          schema:
            type: integer
            format: int32
          example: 42
      responses:
        '200':
          description: Successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ActionResponse'
        '403':
          description: Forbidden operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Unexpected error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /hardware/actions/{deviceId}/reinitialize:
    post:
      tags:
        - Actions
      summary: Sends a 'Reinitialize KM' command.
      description: >-
        Launches a 'Reinitialize KM' command for the following parameters:<br>-
        resetDiscoveryAndPollingIntervals<br>- resetAlertAfterNTimes<br>-
        resetAlertActions<br>- resetOtherA<br>- resetSettings<br>-
        resetDebugMode<br>- resetRemovedPausedObjectList<br>-
        resetReportSettings<br>- resetJavaSettings<br>-
        resetThresholds<br><br>You need to provide the <b>Device ID</b> to
        identify the device:<br>- Use the <b>/hardware/devices</b> service in
        the <b>Device</b> section to retrieve the <b>Device ID</b> of a device.
      operationId: reinitialize
      parameters:
        - name: deviceId
          in: path
          description: The ID of the device.
          required: true
          schema:
            type: integer
            format: int32
          example: 42
      requestBody:
        description: The request body as a JSON payload.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReinitializeActionConfiguration'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ActionResponse'
        '403':
          description: Forbidden operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Unexpected error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-codegen-request-body-name: body
  /hardware/actions/{deviceId}/remove:
    post:
      tags:
        - Actions
      summary: Removes a specific instance from the monitoring environment.
      description: >-
        You need to provide the <b>Device ID</b>, the <b>Monitor Class</b> and
        the <b>Monitor SID</b> parameters:<br>- Use the <b>/hardware/devices</b>
        service in the <b>Device</b> section to retrieve the <b>Device ID</b> of
        any device.<br>- Use the <b>/hardware/device-monitors/{deviceId}</b>
        service in the <b>Device</b> section to retrieve the <b>Monitor
        Class</b> and the <b>Monitor SID</b> for a
        device.<br><br>(Example:"path":"/MS_HW_MAIN/10025150" where
        <em>MS_HW_MAIN</em> is the Monitor Class and <em>10025150</em> is the
        Monitor SID).
      operationId: remove
      parameters:
        - name: deviceId
          in: path
          description: The ID of the device.
          required: true
          schema:
            type: integer
            format: int32
          example: 42
        - name: monitorClass
          in: query
          description: The Monitor Class of the device.
          required: true
          schema:
            type: string
          example: MS_HW_FAN
        - name: monitorSid
          in: query
          description: The Monitor SID of the device.
          required: true
          schema:
            type: string
          example: cisco-c240-imc
      responses:
        '200':
          description: Successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ActionResponse'
        '403':
          description: Forbidden operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Unexpected error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /hardware/actions/{deviceId}/reset-error-count:
    post:
      tags:
        - Actions
      summary: Resets the Error Count parameter.
      description: >-
        Sets the Error Count parameter to 0.<br><br>You need to provide the
        <b>Device ID</b>, the <b>Monitor Class</b> and the <b>Monitor SID</b>
        parameters:<br>- Use the <b>/hardware/devices</b> service in the
        <b>Device</b> section to retrieve the <b>Device ID</b> of any
        device.<br>- Use the <b>/hardware/device-monitors/{deviceId}</b> service
        in the <b>Device</b> section to retrieve the <b>Monitor Class</b> and
        the <b>Monitor SID</b> for a
        device.<br><br>(Example:"path":"/MS_HW_MAIN/10025150" where
        <em>MS_HW_MAIN</em> is the Monitor Class and <em>10025150</em> is the
        monitorSid).
      operationId: reset
      parameters:
        - name: deviceId
          in: path
          description: The ID of the device.
          required: true
          schema:
            type: integer
            format: int32
          example: 42
        - name: monitorClass
          in: query
          description: The Monitor Class of the device.
          required: true
          schema:
            type: string
          example: MS_HW_FAN
        - name: monitorSid
          in: query
          description: The Monitor SID of the device.
          required: true
          schema:
            type: string
          example: cisco-c240-imc
      responses:
        '200':
          description: Successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ActionResponse'
        '403':
          description: Forbidden operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Unexpected error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /hardware/applications:
    get:
      tags:
        - Applications
      summary: Gets summarized information about all monitored applications.
      description: Lists all the available ApplicationSummary instances.
      operationId: getApplications
      parameters:
        - name: page
          in: query
          description: The page number to retrieve (first page is 0).
          schema:
            type: string
            format: int32
            default: '0'
        - name: limit
          in: query
          description: The maximum number of entries per page.
          schema:
            type: integer
            format: int32
            default: 100
        - name: direction
          in: query
          description: The sorting order (case insensitive).
          schema:
            type: string
            default: asc
            enum:
              - asc
              - desc
        - name: sort
          in: query
          description: The column to sort by (case insensitive).
          schema:
            type: string
            default: name
      responses:
        '200':
          description: Successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResultPage'
        '404':
          description: No applications found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Unexpected error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /hardware/applications/{applicationId}:
    get:
      tags:
        - Applications
      summary: Gets detailed information for a specific application.
      description: >-
        You need to provide an <b>Application ID</b>:<br>- use the
        <b>hardware/applications</b> service to retrieve all available
        application IDs.
      operationId: getOneApplication
      parameters:
        - name: applicationId
          in: path
          description: The ID of the application.
          required: true
          schema:
            type: string
          example: '0'
      responses:
        '200':
          description: Successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApplicationSummary'
        '404':
          description: No applications found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Unexpected error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /hardware/device-monitors/{deviceId}:
    get:
      tags:
        - Devices
      summary: Gets the Monitors for a specific device.
      description: >-
        You need to provide a <b>Device ID</b>:<br>- use the
        <b>hardware/devices</b> service to get all available device IDs.
      operationId: getDeviceMonitors
      parameters:
        - name: deviceId
          in: path
          description: The ID of the device.
          required: true
          schema:
            type: integer
            format: int32
          example: 42
      responses:
        '200':
          description: Successful operation
          content: {}
        '500':
          description: Unexpected error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /hardware/devices:
    get:
      tags:
        - Devices
      summary: Gets summarized information about all monitored devices.
      description: >-
        Lists the available DeviceSummary instances.<br><br>If a parent ID
        (group ID, application ID, or service ID) is provided, the function
        narrows down the devices list to those attached to the specified
        parent:<br>- use the <b>hardware/groups</b> service in the <b>Groups</b>
        section to get all available group IDs.<br>- use the
        <b>hardware/applications</b> service in the <b>Applications</b> section
        to get all available application IDs.<br>- use the
        <b>hardware/services</b> service in the <b>Services</b> section to get
        all available service IDs.<br><br><b>Note</b>: At most, one parent ID is
        taken into account according to this order of precedence:<ol><li>group
        ID</li><li>application ID</li><li>service ID</li></ol>
      operationId: getDevices
      parameters:
        - name: page
          in: query
          description: The page number to retrieve (first page is 0).
          schema:
            type: string
            format: int32
            default: '0'
        - name: limit
          in: query
          description: The maximum number of entries per page.
          schema:
            type: integer
            format: int32
            default: 100
        - name: direction
          in: query
          description: The sorting order (case insensitive).
          schema:
            type: string
            default: asc
            enum:
              - asc
              - desc
        - name: sort
          in: query
          description: The column to sort by (case insensitive).
          schema:
            type: string
            default: name
        - name: groupId
          in: query
          description: The ID of the group.
          schema:
            type: string
          example: '0'
        - name: applicationId
          in: query
          description: The ID of the application.
          schema:
            type: string
          example: '0'
        - name: serviceId
          in: query
          description: The ID of the service.
          schema:
            type: string
          example: '0'
      responses:
        '200':
          description: Successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResultPage'
        '404':
          description: No devices found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Unexpected error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /hardware/devices-summary:
    get:
      tags:
        - Devices
      summary: Gets overall information for all devices.
      description: Lists the GlobalSummary instance for all the monitored devices.
      operationId: getDevicesSummary
      responses:
        '200':
          description: Successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GlobalSummary'
        '500':
          description: Unexpected error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /hardware/devices/{deviceId}:
    get:
      tags:
        - Devices
      summary: Gets detailed information about a specific device.
      description: >-
        You need to provide a <b>Device ID</b>:<br>-use the
        <b>hardware/devices</b> service to get all available device IDs.
      operationId: getDevice
      parameters:
        - name: deviceId
          in: path
          description: The ID of the device.
          required: true
          schema:
            type: integer
            format: int32
          example: 42
      responses:
        '200':
          description: Successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DeviceSummary'
        '404':
          description: No devices found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Unexpected error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /hardware/devices/{deviceId}/agent:
    get:
      tags:
        - Devices
      summary: Gets detailed information about an Agent.
      description: >-
        You need to provide a <b>Device ID</b> to retrieve detailed information
        about the Agent that Monitors the device:<br>-use the
        <b>hardware/devices</b> service to get all available device IDs.
      operationId: getDeviceAgent
      parameters:
        - name: deviceId
          in: path
          description: The ID of the device.
          required: true
          schema:
            type: integer
            format: int32
          example: 42
      responses:
        '200':
          description: Successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DeviceAgent'
        '500':
          description: Unexpected error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /hardware/devices/{deviceId}/agent-devices:
    get:
      tags:
        - Devices
      summary: Gets a list of all the devices monitored by an Agent.
      description: >-
        You need to provide the <b>Device ID</b> of a device to retrieve any
        other devices monitored by the same Agent:<br>-use the
        <b>hardware/devices</b> service to get all available device IDs.
      operationId: getAgentDevices
      parameters:
        - name: deviceId
          in: path
          description: The ID of the device.
          required: true
          schema:
            type: integer
            format: int32
          example: 42
      responses:
        '200':
          description: Successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResultPage'
        '500':
          description: Unexpected error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /hardware/devices/{deviceId}/parameter-history:
    get:
      tags:
        - Devices
      summary: >-
        Gets data history for a parameter of a specific device over a given
        period.
      description: >-
        You need to provide the <b>Device ID</b>, <b>Parameter Name</b>,
        <b>Monitor Type</b> and <b>Monitor SID</b>:<br>- use the
        <b>hardware/devices</b> service to get all available device IDs<br>- use
        the <b>/hardware/device-monitors/{deviceId}</b> to get the parameter
        name, the Monitor type and the Monitor SID.<br><br>Finally, define the
        period for which you wish to retrieve data history.
      operationId: getDeviceParameterHistory
      parameters:
        - name: deviceId
          in: path
          description: The ID of the device.
          required: true
          schema:
            type: integer
            format: int32
          example: 42
        - name: parameterName
          in: query
          description: The name of the parameter.
          required: true
          schema:
            type: string
          example: Power Consumption
        - name: monitorType
          in: query
          description: The unique name of the Monitor type.
          required: true
          schema:
            type: string
          example: _PATROL__MS_HW_REPORT
        - name: from
          in: query
          description: Beginning of the period (Epoch time, in seconds).
          schema:
            type: integer
            format: int64
          example: 1608850800
        - name: to
          in: query
          description: End of the period (Epoch time, in seconds).
          schema:
            type: integer
            format: int64
          example: 1608850800
        - name: monitorSid
          in: query
          description: The Monitor SID (to filter the list of Monitors).
          schema:
            type: string
          example: cisco-c240-imc
      responses:
        '200':
          description: Successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResultPage'
        '500':
          description: Unexpected error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /hardware/energy-usage/{deviceId}:
    get:
      tags:
        - Devices
      summary: Gets the energy usage for a specific device and a given period.
      description: >-
        You need to provide the device ID:<br>- use the <b>hardware/devices</b>
        service to get all available device IDs.
      operationId: getDeviceEnergyUsage
      parameters:
        - name: deviceId
          in: path
          description: The ID of the device.
          required: true
          schema:
            type: integer
            format: int32
          example: 42
        - name: rollPeriod
          in: query
          description: The period for which you wish to retrieve energy usage data.
          schema:
            type: string
            default: ONE_DAY
            enum:
              - ONE_DAY
              - ONE_WEEK
              - ONE_MONTH
              - SIX_MONTHS
              - ONE_YEAR
        - name: basis
          in: query
          description: >-
            Subdivision of the period for which you wish to retrieve energy
            usage data.
          schema:
            type: string
            default: HOURLY
            enum:
              - MONTHLY
              - DAILY
              - HOURLY
      responses:
        '200':
          description: Successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResultPage'
        '500':
          description: Unexpected error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /hardware/groups:
    get:
      tags:
        - Groups
      summary: Gets all group summaries.
      description: Lists the available GroupSummary instances.
      operationId: getGroups
      parameters:
        - name: page
          in: query
          description: The page number to retrieve (first page is 0).
          schema:
            type: string
            format: int32
            default: '0'
        - name: limit
          in: query
          description: The maximum number of entries per page.
          schema:
            type: integer
            format: int32
            default: 100
        - name: direction
          in: query
          description: The sorting order (case insensitive).
          schema:
            type: string
            default: asc
            enum:
              - asc
              - desc
        - name: sort
          in: query
          description: The column to sort by (case insensitive).
          schema:
            type: string
            default: name
      responses:
        '200':
          description: Successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResultPage'
        '404':
          description: No groups found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Unexpected error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /hardware/groups/{groupId}:
    get:
      tags:
        - Groups
      summary: Gets detailed information about a specific group.
      description: >-
        You need to provide a <b>Device ID</b>:<br>- use the
        <b>hardware/groups</b> service to get all available group ID.
      operationId: getOneGroup
      parameters:
        - name: groupId
          in: path
          description: The ID of the group.
          required: true
          schema:
            type: string
          example: '0'
      responses:
        '200':
          description: Successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GroupSummary'
        '404':
          description: No groups found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Unexpected error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Groups
      summary: >-
        Updates the values of the energy footprint parameter for a specific
        group.
      description: >-
        You need to provide a <b>Device ID</b>:<br>- use the
        <b>hardware/groups</b> service to get all available group ID.<br><br>If
        the ID is <em>"global"</em>, then the group being updated is the
        GlobalSummary.
      operationId: updateEnergyCost
      parameters:
        - name: groupId
          in: path
          description: The ID of the group.
          required: true
          schema:
            type: string
          example: '0'
      requestBody:
        description: The values you wish to assign.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupConfiguration'
        required: false
      responses:
        '200':
          description: Successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GlobalSummary'
        '404':
          description: No settings or groups found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Unexpected error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-codegen-request-body-name: body
  /hardware/heating-margin-devices:
    get:
      tags:
        - Devices
      summary: >-
        Gets the heating margin values for each monitored device, when
        available.
      description: >-
        If a parent ID (group ID, application ID, or service ID) is provided,
        the function narrows down the devices list to those attached to the
        specified parent:<br>- use the <b>hardware/groups</b> service in the
        <b>Groups</b> section to get all available group IDs.<br>- use the
        <b>hardware/applications</b> service in the <b>Applications</b> section
        to get all available application IDs.<br>- use the
        <b>hardware/services</b> service in the <b>Services</b> section to get
        all available service IDs.<br><br><b>Note</b>: At most, one parent ID is
        taken into account according to this order of precedence:<ol><li>group
        ID</li><li>application ID</li><li>service ID</li></ol>
      operationId: getHeatingMarginCoverage
      parameters:
        - name: covered
          in: query
          description: >-
            If set to <em>true</em>, only gets devices whose heating margin
            information is available.<br>Otherwise, gets any other devices.
          schema:
            type: boolean
            default: true
        - name: page
          in: query
          description: The page number to retrieve (first page is 0).
          schema:
            type: string
            format: int32
            default: '0'
        - name: limit
          in: query
          description: The maximum number of entries per page.
          schema:
            type: integer
            format: int32
            default: 100
        - name: direction
          in: query
          description: The sorting order (case insensitive).
          schema:
            type: string
            default: asc
            enum:
              - asc
              - desc
        - name: sort
          in: query
          description: The column to sort by (case insensitive).
          schema:
            type: string
            default: name
        - name: groupId
          in: query
          description: The ID of the group.
          schema:
            type: string
          example: '0'
        - name: applicationId
          in: query
          description: The ID of the application.
          schema:
            type: string
          example: '0'
        - name: serviceId
          in: query
          description: The ID of the service.
          schema:
            type: string
          example: '0'
      responses:
        '200':
          description: Successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResultPage'
        '404':
          description: No devices found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Unexpected error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /hardware/history:
    get:
      tags:
        - Historical Data
      summary: Gets historical data for a specific group, application or service.
      description: >-
        Gets the historical data for a specific group, application or service,
        for a given period.<br><br>If a parent ID (group ID, application ID, or
        service ID) is provided, the function narrows down the devices list to
        those attached to the specified parent:<br>- use the
        <b>hardware/groups</b> service in the <b>Groups</b> section to get all
        available group IDs.<br>- use the <b>hardware/applications</b> service
        in the <b>Applications</b> section to get all available application
        IDs.<br>- use the <b>hardware/services</b> service in the
        <b>Services</b> section to get all available service
        IDs.<br><br><b>Note</b>: At most, one parent ID is taken into account
        according to this order of precedence:<ol><li>group
        ID</li><li>application ID</li><li>service ID</li></ol>
      operationId: getHistory
      parameters:
        - name: groupId
          in: query
          description: The ID of the group.
          schema:
            type: string
          example: '0'
        - name: applicationId
          in: query
          description: The ID of the application.
          schema:
            type: string
          example: '0'
        - name: serviceId
          in: query
          description: The ID of the service.
          schema:
            type: string
          example: '0'
        - name: from
          in: query
          description: Beginning of the period (Epoch time, in seconds).
          schema:
            type: integer
            format: int64
          example: 1608850800
        - name: to
          in: query
          description: End of the period (Epoch time, in seconds).
          schema:
            type: integer
            format: int64
          example: 1608850800
      responses:
        '200':
          description: Successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResultPage'
        '500':
          description: Unexpected error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /hardware/search-devices:
    get:
      tags:
        - Devices
      summary: Searches devices by name, model, manufacturer or serial number.
      description: >-
        Gets the DeviceSummary instances whose name, model, manufacturer or
        serial number match the specified criteria.<br><br>If a parent ID (group
        ID, application ID, or service ID) is provided, the function narrows
        down the devices list to those attached to the specified parent:<br>-
        use the <b>hardware/groups</b> service in the <b>Groups</b> section to
        get all available group IDs.<br>- use the <b>hardware/applications</b>
        service in the <b>Applications</b> section to get all available
        application IDs.<br>- use the <b>hardware/services</b> service in the
        <b>Services</b> section to get all available service
        IDs.<br><br><b>Note</b>: At most, one parent ID is taken into account
        according to this order of precedence:<ol><li>group
        ID</li><li>application ID</li><li>service ID</li></ol>
      operationId: searchDevices
      parameters:
        - name: searchTerms
          in: query
          description: Space-separated search criteria.
          required: true
          schema:
            type: string
          example: EMC Unity
        - name: groupId
          in: query
          description: The ID of the group.
          schema:
            type: string
          example: '0'
        - name: applicationId
          in: query
          description: The ID of the application.
          schema:
            type: string
          example: '0'
        - name: serviceId
          in: query
          description: The ID of the service.
          schema:
            type: string
          example: '0'
        - name: page
          in: query
          description: The page number to retrieve (first page is 0).
          schema:
            type: string
            format: int32
            default: '0'
        - name: limit
          in: query
          description: The maximum number of entries per page.
          schema:
            type: integer
            format: int32
            default: 100
      responses:
        '200':
          description: Successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResultPage'
        '404':
          description: No devices found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Unexpected error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /hardware/services:
    get:
      tags:
        - Services
      summary: Gets summarized information about all monitored services.
      description: Lists the available ServiceSummary instances.
      operationId: getServices
      parameters:
        - name: page
          in: query
          description: The page number to retrieve (first page is 0).
          schema:
            type: string
            format: int32
            default: '0'
        - name: limit
          in: query
          description: The maximum number of entries per page.
          schema:
            type: integer
            format: int32
            default: 100
        - name: direction
          in: query
          description: The sorting order (case insensitive).
          schema:
            type: string
            default: asc
            enum:
              - asc
              - desc
        - name: sort
          in: query
          description: The column to sort by (case insensitive).
          schema:
            type: string
            default: name
      responses:
        '200':
          description: Successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResultPage'
        '404':
          description: No services found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Unexpected error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /hardware/services/{serviceId}:
    get:
      tags:
        - Services
      summary: Gets detailed information about a specific service.
      description: >-
        You need to provide a <b>Service ID</b> ID :<br>- use the
        <b>hardware/services</b> service to get all available service IDs.
      operationId: getOneService
      parameters:
        - name: serviceId
          in: path
          description: The ID of the service.
          required: true
          schema:
            type: string
          example: '0'
      responses:
        '200':
          description: Successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ServiceSummary'
        '404':
          description: No services found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Unexpected error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    ActionResponse:
      type: object
      properties:
        pslOutput:
          type: string
          description: The output of the underlying PSL operation.
          example: '!!!SUCCESS!!!'
      description: >-
        The object encapsulating the output of an operation affecting the PATROL
        Agent.
    ApplicationSummary:
      type: object
      properties:
        id:
          type: string
          description: The ID of the application.
          example: '42'
        name:
          type: string
          description: The name of the application.
        deviceSummaries:
          type: array
          description: >-
            The list of devices attached to the application.<br><u>Note</u>:
            when using the <b>Applications</b> service, this list is always
            empty. It is populated only when using the <b>Application
            Details</b> service.
          items:
            $ref: '#/components/schemas/DeviceSummary'
        totalPowerConsumption:
          type: number
          description: >-
            The total power consumption of the devices attached to the
            application.
          format: double
        totalPowerConsumptionUnit:
          type: string
          description: >-
            The unit in which the total power consumption of the devices
            attached to the application is being expressed.
        heatingMargin:
          type: number
          description: >-
            The lowest heating margin among the heating margins of the devices
            attached to the application.<br><u>Note</u>:This field will only be
            present if a value could be found.
          format: double
        heatingMarginUnit:
          type: string
          description: >-
            The unit in which the heating margin of the application is being
            expressed.
        heatingMarginDeviceName:
          type: string
          description: >-
            The name of the device having the lowest heating
            margin.<br><u>Note</u>:This field will only be present if a value
            could be found.
        heatingMarginDeviceUrl:
          type: string
          description: >-
            The link to the details of the device having the lowest heating
            margin.<br><u>Note</u>:This field will only be present if a value
            could be found.
        heatingMarginCoverage:
          type: number
          description: >-
            The percentage of devices attached to the application, whose heating
            margin could be found.<br><u>Note</u>:This field will only be
            present if a value could be found.
          format: double
        oneDayEnergyConsumption:
          type: number
          description: >-
            The quantity of energy consumed by the devices attached to the
            application during one day.
          format: double
        oneDayCost:
          type: number
          description: >-
            The daily cost of the energy consumed by the devices attached to the
            application.<br><u>Note</u>:This field will only be present if a
            value could be computed.
          format: double
        oneDayEmittedCo2:
          type: number
          description: >-
            The quantity of CO<sub>2</sub> emitted by the devices attached to
            the application during one day.<br><u>Note</u>:This field will only
            be present if a value could be computed.
          format: double
        oneDayConfidence:
          type: number
          description: >-
            The confidence score (percentage) for the daily energy consumption,
            energy cost and CO<sub>2</sub> emission values.<br>The lower the
            confidence score, the more extrapolated the values are.
          format: double
        oneMonthEnergyConsumption:
          type: number
          description: >-
            The quantity of energy consumed by the devices attached to the
            application during one month.
          format: double
        oneMonthCost:
          type: number
          description: >-
            The monthly cost of the energy consumed by the devices attached to
            the application.<br><u>Note</u>:This field will only be present if a
            value could be computed.
          format: double
        oneMonthEmittedCo2:
          type: number
          description: >-
            The quantity of CO<sub>2</sub> emitted by the devices attached to
            the application during one month.<br><u>Note</u>:This field will
            only be present if a value could be computed.
          format: double
        oneMonthConfidence:
          type: number
          description: >-
            The confidence score (percentage) for the monthly energy
            consumption, energy cost and CO<sub>2</sub> emission values.<br>The
            lower the confidence score, the more extrapolated the values are.
          format: double
        oneYearEnergyConsumption:
          type: number
          description: >-
            The quantity of energy consumed by the devices attached to the
            application during one year.
          format: double
        oneYearCost:
          type: number
          description: >-
            The yearly cost of the energy consumed by the devices attached to
            the application.<br><u>Note</u>:This field will only be present if a
            value could be computed.
          format: double
        oneYearEmittedCo2:
          type: number
          description: >-
            The quantity of CO<sub>2</sub> emitted by the devices attached to
            the application in one year.<br><u>Note</u>:This field will only be
            present if a value could be computed.
          format: double
        oneYearConfidence:
          type: number
          description: >-
            The confidence score (percentage) for the yearly energy consumption,
            energy cost and CO<sub>2</sub> emission values.<br>The lower the
            confidence score, the more extrapolated the values are.
          format: double
        updateTimestamp:
          type: integer
          description: The data collection time (as an Epoch time, in seconds).
          format: int64
        url:
          type: string
          description: The link to the application details.
          example: '#/green-it/applications/349676/details'
        numberOfDevices:
          type: integer
          description: The number of devices attached to the application.
          format: int32
        energyConsumptionUnit:
          type: string
          description: The unit in which all energy consumption values are being expressed.
        costUnit:
          type: string
          description: The currency in which all energy cost values are being expressed.
        emittedCo2Unit:
          type: string
          description: >-
            The unit in which all CO<sub>2</sub> emission values are being
            expressed.
        historyParentIdKey:
          type: string
          description: >-
            The name of the key used to identify the application in the history
            table.
    DeviceAgent:
      type: object
      properties:
        os:
          type: string
          description: The operating system the PATROL Agent is running on.
          example: Linux
        name:
          type: string
          description: The FQDN of the PATROL Agent.
          example: name.domain
        version:
          type: string
          description: The version of the PATROL Agent.
          example: V11.3.02i
        port:
          type: string
          description: The port the PATROL Agent is running on.
          example: '3181'
        id:
          type: string
          description: The ID of the PATROL Agent.
          example: '9'
        connectionStatus:
          type: string
          description: The status of the PATROL Agent's connection.
          example: Connection Active
        url:
          type: string
          description: The link to the 'Monitors' tab of the PATROL Agent.
          example: '#/devices/42/2/monitorTab'
      description: Contains all information regarding a specific PATROL Agent.
    DeviceSummary:
      type: object
      properties:
        id:
          type: integer
          description: The ID of the device.
          format: int32
          example: 42
        name:
          type: string
          description: The ID of the device.
        sid:
          type: string
          description: The SID of the device.
          example: cisco-c240-imc
        serverId:
          type: integer
          description: The ID of the server the device is attached to.
          format: int32
          example: 42
        serverName:
          type: string
          description: The name of the server the device is attached to.
          example: name.domain
        agentId:
          type: integer
          description: The ID of the PATROL Agent the device is attached to.
          format: int32
          example: 42
        agentName:
          type: string
          description: The name of the PATROL Agent the device is attached to.
          example: name.domain
        powerConsumption:
          type: number
          description: The power consumption of the device.
          format: double
        powerConsumptionUnit:
          type: string
          description: >-
            The unit in which the power consumption of the device is being
            expressed.
        heatingMargin:
          type: number
          description: >-
            The heating margin of the device.<br><u>Note</u>:This field will
            only be present if a value could be found.
          format: double
        heatingMarginUnit:
          type: string
          description: >-
            The unit in which the heating margin of the device is being
            expressed.<br><u>Note</u>:This field will only be present if a value
            could be found.
          example: Celsius degrees
        collectTime:
          type: string
          description: >-
            The collection time of the heating margin (as an Epoch time, in
            seconds).<br><u>Note</u>:This field will only be present if a value
            could be found.
        deviceUrl:
          type: string
          description: The link to the device details.
          example: '#/hardware-sentry/devices/42/details'
        updateTimestamp:
          type: integer
          description: The data collection time (as an Epoch time, in seconds).
          format: int64
        ambientTemperature:
          type: number
          description: The ambient temperature of the device.
          format: double
        type:
          type: string
          enum:
            - DEFAULT
            - ESX_HOST
            - VIRTUAL_MACHINE
            - VIRTUAL_CENTER
            - XEN_HOST
            - XEN_MASTER_SERVER
            - XEN_VIRTUAL_MACHINE
            - XENAPP_CONTROLLER
            - XENAPP_MACHINE
            - VBLOCK_ESX
            - VBLOCK_VIRTUAL_MACHINE
            - VBLOCK_SWITCH
            - VBLOCK_STORAGE
            - VBLOCK_CHASSIS
            - VBLOCK_BLADE
            - VBLOCK_ENV
            - AIX_BOX
            - AIX_HARD_PARTITION
            - AIX_POOL
            - AIX_LPAR
            - AIX_WPAR
            - SOL_SYSTEM
            - SOL_FRAME
            - SOL_ZONE
            - SOL_LDOM
            - REDHAT_KVM_HOST
            - REDHAT_KVM_GUEST_INSTANCE
            - REDHAT_XEN_HOST
            - REDHAT_VM
            - HP_SYSTEM
            - HP_NPAR
            - HP_VPAR
            - HP_INT_VM
            - HP_INT_HOST
            - MS_HOST
            - MS_VM
            - AZURE_VIRTUALMACHINE
            - AMAZON_EC2
            - OS400_HOST
            - DOCKER_HOST
            - DOCKER_NODE
            - DOCKER_CONTAINER
            - ROUTER
            - HUB
            - PRINTER
            - REPEATER
            - WORKSTATION
            - NTSERVER
            - PRINETSERVER
            - RMONPROBE
            - WEBSERVER
            - DBSERVER
            - MAILSERVER
            - FIREWALL
            - OTHERS
            - APPSERVER
            - DEDICATEDAGENT
            - REMOTEAGENT
            - LAYER_3_SWITCH
            - CENTRAL_OFFICE_SWITCH
            - ACCESS_SERVER
            - I_O
            - WEB_CACHING
            - MANAGEMENT
            - BLOCK_SERVER
            - FILE_SERVER
            - MOBILE_USER_DEVICE
            - BRIDGE_OR_EXTENDER
            - GATEWAY
            - LOADBALANCER
            - MAINFRAME
            - SANSWITCH
            - SANHUB
            - SANBRIDGE
            - SANROUTER
            - SANDIRECTOR
            - RAIDSTORAGEDEVICE
            - VIRTUAL_TAPE_LIBRARY
            - JBOD
            - STORAGESUBSYSTEM
            - STORAGE_VIRTUALIZER
            - MEDIA_LIBRARY
            - EXTENDERNODE
            - NAS_HEAD
            - SELFCONTAINED_NAS
            - UPS
            - IP_PHONE
            - MANAGEMENT_CONTROLLER
            - CHASSIS_MANAGER
            - HOSTBASED_RAID_CONTROLLER
            - STORAGE_DEVICE_ENCLOSURE
            - DESKTOP
            - LAPTOP
            - VIRTUAL_LIBRARY_SYSTEM
            - BLADE_SYSTEM
            - BLADE_SERVER
            - VPN_CONCENTRATOR
            - PROXY_SERVER
            - LAYER_3_PROXY_SERVER
            - WAN_ACCELERATOR
            - SAN_PROCESSOR
            - VIRTUAL_SERVER_RHL
            - VIRTUAL_SERVER_WINDOWS
            - ESXi
            - VIRTUAL_SERVER
            - HYPERVISOR
            - AWS_AMI
            - MS_AZURE
            - UNKNOWN
        deviceTSMOKey:
          type: string
          description: The TSMOKey of the device.
          example: 2+501040 462
        productVersion:
          type: string
          description: >-
            The Hardware Sentry KM version of the device's
            Monitor.<br><u>Note</u>:This field will only be present if a value
            could be found.
    ErrorResponse:
      type: object
      properties:
        message:
          type: string
          description: The error message.
          example: No data found
        date:
          type: string
          description: The timestamp of the error.
          format: date-time
        code:
          type: string
          description: The error's business identifier.
          example: GENERAL_ERROR
    GlobalSummary:
      type: object
      properties:
        id:
          type: string
          description: The ID of the global summary (this ID will always be "global").
        totalPowerConsumption:
          type: number
          description: The total power consumption of all the devices.
          format: double
        heatingMargin:
          type: number
          description: >-
            The lowest heating margin among the heating margins of all the
            devices.<br><u>Note</u>:This field will only be present if a value
            could be found.
          format: double
        heatingMarginCoverage:
          type: number
          description: >-
            The percentage of devices whose heating margin could be
            found.<br><u>Note</u>:This field will only be present if a value
            could be found.
          format: double
        heatingMarginDeviceUrl:
          type: string
          description: >-
            The link to the details of the device having the lowest heating
            margin.<br><u>Note</u>:This field will only be present if a value
            could be found.
          example: '#/hardware-sentry/devices/3/details'
        heatingMarginDeviceName:
          type: string
          description: >-
            The name of the device having the lowest heating
            margin.<br><u>Note</u>:This field will only be present if a value
            could be found.
        energyCost:
          type: number
          description: >-
            The electricity rate for all devices. This value can be updated by
            users with sufficient permissions.
          format: double
        co2Emission:
          type: number
          description: >-
            The CO<sub>2</sub> emissions for all devices. This value can be
            updated by users with sufficient permissions.
          format: double
        groupNameFilter:
          type: string
          description: >-
            Regular expression used to filter the groups for which the power
            consumption will be reported.
          example: Group [0-9]+
        updateTimestamp:
          type: integer
          description: The data collection time (as an Epoch time, in seconds).
          format: int64
        totalPowerConsumptionUnit:
          type: string
          description: The unit in which the total power consumption is being expressed.
        heatingMarginUnit:
          type: string
          description: The unit in which the heating margin is being expressed.
        energyCostUnit:
          type: string
          description: The unit in which the electricity rate is being expressed.
        co2EmissionUnit:
          type: string
          description: The unit in which the CO<sub>2</sub> emission is being expressed.
        editable:
          type: boolean
          description: >-
            If <em>true</em>, indicates that you do not have sufficient rights
            to update the global settings. However, you may still have
            sufficient rights to update a specific group's setting.
    GroupConfiguration:
      type: object
      properties:
        energyCost:
          type: number
          description: 'Updates the electricity rate (unit: $/kWh).'
          format: double
          example: 0.3
        co2Emission:
          type: number
          description: 'Updates the CO<sub>2</sub> emission (unit: kg/kWh).'
          format: double
          example: 0.3
        groupNameFilter:
          type: string
          description: >-
            Updates the regular expression used to filter the groups for which
            the power consumption should be reported.
          example: Group [0-9]+
      description: >-
        The deserialized form of the <b>Energy Footprint Update</b> service's
        request payload.
    GroupSummary:
      type: object
      properties:
        id:
          type: string
          description: The ID of the group.
          example: '42'
        name:
          type: string
          description: The name of the group.
        serverId:
          type: integer
          description: The ID of the server the group is attached to.
          format: int32
          example: 42
        deviceSummaries:
          type: array
          items:
            $ref: '#/components/schemas/DeviceSummary'
        totalPowerConsumption:
          type: number
          description: The total power consumption of the devices attached to the group.
          format: double
        totalPowerConsumptionUnit:
          type: string
          description: >-
            The unit in which the total power consumption of the devices
            attached to the group is being expressed.
        heatingMargin:
          type: number
          description: >-
            The lowest heating margin among the heating margins of the devices
            attached to the group.<br><u>Note</u>:This field will only be
            present if a value could be found.
          format: double
        heatingMarginUnit:
          type: string
          description: >-
            The unit in which the heating margin of the group is being
            expressed.
        heatingMarginDeviceName:
          type: string
          description: >-
            The name of the device having the lowest heating
            margin.<br><u>Note</u>:This field will only be present if a value
            could be found.
        heatingMarginDeviceUrl:
          type: string
          description: >-
            The link to the details of the device having the lowest heating
            margin.<br><u>Note</u>:This field will only be present if a value
            could be found.
        heatingMarginCoverage:
          type: number
          description: >-
            The percentage of devices attached to the group, whose heating
            margin could be found.<br><u>Note</u>:This field will only be
            present if a value could be found.
          format: double
        energyCost:
          type: number
          description: >-
            The electricity rate for all devices attached to the group. This
            value can be updated by users with sufficient permissions.
          format: double
        co2Emission:
          type: number
          description: >-
            The CO<sub>2</sub> emissions for all devices attached to the group.
            This value can be updated by users with sufficient permissions.
          format: double
        oneDayEnergyConsumption:
          type: number
          description: >-
            The quantity of energy consumed by the devices attached to the group
            during one day.
          format: double
        oneDayCost:
          type: number
          description: >-
            The daily cost of the energy consumed by the devices attached to the
            group.<br><u>Note</u>:This field will only be present if a value
            could be computed.
          format: double
        oneDayEmittedCo2:
          type: number
          description: >-
            The quantity of CO<sub>2</sub> emitted by the devices attached to
            the group during one day.<br><u>Note</u>:This field will only be
            present if a value could be computed.
          format: double
        oneDayConfidence:
          type: number
          description: >-
            The confidence score (percentage) for the daily energy consumption,
            energy cost and CO<sub>2</sub> emission values.<br>The lower the
            confidence score, the more extrapolated the values are.
          format: double
        oneMonthEnergyConsumption:
          type: number
          description: >-
            The quantity of energy consumed by the devices attached to the group
            during one month.
          format: double
        oneMonthCost:
          type: number
          description: >-
            The monthly cost of the energy consumed by the devices attached to
            the group.<br><u>Note</u>:This field will only be present if a value
            could be computed.
          format: double
        oneMonthEmittedCo2:
          type: number
          description: >-
            The quantity of CO<sub>2</sub> emitted by the devices attached to
            the group during one month.<br><u>Note</u>:This field will only be
            present if a value could be computed.
          format: double
        oneMonthConfidence:
          type: number
          description: >-
            The confidence score (percentage) for the monthly energy
            consumption, energy cost and CO<sub>2</sub> emission values.<br>The
            lower the confidence score, the more extrapolated the values are.
          format: double
        oneYearEnergyConsumption:
          type: number
          description: >-
            The quantity of energy consumed by the devices attached to the group
            during one year.
          format: double
        oneYearCost:
          type: number
          description: >-
            The yearly cost of the energy consumed by the devices attached to
            the group.<br><u>Note</u>:This field will only be present if a value
            could be computed.
          format: double
        oneYearEmittedCo2:
          type: number
          description: >-
            The quantity of CO<sub>2</sub> emitted by the devices attached to
            the group in one year.<br><u>Note</u>:This field will only be
            present if a value could be computed.
          format: double
        oneYearConfidence:
          type: number
          description: >-
            The confidence score (percentage) for the yearly energy consumption,
            energy cost and CO<sub>2</sub> emission values.<br>The lower the
            confidence score, the more extrapolated the values are.
          format: double
        updateTimestamp:
          type: integer
          description: The data collection time (as an Epoch time, in seconds).
          format: int64
        url:
          type: string
          description: The link to the group details.
          example: '#/green-it/groups/13/details'
        numberOfDevices:
          type: integer
          description: The number of devices attached to the group.
          format: int32
        energyCostUnit:
          type: string
          description: >-
            The unit in which th euser-defined electricity rate value is being
            expressed.
        ambientTemperature:
          type: number
          description: >-
            The average ambient temperature based on the ambient temperatures of
            the devices attached to the group.
          format: double
        ambientTemperatureUnit:
          type: string
          description: The unit in which the ambient temperature value is being expressed.
        co2EmissionUnit:
          type: string
          description: >-
            The unit in which the user-defined CO<sub>2</sub> emission value is
            being expressed.
        energyConsumptionUnit:
          type: string
          description: The unit in which all energy consumption values are being expressed.
        costUnit:
          type: string
          description: The currency in which all energy cost values are being expressed.
        emittedCo2Unit:
          type: string
          description: >-
            The unit in which all emitted CO<sub>2</sub> quantities are being
            expressed.
        historyParentIdKey:
          type: string
        editable:
          type: boolean
          description: The name of the key used to identify the group in the history table.
    ReinitializeActionConfiguration:
      type: object
      properties:
        resetDiscoveryAndPollingIntervals:
          type: integer
          description: >-
            When set to <em>1</em>, removes all user-defined frequencies for
            discovery and polling processes to their default values
            (respectively 1 hour and 2 minutes).
          format: int32
          example: 1
          enum:
            - 0
            - 1
        resetAlertAfterNTimes:
          type: integer
          description: >-
            When set to <em>1</em>, resets the number of times thresholds can be
            breached before triggering an alert to their default values (1 time)
            for numeric, discrete, connector status and present parameters.
          format: int32
          example: 1
          enum:
            - 0
            - 1
        resetAlertActions:
          type: integer
          description: >-
            When set to <em>1</em>, removes all manually set Alert Actions and
            reverts to basic default actions i.e. trigger a PATROL event and
            annotate a parameter graph.
          format: int32
          example: 1
          enum:
            - 0
            - 1
        resetOtherAlertSettings:
          type: integer
          description: >-
            When set to <em>1</em>, reverts any manually performed configuration
            changes to the default Hardware Sentry values.
          format: int32
          example: 1
          enum:
            - 0
            - 1
        resetDebugMode:
          type: integer
          description: >-
            When set to <em>1</em>, deactivates the debug mode when it was
            manually enabled.
          format: int32
          example: 1
          enum:
            - 0
            - 1
        resetRemovedPausedObjectList:
          type: integer
          description: >-
            When set to <em>1</em>, reactivates the monitoring of all paused or
            removed objects.
          format: int32
          example: 1
          enum:
            - 0
            - 1
        resetReportSettings:
          type: integer
          description: When set to <em>1</em>, clears the report schedule.
          format: int32
          example: 1
          enum:
            - 0
            - 1
        resetJavaSettings:
          type: integer
          description: >-
            When set to <em>1</em>, removes the custom Java settings (path and
            credentials). The KM will try to automatically find a suitable JRE.
          format: int32
          example: 1
          enum:
            - 0
            - 1
        resetThresholds:
          type: integer
          description: When set to <em>1</em>, resets all thresholds.
          format: int32
          example: 1
          enum:
            - 0
            - 1
      description: >-
        The deserialized form of the <b>Reinitialize</b> service's request
        payload.
    ResultPage:
      type: object
      properties:
        items:
          type: array
          description: The list of currently accessible results.
          items:
            type: object
            properties: {}
        total:
          type: integer
          description: >-
            The total number of accessible results, including the results not
            listed in <em>items</em>.
          format: int64
        restrictedRights:
          type: boolean
          description: >-
            If <em>true</em>, indicates that you are denied access to part of,
            or all the results.
          example: false
      description: Encapsulates a list of results.
    ServiceSummary:
      type: object
      properties:
        id:
          type: string
          description: The ID of the service.
          example: 2+mc.pncell_dev-tsim.internal.sentrysoftware.net.1f485a2f.0
        name:
          type: string
          description: The name of the service.
        providerId:
          type: string
          description: The ID of the server providing the service.
          example: '42'
        deviceSummaries:
          type: array
          description: >-
            The list of devices attached to the service.<br><u>Note</u>: when
            using the <b>Services</b> service, this list is always empty. It is
            populated only when using the <b>Service Details</b> service.
          items:
            $ref: '#/components/schemas/DeviceSummary'
        totalPowerConsumption:
          type: number
          description: The total power consumption of the devices attached to the service.
          format: double
        totalPowerConsumptionUnit:
          type: string
          description: >-
            The unit in which the total power consumption of the devices
            attached to the service is being expressed.
        heatingMargin:
          type: number
          description: >-
            The lowest heating margin among the heating margins of the devices
            attached to the service.<br><u>Note</u>:This field will only be
            present if a value could be found.
          format: double
        heatingMarginUnit:
          type: string
          description: >-
            The unit in which the heating margin of the service is being
            expressed.
        heatingMarginDeviceName:
          type: string
          description: >-
            The name of the device having the lowest heating
            margin.<br><u>Note</u>:This field will only be present if a value
            could be found.
        heatingMarginDeviceUrl:
          type: string
          description: >-
            The link to the details of the device having the lowest heating
            margin.<br><u>Note</u>:This field will only be present if a value
            could be found.
        heatingMarginCoverage:
          type: number
          description: >-
            The percentage of devices attached to the service, whose heating
            margin could be found.<br><u>Note</u>:This field will only be
            present if a value could be found.
          format: double
        oneDayEnergyConsumption:
          type: number
          description: >-
            The quantity of energy consumed by the devices attached to the
            service during one day.
          format: double
        oneDayCost:
          type: number
          description: >-
            The daily cost of the energy consumed by the devices attached to the
            service.<br><u>Note</u>:This field will only be present if a value
            could be computed.
          format: double
        oneDayEmittedCo2:
          type: number
          description: >-
            The quantity of CO<sub>2</sub> emitted by the devices attached to
            the service during one day.<br><u>Note</u>:This field will only be
            present if a value could be computed.
          format: double
        oneDayConfidence:
          type: number
          description: >-
            The confidence score (percentage) for the daily energy consumption,
            energy cost and CO<sub>2</sub> emission values.<br>The lower the
            confidence score, the more extrapolated the values are.
          format: double
        oneMonthEnergyConsumption:
          type: number
          description: >-
            The quantity of energy consumed by the devices attached to the
            service during one month.
          format: double
        oneMonthCost:
          type: number
          description: >-
            The monthly cost of the energy consumed by the devices attached to
            the service.<br><u>Note</u>:This field will only be present if a
            value could be computed.
          format: double
        oneMonthEmittedCo2:
          type: number
          description: >-
            The quantity of CO<sub>2</sub> emitted by the devices attached to
            the service during one month.<br><u>Note</u>:This field will only be
            present if a value could be computed.
          format: double
        oneMonthConfidence:
          type: number
          description: >-
            The confidence score (percentage) for the monthly energy
            consumption, energy cost and CO<sub>2</sub> emission values.<br>The
            lower the confidence score, the more extrapolated the values are.
          format: double
        oneYearEnergyConsumption:
          type: number
          description: >-
            The quantity of energy consumed by the devices attached to the
            service during one year.
          format: double
        oneYearCost:
          type: number
          description: >-
            The yearly cost of the energy consumed by the devices attached to
            the service.<br><u>Note</u>:This field will only be present if a
            value could be computed.
          format: double
        oneYearEmittedCo2:
          type: number
          description: >-
            The quantity of CO<sub>2</sub> emitted by the devices attached to
            the service in one year.<br><u>Note</u>:This field will only be
            present if a value could be computed.
          format: double
        oneYearConfidence:
          type: number
          description: >-
            The confidence score (percentage) for the yearly energy consumption,
            energy cost and CO<sub>2</sub> emission values.<br>The lower the
            confidence score, the more extrapolated the values are.
          format: double
        updateTimestamp:
          type: integer
          description: The data collection time (as an Epoch time, in seconds).
          format: int64
        url:
          type: string
          description: The link to the service details.
          example: >-
            #/green-it/services/2+mc.pncell_dev-tsim.internal.sentrysoftware.net.1f485a2f.0/details
        numberOfDevices:
          type: integer
          description: The number of devices attached to the service.
          format: int32
        energyConsumptionUnit:
          type: string
          description: The unit in which all energy consumption values are being expressed.
        costUnit:
          type: string
          description: The currency in which all energy cost values are being expressed.
        emittedCo2Unit:
          type: string
          description: >-
            The unit in which all CO<sub>2</sub> emission values are being
            expressed.
        historyParentIdKey:
          type: string
          description: >-
            The name of the key used to identify the service in the history
            table.
  securitySchemes:
    Authorization:
      type: apiKey
      name: Authorization
      in: header
      description: "Represents API Key `Authorization`"
security:
    - Authorization: []
