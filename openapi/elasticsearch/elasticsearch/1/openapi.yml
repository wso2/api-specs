openapi: 3.0.1
info:
  title: Elastic Cloud API
  description: This is a generated connector for [Elastic Cloud API](https://cloud.elastic.co/api/v1/api-docs/spec.json) OpenAPI Specification.
  version: "1"
  x-ballerina-init-description: >
    The connector initialization requires setting the API credentials. 

    Please create a [Elastic](https://cloud.elastic.co/) account and obtain tokens by following [this guide](https://www.elastic.co/guide/en/elasticsearch/reference/7.16/setting-up-authentication.html).
  x-ballerina-display:
   label: Elasticsearch
   iconPath: "icon.png"
  x-marketplace-tags:
    - name: Featured
      description: Featured APIs are hand-picked for display purposes.
servers:
- url: https://api.elastic-cloud.com/api/v1/
security:
- apiKey: []
tags:
- name: Accounts
- name: Authentication
- name: BillingCostsAnalysis
- name: DeploymentTemplates
- name: Deployments
- name: DeploymentsTrafficFilter
- name: Extensions
- name: Stack
paths:
  /deployments/{deployment_id}/elasticsearch/{ref_id}/_shutdown:
    post:
      tags:
      - Deployments
      summary: Shutdown Deployment Elasticsearch Resource
      description: Shutdown Elasticsearch Resource belonging to a given Deployment.
      operationId: shutdown-deployment-es-resource
      parameters:
      - name: deployment_id
        in: path
        description: Identifier for the Deployment.
        required: true
        schema:
          type: string
      - name: ref_id
        in: path
        description: User-specified RefId for the Resource.
        required: true
        schema:
          type: string
      - name: hide
        in: query
        description: Hide cluster on shutdown. Hidden clusters are not listed by default.
          Only applicable for Platform administrators.
        schema:
          type: boolean
      - name: skip_snapshot
        in: query
        description: If true, will skip taking a snapshot of the cluster before shutting
          the cluster down (if even possible).
        schema:
          type: boolean
          default: false
      responses:
        200:
          description: Standard response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DeploymentResourceCommandResponse'
        400:
          description: 'Parameter is restricted and can only be set by a Platform
            administrator. (code: `deployments.restricted_parameter`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - deployments.restricted_parameter
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
        404:
          description: |-
            * The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)
            * The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - deployments.deployment_not_found
                - deployments.deployment_resource_not_found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
        500:
          description: 'A Resource that was previously stored no longer exists. (code:
            `deployments.deployment_resource_no_longer_exists`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - deployments.deployment_resource_no_longer_exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
      x-doc:
        tag: Deployment - Commands
  /deployments/{deployment_id}/{resource_kind}/{ref_id}/instances/_start:
    post:
      tags:
      - Deployments
      summary: Start all instances
      description: Starts all instances belonging to a Deployment Resource.
      operationId: start-deployment-resource-instances-all
      parameters:
      - name: deployment_id
        in: path
        description: Identifier for the Deployment.
        required: true
        schema:
          type: string
      - name: resource_kind
        in: path
        description: The kind of resource (one of elasticsearch, kibana, apm, or integrations_server).
        required: true
        schema:
          type: string
      - name: ref_id
        in: path
        description: User-specified RefId for the Resource.
        required: true
        schema:
          type: string
      responses:
        202:
          description: The start command was issued successfully.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DeploymentResourceCommandResponse'
        403:
          description: 'The start maintenance mode command was prohibited for the
            given Resource. (code: `deployments.instance_update_prohibited_error`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - deployments.instance_update_prohibited_error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
        404:
          description: |-
            * The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)
            * The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)
            * One or more instances of the given resource type are missing. (code: `deployments.instances_missing_on_update_error`)
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - deployments.deployment_not_found
                - deployments.deployment_resource_not_found
                - deployments.instances_missing_on_update_error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
        449:
          description: 'Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - root.unauthorized.rbac.elevated_permissions_required
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
        500:
          description: 'A Resource that was previously stored no longer exists. (code:
            `deployments.deployment_resource_no_longer_exists`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - deployments.deployment_resource_no_longer_exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
      x-doc:
        tag: Deployment - Commands
  /stack/versions:
    get:
      tags:
      - Stack
      summary: Get stack versions
      description: By default, retrieves only the available Elastic Stack versions.
        To retrieve all of the Elastic Stack versions, use the `show_deleted parameter`.
      operationId: get-version-stacks
      parameters:
      - name: show_deleted
        in: query
        description: Whether to show deleted stack versions or not
        schema:
          type: boolean
          default: false
      - name: show_unusable
        in: query
        description: Whether to show versions that are unusable by the authenticated
          user
        schema:
          type: boolean
          default: false
      responses:
        200:
          description: The list of all available Elastic Stack versions are retrieved,
            including the template version and structure.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StackVersionConfigs'
      x-doc:
        tag: Stack - Versions - CRUD
  /deployments/{deployment_id}/{resource_kind}/{ref_id}/_restore:
    post:
      tags:
      - Deployments
      summary: Restores a shutdown resource
      description: Restores a shutdown resource belonging to a given Deployment.
      operationId: restore-deployment-resource
      parameters:
      - name: deployment_id
        in: path
        description: Identifier for the Deployment
        required: true
        schema:
          type: string
      - name: resource_kind
        in: path
        description: The kind of resource
        required: true
        schema:
          type: string
          enum:
          - elasticsearch
          - kibana
          - apm
          - appsearch
          - enterprise_search
          - integrations_server
      - name: ref_id
        in: path
        description: User-specified RefId for the Resource
        required: true
        schema:
          type: string
      - name: restore_snapshot
        in: query
        description: Whether or not to restore a snapshot for those resources that
          allow it.
        schema:
          type: boolean
          default: false
      responses:
        200:
          description: Standard Deployment Resource Crud Response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DeploymentResourceCrudResponse'
        400:
          description: |-
            * The Resource does not have a pending plan. (code: `deployments.resource_does_not_have_a_pending_plan`)
            * The resource is not shut down. (code: `deployments.resource_not_shutdown`)
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - deployments.resource_does_not_have_a_pending_plan
                - deployments.resource_not_shutdown
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
        404:
          description: 'The Deployment specified by {deployment_id} cannot be found.
            (code: `deployments.deployment_not_found`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - deployments.deployment_not_found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
        449:
          description: 'Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - root.unauthorized.rbac.elevated_permissions_required
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
      x-doc:
        tag: Deployment Resources - CRUD
  /deployments/{deployment_id}/_restore:
    post:
      tags:
      - Deployments
      summary: Restores a shutdown Deployment
      description: Restores all resources in a Deployment.
      operationId: restore-deployment
      parameters:
      - name: deployment_id
        in: path
        description: Identifier for the Deployment
        required: true
        schema:
          type: string
      - name: restore_snapshot
        in: query
        description: Whether or not to restore a snapshot for those resources that
          allow it.
        schema:
          type: boolean
          default: false
      responses:
        200:
          description: The request was valid and the resources of the deployment were
            restored.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DeploymentRestoreResponse'
        400:
          description: There are Elasticsearch resources in the deployment which are
            not shut down.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
        401:
          description: You are not authorized to perform this action.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
        404:
          description: 'The Deployment specified by {deployment_id} cannot be found.
            (code: `deployments.deployment_not_found`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - deployments.deployment_not_found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
      x-doc:
        tag: Deployment - CRUD
  /deployments/templates:
    get:
      tags:
      - DeploymentTemplates
      summary: Get deployment templates
      description: Retrieves all deployment templates.
      operationId: get-deployment-templates-v2
      parameters:
      - name: metadata
        in: query
        description: An optional key/value pair in the form of (key:value) that will
          act as a filter and exclude any templates that do not have a matching metadata
          item associated.
        schema:
          type: string
      - name: show_instance_configurations
        in: query
        description: If true, will return details for each instance configuration
          referenced by the template.
        schema:
          type: boolean
          default: true
      - name: show_max_zones
        in: query
        description: If true, will populate the max_zones field in the instance configurations.
          Only relevant if show_instance_configurations=true.
        schema:
          type: boolean
          default: false
      - name: stack_version
        in: query
        description: If present, it will cause the returned deployment templates to
          be adapted to return only the elements allowed in that version.
        schema:
          type: string
      - name: region
        in: query
        description: Region of the deployment templates
        required: true
        schema:
          type: string
      responses:
        200:
          description: The deployment templates were returned successfully.
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeploymentTemplateInfoV2'
        400:
          description: 'The requested region was not found. (code: `templates.region_not_found`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - templates.region_not_found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
        401:
          description: 'The user is not authorized to access requested region. (code:
            `templates.region_not_allowed`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - templates.region_not_allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
      x-doc:
        tag: Deployments - Templates
  /users/auth/keys/{api_key_id}:
    get:
      tags:
      - Authentication
      summary: Get API key
      description: Retrieves the metadata for an API key.
      operationId: get-api-key
      parameters:
      - name: api_key_id
        in: path
        description: The API Key ID.
        required: true
        schema:
          type: string
      responses:
        200:
          description: The API key metadata is retrieved.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiKeyResponse'
        404:
          description: 'The {api_key_id} can''t be found. (code: `api_keys.key_not_found`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - api_keys.key_not_found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
      x-doc:
        tag: Authentication
    delete:
      tags:
      - Authentication
      summary: Delete API key
      description: Delete or invalidate the API key.
      operationId: delete-api-key
      parameters:
      - name: api_key_id
        in: path
        description: The API Key ID.
        required: true
        schema:
          type: string
      responses:
        200:
          description: The API key is deleted.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        404:
          description: 'The {api_key_id} can''t be found. (code: `api_keys.key_not_found`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - api_keys.key_not_found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
        449:
          description: 'Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - root.unauthorized.rbac.elevated_permissions_required
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
      x-doc:
        tag: Authentication
  /account:
    get:
      tags:
      - Accounts
      summary: Fetch current account information
      description: Fetch current account information.
      operationId: get-current-account
      responses:
        200:
          description: Account fetched successfully
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccountResponse'
        404:
          description: 'Account not found. (code: `accounts.not_found`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - accounts.not_found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
      x-doc:
        tag: Accounts
    put:
      tags:
      - Accounts
      summary: Updates the current account
      description: Updates the current account.
      operationId: update-current-account
      requestBody:
        description: the current account
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountUpdateRequest'
        required: true
      responses:
        200:
          description: Account updated successfully
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccountResponse'
        404:
          description: 'Account not found. (code: `accounts.not_found`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - accounts.not_found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
      x-doc:
        tag: Accounts
      x-codegen-request-body-name: body
    patch:
      tags:
      - Accounts
      summary: Updates the current account
      description: Updates the current account.
      operationId: patch-current-account
      requestBody:
        description: All changes in the specified object are applied to the current
          account according to the JSON Merge Patch processing rules. Omitting existing
          fields causes the same values to be reapplied. Specifying a `null` value
          reverts the field to the default value, or removes the field when no default
          value exists.
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: Account updated successfully
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccountResponse'
        404:
          description: 'Account not found. (code: `accounts.not_found`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - accounts.not_found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
      x-doc:
        tag: Accounts
      x-codegen-request-body-name: body
  /deployments/{deployment_id}/elasticsearch/{ref_id}/remote-clusters:
    get:
      tags:
      - Deployments
      summary: Get remote clusters
      description: Returns the list of remote clusters for the elasticsearch resource.
      operationId: get-deployment-es-resource-remote-clusters
      parameters:
      - name: deployment_id
        in: path
        description: Identifier for the Deployment.
        required: true
        schema:
          type: string
      - name: ref_id
        in: path
        description: User-specified RefId for the Resource.
        required: true
        schema:
          type: string
      responses:
        200:
          description: List of remote clusters for the resource
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RemoteResources'
        404:
          description: |-
            * The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)
            * The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - deployments.deployment_not_found
                - deployments.deployment_resource_not_found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
      x-doc:
        tag: Deployment - Remote Clusters
    put:
      tags:
      - Deployments
      summary: Set remote clusters
      description: Overwrites or creates the remote clusters for the elasticsearch
        resource.
      operationId: set-deployment-es-resource-remote-clusters
      parameters:
      - name: deployment_id
        in: path
        description: Identifier for the Deployment.
        required: true
        schema:
          type: string
      - name: ref_id
        in: path
        description: User-specified RefId for the Resource.
        required: true
        schema:
          type: string
      requestBody:
        description: List of remote clusters for the resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoteResources'
        required: true
      responses:
        202:
          description: The Remote Clusters were updated
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        404:
          description: |-
            * The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)
            * The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - deployments.deployment_not_found
                - deployments.deployment_resource_not_found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
        449:
          description: 'Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - root.unauthorized.rbac.elevated_permissions_required
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
      x-doc:
        tag: Deployment - Remote Clusters
      x-codegen-request-body-name: body
  # /deployments/{deployment_id}/{resource_kind}/{ref_id}/instances/{instance_ids}/_stop:
  #   post:
  #     tags:
  #     - Deployments
  #     summary: Stop instances
  #     description: Stops instances belonging to a Deployment Resource.
  #     operationId: stop-deployment-resource-instances
  #     parameters:
  #     - name: deployment_id
  #       in: path
  #       description: Identifier for the Deployment.
  #       required: true
  #       schema:
  #         type: string
  #     - name: resource_kind
  #       in: path
  #       description: The kind of resource (one of elasticsearch, kibana, apm, or integrations_server).
  #       required: true
  #       schema:
  #         type: string
  #     - name: ref_id
  #       in: path
  #       description: User-specified RefId for the Resource.
  #       required: true
  #       schema:
  #         type: string
  #     - name: instance_ids
  #       in: path
  #       description: A comma-separated list of instance identifiers.
  #       required: true
  #       style: simple
  #       explode: false
  #       schema:
  #         type: array
  #         items:
  #           type: string
  #     - name: ignore_missing
  #       in: query
  #       description: If true and the instance does not exist then quietly proceed
  #         to the next instance, otherwise treated as an error.
  #       schema:
  #         type: boolean
  #         default: false
  #     responses:
  #       202:
  #         description: The stop command was issued successfully.
  #         content:
  #           '*/*':
  #             schema:
  #               $ref: '#/components/schemas/DeploymentResourceCommandResponse'
  #       403:
  #         description: 'The start maintenance mode command was prohibited for the
  #           given Resource. (code: `deployments.instance_update_prohibited_error`)'
  #         headers:
  #           x-cloud-error-codes:
  #             description: The error codes associated with the response
  #             schema:
  #               type: string
  #               enum:
  #               - deployments.instance_update_prohibited_error
  #         content:
  #           '*/*':
  #             schema:
  #               $ref: '#/components/schemas/BasicFailedReply'
  #       404:
  #         description: |-
  #           * The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)
  #           * The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)
  #           * One or more instances of the given resource type are missing. (code: `deployments.instances_missing_on_update_error`)
  #         headers:
  #           x-cloud-error-codes:
  #             description: The error codes associated with the response
  #             schema:
  #               type: string
  #               enum:
  #               - deployments.deployment_not_found
  #               - deployments.deployment_resource_not_found
  #               - deployments.instances_missing_on_update_error
  #         content:
  #           '*/*':
  #             schema:
  #               $ref: '#/components/schemas/BasicFailedReply'
  #       449:
  #         description: 'Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)'
  #         headers:
  #           x-cloud-error-codes:
  #             description: The error codes associated with the response
  #             schema:
  #               type: string
  #               enum:
  #               - root.unauthorized.rbac.elevated_permissions_required
  #         content:
  #           '*/*':
  #             schema:
  #               $ref: '#/components/schemas/BasicFailedReply'
  #       500:
  #         description: 'A Resource that was previously stored no longer exists. (code:
  #           `deployments.deployment_resource_no_longer_exists`)'
  #         headers:
  #           x-cloud-error-codes:
  #             description: The error codes associated with the response
  #             schema:
  #               type: string
  #               enum:
  #               - deployments.deployment_resource_no_longer_exists
  #         content:
  #           '*/*':
  #             schema:
  #               $ref: '#/components/schemas/BasicFailedReply'
  #     x-doc:
  #       tag: Deployment - Commands
  /deployments/templates/{template_id}:
    get:
      tags:
      - DeploymentTemplates
      summary: Get deployment template
      description: Retrieves a deployment template by id.
      operationId: get-deployment-template-v2
      parameters:
      - name: template_id
        in: path
        description: The identifier for the deployment template.
        required: true
        schema:
          type: string
      - name: show_instance_configurations
        in: query
        description: If true, will return details for each instance configuration
          referenced by the template.
        schema:
          type: boolean
          default: true
      - name: show_max_zones
        in: query
        description: If true, will populate the max_zones field in the instance configurations.
          Only relevant if show_instance_configurations=true.
        schema:
          type: boolean
          default: false
      - name: stack_version
        in: query
        description: If present, it will cause the returned deployment template to
          be adapted to return only the elements allowed in that version.
        schema:
          type: string
      - name: region
        in: query
        description: Region of the deployment template
        required: true
        schema:
          type: string
      responses:
        200:
          description: The deployment template was found and returned successfully.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DeploymentTemplateInfoV2'
        400:
          description: 'The requested region is not supported. (code: `templates.region_not_found`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - templates.region_not_found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
        401:
          description: 'The user is not authorized to access requested region. (code:
            `templates.region_not_allowed`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - templates.region_not_allowed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
        404:
          description: 'The deployment template specified by {template_id} cannot
            be found. (code: `templates.template_not_found`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - templates.template_not_found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
      x-doc:
        tag: Deployments - Templates
  /deployments/{deployment_id}/apm/{ref_id}/_reset-token:
    post:
      tags:
      - Deployments
      summary: Reset the secret token for an APM resource.
      description: Reset the token of an APM resource.
      operationId: deployment-apm-reset-secret-token
      parameters:
      - name: deployment_id
        in: path
        description: Identifier for the Deployment.
        required: true
        schema:
          type: string
      - name: ref_id
        in: path
        description: User-specified RefId for the Resource.
        required: true
        schema:
          type: string
      responses:
        202:
          description: Response containing the new secret token, plan to apply it
            starts
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApmCrudResponse'
        404:
          description: |-
            * The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)
            * The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - deployments.deployment_not_found
                - deployments.deployment_resource_not_found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
        449:
          description: 'Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - root.unauthorized.rbac.elevated_permissions_required
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
        500:
          description: 'We have failed you. (code: `deployments.deployment_resource_no_longer_exists`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - deployments.deployment_resource_no_longer_exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
      x-doc:
        tag: APM routes
  /deployments/{deployment_id}/enterprise_search/{ref_id}:
    get:
      tags:
      - Deployments
      summary: Get Deployment Enterprise Search Resource Info
      description: Get info about an Enterprise Search Resource belonging to a given
        Deployment.
      operationId: get-deployment-enterprise-search-resource-info
      parameters:
      - name: deployment_id
        in: path
        description: Identifier for the Deployment
        required: true
        schema:
          type: string
      - name: ref_id
        in: path
        description: User-specified RefId for the Resource
        required: true
        schema:
          type: string
      - name: show_metadata
        in: query
        description: Whether to include the full cluster metadata in the response
          - can be large per cluster and also include credentials.
        schema:
          type: boolean
          default: false
      - name: show_plans
        in: query
        description: Whether to include the full current and pending plan information
          in the response - can be large per cluster.
        schema:
          type: boolean
          default: true
      - name: show_plan_logs
        in: query
        description: Whether to include with the current and pending plan information
          the attempt log - can be very large per cluster.
        schema:
          type: boolean
          default: false
      - name: show_plan_history
        in: query
        description: Whether to include with the current and pending plan information
          the plan history- can be very large per cluster.
        schema:
          type: boolean
          default: false
      - name: show_plan_defaults
        in: query
        description: If showing plans, whether to show values that are left at their
          default value (less readable but more informative).
        schema:
          type: boolean
          default: false
      - name: show_settings
        in: query
        description: Whether to show cluster settings in the response.
        schema:
          type: boolean
          default: false
      responses:
        200:
          description: Standard response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EnterpriseSearchResourceInfo'
        404:
          description: 'The Deployment specified by {deployment_id} cannot be found.
            (code: `deployments.deployment_not_found`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - deployments.deployment_not_found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
        500:
          description: 'We have failed you. (code: `deployments.deployment_resource_no_longer_exists`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - deployments.deployment_resource_no_longer_exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
      x-doc:
        tag: Deployment - Info
  /deployments/{deployment_id}/kibana/{ref_id}:
    get:
      tags:
      - Deployments
      summary: Get Deployment Kibana Resource Info
      description: Get info about a Kibana Resource belonging to a given Deployment.
      operationId: get-deployment-kib-resource-info
      parameters:
      - name: deployment_id
        in: path
        description: Identifier for the Deployment
        required: true
        schema:
          type: string
      - name: ref_id
        in: path
        description: User-specified RefId for the Resource
        required: true
        schema:
          type: string
      - name: show_metadata
        in: query
        description: Whether to include the full cluster metadata in the response
          - can be large per cluster and also include credentials.
        schema:
          type: boolean
          default: false
      - name: show_plans
        in: query
        description: Whether to include the full current and pending plan information
          in the response - can be large per cluster.
        schema:
          type: boolean
          default: true
      - name: show_plan_logs
        in: query
        description: Whether to include with the current and pending plan information
          the attempt log - can be very large per cluster.
        schema:
          type: boolean
          default: false
      - name: show_plan_history
        in: query
        description: Whether to include with the current and pending plan information
          the plan history- can be very large per cluster.
        schema:
          type: boolean
          default: false
      - name: show_plan_defaults
        in: query
        description: If showing plans, whether to show values that are left at their
          default value (less readable but more informative).
        schema:
          type: boolean
          default: false
      - name: convert_legacy_plans
        in: query
        description: If showing plans, whether to leave pre-2.0.0 plans in their legacy
          format (the default), or whether to update them to 2.0.x+ format (if 'true').
        schema:
          type: boolean
          default: false
      - name: show_settings
        in: query
        description: Whether to show cluster settings in the response.
        schema:
          type: boolean
          default: false
      responses:
        200:
          description: Standard response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/KibanaResourceInfo'
        404:
          description: 'The Deployment specified by {deployment_id} cannot be found.
            (code: `deployments.deployment_not_found`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - deployments.deployment_not_found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
        500:
          description: 'We have failed you. (code: `deployments.deployment_resource_no_longer_exists`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - deployments.deployment_resource_no_longer_exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
      x-doc:
        tag: Deployment - Info
  /deployments/{deployment_id}/appsearch/{ref_id}/read_only_mode:
    get:
      tags:
      - Deployments
      summary: Set AppSearch read-only status
      description: Enable/Disable read-only mode on the given App Search resource.
      operationId: get-appsearch-read-only-mode
      parameters:
      - name: deployment_id
        in: path
        description: Identifier for the Deployment.
        required: true
        schema:
          type: string
      - name: ref_id
        in: path
        description: User-specified RefId for the Resource.
        required: true
        schema:
          type: string
      responses:
        200:
          description: Standard response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ReadOnlyResponse'
        404:
          description: 'The Resource specified by ref_id cannot be found. (code: `deployments.deployment_resource_not_found`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - deployments.deployment_resource_not_found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
        500:
          description: 'We have failed you. (code: `deployments.deployment_resource_no_longer_exists`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - deployments.deployment_resource_no_longer_exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
      x-doc:
        tag: App Search - Read-only
    put:
      tags:
      - Deployments
      summary: Set AppSearch read-only status
      description: Enable/Disable read-only mode on the given App Search resource.
      operationId: set-appsearch-read-only-mode
      parameters:
      - name: deployment_id
        in: path
        description: Identifier for the Deployment.
        required: true
        schema:
          type: string
      - name: ref_id
        in: path
        description: User-specified RefId for the Resource.
        required: true
        schema:
          type: string
      requestBody:
        description: read-only request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReadOnlyRequest'
        required: true
      responses:
        200:
          description: Standard response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ReadOnlyResponse'
        404:
          description: 'The Resource specified by ref_id cannot be found. (code: `deployments.deployment_resource_not_found`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - deployments.deployment_resource_not_found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
        449:
          description: 'Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - root.unauthorized.rbac.elevated_permissions_required
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
        500:
          description: 'We have failed you. (code: `deployments.deployment_resource_no_longer_exists`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - deployments.deployment_resource_no_longer_exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
      x-doc:
        tag: App Search - Read-only
      x-codegen-request-body-name: body
  # /deployments/{deployment_id}/{resource_kind}/{ref_id}/instances/{instance_ids}/_start:
  #   post:
  #     tags:
  #     - Deployments
  #     summary: Start instances
  #     description: Starts instances belonging to a Deployment Resource.
  #     operationId: start-deployment-resource-instances
  #     parameters:
  #     - name: deployment_id
  #       in: path
  #       description: Identifier for the Deployment.
  #       required: true
  #       schema:
  #         type: string
  #     - name: resource_kind
  #       in: path
  #       description: The kind of resource (one of elasticsearch, kibana, apm, or integrations_server).
  #       required: true
  #       schema:
  #         type: string
  #     - name: ref_id
  #       in: path
  #       description: User-specified RefId for the Resource.
  #       required: true
  #       schema:
  #         type: string
  #     - name: instance_ids
  #       in: path
  #       description: A comma-separated list of instance identifiers.
  #       required: true
  #       style: simple
  #       explode: false
  #       schema:
  #         type: array
  #         items:
  #           type: string
  #     - name: ignore_missing
  #       in: query
  #       description: If true and the instance does not exist then quietly proceed
  #         to the next instance, otherwise treated as an error
  #       schema:
  #         type: boolean
  #         default: false
  #     responses:
  #       202:
  #         description: The start command was issued successfully.
  #         content:
  #           '*/*':
  #             schema:
  #               $ref: '#/components/schemas/DeploymentResourceCommandResponse'
  #       403:
  #         description: 'The start maintenance mode command was prohibited for the
  #           given Resource. (code: `deployments.instance_update_prohibited_error`)'
  #         headers:
  #           x-cloud-error-codes:
  #             description: The error codes associated with the response
  #             schema:
  #               type: string
  #               enum:
  #               - deployments.instance_update_prohibited_error
  #         content:
  #           '*/*':
  #             schema:
  #               $ref: '#/components/schemas/BasicFailedReply'
  #       404:
  #         description: |-
  #           * The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)
  #           * The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)
  #           * One or more instances of the given resource type are missing. (code: `deployments.instances_missing_on_update_error`)
  #         headers:
  #           x-cloud-error-codes:
  #             description: The error codes associated with the response
  #             schema:
  #               type: string
  #               enum:
  #               - deployments.deployment_not_found
  #               - deployments.deployment_resource_not_found
  #               - deployments.instances_missing_on_update_error
  #         content:
  #           '*/*':
  #             schema:
  #               $ref: '#/components/schemas/BasicFailedReply'
  #       449:
  #         description: 'Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)'
  #         headers:
  #           x-cloud-error-codes:
  #             description: The error codes associated with the response
  #             schema:
  #               type: string
  #               enum:
  #               - root.unauthorized.rbac.elevated_permissions_required
  #         content:
  #           '*/*':
  #             schema:
  #               $ref: '#/components/schemas/BasicFailedReply'
  #       500:
  #         description: 'A Resource that was previously stored no longer exists. (code:
  #           `deployments.deployment_resource_no_longer_exists`)'
  #         headers:
  #           x-cloud-error-codes:
  #             description: The error codes associated with the response
  #             schema:
  #               type: string
  #               enum:
  #               - deployments.deployment_resource_no_longer_exists
  #         content:
  #           '*/*':
  #             schema:
  #               $ref: '#/components/schemas/BasicFailedReply'
  #     x-doc:
  #       tag: Deployment - Commands
  /deployments/{deployment_id}/{stateless_resource_kind}/{ref_id}/_restart:
    post:
      tags:
      - Deployments
      summary: Restart Deployment Stateless Resource
      description: 'Restarts a Stateless Resource. If a Resource is active: this command
        re-applies the existing plan but applies a "cluster_reboot", which issues
        a restart command and waits for it to complete. If a Resource is inactive:
        this command starts it up with the most recent successful plan.'
      operationId: restart-deployment-stateless-resource
      parameters:
      - name: deployment_id
        in: path
        description: Identifier for the Deployment.
        required: true
        schema:
          type: string
      - name: stateless_resource_kind
        in: path
        description: The kind of stateless resource
        required: true
        schema:
          type: string
          enum:
          - kibana
          - apm
          - appsearch
          - enterprise_search
          - integrations_server
      - name: ref_id
        in: path
        description: User-specified RefId for the Resource.
        required: true
        schema:
          type: string
      - name: cancel_pending
        in: query
        description: If true, cancels any pending plans before restarting. If false
          and there are pending plans, returns an error.
        schema:
          type: boolean
          default: false
      responses:
        202:
          description: The restart command was issued successfully
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DeploymentResourceCommandResponse'
        404:
          description: |-
            * The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)
            * The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - deployments.deployment_not_found
                - deployments.deployment_resource_not_found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
        422:
          description: 'The command sent to a Resource found the Resource in an illegal
            state, the error message gives more details. (code: `deployments.deployment_resource_plan_change_error`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - deployments.deployment_resource_plan_change_error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
        449:
          description: 'Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - root.unauthorized.rbac.elevated_permissions_required
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
        500:
          description: 'We have failed you. (code: `deployments.deployment_resource_no_longer_exists`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - deployments.deployment_resource_no_longer_exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
      x-doc:
        tag: Deployment - Commands
  /deployments/{deployment_id}/_shutdown:
    post:
      tags:
      - Deployments
      summary: Shuts down Deployment
      description: Shuts down all resources in a Deployment.
      operationId: shutdown-deployment
      parameters:
      - name: deployment_id
        in: path
        description: Identifier for the Deployment
        required: true
        schema:
          type: string
      - name: hide
        in: query
        description: Whether or not to hide the deployment and its resources.Only
          applicable for Platform administrators.
        schema:
          type: boolean
      - name: skip_snapshot
        in: query
        description: Whether or not to skip snapshots before shutting down the resources
        schema:
          type: boolean
          default: false
      responses:
        200:
          description: The request was valid and the resources of the deployment were
            shutdown.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DeploymentShutdownResponse'
        400:
          description: 'Parameter is restricted and can only be set by a Platform
            administrator. (code: `deployments.restricted_parameter`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - deployments.restricted_parameter
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
        401:
          description: You are not authorized to perform this action.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
        404:
          description: 'The Deployment specified by {deployment_id} cannot be found.
            (code: `deployments.deployment_not_found`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - deployments.deployment_not_found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
      x-doc:
        tag: Deployment - CRUD
  /deployments/{deployment_id}/elasticsearch/{ref_id}/_enable-slm:
    post:
      tags:
      - Deployments
      summary: Migrate Elasticsearch resource to use SLM
      description: Migrates the specified Elasticsearch resource to use SLM.
      operationId: enable-deployment-resource-slm
      parameters:
      - name: deployment_id
        in: path
        description: Identifier for the Deployment.
        required: true
        schema:
          type: string
      - name: ref_id
        in: path
        description: User-specified RefId for the Resource.
        required: true
        schema:
          type: string
      - name: validate_only
        in: query
        description: When `true`, does not enable SLM but returns warnings if any
          applications may lose availability during SLM migration.
        schema:
          type: boolean
          default: false
      responses:
        200:
          description: Standard response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DeploymentResourceCommandResponse'
        404:
          description: |-
            * The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)
            * The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - deployments.deployment_not_found
                - deployments.deployment_resource_not_found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
        449:
          description: 'Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - root.unauthorized.rbac.elevated_permissions_required
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
        500:
          description: 'We have failed you. (code: `deployments.deployment_resource_no_longer_exists`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - deployments.deployment_resource_no_longer_exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
      x-doc:
        tag: Deployment - Commands
  # /deployments/{deployment_id}/{resource_kind}/{ref_id}/instances/{instance_ids}/maintenance-mode/_start:
  #   post:
  #     tags:
  #     - Deployments
  #     summary: Start maintenance mode
  #     description: Starts maintenance mode of instances belonging to a Deployment
  #       Resource.
  #     operationId: start-deployment-resource-maintenance-mode
  #     parameters:
  #     - name: deployment_id
  #       in: path
  #       description: Identifier for the Deployment.
  #       required: true
  #       schema:
  #         type: string
  #     - name: resource_kind
  #       in: path
  #       description: The kind of resource (one of elasticsearch, kibana, apm, or integrations_server).
  #       required: true
  #       schema:
  #         type: string
  #     - name: ref_id
  #       in: path
  #       description: User-specified RefId for the Resource.
  #       required: true
  #       schema:
  #         type: string
  #     - name: instance_ids
  #       in: path
  #       description: A comma-separated list of instance identifiers.
  #       required: true
  #       style: simple
  #       explode: false
  #       schema:
  #         type: array
  #         items:
  #           type: string
  #     - name: ignore_missing
  #       in: query
  #       description: If true and the instance does not exist then quietly proceed
  #         to the next instance, otherwise treated as an error.
  #       schema:
  #         type: boolean
  #         default: false
  #     responses:
  #       202:
  #         description: The start maintenance command was issued successfully.
  #         content:
  #           '*/*':
  #             schema:
  #               $ref: '#/components/schemas/DeploymentResourceCommandResponse'
  #       403:
  #         description: 'The start maintenance mode command was prohibited for the
  #           given Resource. (code: `deployments.instance_update_prohibited_error`)'
  #         headers:
  #           x-cloud-error-codes:
  #             description: The error codes associated with the response
  #             schema:
  #               type: string
  #               enum:
  #               - deployments.instance_update_prohibited_error
  #         content:
  #           '*/*':
  #             schema:
  #               $ref: '#/components/schemas/BasicFailedReply'
  #       404:
  #         description: |-
  #           * The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)
  #           * The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)
  #           * One or more instances of the given resource type are missing. (code: `deployments.instances_missing_on_update_error`)
  #         headers:
  #           x-cloud-error-codes:
  #             description: The error codes associated with the response
  #             schema:
  #               type: string
  #               enum:
  #               - deployments.deployment_not_found
  #               - deployments.deployment_resource_not_found
  #               - deployments.instances_missing_on_update_error
  #         content:
  #           '*/*':
  #             schema:
  #               $ref: '#/components/schemas/BasicFailedReply'
  #       449:
  #         description: 'Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)'
  #         headers:
  #           x-cloud-error-codes:
  #             description: The error codes associated with the response
  #             schema:
  #               type: string
  #               enum:
  #               - root.unauthorized.rbac.elevated_permissions_required
  #         content:
  #           '*/*':
  #             schema:
  #               $ref: '#/components/schemas/BasicFailedReply'
  #       500:
  #         description: 'A Resource that was previously stored no longer exists. (code:
  #           `deployments.deployment_resource_no_longer_exists`)'
  #         headers:
  #           x-cloud-error-codes:
  #             description: The error codes associated with the response
  #             schema:
  #               type: string
  #               enum:
  #               - deployments.deployment_resource_no_longer_exists
  #         content:
  #           '*/*':
  #             schema:
  #               $ref: '#/components/schemas/BasicFailedReply'
  #     x-doc:
  #       tag: Deployment - Commands
  /deployments/traffic-filter/rulesets/{ruleset_id}/associations/{association_type}/{associated_entity_id}:
    delete:
      tags:
      - DeploymentsTrafficFilter
      summary: Delete ruleset association
      description: Deletes the traffic rules in the ruleset from the deployment.
      operationId: delete-traffic-filter-ruleset-association
      parameters:
      - name: ruleset_id
        in: path
        description: The mandatory ruleset ID.
        required: true
        schema:
          type: string
      - name: association_type
        in: path
        description: Association type
        required: true
        schema:
          type: string
      - name: associated_entity_id
        in: path
        description: Associated entity ID
        required: true
        schema:
          type: string
      responses:
        200:
          description: Delete association request was valid and the association has
            been deleted
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        404:
          description: 'The traffic filter ruleset association cannot be found. (code:
            `traffic_filter.not_found`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - traffic_filter.not_found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
        500:
          description: 'Deletion failed. (code: `traffic_filter.request_execution_failed`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - traffic_filter.request_execution_failed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
      x-doc:
        tag: Deployments - Traffic Filter - Associations
  /deployments/{deployment_id}/elasticsearch/{ref_id}/_restart:
    post:
      tags:
      - Deployments
      summary: Restart Deployment Elasticsearch Resource
      description: 'Restarts an Elasticsearch Resource. If a Resource is active: this
        command re-applies the existing plan but applies a "cluster_reboot", which
        issues a restart command and waits for it to complete. If a Resource is inactive:
        this command starts it up with the most recent successful plan.'
      operationId: restart-deployment-es-resource
      parameters:
      - name: deployment_id
        in: path
        description: Identifier for the Deployment.
        required: true
        schema:
          type: string
      - name: ref_id
        in: path
        description: User-specified RefId for the Resource.
        required: true
        schema:
          type: string
      - name: restore_snapshot
        in: query
        description: When set to true and restoring from shutdown, then will restore
          the cluster from the last snapshot (if available).
        schema:
          type: boolean
          default: true
      - name: skip_snapshot
        in: query
        description: If true, will not take a snapshot of the cluster before restarting.
        schema:
          type: boolean
          default: true
      - name: cancel_pending
        in: query
        description: If true, cancels any pending plans before restarting. If false
          and there are pending plans, returns an error.
        schema:
          type: boolean
          default: false
      - name: group_attribute
        in: query
        description: 'Indicates the property or properties used to divide the list
          of instances to restart in groups. Valid options are: ''\_\_all\_\_'' (restart
          all at once), ''\_\_zone\_\_'' by logical zone, ''\_\_name\_\_'' one instance
          at a time, or a comma-separated list of attributes of the instances'
        schema:
          type: string
          default: __zone__
      - name: shard_init_wait_time
        in: query
        description: 'The time, in seconds, to wait for shards that show no progress
          of initializing, before rolling the next group (default: 10 minutes)'
        schema:
          type: integer
          default: 600
      responses:
        202:
          description: The restart command was issued successfully.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DeploymentResourceCommandResponse'
        404:
          description: |-
            * The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)
            * The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - deployments.deployment_not_found
                - deployments.deployment_resource_not_found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
        422:
          description: 'The command sent to a Resource found the Resource in an illegal
            state, the error message gives more details. (code: `deployments.deployment_resource_plan_change_error`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - deployments.deployment_resource_plan_change_error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
        449:
          description: 'Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - root.unauthorized.rbac.elevated_permissions_required
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
        500:
          description: 'A Resource that was previously stored no longer exists. (code:
            `deployments.deployment_resource_no_longer_exists`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - deployments.deployment_resource_no_longer_exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
      x-doc:
        tag: Deployment - Commands
  /billing/costs/{organization_id}:
    get:
      tags:
      - BillingCostsAnalysis
      summary: Get costs overview for the organization
      description: 'EXPERIMENTAL (it may change in future versions): Retrieves an
        overview of the costs by organization ID.'
      operationId: get-costs-overview
      parameters:
      - name: organization_id
        in: path
        description: Identifier for the organization
        required: true
        schema:
          type: string
      - name: from
        in: query
        description: A datetime for the beginning of the desired range for which to
          fetch costs. Defaults to start of current month.
        schema:
          type: string
      - name: to
        in: query
        description: A datetime for the end of the desired range for which to fetch
          costs. Defaults to the current date.
        schema:
          type: string
      responses:
        200:
          description: Top-level cost overview for the organization
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CostsOverview'
        403:
          description: 'The current user does not have access to the requested organization.
            (code: `organization.invalid_access`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - organization.invalid_access
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
      x-doc:
        tag: Billing Costs Analysis
  /deployments/{deployment_id}/{resource_kind}/{ref_id}/instances/maintenance-mode/_start:
    post:
      tags:
      - Deployments
      summary: Start maintenance mode (all instances)
      description: Starts maintenance mode of all instances belonging to a Deployment
        Resource.
      operationId: start-deployment-resource-instances-all-maintenance-mode
      parameters:
      - name: deployment_id
        in: path
        description: Identifier for the Deployment.
        required: true
        schema:
          type: string
      - name: resource_kind
        in: path
        description: The kind of resource (one of elasticsearch, kibana, apm, or integrations_server).
        required: true
        schema:
          type: string
      - name: ref_id
        in: path
        description: User-specified RefId for the Resource.
        required: true
        schema:
          type: string
      responses:
        202:
          description: The start maintenance command was issued successfully.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DeploymentResourceCommandResponse'
        403:
          description: 'The start maintenance mode command was prohibited for the
            given Resource. (code: `deployments.instance_update_prohibited_error`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - deployments.instance_update_prohibited_error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
        404:
          description: |-
            * The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)
            * The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)
            * One or more instances of the given resource type are missing. (code: `deployments.instances_missing_on_update_error`)
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - deployments.deployment_not_found
                - deployments.deployment_resource_not_found
                - deployments.instances_missing_on_update_error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
        449:
          description: 'Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - root.unauthorized.rbac.elevated_permissions_required
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
        500:
          description: 'A Resource that was previously stored no longer exists. (code:
            `deployments.deployment_resource_no_longer_exists`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - deployments.deployment_resource_no_longer_exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
      x-doc:
        tag: Deployment - Commands
  /billing/costs/{organization_id}/deployments:
    get:
      tags:
      - BillingCostsAnalysis
      summary: Get deployments costs for the organization
      description: 'EXPERIMENTAL (it may change in future versions): Retrieves the
        costs associated with all deployments for the organization.'
      operationId: get-costs-deployments
      parameters:
      - name: organization_id
        in: path
        description: Identifier for the organization
        required: true
        schema:
          type: string
      - name: from
        in: query
        description: A datetime for the beginning of the desired range for which to
          fetch activity. Defaults to start of current month.
        schema:
          type: string
      - name: to
        in: query
        description: A datetime for the end of the desired range for which to fetch
          activity. Defaults to the current date.
        schema:
          type: string
      responses:
        200:
          description: The costs associated to a set of products
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DeploymentsCosts'
        403:
          description: 'The current user does not have access to the requested organization.
            (code: `organization.invalid_access`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - organization.invalid_access
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
      x-doc:
        tag: Billing Costs Analysis
  /deployments/extensions:
    get:
      tags:
      - Extensions
      summary: List Extensions
      description: Retrieves all of the available extensions.
      operationId: list-extensions
      parameters:
      - name: include_deployments
        in: query
        description: |
          Include deployments referencing this extension.
          DEPRECATED: To get the list of deployments that reference an extension, use the Get Extension API.
        schema:
          type: boolean
          default: false
      responses:
        200:
          description: The extensions that are available
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Extensions'
      x-doc:
        tag: Deployments - Extensions
    post:
      tags:
      - Extensions
      summary: Create an extension
      description: |
        Creates the extension.
         The extensions API supports two types of usage patterns.
         A). Specify a `download_url`, http or https URL,  where the extension is currently hosted. This will result in extension being copied to elastic repository.
         B). Create only the extension metadata using the `POST` endpoint and then use `PUT` to upload the extension file. Leave the `download_url` unspecified in this case.
      operationId: create-extension
      requestBody:
        description: the data that creates the extension
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateExtensionRequest'
        required: true
      responses:
        201:
          description: The extension that was just created.
          headers:
            x-cloud-resource-version:
              description: The resource version, which is used to avoid update conflicts
                with concurrent operations
              schema:
                type: string
            x-cloud-resource-last-modified:
              description: The date-time when the resource was last modified (ISO
                format relative to UTC)
              schema:
                type: string
            x-cloud-resource-created:
              description: The date-time when the resource was created (ISO format
                relative to UTC)
              schema:
                type: string
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Extension'
        400:
          description: 'Could not download the extension from the specified URL. (code:
            `extensions.request_execution_failed`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - extensions.request_execution_failed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
        404:
          description: 'Your current session does not have a user id associated with
            it. (code: `extensions.no_user_id`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - extensions.no_user_id
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
        409:
          description: 'An extension already exists with the generated id. Please
            try again. (code: `extensions.id_already_exists`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - extensions.id_already_exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
      x-doc:
        tag: Deployments - Extensions
      x-codegen-request-body-name: body
  /billing/costs/{organization_id}/items:
    get:
      tags:
      - BillingCostsAnalysis
      summary: Get itemized costs for the organization
      description: 'EXPERIMENTAL (it may change in future versions): Retrieves the
        itemized costs for the organization.'
      operationId: get-costs-items
      parameters:
      - name: organization_id
        in: path
        description: Identifier for the organization
        required: true
        schema:
          type: string
      - name: from
        in: query
        description: A datetime for the beginning of the desired range for which to
          fetch costs. Defaults to start of current month.
        schema:
          type: string
      - name: to
        in: query
        description: A datetime for the end of the desired range for which to fetch
          costs. Defaults to the current date.
        schema:
          type: string
      responses:
        200:
          description: The costs associated to a set of items
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ItemsCosts'
        403:
          description: 'The current user does not have access to the requested organization.
            (code: `organization.invalid_access`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - organization.invalid_access
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
      x-doc:
        tag: Billing Costs Analysis
  /deployments/traffic-filter/rulesets/{ruleset_id}/associations:
    get:
      tags:
      - DeploymentsTrafficFilter
      summary: Get associated deployments
      description: Retrieves a list of deployments that are associated to the specified
        ruleset.
      operationId: get-traffic-filter-ruleset-deployment-associations
      parameters:
      - name: ruleset_id
        in: path
        description: The mandatory ruleset ID.
        required: true
        schema:
          type: string
      responses:
        200:
          description: Associations referred by traffic filter rulesets were successfully
            returned
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RulesetAssociations'
        500:
          description: 'Error fetching deployments. (code: `traffic_filter.request_execution_failed`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - traffic_filter.request_execution_failed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
      x-doc:
        tag: Deployments - Traffic Filter - Associations
    post:
      tags:
      - DeploymentsTrafficFilter
      summary: Create ruleset association
      description: Applies the ruleset to the specified deployment.
      operationId: create-traffic-filter-ruleset-association
      parameters:
      - name: ruleset_id
        in: path
        description: The mandatory ruleset ID.
        required: true
        schema:
          type: string
      requestBody:
        description: Mandatory ruleset association description
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilterAssociation'
        required: true
      responses:
        200:
          description: Create association request was valid and the association already
            exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        201:
          description: Create association request was valid and the association has
            been created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        404:
          description: 'The traffic filter ruleset specified by {ruleset_id} cannot
            be found. (code: `traffic_filter.not_found`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - traffic_filter.not_found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
        500:
          description: 'Creation failed. (code: `traffic_filter.request_execution_failed`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - traffic_filter.request_execution_failed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
      x-doc:
        tag: Deployments - Traffic Filter - Associations
      x-codegen-request-body-name: body
  /deployments/{deployment_id}/elasticsearch/{ref_id}/_reset-password:
    post:
      tags:
      - Deployments
      summary: Reset 'elastic' user password
      description: Resets the password of the 'elastic' user.
      operationId: reset-elasticsearch-user-password
      parameters:
      - name: deployment_id
        in: path
        description: Identifier for the Deployment.
        required: true
        schema:
          type: string
      - name: ref_id
        in: path
        description: User-specified RefId for the Resource.
        required: true
        schema:
          type: string
      responses:
        200:
          description: The password reset was out carried successfully
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ElasticsearchElasticUserPasswordResetResponse'
        404:
          description: |-
            * The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)
            * The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - deployments.deployment_not_found
                - deployments.deployment_resource_not_found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
        449:
          description: 'Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - root.unauthorized.rbac.elevated_permissions_required
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
        500:
          description: 'Failed to reset the ''elastic'' user''s password. (code: `deployments.elasticsearch.password_reset_error`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - deployments.elasticsearch.password_reset_error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
      x-doc:
        tag: Deployment - Commands
  /deployments/{deployment_id}/upgrade_assistant/status:
    get:
      tags:
      - Deployments
      summary: Get Deployment upgade assistant status
      description: Get details about an Elasticsearch resource belonging to a given
        deployment.
      operationId: get-deployment-upgrade-assistant-status
      parameters:
      - name: deployment_id
        in: path
        description: Identifier for the Deployment
        required: true
        schema:
          type: string
      responses:
        200:
          description: The Upgrade Assistant returned the status successfully
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DeploymentUpgradeAssistantStatusResponse'
        404:
          description: 'The Deployment specified by {deployment_id} cannot be found.
            (code: `deployments.deployment_not_found`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - deployments.deployment_not_found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
      x-doc:
        tag: Deployment - Upgrade Assistant
  /deployments/{deployment_id}/{resource_kind}/{ref_id}/instances/_stop:
    post:
      tags:
      - Deployments
      summary: Stop all instances
      description: Stops all instances belonging to a Deployment Resource.
      operationId: stop-deployment-resource-instances-all
      parameters:
      - name: deployment_id
        in: path
        description: Identifier for the Deployment.
        required: true
        schema:
          type: string
      - name: resource_kind
        in: path
        description: The kind of resource (one of elasticsearch, kibana, apm, or integrations_server).
        required: true
        schema:
          type: string
      - name: ref_id
        in: path
        description: User-specified RefId for the Resource.
        required: true
        schema:
          type: string
      responses:
        202:
          description: The stop command was issued successfully.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DeploymentResourceCommandResponse'
        403:
          description: 'The stop maintenance mode command was prohibited for the given
            Resource. (code: `deployments.instance_update_prohibited_error`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - deployments.instance_update_prohibited_error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
        404:
          description: |-
            * The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)
            * The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)
            * One or more instances of the given resource type are missing. (code: `deployments.instances_missing_on_update_error`)
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - deployments.deployment_not_found
                - deployments.deployment_resource_not_found
                - deployments.instances_missing_on_update_error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
        449:
          description: 'Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - root.unauthorized.rbac.elevated_permissions_required
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
        500:
          description: 'A Resource that was previously stored no longer exists. (code:
            `deployments.deployment_resource_no_longer_exists`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - deployments.deployment_resource_no_longer_exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
      x-doc:
        tag: Deployment - Commands
  /users/auth/keys:
    get:
      tags:
      - Authentication
      summary: Get all API keys
      description: Retrieves the metadata for all of the API keys that the user generated.
      operationId: get-api-keys
      responses:
        200:
          description: The metadata for the API keys is retrieved.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiKeysResponse'
      x-doc:
        tag: Authentication
    post:
      tags:
      - Authentication
      summary: Create API key
      description: Creates a new API key.
      operationId: create-api-key
      requestBody:
        description: The request to create the API key
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateApiKeyRequest'
        required: true
      responses:
        201:
          description: The API key is created and returned in the body of the response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiKeyResponse'
        400:
          description: 'The request is invalid. Specify a different request, then
            try again. (code: `api_keys.invalid_input`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - api_keys.invalid_input
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
        449:
          description: 'Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - root.unauthorized.rbac.elevated_permissions_required
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
      x-doc:
        tag: Authentication
      x-codegen-request-body-name: body
  /deployments/{deployment_id}/elasticsearch/{ref_id}/_enable-ccr:
    post:
      tags:
      - Deployments
      summary: Migrate Elasticsearch and associated Kibana resources to enable CCR
      description: Migrates the specified Elasticsearch resource and its associated
        Kibana to enable CCR (if supported).
      operationId: enable-deployment-resource-ccr
      parameters:
      - name: deployment_id
        in: path
        description: Identifier for the Deployment.
        required: true
        schema:
          type: string
      - name: ref_id
        in: path
        description: User-specified RefId for the Resource.
        required: true
        schema:
          type: string
      - name: validate_only
        in: query
        description: When `true`, will not enable CCR but returns warnings if any
          elements may lose availability during CCR enablement
        schema:
          type: boolean
          default: false
      responses:
        200:
          description: Standard response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DeploymentResourceCommandResponse'
        404:
          description: |-
            * The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)
            * The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - deployments.deployment_not_found
                - deployments.deployment_resource_not_found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
        449:
          description: 'Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - root.unauthorized.rbac.elevated_permissions_required
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
      x-doc:
        tag: Deployment - Commands
  /deployments/{deployment_id}/elasticsearch/{ref_id}/keystore:
    get:
      tags:
      - Deployments
      summary: Get the items in the Elasticsearch resource keystore
      description: Fetches the current values of the keystore for the Elasticsearch
        resource.
      operationId: get-deployment-es-resource-keystore
      parameters:
      - name: deployment_id
        in: path
        description: Identifier for the Deployment
        required: true
        schema:
          type: string
      - name: ref_id
        in: path
        description: User-specified RefId for the Resource
        required: true
        schema:
          type: string
      responses:
        200:
          description: The contents of the Elasticsearch keystore
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/KeystoreContents'
        404:
          description: |-
            * The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)
            * The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - deployments.deployment_not_found
                - deployments.deployment_resource_not_found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
        449:
          description: 'Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - root.unauthorized.rbac.elevated_permissions_required
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
        500:
          description: 'We have failed you. (code: `deployments.metadata_internal_error`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - deployments.metadata_internal_error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
      x-doc:
        tag: Deployment Resources - CRUD
    patch:
      tags:
      - Deployments
      summary: Add or remove items from the Elasticsearch resource keystore
      description: Adds the specified values to the Elasticsearch keystore, or removes
        the keys for the unspecified values.
      operationId: set-deployment-es-resource-keystore
      parameters:
      - name: deployment_id
        in: path
        description: Identifier for the Deployment
        required: true
        schema:
          type: string
      - name: ref_id
        in: path
        description: User-specified RefId for the Resource
        required: true
        schema:
          type: string
      requestBody:
        description: The new settings that will be applied to the keystore of the
          Elasticsearch resource.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeystoreContents'
        required: true
      responses:
        200:
          description: The new contents of the Elasticsearch keystore
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/KeystoreContents'
        404:
          description: |-
            * The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)
            * The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - deployments.deployment_not_found
                - deployments.deployment_resource_not_found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
        449:
          description: 'Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - root.unauthorized.rbac.elevated_permissions_required
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
        500:
          description: 'We have failed you. (code: `deployments.metadata_internal_error`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - deployments.metadata_internal_error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
      x-doc:
        tag: Deployment Resources - CRUD
      x-codegen-request-body-name: body
  /deployments/traffic-filter/rulesets:
    get:
      tags:
      - DeploymentsTrafficFilter
      summary: List traffic filter rulesets
      description: List all of the traffic filter rulesets.
      operationId: get-traffic-filter-rulesets
      parameters:
      - name: include_associations
        in: query
        description: Retrieves a list of resources that are associated to the specified
          ruleset.
        schema:
          type: boolean
          default: false
      - name: region
        in: query
        description: If provided limits the rulesets to that region only.
        schema:
          type: string
      responses:
        200:
          description: The collection of traffic filter routes
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TrafficFilterRulesets'
        500:
          description: 'Error fetching traffic filter rulesets. (code: `traffic_filter.request_execution_failed`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - traffic_filter.request_execution_failed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
      x-doc:
        tag: Deployments - Traffic Filter - CRUD
    post:
      tags:
      - DeploymentsTrafficFilter
      summary: Create a ruleset
      description: Creates a ruleset that consists of a set of rules.
      operationId: create-traffic-filter-ruleset
      requestBody:
        description: The specification for traffic filter ruleset.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrafficFilterRulesetRequest'
        required: true
      responses:
        201:
          description: The ruleset definition is valid and the creation has started.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TrafficFilterRulesetResponse'
        500:
          description: 'Error creating the traffic filter ruleset. (code: `traffic_filter.request_execution_failed`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - traffic_filter.request_execution_failed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
      x-doc:
        tag: Deployments - Traffic Filter - CRUD
      x-codegen-request-body-name: body
  /deployments/_search:
    post:
      tags:
      - Deployments
      summary: Search Deployments
      description: Retrieves the information for all of the deployments that match
        the specified query.
      operationId: search-deployments
      requestBody:
        description: (Optional) The search query to run. When not specified, all of
          the deployments are matched.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchRequest'
        required: false
      responses:
        200:
          description: The list of deployments that match the specified query and
            belong to the authenticated user.
          headers:
            x-cloud-resource-version:
              description: The resource version, which is used to avoid update conflicts
                with concurrent operations
              schema:
                type: string
            x-cloud-resource-last-modified:
              description: The date-time when the resource was last modified (ISO
                format relative to UTC)
              schema:
                type: string
            x-cloud-resource-created:
              description: The date-time when the resource was created (ISO format
                relative to UTC)
              schema:
                type: string
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DeploymentsSearchResponse'
      x-doc:
        tag: Deployment - Commands
      x-codegen-request-body-name: body
  /billing/costs/{organization_id}/deployments/{deployment_id}/items:
    get:
      tags:
      - BillingCostsAnalysis
      summary: Get itemized costs by deployments
      description: 'EXPERIMENTAL (it may change in future versions): Retrieves the
        itemized costs for the given deployment.'
      operationId: get-costs-items-by-deployment
      parameters:
      - name: organization_id
        in: path
        description: Identifier for the organization
        required: true
        schema:
          type: string
      - name: deployment_id
        in: path
        description: Id of a Deployment
        required: true
        schema:
          type: string
      - name: from
        in: query
        description: A datetime for the beginning of the desired range for which to
          fetch costs. Defaults to start of current month.
        schema:
          type: string
      - name: to
        in: query
        description: A datetime for the end of the desired range for which to fetch
          costs. Defaults to the current date.
        schema:
          type: string
      responses:
        200:
          description: The costs associated to a set items billed for a single deployment.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ItemsCosts'
        403:
          description: 'The current user does not have access to the requested organization.
            (code: `organization.invalid_access`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - organization.invalid_access
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
      x-doc:
        tag: Billing Costs Analysis
  /deployments/{deployment_id}/elasticsearch/{ref_id}/eligible-remote-clusters:
    post:
      tags:
      - Deployments
      summary: Get eligible remote clusters
      description: Returns the list of deployments which contain eligible remote clusters
        for the elasticsearch resource.
      operationId: get-deployment-es-resource-eligible-remote-clusters
      parameters:
      - name: deployment_id
        in: path
        description: Identifier for the Deployment.
        required: true
        schema:
          type: string
      - name: ref_id
        in: path
        description: User-specified RefId for the Resource.
        required: true
        schema:
          type: string
      requestBody:
        description: (Optional) The search query to run against all deployments containing
          eligible remote clusters. When not specified, all the eligible deployments
          are matched.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchRequest'
        required: false
      responses:
        200:
          description: List of deployments which contains eligible remote clusters
            for the resource
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DeploymentsSearchResponse'
        400:
          description: 'The resource specified doesn''t yet have a valid version for
            the current plan or the pending plan. (code: `deployments.resource_does_not_have_a_valid_version`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - deployments.resource_does_not_have_a_valid_version
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
        404:
          description: |-
            * The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)
            * The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - deployments.deployment_not_found
                - deployments.deployment_resource_not_found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
      x-doc:
        tag: Deployment - Remote Clusters
      x-codegen-request-body-name: body
  /deployments/{deployment_id}:
    get:
      tags:
      - Deployments
      summary: Get Deployment
      description: Retrieves information about a Deployment.
      operationId: get-deployment
      parameters:
      - name: deployment_id
        in: path
        description: Identifier for the Deployment
        required: true
        schema:
          type: string
      - name: show_security
        in: query
        description: Whether to include the Elasticsearch 2.x security information
          in the response - can be large per cluster and also include credentials
        schema:
          type: boolean
          default: false
      - name: show_metadata
        in: query
        description: Whether to include the full cluster metadata in the response
          - can be large per cluster and also include credentials
        schema:
          type: boolean
          default: false
      - name: show_plans
        in: query
        description: Whether to include the full current and pending plan information
          in the response - can be large per cluster
        schema:
          type: boolean
          default: true
      - name: show_plan_logs
        in: query
        description: Whether to include with the current and pending plan information
          the attempt log - can be very large per cluster
        schema:
          type: boolean
          default: false
      - name: show_plan_history
        in: query
        description: Whether to include with the current and pending plan information
          the plan history- can be very large per cluster
        schema:
          type: boolean
          default: false
      - name: show_plan_defaults
        in: query
        description: If showing plans, whether to show values that are left at their
          default value (less readable but more informative)
        schema:
          type: boolean
          default: false
      - name: convert_legacy_plans
        in: query
        description: If showing plans, whether to leave pre-2.0.0 plans in their legacy
          format (the default), or whether to update them to 2.0.x+ format (if 'true')
        schema:
          type: boolean
          default: false
      - name: show_system_alerts
        in: query
        description: Number of system alerts (such as forced restarts due to memory
          limits) to be included in the response - can be large per cluster. Negative
          numbers or 0 will not return field.
        schema:
          type: integer
          default: 0
      - name: show_settings
        in: query
        description: Whether to show cluster settings in the response.
        schema:
          type: boolean
          default: false
      - name: enrich_with_template
        in: query
        description: If showing plans, whether to enrich the plan by including the
          missing elements from the deployment template it is based on
        schema:
          type: boolean
          default: true
      responses:
        200:
          description: The Deployment info response
          headers:
            x-cloud-resource-version:
              description: The resource version, which is used to avoid update conflicts
                with concurrent operations
              schema:
                type: string
            x-cloud-resource-last-modified:
              description: The date-time when the resource was last modified (ISO
                format relative to UTC)
              schema:
                type: string
            x-cloud-resource-created:
              description: The date-time when the resource was created (ISO format
                relative to UTC)
              schema:
                type: string
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DeploymentGetResponse'
        401:
          description: You are not authorized to perform this action.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
        404:
          description: 'The Deployment specified by {deployment_id} cannot be found.
            (code: `deployments.deployment_not_found`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - deployments.deployment_not_found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
      x-doc:
        tag: Deployment - CRUD
    put:
      tags:
      - Deployments
      summary: Update Deployment
      description: Updates a Deployment.
      operationId: update-deployment
      parameters:
      - name: deployment_id
        in: path
        description: Identifier for the Deployment
        required: true
        schema:
          type: string
      - name: hide_pruned_orphans
        in: query
        description: Whether or not to hide orphaned resources that were shut down
          (relevant if prune on the request is true)
        schema:
          type: boolean
          default: false
      - name: skip_snapshot
        in: query
        description: Whether or not to skip snapshots before shutting down orphaned
          resources (relevant if prune on the request is true)
        schema:
          type: boolean
          default: false
      - name: validate_only
        in: query
        description: If true, will just validate the Deployment definition but will
          not perform the update
        schema:
          type: boolean
          default: false
      - name: version
        in: query
        description: If specified then checks for conflicts against the version stored
          in the persistent store (returned in 'x-cloud-resource-version' of the GET
          request)
        schema:
          type: string
      requestBody:
        description: The deployment definition
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeploymentUpdateRequest'
        required: true
      responses:
        200:
          description: The request was valid and the deployment was updated.
          headers:
            x-cloud-resource-version:
              description: The resource version, which is used to avoid update conflicts
                with concurrent operations
              schema:
                type: string
            x-cloud-resource-last-modified:
              description: The date-time when the resource was last modified (ISO
                format relative to UTC)
              schema:
                type: string
            x-cloud-resource-created:
              description: The date-time when the resource was created (ISO format
                relative to UTC)
              schema:
                type: string
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DeploymentUpdateResponse'
        400:
          description: The deployment request had errors.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
        401:
          description: You are not authorized to perform this action.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
        404:
          description: 'The Deployment specified by {deployment_id} cannot be found.
            (code: `deployments.deployment_not_found`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - deployments.deployment_not_found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
      x-doc:
        tag: Deployment - CRUD
      x-codegen-request-body-name: body
  /deployments/{deployment_id}/elasticsearch/{ref_id}:
    get:
      tags:
      - Deployments
      summary: Get Deployment Elasticsearch Resource Info
      description: Get info about an Elasticsearch Resource belonging to a given Deployment.
      operationId: get-deployment-es-resource-info
      parameters:
      - name: deployment_id
        in: path
        description: Identifier for the Deployment
        required: true
        schema:
          type: string
      - name: ref_id
        in: path
        description: User-specified RefId for the Resource
        required: true
        schema:
          type: string
      - name: show_security
        in: query
        description: Whether to include the Elasticsearch 2.x security information
          in the response - can be large per cluster and also include credentials.
        schema:
          type: boolean
          default: false
      - name: show_metadata
        in: query
        description: Whether to include the full cluster metadata in the response
          - can be large per cluster and also include credentials.
        schema:
          type: boolean
          default: false
      - name: show_plans
        in: query
        description: Whether to include the full current and pending plan information
          in the response - can be large per cluster.
        schema:
          type: boolean
          default: true
      - name: show_plan_logs
        in: query
        description: Whether to include with the current and pending plan information
          the attempt log - can be very large per cluster.
        schema:
          type: boolean
          default: false
      - name: show_plan_history
        in: query
        description: Whether to include with the current and pending plan information
          the plan history- can be very large per cluster.
        schema:
          type: boolean
          default: false
      - name: show_plan_defaults
        in: query
        description: If showing plans, whether to show values that are left at their
          default value (less readable but more informative).
        schema:
          type: boolean
          default: false
      - name: convert_legacy_plans
        in: query
        description: If showing plans, whether to leave pre-2.0.0 plans in their legacy
          format (the default), or whether to update them to 2.0.x+ format (if 'true').
        schema:
          type: boolean
          default: false
      - name: show_system_alerts
        in: query
        description: Number of system alerts (such as forced restarts due to memory
          limits) to be included in the response - can be large per cluster. Negative
          numbers or 0 will not return field.
        schema:
          type: integer
          default: 0
      - name: show_settings
        in: query
        description: Whether to show cluster settings in the response.
        schema:
          type: boolean
          default: false
      - name: enrich_with_template
        in: query
        description: If showing plans, whether to enrich the plan by including the
          missing elements from the deployment template it is based on.
        schema:
          type: boolean
          default: true
      responses:
        200:
          description: Standard response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ElasticsearchResourceInfo'
        404:
          description: 'The Deployment specified by {deployment_id} cannot be found.
            (code: `deployments.deployment_not_found`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - deployments.deployment_not_found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
        500:
          description: 'We have failed you. (code: `deployments.deployment_resource_no_longer_exists`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - deployments.deployment_resource_no_longer_exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
      x-doc:
        tag: Deployment - Info
  /deployments/{deployment_id}/{resource_kind}/{ref_id}/instances/maintenance-mode/_stop:
    post:
      tags:
      - Deployments
      summary: Stop maintenance mode (all instances)
      description: Stops maintenance mode of all instances belonging to a Deployment
        Resource.
      operationId: stop-deployment-resource-instances-all-maintenance-mode
      parameters:
      - name: deployment_id
        in: path
        description: Identifier for the Deployment.
        required: true
        schema:
          type: string
      - name: resource_kind
        in: path
        description: The kind of resource (one of elasticsearch, kibana, apm, or integrations_server).
        required: true
        schema:
          type: string
      - name: ref_id
        in: path
        description: User-specified RefId for the Resource.
        required: true
        schema:
          type: string
      responses:
        202:
          description: The stop maintenance mode command was issued successfully.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DeploymentResourceCommandResponse'
        403:
          description: 'The stop maintenance mode command was prohibited for the given
            Resource. (code: `deployments.instance_update_prohibited_error`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - deployments.instance_update_prohibited_error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
        404:
          description: |-
            * The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)
            * The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)
            * One or more instances of the given resource type are missing. (code: `deployments.instances_missing_on_update_error`)
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - deployments.deployment_not_found
                - deployments.deployment_resource_not_found
                - deployments.instances_missing_on_update_error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
        449:
          description: 'Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - root.unauthorized.rbac.elevated_permissions_required
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
        500:
          description: 'A Resource that was previously stored no longer exists. (code:
            `deployments.deployment_resource_no_longer_exists`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - deployments.deployment_resource_no_longer_exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
      x-doc:
        tag: Deployment - Commands
  /deployments/{deployment_id}/elasticsearch/{ref_id}/_enable-ilm:
    post:
      tags:
      - Deployments
      summary: Migrate Elasticsearch resource to use ILM
      description: Migrates the specified Elasticsearch resource to use ILM.
      operationId: enable-deployment-resource-ilm
      parameters:
      - name: deployment_id
        in: path
        description: Identifier for the Deployment.
        required: true
        schema:
          type: string
      - name: ref_id
        in: path
        description: User-specified RefId for the Resource.
        required: true
        schema:
          type: string
      - name: validate_only
        in: query
        description: When `true`, does not enable ILM but returns warnings if any
          applications may lose availability during ILM migration.
        schema:
          type: boolean
          default: false
      requestBody:
        description: Information to build the ILM policies that will be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnableIlmRequest'
        required: true
      responses:
        200:
          description: Standard response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DeploymentResourceCommandResponse'
        404:
          description: |-
            * The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)
            * The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - deployments.deployment_not_found
                - deployments.deployment_resource_not_found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
        449:
          description: 'Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - root.unauthorized.rbac.elevated_permissions_required
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
        500:
          description: 'We have failed you. (code: `deployments.deployment_resource_no_longer_exists`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - deployments.deployment_resource_no_longer_exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
      x-doc:
        tag: Deployment - Commands
      x-codegen-request-body-name: body
  /deployments/extensions/{extension_id}:
    get:
      tags:
      - Extensions
      summary: Get Extension
      description: Retrieves an extension.
      operationId: get-extension
      parameters:
      - name: extension_id
        in: path
        description: Id of an extension
        required: true
        schema:
          type: string
      - name: include_deployments
        in: query
        description: Include deployments referencing this extension. Up to only 10000
          deployments will be included.
        schema:
          type: boolean
          default: false
      responses:
        200:
          description: The Extension
          headers:
            x-cloud-resource-version:
              description: The resource version, which is used to avoid update conflicts
                with concurrent operations
              schema:
                type: string
            x-cloud-resource-last-modified:
              description: The date-time when the resource was last modified (ISO
                format relative to UTC)
              schema:
                type: string
            x-cloud-resource-created:
              description: The date-time when the resource was created (ISO format
                relative to UTC)
              schema:
                type: string
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Extension'
        404:
          description: 'The extension requested does not exist. (code: `extensions.not_found`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - extensions.not_found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
      x-doc:
        tag: Deployments - Extensions
    put:
      tags:
      - Extensions
      summary: Uploads the Extension
      description: Uploads archive for an extension.
      operationId: upload-extension
      parameters:
      - name: extension_id
        in: path
        description: Id of an extension
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - file
              properties:
                file:
                  type: string
                  description: Zip file that contains the extension
                  format: binary
        required: true
      responses:
        200:
          description: Archive uploaded successfully.
          headers:
            x-cloud-resource-version:
              description: The resource version, which is used to avoid update conflicts
                with concurrent operations
              schema:
                type: string
            x-cloud-resource-last-modified:
              description: The date-time when the resource was last modified (ISO
                format relative to UTC)
              schema:
                type: string
            x-cloud-resource-created:
              description: The date-time when the resource was created (ISO format
                relative to UTC)
              schema:
                type: string
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Extension'
        400:
          description: 'Could not accept the extensions file. (code: `extensions.request_execution_failed`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - extensions.request_execution_failed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
        401:
          description: |-
            * The extension does not belong to you. (code: `extensions.unauthorised`)
            * Your current session does not have a user id associated with it. (code: `extensions.no_user_id`)
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - extensions.unauthorised
                - extensions.no_user_id
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
        404:
          description: 'The extension you want does not exist. (code: `extensions.not_found`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - extensions.not_found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
      x-doc:
        tag: Deployments - Extensions
    post:
      tags:
      - Extensions
      summary: Update Extension
      description: Updates an extension.
      operationId: update-extension
      parameters:
      - name: extension_id
        in: path
        description: Id of an extension
        required: true
        schema:
          type: string
      requestBody:
        description: The extension update data.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateExtensionRequest'
        required: true
      responses:
        200:
          description: Extension updated successfully.
          headers:
            x-cloud-resource-version:
              description: The resource version, which is used to avoid update conflicts
                with concurrent operations
              schema:
                type: string
            x-cloud-resource-last-modified:
              description: The date-time when the resource was last modified (ISO
                format relative to UTC)
              schema:
                type: string
            x-cloud-resource-created:
              description: The date-time when the resource was created (ISO format
                relative to UTC)
              schema:
                type: string
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Extension'
        400:
          description: 'Could not download the extension from the specified URL. (code:
            `extensions.request_execution_failed`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - extensions.request_execution_failed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
        401:
          description: |-
            * The extension does not belong to you. (code: `extensions.unauthorised`)
            * Your current session does not have a user id associated with it. (code: `extensions.no_user_id`)
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - extensions.unauthorised
                - extensions.no_user_id
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
        404:
          description: 'The extension you want does not exist. (code: `extensions.not_found`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - extensions.not_found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
        409:
          description: 'The version you sent does not match the persisted version.
            (code: `extensions.version_conflict`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - extensions.version_conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
      x-doc:
        tag: Deployments - Extensions
      x-codegen-request-body-name: body
    delete:
      tags:
      - Extensions
      summary: Delete Extension
      description: Deletes a Extension.
      operationId: delete-extension
      parameters:
      - name: extension_id
        in: path
        description: Id of an extension
        required: true
        schema:
          type: string
      responses:
        200:
          description: Extension deleted successfully.
          headers:
            x-cloud-resource-version:
              description: The resource version, which is used to avoid update conflicts
                with concurrent operations
              schema:
                type: string
            x-cloud-resource-last-modified:
              description: The date-time when the resource was last modified (ISO
                format relative to UTC)
              schema:
                type: string
            x-cloud-resource-created:
              description: The date-time when the resource was created (ISO format
                relative to UTC)
              schema:
                type: string
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        401:
          description: |-
            * The extension does not belong to you. (code: `extensions.unauthorised`)
            * Your current session does not have a user id associated with it. (code: `extensions.no_user_id`)
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - extensions.unauthorised
                - extensions.no_user_id
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
        404:
          description: 'The extension requested does not exist. (code: `extensions.not_found`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - extensions.not_found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
        409:
          description: 'The version you sent does not match the persisted version.
            (code: `extensions.version_conflict`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - extensions.version_conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
      x-doc:
        tag: Deployments - Extensions
  /deployments/{deployment_id}/{stateless_resource_kind}/{ref_id}/_shutdown:
    post:
      tags:
      - Deployments
      summary: Shutdown Deployment Stateless Resource
      description: |-
        Shut down Stateless Resource belonging to a given Deployment.
        Kibana cannot be shut down on Elasticsearch Service as it is required for Elasticsearch administrative functions, such as Snapshot Lifecycle Management and version upgrades.
      operationId: shutdown-deployment-stateless-resource
      parameters:
      - name: deployment_id
        in: path
        description: Identifier for the Deployment.
        required: true
        schema:
          type: string
      - name: stateless_resource_kind
        in: path
        description: The kind of stateless resource
        required: true
        schema:
          type: string
          enum:
          - kibana
          - apm
          - appsearch
          - enterprise_search
          - integrations_server
      - name: ref_id
        in: path
        description: User-specified RefId for the Resource.
        required: true
        schema:
          type: string
      - name: hide
        in: query
        description: Hide cluster on shutdown. Hidden clusters are not listed by default.
          Only applicable for Platform administrators.
        schema:
          type: boolean
      - name: skip_snapshot
        in: query
        description: If true, will skip taking a snapshot of the cluster before shutting
          the cluster down (if even possible)
        schema:
          type: boolean
          default: false
      responses:
        200:
          description: Standard response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DeploymentResourceCommandResponse'
        400:
          description: 'Parameter is restricted and can only be set by a Platform
            administrator. (code: `deployments.restricted_parameter`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - deployments.restricted_parameter
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
        404:
          description: |-
            * The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)
            * The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - deployments.deployment_not_found
                - deployments.deployment_resource_not_found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
        449:
          description: 'Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - root.unauthorized.rbac.elevated_permissions_required
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
        500:
          description: 'We have failed you. (code: `deployments.deployment_resource_no_longer_exists`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - deployments.deployment_resource_no_longer_exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
      x-doc:
        tag: Deployment - Commands
  /deployments/{deployment_id}/apm/{ref_id}:
    get:
      tags:
      - Deployments
      summary: Get Deployment APM Resource Info
      description: Get info about an APM Resource belonging to a given Deployment.
      operationId: get-deployment-apm-resource-info
      parameters:
      - name: deployment_id
        in: path
        description: Identifier for the Deployment
        required: true
        schema:
          type: string
      - name: ref_id
        in: path
        description: User-specified RefId for the Resource
        required: true
        schema:
          type: string
      - name: show_metadata
        in: query
        description: Whether to include the full cluster metadata in the response
          - can be large per cluster and also include credentials.
        schema:
          type: boolean
          default: false
      - name: show_plans
        in: query
        description: Whether to include the full current and pending plan information
          in the response - can be large per cluster.
        schema:
          type: boolean
          default: true
      - name: show_plan_logs
        in: query
        description: Whether to include with the current and pending plan information
          the attempt log - can be very large per cluster.
        schema:
          type: boolean
          default: false
      - name: show_plan_history
        in: query
        description: Whether to include with the current and pending plan information
          the plan history- can be very large per cluster.
        schema:
          type: boolean
          default: false
      - name: show_plan_defaults
        in: query
        description: If showing plans, whether to show values that are left at their
          default value (less readable but more informative).
        schema:
          type: boolean
          default: false
      - name: show_settings
        in: query
        description: Whether to show cluster settings in the response.
        schema:
          type: boolean
          default: false
      responses:
        200:
          description: Standard response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApmResourceInfo'
        404:
          description: 'The Deployment specified by {deployment_id} cannot be found.
            (code: `deployments.deployment_not_found`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - deployments.deployment_not_found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
        500:
          description: 'We have failed you. (code: `deployments.deployment_resource_no_longer_exists`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - deployments.deployment_resource_no_longer_exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
      x-doc:
        tag: Deployment - Info
  # /deployments/{deployment_id}/{resource_kind}/{ref_id}/instances/{instance_ids}/maintenance-mode/_stop:
  #   post:
  #     tags:
  #     - Deployments
  #     summary: Stop maintenance mode
  #     description: Stops maintenance mode of instances belonging to a Resource.
  #     operationId: stop-deployment-resource-maintenance-mode
  #     parameters:
  #     - name: deployment_id
  #       in: path
  #       description: Identifier for the Deployment.
  #       required: true
  #       schema:
  #         type: string
  #     - name: resource_kind
  #       in: path
  #       description: The kind of resource (one of elasticsearch, kibana, apm, or integrations_server).
  #       required: true
  #       schema:
  #         type: string
  #     - name: ref_id
  #       in: path
  #       description: User-specified RefId for the Resource.
  #       required: true
  #       schema:
  #         type: string
  #     - name: instance_ids
  #       in: path
  #       description: A comma-separated list of instance identifiers.
  #       required: true
  #       style: simple
  #       explode: false
  #       schema:
  #         type: array
  #         items:
  #           type: string
  #     - name: ignore_missing
  #       in: query
  #       description: If true and the instance does not exist then quietly proceed
  #         to the next instance, otherwise treated as an error.
  #       schema:
  #         type: boolean
  #         default: false
  #     responses:
  #       202:
  #         description: The stop maintenance mode command was issued successfully.
  #         content:
  #           '*/*':
  #             schema:
  #               $ref: '#/components/schemas/DeploymentResourceCommandResponse'
  #       403:
  #         description: 'The stop maintenance mode command was prohibited for the given
  #           Resource. (code: `deployments.instance_update_prohibited_error`)'
  #         headers:
  #           x-cloud-error-codes:
  #             description: The error codes associated with the response
  #             schema:
  #               type: string
  #               enum:
  #               - deployments.instance_update_prohibited_error
  #         content:
  #           '*/*':
  #             schema:
  #               $ref: '#/components/schemas/BasicFailedReply'
  #       404:
  #         description: |-
  #           * The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)
  #           * The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)
  #           * One or more instances of the given resource type are missing. (code: `deployments.instances_missing_on_update_error`)
  #         headers:
  #           x-cloud-error-codes:
  #             description: The error codes associated with the response
  #             schema:
  #               type: string
  #               enum:
  #               - deployments.deployment_not_found
  #               - deployments.deployment_resource_not_found
  #               - deployments.instances_missing_on_update_error
  #         content:
  #           '*/*':
  #             schema:
  #               $ref: '#/components/schemas/BasicFailedReply'
  #       449:
  #         description: 'Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)'
  #         headers:
  #           x-cloud-error-codes:
  #             description: The error codes associated with the response
  #             schema:
  #               type: string
  #               enum:
  #               - root.unauthorized.rbac.elevated_permissions_required
  #         content:
  #           '*/*':
  #             schema:
  #               $ref: '#/components/schemas/BasicFailedReply'
  #       500:
  #         description: 'A Resource that was previously stored no longer exists. (code:
  #           `deployments.deployment_resource_no_longer_exists`)'
  #         headers:
  #           x-cloud-error-codes:
  #             description: The error codes associated with the response
  #             schema:
  #               type: string
  #               enum:
  #               - deployments.deployment_resource_no_longer_exists
  #         content:
  #           '*/*':
  #             schema:
  #               $ref: '#/components/schemas/BasicFailedReply'
  #     x-doc:
  #       tag: Deployment - Commands
  /deployments/{deployment_id}/{resource_kind}/{ref_id}/plan/pending:
    delete:
      tags:
      - Deployments
      summary: Cancel resource pending plan
      description: Cancels the pending plan of a Resource belonging to a given Deployment.
      operationId: cancel-deployment-resource-pending-plan
      parameters:
      - name: deployment_id
        in: path
        description: Identifier for the Deployment
        required: true
        schema:
          type: string
      - name: resource_kind
        in: path
        description: The kind of resource
        required: true
        schema:
          type: string
          enum:
          - elasticsearch
          - kibana
          - apm
          - appsearch
          - enterprise_search
          - integrations_server
      - name: ref_id
        in: path
        description: User-specified RefId for the Resource
        required: true
        schema:
          type: string
      - name: force_delete
        in: query
        description: When `true`, deletes the pending plan instead of attempting a
          graceful cancellation. The default is `false`.
        schema:
          type: boolean
          default: false
      - name: ignore_missing
        in: query
        description: When `true`, returns successfully, even when plans are missing.
          The default is `false`.
        schema:
          type: boolean
          default: false
      responses:
        200:
          description: Standard Deployment Resource Crud Response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DeploymentResourceCrudResponse'
        400:
          description: 'The Resource does not have a pending plan. (code: `deployments.resource_does_not_have_a_pending_plan`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - deployments.resource_does_not_have_a_pending_plan
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
        404:
          description: 'The Deployment specified by {deployment_id} cannot be found.
            (code: `deployments.deployment_not_found`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - deployments.deployment_not_found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
        449:
          description: 'Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - root.unauthorized.rbac.elevated_permissions_required
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
        500:
          description: 'We have failed you. (code: `deployments.deployment_resource_no_longer_exists`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - deployments.deployment_resource_no_longer_exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
      x-doc:
        tag: Deployment Resources - CRUD
  /deployments/traffic-filter/associations/{association_type}/{associated_entity_id}/rulesets:
    get:
      tags:
      - DeploymentsTrafficFilter
      summary: Get associated rulesets
      description: Retrieves the rulesets associated with a deployment.
      operationId: get-traffic-filter-deployment-ruleset-associations
      parameters:
      - name: association_type
        in: path
        description: Association type
        required: true
        schema:
          type: string
      - name: associated_entity_id
        in: path
        description: Associated entity ID
        required: true
        schema:
          type: string
      responses:
        200:
          description: Rulesets in the deployment were successfully returned
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TrafficFilterSettings'
        400:
          description: 'Invalid association type. (code: `traffic_filter.invalid_association_type`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - traffic_filter.invalid_association_type
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
        500:
          description: 'Error fetching traffic filter rulesets. (code: `traffic_filter.request_execution_failed`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - traffic_filter.request_execution_failed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
      x-doc:
        tag: Deployments - Traffic Filter - Associations
  /deployments/{deployment_id}/appsearch/{ref_id}:
    get:
      tags:
      - Deployments
      summary: Get Deployment App Search Resource Info
      description: Get info about an App Search Resource belonging to a given Deployment.
      operationId: get-deployment-appsearch-resource-info
      parameters:
      - name: deployment_id
        in: path
        description: Identifier for the Deployment
        required: true
        schema:
          type: string
      - name: ref_id
        in: path
        description: User-specified RefId for the Resource
        required: true
        schema:
          type: string
      - name: show_metadata
        in: query
        description: Whether to include the full cluster metadata in the response
          - can be large per cluster and also include credentials.
        schema:
          type: boolean
          default: false
      - name: show_plans
        in: query
        description: Whether to include the full current and pending plan information
          in the response - can be large per cluster.
        schema:
          type: boolean
          default: true
      - name: show_plan_logs
        in: query
        description: Whether to include with the current and pending plan information
          the attempt log - can be very large per cluster.
        schema:
          type: boolean
          default: false
      - name: show_plan_history
        in: query
        description: Whether to include with the current and pending plan information
          the plan history- can be very large per cluster.
        schema:
          type: boolean
          default: false
      - name: show_plan_defaults
        in: query
        description: If showing plans, whether to show values that are left at their
          default value (less readable but more informative).
        schema:
          type: boolean
          default: false
      - name: show_settings
        in: query
        description: Whether to show cluster settings in the response.
        schema:
          type: boolean
          default: false
      responses:
        200:
          description: Standard response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppSearchResourceInfo'
        404:
          description: 'The Deployment specified by {deployment_id} cannot be found.
            (code: `deployments.deployment_not_found`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - deployments.deployment_not_found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
        500:
          description: 'We have failed you. (code: `deployments.deployment_resource_no_longer_exists`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - deployments.deployment_resource_no_longer_exists
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
      x-doc:
        tag: Deployment - Info
  /deployments/eligible-remote-clusters:
    post:
      tags:
      - Deployments
      summary: Get eligible remote clusters
      description: Returns the list of deployments which contain eligible remote clusters
        for a specific version.
      operationId: search-eligible-remote-clusters
      parameters:
      - name: version
        in: query
        description: The version of the Elasticsearch cluster cluster that will potentially
          be configured to have remote clusters.
        required: true
        schema:
          type: string
      requestBody:
        description: (Optional) The search query to run against all deployments containing
          eligible remote clusters. When not specified, all the eligible deployments
          are matched.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchRequest'
        required: false
      responses:
        200:
          description: List of deployments which contains eligible remote clusters
            for a specific version
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DeploymentsSearchResponse'
        400:
          description: 'The provided version is invalid. (code: `stackpack.invalid_version`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - stackpack.invalid_version
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
      x-doc:
        tag: Deployment - Remote Clusters
      x-codegen-request-body-name: body
  /deployments/traffic-filter/rulesets/{ruleset_id}:
    get:
      tags:
      - DeploymentsTrafficFilter
      summary: Retrieves the ruleset by ID.
      description: Retrieves a list of resources that are associated to the specified
        ruleset.
      operationId: get-traffic-filter-ruleset
      parameters:
      - name: ruleset_id
        in: path
        description: The mandatory ruleset ID.
        required: true
        schema:
          type: string
      - name: include_associations
        in: query
        description: Retrieves a list of resources that are associated to the specified
          ruleset.
        schema:
          type: boolean
          default: false
      responses:
        200:
          description: The container for a set of traffic filter rules.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TrafficFilterRulesetInfo'
        404:
          description: 'The traffic filter ruleset specified by {ruleset_id} cannot
            be found. (code: `traffic_filter.not_found`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - traffic_filter.not_found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
        500:
          description: 'Error reading the traffic filter ruleset. (code: `traffic_filter.request_execution_failed`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - traffic_filter.request_execution_failed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
      x-doc:
        tag: Deployments - Traffic Filter - CRUD
    put:
      tags:
      - DeploymentsTrafficFilter
      summary: Updates a ruleset
      description: Updates the ruleset with the definition.
      operationId: update-traffic-filter-ruleset
      parameters:
      - name: ruleset_id
        in: path
        description: The mandatory ruleset ID.
        required: true
        schema:
          type: string
      requestBody:
        description: The specification for traffic filter ruleset.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrafficFilterRulesetRequest'
        required: true
      responses:
        200:
          description: The ruleset definition was valid and the update has started.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TrafficFilterRulesetResponse'
        404:
          description: 'The traffic filter ruleset specified by {ruleset_id} cannot
            be found. (code: `traffic_filter.not_found`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - traffic_filter.not_found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
        500:
          description: 'Error reading the traffic filter ruleset. (code: `traffic_filter.request_execution_failed`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - traffic_filter.request_execution_failed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
      x-doc:
        tag: Deployments - Traffic Filter - CRUD
      x-codegen-request-body-name: body
    delete:
      tags:
      - DeploymentsTrafficFilter
      summary: Delete a ruleset
      description: Deletes the ruleset by ID.
      operationId: delete-traffic-filter-ruleset
      parameters:
      - name: ruleset_id
        in: path
        description: The mandatory ruleset ID.
        required: true
        schema:
          type: string
      - name: ignore_associations
        in: query
        description: When true, ignores the associations and deletes the ruleset.
          When false, recognizes the associations, which prevents the deletion of
          the rule set.
        schema:
          type: boolean
          default: false
      responses:
        200:
          description: The traffic filter ruleset was successfully deleted.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        404:
          description: 'The traffic filter ruleset specified by {ruleset_id} cannot
            be found. (code: `traffic_filter.not_found`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - traffic_filter.not_found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
        500:
          description: 'Error deleting the traffic filter ruleset. (code: `traffic_filter.request_execution_failed`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - traffic_filter.request_execution_failed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
      x-doc:
        tag: Deployments - Traffic Filter - CRUD
  /deployments:
    get:
      tags:
      - Deployments
      summary: List Deployments
      description: List Deployments.
      operationId: list-deployments
      responses:
        200:
          description: The list of deployments that belong to the authenticated user.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DeploymentsListResponse'
        401:
          description: You are not authorized to perform this action.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
      x-doc:
        tag: Deployment - CRUD
    post:
      tags:
      - Deployments
      summary: Create Deployment
      description: Creates a Deployment.
      operationId: create-deployment
      parameters:
      - name: request_id
        in: query
        description: An optional idempotency token - if two create requests share
          the same request_id token (min size 32 characters, max 128) then only one
          deployment will be created, the second request will return the info of that
          deployment (in the same format described below, but with blanks for auth-related
          fields)
        schema:
          type: string
      - name: validate_only
        in: query
        description: If true, will just validate the Deployment definition but will
          not perform the creation
        schema:
          type: boolean
          default: false
      requestBody:
        description: The deployment definition
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeploymentCreateRequest'
        required: true
      responses:
        200:
          description: The request was valid (used when validate_only is true).
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DeploymentCreateResponse'
        201:
          description: The request was valid and a new deployment was created
          headers:
            x-cloud-resource-version:
              description: The resource version, which is used to avoid update conflicts
                with concurrent operations
              schema:
                type: string
            x-cloud-resource-last-modified:
              description: The date-time when the resource was last modified (ISO
                format relative to UTC)
              schema:
                type: string
            x-cloud-resource-created:
              description: The date-time when the resource was created (ISO format
                relative to UTC)
              schema:
                type: string
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DeploymentCreateResponse'
        202:
          description: The request was valid and deployment creation had already been
            started.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DeploymentCreateResponse'
        400:
          description: The deployment request had errors.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
        401:
          description: You are not authorized to perform this action.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
      x-doc:
        tag: Deployment - CRUD
      x-codegen-request-body-name: body
  /deployments/{deployment_id}/{stateless_resource_kind}/{ref_id}/_upgrade:
    post:
      tags:
      - Deployments
      summary: Upgrade Kibana, APM, Integrations Server, AppSearch, Enterprise Search
        inside Deployment
      description: Upgrades a running cluster.
      operationId: upgrade-deployment-stateless-resource
      parameters:
      - name: deployment_id
        in: path
        description: Identifier for the Deployment.
        required: true
        schema:
          type: string
      - name: stateless_resource_kind
        in: path
        description: The kind of stateless resource
        required: true
        schema:
          type: string
          enum:
          - kibana
          - apm
          - appsearch
          - enterprise_search
          - integrations_server
      - name: ref_id
        in: path
        description: User-specified RefId for the Resource.
        required: true
        schema:
          type: string
      - name: validate_only
        in: query
        description: When `true`, returns the update version without performing the
          upgrade
        schema:
          type: boolean
          default: false
      responses:
        202:
          description: The upgrade command was issued successfully, use the "GET"
            command on the /{cluster_id} resource to monitor progress
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DeploymentResourceUpgradeResponse'
        404:
          description: |-
            * The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)
            * The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - deployments.deployment_not_found
                - deployments.deployment_resource_not_found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
        449:
          description: 'Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)'
          headers:
            x-cloud-error-codes:
              description: The error codes associated with the response
              schema:
                type: string
                enum:
                - root.unauthorized.rbac.elevated_permissions_required
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BasicFailedReply'
      x-doc:
        tag: Deployment - Commands
components:
  schemas:
    AppSearchPayload:
      required:
      - elasticsearch_cluster_ref_id
      - plan
      - ref_id
      - region
      type: object
      properties:
        elasticsearch_cluster_ref_id:
          type: string
          description: Alias to the Elasticsearch Cluster to attach AppSearch to
        display_name:
          type: string
          description: 'The human readable name for the AppSearch cluster (default:
            takes the name of its Elasticsearch cluster)'
        settings:
          $ref: '#/components/schemas/AppSearchSettings'
        region:
          type: string
          description: The region where this resource exists
        ref_id:
          type: string
          description: A locally-unique user-specified id for AppSearch
        plan:
          $ref: '#/components/schemas/AppSearchPlan'
      description: An AppSearch creation request paired with the alias of the Elasticsearch
        cluster it should be paired with
    ElasticsearchClusterPlansInfo:
      required:
      - healthy
      - history
      type: object
      properties:
        healthy:
          type: boolean
          description: Whether the plan situation is healthy (if unhealthy, means
            the last plan attempt failed)
        current:
          $ref: '#/components/schemas/ElasticsearchClusterPlanInfo'
        pending:
          $ref: '#/components/schemas/ElasticsearchClusterPlanInfo'
        history:
          type: array
          items:
            $ref: '#/components/schemas/ElasticsearchClusterPlanInfo'
      description: Information about the current, pending, and past Elasticsearch
        cluster plans.
    DeploymentSearchResponse:
      required:
      - healthy
      - id
      - name
      - resources
      type: object
      properties:
        name:
          type: string
          description: The name of this deployment
        settings:
          $ref: '#/components/schemas/DeploymentSettings'
        healthy:
          type: boolean
          description: 'Whether the deployment is overall healthy or not (one or more
            of the resource info subsections will have healthy: false)'
        alias:
          type: string
          description: A user-defined deployment alias for user-friendly resource
            URLs
        id:
          type: string
          description: A randomly-generated id of this Deployment
        resources:
          $ref: '#/components/schemas/DeploymentResources'
        metadata:
          $ref: '#/components/schemas/DeploymentMetadata'
      description: Describes a searched Deployment
    EnterpriseSearchSystemSettings:
      type: object
      properties:
        elasticsearch_password:
          type: string
          description: Optionally override the account within Enterprise Search -
            defaults to a system account that always exists (if specified, the username
            must also be specified). Note that this field is never returned from the
            API, it is write only.
        elasticsearch_username:
          type: string
          description: Optionally override the account within Enterprise Search -
            defaults to a system account that always exists (if specified, the password
            must also be specified). Note that this field is never returned from the
            API, it is write only.
        secret_session_key:
          type: string
          description: Optionally override the secret session key within Enterprise
            Search - defaults to the previously existing secretSession. Note that
            this field is never returned from the API, it is write only.
        elasticsearch_url:
          type: string
          description: Optionally override the URL to which to send data (for advanced
            users only, if unspecified the system selects an internal URL)
      description: This structure defines a curated subset of the Enterprise Search
        settings. (This field together with 'user_settings_override*' and  'user_settings*'
        defines the total set of Enterprise Search settings)
    TransientAppSearchPlanConfiguration:
      type: object
      properties:
        plan_configuration:
          $ref: '#/components/schemas/AppSearchPlanControlConfiguration'
        strategy:
          $ref: '#/components/schemas/PlanStrategy'
      description: Defines configuration parameters that control how the plan (ie
        consisting of the cluster topology and AppSearch settings) is applied
    ElasticsearchConfiguration:
      type: object
      properties:
        user_settings_override_json:
          type: object
          properties: {}
          description: 'An arbitrary JSON object allowing ECE admins owners to set
            clusters'' parameters (only one of this and ''user_settings_override_yaml''
            is allowed), ie in addition to the documented ''system_settings''. NOTES:
            (This field together with ''system_settings'' and ''user_settings*'' defines
            the total set of Elasticsearch settings)'
        enabled_built_in_plugins:
          type: array
          description: 'A list of plugin names from the Elastic-supported subset that
            are bundled with the version images. NOTES: (Users should consult the
            Elastic stack objects to see what plugins are available, this is currently
            only available from the UI)'
          items:
            type: string
        user_plugins:
          type: array
          description: A list of admin-uploaded plugin objects that are available
            for this user.
          items:
            $ref: '#/components/schemas/ElasticsearchUserPlugin'
        user_settings_yaml:
          type: string
          description: 'An arbitrary YAML object allowing cluster owners to set their
            parameters (only one of this and ''user_settings_json'' is allowed), provided
            the parameters arey are on the allowlist and not on the denylist. NOTES:
            (This field together with ''user_settings_override*'' and ''system_settings''
            defines the total set of Elasticsearch settings)'
        user_bundles:
          type: array
          description: A list of admin-uploaded bundle objects (eg scripts, synonym
            files) that are available for this user.
          items:
            $ref: '#/components/schemas/ElasticsearchUserBundle'
        version:
          type: string
          description: The version of the Elasticsearch cluster (must be one of the
            ECE supported versions). Currently cannot be different across the topology
            (and is generally specified in the globals). Defaults to the latest version
            if not specified.
        user_settings_json:
          type: object
          properties: {}
          description: 'An arbitrary JSON object allowing cluster owners to set their
            parameters (only one of this and ''user_settings_yaml'' is allowed), provided
            the parameters arey are on the allowlist and not on the denylist. NOTES:
            (This field together with ''user_settings_override*'' and ''system_settings''
            defines the total set of Elasticsearch settings)'
        curation:
          $ref: '#/components/schemas/ElasticsearchCuration'
        system_settings:
          $ref: '#/components/schemas/ElasticsearchSystemSettings'
        user_settings_override_yaml:
          type: string
          description: 'An arbitrary YAML object allowing ECE admins owners to set
            clusters'' parameters (only one of this and ''user_settings_override_json''
            is allowed), ie in addition to the documented ''system_settings''. NOTES:
            (This field together with ''system_settings'' and ''user_settings*'' defines
            the total set of Elasticsearch settings)'
        docker_image:
          type: string
          description: A docker URI that allows overriding of the default docker image
            specified for this version
        node_attributes:
          type: object
          additionalProperties:
            type: string
          description: Defines the Elasticsearch node attributes for the instances
            in the topology
      description: The Elasticsearch cluster settings. When specified at the top level,
        provides a field-by-field default. When specified at the topology level, provides
        the override settings.
    DtsDimensionCosts:
      required:
      - cost
      - name
      - quantity
      - rate
      - sku
      - type
      type: object
      properties:
        sku:
          type: string
          description: DTS dimension Stock Keeping Unit (SKU)
        name:
          type: string
          description: DTS dimension name
        rate:
          $ref: '#/components/schemas/DtsRate'
        cost:
          type: number
          description: Costs associated to the Data Transfer and Storage (DTS) dimensions
            for an organization
          format: double
        type:
          type: string
          description: Type of the DTS dimension usage
        quantity:
          $ref: '#/components/schemas/DtsQuantity'
      description: The costs associated to a Data Transfer and Storage (DTS) dimension
        for an organization. All of the costs, credits, and trials are expressed in
        Elastic Consumption Units (ECU).
    RestoreSnapshotConfiguration:
      required:
      - snapshot_name
      type: object
      properties:
        repository_config:
          $ref: '#/components/schemas/RestoreSnapshotRepoConfiguration'
        repository_name:
          type: string
          description: If specified, contains the name of the snapshot repository
            - else will default to the Elastic Cloud system repo ('found-snapshots')
        restore_payload:
          $ref: '#/components/schemas/RestoreSnapshotApiConfiguration'
        strategy:
          type: string
          description: The restore strategy to use. Defaults to a full restore. Partial
            restore will attempt to restore unavailable indices only
          enum:
          - partial
          - full
          - recovery
        source_cluster_id:
          type: string
          description: If specified, contains the name of the source cluster id. Do
            not send this if you are sending repository_config
        snapshot_name:
          type: string
          description: The name of the snapshot to restore. Use '\_\_latest_success\_\_'
            to get the most recent snapshot from the specified repository
      description: Restores a snapshot from a local or remote repository.
    ApmConfiguration:
      type: object
      properties:
        user_settings_override_json:
          type: object
          properties: {}
          description: An arbitrary JSON object allowing ECE admins owners to set
            clusters' parameters (only one of this and 'user_settings_override_yaml'
            is allowed), ie in addition to the documented 'system_settings'. (This
            field together with 'system_settings' and 'user_settings*' defines the
            total set of Apm settings)
        user_settings_yaml:
          type: string
          description: An arbitrary YAML object allowing (non-admin) cluster owners
            to set their parameters (only one of this and 'user_settings_json' is
            allowed), provided the parameters are on the allowlist and not on the
            denylist. (These field together with 'user_settings_override*' and 'system_settings'
            defines the total set of Apm settings)
        version:
          type: string
          description: The version of the Apm cluster (must be one of the ECE supported
            versions, and won't work unless it matches the APM version. Leave blank
            to auto-detect version.)
        user_settings_json:
          type: object
          properties: {}
          description: An arbitrary JSON object allowing (non-admin) cluster owners
            to set their parameters (only one of this and 'user_settings_yaml' is
            allowed), provided the parameters are on the allowlist and not on the
            denylist. (This field together with 'user_settings_override*' and 'system_settings'
            defines the total set of Apm settings)
        system_settings:
          $ref: '#/components/schemas/ApmSystemSettings'
        user_settings_override_yaml:
          type: string
          description: An arbitrary YAML object allowing ECE admins owners to set
            clusters' parameters (only one of this and 'user_settings_override_json'
            is allowed), ie in addition to the documented 'system_settings'. (This
            field together with 'system_settings' and 'user_settings*' defines the
            total set of Apm settings)
        docker_image:
          type: string
          description: A docker URI that allows overriding of the default docker image
            specified for this version
      description: The configuration options for the APM Server.
    ManagedMonitoringSettings:
      required:
      - target_cluster_id
      type: object
      properties:
        target_cluster_id:
          type: string
          description: The Id of the target cluster to which to send monitoring information
      description: The settings for sending monitoring information to another cluster.
    ElasticsearchScriptingUserSettings:
      type: object
      properties:
        expressions_enabled:
          type: boolean
          description: '(5.x+ only) If enabled (the default) then the expressions
            scripting engine is allowed as a sandboxed language. Sandboxed languages
            are the only ones allowed if ''sandbox_mode'' is set to true. NOTES: (Corresponds
            to the parameters ''script.engine.expression.[file|stored|inline]'')'
        stored:
          $ref: '#/components/schemas/ElasticsearchScriptTypeSettings'
        painless_enabled:
          type: boolean
          description: '(5.x+ only) If enabled (the default) then the painless scripting
            engine is allowed as a sandboxed language. Sandboxed languages are the
            only ones allowed if ''sandbox_mode'' is set to true. NOTES: (Corresponds
            to the parameters ''script.engine.painless.[file|stored|inline]'')'
        file:
          $ref: '#/components/schemas/ElasticsearchScriptTypeSettings'
        inline:
          $ref: '#/components/schemas/ElasticsearchScriptTypeSettings'
        mustache_enabled:
          type: boolean
          description: '(5.x+ only) If enabled (the default) then the mustache scripting
            engine is allowed as a sandboxed language. Sandboxed languages are the
            only ones allowed if ''sandbox_mode'' is set to true. NOTES: (Corresponds
            to the parameters ''script.engine.mustache.[file|stored|inline]'')'
      description: 'Controls the languages supported by the Elasticsearch cluster,
        such as Painless, Mustache, and Expressions. Controls how the languages are
        used, such as file, index, and inline. TIP: For complex configurations, leave
        these blank and configure these settings in the user YAML or JSON.'
    PlanStrategy:
      type: object
      properties:
        rolling:
          $ref: '#/components/schemas/RollingStrategyConfig'
        rolling_grow_and_shrink:
          $ref: '#/components/schemas/RollingGrowShrinkStrategyConfig'
        grow_and_shrink:
          $ref: '#/components/schemas/GrowShrinkStrategyConfig'
        autodetect:
          $ref: '#/components/schemas/AutodetectStrategyConfig'
      description: The options for performing a plan change. Specify only one property
        each time. The default is `grow_and_shrink`.
    ElasticsearchClusterUser:
      required:
      - password_hash
      - username
      type: object
      properties:
        username:
          type: string
          description: The username
        password_hash:
          type: string
          description: The hashed password
      description: The information about an Elasticsearch cluster user.
    ElasticsearchShardsInfo:
      required:
      - available_shards
      - healthy
      - unavailable_replicas
      - unavailable_shards
      type: object
      properties:
        healthy:
          type: boolean
          description: Whether the shard situation is healthy (any unavailable shards
            is unhealthy)
        unavailable_shards:
          type: array
          items:
            $ref: '#/components/schemas/ElasticsearchShardElement'
        unavailable_replicas:
          type: array
          items:
            $ref: '#/components/schemas/ElasticsearchReplicaElement'
        available_shards:
          type: array
          items:
            $ref: '#/components/schemas/ElasticsearchShardElement'
      description: Information about the shards and replicas that comprise the Elasticsearch
        indices.
    ElasticsearchClusterPlanInfo:
      required:
      - healthy
      - plan_attempt_log
      - warnings
      type: object
      properties:
        attempt_end_time:
          type: string
          description: If this plan completed or failed (ie is not pending), when
            the attempt ended (ISO format in UTC)
          format: date-time
        plan_attempt_id:
          type: string
          description: A UUID for each plan attempt
        warnings:
          type: array
          items:
            $ref: '#/components/schemas/ClusterPlanWarning'
        healthy:
          type: boolean
          description: Either the plan ended successfully, or is not yet completed
            (and no errors have occurred)
        plan_end_time:
          type: string
          description: If this plan is not current or pending, when the plan was no
            longer active (ISO format in UTC)
          format: date-time
        source:
          $ref: '#/components/schemas/ChangeSourceInfo'
        plan_attempt_log:
          type: array
          items:
            $ref: '#/components/schemas/ClusterPlanStepInfo'
        plan:
          $ref: '#/components/schemas/ElasticsearchClusterPlan'
        plan_attempt_name:
          type: string
          description: A human readable name for each plan attempt, only populated
            when retrieving plan histories
        attempt_start_time:
          type: string
          description: When this plan attempt (ie to apply the plan to the cluster)
            started (ISO format in UTC)
          format: date-time
      description: Information about the Elasticsearch cluster plan.
    ElasticsearchReplicaElement:
      required:
      - instance_name
      - replica_count
      type: object
      properties:
        instance_name:
          type: string
          description: The Elastic Cloud name/id of the instance (container)
        replica_count:
          type: integer
          description: The number of unavailable replicas on this instance
          format: int32
      description: 'Information about the unavailable replicas. NOTE: Unlike shards,
        unavailable replicas indicate a loss of redundancy rather than a loss of availability.'
    ApiKeysResponse:
      required:
      - keys
      type: object
      properties:
        keys:
          type: array
          description: The list of API keys.
          items:
            $ref: '#/components/schemas/ApiKeyResponse'
      description: The response model for the API keys.
    DeploymentCosts:
      required:
      - costs
      - deployment_id
      - deployment_name
      - hourly_rate
      type: object
      properties:
        deployment_id:
          type: string
          description: Elasticsearch deployment id
        costs:
          $ref: '#/components/schemas/Costs'
        period:
          $ref: '#/components/schemas/Period'
        deployment_name:
          type: string
          description: Elasticsearch deployment name
        hourly_rate:
          type: number
          description: Price per hour
          format: double
      description: Detailed costs for a deployment for an organization. All of the
        costs are expressed in Elastic Consumption Unit (ECU).
    ApmPayload:
      required:
      - elasticsearch_cluster_ref_id
      - plan
      - ref_id
      - region
      type: object
      properties:
        elasticsearch_cluster_ref_id:
          type: string
          description: Alias to the Elasticsearch Cluster to attach APM to
        display_name:
          type: string
          description: 'The human readable name for the APM cluster (default: takes
            the name of its Elasticsearch cluster)'
        settings:
          $ref: '#/components/schemas/ApmSettings'
        region:
          type: string
          description: The region where this resource exists
        ref_id:
          type: string
          description: A locally-unique user-specified id for APM
        plan:
          $ref: '#/components/schemas/ApmPlan'
      description: An APM creation request paired with the alias of the Elasticsearch
        cluster it should be paired with
    BasicFailedReplyElement:
      required:
      - code
      - message
      type: object
      properties:
        fields:
          type: array
          description: If the error can be tied to a specific field or fields in the
            user request, this lists those fields
          items:
            type: string
        message:
          type: string
          description: A human readable message describing the error that occurred
        code:
          type: string
          description: A structured code representing the error type that occurred
    RestoreSnapshotApiConfiguration:
      type: object
      properties:
        indices:
          type: array
          description: The list of indices to restore (supports +ve and -ve selection
            and wildcarding - see the default Elasticsearch index format documentation)
          items:
            type: string
        raw_settings:
          type: object
          properties: {}
          description: This JSON object (merged with the 'indices' field (if present)
            is passed untouched into the restore command - see the Elasticsearch '_snapshot'
            documentation for more details on supported formats
      description: The configuration for the restore command, such as which indices
        you want to restore.
    TransientElasticsearchPlanConfiguration:
      type: object
      properties:
        plan_configuration:
          $ref: '#/components/schemas/ElasticsearchPlanControlConfiguration'
        cluster_settings_json:
          type: object
          properties: {}
          description: |
            If specified, contains transient settings to be applied to an Elasticsearch cluster during changes, default values shown below applied.
            These can be overridden by specifying them in the map (or null to unset). Additional settings can also be set. Settings will be cleared after the plan has finished. If not specified, no settings will be applied.
            NOTE: These settings are only explicitly cleared for 5.x+ clusters, they must be hand-reset to their defaults in 2.x- (or a cluster reboot will clear them).
            - indices.store.throttle.max_bytes_per_sec: 150Mb
            - indices.recovery.max_bytes_per_sec: 150Mb
            - cluster.routing.allocation.cluster_concurrent_rebalance: 10
            - cluster.routing.allocation.node_initial_primaries_recoveries: 8
            - cluster.routing.allocation.node_concurrent_incoming_recoveries: 8
        remote_clusters:
          $ref: '#/components/schemas/RemoteResources'
        restore_snapshot:
          $ref: '#/components/schemas/RestoreSnapshotConfiguration'
        strategy:
          $ref: '#/components/schemas/PlanStrategy'
      description: Defines the configuration parameters that control how the plan
        is applied. For example, the Elasticsearch cluster topology and Elasticsearch
        settings.
    ClusterPlanStepLogMessageInfo:
      required:
      - details
      - message
      - stage
      - timestamp
      type: object
      properties:
        timestamp:
          type: string
          description: Timestamp marking on info log of step
          format: date-time
        delta_in_millis:
          type: integer
          description: Time in milliseconds since previous log message
          format: int64
        details:
          type: object
          additionalProperties:
            type: string
          description: A map with details for the log about what happened during the
            step execution. Keys and values for are always both strings, representing
            the name of the detail and its value, respectively.
        failure_type:
          type: string
          description: The failure type, in case the step failed
        message:
          type: string
          description: Human readable log message
        stage:
          type: string
          description: Stage that info log message takes place in
          enum:
          - starting
          - completed
          - in_progress
      description: The log message from a specified stage of an executed step in a
        plan.
    DeploymentUpdateRequest:
      required:
      - prune_orphans
      type: object
      properties:
        name:
          type: string
          description: A new name for the deployment, otherwise stays the same.
        settings:
          $ref: '#/components/schemas/DeploymentUpdateSettings'
        prune_orphans:
          type: boolean
          description: Whether or not to prune orphan resources that are no longer
            mentioned in this request. Note that resourcesare tracked by ref_id, and
            if a resource's ref_id is changed, any previous running resources created
            with that previousref_id are considered to be orphaned as well.
        alias:
          type: string
          description: A user-defined alias to use in place of Cluster IDs for user-friendly
            URLs
        resources:
          $ref: '#/components/schemas/DeploymentUpdateResources'
        metadata:
          $ref: '#/components/schemas/DeploymentUpdateMetadata'
      description: A request for updating a Deployment consisting of multiple resources
    KibanaConfiguration:
      type: object
      properties:
        user_settings_override_json:
          type: object
          properties: {}
          description: An arbitrary JSON object allowing ECE admins owners to set
            clusters' parameters (only one of this and 'user_settings_override_yaml'
            is allowed), ie in addition to the documented 'system_settings'. (This
            field together with 'system_settings' and 'user_settings*' defines the
            total set of Kibana settings)
        user_settings_yaml:
          type: string
          description: An arbitrary YAML object allowing (non-admin) cluster owners
            to set their parameters (only one of this and 'user_settings_json' is
            allowed), provided the parameters are on the allowlist and not on the
            denylist. (These field together with 'user_settings_override*' and 'system_settings'
            defines the total set of Kibana settings)
        version:
          type: string
          description: The version of the Kibana cluster (must be one of the ECE supported
            versions, and won't work unless it matches the Elasticsearch version.
            Leave blank to auto-detect version.)
        user_settings_json:
          type: object
          properties: {}
          description: An arbitrary JSON object allowing (non-admin) cluster owners
            to set their parameters (only one of this and 'user_settings_yaml' is
            allowed), provided the parameters are on the allowlist and not on the
            denylist. (This field together with 'user_settings_override*' and 'system_settings'
            defines the total set of Kibana settings)
        system_settings:
          $ref: '#/components/schemas/KibanaSystemSettings'
        user_settings_override_yaml:
          type: string
          description: An arbitrary YAML object allowing ECE admins owners to set
            clusters' parameters (only one of this and 'user_settings_override_json'
            is allowed), ie in addition to the documented 'system_settings'. (This
            field together with 'system_settings' and 'user_settings*' defines the
            total set of Kibana settings)
        docker_image:
          type: string
          description: A docker URI that allows overriding of the default docker image
            specified for this version
      description: The Kibana instance settings. When specified at the top level,
        provides a field-by-field default. When specified at the topology level, provides
        the override settings.
    RestoreSnapshotRepoConfiguration:
      type: object
      properties:
        raw_settings:
          type: object
          properties: {}
          description: The remote snapshot settings raw JSON - see the Elasticsearch
            '_snapshot' documentation for more details on supported formats
      description: Configures the location of a remote repository. The default is
        the system repository.
    KeystoreSecret:
      type: object
      properties:
        as_file:
          type: boolean
          description: Stores the keystore secret as a file. The default is false,
            which stores the keystore secret as string when value is a plain string,
            or true when value is an object.
        value:
          type: object
          properties: {}
          description: 'Value of this setting. This can either be a string or a JSON
            object that is stored as a JSON string in the keystore. NOTE: When the
            keystore secret is unspecified, it is removed.'
      description: The value that you configure for the Elasticsearch keystore secret.
    ClusterMetadataPortInfo:
      required:
      - http
      - https
      - transport_passthrough
      type: object
      properties:
        transport_passthrough:
          type: integer
          description: Port where the cluster listens for transport traffic using
            TLS
          format: int32
        http:
          type: integer
          description: Port where the cluster listens for HTTP traffic
          format: int32
        https:
          type: integer
          description: Port where the cluster listens for HTTPS traffic
          format: int32
      description: Information about the ports that allow communication between the
        Elasticsearch cluster and various protocols.
    ElasticsearchNodeType:
      type: object
      properties:
        data:
          type: boolean
          description: 'Defines whether this node can hold data (default: false)'
        master:
          type: boolean
          description: 'Defines whether this node can be elected master (default:
            false)'
        ingest:
          type: boolean
          description: 'Defines whether this node can run an ingest pipeline (default:
            false)'
        ml:
          type: boolean
          description: 'Defines whether this node can run ml jobs, valid only for
            versions 5.4.0 or greater (default: false)'
      description: 'Controls the combinations of Elasticsearch node types. TIP: By
        default, the Elasticsearch node is master eligible, can hold data, and run
        ingest pipelines. WARNING: Do not set for tiebreaker topologies.'
    DeploymentResourceUpgradeResponse:
      required:
      - resource_id
      - stack_version
      type: object
      properties:
        stack_version:
          type: string
        resource_id:
          type: string
    SnapshotStatusInfo:
      required:
      - count
      - healthy
      - recent_success
      type: object
      properties:
        count:
          type: integer
          description: Number of snapshots stored for this cluster
          format: int32
        scheduled_time:
          type: string
          description: Scheduled time of next snapshot attempt
          format: date-time
        latest_end_time:
          type: string
          description: The end time of the most recently attempted snapshot
          format: date-time
        healthy:
          type: boolean
          description: Health status of snapshots for this cluster
        latest_successful:
          type: boolean
          description: Latest snapshot status
        recent_success:
          type: boolean
          description: Indicates whether the cluster has a relatively recent successful
            snapshot.
        latest_successful_end_time:
          type: string
          description: The end time of the most recently successful snapshot
          format: date-time
        latest_status:
          type: string
          description: Status of the latest snapshot attempt, if any exist.
      description: Information about the snapshot status for the Elasticsearch cluster.
        For example, the health status.
    DeploymentDiagnostics:
      type: object
      properties:
        creates:
          $ref: '#/components/schemas/Creates'
        updates:
          $ref: '#/components/schemas/Updates'
      description: Describes the diagnostics for a given Deployment-modifying payload
    ElasticsearchDependant:
      required:
      - id
      - kind
      type: object
      properties:
        kind:
          type: string
          description: The kind of resource
        id:
          type: string
          description: The id of the orphaned resource
      description: Details about an orphaned Elasticsearch-dependent resources.
    EnterpriseSearchPlanInfo:
      required:
      - healthy
      - plan_attempt_log
      - warnings
      type: object
      properties:
        attempt_end_time:
          type: string
          description: If this plan completed or failed (ie is not pending), when
            the attempt ended (ISO format in UTC)
          format: date-time
        plan_attempt_id:
          type: string
          description: A UUID for each plan attempt
        warnings:
          type: array
          items:
            $ref: '#/components/schemas/ClusterPlanWarning'
        healthy:
          type: boolean
          description: Either the plan ended successfully, or is not yet completed
            (and no errors have occurred)
        plan_end_time:
          type: string
          description: If this plan is not current or pending, when the plan was no
            longer active (ISO format in UTC)
          format: date-time
        source:
          $ref: '#/components/schemas/ChangeSourceInfo'
        plan_attempt_log:
          type: array
          items:
            $ref: '#/components/schemas/ClusterPlanStepInfo'
        plan:
          $ref: '#/components/schemas/EnterpriseSearchPlan'
        plan_attempt_name:
          type: string
          description: A human readable name for each plan attempt, only populated
            when retrieving plan histories
        attempt_start_time:
          type: string
          description: When this plan attempt (ie to apply the plan to the Enterprise
            Search) started (ISO format in UTC)
          format: date-time
      description: Information about the Enterprise Search Server plan.
    ApmSettings:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/ClusterMetadataSettings'
      description: The settings for the APM Server.
    DeploymentTemplateInfoV2:
      required:
      - deployment_template
      - id
      - instance_configurations
      - name
      type: object
      properties:
        instance_configurations:
          type: array
          description: List of instance configurations used in the cluster template.
          items:
            $ref: '#/components/schemas/InstanceConfigurationInfo'
        description:
          type: string
          description: An optional description for the template.
        template_category_id:
          type: string
          description: Provider and version agnostic template identifier used for
            grouping related template types.
        min_version:
          type: string
          description: Minimum stack version required by this template, if any.
        kibana_deeplink:
          type: array
          description: The Kibana Deeplink for this type of deployment.
          items:
            $ref: '#/components/schemas/KibanaDeeplink'
        id:
          type: string
          description: The unique identifier for the template.
        order:
          type: integer
          description: Determines the order in which this template should be returned
            when listed. Templates are returned in ascending order. If not specified,
            then the template willbe appended to the end of the list.
          format: int32
        source:
          $ref: '#/components/schemas/ChangeSourceInfo'
        deployment_template:
          $ref: '#/components/schemas/DeploymentCreateRequest'
        metadata:
          type: array
          description: Optional arbitrary metadata to associate with this template.
          items:
            $ref: '#/components/schemas/MetadataItem'
        system_owned:
          type: boolean
          description: Whether or not if this is system owned template.
        name:
          type: string
          description: A human readable name for the template.
      description: Deployment template detailed information
    ElasticsearchMonitoringInfo:
      required:
      - destination_cluster_ids
      - healthy
      - last_modified
      - last_update_status
      - source_cluster_ids
      type: object
      properties:
        healthy:
          type: boolean
          description: Whether the Monitoring configuration has been successfully
            applied
        last_update_status:
          type: string
          description: The status message from the last update (successful or not)
        destination_cluster_ids:
          type: array
          description: The list of clusters Ids to which this cluster is currently
            sending monitoring data
          items:
            type: string
        last_modified:
          type: string
          description: The time the monitoring configuration was last changed
          format: date-time
        source_cluster_ids:
          type: array
          description: The list of clusters Ids from which this cluster is currently
            receiving monitoring data
          items:
            type: string
      description: Information about the monitoring status for the Elasticsearch cluster.
    ElasticsearchClusterBlockingIssueElement:
      required:
      - description
      - instances
      type: object
      properties:
        instances:
          type: array
          description: A list of instances that are affected by the issue
          items:
            type: string
        description:
          type: string
          description: Description of the issue
      description: Information about an issue and the Elasticsearch instance it affects.
    DeploymentCreateRequest:
      required:
      - resources
      type: object
      properties:
        alias:
          type: string
          description: A user-defined alias to use in place of Cluster IDs for user-friendly
            URLs
        metadata:
          $ref: '#/components/schemas/DeploymentCreateMetadata'
        name:
          type: string
          description: A name for the deployment; otherwise this will be the generated
            deployment id
        resources:
          $ref: '#/components/schemas/DeploymentCreateResources'
        settings:
          $ref: '#/components/schemas/DeploymentCreateSettings'
      description: A request for creating a new Deployment consisting of multiple
        clusters
    ItemCosts:
      required:
      - hours
      - instance_count
      - kind
      - name
      - period
      - price
      - price_per_hour
      - sku
      type: object
      properties:
        sku:
          type: string
          description: Stock Keeping Unit (SKU)
        kind:
          type: string
          description: Kind of resource
        name:
          type: string
          description: Resource name
        price:
          type: number
          description: Resource price
          format: double
        period:
          $ref: '#/components/schemas/Period'
        instance_count:
          type: integer
          description: Number of instances
          format: int32
        hours:
          type: integer
          description: Resource usage in hours
          format: int64
        price_per_hour:
          type: number
          description: Price per hour
          format: double
      description: Detailed costs associated to an Elastic Cloud Resource for an organization.
        All of the costs are expressed in Elastic Consumption Unit (ECU).
    KibanaClusterInfo:
      required:
      - cluster_id
      - cluster_name
      - elasticsearch_cluster
      - external_links
      - healthy
      - metadata
      - plan_info
      - status
      - topology
      type: object
      properties:
        status:
          type: string
          description: Cluster status
          enum:
          - initializing
          - stopping
          - stopped
          - rebooting
          - restarting
          - reconfiguring
          - started
        links:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Hyperlink'
          description: A map of application-specific operations (which map to 'operationId's
            in the Swagger API) to metadata about that operation
        elasticsearch_cluster:
          $ref: '#/components/schemas/TargetElasticsearchCluster'
        healthy:
          type: boolean
          description: 'Whether the cluster is healthy or not (one or more of the
            info subsections will have healthy: false)'
        region:
          type: string
          description: The region that this cluster belongs to. Only populated in
            SaaS or federated ECE.
        settings:
          $ref: '#/components/schemas/KibanaClusterSettings'
        cluster_name:
          type: string
          description: The name of the cluster
        plan_info:
          $ref: '#/components/schemas/KibanaClusterPlansInfo'
        cluster_id:
          type: string
          description: The id of the cluster
        external_links:
          uniqueItems: true
          type: array
          description: External resources related to the cluster
          items:
            $ref: '#/components/schemas/ExternalHyperlink'
        deployment_id:
          type: string
          description: The id of the deployment to which this Kibana Server belongs
            to.
        topology:
          $ref: '#/components/schemas/ClusterTopologyInfo'
        metadata:
          $ref: '#/components/schemas/ClusterMetadataInfo'
      description: The top-level object information for a Kibana instance.
    ElasticsearchScriptTypeSettings:
      type: object
      properties:
        enabled:
          type: boolean
          description: 'If enabled (default: true) then scripts are enabled, either
            for sandboxing languages (by default), or for all installed languages
            if ''sandbox_mode'' is disabled (or for 6.x). NOTES: (Corresponds to the
            parameter ''script.file|stored/indexed|inline'')'
        sandbox_mode:
          type: boolean
          description: 'If enabled (default: true) and this script type is enabled,
            then only the sandbox languages are allowed. By default the sandbox languages
            are painless, expressions and mustache, but this can be restricted via
            the ''painless_enabled'', ''mustache_enabled'' ''expression_enabled''
            settings.NOTES: Not supported in 6.x. (Corresponds to the parameters ''script.engine.[painless|mustache|expressions].[file|stored|inline]'')'
      description: Enables scripting for the specified type and controls other parameters.
        Store scripts in indexes (`stored`), upload in file bundles (`file`), or use
        in API requests (`inline`).
    AppSearchPlansInfo:
      required:
      - healthy
      - history
      type: object
      properties:
        healthy:
          type: boolean
          description: Whether the plan situation is healthy (if unhealthy, means
            the last plan attempt failed)
        current:
          $ref: '#/components/schemas/AppSearchPlanInfo'
        pending:
          $ref: '#/components/schemas/AppSearchPlanInfo'
        history:
          type: array
          items:
            $ref: '#/components/schemas/AppSearchPlanInfo'
      description: Information about current, pending, and past App Search Server
        plans.
    AppSearchConfiguration:
      type: object
      properties:
        user_settings_override_json:
          type: object
          properties: {}
          description: An arbitrary JSON object allowing ECE admins owners to set
            clusters' parameters (only one of this and 'user_settings_override_yaml'
            is allowed), ie in addition to the documented 'system_settings'. (This
            field together with 'system_settings' and 'user_settings*' defines the
            total set of AppSearch settings)
        user_settings_yaml:
          type: string
          description: An arbitrary YAML object allowing (non-admin) cluster owners
            to set their parameters (only one of this and 'user_settings_json' is
            allowed), provided the parameters are on the allowlist and not on the
            denylist. (These field together with 'user_settings_override*' and 'system_settings'
            defines the total set of AppSearch settings)
        version:
          type: string
          description: The version of the AppSearch cluster (must be one of the ECE
            supported versions, and won't work unless it matches the Elasticsearch
            version. Leave blank to auto-detect version.)
        user_settings_json:
          type: object
          properties: {}
          description: An arbitrary JSON object allowing (non-admin) cluster owners
            to set their parameters (only one of this and 'user_settings_yaml' is
            allowed), provided the parameters are on the allowlist and not on the
            denylist. (This field together with 'user_settings_override*' and 'system_settings'
            defines the total set of AppSearch settings)
        system_settings:
          $ref: '#/components/schemas/AppSearchSystemSettings'
        user_settings_override_yaml:
          type: string
          description: An arbitrary YAML object allowing ECE admins owners to set
            clusters' parameters (only one of this and 'user_settings_override_json'
            is allowed), ie in addition to the documented 'system_settings'. (This
            field together with 'system_settings' and 'user_settings*' defines the
            total set of AppSearch settings)
        docker_image:
          type: string
          description: A docker URI that allows overriding of the default docker image
            specified for this version
    RollingGrowShrinkStrategyConfig:
      type: object
      description: A strategy that creates new Elasticsearch instances, Kibana instances,
        and APM Servers with the new plan, then migrates the node data to minimize
        the amount of spare capacity.
    ClusterMetadataInfo:
      required:
      - last_modified
      - version
      type: object
      properties:
        endpoint:
          type: string
          description: The DNS name of the cluster endpoint, if available
        cloud_id:
          type: string
          description: The cloud ID, an encoded string that provides other Elastic
            services with the necessary information to connect to this Elasticsearch
            and Kibana (only present if both exist)
        last_modified:
          type: string
          description: The most recent time the cluster metadata was changed (ISO
            format in UTC)
          format: date-time
        aliased_endpoint:
          type: string
          description: The DNS name of the cluster endpoint derived from the deployment
            alias, if available
        raw:
          type: object
          properties: {}
          description: 'An unstructured JSON representation of the public and internal
            state (can be filtered out via URL parameter). The contents and structure
            of the `raw` field can change at any time. '
        version:
          type: integer
          description: The resource version number of the cluster metadata
          format: int32
        service_url:
          type: string
          description: The full URL to access this deployment resource
        aliased_url:
          type: string
          description: The full aliased URL to access this deployment resource
        services_urls:
          type: array
          description: A list of the URLs to access services that the resource provides
            at this time. Note that if the service is not running or has not started
            yet, the URL to access it won't be available
          items:
            $ref: '#/components/schemas/ServiceUrl'
        ports:
          $ref: '#/components/schemas/ClusterMetadataPortInfo'
      description: Information about the public and internal state, and the configuration
        settings of an Elasticsearch cluster.
    Extensions:
      required:
      - extensions
      type: object
      properties:
        extensions:
          type: array
          description: The list of extensions.
          items:
            $ref: '#/components/schemas/Extension'
      description: A collection of extensions
    ElasticsearchClusterSecurityInfo:
      required:
      - last_modified
      - roles
      - users
      - users_roles
      - version
      type: object
      properties:
        users_roles:
          type: array
          items:
            $ref: '#/components/schemas/ElasticsearchClusterRole'
        roles:
          type: object
          properties: {}
          description: An arbitrarily nested JSON object mapping roles to sets of
            resources and permissions - see the Elasticsearch security documentation
            for more details on roles
        version:
          type: integer
          description: The resource version number of the security settings
          format: int32
        users:
          type: array
          items:
            $ref: '#/components/schemas/ElasticsearchClusterUser'
        last_modified:
          type: string
          description: The most recent time the security settings were changed (ISO
            format in UTC)
          format: date-time
      description: For 2.x Elasticsearch clusters, specifies the information about
        the users and roles. For 5.x Elasticsearch clusters, use the Kibana management
        UI.
    AppSearch:
      required:
      - backend_plan
      - display_name
      - elasticsearch_cluster_ref_id
      - ref_id
      type: object
      properties:
        elasticsearch_cluster_ref_id:
          type: string
          description: The user-specified id of the Elasticsearch Cluster that this
            will link to
        backend_plan:
          type: object
          properties: {}
          description: The backend plan as JSON
        display_name:
          type: string
          description: The human readable name (defaults to the generated cluster
            id if not specified)
        ref_id:
          type: string
          description: A locally-unique user-specified id
      description: Holds diagnostics for an AppSearch resource
    DeploymentUpdateMetadata:
      type: object
      properties:
        tags:
          type: array
          description: Arbitrary user-defined metadata associated with this deployment
          items:
            $ref: '#/components/schemas/MetadataItem'
      description: Additional information about the current deployment object.
    ApiKeyResponse:
      required:
      - creation_date
      - description
      - id
      type: object
      properties:
        creation_date:
          type: string
          description: The date/time for when the API key is created.
          format: date-time
        user_id:
          type: string
          description: The user ID.
        id:
          type: string
          description: The API key ID.
        key:
          type: string
          description: 'The API key. TIP: Since the API key is returned only once,
            save it in a safe place.'
        description:
          type: string
          description: 'The API key description. TIP: Useful when you have multiple
            API keys.'
      description: The response model for an API key.
    TrafficFilterRulesets:
      required:
      - rulesets
      type: object
      properties:
        rulesets:
          type: array
          description: List of traffic filter rules
          items:
            $ref: '#/components/schemas/TrafficFilterRulesetInfo'
      description: The container for a set of traffic filter rulesets.
    TargetElasticsearchCluster:
      required:
      - elasticsearch_id
      type: object
      properties:
        elasticsearch_id:
          type: string
          description: The Elasticsearch cluster Id
        links:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Hyperlink'
          description: A map of application-specific operations (which map to 'operationId's
            in the Swagger API) to metadata about that operation
      description: Information about the specified Elasticsearch cluster.
    DeploymentRestoreResponse:
      required:
      - id
      type: object
      properties:
        id:
          type: string
          description: The id of the deployment
      description: A response returned from the Deployment restore endpoint
    ElasticsearchClusterRole:
      required:
      - roles
      - username
      type: object
      properties:
        username:
          type: string
          description: The username
        roles:
          type: array
          description: The list of roles for this user
          items:
            type: string
      description: The authorization information for an Elasticsearch cluster user.
    BoolQuery:
      type: object
      properties:
        filter:
          type: array
          items:
            $ref: '#/components/schemas/QueryContainer'
        minimum_should_match:
          type: integer
          description: The minimum number of optional should clauses to match.
          format: int32
        should:
          type: array
          items:
            $ref: '#/components/schemas/QueryContainer'
        must_not:
          type: array
          items:
            $ref: '#/components/schemas/QueryContainer'
        must:
          type: array
          items:
            $ref: '#/components/schemas/QueryContainer'
      description: A query for documents that match boolean combinations of other
        queries.
    FilterAssociation:
      required:
      - entity_type
      - id
      type: object
      properties:
        id:
          type: string
          description: ID of the entity, such as the deployment ID or Elasticsearch
            cluster ID.
        entity_type:
          type: string
          description: Type of the traffic filter ruleset association, such as 'deployment',
            'cluster'
      description: The association with a ruleset or user auth token for a deployment,
        template, or product.
    ExtensionFileMetadata:
      type: object
      properties:
        url:
          type: string
          description: The temporary URL to download the extension file. Usable for
            verification.
          format: uri
        last_modified_date:
          type: string
          description: The date and time the extension was last modified.
          format: date-time
        size:
          type: integer
          description: The extension file size in bytes.
          format: int64
    ElasticsearchClusterPlan:
      required:
      - cluster_topology
      - elasticsearch
      type: object
      properties:
        autoscaling_enabled:
          type: boolean
          description: Enable autoscaling for this Elasticsearch cluster.
        cluster_topology:
          type: array
          items:
            $ref: '#/components/schemas/ElasticsearchClusterTopologyElement'
        transient:
          $ref: '#/components/schemas/TransientElasticsearchPlanConfiguration'
        elasticsearch:
          $ref: '#/components/schemas/ElasticsearchConfiguration'
        deployment_template:
          $ref: '#/components/schemas/DeploymentTemplateReference'
      description: The plan for the Elasticsearch cluster.
    SearchRequest:
      type: object
      properties:
        sort:
          type: array
          description: An array of fields to sort the search results by.
          items:
            type: object
            properties: {}
        query:
          $ref: '#/components/schemas/QueryContainer'
        from:
          type: integer
          format: int32
        size:
          type: integer
          description: The maximum number of search results to return.
          format: int32
      description: An Elasticsearch search request with a subset of options.
    UpdateExtensionRequest:
      required:
      - extension_type
      - name
      - version
      type: object
      properties:
        version:
          type: string
          description: The Elasticsearch version.
        extension_type:
          type: string
          description: The extension type.
          enum:
          - plugin
          - bundle
        name:
          type: string
          description: The extension name.
        download_url:
          type: string
          description: The URL to download the extension archive.
        description:
          type: string
          description: The extension description.
      description: The body of a request to update an extension
    ElasticsearchClusterBlockingIssues:
      required:
      - cluster_level
      - healthy
      - index_level
      type: object
      properties:
        healthy:
          type: boolean
          description: Whether the cluster has issues (false) or not (true)
        cluster_level:
          type: array
          description: A list of issues that affect availability of entire cluster
          items:
            $ref: '#/components/schemas/ElasticsearchClusterBlockingIssueElement'
        index_level:
          type: array
          description: A list of issues that affect availability of the cluster's
            indices
          items:
            $ref: '#/components/schemas/ElasticsearchClusterBlockingIssueElement'
      description: Issues that prevent the Elasticsearch cluster or index from correctly
        operating.
    Orphaned:
      required:
      - apm
      - appsearch
      - elasticsearch
      - enterprise_search
      - kibana
      type: object
      properties:
        appsearch:
          type: array
          description: List of orphaned AppSearch resource ids
          items:
            type: string
        elasticsearch:
          type: array
          description: List of orphaned Elasticsearch resources
          items:
            $ref: '#/components/schemas/OrphanedElasticsearch'
        enterprise_search:
          type: array
          description: List of orphaned Enterprise Search resource ids
          items:
            type: string
        kibana:
          type: array
          description: List of orphaned Kibana resource ids
          items:
            type: string
        apm:
          type: array
          description: List of orphaned APM resource ids
          items:
            type: string
      description: Details about orphaned resources.
    DeploymentUpdateResources:
      type: object
      properties:
        appsearch:
          type: array
          description: A list of payloads for AppSearch updates. AppSearch has been
            replaced by Enterprise Search in the Elastic Stack 7.7 and higher
          items:
            $ref: '#/components/schemas/AppSearchPayload'
        elasticsearch:
          type: array
          description: A list of payloads for Elasticsearch cluster updates
          items:
            $ref: '#/components/schemas/ElasticsearchPayload'
        enterprise_search:
          type: array
          description: A list of payloads for Enterprise Search updates
          items:
            $ref: '#/components/schemas/EnterpriseSearchPayload'
        kibana:
          type: array
          description: A list of payloads for Kibana updates
          items:
            $ref: '#/components/schemas/KibanaPayload'
        apm:
          type: array
          description: A list of payloads for APM updates
          items:
            $ref: '#/components/schemas/ApmPayload'
      description: Describes the Deployment resource updates
    ClusterTopologyInfo:
      required:
      - healthy
      - instances
      type: object
      properties:
        healthy:
          type: boolean
          description: Whether the cluster topology is healthy (ie all instances are
            started and the services they run - ie elasticsearch - are available
        instances:
          type: array
          items:
            $ref: '#/components/schemas/ClusterInstanceInfo'
      description: The topology for Elasticsearch clusters, multiple Kibana instances,
        or multiple APM Servers. The `ClusterTopologyInfo` also includes the instances
        and containers, and where they are located.
    DiscreteSizes:
      required:
      - default_size
      - resource
      - sizes
      type: object
      properties:
        default_size:
          type: integer
          description: The default size
          format: int32
        resource:
          type: string
          description: The unit that each size represents
          enum:
          - memory
          - storage
        sizes:
          type: array
          description: List of supported sizes
          items:
            type: integer
            format: int32
      description: Instance sizes that are supported by the Elasticsearch instance,
        Kibana instance, or APM Server configuration.
    AppSearchNodeTypes:
      required:
      - appserver
      - worker
      type: object
      properties:
        appserver:
          type: boolean
          description: Defines whether this instance should run as Application/API
            server
        worker:
          type: boolean
          description: Defines whether this instance should run as background worker
      description: Node types to enable for an AppSearch instance
    ElasticsearchMasterInfo:
      required:
      - healthy
      - instances_with_no_master
      - masters
      type: object
      properties:
        healthy:
          type: boolean
          description: Whether the master situation in the cluster is healthy (ie
            is the number of masters != 1), or do any instances have no master
        instances_with_no_master:
          type: array
          description: A list of any instances with no master
          items:
            type: string
        masters:
          type: array
          items:
            $ref: '#/components/schemas/ElasticsearchMasterElement'
      description: Information about the master nodes in the Elasticsearch cluster.
    DeploymentCreateSettings:
      type: object
      properties:
        ip_filtering_settings:
          $ref: '#/components/schemas/IpFilteringSettings'
        observability:
          $ref: '#/components/schemas/DeploymentObservabilitySettings'
        traffic_filter_settings:
          $ref: '#/components/schemas/TrafficFilterSettings'
      description: Additional configuration for the new deployment object.
    StackVersionApmConfig:
      required:
      - blacklist
      - docker_image
      type: object
      properties:
        settings:
          type: object
          properties: {}
          description: Settings that are applied to all nodes of this type
        blacklist:
          type: array
          description: List of configuration options that cannot be overridden by
            user settings
          items:
            type: string
        version:
          type: string
          description: Version of APM
        capacity_constraints:
          $ref: '#/components/schemas/StackVersionInstanceCapacityConstraint'
        compatible_node_types:
          type: array
          description: Node types that are compatible with this one
          items:
            type: string
        docker_image:
          type: string
          description: Docker image for the APM
      description: The APM Server configuration for an Elastic Stack version.
    EnterpriseSearchConfiguration:
      type: object
      properties:
        user_settings_override_json:
          type: object
          properties: {}
          description: An arbitrary JSON object allowing ECE admins to set clusters'
            parameters (only one of this and 'user_settings_override_yaml' is allowed),
            i.e. in addition to the documented 'system_settings'. (This field together
            with 'system_settings' and 'user_settings*' defines the total set of Enterprise
            Search settings)
        user_settings_yaml:
          type: string
          description: An arbitrary YAML object allowing (non-admin) cluster owners
            to set their parameters (only one of this and 'user_settings_json' is
            allowed), provided the parameters are on the allowlist and not on the
            denylist. (This field together with 'user_settings_override*' and 'system_settings'
            defines the total set of Enterprise Search settings)
        version:
          type: string
          description: The version of the Enterprise Search cluster (must be one of
            the ECE supported versions, and won't work unless it matches the Elasticsearch
            version. Leave blank to auto-detect version.)
        user_settings_json:
          type: object
          properties: {}
          description: An arbitrary JSON object allowing (non-admin) cluster owners
            to set their parameters (only one of this and 'user_settings_yaml' is
            allowed), provided the parameters are on the allowlist and not on the
            denylist. (This field together with 'user_settings_override*' and 'system_settings'
            defines the total set of Enterprise Search settings)
        system_settings:
          $ref: '#/components/schemas/EnterpriseSearchSystemSettings'
        user_settings_override_yaml:
          type: string
          description: An arbitrary YAML object allowing ECE admins to set clusters'
            parameters (only one of this and 'user_settings_override_json' is allowed),
            i.e. in addition to the documented 'system_settings'. (This field together
            with 'system_settings' and 'user_settings*' defines the total set of Enterprise
            Search settings)
        docker_image:
          type: string
          description: A docker URI that allows overriding of the default docker image
            specified for this version
    AppSearchSystemSettings:
      type: object
      properties:
        elasticsearch_password:
          type: string
          description: Optionally override the account within App Search - defaults
            to a system account that always exists (if specified, the username must
            also be specified). Note that this field is never returned from the API,
            it is write only.
        elasticsearch_username:
          type: string
          description: Optionally override the account within App Search - defaults
            to a system account that always exists (if specified, the password must
            also be specified). Note that this field is never returned from the API,
            it is write only.
        secret_session_key:
          type: string
          description: Optionally override the secret session key within App Search
            - defaults to the previously existing secretSession. Note that this field
            is never returned from the API, it is write only.
        elasticsearch_url:
          type: string
          description: Optionally override the URL to which to send data (for advanced
            users only, if unspecified the system selects an internal URL)
      description: This structure defines a curated subset of the AppSearch settings.
        (This field together with 'user_settings_override*' and  'user_settings*'
        defines the total set of AppSearch settings)
    AccountUpdateRequest:
      type: object
      properties:
        trust:
          $ref: '#/components/schemas/AccountTrustSettings'
      description: A request to update an account
    EnterpriseSearchSettings:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/ClusterMetadataSettings'
      description: The settings for the Enterprise Search.
    QueryStringQuery:
      required:
      - query
      type: object
      properties:
        query:
          type: string
          description: The actual query to be parsed.
        default_operator:
          type: string
          description: The default operator used if no explicit operator is specified.
        default_field:
          type: string
          description: The default field for query terms if no prefix field is specified.
        allow_leading_wildcard:
          type: boolean
          description: When set, * or ? are allowed as the first character. Defaults
            to false.
        analyzer:
          type: string
          description: The analyzer used to analyze each term of the query when creating
            composite queries.
      description: A query that uses the `SimpleQueryParser` for parsing.
    NestedQuery:
      required:
      - path
      - query
      type: object
      properties:
        query:
          $ref: '#/components/schemas/QueryContainer'
        score_mode:
          type: string
          description: Allows to specify how inner children matching affects score
            of the parent. Refer to the Elasticsearch documentation for details.
          enum:
          - avg
          - sum
          - min
          - max
          - none
        path:
          type: string
          description: The path to the nested object.
      description: A query that matches nested objects.
    KibanaClusterTopologyElement:
      type: object
      properties:
        instance_configuration_id:
          type: string
          description: Controls the allocation of this topology element as well as
            allowed sizes and node_types. It needs to match the id of an existing
            instance configuration.
        zone_count:
          type: integer
          description: number of zones in which nodes will be placed
          format: int32
        kibana:
          $ref: '#/components/schemas/KibanaConfiguration'
        size:
          $ref: '#/components/schemas/TopologySize'
      description: The topology of the Kibana nodes, including the number, capacity,
        and type of nodes, and where they can be allocated.
    DeploymentsSearchResponse:
      required:
      - deployments
      - return_count
      type: object
      properties:
        match_count:
          type: integer
          description: If a query is supplied, then the total number of deployments
            that matched
          format: int32
        return_count:
          type: integer
          description: The number of deployments actually returned
          format: int32
        deployments:
          type: array
          items:
            $ref: '#/components/schemas/DeploymentSearchResponse'
      description: Contains a list of Deployments as result of a search request.
    StackVersionConfigs:
      required:
      - stacks
      type: object
      properties:
        stacks:
          type: array
          items:
            $ref: '#/components/schemas/StackVersionConfig'
      description: The details for multiple Elastic Stack configurations.
    Period:
      required:
      - end
      - start
      type: object
      properties:
        start:
          type: string
          description: Start
          format: date-time
        end:
          type: string
          description: End
          format: date-time
      description: Period
    ElasticsearchMasterElement:
      required:
      - instances
      - master_node_id
      type: object
      properties:
        instances:
          type: array
          description: The names of the instance/container hosting the node belong
            to the cluster with the given master
          items:
            type: string
        master_node_id:
          type: string
          description: The Elasticsearch node id of a master node
        master_instance_name:
          type: string
          description: The corresponding instance name of the container hosting the
            Elasticsearch master node, if available
      description: Information about the Elasticsearch instances. For split-brain
        cases, this also includes sub-clusters.
    ClusterCurationSettings:
      required:
      - specs
      type: object
      properties:
        specs:
          type: array
          description: Specifications for curation
          items:
            $ref: '#/components/schemas/ClusterCurationSpec'
      description: The index curation settings for an Elasticsearch cluster.
    KibanaSubClusterInfo:
      required:
      - enabled
      - kibana_id
      type: object
      properties:
        kibana_id:
          type: string
          description: The Kibana cluster Id
        enabled:
          type: boolean
          description: Whether the associated Kibana cluster is currently available
        links:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Hyperlink'
          description: A map of application-specific operations (which map to 'operationId's
            in the Swagger API) to metadata about that operation
      description: Information about the Kibana instances associated with the Elasticsearch
        cluster.
    StackVersionInstanceCapacityConstraint:
      required:
      - max
      - min
      type: object
      properties:
        max:
          type: integer
          description: Max capacity of the instances
          format: int32
        min:
          type: integer
          description: Min capacity of the instances
          format: int32
      description: The Elasticsearch instance, Kibana instance, APM Server capacity
        constraints for an Elastic Stack node type.
    SimplifiedLineItem:
      required:
      - ecu_balance
      - ecu_quantity
      - end
      - id
      - start
      type: object
      properties:
        start:
          type: string
          description: Start of the line item's validity
          format: date-time
        ecu_balance:
          type: number
          description: Elastic Consumption Unit (ECU) Balance
          format: double
        end:
          type: string
          description: Expiration of the line item
          format: date-time
        id:
          type: string
          description: Line Item ID
        ecu_quantity:
          type: number
          description: Original Elastic Consumption Unit (ECU) quantity
          format: double
      description: Line Item
    ClusterInstanceInfo:
      required:
      - container_started
      - healthy
      - instance_name
      - maintenance_mode
      - service_running
      type: object
      properties:
        service_roles:
          type: array
          description: 'List of roles assigned to the service running in the instance.
            Currently only populated for Elasticsearch, with possible values: master,data,ingest,ml'
          items:
            type: string
        zone:
          type: string
          description: The zone in which this instance is being allocated
        container_started:
          type: boolean
          description: Whether the container has started (does not tell you anything
            about the service -ie Elasticsearch- running inside the container)
        service_version:
          type: string
          description: The version of the service that the instance is running (eg
            Elasticsearch or Kibana), if available
        healthy:
          type: boolean
          description: Whether the instance is healthy (ie started and running)
        maintenance_mode:
          type: boolean
          description: Whether the service is is maintenance mode (meaning that the
            proxy is not routing external traffic to it)
        instance_name:
          type: string
          description: Whether the instance is healthy (ie started and running)
        instance_configuration:
          $ref: '#/components/schemas/ClusterInstanceConfigurationInfo'
        memory:
          $ref: '#/components/schemas/ClusterInstanceMemoryInfo'
        service_id:
          type: string
          description: The service-specific (eg Elasticsearch) id of the node, if
            available
        disk:
          $ref: '#/components/schemas/ClusterInstanceDiskInfo'
        node_roles:
          type: array
          description: A list of the node roles assigned to the service running in
            the instance. Currently populated only for Elasticsearch.
          items:
            type: string
            enum:
            - master
            - ingest
            - ml
            - data_hot
            - data_content
            - data_warm
            - data_cold
            - data_frozen
            - remote_cluster_client
            - transform
            - voting_only
        allocator_id:
          type: string
          description: The id of the allocator on which this instance is running (if
            the container is started or starting)
        service_running:
          type: boolean
          description: Whether the service launched inside the container -ie Elasticsearch-
            is actually running
      description: Information about each Kibana instance and APM Server in the Elasticsearch
        cluster.
    KeystoreContents:
      required:
      - secrets
      type: object
      properties:
        secrets:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/KeystoreSecret'
          description: List of secrets
      description: The contents of the Elasticsearch keystore.
    ClusterSnapshotRetention:
      type: object
      properties:
        max_age:
          type: string
          description: 'Total retention period for all snapshots, with the format
            ''length unit'' (space is optional), where unit can be one of: d (day),
            h (hour), min (minute)'
        snapshots:
          type: integer
          description: Number of snapshots to retain
          format: int32
      description: Information about the Elasticsearch cluster snapshot retention.
    AccountTrustRelationship:
      required:
      - account_id
      - trust_all
      type: object
      properties:
        trust_allowlist:
          type: array
          description: The list of clusters to trust. Only used when `trust_all` is
            false.
          items:
            type: string
        account_id:
          type: string
          description: the ID of the Account
        trust_all:
          type: boolean
          description: If true, all clusters in this account will by default be trusted
            and the `trust_allowlist` is ignored.
      description: The trust relationship with the clusters of one account.
    AutodetectStrategyConfig:
      type: object
      description: A strategy that lets constructor choose the most optimal way to
        execute the plan.
    InstanceMoveRequest:
      required:
      - from
      type: object
      properties:
        to:
          type: array
          description: An optional list of allocator ids to which the instance should
            be moved. If not specified then any available allocator can be used (including
            the current one if it is healthy)
          items:
            type: string
        from:
          type: string
          description: The instance id that is going to be moved
        instance_down:
          type: boolean
          description: 'Tells the infrastructure that the instance should be considered
            as permanently down when deciding how to migrate data to new nodes. If
            left blank then the system will automatically decide (currently: will
            treat the instances as up)'
      description: The request that specifies the Elasticsearch instances, Kibana
        instances, and APM Servers to move to allocators as part of the upgrade plan.
    DtsQuantity:
      required:
      - formatted_value
      - value
      type: object
      properties:
        formatted_value:
          type: string
          description: Quantity in human readable format
        value:
          type: integer
          description: Raw quantity
          format: int64
      description: DTS quantity
    ChangeSourceInfo:
      required:
      - action
      - date
      - facilitator
      type: object
      properties:
        user_id:
          type: string
          description: The user that requested the change
        remote_addresses:
          type: array
          description: The host addresses of the user that originated the change
          items:
            type: string
        facilitator:
          type: string
          description: The service where the change originated from
        admin_id:
          type: string
          description: The admin user that requested the change
        date:
          type: string
          description: The time the change was initiated
          format: date-time
        action:
          type: string
          description: The type of plan change that was initiated
      description: A container for information about the source of a change.
    ApmSubInfo:
      required:
      - apm_id
      - enabled
      type: object
      properties:
        apm_id:
          type: string
          description: The APM cluster Id
        enabled:
          type: boolean
          description: Whether the associated APM cluster is currently available
        links:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Hyperlink'
          description: A map of application-specific operations (which map to 'operationId's
            in the Swagger API) to metadata about that operation
      description: Information about the APM Servers associated with the Elasticsearch
        cluster.
    KibanaResourceInfo:
      required:
      - elasticsearch_cluster_ref_id
      - id
      - info
      - ref_id
      - region
      type: object
      properties:
        elasticsearch_cluster_ref_id:
          type: string
          description: The Elasticsearch cluster that this resource depends on.
        info:
          $ref: '#/components/schemas/KibanaClusterInfo'
        region:
          type: string
          description: The region where this resource exists
        id:
          type: string
          description: The randomly-generated id of a Resource
        ref_id:
          type: string
          description: The locally-unique user-specified id of a Resource
      description: Describes an Kibana resource belonging to a Deployment
    EnterpriseSearchPlan:
      required:
      - enterprise_search
      type: object
      properties:
        cluster_topology:
          type: array
          items:
            $ref: '#/components/schemas/EnterpriseSearchTopologyElement'
        transient:
          $ref: '#/components/schemas/TransientEnterpriseSearchPlanConfiguration'
        enterprise_search:
          $ref: '#/components/schemas/EnterpriseSearchConfiguration'
      description: The plan for the Enterprise Search cluster.
    ClusterSnapshotSettings:
      type: object
      properties:
        slm:
          type: boolean
          description: When set to true, the deployment will have SLM enabled. Default
            value is true.
          readOnly: true
        cron_expression:
          type: string
          description: Cron expression indicating when should snapshots be taken.
            This can be enabled only if SLM is enabled for the deployment and 'interval'
            is not present
        interval:
          type: string
          description: 'Interval between snapshots, with the format ''length unit''
            (space is optional), where unit can be one of: d (day), h (hour), min
            (minute). Default is 30 minutes'
        retention:
          $ref: '#/components/schemas/ClusterSnapshotRetention'
      description: The snapshot configuration settings for an Elasticsearch cluster.
    DeploymentsListResponse:
      required:
      - deployments
      type: object
      properties:
        deployments:
          type: array
          description: The deployments
          items:
            $ref: '#/components/schemas/DeploymentsListingData'
      description: Contains a list of deployments
    ElasticsearchCuration:
      required:
      - from_instance_configuration_id
      - to_instance_configuration_id
      type: object
      properties:
        to_instance_configuration_id:
          type: string
          description: The destination instance configuration
        from_instance_configuration_id:
          type: string
          description: The source instance configuration
      description: The structure that defines the routing settings for index curation.
    DeploymentMetrics:
      required:
      - healthy
      type: object
      properties:
        healthy:
          type: boolean
          description: Whether the deployment metrics are healthy or not
        issues:
          type: array
          description: Metrics health issues for the deployment
          items:
            $ref: '#/components/schemas/ObservabilityIssue'
        urls:
          type: object
          additionalProperties:
            type: string
          description: The URLs to view this deployment's metrics in Kibana
      description: Metrics information for a deployment
    DeploymentGetResponse:
      required:
      - healthy
      - id
      - name
      - resources
      type: object
      properties:
        name:
          type: string
          description: The name of this deployment
        settings:
          $ref: '#/components/schemas/DeploymentSettings'
        healthy:
          type: boolean
          description: 'Whether the deployment is overall healthy or not (one or more
            of the resource info subsections will have healthy: false)'
        alias:
          type: string
          description: A user-defined deployment alias for user-friendly resource
            URLs
        observability:
          $ref: '#/components/schemas/DeploymentObservability'
        id:
          type: string
          description: A randomly-generated id of this Deployment
        resources:
          $ref: '#/components/schemas/DeploymentResources'
        metadata:
          $ref: '#/components/schemas/DeploymentMetadata'
      description: Describes a given Deployment
    DeploymentSettings:
      type: object
      properties:
        ip_filtering_settings:
          $ref: '#/components/schemas/IpFilteringSettings'
        observability:
          $ref: '#/components/schemas/DeploymentObservabilitySettings'
        traffic_filter_settings:
          $ref: '#/components/schemas/TrafficFilterSettings'
      description: Additional configuration about the current deployment object.
    EnterpriseSearch:
      required:
      - backend_plan
      - display_name
      - elasticsearch_cluster_ref_id
      - ref_id
      type: object
      properties:
        elasticsearch_cluster_ref_id:
          type: string
          description: The user-specified id of the Elasticsearch Cluster that this
            will link to
        backend_plan:
          type: object
          properties: {}
          description: The backend plan as JSON
        display_name:
          type: string
          description: The human readable name (defaults to the generated cluster
            id if not specified)
        ref_id:
          type: string
          description: A locally-unique user-specified id
      description: Holds diagnostics for an Enterprise Search resource
    MatchNoneQuery:
      type: object
      description: A query that doesn't match any documents.
    EnterpriseSearchSubInfo:
      required:
      - enabled
      - enterprise_search_id
      type: object
      properties:
        enterprise_search_id:
          type: string
          description: The Enterprise Search Id
        enabled:
          type: boolean
          description: Whether the associated Enterprise Search is currently available
        links:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Hyperlink'
          description: A map of application-specific operations (which map to 'operationId's
            in the Swagger API) to metadata about that operation
      description: Information about the APM Servers associated with the Elasticsearch
        cluster.
    ApmTopologyElement:
      type: object
      properties:
        apm:
          $ref: '#/components/schemas/ApmConfiguration'
        instance_configuration_id:
          type: string
          description: Controls the allocation of this topology element as well as
            allowed sizes and node_types. It needs to match the id of an existing
            instance configuration.
        zone_count:
          type: integer
          description: number of zones in which nodes will be placed
          format: int32
        size:
          $ref: '#/components/schemas/TopologySize'
      description: Defines the topology of the APM Server nodes. For example, the
        number or capacity of the nodes, and where you can allocate the nodes.
    ServiceUrl:
      required:
      - service
      - url
      type: object
      properties:
        url:
          type: string
          description: The full URL to access the service
        service:
          type: string
          description: Name of the service
      description: A URL to access the service of a resource
    Extension:
      required:
      - extension_type
      - id
      - name
      - url
      - version
      type: object
      properties:
        description:
          type: string
          description: The extension description.
        url:
          type: string
          description: The extension URL to be used in the plan.
        extension_type:
          type: string
          description: The extension type.
          enum:
          - plugin
          - bundle
        download_url:
          type: string
          description: The download URL specified during extension creation.
        deployments:
          type: array
          description: List of deployments using this extension. Up to only 10000
            deployments will be included in the list.
          items:
            type: string
        version:
          type: string
          description: The Elasticsearch version.
        file_metadata:
          $ref: '#/components/schemas/ExtensionFileMetadata'
        id:
          type: string
          description: The extension ID
        name:
          type: string
          description: The extension name.
      description: An API extension. It represents clusters' plugins and bundles
    ClusterSystemAlert:
      required:
      - alert_type
      - instance_name
      - timestamp
      type: object
      properties:
        instance_name:
          type: string
          description: Instance that caused the system alert
        timestamp:
          type: string
          description: Timestamp marking the system alert
          format: date-time
        alert_type:
          type: string
          description: Type of system alert
          enum:
          - automatic_restart
          - heap_dump
          - unknown_event
        url:
          type: string
          description: 'The URL related to the event. Only applicable for alert_type:
            heap_dump'
        exit_code:
          type: integer
          description: 'The exit_code related to the event. Only applicable for alert_type:
            slain'
          format: int32
      description: Information about a system alert on an Elasticsearch cluster.
    DeploymentUpdateSettings:
      type: object
      properties:
        observability:
          $ref: '#/components/schemas/DeploymentObservabilitySettings'
      description: Additional configuration for the new deployment object.
    StackVersionAppSearchConfig:
      required:
      - blacklist
      - docker_image
      type: object
      properties:
        settings:
          type: object
          properties: {}
          description: Settings that are applied to all nodes of this type
        node_types:
          type: array
          description: Node types that are supported by this stack version
          items:
            $ref: '#/components/schemas/StackVersionNodeType'
        blacklist:
          type: array
          description: List of configuration options that cannot be overridden by
            user settings
          items:
            type: string
        version:
          type: string
          description: Version of AppSearch
        capacity_constraints:
          $ref: '#/components/schemas/StackVersionInstanceCapacityConstraint'
        compatible_node_types:
          type: array
          description: Node types that are compatible with this one
          items:
            type: string
        docker_image:
          type: string
          description: Docker image for the AppSearch
      description: AppSearch related configuration of an Elastic Stack version
    EnterpriseSearchPlansInfo:
      required:
      - healthy
      - history
      type: object
      properties:
        healthy:
          type: boolean
          description: Whether the plan situation is healthy (if unhealthy, means
            the last plan attempt failed)
        current:
          $ref: '#/components/schemas/EnterpriseSearchPlanInfo'
        pending:
          $ref: '#/components/schemas/EnterpriseSearchPlanInfo'
        history:
          type: array
          items:
            $ref: '#/components/schemas/EnterpriseSearchPlanInfo'
      description: Information about current, pending, and past Enterprise Search
        Server plans.
    ApmCrudResponse:
      required:
      - secret_token
      type: object
      properties:
        apm_id:
          type: string
          description: For an operation creating or updating an APM server, the Id
            of that server
        secret_token:
          type: string
          description: The secret token for accessing the server
        diagnostics:
          type: object
          properties: {}
          description: If the endpoint is called with URL param 'validate_only=true',
            then this contains advanced debug info (the internal plan representation)
      description: The response to an APM CRUD (create/update-plan) request.
    Creates:
      type: object
      properties:
        appsearch:
          type: array
          description: Diagnostics for AppSearches
          items:
            $ref: '#/components/schemas/AppSearch'
        elasticsearch:
          type: array
          description: Diagnostics for Elasticsearch clusters
          items:
            $ref: '#/components/schemas/Elasticsearch'
        enterprise_search:
          type: array
          description: Diagnostics for Enterprise Search resources
          items:
            $ref: '#/components/schemas/EnterpriseSearch'
        kibana:
          type: array
          description: Diagnostics for Kibanas
          items:
            $ref: '#/components/schemas/Kibana'
        apm:
          type: array
          description: Diagnostics for APMs
          items:
            $ref: '#/components/schemas/Apm'
      description: Holds diagnostics for resources that will be created
    RulesetAssociations:
      required:
      - associations
      - total_associations
      type: object
      properties:
        associations:
          type: array
          description: List of associations
          items:
            $ref: '#/components/schemas/FilterAssociation'
        total_associations:
          type: integer
          description: Total number of associations. This includes associations the
            user does not have permission to view.
          format: int32
      description: The configuration settings for the traffic filter.
    ApmPlanInfo:
      required:
      - healthy
      - plan_attempt_log
      - warnings
      type: object
      properties:
        attempt_end_time:
          type: string
          description: If this plan completed or failed (ie is not pending), when
            the attempt ended (ISO format in UTC)
          format: date-time
        plan_attempt_id:
          type: string
          description: A UUID for each plan attempt
        warnings:
          type: array
          items:
            $ref: '#/components/schemas/ClusterPlanWarning'
        healthy:
          type: boolean
          description: Either the plan ended successfully, or is not yet completed
            (and no errors have occurred)
        plan_end_time:
          type: string
          description: If this plan is not current or pending, when the plan was no
            longer active (ISO format in UTC)
          format: date-time
        source:
          $ref: '#/components/schemas/ChangeSourceInfo'
        plan_attempt_log:
          type: array
          items:
            $ref: '#/components/schemas/ClusterPlanStepInfo'
        plan:
          $ref: '#/components/schemas/ApmPlan'
        plan_attempt_name:
          type: string
          description: A human readable name for each plan attempt, only populated
            when retrieving plan histories
        attempt_start_time:
          type: string
          description: When this plan attempt (ie to apply the plan to the APM) started
            (ISO format in UTC)
          format: date-time
      description: Information about the APM Server plan.
    PrefixQuery:
      required:
      - value
      type: object
      properties:
        boost:
          type: number
          description: An optional boost value to apply to the query.
          format: float
        value:
          type: string
          description: The prefix to search for.
      description: The query that matches documents with fields that contain terms
        with a specified, not analyzed, prefix.
    AppSearchTopologyElement:
      type: object
      properties:
        appsearch:
          $ref: '#/components/schemas/AppSearchConfiguration'
        node_type:
          $ref: '#/components/schemas/AppSearchNodeTypes'
        instance_configuration_id:
          type: string
          description: Controls the allocation of this topology element as well as
            allowed sizes and node_types. It needs to match the id of an existing
            instance configuration.
        zone_count:
          type: integer
          description: number of zones in which nodes will be placed
          format: int32
        size:
          $ref: '#/components/schemas/TopologySize'
      description: Defines the topology of the AppSearch nodes (eg number/capacity
        of nodes, and where they can be allocated)
    ElasticsearchResourceInfo:
      required:
      - id
      - info
      - ref_id
      - region
      type: object
      properties:
        info:
          $ref: '#/components/schemas/ElasticsearchClusterInfo'
        region:
          type: string
          description: The region where this resource exists
        id:
          type: string
          description: The randomly-generated id of a Resource
        ref_id:
          type: string
          description: The locally-unique user-specified id of a Resource
      description: Describes an Elasticsearch resource belonging to a Deployment
    ClusterMetadataSettings:
      type: object
      properties:
        name:
          type: string
          description: The display name of the cluster
      description: The top-level configuration settings for the Elasticsearch cluster.
    AllocatorMoveRequest:
      required:
      - from
      type: object
      properties:
        to:
          type: array
          description: An optional list of allocator ids to which the instance(s)
            should be moved. If not specified then any available allocator can be
            used (including the current one if it is healthy)
          items:
            type: string
        from:
          type: string
          description: The allocator id off which all instances in the cluster should
            be moved
        allocator_down:
          type: boolean
          description: 'Tells the infrastructure that all instances on the allocator
            should be considered as permanently down when deciding how to migrate
            data to new nodes. If left blank then the system will auto-decide (currently:
            will treat the allocator as up)'
      description: As part of the upgrade plan, identifies the move requests for the
        Kibana instances or APM Servers on the allocators.
    ExternalTrustRelationship:
      required:
      - trust_all
      - trust_relationship_id
      type: object
      properties:
        trust_allowlist:
          type: array
          description: The list of clusters to trust. Only used when `trust_all` is
            false.
          items:
            type: string
        trust_relationship_id:
          type: string
          description: the ID of the external trust relationship
        trust_all:
          type: boolean
          description: If true, all clusters in this external entity will be trusted
            and the `trust_allowlist` is ignored.
      description: The trust relationship with external entities (remote environments,
        remote accounts...).
    DeploymentObservabilitySettings:
      type: object
      properties:
        metrics:
          $ref: '#/components/schemas/DeploymentMetricsSettings'
        logging:
          $ref: '#/components/schemas/DeploymentLoggingSettings'
      description: The observability settings for a deployment
    CostsOverview:
      required:
      - costs
      - hourly_rate
      - trials
      type: object
      properties:
        trials:
          type: number
          description: Trial costs for the organization
          format: double
        costs:
          $ref: '#/components/schemas/Costs'
        balance:
          $ref: '#/components/schemas/Balance'
        hourly_rate:
          type: number
          description: Hourly rate applied.
          format: double
      description: The top level costs overview for an organization. All of the costs,
        credits, trials are expressed in Elastic Consumption Unit (ECU).
    StackVersionMetadata:
      type: object
      properties:
        pre_release:
          type: boolean
          description: Indicates that the stack pack version is not GA and is not
            supposed to be used in production
        min_wire_compatibility_version:
          type: string
          description: The minimum version required for performing a rolling upgrade
            to this stack version.
        schema_version:
          type: integer
          description: The schema version of the stack pack version
          format: int32
        min_index_compatibility_version:
          type: string
          description: The minimum version required for performing a full cluster
            restart upgrade to this stack version.
        min_platform_version:
          type: string
          description: The minimum version of the platform that the stack pack version
            is compatible with
        notes:
          type: string
          description: Notes for administrator
      description: The metadata for the Elastic Stack.
    RemoteResourceRef:
      required:
      - alias
      - deployment_id
      - elasticsearch_ref_id
      type: object
      properties:
        info:
          $ref: '#/components/schemas/RemoteResourceInfo'
        elasticsearch_ref_id:
          type: string
          description: The locally-unique user-specified id of an Elasticsearch Resource
        deployment_id:
          type: string
          description: The id of the deployment
        skip_unavailable:
          type: boolean
          description: 'If true, skip this cluster during search if it is disconnected.
            Default: false'
        alias:
          type: string
          description: The alias for this remote cluster. Aliases must only contain
            letters, digits, dashes and underscores
      description: The Elasticsearch resource used as a Remote Cluster.
    TrafficFilterRulesetResponse:
      required:
      - id
      type: object
      properties:
        id:
          type: string
          description: The new ruleset ID
      description: The response after you create a new ruleset.
    Kibana:
      required:
      - backend_plan
      - display_name
      - elasticsearch_cluster_ref_id
      - ref_id
      type: object
      properties:
        elasticsearch_cluster_ref_id:
          type: string
          description: The user-specified id of the Elasticsearch Cluster that this
            will link to
        backend_plan:
          type: object
          properties: {}
          description: The backend plan as JSON
        display_name:
          type: string
          description: The human readable name (defaults to the generated cluster
            id if not specified)
        ref_id:
          type: string
          description: A locally-unique user-specified id
      description: Holds diagnostics for a Kibana resource
    ClusterCurationSpec:
      required:
      - index_pattern
      - trigger_interval_seconds
      type: object
      properties:
        index_pattern:
          type: string
          description: Index matching pattern
        trigger_interval_seconds:
          type: integer
          description: Number of seconds after index creation to trigger this spec
          format: int32
      description: Specifies the conditions to trigger an Elasticsearch cluster curation.
    TermQuery:
      required:
      - value
      type: object
      properties:
        value:
          type: object
          properties: {}
          description: The exact value to query for.
      description: A query for documents that contain the specified term in the inverted
        index.
    Apm:
      required:
      - backend_plan
      - display_name
      - elasticsearch_cluster_ref_id
      - ref_id
      type: object
      properties:
        elasticsearch_cluster_ref_id:
          type: string
          description: The user-specified id of the Elasticsearch Cluster that this
            will link to
        backend_plan:
          type: object
          properties: {}
          description: The backend plan as JSON
        display_name:
          type: string
          description: The human readable name (defaults to the generated cluster
            id if not specified)
        ref_id:
          type: string
          description: A locally-unique user-specified id
      description: Holds diagnostics for an APM resource
    AppSearchSettings:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/ClusterMetadataSettings'
      description: The settings for the App Search.
    StackVersionKibanaConfig:
      required:
      - blacklist
      - docker_image
      type: object
      properties:
        settings:
          type: object
          properties: {}
          description: Settings that are applied to all nodes of this type
        blacklist:
          type: array
          description: List of configuration options that cannot be overridden by
            user settings
          items:
            type: string
        version:
          type: string
          description: Version of Kibana
        capacity_constraints:
          $ref: '#/components/schemas/StackVersionInstanceCapacityConstraint'
        compatible_node_types:
          type: array
          description: Node types that are compatible with this one
          items:
            type: string
        docker_image:
          type: string
          description: Docker image for the kibana
      description: The Kibana configuration for an Elastic Stack version.
    EnterpriseSearchNodeTypes:
      required:
      - appserver
      - connector
      - worker
      type: object
      properties:
        connector:
          type: boolean
          description: Defines whether this instance should run as Connector
        appserver:
          type: boolean
          description: Defines whether this instance should run as Application/API
            server
        worker:
          type: boolean
          description: Defines whether this instance should run as background worker
      description: Node types to enable for an Enterprise Search instance
    KibanaClusterSettings:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/ClusterMetadataSettings'
      description: The settings for multiple Kibana instances.
    ElasticsearchPlanControlConfiguration:
      type: object
      properties:
        cluster_reboot:
          type: string
          description: 'Set to ''forced'' to force a reboot as part of the upgrade
            plan. NOTES: (ie taking an existing plan and leaving it alone except for
            setting ''transient.plan_configuration.cluster_reboot'': ''forced'' will
            reboot the cluster)'
          enum:
          - forced
        calm_wait_time:
          type: integer
          description: This timeout determines how long to give a cluster after it
            responds to API calls before performing actual operations on it. It defaults
            to 5s
          format: int64
        skip_snapshot:
          type: boolean
          description: 'If true (default: false), does not take (or require) a successful
            snapshot to be taken before performing any potentially destructive changes
            to this cluster'
        max_snapshot_age:
          type: integer
          description: When you take a snapshot and 'skip_snapshots' is false, specifies
            the maximum age in seconds of the most recent snapshot before a new snapshot
            is created. Default is 300
          format: int64
        timeout:
          type: integer
          description: 'The total timeout in seconds after which the plan is cancelled
            even if it is not complete. Defaults to 4x the max memory capacity per
            node (in MB). NOTES: A 3 zone cluster with 2 nodes of 2048 each would
            have a timeout of 4*2048=8192 seconds. Timeout does not include time required
            to run rollback actions.'
          format: int64
        extended_maintenance:
          type: boolean
          description: If true (default false), does not clear the maintenance flag
            (which prevents its API from being accessed except by the constructor)
            on new instances added until after a snapshot has been restored, otherwise,
            the maintenance flag is cleared once the new instances successfully join
            the new cluster
        max_snapshot_attempts:
          type: integer
          description: 'If taking a snapshot (ie unless ''skip_snapshots'': true)
            then will retry on failure at most this number of times (default: 5)'
          format: int32
      description: The configuration settings for the timeout and fallback parameters.
    StackVersionTemplateInfo:
      type: object
      properties:
        hashes:
          type: array
          description: Relative paths of files with SHA-256 hashes that contains the
            template
          readOnly: true
          items:
            $ref: '#/components/schemas/StackVersionTemplateFileHash'
        template_version:
          type: string
          description: Template version
          readOnly: true
      description: The template information for an Elastic Stack version.
    ElasticsearchClusterInfo:
      required:
      - associated_apm_clusters
      - associated_appsearch_clusters
      - associated_enterprise_search_clusters
      - associated_kibana_clusters
      - cluster_id
      - cluster_name
      - elasticsearch
      - external_links
      - healthy
      - metadata
      - plan_info
      - snapshots
      - status
      - topology
      type: object
      properties:
        status:
          type: string
          description: Cluster status
          enum:
          - initializing
          - stopping
          - stopped
          - rebooting
          - restarting
          - reconfiguring
          - started
        associated_apm_clusters:
          type: array
          items:
            $ref: '#/components/schemas/ApmSubInfo'
        associated_kibana_clusters:
          type: array
          items:
            $ref: '#/components/schemas/KibanaSubClusterInfo'
        links:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Hyperlink'
          description: A map of application-specific operations (which map to 'operationId's
            in the Swagger API) to metadata about that operation
        associated_enterprise_search_clusters:
          type: array
          items:
            $ref: '#/components/schemas/EnterpriseSearchSubInfo'
        settings:
          $ref: '#/components/schemas/ElasticsearchClusterSettings'
        healthy:
          type: boolean
          description: 'Whether the cluster is healthy or not (one or more of the
            info subsections will have healthy: false)'
        associated_appsearch_clusters:
          type: array
          items:
            $ref: '#/components/schemas/AppSearchSubInfo'
        region:
          type: string
          description: The region that this cluster belongs to. Only populated in
            SaaS or federated ECE.
        elasticsearch_monitoring_info:
          $ref: '#/components/schemas/ElasticsearchMonitoringInfo'
        snapshots:
          $ref: '#/components/schemas/SnapshotStatusInfo'
        cluster_name:
          type: string
          description: The name of the cluster
        plan_info:
          $ref: '#/components/schemas/ElasticsearchClusterPlansInfo'
        cluster_id:
          type: string
          description: The id of the cluster
        external_links:
          uniqueItems: true
          type: array
          description: External resources related to the cluster
          items:
            $ref: '#/components/schemas/ExternalHyperlink'
        system_alerts:
          type: array
          description: List of cluster system alerts
          items:
            $ref: '#/components/schemas/ClusterSystemAlert'
        elasticsearch:
          $ref: '#/components/schemas/ElasticsearchInfo'
        deployment_id:
          type: string
          description: The id of the deployment that this Elasticsearch belongs to.
        topology:
          $ref: '#/components/schemas/ClusterTopologyInfo'
        security:
          $ref: '#/components/schemas/ElasticsearchClusterSecurityInfo'
        metadata:
          $ref: '#/components/schemas/ClusterMetadataInfo'
      description: The information for an Elasticsearch cluster.
    EnableIlmRequest:
      required:
      - index_patterns
      type: object
      properties:
        index_patterns:
          type: array
          description: A locally-unique user-specified id for Kibana
          items:
            $ref: '#/components/schemas/IndexPattern'
      description: Request sent to enable ILM on a deployment.
    TransientKibanaPlanConfiguration:
      type: object
      properties:
        plan_configuration:
          $ref: '#/components/schemas/KibanaPlanControlConfiguration'
        strategy:
          $ref: '#/components/schemas/PlanStrategy'
      description: Defines the configuration parameters that control how the plan
        is applied. For example, the Elasticsearch cluster topology and Kibana instance
        settings.
    DeploymentShutdownResponse:
      required:
      - id
      - name
      type: object
      properties:
        id:
          type: string
          description: The id of the deployment
        orphaned:
          $ref: '#/components/schemas/Orphaned'
        name:
          type: string
          description: The name of the deployment
      description: A response returned from the Deployment shutdown endpoint
    IpFilteringSettings:
      required:
      - rulesets
      type: object
      properties:
        rulesets:
          type: array
          description: IDs of the IP filter rulesets
          items:
            type: string
      description: The configuration settings for IP filtering.
    AppSearchResourceInfo:
      required:
      - elasticsearch_cluster_ref_id
      - id
      - info
      - ref_id
      - region
      type: object
      properties:
        elasticsearch_cluster_ref_id:
          type: string
          description: The Elasticsearch cluster that this resource depends on.
        info:
          $ref: '#/components/schemas/AppSearchInfo'
        region:
          type: string
          description: The region where this resource exists
        id:
          type: string
          description: The randomly-generated id of a Resource
        ref_id:
          type: string
          description: The locally-unique user-specified id of a Resource
      description: Describes an App Search resource belonging to a Deployment
    KibanaClusterPlansInfo:
      required:
      - healthy
      - history
      type: object
      properties:
        healthy:
          type: boolean
          description: Whether the plan situation is healthy (if unhealthy, means
            the last plan attempt failed)
        current:
          $ref: '#/components/schemas/KibanaClusterPlanInfo'
        pending:
          $ref: '#/components/schemas/KibanaClusterPlanInfo'
        history:
          type: array
          items:
            $ref: '#/components/schemas/KibanaClusterPlanInfo'
      description: Information about the current, pending, or past Kibana instance
        plans.
    EmptyResponse:
      type: object
    KibanaDeeplink:
      required:
      - semver
      - uri
      type: object
      properties:
        semver:
          type: string
          description: Semver condition when to apply the URI.
        uri:
          type: string
          description: URI to which the user should be directed.
      description: Embedded object that contains information for linking into a specific
        Kibana page configured via the template.
    DeploymentUpgradeAssistantStatusResponse:
      required:
      - details
      - ready_for_upgrade
      type: object
      properties:
        ready_for_upgrade:
          type: boolean
          description: A boolean indicating whether or not the cluster is ready to
            be upgraded
        details:
          type: string
          description: Message with information about the number of Elasticsearch
            and Kibana deprecations
      description: The status of your cluster and its readiness to be upgraded
    ExistsQuery:
      required:
      - field
      type: object
      properties:
        field:
          type: string
          description: The field to check for non-null values in.
      description: Matches documents that have at least one non-`null` value in the
        original field.
    TopologyElementControl:
      required:
      - min
      type: object
      properties:
        min:
          $ref: '#/components/schemas/TopologySize'
      description: Controls for the topology element. Only used as part of the deployment
        template. Ignored if included as part of a deployment.
    EnterpriseSearchInfo:
      required:
      - elasticsearch_cluster
      - external_links
      - healthy
      - id
      - name
      - plan_info
      - status
      - topology
      type: object
      properties:
        status:
          type: string
          description: Enterprise Search status
          enum:
          - initializing
          - stopping
          - stopped
          - rebooting
          - restarting
          - reconfiguring
          - started
        name:
          type: string
          description: The name of the Enterprise Search
        links:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Hyperlink'
          description: A map of application-specific operations (which map to 'operationId's
            in the Swagger API) to metadata about that operation
        elasticsearch_cluster:
          $ref: '#/components/schemas/TargetElasticsearchCluster'
        healthy:
          type: boolean
          description: 'Whether the Enterprise Search is healthy or not (one or more
            of the info subsections will have healthy: false)'
        region:
          type: string
          description: The region that this Enterprise Search belongs to. Only populated
            in SaaS or federated ECE.
        settings:
          $ref: '#/components/schemas/EnterpriseSearchSettings'
        plan_info:
          $ref: '#/components/schemas/EnterpriseSearchPlansInfo'
        external_links:
          uniqueItems: true
          type: array
          description: External resources related to the Enterprise Search
          items:
            $ref: '#/components/schemas/ExternalHyperlink'
        deployment_id:
          type: string
          description: The id of the deployment that this Enterprise Search belongs
            to.
        topology:
          $ref: '#/components/schemas/ClusterTopologyInfo'
        id:
          type: string
          description: The id of the Enterprise Search
        metadata:
          $ref: '#/components/schemas/ClusterMetadataInfo'
      description: The overview information for the Enterprise Search Server.
    DeploymentsCosts:
      required:
      - deployments
      - total_cost
      type: object
      properties:
        total_cost:
          type: number
          description: Total cost for all deployments
          format: double
        deployments:
          type: array
          description: Costs of the list of deployments
          items:
            $ref: '#/components/schemas/DeploymentCosts'
      description: Costs associated to a set of deployments for an organization. All
        of the costs are expressed in Elastic Consumption Unit (ECU).
    DeploymentResource:
      required:
      - id
      - kind
      - ref_id
      - region
      type: object
      properties:
        elasticsearch_cluster_ref_id:
          type: string
          description: The Elasticsearch cluster that this resource depends on.
        kind:
          type: string
          description: The kind of resource
        cloud_id:
          type: string
          description: An encoded string that provides other Elastic services with
            the necessary information to connect to this Elasticsearch and Kibana
        secret_token:
          type: string
          description: Secret token for using a created resource. Only provided on
            initial create and absent otherwise.
        warnings:
          type: array
          description: List of warnings generated from validating resource updates
          items:
            $ref: '#/components/schemas/ReplyWarning'
        region:
          type: string
          description: Identifier of the region in which this resource runs.
        ref_id:
          type: string
          description: A locally-unique friendly alias for this Elasticsearch cluster
        credentials:
          $ref: '#/components/schemas/ClusterCredentials'
        id:
          type: string
          description: A system-unique id for the created resource
      description: Data for a deployment resource
    ApmPlansInfo:
      required:
      - healthy
      - history
      type: object
      properties:
        healthy:
          type: boolean
          description: Whether the plan situation is healthy (if unhealthy, means
            the last plan attempt failed)
        current:
          $ref: '#/components/schemas/ApmPlanInfo'
        pending:
          $ref: '#/components/schemas/ApmPlanInfo'
        history:
          type: array
          items:
            $ref: '#/components/schemas/ApmPlanInfo'
      description: Information about current, pending, and past APM Server plans.
    ReadOnlyRequest:
      required:
      - enabled
      type: object
      properties:
        enabled:
          type: boolean
          description: Enabled or disabled read-only mode
      description: Read-only mode request payload
    ElasticsearchUserPlugin:
      required:
      - elasticsearch_version
      - name
      - url
      type: object
      properties:
        url:
          type: string
          description: The URL of the plugin (must be accessible from the ECE infrastructure)
        name:
          type: string
          description: The name of the plugin
        elasticsearch_version:
          type: string
          description: The supported Elasticsearch version (must match the version
            in the plan)
      description: A list of admin-uploaded plugin objects.
    ObservabilityIssue:
      required:
      - description
      - severity
      type: object
      properties:
        description:
          type: string
          description: A user-friendly description of the observability health issue
        severity:
          type: string
          description: Severity of the health issue
      description: Observability health issue
    DeploymentObservability:
      required:
      - healthy
      type: object
      properties:
        healthy:
          type: boolean
          description: 'Whether the deployment observability is healthy or not (one
            or more of the subsections will have healthy: false)'
        metrics:
          $ref: '#/components/schemas/DeploymentMetrics'
        logging:
          $ref: '#/components/schemas/DeploymentLogging'
        issues:
          type: array
          description: General observability health issues for the deployment
          items:
            $ref: '#/components/schemas/ObservabilityIssue'
      description: Observability information for a deployment
    DeploymentResourceCommandResponse:
      type: object
      properties:
        warnings:
          type: array
          description: List of warnings generated from validating command
          items:
            $ref: '#/components/schemas/ReplyWarning'
      description: Response returned when a command is successfully issued against
        a given Deployment resource
    Updates:
      type: object
      properties:
        appsearch:
          type: array
          description: Diagnostics for AppSearches
          items:
            $ref: '#/components/schemas/AppSearch'
        elasticsearch:
          type: array
          description: Diagnostics for Elasticsearch clusters
          items:
            $ref: '#/components/schemas/Elasticsearch'
        enterprise_search:
          type: array
          description: Diagnostics for Enterprise Search resources
          items:
            $ref: '#/components/schemas/EnterpriseSearch'
        kibana:
          type: array
          description: Diagnostics for Kibanas
          items:
            $ref: '#/components/schemas/Kibana'
        apm:
          type: array
          description: Diagnostics for APMs
          items:
            $ref: '#/components/schemas/Apm'
      description: Holds diagnostics for existing resources that might be updated
    IndexPattern:
      required:
      - index_pattern
      - policy_name
      type: object
      properties:
        index_pattern:
          type: string
          description: Index pattern to which the ILM policy will be applied.
        node_attributes:
          type: object
          additionalProperties:
            type: string
          description: Defines the Elasticsearch node attributes for the warm element
            of the topology
        policy_name:
          type: string
          description: Name of the policy to create
      description: An index pattern described indicating how it has to be migrated
        to ILM.
    GrowShrinkStrategyConfig:
      type: object
      description: A strategy that creates instances with the new plan, migrates data
        from the old instances, then shuts down the old instances. `GrowShrinkStrategyConfig`
        is safer than 'rolling' and ensures single node availability during a plan
        change, but can be a lot slower on larger clusters.
    TopologySize:
      required:
      - resource
      - value
      type: object
      properties:
        resource:
          type: string
          description: Type of resource
          enum:
          - memory
          - storage
        value:
          type: integer
          description: Amount of resource
          format: int32
      description: Measured by the amount of a resource. The final cluster size is
        calculated using multipliers from the topology instance configuration.
    DeploymentCreateResponse:
      required:
      - created
      - id
      - name
      - resources
      type: object
      properties:
        name:
          type: string
          description: The name of the deployment
        created:
          type: boolean
          description: Whether or not the deployment was freshly created
        alias:
          type: string
          description: A user-defined deployment alias for user-friendly resource
            URLs
        diagnostics:
          $ref: '#/components/schemas/DeploymentDiagnostics'
        id:
          type: string
          description: The id of the deployment
        resources:
          type: array
          description: List of created resources.
          items:
            $ref: '#/components/schemas/DeploymentResource'
      description: A response returned from the Deployment create endpoint
    AppSearchPlanControlConfiguration:
      type: object
      properties:
        cluster_reboot:
          type: string
          description: Set to 'forced' to force a reboot as part of the upgrade plan
          enum:
          - forced
        move_allocators:
          type: array
          items:
            $ref: '#/components/schemas/AllocatorMoveRequest'
        reallocate_instances:
          type: boolean
          description: 'If true (default: false) does not allow re-using any existing
            instances currently in the cluster, ie even unchanged instances will be
            re-created'
        preferred_allocators:
          type: array
          description: List of allocators on which instances are placed if possible
            (if not possible/not specified then any available allocator with space
            is used)
          items:
            type: string
        calm_wait_time:
          type: integer
          description: This timeout determines how long to give a cluster after it
            responds to API calls before performing actual operations on it. It defaults
            to 5s
          format: int64
        timeout:
          type: integer
          description: The total timeout in seconds after which the plan is cancelled
            even if it is not complete. Defaults to 4x the max memory capacity per
            node (in MB)
          format: int64
        extended_maintenance:
          type: boolean
          description: If true (default false), does not clear the maintenance flag
            (which prevents its API from being accessed except by the constructor)
            on new instances added until after a snapshot has been restored, otherwise,
            the maintenance flag is cleared once the new instances successfully join
            the new cluster
        move_instances:
          type: array
          items:
            $ref: '#/components/schemas/InstanceMoveRequest'
    Hyperlink:
      type: object
      properties:
        need_elevated_permissions:
          type: boolean
          description: Whether the operation requires elevated permissions (when the
            field is present, elevated permissions are required).
    DtsRate:
      required:
      - formatted_value
      - value
      type: object
      properties:
        formatted_value:
          type: string
          description: Rate in human readable format
        value:
          type: number
          description: Raw rate
          format: double
      description: DTS Rate
    TrafficFilterSettings:
      required:
      - rulesets
      type: object
      properties:
        rulesets:
          type: array
          description: IDs of the traffic filter rulesets
          items:
            type: string
      description: The configuration settings for the traffic filter.
    StackVersionNodeType:
      required:
      - description
      - name
      - node_type
      type: object
      properties:
        mandatory:
          type: boolean
          description: Flag to specify a node type is mandatory in a cluster's plan
        name:
          type: string
          description: Name of the node type
        settings:
          type: object
          properties: {}
          description: Settings that are applied to all nodes of this type
        node_type:
          type: string
          description: Type of the node (master, data, ...)
        capacity_constraints:
          $ref: '#/components/schemas/StackVersionInstanceCapacityConstraint'
        compatible_node_types:
          type: array
          description: Node types that are compatible with this one
          items:
            type: string
        description:
          type: string
          description: Description of the node type
      description: The configuration for an Elastic Stack node type.
    EnterpriseSearchPlanControlConfiguration:
      type: object
      properties:
        cluster_reboot:
          type: string
          description: Set to 'forced' to force a reboot as part of the upgrade plan
          enum:
          - forced
        move_allocators:
          type: array
          items:
            $ref: '#/components/schemas/AllocatorMoveRequest'
        reallocate_instances:
          type: boolean
          description: 'If true (default: false) does not allow re-using any existing
            instances currently in the cluster, i.e. even unchanged instances will
            be re-created'
        preferred_allocators:
          type: array
          description: List of allocators on which instances are placed if possible
            (if not possible/not specified then any available allocator with space
            is used)
          items:
            type: string
        calm_wait_time:
          type: integer
          description: This timeout determines how long to give a cluster after it
            responds to API calls before performing actual operations on it. It defaults
            to 5s
          format: int64
        timeout:
          type: integer
          description: The total timeout in seconds after which the plan is cancelled
            even if it is not complete. Defaults to 4x the max memory capacity per
            node (in MB)
          format: int64
        extended_maintenance:
          type: boolean
          description: If true (default false), does not clear the maintenance flag
            (which prevents its API from being accessed except by the constructor)
            on new instances added until after a snapshot has been restored, otherwise,
            the maintenance flag is cleared once the new instances successfully join
            the new cluster
        move_instances:
          type: array
          items:
            $ref: '#/components/schemas/InstanceMoveRequest'
    DeploymentCreateMetadata:
      type: object
      properties:
        tags:
          type: array
          description: Arbitrary user-defined metadata associated with this deployment
          items:
            $ref: '#/components/schemas/MetadataItem'
      description: Additional information about the new deployment object.
    AppSearchInfo:
      required:
      - elasticsearch_cluster
      - external_links
      - healthy
      - id
      - name
      - plan_info
      - status
      - topology
      type: object
      properties:
        status:
          type: string
          description: App Search status
          enum:
          - initializing
          - stopping
          - stopped
          - rebooting
          - restarting
          - reconfiguring
          - started
        name:
          type: string
          description: The name of the App Search
        links:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Hyperlink'
          description: A map of application-specific operations (which map to 'operationId's
            in the Swagger API) to metadata about that operation
        elasticsearch_cluster:
          $ref: '#/components/schemas/TargetElasticsearchCluster'
        healthy:
          type: boolean
          description: 'Whether the App Search is healthy or not (one or more of the
            info subsections will have healthy: false)'
        region:
          type: string
          description: The region that this App Search belongs to. Only populated
            in SaaS or federated ECE.
        settings:
          $ref: '#/components/schemas/AppSearchSettings'
        plan_info:
          $ref: '#/components/schemas/AppSearchPlansInfo'
        external_links:
          uniqueItems: true
          type: array
          description: External resources related to the App Search
          items:
            $ref: '#/components/schemas/ExternalHyperlink'
        deployment_id:
          type: string
          description: The id of the deployment that this App Search belongs to.
        topology:
          $ref: '#/components/schemas/ClusterTopologyInfo'
        id:
          type: string
          description: The id of the App Search
        metadata:
          $ref: '#/components/schemas/ClusterMetadataInfo'
      description: The overview information for the App Search Server.
    AppSearchPlanInfo:
      required:
      - healthy
      - plan_attempt_log
      - warnings
      type: object
      properties:
        attempt_end_time:
          type: string
          description: If this plan completed or failed (ie is not pending), when
            the attempt ended (ISO format in UTC)
          format: date-time
        plan_attempt_id:
          type: string
          description: A UUID for each plan attempt
        warnings:
          type: array
          items:
            $ref: '#/components/schemas/ClusterPlanWarning'
        healthy:
          type: boolean
          description: Either the plan ended successfully, or is not yet completed
            (and no errors have occurred)
        plan_end_time:
          type: string
          description: If this plan is not current or pending, when the plan was no
            longer active (ISO format in UTC)
          format: date-time
        source:
          $ref: '#/components/schemas/ChangeSourceInfo'
        plan_attempt_log:
          type: array
          items:
            $ref: '#/components/schemas/ClusterPlanStepInfo'
        plan:
          $ref: '#/components/schemas/AppSearchPlan'
        plan_attempt_name:
          type: string
          description: A human readable name for each plan attempt, only populated
            when retrieving plan histories
        attempt_start_time:
          type: string
          description: When this plan attempt (ie to apply the plan to the App Search)
            started (ISO format in UTC)
          format: date-time
      description: Information about the App Search Server plan.
    TrafficFilterRulesetInfo:
      required:
      - id
      - include_by_default
      - name
      - region
      - rules
      - type
      type: object
      properties:
        associations:
          type: array
          description: List of associations. Returned only when include_associations
            query parameter is true
          items:
            $ref: '#/components/schemas/FilterAssociation'
        description:
          type: string
          description: Description of the ruleset
        rules:
          type: array
          description: List of rules
          items:
            $ref: '#/components/schemas/TrafficFilterRule'
        region:
          type: string
          description: The ruleset can be attached only to deployments in the specific
            region
        include_by_default:
          type: boolean
          description: Should the ruleset be automatically included in the new deployments
        total_associations:
          type: integer
          description: Total number of associations. This includes associations the
            user does not have permission to view.Returned only when include_associations
            query parameter is true
          format: int32
        type:
          type: string
          description: Type of the ruleset
        id:
          type: string
          description: The ruleset ID
        name:
          type: string
          description: Name of the ruleset
      description: The container for a set of traffic filter rules.
    ElasticsearchInfo:
      required:
      - blocking_issues
      - healthy
      - master_info
      - shard_info
      type: object
      properties:
        healthy:
          type: boolean
          description: Whether the Elasticsearch cluster is healthy (check the sub-objects
            for more details if not)
        shard_info:
          $ref: '#/components/schemas/ElasticsearchShardsInfo'
        master_info:
          $ref: '#/components/schemas/ElasticsearchMasterInfo'
        blocking_issues:
          $ref: '#/components/schemas/ElasticsearchClusterBlockingIssues'
      description: Information about the Elasticsearch cluster.
    Balance:
      required:
      - available
      - line_items
      - remaining
      type: object
      properties:
        available:
          type: number
          description: Available balance
          format: double
        line_items:
          type: array
          description: A collection of order line items for for an organization
          items:
            $ref: '#/components/schemas/SimplifiedLineItem'
        remaining:
          type: number
          description: Remaining balance
          format: double
      description: The available balance for an organization
    ElasticsearchClusterTrustSettings:
      type: object
      properties:
        accounts:
          type: array
          description: The list of trust relationships with different accounts
          items:
            $ref: '#/components/schemas/AccountTrustRelationship'
        external:
          type: array
          description: The list of trust relationships with external entities
          items:
            $ref: '#/components/schemas/ExternalTrustRelationship'
      description: Configuration of trust with other clusters.
    DeploymentsListingData:
      required:
      - id
      - name
      - resources
      type: object
      properties:
        id:
          type: string
          description: The id of this deployment
        resources:
          type: array
          description: List of resources in this deployment
          items:
            $ref: '#/components/schemas/DeploymentResource'
        name:
          type: string
          description: The name of this deployment
    ClusterPlanStepInfo:
      required:
      - info_log
      - stage
      - started
      - status
      - step_id
      type: object
      properties:
        status:
          type: string
          description: The status of the step (success, warning, error - warning means
            something didn't go as expected but it was not serious enough to abort
            the plan)
          enum:
          - success
          - warning
          - error
          - pending
        started:
          type: string
          description: When the step started (ISO format in UTC)
          format: date-time
        duration_in_millis:
          type: integer
          description: The duration of the step in MS
          format: int64
        completed:
          type: string
          description: When the step completed (ISO format in UTC)
          format: date-time
        step_id:
          type: string
          description: ID of current step
        info_log:
          type: array
          description: Human readable summaries of the step, including messages for
            each stage of the step
          items:
            $ref: '#/components/schemas/ClusterPlanStepLogMessageInfo'
        stage:
          type: string
          description: Current stage that the step is in
          enum:
          - starting
          - completed
          - in_progress
      description: Information about a step in a plan.
    MatchQuery:
      required:
      - query
      type: object
      properties:
        operator:
          type: string
          description: The operator flag can be set to or or and to control the boolean
            clauses (defaults to or).
        query:
          type: string
          description: The text/numeric/date to query for.
        minimum_should_match:
          type: integer
          description: The minimum number of optional should clauses to match.
          format: int32
        analyzer:
          type: string
          description: The analyzer that will be used to perform the analysis process
            on the text. Defaults to the analyzer that was used to index the field.
      description: Consumes and analyzes text, numbers, and dates, then constructs
        a query.
    CreateExtensionRequest:
      required:
      - extension_type
      - name
      - version
      type: object
      properties:
        version:
          type: string
          description: The Elasticsearch version.
        extension_type:
          type: string
          description: The extension type.
          enum:
          - plugin
          - bundle
        name:
          type: string
          description: The extension name. Only ASCII alphanumeric and [_.-] characters
            allowed
        download_url:
          type: string
          description: The URL to download the extension archive.
        description:
          type: string
          description: The extension description.
      description: The body of a request to create a new extension
    ElasticsearchPayload:
      required:
      - plan
      - ref_id
      - region
      type: object
      properties:
        region:
          type: string
          description: The region where this resource exists
        settings:
          $ref: '#/components/schemas/ElasticsearchClusterSettings'
        display_name:
          type: string
          description: The human readable name for the cluster (defaults to the generated
            cluster id if not specified)
        plan:
          $ref: '#/components/schemas/ElasticsearchClusterPlan'
        ref_id:
          type: string
          description: A locally-unique user-specified id for this Elasticsearch cluster
      description: An alias for an Elasticsearch Cluster paired with a request for
        creating one
    EnterpriseSearchResourceInfo:
      required:
      - elasticsearch_cluster_ref_id
      - id
      - info
      - ref_id
      - region
      type: object
      properties:
        elasticsearch_cluster_ref_id:
          type: string
          description: The Elasticsearch cluster that this resource depends on.
        info:
          $ref: '#/components/schemas/EnterpriseSearchInfo'
        region:
          type: string
          description: The region where this resource exists
        id:
          type: string
          description: The randomly-generated id of a Resource
        ref_id:
          type: string
          description: The locally-unique user-specified id of a Resource
      description: Describes an Enterprise Search resource belonging to a Deployment
    DeleteApiKeysRequest:
      required:
      - keys
      type: object
      properties:
        keys:
          type: array
          description: The list of API key IDs.
          items:
            type: string
      description: The request payload that deletes the API keys.
    KibanaClusterPlanInfo:
      required:
      - healthy
      - plan_attempt_log
      - warnings
      type: object
      properties:
        attempt_end_time:
          type: string
          description: If this plan completed or failed (ie is not pending), when
            the attempt ended (ISO format in UTC)
          format: date-time
        plan_attempt_id:
          type: string
          description: A UUID for each plan attempt
        warnings:
          type: array
          items:
            $ref: '#/components/schemas/ClusterPlanWarning'
        healthy:
          type: boolean
          description: Either the plan ended successfully, or is not yet completed
            (and no errors have occurred)
        plan_end_time:
          type: string
          description: If this plan is not current or pending, when the plan was no
            longer active (ISO format in UTC)
          format: date-time
        source:
          $ref: '#/components/schemas/ChangeSourceInfo'
        plan_attempt_log:
          type: array
          items:
            $ref: '#/components/schemas/ClusterPlanStepInfo'
        plan:
          $ref: '#/components/schemas/KibanaClusterPlan'
        plan_attempt_name:
          type: string
          description: A human readable name for each plan attempt, only populated
            when retrieving plan histories
        attempt_start_time:
          type: string
          description: When this plan attempt (ie to apply the plan to the cluster)
            started (ISO format in UTC)
          format: date-time
      description: Information about the current, pending, or past Kibana instance
        plan.
    RemoteResourceInfo:
      required:
      - compatible
      - connected
      - healthy
      - trusted
      - trusted_back
      type: object
      properties:
        healthy:
          type: boolean
          description: Whether or not the remote cluster is healthy
        compatible:
          type: boolean
          description: Whether or not the remote cluster version is compatible with
            this cluster version.
        connected:
          type: boolean
          description: Whether or not there is at least one connection to the remote
            cluster.
        trusted:
          type: boolean
          description: Whether or not the remote cluster is trusted by this cluster.
        trusted_back:
          type: boolean
          description: Whether or not the remote cluster trusts this cluster back.
      description: Information about a Remote Cluster.
    ApmResourceInfo:
      required:
      - elasticsearch_cluster_ref_id
      - id
      - info
      - ref_id
      - region
      type: object
      properties:
        elasticsearch_cluster_ref_id:
          type: string
          description: The Elasticsearch cluster that this resource depends on.
        info:
          $ref: '#/components/schemas/ApmInfo'
        region:
          type: string
          description: The region where this resource exists
        id:
          type: string
          description: The randomly-generated id of a Resource
        ref_id:
          type: string
          description: The locally-unique user-specified id of a Resource
      description: Describes an APM resource belonging to a Deployment
    KibanaPlanControlConfiguration:
      type: object
      properties:
        cluster_reboot:
          type: string
          description: Set to 'forced' to force a reboot as part of the upgrade plan
          enum:
          - forced
        extended_maintenance:
          type: boolean
          description: If true (default false), does not clear the maintenance flag
            (which prevents its API from being accessed except by the constructor)
            on new instances added until after a snapshot has been restored, otherwise,
            the maintenance flag is cleared once the new instances successfully join
            the new cluster
        calm_wait_time:
          type: integer
          description: This timeout determines how long to give a cluster after it
            responds to API calls before performing actual operations on it. It defaults
            to 5s
          format: int64
        timeout:
          type: integer
          description: The total timeout in seconds after which the plan is cancelled
            even if it is not complete. Defaults to 4x the max memory capacity per
            node (in MB)
          format: int64
      description: The configuration settings for the timeout and fallback parameters.
    ApmPlan:
      required:
      - apm
      type: object
      properties:
        cluster_topology:
          type: array
          items:
            $ref: '#/components/schemas/ApmTopologyElement'
        transient:
          $ref: '#/components/schemas/TransientApmPlanConfiguration'
        apm:
          $ref: '#/components/schemas/ApmConfiguration'
      description: The plan for the APM Server.
    DeploymentTemplateReference:
      required:
      - id
      type: object
      properties:
        version:
          type: string
          description: A version identifier to disambiguate multiple revisions of
            the same template
        id:
          type: string
          description: The unique identifier of the deployment template
      description: Specifies the deployment template used to create the plan.
    ApmInfo:
      required:
      - elasticsearch_cluster
      - external_links
      - healthy
      - id
      - name
      - plan_info
      - status
      - topology
      type: object
      properties:
        status:
          type: string
          description: APM status
          enum:
          - initializing
          - stopping
          - stopped
          - rebooting
          - restarting
          - reconfiguring
          - started
        apm_server_mode:
          type: string
          description: The mode APM is operating in.
          enum:
          - Standalone
          - Managed
        name:
          type: string
          description: The name of the APM
        links:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Hyperlink'
          description: A map of application-specific operations (which map to 'operationId's
            in the Swagger API) to metadata about that operation
        elasticsearch_cluster:
          $ref: '#/components/schemas/TargetElasticsearchCluster'
        healthy:
          type: boolean
          description: 'Whether the APM is healthy or not (one or more of the info
            subsections will have healthy: false)'
        region:
          type: string
          description: The region that this APM belongs to. Only populated in SaaS
            or federated ECE.
        settings:
          $ref: '#/components/schemas/ApmSettings'
        plan_info:
          $ref: '#/components/schemas/ApmPlansInfo'
        external_links:
          uniqueItems: true
          type: array
          description: External resources related to the APM
          items:
            $ref: '#/components/schemas/ExternalHyperlink'
        deployment_id:
          type: string
          description: The id of the deployment that this APM Server belongs to.
        topology:
          $ref: '#/components/schemas/ClusterTopologyInfo'
        id:
          type: string
          description: The id of the APM
        metadata:
          $ref: '#/components/schemas/ClusterMetadataInfo'
      description: The overview information for the APM Server.
    ClusterCredentials:
      required:
      - password
      - username
      type: object
      properties:
        username:
          type: string
          description: The username of the newly created cluster
        password:
          type: string
          description: The password of the newly created cluster
      description: The username and password for the new Elasticsearch cluster, which
        is returned from the Elasticsearch cluster `create` command.
    KibanaPayload:
      required:
      - elasticsearch_cluster_ref_id
      - plan
      - ref_id
      - region
      type: object
      properties:
        elasticsearch_cluster_ref_id:
          type: string
          description: Alias to the Elasticsearch Cluster to attach Kibana to
        display_name:
          type: string
          description: 'The human readable name for the Kibana cluster (default: takes
            the name of its Elasticsearch cluster)'
        settings:
          $ref: '#/components/schemas/KibanaClusterSettings'
        region:
          type: string
          description: The region where this resource exists
        ref_id:
          type: string
          description: A locally-unique user-specified id for Kibana
        plan:
          $ref: '#/components/schemas/KibanaClusterPlan'
      description: A Kibana creation request paired with the alias of the Elasticsearch
        cluster it should be paired with
    AppSearchSubInfo:
      required:
      - app_search_id
      - enabled
      type: object
      properties:
        enabled:
          type: boolean
          description: Whether the associated App Search is currently available
        app_search_id:
          type: string
          description: The App Search Id
        links:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Hyperlink'
          description: A map of application-specific operations (which map to 'operationId's
            in the Swagger API) to metadata about that operation
      description: Information about the APM Servers associated with the Elasticsearch
        cluster.
    QueryContainer:
      type: object
      properties:
        match_all:
          $ref: '#/components/schemas/MatchAllQuery'
        exists:
          $ref: '#/components/schemas/ExistsQuery'
        term:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/TermQuery'
        nested:
          $ref: '#/components/schemas/NestedQuery'
        prefix:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/PrefixQuery'
        bool:
          $ref: '#/components/schemas/BoolQuery'
        query_string:
          $ref: '#/components/schemas/QueryStringQuery'
        range:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RangeQuery'
        match_none:
          $ref: '#/components/schemas/MatchNoneQuery'
        match:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/MatchQuery'
      description: The container for all of the allowed Elasticsearch queries. Specify
        only one property each time.
    AbsoluteRefId:
      required:
      - deployment_id
      - ref_id
      type: object
      properties:
        deployment_id:
          type: string
          description: The deployment id
        ref_id:
          type: string
          description: The reference id of the resource in the given deployment
      description: A reference to a specific resource of a deployment
    InstanceConfigurationInfo:
      required:
      - discrete_sizes
      - instance_type
      - name
      type: object
      properties:
        discrete_sizes:
          $ref: '#/components/schemas/DiscreteSizes'
        description:
          type: string
          description: Optional description for the instance configuration
        node_types:
          type: array
          description: Node types (master, data) for the instance
          items:
            type: string
        storage_multiplier:
          type: number
          description: Settings for the instance storage multiplier
          format: double
        instance_type:
          type: string
          description: The type of instance (elasticsearch, kibana)
        cpu_multiplier:
          type: number
          description: Settings for the instance CPU multiplier
          format: double
        max_zones:
          type: integer
          description: The maximum number of availability zones in which this instance
            configuration has allocators. This field will be missing unless explicitly
            requested with the show_max_zones parameter.
          format: int32
          readOnly: true
        id:
          type: string
          description: Unique identifier for the instance configuration
        name:
          type: string
          description: Display name for the instance configuration.
      description: The configuration template for Elasticsearch instances, Kibana
        instances, and APM Servers.
    EnterpriseSearchPayload:
      required:
      - elasticsearch_cluster_ref_id
      - plan
      - ref_id
      - region
      type: object
      properties:
        elasticsearch_cluster_ref_id:
          type: string
          description: Alias to the Elasticsearch Cluster to attach Enterprise Search
            to
        display_name:
          type: string
          description: 'The human readable name for the Enterprise Search cluster
            (default: takes the name of its Elasticsearch cluster)'
        settings:
          $ref: '#/components/schemas/EnterpriseSearchSettings'
        region:
          type: string
          description: The region where this resource exists
        ref_id:
          type: string
          description: A locally-unique user-specified id for Enterprise Search
        plan:
          $ref: '#/components/schemas/EnterpriseSearchPlan'
      description: An Enterprise Search creation request paired with the alias of
        the Elasticsearch cluster it should be paired with
    ClusterPlanWarning:
      required:
      - code
      - message
      type: object
      properties:
        step_id:
          type: string
          description: The ID of the step which produced a warning, if any
        message:
          type: string
          description: A description of the warning
        code:
          type: string
          description: A unique warning code
      description: Information about a warning from a plan.
    TransientApmPlanConfiguration:
      type: object
      properties:
        plan_configuration:
          $ref: '#/components/schemas/ApmPlanControlConfiguration'
        strategy:
          $ref: '#/components/schemas/PlanStrategy'
      description: Defines the configuration parameters that control how the plan
        is applied. For example, the Elasticsearch cluster topology and APM Server
        settings.
    DeploymentUpdateResponse:
      required:
      - id
      - name
      - resources
      type: object
      properties:
        name:
          type: string
          description: The name of the deployment
        alias:
          type: string
          description: A user-defined alias to use in place of ResourceIds for user-friendly
            resource URLs
        diagnostics:
          $ref: '#/components/schemas/DeploymentDiagnostics'
        shutdown_resources:
          $ref: '#/components/schemas/Orphaned'
        id:
          type: string
          description: The id of the deployment
        resources:
          type: array
          description: List of resources that are part of the deployment after the
            update operation.
          items:
            $ref: '#/components/schemas/DeploymentResource'
      description: A response returned from the Deployment update endpoint
    StackVersionConfig:
      required:
      - elasticsearch
      - kibana
      - template
      - upgradable_to
      type: object
      properties:
        accessible:
          type: boolean
          description: Whether or not this version is accessible by the calling user.
            This is only relevant in EC (SaaS) and is not sent in ECE.
        min_upgradable_from:
          type: string
          description: The minimum version recommended to upgrade this version.
          example: 6.7.0
        deleted:
          type: boolean
          description: Identifies that the Elastic Stack version is marked for deletion
          readOnly: true
        whitelisted:
          type: boolean
          description: Whether or not this version is whitelisted. This is only relevant
            in EC (SaaS) and is not sent in ECE.
        kibana:
          $ref: '#/components/schemas/StackVersionKibanaConfig'
        upgradable_to:
          type: array
          description: Stack Versions that this version can upgrade to
          items:
            type: string
        version:
          type: string
          description: Stack version
          readOnly: true
        elasticsearch:
          $ref: '#/components/schemas/StackVersionElasticsearchConfig'
        template:
          $ref: '#/components/schemas/StackVersionTemplateInfo'
        apm:
          $ref: '#/components/schemas/StackVersionApmConfig'
        appsearch:
          $ref: '#/components/schemas/StackVersionAppSearchConfig'
        metadata:
          $ref: '#/components/schemas/StackVersionMetadata'
      description: The details for an Elastic Stack configuration.
    DeploymentMetadata:
      type: object
      properties:
        tags:
          type: array
          description: Arbitrary user-defined metadata associated with this deployment
          items:
            $ref: '#/components/schemas/MetadataItem'
      description: Additional information about the current deployment object.
    ReadOnlyResponse:
      required:
      - enabled
      type: object
      properties:
        enabled:
          type: boolean
          description: Whether read-only mode is enabled or disabled
      description: Read-only mode response
    ElasticsearchClusterTopologyElement:
      type: object
      properties:
        autoscaling_policy_override_json:
          type: object
          properties: {}
          description: An arbitrary JSON object overriding the default autoscaling
            policy. Don't set unless you really know what you are doing.
        zone_count:
          type: integer
          description: The default number of zones in which data nodes will be placed
          format: int32
        topology_element_control:
          $ref: '#/components/schemas/TopologyElementControl'
        autoscaling_min:
          $ref: '#/components/schemas/TopologySize'
        node_type:
          $ref: '#/components/schemas/ElasticsearchNodeType'
        elasticsearch:
          $ref: '#/components/schemas/ElasticsearchConfiguration'
        autoscaling_max:
          $ref: '#/components/schemas/TopologySize'
        instance_configuration_id:
          type: string
          description: Controls the allocation of this topology element as well as
            allowed sizes and node_types. It needs to match the id of an existing
            instance configuration.
        node_roles:
          type: array
          description: 'The list of node roles for this topology element (ES version
            >= 7.10). Allowable values are: master, ingest, ml, data_hot, data_content,
            data_warm, data_cold, data_frozen, remote_cluster_client, transform'
          items:
            type: string
            enum:
            - master
            - ingest
            - ml
            - data_hot
            - data_content
            - data_warm
            - data_cold
            - data_frozen
            - remote_cluster_client
            - transform
        id:
          type: string
          description: Unique identifier of this topology element
        size:
          $ref: '#/components/schemas/TopologySize'
      description: The topology of the Elasticsearch nodes, including the number,
        capacity, and type of nodes, and where they can be allocated.
    DeploymentLoggingSettings:
      required:
      - destination
      type: object
      properties:
        destination:
          $ref: '#/components/schemas/AbsoluteRefId'
      description: The logging settings for a deployment
    ElasticsearchElasticUserPasswordResetResponse:
      required:
      - password
      - username
      type: object
      properties:
        username:
          type: string
          description: The username for the newly-reset password for the given Elasticsearch
            cluster
        password:
          type: string
          description: The newly-reset password for the given Elasticsearch cluster
      description: Envelope holding the newly-reset password for a cluster's user
    RemoteResources:
      required:
      - resources
      type: object
      properties:
        resources:
          type: array
          description: The remote resources
          items:
            $ref: '#/components/schemas/RemoteResourceRef'
      description: The list of resources used as remote clusters
    DeploymentResources:
      required:
      - apm
      - appsearch
      - elasticsearch
      - enterprise_search
      - kibana
      type: object
      properties:
        appsearch:
          type: array
          description: List of App Search resources in your Deployment
          items:
            $ref: '#/components/schemas/AppSearchResourceInfo'
        elasticsearch:
          type: array
          description: List of Elasticsearch resources in your Deployment
          items:
            $ref: '#/components/schemas/ElasticsearchResourceInfo'
        enterprise_search:
          type: array
          description: List of Enterprise Search resources in your Deployment
          items:
            $ref: '#/components/schemas/EnterpriseSearchResourceInfo'
        kibana:
          type: array
          description: List of Kibana resources in your Deployment
          items:
            $ref: '#/components/schemas/KibanaResourceInfo'
        apm:
          type: array
          description: List of Apm resources in your Deployment
          items:
            $ref: '#/components/schemas/ApmResourceInfo'
      description: Describes a resource belonging to a Deployment
    StackVersionTemplateFileHash:
      required:
      - hash
      - path
      type: object
      properties:
        path:
          type: string
          description: File path relative to template's root
        hash:
          type: string
          description: SHA-256 hash of a file
      description: The template file hash for an Elastic Stack version.
    TransientEnterpriseSearchPlanConfiguration:
      type: object
      properties:
        plan_configuration:
          $ref: '#/components/schemas/EnterpriseSearchPlanControlConfiguration'
        strategy:
          $ref: '#/components/schemas/PlanStrategy'
      description: Defines configuration parameters that control how the plan (i.e.
        consisting of the cluster topology and Enterprise Search settings) is applied
    ElasticsearchClusterSettings:
      type: object
      properties:
        monitoring:
          $ref: '#/components/schemas/ManagedMonitoringSettings'
        curation:
          $ref: '#/components/schemas/ClusterCurationSettings'
        ip_filtering:
          $ref: '#/components/schemas/IpFilteringSettings'
        snapshot:
          $ref: '#/components/schemas/ClusterSnapshotSettings'
        traffic_filter:
          $ref: '#/components/schemas/TrafficFilterSettings'
        trust:
          $ref: '#/components/schemas/ElasticsearchClusterTrustSettings'
        dedicated_masters_threshold:
          type: integer
          description: Threshold starting from which the number of instances in the
            cluster results in the introduction of dedicated masters. If the cluster
            is downscaled to a number of nodes below this one, dedicated masters will
            be removed. Limit is inclusive.
          format: int32
        metadata:
          $ref: '#/components/schemas/ClusterMetadataSettings'
      description: The settings for an Elasticsearch cluster.
    ReplyWarning:
      required:
      - code
      type: object
      properties:
        message:
          type: string
          description: A human readable message describing the warning that occurred
        code:
          type: string
          description: A structured code representing the error type that occurred
    KibanaClusterPlan:
      required:
      - kibana
      type: object
      properties:
        cluster_topology:
          type: array
          items:
            $ref: '#/components/schemas/KibanaClusterTopologyElement'
        transient:
          $ref: '#/components/schemas/TransientKibanaPlanConfiguration'
        kibana:
          $ref: '#/components/schemas/KibanaConfiguration'
      description: The plan for the Kibana instance.
    AccountResponse:
      required:
      - id
      type: object
      properties:
        trust:
          $ref: '#/components/schemas/AccountTrustSettings'
        id:
          type: string
          description: The account's identifier
      description: An account is the entity that owns deployments, and it is accessed
        by users. Accounts are isolated from each other.
    OrphanedElasticsearch:
      required:
      - dependents
      - id
      type: object
      properties:
        dependents:
          type: array
          description: List of orphaned dependent resources
          items:
            $ref: '#/components/schemas/ElasticsearchDependant'
        id:
          type: string
          description: The id of the orphaned resource
      description: Details about an orphaned Elasticsearch resources.
    EnterpriseSearchTopologyElement:
      type: object
      properties:
        node_count_per_zone:
          type: object
          properties: {}
        zone_count:
          type: integer
          description: number of zones in which nodes will be placed
          format: int32
        node_configuration:
          type: string
        memory_per_node:
          type: object
          properties: {}
        enterprise_search:
          $ref: '#/components/schemas/EnterpriseSearchConfiguration'
        node_type:
          $ref: '#/components/schemas/EnterpriseSearchNodeTypes'
        allocator_filter:
          type: object
          properties: {}
        instance_configuration_id:
          type: string
          description: Controls the allocation of this topology element as well as
            allowed sizes and node_types. It needs to match the id of an existing
            instance configuration.
        size:
          $ref: '#/components/schemas/TopologySize'
      description: Defines the topology of the Enterprise Search nodes (e.g. number/capacity
        of nodes, and where they can be allocated)
    DeploymentCreateResources:
      type: object
      properties:
        appsearch:
          type: array
          description: A list of payloads for AppSearch updates. AppSearch has been
            replaced by Enterprise Search in the Elastic Stack 7.7 and higher.
          items:
            $ref: '#/components/schemas/AppSearchPayload'
        elasticsearch:
          type: array
          description: A list of payloads for Elasticsearch cluster creation.
          items:
            $ref: '#/components/schemas/ElasticsearchPayload'
        enterprise_search:
          type: array
          description: A list of payloads for Enterprise Search creation.
          items:
            $ref: '#/components/schemas/EnterpriseSearchPayload'
        kibana:
          type: array
          description: A list of payloads for Kibana creation.
          items:
            $ref: '#/components/schemas/KibanaPayload'
        apm:
          type: array
          description: A list of payloads for APM creation.
          items:
            $ref: '#/components/schemas/ApmPayload'
      description: Describes the resources that will belong to a Deployment
    ElasticsearchShardElement:
      required:
      - instance_name
      - shard_count
      type: object
      properties:
        instance_name:
          type: string
          description: The Elastic Cloud name/id of the instance (container)
        shard_count:
          type: integer
          description: The number of shards of the given type (available/unavailable)
            on this instance
          format: int32
      description: 'Information about the shards for each Elasticsearch instance container
        that hosts an Elasticsearch node. TIP: When the shard is unavailable, the
        cluster is unable to serve all of the data.'
    ElasticsearchSystemSettings:
      type: object
      properties:
        reindex_whitelist:
          type: array
          description: Limits remote Elasticsearch clusters that can be used as the
            source for '_reindex' API commands
          items:
            type: string
        default_shards_per_index:
          type: integer
          description: (2.x only - to get the same result in 5.x template mappings
            must be used) Sets the default number of shards per index, defaulting
            to 1 if not specified. (Corresponds to the parameter 'index.number_of_shards'
            in 2.x, not supported in 5.x)
          format: int32
        monitoring_history_duration:
          type: string
          description: 'The duration for which monitoring history is stored (format
            ''(NUMBER)d'' eg ''3d'' for 3 days). NOTES: (''Corresponds to the parameter
            xpack.monitoring.history.duration'' in 5.x, defaults to ''7d'')'
        monitoring_collection_interval:
          type: integer
          description: 'The default interval at which monitoring information from
            the cluster if collected, if monitoring is enabled. NOTES: (Corresponds
            to the parameter ''marvel.agent.interval'' in 2.x and ''xpack.monitoring.collection.interval''
            in 5.x)'
          format: int32
        destructive_requires_name:
          type: boolean
          description: 'If true (default is false) then the index deletion API will
            not support wildcards or ''_all''. NOTES: (Corresponds to the parameter
            ''action.destructive_requires_name'')'
        auto_create_index:
          type: boolean
          description: 'If true (the default), then any write operation on an index
            that does not currently exist will create it. NOTES: (Corresponds to the
            parameter ''action.auto_create_index'')'
        watcher_trigger_engine:
          type: string
          description: 'The trigger engine for Watcher, defaults to ''scheduler''
            - see the xpack documentation for more information. NOTES: (Corresponds
            to the parameter ''(xpack.)watcher.trigger.schedule.engine'', depending
            on version. Ignored from 6.x onwards.)'
        use_disk_threshold:
          type: boolean
          description: 'Whether to factor in the available disk space on a node before
            deciding whether to allocate new shards to that node or actively relocate
            shards away from the node (default: true). NOTES: (Corresponds to the
            parameter ''cluster.routing.allocation.disk.threshold_enabled'')'
        scripting:
          $ref: '#/components/schemas/ElasticsearchScriptingUserSettings'
        enable_close_index:
          type: boolean
          description: 'Defaults to false on versions <= 7.2.0, true otherwise. If
            false, then the API commands to close indices are disabled. This is important
            because Elasticsearch does not snapshot or migrate close indices on versions
            under 7.2.0, therefore standard Elastic Cloud configuration operations
            will cause irretrievable loss of indices'' data. NOTES: (Corresponds to
            the parameter ''cluster.indices.close.enable'')'
      description: 'A subset of Elasticsearch settings. TIP: To define the complete
        set of Elasticsearch settings, use `ElasticsearchSystemSettings` with `user_settings_override*`
        and `user_settings*`.'
    ElasticsearchUserBundle:
      required:
      - elasticsearch_version
      - name
      - url
      type: object
      properties:
        url:
          type: string
          description: The URL of the bundle, which must be accessible from the ECE
            infrastructure. This URL could be cached by platform, make sure to change
            it when updating the bundle
        name:
          type: string
          description: The name of the bundle
        elasticsearch_version:
          type: string
          description: The supported Elasticsearch version (must match the version
            in the plan)
      description: A list of admin-uploaded bundle objects, such as scripts and synonym
        files.
    BasicFailedReply:
      required:
      - errors
      type: object
      properties:
        errors:
          type: array
          description: A list of errors that occurred in the failing request
          items:
            $ref: '#/components/schemas/BasicFailedReplyElement'
    KibanaSystemSettings:
      type: object
      properties:
        elasticsearch_password:
          type: string
          description: Optionally override the account within Elasticsearch - defaults
            to a system account that always exists (if specified, the username must
            also be specified). Note that this field is never returned from the API,
            it is write only.
        elasticsearch_username:
          type: string
          description: Optionally override the account within Elasticsearch - defaults
            to a system account that always exists (if specified, the password must
            also be specified). Note that this field is never returned from the API,
            it is write only.
        elasticsearch_url:
          type: string
          description: Optionally override the URL to which to send data (for advanced
            users only, if unspecified the system selects an internal URL)
      description: 'A subset of Kibana settings. TIP: To define the complete set of
        Elasticsearch settings, use `KibanaSystemSettings` with `user_settings_override_`
        and `user_settings_`.'
    DeploymentMetricsSettings:
      required:
      - destination
      type: object
      properties:
        destination:
          $ref: '#/components/schemas/AbsoluteRefId'
      description: The metrics settings for a deployment
    ApmPlanControlConfiguration:
      type: object
      properties:
        cluster_reboot:
          type: string
          description: Set to 'forced' to force a reboot as part of the upgrade plan
          enum:
          - forced
        extended_maintenance:
          type: boolean
          description: If true (default false), does not clear the maintenance flag
            (which prevents its API from being accessed except by the constructor)
            on new instances added until after a snapshot has been restored, otherwise,
            the maintenance flag is cleared once the new instances successfully join
            the new cluster
        calm_wait_time:
          type: integer
          description: This timeout determines how long to give a cluster after it
            responds to API calls before performing actual operations on it. It defaults
            to 5s
          format: int64
        timeout:
          type: integer
          description: The total timeout in seconds after which the plan is cancelled
            even if it is not complete. Defaults to 4x the max memory capacity per
            node (in MB)
          format: int64
      description: The plan control configuration options for the APM Server.
    DeploymentResourceCrudResponse:
      required:
      - id
      - kind
      - ref_id
      type: object
      properties:
        kind:
          type: string
          description: The kind of the stateless resource
        id:
          type: string
          description: The id of the deployment
        ref_id:
          type: string
          description: The reference id of the resource
      description: A response returned from the Deployment Resource endpoints
    Costs:
      required:
      - data_transfer_and_storage
      - resources
      - total
      type: object
      properties:
        total:
          type: number
          description: Total costs
          format: double
        resources:
          type: number
          description: Total costs associated to the Elastic Cloud resources
          format: double
        data_transfer_and_storage:
          type: number
          description: Total costs associated to Data Transfer and Storage (DTS)
          format: double
      description: Costs overview for an organization. All of the costs, credits,
        trials are expressed in Elastic Consumption Unit (ECU).
    Elasticsearch:
      required:
      - backend_plan
      - display_name
      - ref_id
      type: object
      properties:
        backend_plan:
          type: object
          properties: {}
          description: The backend plan as JSON
        display_name:
          type: string
          description: The human readable name for the cluster (defaults to the generated
            cluster id if not specified)
        ref_id:
          type: string
          description: A locally-unique user-specified id
      description: Holds diagnostics for an Elasticsearch cluster
    AccountTrustSettings:
      required:
      - trust_all
      type: object
      properties:
        trust_all:
          type: boolean
          description: If true, all clusters in this account will by default trust
            all other clusters in the same account
      description: Settings related to the level of trust of the clusters in this
        account
    ClusterInstanceDiskInfo:
      required:
      - disk_space_used
      - storage_multiplier
      type: object
      properties:
        disk_space_available:
          type: integer
          description: If known, the amount of total disk space available to the container
            in MB
          format: int64
        storage_multiplier:
          type: number
          description: The storage multiplier originally defined to calculate disk
            space.
          format: double
        disk_space_used:
          type: integer
          description: The amount of disk space being used by the service in MB
          format: int64
      description: Information about the use and storage capacity of a Kibana instance
        or APM Server.
    DeploymentLogging:
      required:
      - healthy
      type: object
      properties:
        healthy:
          type: boolean
          description: Whether the deployment logging is healthy or not
        issues:
          type: array
          description: Logging health issues for the deployment
          items:
            $ref: '#/components/schemas/ObservabilityIssue'
        urls:
          type: object
          additionalProperties:
            type: string
          description: The URLs to view this deployment's logs in Kibana
      description: Logging information for a deployment
    RollingStrategyConfig:
      type: object
      properties:
        skip_synced_flush:
          type: boolean
          description: 'Whether to skip attempting to do a synced flush on the filesystem
            of the container (default: false), which is less safe but may be required
            if the container is unhealthy'
        allow_inline_resize:
          type: boolean
          description: 'Whether we allow changing the capacity of instances (default
            false). This is currently implemented by stopping, re-creating then starting
            the affected instance on its associated allocator when performing the
            changes. NOTES: This requires a round-trip through the allocation infrastructure
            of the active constructor, as it has to reserve the target capacity without
            over-committing'
        group_by:
          type: string
          description: Specifies the grouping attribute to use when rolling several
            instances. Instances that share the same value for the provided attribute
            key are rolled together as a unit. Examples that make sense to use are
            '\_\_all\_\_' (roll all instances as a single unit), 'logical_zone_name'
            (roll instances by zone), '\_\_name\_\_' (roll one instance at a time,
            the default if not specified). Note that '\_\_all\_\_' is required when
            performing a major version upgrade
        shard_init_wait_time:
          type: integer
          description: 'The time, in seconds, to wait for shards that show no progress
            of initializing before rolling the next group (default: 10 minutes)'
          format: int64
      description: 'Performs inline, rolling configuration changes that mutate existing
        containers. TIP: This is the fastest way to update a plan, but can fail for
        complex plan changes, such as topology changes. Also, this is less safe for
        configuration changes that leave a cluster in a non running state. NOTE: When
        you perform a major version upgrade, and ''group_by'' is set to ''pass:macros[__all__]'';,
        rolling is required.'
    MetadataItem:
      required:
      - key
      - value
      type: object
      properties:
        value:
          type: string
          description: The metadata value
        key:
          type: string
          description: The metadata field name
      description: The key-value pair.
    TrafficFilterRulesetRequest:
      required:
      - include_by_default
      - name
      - region
      - rules
      - type
      type: object
      properties:
        name:
          type: string
          description: Name of the ruleset
        rules:
          type: array
          description: List of rules
          items:
            $ref: '#/components/schemas/TrafficFilterRule'
        region:
          type: string
          description: The ruleset can be attached only to deployments in the specific
            region
        include_by_default:
          type: boolean
          description: Should the ruleset be automatically included in the new deployments
        type:
          type: string
          description: Type of the ruleset
        description:
          type: string
          description: Description of the ruleset
      description: The specification for traffic filter ruleset.
    TrafficFilterEgressRule:
      required:
      - protocol
      - target
      type: object
      properties:
        protocol:
          type: string
          description: The target protocol for an egress rule
          enum:
          - all
          - tcp
          - udp
        target:
          type: string
          description: 'Allowed traffic filter egress target: IP address or CIDR mask'
        ports:
          type: array
          description: A list of target ports for an egress rule
          items:
            type: integer
            format: int32
      description: The rule detail for a traffic filter egress rule.
    MatchAllQuery:
      type: object
      description: A query that matches all documents.
    TrafficFilterRule:
      type: object
      properties:
        azure_endpoint_name:
          type: string
          description: Name of the Azure Private Endpoint to allow connections from
        egress_rule:
          $ref: '#/components/schemas/TrafficFilterEgressRule'
        description:
          type: string
          description: Description of the rule
        source:
          type: string
          description: 'Allowed traffic filter source: IP address, CIDR mask, or VPC
            endpoint ID'
        azure_endpoint_guid:
          type: string
          description: Resource GUID of the Azure Private Endpoint to allow connections
            from
        id:
          type: string
          description: The rule ID
      description: The container for a traffic filter rule.
    AppSearchPlan:
      required:
      - appsearch
      type: object
      properties:
        appsearch:
          $ref: '#/components/schemas/AppSearchConfiguration'
        cluster_topology:
          type: array
          items:
            $ref: '#/components/schemas/AppSearchTopologyElement'
        transient:
          $ref: '#/components/schemas/TransientAppSearchPlanConfiguration'
      description: The plan for the App Search cluster.
    RangeQuery:
      type: object
      properties:
        gt:
          type: object
          properties: {}
          description: Greater-than
        gte:
          type: object
          properties: {}
          description: Greater-than or equal to
        format:
          type: string
          description: Formatted dates will be parsed using the format specified on
            the date field by default, but it can be overridden by passing the format
            parameter.
        time_zone:
          type: string
          description: Dates can be converted from another timezone to UTC either
            by specifying the time zone in the date value itself (if the format accepts
            it), or it can be specified as the time_zone parameter.
        lt:
          type: object
          properties: {}
          description: Less-than
        lte:
          type: object
          properties: {}
          description: Less-than or equal to.
        boost:
          type: number
          description: An optional boost value to apply to the query.
          format: float
      description: The query that matches documents with fields that contain terms
        within a specified range.
    ItemsCosts:
      required:
      - costs
      - data_transfer_and_storage
      - resources
      type: object
      properties:
        costs:
          $ref: '#/components/schemas/Costs'
        resources:
          type: array
          description: Costs of the list of resources
          items:
            $ref: '#/components/schemas/ItemCosts'
        data_transfer_and_storage:
          type: array
          description: List of the detailed costs associated to the Data Transfer
            and Storage (DTS) dimensions
          items:
            $ref: '#/components/schemas/DtsDimensionCosts'
      description: Costs associated to a set of Elastic Cloud resources for an organization.
        All of the costs are expressed in Elastic Consumption Unit (ECU).
    ClusterInstanceConfigurationInfo:
      required:
      - id
      - name
      - resource
      type: object
      properties:
        resource:
          type: string
          description: The resource type of the instance configuration
          enum:
          - memory
          - storage
        id:
          type: string
          description: The id of the configuration used to create the instance
        name:
          type: string
          description: The name of the configuration used to create the instance
      description: Information about a configuration that creates a Kibana instance
        or APM Server.
    StackVersionElasticsearchConfig:
      required:
      - blacklist
      - default_plugins
      - docker_image
      - plugins
      type: object
      properties:
        settings:
          type: object
          properties: {}
          description: Settings that are applied to all nodes of this type
        node_types:
          type: array
          description: Node types that are supported by this stack version
          items:
            $ref: '#/components/schemas/StackVersionNodeType'
        blacklist:
          type: array
          description: List of configuration options that cannot be overridden by
            user settings
          items:
            type: string
        plugins:
          type: array
          description: List of available plugins
          items:
            type: string
        capacity_constraints:
          $ref: '#/components/schemas/StackVersionInstanceCapacityConstraint'
        compatible_node_types:
          type: array
          description: Node types that are compatible with this one
          items:
            type: string
        default_plugins:
          type: array
          description: List of default plugins
          items:
            type: string
        docker_image:
          type: string
          description: Docker image for the Elasticsearch
      description: 'The Elasticsearch configuration for an Elastic Stack version. '
    ApmSystemSettings:
      type: object
      properties:
        elasticsearch_url:
          type: string
          description: Optionally override the URL to which to send data (for advanced
            users only, if unspecified the system selects an internal URL)
        secret_token:
          type: string
          description: Optionally override the secret token within APM - defaults
            to the previously existing secretToken
        elasticsearch_password:
          type: string
          description: Optionally override the account within APM - defaults to a
            system account that always exists (if specified, the username must also
            be specified). Note that this field is never returned from the API, it
            is write only.
        debug_enabled:
          type: boolean
          description: Optionally enable debug mode for APM servers - defaults false
        kibana_url:
          type: string
          description: Optionally override the URL to which to send data (for advanced
            users only, if unspecified the system selects an internal URL)
        elasticsearch_username:
          type: string
          description: Optionally override the account within APM - defaults to a
            system account that always exists (if specified, the password must also
            be specified). Note that this field is never returned from the API, it
            is write only.
      description: "A structure that defines a curated subset of the APM Server settings.\
        \ \nTIP: To define the complete set of APM Server setting, use `ApmSystemSettings`\
        \ with `user_settings_override_` and `user_settings_`."
    ClusterInstanceMemoryInfo:
      required:
      - instance_capacity
      type: object
      properties:
        instance_capacity:
          type: integer
          description: The memory capacity in MB of the instance
          format: int32
        memory_pressure:
          type: integer
          description: The % memory pressure of the service if available (60-75% consider
            increasing capacity, >75% can incur significant performance and stability
            issues)
          format: int32
        instance_capacity_planned:
          type: integer
          description: The planned memory capacity in MB of the instance (only shown
            when an override is present)
          format: int32
        native_memory_pressure:
          type: integer
          description: The % native memory pressure of the service if available
          format: int32
      description: Information about the memory capacity and use of the Kibana instance
        or APM Server.
    ExternalHyperlink:
      required:
      - id
      - label
      type: object
      properties:
        uri:
          type: string
          description: hyperlink to an external resource
        id:
          type: string
          description: Identifier of the external link
        label:
          type: string
          description: Human-readable description of the external link
    CreateApiKeyRequest:
      required:
      - description
      type: object
      properties:
        description:
          type: string
          description: API key description. Useful if there are multiple keys
        authentication_token:
          type: string
          description: Deprecated. The security token from reauthenticate API
      description: The request payload that creates the API keys.
  securitySchemes:
    apiKey:
      type: apiKey
      name: Authorization
      in: header
      description: Represents API Key `Authorization`
x-elastic:
  curl:
    auth: '-H "Authorization: ApiKey $EC_API_KEY"'
