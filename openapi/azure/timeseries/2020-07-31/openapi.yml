openapi: 3.0.1
info:
  x-ballerina-display:
    label: Azure Time Series
    iconPath: "icon.png"
  title: TimeSeriesInsightsClient
  description: >
    This is a generated connector from [Azure Time Series Insights API 2020-07-31 version](https://azure.microsoft.com/en-us/services/time-series-insights/) OpenAPI specification.

    Time Series Insights environment data plane client for Gen2 (GA L1 SKU) environments.
  x-ballerina-init-description: >
    The connector initialization requires setting the API credentials.

    Create an [Azure  Time Series Insights account](https://azure.microsoft.com/en-us/services/time-series-insights/) and obtain OAuth tokens following [this guide](https://docs.microsoft.com/en-us/azure/time-series-insights/time-series-insights-authentication-and-authorization).
  version: '2020-07-31'
servers:
- url: /
security:
- azure_auth:
  - user_impersonation
paths:
  /availability:
    get:
      tags:
      - Query
      description: Returns the time range and distribution of event count over the
        event timestamp ($ts). This API can be used to provide landing experience
        of navigating to the environment.
      operationId: Query_GetAvailability
      parameters:
      - name: api-version
        in: query
        description: Version of the API to be used with the client request. Currently
          supported version is "2020-07-31".
        required: true
        schema:
          type: string
          default: 2020-07-31
      - name: storeType
        in: query
        description: For the environments with warm store enabled, the query can be
          executed either on the 'WarmStore' or 'ColdStore'. This parameter in the
          query defines which store the query should be executed on. If not defined,
          the query will be executed on the cold store.
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - name: x-ms-client-request-id
        in: header
        description: Optional client request ID. Service records this value. Allows
          the service to trace operation across services, and allows the customer
          to contact support regarding a particular request.
        schema:
          type: string
          x-ms-client-name: clientRequestId
          x-ms-parameter-location: method
        x-ms-client-name: clientRequestId
        x-ms-parameter-location: method
      - name: x-ms-client-session-id
        in: header
        description: Optional client session ID. Service records this value. Allows
          the service to trace a group of related operations across services, and
          allows the customer to contact support regarding a particular group of requests.
        schema:
          type: string
          x-ms-client-name: clientSessionId
          x-ms-parameter-location: method
        x-ms-client-name: clientSessionId
        x-ms-parameter-location: method
      responses:
        200:
          description: Successful operation.
          headers:
            x-ms-request-id:
              description: Server-generated request ID. Can be used to contact support
                to investigate a request.
              schema:
                type: string
                x-ms-client-name: serverRequestId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilityResponse'
        default:
          description: Unexpected error.
          headers:
            x-ms-request-id:
              description: Server-generated request ID. Can be used to contact support
                to investigate a request.
              schema:
                type: string
                x-ms-client-name: serverRequestId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TsiError'
  /eventSchema:
    post:
      tags:
      - Query
      description: Returns environment event schema for a given search span. Event
        schema is a set of property definitions. Event schema may not be contain all
        persisted properties when there are too many properties.
      operationId: Query_GetEventSchema
      parameters:
      - name: api-version
        in: query
        description: Version of the API to be used with the client request. Currently
          supported version is "2020-07-31".
        required: true
        schema:
          type: string
          default: 2020-07-31
      - name: storeType
        in: query
        description: For the environments with warm store enabled, the query can be
          executed either on the 'WarmStore' or 'ColdStore'. This parameter in the
          query defines which store the query should be executed on. If not defined,
          the query will be executed on the cold store.
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - name: x-ms-client-request-id
        in: header
        description: Optional client request ID. Service records this value. Allows
          the service to trace operation across services, and allows the customer
          to contact support regarding a particular request.
        schema:
          type: string
          x-ms-client-name: clientRequestId
          x-ms-parameter-location: method
        x-ms-client-name: clientRequestId
        x-ms-parameter-location: method
      - name: x-ms-client-session-id
        in: header
        description: Optional client session ID. Service records this value. Allows
          the service to trace a group of related operations across services, and
          allows the customer to contact support regarding a particular group of requests.
        schema:
          type: string
          x-ms-client-name: clientSessionId
          x-ms-parameter-location: method
        x-ms-client-name: clientSessionId
        x-ms-parameter-location: method
      requestBody:
        description: Parameters to get event schema.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetEventSchemaRequest'
        required: true
      responses:
        200:
          description: Successful operation.
          headers:
            x-ms-request-id:
              description: Server-generated request ID. Can be used to contact support
                to investigate a request.
              schema:
                type: string
                x-ms-client-name: serverRequestId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSchema'
        default:
          description: Unexpected error.
          headers:
            x-ms-request-id:
              description: Server-generated request ID. Can be used to contact support
                to investigate a request.
              schema:
                type: string
                x-ms-client-name: serverRequestId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TsiError'
      x-codegen-request-body-name: parameters
  /timeseries/modelSettings:
    get:
      tags:
      - ModelSettings
      description: Returns the model settings which includes model display name, Time
        Series ID properties and default type ID. Every Gen2 environment has a model
        that is automatically created.
      operationId: ModelSettings_Get
      parameters:
      - name: api-version
        in: query
        description: Version of the API to be used with the client request. Currently
          supported version is "2020-07-31".
        required: true
        schema:
          type: string
          default: 2020-07-31
      - name: x-ms-client-request-id
        in: header
        description: Optional client request ID. Service records this value. Allows
          the service to trace operation across services, and allows the customer
          to contact support regarding a particular request.
        schema:
          type: string
          x-ms-client-name: clientRequestId
          x-ms-parameter-location: method
        x-ms-client-name: clientRequestId
        x-ms-parameter-location: method
      - name: x-ms-client-session-id
        in: header
        description: Optional client session ID. Service records this value. Allows
          the service to trace a group of related operations across services, and
          allows the customer to contact support regarding a particular group of requests.
        schema:
          type: string
          x-ms-client-name: clientSessionId
          x-ms-parameter-location: method
        x-ms-client-name: clientSessionId
        x-ms-parameter-location: method
      responses:
        200:
          description: Successful operation.
          headers:
            x-ms-request-id:
              description: Server-generated request ID. Can be used to contact support
                to investigate a request.
              schema:
                type: string
                x-ms-client-name: serverRequestId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelSettingsResponse'
        default:
          description: Unexpected error.
          headers:
            x-ms-request-id:
              description: Server-generated request ID. Can be used to contact support
                to investigate a request.
              schema:
                type: string
                x-ms-client-name: serverRequestId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TsiError'
    patch:
      tags:
      - ModelSettings
      description: Updates time series model settings - either the model name or default
        type ID.
      operationId: ModelSettings_Update
      parameters:
      - name: api-version
        in: query
        description: Version of the API to be used with the client request. Currently
          supported version is "2020-07-31".
        required: true
        schema:
          type: string
          default: 2020-07-31
      - name: x-ms-client-request-id
        in: header
        description: Optional client request ID. Service records this value. Allows
          the service to trace operation across services, and allows the customer
          to contact support regarding a particular request.
        schema:
          type: string
          x-ms-client-name: clientRequestId
          x-ms-parameter-location: method
        x-ms-client-name: clientRequestId
        x-ms-parameter-location: method
      - name: x-ms-client-session-id
        in: header
        description: Optional client session ID. Service records this value. Allows
          the service to trace a group of related operations across services, and
          allows the customer to contact support regarding a particular group of requests.
        schema:
          type: string
          x-ms-client-name: clientSessionId
          x-ms-parameter-location: method
        x-ms-client-name: clientSessionId
        x-ms-parameter-location: method
      requestBody:
        description: Model settings update request body.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateModelSettingsRequest'
        required: true
      responses:
        200:
          description: Successful operation returns new full model settings.
          headers:
            x-ms-request-id:
              description: Server-generated request ID. Can be used to contact support
                to investigate a request.
              schema:
                type: string
                x-ms-client-name: serverRequestId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelSettingsResponse'
        default:
          description: Unexpected error.
          headers:
            x-ms-request-id:
              description: Server-generated request ID. Can be used to contact support
                to investigate a request.
              schema:
                type: string
                x-ms-client-name: serverRequestId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TsiError'
      x-codegen-request-body-name: parameters
  /timeseries/query:
    post:
      tags:
      - Query
      description: Executes Time Series Query in pages of results - Get Events, Get
        Series or Aggregate Series.
      operationId: Query_Execute
      parameters:
      - name: api-version
        in: query
        description: Version of the API to be used with the client request. Currently
          supported version is "2020-07-31".
        required: true
        schema:
          type: string
          default: 2020-07-31
      - name: storeType
        in: query
        description: For the environments with warm store enabled, the query can be
          executed either on the 'WarmStore' or 'ColdStore'. This parameter in the
          query defines which store the query should be executed on. If not defined,
          the query will be executed on the cold store.
        schema:
          type: string
          x-ms-parameter-location: method
        x-ms-parameter-location: method
      - name: x-ms-continuation
        in: header
        description: Continuation token from previous page of results to retrieve
          the next page of the results in calls that support pagination. To get the
          first page results, specify null continuation token as parameter value.
          Returned continuation token is null if all results have been returned, and
          there is no next page of results.
        schema:
          type: string
          x-ms-client-name: continuationToken
          x-ms-parameter-location: method
        x-ms-client-name: continuationToken
        x-ms-parameter-location: method
      - name: x-ms-client-request-id
        in: header
        description: Optional client request ID. Service records this value. Allows
          the service to trace operation across services, and allows the customer
          to contact support regarding a particular request.
        schema:
          type: string
          x-ms-client-name: clientRequestId
          x-ms-parameter-location: method
        x-ms-client-name: clientRequestId
        x-ms-parameter-location: method
      - name: x-ms-client-session-id
        in: header
        description: Optional client session ID. Service records this value. Allows
          the service to trace a group of related operations across services, and
          allows the customer to contact support regarding a particular group of requests.
        schema:
          type: string
          x-ms-client-name: clientSessionId
          x-ms-parameter-location: method
        x-ms-client-name: clientSessionId
        x-ms-parameter-location: method
      requestBody:
        description: Time series query request body.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryRequest'
        required: true
      responses:
        200:
          description: Successful query.
          headers:
            x-ms-request-id:
              description: Server-generated request ID. Can be used to contact support
                to investigate a request.
              schema:
                type: string
                x-ms-client-name: serverRequestId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResultPage'
        default:
          description: Unexpected error.
          headers:
            x-ms-request-id:
              description: Server-generated request ID. Can be used to contact support
                to investigate a request.
              schema:
                type: string
                x-ms-client-name: serverRequestId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TsiError'
      x-codegen-request-body-name: parameters
  /timeseries/instances:
    get:
      tags:
      - TimeSeriesInstances
      description: Gets time series instances in pages.
      operationId: TimeSeriesInstances_List
      parameters:
      - name: api-version
        in: query
        description: Version of the API to be used with the client request. Currently
          supported version is "2020-07-31".
        required: true
        schema:
          type: string
          default: 2020-07-31
      - name: x-ms-continuation
        in: header
        description: Continuation token from previous page of results to retrieve
          the next page of the results in calls that support pagination. To get the
          first page results, specify null continuation token as parameter value.
          Returned continuation token is null if all results have been returned, and
          there is no next page of results.
        schema:
          type: string
          x-ms-client-name: continuationToken
          x-ms-parameter-location: method
        x-ms-client-name: continuationToken
        x-ms-parameter-location: method
      - name: x-ms-client-request-id
        in: header
        description: Optional client request ID. Service records this value. Allows
          the service to trace operation across services, and allows the customer
          to contact support regarding a particular request.
        schema:
          type: string
          x-ms-client-name: clientRequestId
          x-ms-parameter-location: method
        x-ms-client-name: clientRequestId
        x-ms-parameter-location: method
      - name: x-ms-client-session-id
        in: header
        description: Optional client session ID. Service records this value. Allows
          the service to trace a group of related operations across services, and
          allows the customer to contact support regarding a particular group of requests.
        schema:
          type: string
          x-ms-client-name: clientSessionId
          x-ms-parameter-location: method
        x-ms-client-name: clientSessionId
        x-ms-parameter-location: method
      responses:
        200:
          description: Successful operation.
          headers:
            x-ms-request-id:
              description: Server-generated request ID. Can be used to contact support
                to investigate a request.
              schema:
                type: string
                x-ms-client-name: serverRequestId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetInstancesPage'
        default:
          description: Unexpected error.
          headers:
            x-ms-request-id:
              description: Server-generated request ID. Can be used to contact support
                to investigate a request.
              schema:
                type: string
                x-ms-client-name: serverRequestId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TsiError'
  /timeseries/instances/$batch:
    post:
      tags:
      - TimeSeriesInstances
      description: Executes a batch get, create, update, delete operation on multiple
        time series instances.
      operationId: TimeSeriesInstances_ExecuteBatch
      parameters:
      - name: api-version
        in: query
        description: Version of the API to be used with the client request. Currently
          supported version is "2020-07-31".
        required: true
        schema:
          type: string
          default: 2020-07-31
      - name: x-ms-client-request-id
        in: header
        description: Optional client request ID. Service records this value. Allows
          the service to trace operation across services, and allows the customer
          to contact support regarding a particular request.
        schema:
          type: string
          x-ms-client-name: clientRequestId
          x-ms-parameter-location: method
        x-ms-client-name: clientRequestId
        x-ms-parameter-location: method
      - name: x-ms-client-session-id
        in: header
        description: Optional client session ID. Service records this value. Allows
          the service to trace a group of related operations across services, and
          allows the customer to contact support regarding a particular group of requests.
        schema:
          type: string
          x-ms-client-name: clientSessionId
          x-ms-parameter-location: method
        x-ms-client-name: clientSessionId
        x-ms-parameter-location: method
      requestBody:
        description: Time series instances suggest request body.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstancesBatchRequest'
        required: true
      responses:
        200:
          description: Successful operation.
          headers:
            x-ms-request-id:
              description: Server-generated request ID. Can be used to contact support
                to investigate a request.
              schema:
                type: string
                x-ms-client-name: serverRequestId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstancesBatchResponse'
        default:
          description: Unexpected error.
          headers:
            x-ms-request-id:
              description: Server-generated request ID. Can be used to contact support
                to investigate a request.
              schema:
                type: string
                x-ms-client-name: serverRequestId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TsiError'
      x-codegen-request-body-name: parameters
  /timeseries/instances/suggest:
    post:
      tags:
      - TimeSeriesInstances
      description: Suggests keywords based on time series instance attributes to be
        later used in Search Instances.
      operationId: TimeSeriesInstances_Suggest
      parameters:
      - name: api-version
        in: query
        description: Version of the API to be used with the client request. Currently
          supported version is "2020-07-31".
        required: true
        schema:
          type: string
          default: 2020-07-31
      - name: x-ms-client-request-id
        in: header
        description: Optional client request ID. Service records this value. Allows
          the service to trace operation across services, and allows the customer
          to contact support regarding a particular request.
        schema:
          type: string
          x-ms-client-name: clientRequestId
          x-ms-parameter-location: method
        x-ms-client-name: clientRequestId
        x-ms-parameter-location: method
      - name: x-ms-client-session-id
        in: header
        description: Optional client session ID. Service records this value. Allows
          the service to trace a group of related operations across services, and
          allows the customer to contact support regarding a particular group of requests.
        schema:
          type: string
          x-ms-client-name: clientSessionId
          x-ms-parameter-location: method
        x-ms-client-name: clientSessionId
        x-ms-parameter-location: method
      requestBody:
        description: Time series instances suggest request body.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstancesSuggestRequest'
        required: true
      responses:
        200:
          description: Successful operation.
          headers:
            x-ms-request-id:
              description: Server-generated request ID. Can be used to contact support
                to investigate a request.
              schema:
                type: string
                x-ms-client-name: serverRequestId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstancesSuggestResponse'
        default:
          description: Unexpected error.
          headers:
            x-ms-request-id:
              description: Server-generated request ID. Can be used to contact support
                to investigate a request.
              schema:
                type: string
                x-ms-client-name: serverRequestId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TsiError'
      x-codegen-request-body-name: parameters
  /timeseries/instances/search:
    post:
      tags:
      - TimeSeriesInstances
      description: Partial list of hits on search for time series instances based
        on instance attributes.
      operationId: TimeSeriesInstances_Search
      parameters:
      - name: api-version
        in: query
        description: Version of the API to be used with the client request. Currently
          supported version is "2020-07-31".
        required: true
        schema:
          type: string
          default: 2020-07-31
      - name: x-ms-continuation
        in: header
        description: Continuation token from previous page of results to retrieve
          the next page of the results in calls that support pagination. To get the
          first page results, specify null continuation token as parameter value.
          Returned continuation token is null if all results have been returned, and
          there is no next page of results.
        schema:
          type: string
          x-ms-client-name: continuationToken
          x-ms-parameter-location: method
        x-ms-client-name: continuationToken
        x-ms-parameter-location: method
      - name: x-ms-client-request-id
        in: header
        description: Optional client request ID. Service records this value. Allows
          the service to trace operation across services, and allows the customer
          to contact support regarding a particular request.
        schema:
          type: string
          x-ms-client-name: clientRequestId
          x-ms-parameter-location: method
        x-ms-client-name: clientRequestId
        x-ms-parameter-location: method
      - name: x-ms-client-session-id
        in: header
        description: Optional client session ID. Service records this value. Allows
          the service to trace a group of related operations across services, and
          allows the customer to contact support regarding a particular group of requests.
        schema:
          type: string
          x-ms-client-name: clientSessionId
          x-ms-parameter-location: method
        x-ms-client-name: clientSessionId
        x-ms-parameter-location: method
      requestBody:
        description: Time series instances search request body.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchInstancesRequest'
        required: true
      responses:
        200:
          description: Successful search response.
          headers:
            x-ms-request-id:
              description: Server-generated request ID. Can be used to contact support
                to investigate a request.
              schema:
                type: string
                x-ms-client-name: serverRequestId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchInstancesResponsePage'
        default:
          description: Unexpected error.
          headers:
            x-ms-request-id:
              description: Server-generated request ID. Can be used to contact support
                to investigate a request.
              schema:
                type: string
                x-ms-client-name: serverRequestId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TsiError'
      x-codegen-request-body-name: parameters
  /timeseries/types:
    get:
      tags:
      - TimeSeriesTypes
      description: Gets time series types in pages.
      operationId: TimeSeriesTypes_List
      parameters:
      - name: api-version
        in: query
        description: Version of the API to be used with the client request. Currently
          supported version is "2020-07-31".
        required: true
        schema:
          type: string
          default: 2020-07-31
      - name: x-ms-continuation
        in: header
        description: Continuation token from previous page of results to retrieve
          the next page of the results in calls that support pagination. To get the
          first page results, specify null continuation token as parameter value.
          Returned continuation token is null if all results have been returned, and
          there is no next page of results.
        schema:
          type: string
          x-ms-client-name: continuationToken
          x-ms-parameter-location: method
        x-ms-client-name: continuationToken
        x-ms-parameter-location: method
      - name: x-ms-client-request-id
        in: header
        description: Optional client request ID. Service records this value. Allows
          the service to trace operation across services, and allows the customer
          to contact support regarding a particular request.
        schema:
          type: string
          x-ms-client-name: clientRequestId
          x-ms-parameter-location: method
        x-ms-client-name: clientRequestId
        x-ms-parameter-location: method
      - name: x-ms-client-session-id
        in: header
        description: Optional client session ID. Service records this value. Allows
          the service to trace a group of related operations across services, and
          allows the customer to contact support regarding a particular group of requests.
        schema:
          type: string
          x-ms-client-name: clientSessionId
          x-ms-parameter-location: method
        x-ms-client-name: clientSessionId
        x-ms-parameter-location: method
      responses:
        200:
          description: Successful operation.
          headers:
            x-ms-request-id:
              description: Server-generated request ID. Can be used to contact support
                to investigate a request.
              schema:
                type: string
                x-ms-client-name: serverRequestId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTypesPage'
        default:
          description: Unexpected error.
          headers:
            x-ms-request-id:
              description: Server-generated request ID. Can be used to contact support
                to investigate a request.
              schema:
                type: string
                x-ms-client-name: serverRequestId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TsiError'
  /timeseries/types/$batch:
    post:
      tags:
      - TimeSeriesTypes
      description: Executes a batch get, create, update, delete operation on multiple
        time series types.
      operationId: TimeSeriesTypes_ExecuteBatch
      parameters:
      - name: api-version
        in: query
        description: Version of the API to be used with the client request. Currently
          supported version is "2020-07-31".
        required: true
        schema:
          type: string
          default: 2020-07-31
      - name: x-ms-client-request-id
        in: header
        description: Optional client request ID. Service records this value. Allows
          the service to trace operation across services, and allows the customer
          to contact support regarding a particular request.
        schema:
          type: string
          x-ms-client-name: clientRequestId
          x-ms-parameter-location: method
        x-ms-client-name: clientRequestId
        x-ms-parameter-location: method
      - name: x-ms-client-session-id
        in: header
        description: Optional client session ID. Service records this value. Allows
          the service to trace a group of related operations across services, and
          allows the customer to contact support regarding a particular group of requests.
        schema:
          type: string
          x-ms-client-name: clientSessionId
          x-ms-parameter-location: method
        x-ms-client-name: clientSessionId
        x-ms-parameter-location: method
      requestBody:
        description: Time series types batch request body.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TypesBatchRequest'
        required: true
      responses:
        200:
          description: Successful operation.
          headers:
            x-ms-request-id:
              description: Server-generated request ID. Can be used to contact support
                to investigate a request.
              schema:
                type: string
                x-ms-client-name: serverRequestId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypesBatchResponse'
        default:
          description: Unexpected error.
          headers:
            x-ms-request-id:
              description: Server-generated request ID. Can be used to contact support
                to investigate a request.
              schema:
                type: string
                x-ms-client-name: serverRequestId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TsiError'
      x-codegen-request-body-name: parameters
  /timeseries/hierarchies:
    get:
      tags:
      - TimeSeriesHierarchies
      description: Returns time series hierarchies definitions in pages.
      operationId: TimeSeriesHierarchies_List
      parameters:
      - name: api-version
        in: query
        description: Version of the API to be used with the client request. Currently
          supported version is "2020-07-31".
        required: true
        schema:
          type: string
          default: 2020-07-31
      - name: x-ms-continuation
        in: header
        description: Continuation token from previous page of results to retrieve
          the next page of the results in calls that support pagination. To get the
          first page results, specify null continuation token as parameter value.
          Returned continuation token is null if all results have been returned, and
          there is no next page of results.
        schema:
          type: string
          x-ms-client-name: continuationToken
          x-ms-parameter-location: method
        x-ms-client-name: continuationToken
        x-ms-parameter-location: method
      - name: x-ms-client-request-id
        in: header
        description: Optional client request ID. Service records this value. Allows
          the service to trace operation across services, and allows the customer
          to contact support regarding a particular request.
        schema:
          type: string
          x-ms-client-name: clientRequestId
          x-ms-parameter-location: method
        x-ms-client-name: clientRequestId
        x-ms-parameter-location: method
      - name: x-ms-client-session-id
        in: header
        description: Optional client session ID. Service records this value. Allows
          the service to trace a group of related operations across services, and
          allows the customer to contact support regarding a particular group of requests.
        schema:
          type: string
          x-ms-client-name: clientSessionId
          x-ms-parameter-location: method
        x-ms-client-name: clientSessionId
        x-ms-parameter-location: method
      responses:
        200:
          description: Successful operation.
          headers:
            x-ms-request-id:
              description: Server-generated request ID. Can be used to contact support
                to investigate a request.
              schema:
                type: string
                x-ms-client-name: serverRequestId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetHierarchiesPage'
        default:
          description: Unexpected error.
          headers:
            x-ms-request-id:
              description: Server-generated request ID. Can be used to contact support
                to investigate a request.
              schema:
                type: string
                x-ms-client-name: serverRequestId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TsiError'
  /timeseries/hierarchies/$batch:
    post:
      tags:
      - TimeSeriesHierarchies
      description: Executes a batch get, create, update, delete operation on multiple
        time series hierarchy definitions.
      operationId: TimeSeriesHierarchies_ExecuteBatch
      parameters:
      - name: api-version
        in: query
        description: Version of the API to be used with the client request. Currently
          supported version is "2020-07-31".
        required: true
        schema:
          type: string
          default: 2020-07-31
      - name: x-ms-client-request-id
        in: header
        description: Optional client request ID. Service records this value. Allows
          the service to trace operation across services, and allows the customer
          to contact support regarding a particular request.
        schema:
          type: string
          x-ms-client-name: clientRequestId
          x-ms-parameter-location: method
        x-ms-client-name: clientRequestId
        x-ms-parameter-location: method
      - name: x-ms-client-session-id
        in: header
        description: Optional client session ID. Service records this value. Allows
          the service to trace a group of related operations across services, and
          allows the customer to contact support regarding a particular group of requests.
        schema:
          type: string
          x-ms-client-name: clientSessionId
          x-ms-parameter-location: method
        x-ms-client-name: clientSessionId
        x-ms-parameter-location: method
      requestBody:
        description: Time series hierarchies batch request body.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HierarchiesBatchRequest'
        required: true
      responses:
        200:
          description: Successful operation.
          headers:
            x-ms-request-id:
              description: Server-generated request ID. Can be used to contact support
                to investigate a request.
              schema:
                type: string
                x-ms-client-name: serverRequestId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HierarchiesBatchResponse'
        default:
          description: Unexpected error.
          headers:
            x-ms-request-id:
              description: Server-generated request ID. Can be used to contact support
                to investigate a request.
              schema:
                type: string
                x-ms-client-name: serverRequestId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TsiError'
      x-codegen-request-body-name: parameters
components:
  schemas:
    AvailabilityResponse:
      type: object
      properties:
        availability:
          $ref: '#/components/schemas/Availability'
      description: Response of Get Availability operation. When environment has no
        data, availability property is null.
    Availability:
      type: object
      properties:
        range:
          $ref: '#/components/schemas/DateTimeRange'
        intervalSize:
          type: string
          description: 'Interval size for the returned distribution of the events.
            Returned interval is selected to return a reasonable number of points.
            All intervals are the same size. On the wire interval is specified in
            ISO-8601 duration format. One month is always converted to 30 days, and
            one year is always 365 days. Examples: 1 minute is "PT1M", 1 millisecond
            is "PT0.001S". For more information, see https://www.w3.org/TR/xmlschema-2/#duration'
          format: duration
          readOnly: true
        distribution:
          type: object
          description: Approximate distribution of events over time.
      description: Event availability information when environment contains events.
        Contains time range of events and approximate distribution of events over
        time.
    GetEventSchemaRequest:
      required:
      - searchSpan
      type: object
      properties:
        searchSpan:
          $ref: '#/components/schemas/DateTimeRange'
      description: Request to get the event schema of all events within a given search
        span.
    EventSchema:
      type: object
      properties:
        properties:
          type: array
          description: A set of property definitions. When environment has no data,
            the returned array is empty.
          readOnly: true
          items:
            $ref: '#/components/schemas/EventProperty'
      description: Event schema of all events within a given search span. Event schema
        is a set of property definitions. Properties are identified by both name and
        type. Different events can have properties with same name, but different type.
        Event schema may not be contain all persisted properties when there are too
        many properties.
    QueryRequest:
      type: object
      properties:
        getEvents:
          $ref: '#/components/schemas/GetEvents'
        getSeries:
          $ref: '#/components/schemas/GetSeries'
        aggregateSeries:
          $ref: '#/components/schemas/AggregateSeries'
      description: Request to execute a time series query over events. Exactly one
        of "getEvents", "getSeries" or "aggregateSeries" must be set.
    GetEvents:
      required:
      - searchSpan
      - timeSeriesId
      type: object
      properties:
        timeSeriesId:
          $ref: '#/components/schemas/TimeSeriesId'
        searchSpan:
          $ref: '#/components/schemas/DateTimeRange'
        filter:
          $ref: '#/components/schemas/Tsx'
        projectedProperties:
          type: array
          description: Projected properties is an array of properties which you want
            to project. These properties must appear in the events; otherwise, they
            are not returned.
          items:
            $ref: '#/components/schemas/EventProperty'
        take:
          type: integer
          description: Maximum number of property values in the whole response set,
            not the maximum number of property values per page. Defaults to 10,000
            when not set. Maximum value of take can be 250,000.
          format: int32
      description: Get Events query. Allows to retrieve raw events for a given Time
        Series ID and search span.
    GetSeries:
      required:
      - searchSpan
      - timeSeriesId
      type: object
      properties:
        timeSeriesId:
          $ref: '#/components/schemas/TimeSeriesId'
        searchSpan:
          $ref: '#/components/schemas/DateTimeRange'
        filter:
          $ref: '#/components/schemas/Tsx'
        projectedVariables:
          type: array
          description: Selected variables that needs to be projected in the query
            result. When it is null or not set, all the variables from inlineVariables
            and time series type in the model are returned. Can be null.
          items:
            type: string
        inlineVariables:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Variable'
          description: Optional inline variables apart from the ones already defined
            in the time series type in the model. When the inline variable name is
            the same name as in the model, the inline variable definition takes precedence.
            Can be null.
        take:
          type: integer
          description: Maximum number of property values in the whole response set,
            not the maximum number of property values per page. Defaults to 10,000
            when not set. Maximum value of take can be 250,000.
          format: int32
      description: Get Series query. Allows to retrieve time series of calculated
        variable values from events for a given Time Series ID and search span.
    AggregateSeries:
      required:
      - interval
      - searchSpan
      - timeSeriesId
      type: object
      properties:
        timeSeriesId:
          $ref: '#/components/schemas/TimeSeriesId'
        searchSpan:
          $ref: '#/components/schemas/DateTimeRange'
        filter:
          $ref: '#/components/schemas/Tsx'
        interval:
          type: string
          description: 'Interval size is specified in ISO-8601 duration format. All
            intervals are the same size. One month is always converted to 30 days,
            and one year is always 365 days. Examples: 1 minute is "PT1M", 1 millisecond
            is "PT0.001S". For more information, see https://www.w3.org/TR/xmlschema-2/#duration'
          format: duration
        projectedVariables:
          type: array
          description: This allows the user to optionally select the variables that
            needs to be projected. When it is null or not set, all the variables from
            inlineVariables and model are returned. Can be null.
          items:
            type: string
        inlineVariables:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Variable'
          description: This allows the user the optionally define inline-variables
            apart from the ones already defined in the model. When the inline variable
            names have the same name as the model, the inline variable definition
            takes precedence. Can be null.
      description: Aggregate Series query. Allows to calculate an aggregated time
        series from events for a given Time Series ID and search span.
    TimeSeriesId:
      minItems: 1
      type: array
      description: A single Time Series ID value that is an array of primitive values
        that uniquely identifies a time series instance (e.g. a single device). Note
        that a single Time Series ID can be composite if multiple properties are specified
        as Time Series ID at environment creation time. The position and type of values
        must match Time Series ID properties specified on the environment and returned
        by Get Model Setting API. Cannot be empty.
      items:
        type: object
        description: A single Time Series ID value that is an array of primitive values
          that uniquely identifies a time series instance (e.g. a single device).
          Note that a single Time Series ID can be composite if multiple properties
          are specified as Time Series ID at environment creation time. The position
          and type of values must match Time Series ID properties specified on the
          environment and returned by Get Model Setting API. Cannot be empty.
    Tsx:
      required:
      - tsx
      type: object
      properties:
        tsx:
          type: string
          description: 'Time series expression (TSX) written as a single string. Examples:
            "$event.Status.String=''Good''", "avg($event.Temperature)". Refer to the
            documentation on how to write time series expressions.'
      description: 'Time series expression (TSX) written as a single string. Examples:
        "$event.Status.String=''Good''", "avg($event.Temperature)". Refer to the documentation
        on how to write time series expressions.'
    Interpolation:
      type: object
      properties:
        kind:
          type: string
          description: 'The type of interpolation technique : "Linear" or "Step".'
          enum:
          - Linear
          - Step
          x-ms-enum:
            name: InterpolationKind
            modelAsString: true
        boundary:
          type: object
          properties:
            span:
              type: string
              description: Search span.
              format: duration
          description: The time range to the left and right of the search span to
            be used for Interpolation. This is helpful in scenarios where the data
            points are missing close to the start or end of the input search span.
            Can be null.
      description: 'The interpolation operation to be performed on the raw data points.
        Currently, only sampling of interpolated time series is allowed. Allowed aggregate
        function - eg: left($value). Can be null if no interpolation needs to be applied.'
    DateTimeRange:
      required:
      - from
      - to
      type: object
      properties:
        from:
          type: string
          description: Start timestamp of the time range. Start timestamp is inclusive
            when used in time series query requests. Events that have this timestamp
            are included.
          format: date-time
        to:
          type: string
          description: End timestamp of the time range. End timestamp is exclusive
            when used in time series query requests. Events that match this timestamp
            are excluded. Note that end timestamp is inclusive when returned by Get
            Availability (meaning that there is an event with this exact "to" timestamp).
          format: date-time
      description: The range of time. Cannot be null or negative.
    NumericVariable:
      description: Numeric variable represents a single continuous numeric signal
        that can be reconstructed using interpolation.
      allOf:
      - $ref: '#/components/schemas/Variable'
      - type: object
        properties:
          value:
            $ref: '#/components/schemas/Tsx'
          interpolation:
            $ref: '#/components/schemas/Interpolation'
          aggregation:
            $ref: '#/components/schemas/Tsx'
      x-ms-discriminator-value: numeric
    AggregateVariable:
      description: Aggregate variable represents any aggregation calculation. Aggregate
        Variables does not support interpolation.
      allOf:
      - $ref: '#/components/schemas/Variable'
      - type: object
        properties:
          aggregation:
            $ref: '#/components/schemas/Tsx'
      x-ms-discriminator-value: aggregate
    CategoricalVariable:
      description: Categorical variable represents signal that needs to be analyzed
        based on the count or duration of occurrence of limited set of defined values.
      allOf:
      - $ref: '#/components/schemas/Variable'
      - type: object
        properties:
          value:
            $ref: '#/components/schemas/Tsx'
          interpolation:
            $ref: '#/components/schemas/Interpolation'
          categories:
            type: array
            description: Aggregation category types.
            items:
              $ref: '#/components/schemas/TimeSeriesAggregateCategory'
          defaultCategory:
            $ref: '#/components/schemas/TimeSeriesDefaultCategory'
      x-ms-discriminator-value: categorical
    TimeSeriesAggregateCategory:
      required:
      - label
      - values
      type: object
      properties:
        label:
          type: string
          description: The name of the category which will be used in constructing
            the output variable names.
        values:
          type: array
          description: The list of values that a category maps to. Can be either a
            unique list of string or list of long.
          items:
            type: object
            properties: {}
      description: Category used in categorical variables. A category is defined by
        'label' and the 'values' that are assigned this label.
    TimeSeriesDefaultCategory:
      required:
      - label
      type: object
      properties:
        label:
          type: string
          description: The name of the default category which will be assigned to
            the values that does not match any of those that are defined in the 'categories'.
      description: Represents the default category.
    Variable:
      required:
      - kind
      type: object
      properties:
        kind:
          type: string
          description: Allowed "kind" values are - "numeric" or "aggregate". While
            "numeric" allows you to specify value of the reconstructed signal and
            the expression to aggregate them, the "aggregate" kind lets you directly
            aggregate on the event properties without specifying value.
        filter:
          $ref: '#/components/schemas/Tsx'
      description: Variables are named calculations over values from the events. Time
        Series Insights variable definitions contain formula and computation rules.
        Variables are stored in the type definition in Time Series Model and can be
        provided inline via Query APIs to override the stored definition.
      discriminator:
        propertyName: kind
    QueryResultPage:
      description: A single page of query results. If query has not finished yet,
        a page will have continuation token set. In this case, to get the next page
        of results, send the same request again with continuation token parameter.
        If query has completed, the continuation token is null. It is also possible
        to get an empty page with only continuation token set when no query results
        have been computed yet. If paging has completed (continuation token is null),
        then timestamps and properties may be empty if there is no data to return.
      allOf:
      - $ref: '#/components/schemas/PagedResponse'
      - type: object
        properties:
          timestamps:
            type: array
            description: The timestamps of the values of the time series. If an aggregation
              over intervals is used, timestamps represent the start of corresponding
              intervals. If events are retrieved, timestamps are values of timestamp
              $ts property of events. Can be null if server was unable to fill the
              page in this request, or can be empty if there are no more objects when
              continuation token is null.
            readOnly: true
            items:
              type: string
              format: date-time
          properties:
            type: array
            description: Collection of time series properties and values for each
              of the timestamps.  Can be null if server was unable to fill the page
              in this request, or can be empty if there are no more objects when continuation
              token is null.
            readOnly: true
            items:
              $ref: '#/components/schemas/PropertyValues'
          progress:
            type: number
            description: Approximate progress of the query in percentage. It can be
              between 0 and 100. When the continuation token in the response is null,
              the progress is expected to be 100.
            format: double
            readOnly: true
    PropertyValues:
      description: Values of a single property corresponding to the timestamps. May
        contain nulls. Type of values matches the type of property.
      allOf:
      - $ref: '#/components/schemas/EventProperty'
      - type: object
        properties:
          values:
            type: array
            description: Values of a single property corresponding to the timestamps.
              May contain nulls. Type of values matches the type of property.
            items:
              type: object
    GetInstancesPage:
      description: Partial list of time series instances returned in a single request.
      allOf:
      - $ref: '#/components/schemas/PagedResponse'
      - type: object
        properties:
          instances:
            type: array
            description: Partial list of time series instances returned in a single
              request. Can be empty if server was unable to fill the page in this
              request, or there is no more objects when continuation token is null.
            readOnly: true
            items:
              $ref: '#/components/schemas/TimeSeriesInstance'
    TimeSeriesInstance:
      required:
      - timeSeriesId
      - typeId
      type: object
      properties:
        timeSeriesId:
          $ref: '#/components/schemas/TimeSeriesId'
        typeId:
          type: string
          description: This represents the type that this instance belongs to. Never
            null.
        name:
          type: string
          description: Optional name of the instance which is unique in an environment.
            Names acts as a mutable alias or display name of the time series instance.
            Mutable, may be null.
        description:
          type: string
          description: This optional field contains description about the instance.
        hierarchyIds:
          type: array
          description: Set of time series hierarchy IDs that the instance belong to.
            May be null.
          items:
            type: string
        instanceFields:
          type: object
          additionalProperties:
            type: object
          description: 'Set of key-value pairs that contain user-defined instance
            properties. It may be null. Supported property value types are: bool,
            string, long, double and it cannot be nested or null.'
      description: Time series instances are the time series themselves. In most cases,
        the deviceId or assetId is the unique identifier of the asset in the environment.
        Instances have descriptive information associated with them called instance
        fields. At a minimum, instance fields include hierarchy information. They
        can also include useful, descriptive data like the manufacturer, operator,
        or the last service date.
    InstancesBatchRequest:
      type: object
      properties:
        get:
          $ref: '#/components/schemas/InstancesRequestBatchGetOrDelete'
        put:
          type: array
          description: Time series instances to be created or updated.
          items:
            $ref: '#/components/schemas/TimeSeriesInstance'
        update:
          type: array
          description: Time series instance to be updated. If instance does not exist,
            an error is returned.
          items:
            $ref: '#/components/schemas/TimeSeriesInstance'
        delete:
          $ref: '#/components/schemas/InstancesRequestBatchGetOrDelete'
      description: Request to perform a single operation on a batch of instances.
        Exactly one of "get", "put", "update" or "delete" must be set.
    InstancesRequestBatchGetOrDelete:
      type: object
      properties:
        timeSeriesIds:
          type: array
          description: List of time series IDs of the time series instances to return
            or delete.
          items:
            $ref: '#/components/schemas/TimeSeriesId'
        names:
          type: array
          description: List of names of the time series instances to return or delete.
          items:
            type: string
      description: Request to get or delete instances by time series IDs or time series
        names. Exactly one of "timeSeriesIds" or "names" must be set.
    InstancesBatchResponse:
      type: object
      properties:
        get:
          type: array
          description: List of instance or error objects corresponding by position
            to the "get" array in the request. Instance object is set when operation
            is successful and error object is set when operation is unsuccessful.
          readOnly: true
          items:
            $ref: '#/components/schemas/InstanceOrError'
        put:
          type: array
          description: List of error objects corresponding by position to the "put"
            array in the request. Error object is set when operation is unsuccessful.
          readOnly: true
          items:
            $ref: '#/components/schemas/InstanceOrError'
        update:
          type: array
          description: List of error objects corresponding by position to the "update"
            array in the request. Instance object is set when operation is successful
            and error object is set when operation is unsuccessful.
          readOnly: true
          items:
            $ref: '#/components/schemas/InstanceOrError'
        delete:
          type: array
          description: List of error objects corresponding by position to the "delete"
            array in the request. Null means the instance has been deleted, or did
            not exist. Error object is set when operation is unsuccessful (e.g. when
            there are events associated with this time series instance).
          readOnly: true
          items:
            $ref: '#/components/schemas/TsiErrorBody'
      description: Response of a single operation on a batch of instances. Only one
        of "get", "put", "update" or "delete" will be set based on the request.
    InstanceOrError:
      type: object
      properties:
        instance:
          $ref: '#/components/schemas/TimeSeriesInstance'
        error:
          $ref: '#/components/schemas/TsiErrorBody'
      description: Result of a batch operation on a particular time series instance.
        Instance object is set when operation is successful (except put operation)
        and error object is set when operation is unsuccessful.
    GetTypesPage:
      description: Partial list of time series types returned in a single request.
      allOf:
      - $ref: '#/components/schemas/PagedResponse'
      - type: object
        properties:
          types:
            type: array
            description: Partial list of time series types returned in a single request.
              Can be empty if server was unable to fill the page with more types in
              this request, or there is no more types when continuation token is null.
            readOnly: true
            items:
              $ref: '#/components/schemas/TimeSeriesType'
    TimeSeriesType:
      required:
      - name
      - variables
      type: object
      properties:
        id:
          type: string
          description: Case-sensitive unique type identifier that is immutable. Can
            be null on create or update requests, and then server generates the ID.
            Not null on get and delete operations.
        name:
          type: string
          description: User-given unique name for the type. Mutable, not null.
        description:
          type: string
          description: Description of the type. May be null.
        variables:
          type: object
          description: Different variables associated with the type. Not empty, not
            null.
      description: Time series type defines variables or formulas for doing computation
        on events associated with time series instances. Each time series instance
        is associated with exactly one type. A type can have one or more variables.
        For example, a time series instance might be of type Temperature Sensor, which
        consists of the variables avg temperature, min temperature, and max temperature.
    TypesBatchRequest:
      type: object
      properties:
        get:
          $ref: '#/components/schemas/TypesRequestBatchGetOrDelete'
        put:
          type: array
          description: Definition of what time series types to update or create.
          items:
            $ref: '#/components/schemas/TimeSeriesType'
        delete:
          $ref: '#/components/schemas/TypesRequestBatchGetOrDelete'
      description: Request to perform a single operation on a batch of time series
        types. Exactly one of "get", "put" or "delete" must be set.
    TypesRequestBatchGetOrDelete:
      type: object
      properties:
        typeIds:
          type: array
          description: List of IDs of time series types to return or delete.
          items:
            type: string
        names:
          type: array
          description: List of names of time series types to return or delete.
          items:
            type: string
      description: Request to get or delete time series types by IDs or type names.
        Exactly one of "typeIds" or "names" must be set.
    TypesBatchResponse:
      type: object
      properties:
        get:
          type: array
          description: List of types or error objects corresponding by position to
            the "get" array in the request. Type object is set when operation is successful
            and error object is set when operation is unsuccessful.
          readOnly: true
          items:
            $ref: '#/components/schemas/TimeSeriesTypeOrError'
        put:
          type: array
          description: List of types or error objects corresponding by position to
            the "put" array in the request. Type object is set when operation is successful
            and error object is set when operation is unsuccessful.
          readOnly: true
          items:
            $ref: '#/components/schemas/TimeSeriesTypeOrError'
        delete:
          type: array
          description: List of error objects corresponding by position to the "delete"
            array in the request - null when the operation is successful.
          readOnly: true
          items:
            $ref: '#/components/schemas/TsiErrorBody'
      description: Response of a single operation on a batch of time series types.
        Exactly one of "get", "put" or "delete" will be set.
    TimeSeriesTypeOrError:
      type: object
      properties:
        timeSeriesType:
          $ref: '#/components/schemas/TimeSeriesType'
        error:
          $ref: '#/components/schemas/TsiErrorBody'
      description: Result of a batch operation on a particular time series type. Type
        object is set when operation is successful and error object is set when operation
        is unsuccessful.
    GetHierarchiesPage:
      description: Partial list of time series hierarchies returned in a single request.
      allOf:
      - $ref: '#/components/schemas/PagedResponse'
      - type: object
        properties:
          hierarchies:
            type: array
            description: Partial list of time series hierarchies returned in a single
              request. Can be empty if server was unable to fill the page in this
              request, or there is no more objects when continuation token is null.
            readOnly: true
            items:
              $ref: '#/components/schemas/TimeSeriesHierarchy'
    TimeSeriesHierarchy:
      required:
      - name
      - source
      type: object
      properties:
        id:
          type: string
          description: Case-sensitive unique hierarchy identifier. Can be null while
            creating hierarchy objects and then server generates the id, not null
            on get and delete operations.
        name:
          type: string
          description: User-given unique name for the type. It is mutable and not
            null.
        source:
          type: object
          properties:
            instanceFieldNames:
              type: array
              description: List of instance field names that must be set in all time
                series instances that belong to this hierarchy. The order of the instance
                fields defines the levels in the hierarchy.
              items:
                type: string
          description: Definition of how time series hierarchy tree levels are created.
      description: Time series hierarchy organizes time series instances into a tree.
    HierarchiesBatchRequest:
      type: object
      properties:
        get:
          $ref: '#/components/schemas/HierarchiesRequestBatchGetDelete'
        put:
          type: array
          description: '"put" should be set while creating or updating hierarchies.'
          items:
            $ref: '#/components/schemas/TimeSeriesHierarchy'
        delete:
          $ref: '#/components/schemas/HierarchiesRequestBatchGetDelete'
      description: Request to perform a single operation on a batch of hierarchies.
        Exactly one of "get", "put" or "delete" must be set.
    HierarchiesRequestBatchGetDelete:
      type: object
      properties:
        hierarchyIds:
          type: array
          description: List of hierarchy IDs.
          items:
            type: string
        names:
          type: array
          description: List of hierarchy names.
          items:
            type: string
      description: Request to get or delete multiple time series hierarchies. Exactly
        one of "hierarchyIds" or "names" must be set.
    HierarchiesBatchResponse:
      type: object
      properties:
        get:
          type: array
          description: List of hierarchy or error objects corresponding by position
            to the "get" array in the request. Hierarchy object is set when operation
            is successful and error object is set when operation is unsuccessful.
          readOnly: true
          items:
            $ref: '#/components/schemas/TimeSeriesHierarchyOrError'
        put:
          type: array
          description: List of hierarchy or error object corresponding by position
            to the "put" array in the request. Hierarchy object is set when operation
            is successful and error object is set when operation is unsuccessful.
          readOnly: true
          items:
            $ref: '#/components/schemas/TimeSeriesHierarchyOrError'
        delete:
          type: array
          description: List of error objects corresponding by position to the "delete"
            array in the request - null when the operation is successful.
          readOnly: true
          items:
            $ref: '#/components/schemas/TsiErrorBody'
      description: Response of a single operation on a batch of time series hierarchies.
        Only one of "get", "put" or "delete" will be set.
    TimeSeriesHierarchyOrError:
      type: object
      properties:
        hierarchy:
          $ref: '#/components/schemas/TimeSeriesHierarchy'
        error:
          $ref: '#/components/schemas/TsiErrorBody'
      description: Result of a batch operation on a particular time series hierarchy.
        Hierarchy is set when operation is successful and error object is set when
        operation is unsuccessful.
    ModelSettingsResponse:
      type: object
      properties:
        modelSettings:
          $ref: '#/components/schemas/TimeSeriesModelSettings'
      description: Response containing full time series model settings which include
        model name, Time Series ID properties and default type ID.
    TimeSeriesModelSettings:
      type: object
      properties:
        name:
          type: string
          description: 'Time series model display name which is shown in the UX. Examples:
            "Temperature Sensors", "MyDevices".'
          readOnly: true
        timeSeriesIdProperties:
          $ref: '#/components/schemas/TimeSeriesIdProperties'
        defaultTypeId:
          type: string
          description: Default type ID of the model that new time series instances
            will automatically belong to.
          readOnly: true
      description: Time series model settings including model name, Time Series ID
        properties and default type ID.
    TimeSeriesIdProperties:
      minItems: 1
      type: array
      description: Time series ID properties defined during environment creation.
      items:
        $ref: '#/components/schemas/TimeSeriesIdProperty'
    TimeSeriesIdProperty:
      type: object
      properties:
        name:
          type: string
          description: The name of the property.
          readOnly: true
        type:
          type: string
          description: The type of the property. Currently, only "String" is supported.
          readOnly: true
          enum:
          - String
          x-ms-enum:
            name: TimeSeriesIdPropertyTypes
            modelAsString: true
      description: A definition of a single property that can be used in time series
        ID properties defined during environment creation.
    UpdateModelSettingsRequest:
      type: object
      properties:
        name:
          type: string
          description: Model display name which is shown in the UX and mutable by
            the user. Initial value is "DefaultModel".
        defaultTypeId:
          type: string
          description: Default type id of the model that new instances will automatically
            belong to.
      description: Request to update model settings. One of "name" or "defaultTypeId"
        must be set.
    SearchInstancesRequest:
      required:
      - searchString
      type: object
      properties:
        searchString:
          type: string
          description: 'Query search string that will be matched to the attributes
            of time series instances. Example: "floor 100". Case-insensitive, must
            be present, but can be empty string.'
        path:
          type: array
          description: 'Filter on hierarchy path of time series instances. Path is
            represented as array of string path segments. First element should be
            hierarchy name. Example: ["Location", "California"]. Optional, case sensitive,
            never empty and can be null.'
          items:
            type: string
        instances:
          $ref: '#/components/schemas/SearchInstancesParameters'
        hierarchies:
          $ref: '#/components/schemas/SearchInstancesHierarchiesParameters'
      description: Request to execute a search query against time series instances
        and return matching time series instances.
    SearchInstancesParameters:
      type: object
      properties:
        recursive:
          type: boolean
          description: Definition of which instances are returned. When recursive
            is set to 'true', all instances that have the path that starts with path
            the path parameter are returned. When recursive is set to 'false', only
            instances that have the path that exactly matches the path parameter are
            returned. Using recursive search allows to implement search user experience,
            while using non-recursive search allows to implement navigation experience.
            Optional, default is 'true'.
        sort:
          $ref: '#/components/schemas/InstancesSortParameter'
        highlights:
          type: boolean
          description: Definition of highlighted search results or not. When it is
            set to 'true', the highlighted search results are returned. When it is
            set to 'false', the highlighted search results are not returned. Default
            is 'true'.
        pageSize:
          type: integer
          description: Maximum number of instances expected in each page of the result.
            Defaults to 10 when not set. Ranges from 1 to 100. If there are results
            beyond the page size, the user can use the continuation token to fetch
            the next page.
          format: int32
      description: Parameters of how to return time series instances by search instances
        call.
    InstancesSortParameter:
      type: object
      properties:
        by:
          type: string
          description: Value to use for sorting of the time series instances before
            being returned by search instances call. When it is set to 'Rank', the
            returned instances are sorted based on the relevance. When it is set to
            'DisplayName', the returned results are sorted based on the display name.
            Display name is the name of the instance if it exists, otherwise, display
            name is the time series ID. Default is 'Rank'.
          enum:
          - Rank
          - DisplayName
          x-ms-enum:
            name: InstancesSortBy
            modelAsString: true
      description: Definition of how time series instances are sorted before being
        returned by search instances call.
    SearchInstancesHierarchiesParameters:
      type: object
      properties:
        expand:
          $ref: '#/components/schemas/HierarchiesExpandParameter'
        sort:
          $ref: '#/components/schemas/HierarchiesSortParameter'
        pageSize:
          type: integer
          description: Maximum number of hierarchies in the same level to return in
            the same page. Optional, default is 10 when not set. Range is from 1 to
            100. If there are results beyond the page size, the continuation token
            can be used to fetch the next page.
          format: int32
      description: Parameter of how to return time series instance hierarchies by
        search instances call.
    HierarchiesExpandParameter:
      type: object
      properties:
        kind:
          type: string
          description: Kind of the expansion of hierarchy nodes. When it is set to
            'UntilChildren', the hierarchy nodes are expanded recursively until there
            is more than one child. When it is set to 'OneLevel', the hierarchies
            are expanded only at the single level matching path search instances parameter.
            Optional, default is 'UntilChildren'.
          enum:
          - UntilChildren
          - OneLevel
          x-ms-enum:
            name: HierarchiesExpandKind
            modelAsString: true
      description: Definition of whether to expand hierarchy nodes in the same search
        instances call.
    HierarchiesSortParameter:
      type: object
      properties:
        by:
          type: string
          description: Value to use for hierarchy node sorting. When it is set to
            'CumulativeInstanceCount', the returned hierarchies are sorted based on
            the total instances belonging to the hierarchy node and its child hierarchy
            nodes. When it is set to 'Name', the returned hierarchies are sorted based
            on the hierarchy name. Optional, default is 'CumulativeInstanceCount'.
          enum:
          - CumulativeInstanceCount
          - Name
          x-ms-enum:
            name: HierarchiesSortBy
            modelAsString: true
      description: Definition of sorting of hierarchy nodes.
    SearchInstancesResponsePage:
      type: object
      properties:
        instances:
          $ref: '#/components/schemas/SearchInstancesResponse'
        hierarchyNodes:
          $ref: '#/components/schemas/SearchHierarchyNodesResponse'
      description: Single page of the search results.
    SearchInstancesResponse:
      type: object
      properties:
        hits:
          type: array
          description: The list of instances matching the query based on the input.
            May be empty.
          readOnly: true
          items:
            $ref: '#/components/schemas/InstanceHit'
        hitCount:
          type: integer
          description: Total number of instances matching the query based on the input.
          format: int32
          readOnly: true
        continuationToken:
          type: string
          description: If returned, this means that current results represent a partial
            result. Continuation token allows to get the next page of results. To
            get the next page of query results, send the same request with continuation
            token parameter in "x-ms-continuation" HTTP header.
          readOnly: true
      description: The instances matching the query based on the input. May be empty
        or null.
    SearchHierarchyNodesResponse:
      type: object
      properties:
        hits:
          type: array
          description: The list of hierarchy nodes which contains the instances matching
            the query based on the input. May be empty.
          readOnly: true
          items:
            $ref: '#/components/schemas/HierarchyHit'
        hitCount:
          type: integer
          description: Total number of hierarchy nodes which contains the instances
            matching the query based on the input.
          format: int32
          readOnly: true
        continuationToken:
          type: string
          description: If returned, this means that current results represent a partial
            result. Continuation token allows to get the next page of results. To
            get the next page of query results, send the same request with continuation
            token parameter in "x-ms-continuation" HTTP header.
          readOnly: true
      description: The hierarchy nodes which contains the instances matching the query
        based on the input. May be empty or null.
    InstanceHit:
      type: object
      properties:
        timeSeriesId:
          $ref: '#/components/schemas/TimeSeriesId'
        name:
          type: string
          description: Name of the time series instance that matched the search request.
            May be null.
          readOnly: true
        typeId:
          type: string
          description: Represents the type that time series instance which matched
            the search request belongs to. Never null.
          readOnly: true
        hierarchyIds:
          type: array
          description: List of time series hierarchy IDs that time series instance
            which matched the search request belongs to. Cannot be used to lookup
            hierarchies. May be null.
          readOnly: true
          items:
            type: string
        highlights:
          type: object
          properties:
            timeSeriesId:
              type: array
              description: List of highlighted string values of Time Series ID for
                displaying. Cannot be used to lookup instance.
              readOnly: true
              items:
                type: string
            typeName:
              type: string
              description: Highlighted time series type name that this instance belongs
                to.
              readOnly: true
            name:
              type: string
              description: Highlighted name of time series instance. May be null.
              readOnly: true
            description:
              type: string
              description: Highlighted description of time series instance. May be
                null.
              readOnly: true
            hierarchyIds:
              type: array
              description: List of highlighted time series hierarchy IDs that time
                series instance belongs to. Cannot be used to lookup hierarchies.
                May be null.
              readOnly: true
              items:
                type: string
            hierarchyNames:
              type: array
              description: List of highlighted time series hierarchy names that time
                series instance belongs to. Cannot be used to lookup hierarchies.
                May be null.
              readOnly: true
              items:
                type: string
            instanceFieldNames:
              type: array
              description: List of highlighted time series instance field names. May
                be null.
              readOnly: true
              items:
                type: string
            instanceFieldValues:
              type: array
              description: List of highlighted time series instance field values.
                May be null.
              readOnly: true
              items:
                type: string
          description: Highlighted text of time series instance to be displayed to
            the user. Highlighting inserts <hit> and </hit> tags in the portions of
            text that matched the search string. Do not use any of the highlighted
            properties to do further API calls.
          readOnly: true
      description: Time series instance that is returned by instances search call.
        Returned instance matched the search request and contains highlighted text
        to be displayed to the user if it is set to 'true'.
    HierarchyHit:
      type: object
      properties:
        name:
          type: string
          description: Name of the hierarchy node. May be empty, cannot be null.
          readOnly: true
        cumulativeInstanceCount:
          type: integer
          description: Total number of instances that belong to this node and it's
            subtrees matching the query.
          format: int32
          readOnly: true
        hierarchyNodes:
          $ref: '#/components/schemas/SearchHierarchyNodesResponse'
      description: The hierarchy node which contains the instances matching the query
        based on the input. May be empty or null.
    InstancesSuggestRequest:
      required:
      - searchString
      type: object
      properties:
        searchString:
          type: string
          description: Search string for which suggestions are required. Empty is
            allowed, but not null.
        take:
          type: integer
          description: Maximum number of suggestions expected in the result. Defaults
            to 10 when not set.
          format: int32
      description: Request to get search string suggestions for time series instances
        search based on prefix text.
    InstancesSuggestResponse:
      type: object
      properties:
        suggestions:
          type: array
          description: List of instance suggestions for searching time series models.
          readOnly: true
          items:
            $ref: '#/components/schemas/InstancesSearchStringSuggestion'
      description: Response of getting suggestions for search for time series instances.
    InstancesSearchStringSuggestion:
      type: object
      properties:
        searchString:
          type: string
          description: Suggested search string. Can be used for further search for
            time series instances.
          readOnly: true
        highlightedSearchString:
          type: string
          description: Highlighted suggested search string to be displayed to the
            user. Highlighting inserts <hit> and </hit> tags in the portions of text
            that matched the search string. Do not use highlighted search string to
            do further search calls.
          readOnly: true
      description: Suggested search string to be used for further search for time
        series instances.
    PagedResponse:
      type: object
      properties:
        continuationToken:
          type: string
          description: If returned, this means that current results represent a partial
            result. Continuation token allows to get the next page of results. To
            get the next page of query results, send the same request with continuation
            token parameter in "x-ms-continuation" HTTP header.
          readOnly: true
      description: Partial result that has continuation token to fetch the next partial
        result.
    EventProperty:
      type: object
      properties:
        name:
          type: string
          description: The name of the property.
        type:
          $ref: '#/components/schemas/PropertyType'
      description: Property of an event that is either stored or computed. Properties
        are identified by both name and type. Different events can have properties
        with same name, but different type.
    PropertyType:
      type: string
      description: The type of the property that is either stored in events or computed
        by a calculation.
      enum:
      - Bool
      - DateTime
      - Double
      - String
      - TimeSpan
      - Long
      x-ms-enum:
        name: PropertyTypes
        modelAsString: true
    TsiError:
      type: object
      properties:
        error:
          $ref: '#/components/schemas/TsiErrorBody'
      description: Information about an API error.
      x-ms-external: false
    TsiErrorBody:
      type: object
      properties:
        code:
          type: string
          description: Language-independent, human-readable string that defines a
            service-specific error code. This code serves as a more specific indicator
            for the HTTP error code specified in the response. Can be used to programmatically
            handle specific error cases.
          readOnly: true
        message:
          type: string
          description: Human-readable, language-independent representation of the
            error. It is intended as an aid to developers and is not suitable for
            exposure to end users.
          readOnly: true
        target:
          type: string
          description: Target of the particular error (for example, the name of the
            property in error). May be null.
          readOnly: true
        innerError:
          $ref: '#/components/schemas/TsiErrorBody'
        details:
          type: array
          description: Contains additional error information. May be null.
          readOnly: true
          items:
            $ref: '#/components/schemas/TsiErrorDetails'
      description: A particular API error with an error code and a message.
      x-ms-external: false
    TsiErrorDetails:
      type: object
      properties:
        code:
          type: string
          description: Language-independent, human-readable string that defines a
            service-specific error code. This code serves as a more specific indicator
            for the HTTP error code specified in the response. Can be used to programmatically
            handle specific error cases.
          readOnly: true
        message:
          type: string
          description: Human-readable, language-independent representation of the
            error. It is intended as an aid to developers and is not suitable for
            exposure to end users.
          readOnly: true
      description: Additional error information.
      x-ms-external: false
  parameters:
    ApiVersion:
      name: api-version
      in: query
      description: Version of the API to be used with the client request. Currently
        supported version is "2020-07-31".
      required: true
      schema:
        type: string
        default: 2020-07-31
    StoreType:
      name: storeType
      in: query
      description: For the environments with warm store enabled, the query can be
        executed either on the 'WarmStore' or 'ColdStore'. This parameter in the query
        defines which store the query should be executed on. If not defined, the query
        will be executed on the cold store.
      schema:
        type: string
        x-ms-parameter-location: method
      x-ms-parameter-location: method
    EnvironmentFqdn:
      name: environmentFqdn
      in: path
      description: Per environment FQDN, for example 10000000-0000-0000-0000-100000000109.env.timeseries.azure.com.
        You can obtain this domain name from the response of the Get Environments
        API, Azure portal, or Azure Resource Manager.
      required: true
      schema:
        type: string
        x-ms-skip-url-encoding: true
        x-ms-parameter-location: client
      x-ms-skip-url-encoding: true
      x-ms-parameter-location: client
    ContinuationToken:
      name: x-ms-continuation
      in: header
      description: Continuation token from previous page of results to retrieve the
        next page of the results in calls that support pagination. To get the first
        page results, specify null continuation token as parameter value. Returned
        continuation token is null if all results have been returned, and there is
        no next page of results.
      schema:
        type: string
        x-ms-client-name: continuationToken
        x-ms-parameter-location: method
      x-ms-client-name: continuationToken
      x-ms-parameter-location: method
    ClientRequestId:
      name: x-ms-client-request-id
      in: header
      description: Optional client request ID. Service records this value. Allows
        the service to trace operation across services, and allows the customer to
        contact support regarding a particular request.
      schema:
        type: string
        x-ms-client-name: clientRequestId
        x-ms-parameter-location: method
      x-ms-client-name: clientRequestId
      x-ms-parameter-location: method
    ClientSessionId:
      name: x-ms-client-session-id
      in: header
      description: Optional client session ID. Service records this value. Allows
        the service to trace a group of related operations across services, and allows
        the customer to contact support regarding a particular group of requests.
      schema:
        type: string
        x-ms-client-name: clientSessionId
        x-ms-parameter-location: method
      x-ms-client-name: clientSessionId
      x-ms-parameter-location: method
  securitySchemes:
    azure_auth:
      type: oauth2
      description: Azure Active Directory OAuth2 Flow
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
# x-ms-parameterized-host:
#   hostTemplate: '{environmentFqdn}'
#   useSchemePrefix: true
#   positionInOperation: first
#   parameters:
#   - $ref: '#/parameters/EnvironmentFqdn'
