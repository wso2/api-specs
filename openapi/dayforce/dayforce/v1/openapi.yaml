openapi: 3.0.1
info:
  title: Dayforce API
  version: v1
  x-service-version: 66.1.1.15016
servers:
  - url: https://ustest241-services.dayforcehcm.com/Api
paths:
  /{clientNamespace}/v1/GetEmployeeBulkAPI:
    post:
      tags:
        - AmfBulkAPI
      summary: Add new HR Bulk Export details into Job Queue tables.
      operationId: AmfBulkAPI_Post_By_export_isValidateOnly_clientNamespace
      parameters:
        - name: isValidateOnly
          in: query
          description: This parameter used to run a test case without fail
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST. For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeExportParams'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeExportParams'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeExportParams'
        required: true
      responses:
        '200':
          description: A HR Bulk Export is created with an empty response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_String'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_String'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_String'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_String'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_String'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_String'
  /{clientNamespace}/v1/GetEmployeeBulkAPI/Status/{backgroundJobQueueItemId}:
    get:
      tags:
        - AmfBulkAPI
      summary: Get the status of Job Queue tables.
      operationId: AmfBulkAPI_Get_By_backgroundJobQueueItemId_clientNamespace
      parameters:
        - name: backgroundJobQueueItemId
          in: path
          description: To find a status of employee export background job
          required: true
          schema:
            type: integer
            format: int32
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: Job Status and Access API URL
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
  /{clientNamespace}/v1/GetEmployeeBulkAPI/Data/{jobId}:
    get:
      tags:
        - AmfBulkAPI
      summary: Get bulk employee of data as a string in json format
      operationId: AmfBulkAPI_Get_By_jobId_clientNamespace
      parameters:
        - name: jobId
          in: path
          description: To get background job processed data for employee export
          required: true
          schema:
            type: string
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: Returns a page of employee data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayload_IEnumerable_Employee'
            text/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayload_IEnumerable_Employee'
            text/html:
              schema:
                $ref: '#/components/schemas/PaginatedPayload_IEnumerable_Employee'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
  /{clientNamespace}/V1/Analytics/Reports:
    get:
      tags:
        - AnalyticsReports
      summary: Get Reports
      description: "<h3>Description</h3>\r\n<p>The Get reports request allows the consuming application to retrieve a list of available reports.</p>"
      operationId: AnalyticsReports_GetReports_By_clientNamespace
      parameters:
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: A collection of Reports
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_AnalyticsReportDefinitions'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_AnalyticsReportDefinitions'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_AnalyticsReportDefinitions'
        '204':
          description: No reports available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_Object'
              example: ''
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_Object'
        '400':
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
  /{clientNamespace}/V1/Analytics/Datasets/{datasetId}:
    get:
      tags:
        - AnalyticsReports
      summary: Get Dataset
      description: "<h3>Description</h3>\r\n<p>The Get Dataset request allows the consuming application to retrieve the contents of a report's Dataset.</p>\r\n<p>Optional PGP Encryption : Please add <b>PGPKey</b> to the header to enable public encryption key for secure communication.</p>"
      operationId: AnalyticsReports_GetDatasetAsync_By_datasetId_page_DatasetPageSize_clientNamespace
      parameters:
        - name: datasetId
          in: path
          description: Uniquely identifies a dataset.
          required: true
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: string
        - name: DatasetPageSize
          in: query
          schema:
            type: string
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: Contents of a dataset
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_AnalyticsReportDataset'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_AnalyticsReportDataset'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_AnalyticsReportDataset'
        '204':
          description: The dataset is not available or empty
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_AnalyticsReportDataset'
              example: ''
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_AnalyticsReportDataset'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_AnalyticsReportDataset'
        '400':
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
    post:
      tags:
        - AnalyticsReports
      summary: Refresh Dataset
      description: "<h3>Description</h3>\r\n<p>The Refresh Dataset request allows the consuming application to refresh the contents of a report's Dataset.</p>"
      operationId: AnalyticsReports_RefreshDatasetAsync_By_reqBody_datasetId_isValidateOnly_clientNamespace
      parameters:
        - name: datasetId
          in: path
          description: Uniquely identifies a dataset.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: This parameter is applied here for testing purposes. Please remember to remove it when utilizing this endpoint to actually refresh the dataset
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnalyticsReportMetadata'
          text/json:
            schema:
              $ref: '#/components/schemas/AnalyticsReportMetadata'
          text/html:
            schema:
              $ref: '#/components/schemas/AnalyticsReportMetadata'
        required: true
      responses:
        '200':
          description: Status of a dataset refresh and its metadata
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_AnalyticsDatasetMetadataResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_AnalyticsDatasetMetadataResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_AnalyticsDatasetMetadataResponse'
        '204':
          description: The dataset has no content and is not available for a refresh
          content:
            application/json:
              example: ''
            text/json: {}
            text/html: {}
        '400':
          description: The guid provided is not a valid guid.
          content:
            application/json:
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json: {}
            text/html: {}
        '422':
          description: We were unable to refresh this dataset, but the original dataset is still available.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_AnalyticsDatasetMetadataResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_AnalyticsDatasetMetadataResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_AnalyticsDatasetMetadataResponse'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
  /{clientNamespace}/V1/Analytics/Reports/{reportId}:
    post:
      tags:
        - AnalyticsReports
      summary: Create Dataset
      description: "<h3>Description</h3>\r\n<p>The Create Dataset request allows the consuming application to trigger the creation of a dataset for the ad hoc report specified in this call.</p>"
      operationId: AnalyticsReports_CreateReportAsync_By_reqBody_reportId_isValidateOnly_clientNamespace
      parameters:
        - name: reportId
          in: path
          description: Uniquely identifies a report.
          required: true
          schema:
            type: integer
            format: int32
        - name: isValidateOnly
          in: query
          description: This parameter is applied here for testing purposes. Please remember to remove it when utilizing this endpoint to actually post the report
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnalyticsReportMetadata'
          text/json:
            schema:
              $ref: '#/components/schemas/AnalyticsReportMetadata'
          text/html:
            schema:
              $ref: '#/components/schemas/AnalyticsReportMetadata'
        required: true
      responses:
        '200':
          description: Metadata of a dataset
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_AnalyticsDatasetMetadata'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_AnalyticsDatasetMetadata'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_AnalyticsDatasetMetadata'
        '204':
          description: No report available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example: ''
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '400':
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
  /{clientNamespace}/V1/Analytics/Datasets/{datasetId}/Metadata:
    get:
      tags:
        - AnalyticsReports
      summary: Get Dataset Metadata
      description: "<h3>Description</h3>\r\n<p>The Get Dataset Metadata request allows the consuming application to retrieve the metadata (status and row) related to the report's dataset.</p>\r\n<p>\r\n                Note: “Refresh Status” is not displayed when the dataset has not been refreshed or during “Processing” or “Requested” statuses <br />\r\n                Note: “Row count” is not displayed during “Requested” status <br />\r\n                Note: “Filters” and “Parameters” are not displayed during “Processing” or “Requested” statuses <br /></p>"
      operationId: AnalyticsReports_GetDatasetMetadataAsync_By_datasetId_clientNamespace
      parameters:
        - name: datasetId
          in: path
          description: Uniquely identifies a dataset.
          required: true
          schema:
            type: string
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: Metadata of a dataset
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_AnalyticsDatasetMetadata'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_AnalyticsDatasetMetadata'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_AnalyticsDatasetMetadata'
        '204':
          description: The metadata is not available or empty
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example: ''
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '400':
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
  /{clientNamespace}/V1/Analytics/Reports/{reportId}/Metadata:
    get:
      tags:
        - AnalyticsReports
      summary: Get Report Metadata
      description: "<h3>Description</h3>\r\n<p>The Get Report Metadata request allows the consuming application to retrieve the metadata (fields, filters, etc.) of a report.</p>"
      operationId: AnalyticsReports_GetReportMetadata_By_reportId_clientNamespace
      parameters:
        - name: reportId
          in: path
          description: Uniquely identifies a report.
          required: true
          schema:
            type: integer
            format: int32
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: Metadata of the report
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_AnalyticsReportMetadata'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_AnalyticsReportMetadata'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_AnalyticsReportMetadata'
        '204':
          description: No metadata available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_AnalyticsReportMetadata'
              example: ''
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_AnalyticsReportMetadata'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_AnalyticsReportMetadata'
        '400':
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
  /{clientNamespace}/V1/Employees/{xRefCode}/SSOAccounts:
    get:
      tags:
        - AppUserSSO
      summary: GET AppUserSSO Details
      operationId: AppUserSSO_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: contextDate
          in: query
          description: 'The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: contextDateRangeFrom
          in: query
          description: 'The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: contextDateRangeTo
          in: query
          description: 'The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: The AppUserSSO with the requested XRefCode.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeSSOAccount'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeSSOAccount'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeSSOAccount'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
        - AppUserSSO
      summary: POST a AppUserSSO
      operationId: AppUserSSO_Post_By_ssoInfo_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeSSOAccount'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeSSOAccount'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeSSOAccount'
        required: true
      responses:
        '200':
          description: An Employee is created, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
        - AppUserSSO
      summary: PATCH a AppUserSSO
      operationId: AppUserSSO_Patch_By_ssoInfo_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeSSOAccount'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeSSOAccount'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeSSOAccount'
        required: true
      responses:
        '200':
          description: The AppUserSSO is updated, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{employeeXRefCode}/SSOAccounts/{loginName}:
    delete:
      tags:
        - AppUserSSO
      summary: Delete an SSOAccount entry that has matching {loginName}
      operationId: AppUserSSO_Delete_By_employeeXRefCode_loginName_isValidateOnly_clientNamespace
      parameters:
        - name: employeeXRefCode
          in: path
          description: "The unique identifier (external reference code) of the employee for whom the subordinate data will be deleted.\r\nThe value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned."
          required: true
          schema:
            type: string
        - name: loginName
          in: path
          description: The loginName of the SSOAccount to be deleted from this Employee
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, this operation is validated without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: An SSO Account is deleted for this Employee
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_SubordinateEntityReferences'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_SubordinateEntityReferences'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_SubordinateEntityReferences'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/Availability:
    get:
      tags:
        - Employees
      summary: GET List of Employee Availability
      operationId: Availability_Get_By_xRefCode_filterAvailabilityStartDate_filterAvailabilityEndDate_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee to be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: filterAvailabilityStartDate
          in: query
          description: 'Inclusive period start date to determine which employee availability data to retrieve . Example: 2017-01-01T00:00:00'
          required: true
          schema:
            type: string
            format: date-time
        - name: filterAvailabilityEndDate
          in: query
          description: 'Inclusive period end date to determine which employee availability data to retrieve . Example: 2017-01-01T00:00:00'
          required: true
          schema:
            type: string
            format: date-time
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: A collection of employee availability meeting the search criteria.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeAvailability'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeAvailability'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeAvailability'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
  /{clientNamespace}/V1/{employeeXRefCode}/EmployeeAvailability:
    post:
      tags:
        - Availability
      summary: Post Employee Availablity
      operationId: Availability_Post_By_employeeXRefCode_employeeAvailability_isValidateOnly_clientNamespace
      parameters:
        - name: employeeXRefCode
          in: path
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST operation validates the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeAvailabilityPostAPIRequestDTO'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeAvailabilityPostAPIRequestDTO'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeAvailabilityPostAPIRequestDTO'
        required: true
      responses:
        '200':
          description: OK response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_ProcessResult'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_ProcessResult'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_ProcessResult'
        '400':
          description: Request is malformed or has validation errors.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
  /{clientNamespace}/V1/BackgroundJobLogs:
    get:
      tags:
        - BackgroundJobLogs
      summary: GET List of Background Job Logs
      operationId: BackgroundJobLog_Get_By_pageSize_codeName_status_hasItemLevelErrors_queueTimeUtcStart_queueTimeUtcEnd_wasScheduled_submittedBy_filterUpdateTimeUtcStart_filterUpdateTimeUtcEnd_includeSuppressedTaskTypes_clientNamespace
      parameters:
        - name: pageSize
          in: query
          description: Use to specify the number of records returned per page in the paginated response. This value will be constrained to be between 1 and 10,000 (default is 1,000).
          schema:
            type: integer
            format: int32
        - name: codeName
          in: query
          description: Use to search for background job logs using a comma separated list of code names. If omitted, all job code names are included.
          schema:
            type: string
        - name: status
          in: query
          description: 'Use to search for background job logs by job status. If omitted, all job statuses are included. Accepted values: Queued, In Progress, Paused, Completed, Cancelled, Error.'
          schema:
            type: string
        - name: hasItemLevelErrors
          in: query
          description: 'Use to search for background job logs with item-level errors. If omitted, both logs with and without item level errors are included. Accepted values: True, False'
          schema:
            type: boolean
        - name: queueTimeUtcStart
          in: query
          description: 'The beginning date/time used when searching for logs that were queued in a specified time frame. When a value is provided for this parameter, a queueTimeUtcEnd value must also be provided.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: queueTimeUtcEnd
          in: query
          description: 'The ending date/time used when searching for logs that were queued in a specified time frame. When a value is provided for this parameter, a queueTimeUtcStart value must also be provided.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: wasScheduled
          in: query
          description: 'Use to search for background job logs that were scheduled or ran on-demand. If omitted, logs for both scheduled and on-demand background jobs are included.  Accepted values: True, False'
          schema:
            type: boolean
        - name: submittedBy
          in: query
          description: Use to search for background job logs that were manually submitted by a specified user. If omitted, all job submitters including the System are included.
          schema:
            type: string
        - name: filterUpdateTimeUtcStart
          in: query
          description: 'The beginning date/time used when searching for background job logs with updates in a specified time frame. When a value is provided for this parameter, a filterUpdateTimeUtcEnd value must also be provided.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: filterUpdateTimeUtcEnd
          in: query
          description: 'The ending date/time used when searching for background job logs with updates in a specified time frame. When a value is provided for this parameter, a filterUpdateTimeUtcStart value must also be provided.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: includeSuppressedTaskTypes
          in: query
          description: 'Used to specify whether commonly suppressed background jobs should be included in the filtered results.  Accepted values: True, False.  Defaults to False.'
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: A collection of background job logs meeting the search criteria. Parameters, JobInformation, ErrorInformation, DebugInformation and FileList fields are not retrieved with this call.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayload_IEnumerable_BackgroundJobLog'
            text/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayload_IEnumerable_BackgroundJobLog'
            text/html:
              schema:
                $ref: '#/components/schemas/PaginatedPayload_IEnumerable_BackgroundJobLog'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '403':
          description: User does not have access.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
  /{clientNamespace}/V1/BackgroundJobLogs/{backgroundJobLogId}:
    get:
      tags:
        - BackgroundJobLogs
      summary: GET Details of a Background Job Log based on backgroundLogId
      operationId: BackgroundJobLog_Get_By_backgroundJobLogId_clientNamespace
      parameters:
        - name: backgroundJobLogId
          in: path
          description: The identifier of the background job log to retrieve further information.
          required: true
          schema:
            type: string
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: A background job log that meets the search criteria.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_BackgroundJobLog'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_BackgroundJobLog'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_BackgroundJobLog'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '403':
          description: User does not have access.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
  /{clientNamespace}/V1/BackgroundScreening/Status:
    patch:
      tags:
        - BackgroundScreening
      summary: PATCH (Update) a Background Screening Status for a specific candidate.
      operationId: BackgroundScreening_PatchStatus_By_backgroundScreeningStatus_isValidateOnly_clientNamespace
      parameters:
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The Json payload containing an event and the new status.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BackgroundScreeningStatus'
          text/json:
            schema:
              $ref: '#/components/schemas/BackgroundScreeningStatus'
          text/html:
            schema:
              $ref: '#/components/schemas/BackgroundScreeningStatus'
        required: true
      responses:
        '200':
          description: The Background Screening request is updated, no response body.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundScreeningStatus'
            text/json:
              schema:
                $ref: '#/components/schemas/BackgroundScreeningStatus'
            text/html:
              schema:
                $ref: '#/components/schemas/BackgroundScreeningStatus'
        '400':
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json: {}
            text/html: {}
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json: {}
            text/html: {}
  /{clientNamespace}/V1/BackgroundScreening/AdjudicationStatus:
    patch:
      tags:
        - BackgroundScreening
      summary: PATCH (Update) a Background Screening Adjudication Status for a specific candidate.
      operationId: BackgroundScreening_PatchAdjudicationStatus_By_backgroundScreeningAdjudicationStatus_isValidateOnly_clientNamespace
      parameters:
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The Json payload containing an event and the new adjudication status.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BackgroundScreeningAdjudicationStatus'
          text/json:
            schema:
              $ref: '#/components/schemas/BackgroundScreeningAdjudicationStatus'
          text/html:
            schema:
              $ref: '#/components/schemas/BackgroundScreeningAdjudicationStatus'
        required: true
      responses:
        '200':
          description: The Background Screening request is updated, no response body.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundScreeningAdjudicationStatus'
            text/json:
              schema:
                $ref: '#/components/schemas/BackgroundScreeningAdjudicationStatus'
            text/html:
              schema:
                $ref: '#/components/schemas/BackgroundScreeningAdjudicationStatus'
        '400':
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json: {}
            text/html: {}
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json: {}
            text/html: {}
  /{clientNamespace}/V1/BackgroundScreening/Package:
    post:
      tags:
        - BackgroundScreening
      summary: POST Background Screening Packages.
      operationId: BackgroundScreening_PostPackage_By_backgroundScreeningPackage_isValidateOnly_clientNamespace
      parameters:
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BackgroundScreeningPackage'
          text/json:
            schema:
              $ref: '#/components/schemas/BackgroundScreeningPackage'
          text/html:
            schema:
              $ref: '#/components/schemas/BackgroundScreeningPackage'
        required: true
      responses:
        '200':
          description: The Background Screening Packages are added, no response body.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BackgroundScreeningPackage'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BackgroundScreeningPackage'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BackgroundScreeningPackage'
        '400':
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json: {}
            text/html: {}
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json: {}
            text/html: {}
  /{clientNamespace}/V1/BackgroundScreening/BillingCode:
    post:
      tags:
        - BackgroundScreening
      summary: POST Background Screening Billing Codes.
      operationId: BackgroundScreening_PostBillingCode_By_backgroundScreeningBillingCode_isValidateOnly_clientNamespace
      parameters:
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BackgroundScreeningBillingCode'
          text/json:
            schema:
              $ref: '#/components/schemas/BackgroundScreeningBillingCode'
          text/html:
            schema:
              $ref: '#/components/schemas/BackgroundScreeningBillingCode'
        required: true
      responses:
        '200':
          description: The Background Screening Billing Codes are added, no response body.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BackgroundScreeningBillingCode'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BackgroundScreeningBillingCode'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BackgroundScreeningBillingCode'
        '400':
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json: {}
            text/html: {}
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json: {}
            text/html: {}
  /{clientNamespace}/V1/BackgroundScreening/ProviderStatuses:
    post:
      tags:
        - BackgroundScreening
      summary: POST Background Screening Provider Statuses.
      operationId: BackgroundScreening_PostScreeningStatuses_By_statusList_isValidateOnly_clientNamespace
      parameters:
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BackgroundScreeningProviderStatuses'
          text/json:
            schema:
              $ref: '#/components/schemas/BackgroundScreeningProviderStatuses'
          text/html:
            schema:
              $ref: '#/components/schemas/BackgroundScreeningProviderStatuses'
        required: true
      responses:
        '200':
          description: Custom Provider Statuses are added, no response body.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundScreeningProviderStatuses'
            text/json:
              schema:
                $ref: '#/components/schemas/BackgroundScreeningProviderStatuses'
            text/html:
              schema:
                $ref: '#/components/schemas/BackgroundScreeningProviderStatuses'
        '400':
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json: {}
            text/html: {}
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json: {}
            text/html: {}
  /{clientNamespace}/V1/BackgroundScreening:
    patch:
      tags:
        - BackgroundScreening
      summary: PATCH Background Screening Status, URL and Report containing PII
      operationId: BackgroundScreening_Patch_By_backgroundScreeningStatusUrlReport_isValidateOnly_clientNamespace
      parameters:
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The Json payload containing Status, Url and Report containing PII.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BackgroundScreeningStatusUrlReport'
          text/json:
            schema:
              $ref: '#/components/schemas/BackgroundScreeningStatusUrlReport'
          text/html:
            schema:
              $ref: '#/components/schemas/BackgroundScreeningStatusUrlReport'
        required: true
      responses:
        '200':
          description: The Background Screening Status, Url and Report containing PII are added, no response body.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BackgroundScreeningStatusUrlReport'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BackgroundScreeningStatusUrlReport'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BackgroundScreeningStatusUrlReport'
        '400':
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json: {}
            text/html: {}
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json: {}
            text/html: {}
  /{clientNamespace}/V1/BackgroundScreening/PersonalIdentifiableInformation:
    patch:
      tags:
        - BackgroundScreening
      summary: PATCH Background Screening Report containing Personal Identifiable Informations
      operationId: BackgroundScreening_PatchPII_By_backgroundScreeningReport_isValidateOnly_clientNamespace
      parameters:
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The Json payload with a Report containing Personal Identifiable Informations.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BackgroundScreeningReport'
          text/json:
            schema:
              $ref: '#/components/schemas/BackgroundScreeningReport'
          text/html:
            schema:
              $ref: '#/components/schemas/BackgroundScreeningReport'
        required: true
      responses:
        '200':
          description: The Background Screening Report containing Personal Identifiable Informations are added, no response body.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BackgroundScreeningReport'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BackgroundScreeningReport'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BackgroundScreeningReport'
        '400':
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json: {}
            text/html: {}
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json: {}
            text/html: {}
  /{clientNamespace}/V1/BenefitsCarrierFeedOngoingExports:
    get:
      tags:
        - BenefitsDFLinkExports
      summary: GET Benefits ongoing carrier feed export in JSON format
      operationId: BenefitsDFLinkExports_GetBenefitsDFLinkOngoingExport_By_carrierXRefCode_planStartDate_planEndDate_payrollEarningAccumulationXRefCodes_blackoutPeriodStartDate_lookBackDays_lookForwardDays_clientNamespace
      parameters:
        - name: carrierXRefCode
          in: query
          description: A reference code that maps to a given carrier.
          required: true
          schema:
            type: string
        - name: planStartDate
          in: query
          description: The plan start date.
          required: true
          schema:
            type: string
            format: date-time
        - name: planEndDate
          in: query
          description: The plan end date.
          required: true
          schema:
            type: string
            format: date-time
        - name: payrollEarningAccumulationXRefCodes
          in: query
          description: A comma delimited list of reference codes, mapping to a list of individual payroll earning accumulations.
          schema:
            type: string
        - name: blackoutPeriodStartDate
          in: query
          description: If applicable, the blackout period start date.
          schema:
            type: string
            format: date-time
        - name: lookBackDays
          in: query
          description: The number of days the export will look back from execution date to find employee elections.
          schema:
            type: integer
            format: int32
        - name: lookForwardDays
          in: query
          description: The number of days the export will look forward from execution date to find employee elections.
          schema:
            type: integer
            format: int32
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: The CarrierFeeds model in json format.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_CarrierFeeds'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_CarrierFeeds'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_CarrierFeeds'
        '400':
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
  /{clientNamespace}/V1/BenefitsCarrierFeedOpenEnrollmentExports:
    get:
      tags:
        - BenefitsDFLinkExports
      summary: GET Benefits open enrollment carrier feed export in JSON format
      operationId: BenefitsDFLinkExports_GetBenefitsDFLinkOpenEnrollmentExport_By_carrierXRefCode_planStartDate_planEndDate_payrollEarningAccumulationXRefCodes_clientNamespace
      parameters:
        - name: carrierXRefCode
          in: query
          description: A reference code that maps to a given carrier.
          required: true
          schema:
            type: string
        - name: planStartDate
          in: query
          description: The plan start date.
          required: true
          schema:
            type: string
            format: date-time
        - name: planEndDate
          in: query
          description: The plan end date.
          schema:
            type: string
            format: date-time
        - name: payrollEarningAccumulationXRefCodes
          in: query
          description: A comma delimited list of reference codes, mapping to a list of individual payroll earning accumulations.
          schema:
            type: string
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: The CarrierFeeds model in json format.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_CarrierFeeds'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_CarrierFeeds'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_CarrierFeeds'
        '400':
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
  /{clientNamespace}/V1/BenefitsCarrierFeedMultiCarrierOngoingExports:
    get:
      tags:
        - BenefitsDFLinkMultiCarrierExports
      summary: GET Benefits multi carrier ongoing carrier feed export in JSON format
      operationId: BenefitsDFLinkMultiCarrierExports_GetBenefitsDFLinkMultiCarrierOngoingExport_By_carrierXRefCodes_planStartDate_planEndDate_payrollEarningAccumulationXRefCodes_blackoutPeriodStartDate_lookBackDays_lookForwardDays_clientNamespace
      parameters:
        - name: carrierXRefCodes
          in: query
          description: A comma delimited list of reference codes, mapping to a list of individual carriers.
          required: true
          schema:
            type: string
        - name: planStartDate
          in: query
          description: The plan start date.
          required: true
          schema:
            type: string
            format: date-time
        - name: planEndDate
          in: query
          description: The plan end date.
          required: true
          schema:
            type: string
            format: date-time
        - name: payrollEarningAccumulationXRefCodes
          in: query
          description: A comma delimited list of reference codes, mapping to a list of individual payroll earning accumulations.
          schema:
            type: string
        - name: blackoutPeriodStartDate
          in: query
          description: If applicable, the blackout period start date.
          schema:
            type: string
            format: date-time
        - name: lookBackDays
          in: query
          description: The number of days the export will look back from execution date to find employee elections.
          schema:
            type: integer
            format: int32
        - name: lookForwardDays
          in: query
          description: The number of days the export will look forward from execution date to find employee elections.
          schema:
            type: integer
            format: int32
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: The CarrierFeeds model in json format.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_CarrierFeeds'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_CarrierFeeds'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_CarrierFeeds'
        '400':
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
  /{clientNamespace}/V1/BenefitsCarrierFeedMultiCarrierOpenEnrollmentExports:
    get:
      tags:
        - BenefitsDFLinkMultiCarrierExports
      summary: GET Benefits multi carrier open enrollment carrier feed export in JSON format
      operationId: BenefitsDFLinkMultiCarrierExports_GetBenefitsDFLinkMultiCarrierOpenEnrollmentExport_By_carrierXRefCodes_planStartDate_planEndDate_payrollEarningAccumulationXRefCodes_clientNamespace
      parameters:
        - name: carrierXRefCodes
          in: query
          description: A comma delimited list of reference codes, mapping to a list of individual carriers.
          required: true
          schema:
            type: string
        - name: planStartDate
          in: query
          description: The plan start date.
          required: true
          schema:
            type: string
            format: date-time
        - name: planEndDate
          in: query
          description: The plan end date.
          schema:
            type: string
            format: date-time
        - name: payrollEarningAccumulationXRefCodes
          in: query
          description: A comma delimited list of reference codes, mapping to a list of individual payroll earning accumulations.
          schema:
            type: string
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: The CarrierFeeds model in json format.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_CarrierFeeds'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_CarrierFeeds'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_CarrierFeeds'
        '400':
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
  /{clientNamespace}/V1/CandidateSourcing:
    post:
      tags:
        - CandidateSourcing
      summary: POST a Candidate Application and/or a Candidate Profile
      operationId: CandidateSourcing_Post_By_model_isValidateOnly_clientNamespace
      parameters:
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, this will validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The Json payload containing candidate and application details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobPostingApplicantModel'
          text/json:
            schema:
              $ref: '#/components/schemas/JobPostingApplicantModel'
          text/html:
            schema:
              $ref: '#/components/schemas/JobPostingApplicantModel'
        required: true
      responses:
        '200':
          description: Candidate profile/application have been accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
            text/json:
              schema:
                $ref: '#/components/schemas/response'
            text/html:
              schema:
                $ref: '#/components/schemas/response'
        '400':
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json: {}
            text/html: {}
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json: {}
            text/html: {}
  /{clientNamespace}/V1/JobPostingQuestionnaires:
    get:
      tags:
        - CandidateSourcing
      summary: GET Job Posting Questionnaires
      operationId: CandidateSourcing_Get_By_jobPostingId_cultureId_clientNamespace
      parameters:
        - name: jobPostingId
          in: query
          description: The job posting id
          required: true
          schema:
            type: integer
            format: int32
        - name: cultureId
          in: query
          description: The culture id to determine the language screening questions
          required: true
          schema:
            type: integer
            format: int32
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: A collection of questionnaires for a particular job posting. Each questionnaire section is separated by a page break object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_QuestionModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_QuestionModel'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_QuestionModel'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json: {}
            text/html: {}
  /{clientNamespace}/V1/CandidateApplicationStatuses:
    get:
      tags:
        - CandidateSourcing
      summary: GET Candidate Application Statuses
      operationId: CandidateSourcing_Get_By_clientNamespace
      parameters:
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: A collection of candidate application statuses for all job applications sent by the provider calling this endpoint. Once the latest unsent application statuses are provided via this endpoint, no further data will be provided on subsequent calls unless further application status updates have been made. This endpoint will return application statuses in tranches of up to 1000 statuses per call and will continue to do so for subsequent calls until all unsent statuses have been provided.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_CandidateApplicationStatusUpdatesPaginationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_CandidateApplicationStatusUpdatesPaginationModel'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_CandidateApplicationStatusUpdatesPaginationModel'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json: {}
            text/html: {}
  /{clientNamespace}/V1/JobPostings:
    get:
      tags:
        - CandidateSourcing
      summary: GET Job Postings
      operationId: CandidateSourcing_Get_By_companyName_parentCompanyName_internalJobBoardCode_includeActivePostingOnly_lastUpdateTimeFrom_lastUpdateTimeTo_datePostedFrom_datePostedTo_htmlDescription_clientNamespace
      parameters:
        - name: companyName
          in: query
          description: 'Company name. Example: XYZ Co.'
          schema:
            type: string
        - name: parentCompanyName
          in: query
          description: 'Parent Company name. Example: Ceridian'
          schema:
            type: string
        - name: internalJobBoardCode
          in: query
          description: 'XRefCode of Job Board. Example: CANDIDATEPORTAL'
          schema:
            type: string
        - name: includeActivePostingOnly
          in: query
          description: 'If true, then exclude inactive postings from the result. If False, then the ''Last Update Time From'' and ''Last Update Time To'' parameters are required and the range specified between the ''Last Update Time From'' and ''Last Update Time To'' parameters must not be larger than 1 month. Example: True'
          schema:
            type: boolean
        - name: lastUpdateTimeFrom
          in: query
          description: 'A starting timestamp of last updated job posting. Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: lastUpdateTimeTo
          in: query
          description: 'An ending timestamp of last updated job posting. Example: 2017-02-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: datePostedFrom
          in: query
          description: 'A starting timestamp of job posting date. Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: datePostedTo
          in: query
          description: 'An ending timestamp of job posting date. Example: 2017-02-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: htmlDescription
          in: query
          description: A flag to feed the jobs over with html formatting or plain text description
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: A collection of all active external job postings (i.e. public facing job postings) based on specified filter parameters. Each job posting included in the response also includes URLs for Candidate Sourcing and Apply endpoints. Users with access to the Candidate Sourcing and Apply feature should use this endpoint for obtaining job postings rather than GET JobFeeds.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_JobFeed'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_JobFeed'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_JobFeed'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json: {}
            text/html: {}
  /{clientNamespace}/V1/Certifications:
    get:
      tags:
        - Certification
      summary: GET the list of all certifications
      operationId: Certification_Get_By_pageSize_xRefCode_clientNamespace
      parameters:
        - name: pageSize
          in: query
          description: The page size for the pagination (Default is 1000)
          schema:
            type: integer
            format: int32
        - name: xRefCode
          in: query
          description: The xrefcode filter for the certifications
          schema:
            type: string
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: A collection of certifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayload_IEnumerable_LMSCertification'
            text/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayload_IEnumerable_LMSCertification'
            text/html:
              schema:
                $ref: '#/components/schemas/PaginatedPayload_IEnumerable_LMSCertification'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
        - Certification
      summary: POST one certification
      operationId: Certification_Post_By_certification_isValidateOnly_clientNamespace
      parameters:
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST operation validate the request without applying the changes to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The certification payload that will be used for certification creation
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LMSCertification'
          text/json:
            schema:
              $ref: '#/components/schemas/LMSCertification'
          text/html:
            schema:
              $ref: '#/components/schemas/LMSCertification'
        required: true
      responses:
        '200':
          description: A certification is created, no response body
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
        - Certification
      summary: PATCH one certification
      operationId: Certification_Patch_By_certification_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: query
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST operation validate the request without applying the changes to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The certification payload that will be used for certification modification
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LMSCertification'
          text/json:
            schema:
              $ref: '#/components/schemas/LMSCertification'
          text/html:
            schema:
              $ref: '#/components/schemas/LMSCertification'
        required: true
      responses:
        '200':
          description: A certification is updated, no response body
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/ClientMetadata:
    get:
      tags:
        - ClientMetadata
      summary: GET Client Metadata
      operationId: ClientMetadata_GetAsync_By_clientNamespace
      parameters:
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: Returns client metadata.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientMetadata'
            text/json:
              schema:
                $ref: '#/components/schemas/ClientMetadata'
            text/html:
              schema:
                $ref: '#/components/schemas/ClientMetadata'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
  /{clientNamespace}/V1/ClientPayrollCountry:
    get:
      tags:
        - ClientPayrollCountry
      summary: GET client payroll countries.
      operationId: ClientPayrollCountry_Get_By_countryCodes_hcmPayroll_connectedPay_payGroup_clientNamespace
      parameters:
        - name: countryCodes
          in: query
          description: Comma separated list of country codes to filter the results.
          schema:
            type: string
        - name: hcmPayroll
          in: query
          description: Flag to filter countries for HCM Payroll.
          schema:
            type: boolean
        - name: connectedPay
          in: query
          description: Flag to filter countries for Connected Pay.
          schema:
            type: boolean
        - name: payGroup
          in: query
          description: Flag to filter countries having pay group(s).
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: Client Payroll Countries.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_ClientPayrollCountry'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_ClientPayrollCountry'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_ClientPayrollCountry'
        '400':
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
        - ClientPayrollCountry
      summary: POST Client Payroll Country.
      operationId: ClientPayrollCountry_Post_By_clientPayrollCountries_isValidateOnly_clientNamespace
      parameters:
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying the updates to the database.  The default value is FALSE if parameter is not specified.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations. For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ClientPayrollCountryUpdate'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ClientPayrollCountryUpdate'
          text/html:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ClientPayrollCountryUpdate'
        required: true
      responses:
        '200':
          description: The ClientPayrollCountry has been added successfully, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
        - ClientPayrollCountry
      summary: PATCH Client Payroll Country.
      operationId: ClientPayrollCountry_Patch_By_clientPayrollCountryUpdate_isValidateOnly_clientNamespace
      parameters:
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying the updates to the database.  The default value is FALSE if parameter is not specified.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations. For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ClientPayrollCountryUpdate'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ClientPayrollCountryUpdate'
          text/html:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ClientPayrollCountryUpdate'
        required: true
      responses:
        '200':
          description: ClientPayrollCountry has been updated successfully, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/ContactInformationTypes:
    get:
      tags:
        - ContactInformationTypes
      summary: GET a List of ContactInformationTypes
      operationId: ContactInformationTypes_Get_By_clientNamespace
      parameters:
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: A collection of ContactInformationType XRefCodes.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_ContactInformationType'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_ContactInformationType'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_ContactInformationType'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/ContactInformationTypes/{xrefCode}:
    get:
      tags:
        - ContactInformationTypes
      summary: GET a ContactInformationType with the requested XRefCode.
      operationId: ContactInformationTypes_Get_By_xrefCode_clientNamespace
      parameters:
        - name: xrefCode
          in: path
          required: true
          schema:
            type: string
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: The ContactInformationType with the requested XRefCode.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_ContactInformationType'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_ContactInformationType'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_ContactInformationType'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Courses:
    get:
      tags:
        - Courses
      summary: GET the list of all courses
      operationId: Courses_Get_By_pageSize_courseType_courseProvider_xRefCode_clientNamespace
      parameters:
        - name: pageSize
          in: query
          description: The page size for the pagination (Default is 1000)
          schema:
            type: integer
            format: int32
        - name: courseType
          in: query
          description: The course type filter for the courses
          schema:
            type: string
        - name: courseProvider
          in: query
          description: The course provider filter for the courses
          schema:
            type: string
        - name: xRefCode
          in: query
          description: The xrefcode filter for the courses
          schema:
            type: string
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: A collection of courses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayload_IEnumerable_Course'
            text/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayload_IEnumerable_Course'
            text/html:
              schema:
                $ref: '#/components/schemas/PaginatedPayload_IEnumerable_Course'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
        - Courses
      summary: POST one course
      operationId: Courses_Post_By_course_isValidateOnly_clientNamespace
      parameters:
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST operation validate the request without applying the changes to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The course payload that will be used for course creation
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Course'
          text/json:
            schema:
              $ref: '#/components/schemas/Course'
          text/html:
            schema:
              $ref: '#/components/schemas/Course'
        required: true
      responses:
        '200':
          description: A course is created, no response body
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
        - Courses
      summary: PATCH one course
      operationId: Courses_Patch_By_course_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: query
          description: The course payload that will be used for course creation
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST operation validate the request without applying the changes to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The course payload that will be used for course creation
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Course'
          text/json:
            schema:
              $ref: '#/components/schemas/Course'
          text/html:
            schema:
              $ref: '#/components/schemas/Course'
        required: true
      responses:
        '200':
          description: A course is updated, no response body
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Payroll/DataEntry/{payGroupXRefCode}/{entryType}:
    get:
      tags:
        - DataEntry
      summary: GET List of Data Entries.
      operationId: DataEntry_Get_By_payGroupXRefCode_entryType_periodStartDate_periodEndDate_payDate_ppn_orgUnitXRefCode_codeType_codeXRefCode_employeeXRefCode_projectXRefCodes_sinceLastModifiedTimestamp_source_pageSize_clientNamespace
      parameters:
        - name: payGroupXRefCode
          in: path
          description: The pay group reference code.
          required: true
          schema:
            type: string
        - name: entryType
          in: path
          description: The type of the data entry.
          required: true
          schema:
            type: string
        - name: periodStartDate
          in: query
          description: The pay run period start date.
          schema:
            type: string
            format: date-time
        - name: periodEndDate
          in: query
          description: The pay run period end date.
          schema:
            type: string
            format: date-time
        - name: payDate
          in: query
          description: The pay run pay date.
          schema:
            type: string
            format: date-time
        - name: ppn
          in: query
          description: 'The pay run''s pay period number (format: ##-##).'
          schema:
            type: string
        - name: orgUnitXRefCode
          in: query
          description: The user org unit reference code to load data entries from (in org unit hierarchy).
          schema:
            type: string
        - name: codeType
          in: query
          description: The type of the data entry codes.
          schema:
            type: string
        - name: codeXRefCode
          in: query
          description: The data entry code reference code.
          schema:
            type: string
        - name: employeeXRefCode
          in: query
          description: The employee reference code.
          schema:
            type: string
        - name: projectXRefCodes
          in: query
          description: The comma separated project reference codes.
          schema:
            type: string
        - name: sinceLastModifiedTimestamp
          in: query
          description: Last modified timestamp to load entries since.
          schema:
            type: string
            format: date-time
        - name: source
          in: query
          schema:
            type: string
        - name: pageSize
          in: query
          description: Number of records to be loaded.
          schema:
            type: integer
            format: int32
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: Payroll data entries.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayload_IEnumerable_DataEntry'
            text/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayload_IEnumerable_DataEntry'
            text/html:
              schema:
                $ref: '#/components/schemas/PaginatedPayload_IEnumerable_DataEntry'
        '204':
          description: No data entries available.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayload_IEnumerable_DataEntry'
            text/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayload_IEnumerable_DataEntry'
            text/html:
              schema:
                $ref: '#/components/schemas/PaginatedPayload_IEnumerable_DataEntry'
        '400':
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
  /{clientNamespace}/V1/DataPrivacy/PersonManagementHistory:
    get:
      tags:
        - DataPrivacy
      summary: Get a list of Person Management History
      operationId: DataPrivacy_PersonManagementHistory_By_pageSize_policy_personType_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
        - name: pageSize
          in: query
          description: The number of records returned per page in the paginated response
          schema:
            type: integer
            format: int32
        - name: policy
          in: query
          description: Person Management Policy Types such as HR, WFM, etc
          schema:
            type: string
        - name: personType
          in: query
          description: Can be either Employee or Candidate
          schema:
            type: string
        - name: contextDateRangeFrom
          in: query
          description: 'The Context Date Range From value is the start of the range of dates used to determine which Person Management History data to search when records have specific start and end dates.The service defaults to null if the requester does not specify a value.Example: 2017-01-01T13:24:56'
          schema:
            type: string
        - name: contextDateRangeTo
          in: query
          description: 'The Context Date Range To value is the end of the range of dates to determine which Person Management History data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: A collection of Person Management History.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayload_PersonManagementHistory'
            text/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayload_PersonManagementHistory'
            text/html:
              schema:
                $ref: '#/components/schemas/PaginatedPayload_PersonManagementHistory'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
  /{clientNamespace}/V1/DataPrivacy/PersonManagementExemptions:
    get:
      tags:
        - DataPrivacy
      summary: Get a list of Person Management Exemption
      operationId: DataPrivacy_PersonManagementExemptions_By_pageSize_number_personType_clientNamespace
      parameters:
        - name: pageSize
          in: query
          description: The number of records returned per page in the paginated response
          schema:
            type: integer
            format: int32
        - name: number
          in: query
          description: Represent the Employee number
          schema:
            type: string
        - name: personType
          in: query
          description: Can be either Employee or Candidate
          schema:
            type: string
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: A collection of Person Management Exemption.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayload_PersonManagementExemption'
            text/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayload_PersonManagementExemption'
            text/html:
              schema:
                $ref: '#/components/schemas/PaginatedPayload_PersonManagementExemption'
        '400':
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
  /{clientNamespace}/V1/DataPrivacy/PersonManagementEraseHistory:
    get:
      tags:
        - DataPrivacy
      summary: Get a list of Person Management Erase History
      operationId: DataPrivacy_PersonManagementEraseHistory_By_pageSize_personType_contextDateRangeFrom_contextDateRangeTo_requestId_clientNamespace
      parameters:
        - name: pageSize
          in: query
          description: The number of records returned per page in the paginated response
          schema:
            type: integer
            format: int32
        - name: personType
          in: query
          description: Can be either Employee or Candidate
          schema:
            type: string
        - name: contextDateRangeFrom
          in: query
          description: 'The Context Date Range From value is the start of the range of dates used to determine which user data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
        - name: contextDateRangeTo
          in: query
          description: 'The Context Date Range To value is the end of the range of dates to determine which user data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
        - name: requestId
          in: query
          description: The right to be forgotten request identifier. The value provided must be exact match; otherwise, a bad request (400) error will be returned.
          schema:
            type: integer
            format: int32
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: A collection of Person Management Erase History.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayload_PersonManagementEraseHistory'
            text/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayload_PersonManagementEraseHistory'
            text/html:
              schema:
                $ref: '#/components/schemas/PaginatedPayload_PersonManagementEraseHistory'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
  /{clientNamespace}/V1/DataPrivacy/PolicyAssociations:
    get:
      tags:
        - DataPrivacy
      summary: Get a List of Policy Associations
      operationId: DataPrivacy_PolicyAssociations_By_countryCodes_pageSize_personType_xRefCode_clientNamespace
      parameters:
        - name: countryCodes
          in: query
          description: The country codes to search policies for, if ommited all countries will be returned
          schema:
            type: string
        - name: pageSize
          in: query
          description: The number of records returned per page in the paginated response
          schema:
            type: integer
            format: int32
        - name: personType
          in: query
          description: Can be either Employee or Candidate
          schema:
            type: string
        - name: xRefCode
          in: query
          description: The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          schema:
            type: string
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: A collection of PolicyAssociation data meeting the search criteria.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayload_IEnumerable_PolicyAssociation'
            text/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayload_IEnumerable_PolicyAssociation'
            text/html:
              schema:
                $ref: '#/components/schemas/PaginatedPayload_IEnumerable_PolicyAssociation'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
  /{clientNamespace}/V1/DeductionDefinition:
    get:
      tags:
        - DeductionDefinition
      summary: Get List of Deduction Definitions.
      operationId: DeductionDefinition_Get_By_countryCodes_deductionXRefCodes_taxComplianceXRefCodes_taxTypeCodes_systemDeduction_clientNamespace
      parameters:
        - name: countryCodes
          in: query
          description: '&gt;List of country codes with comma separator to filter the result base on country.'
          schema:
            type: string
        - name: deductionXRefCodes
          in: query
          description: List of Deduction Reference Codes with comma separator to filter the result.
          schema:
            type: string
        - name: taxComplianceXRefCodes
          in: query
          description: List of Tax Compliance Reference Codes (DeductionCodeXRefCodes) with comma separator to filter the result.
          schema:
            type: string
        - name: taxTypeCodes
          in: query
          description: List of Tax Type Codes with comma separator to filter the result.
          schema:
            type: string
        - name: systemDeduction
          in: query
          description: Set to True to get only System Defined Deduction, or set to False to get only User Defined Deductions.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: List of Deduction Definitions and associated payees.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_DeductionDefinition'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_DeductionDefinition'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_DeductionDefinition'
        '400':
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Departments:
    get:
      tags:
        - Departments
      operationId: Departments_Get_By_clientNamespace
      parameters:
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: A collection of Department XRefCodes.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_Department'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_Department'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_Department'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
            text/json:
              schema:
                type: array
                items:
                  type: object
            text/html:
              schema:
                type: array
                items:
                  type: object
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
            text/json:
              schema:
                type: array
                items:
                  type: object
            text/html:
              schema:
                type: array
                items:
                  type: object
    post:
      tags:
        - Departments
      operationId: Departments_Post_By_department_isValidateOnly_clientNamespace
      parameters:
        - name: isValidateOnly
          in: query
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Department'
          text/json:
            schema:
              $ref: '#/components/schemas/Department'
          text/html:
            schema:
              $ref: '#/components/schemas/Department'
        required: true
      responses:
        '200':
          description: A Department is created, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
  /{clientNamespace}/V1/Departments/{xRefCode}:
    get:
      tags:
        - Departments
      operationId: Departments_Get_By_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: A Department XRefCode meets the search criteria.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Department'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Department'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Department'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
            text/json:
              schema:
                type: array
                items:
                  type: object
            text/html:
              schema:
                type: array
                items:
                  type: object
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
            text/json:
              schema:
                type: array
                items:
                  type: object
            text/html:
              schema:
                type: array
                items:
                  type: object
    patch:
      tags:
        - Departments
      operationId: Departments_Patch_By_department_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Department'
          text/json:
            schema:
              $ref: '#/components/schemas/Department'
          text/html:
            schema:
              $ref: '#/components/schemas/Department'
        required: true
      responses:
        '200':
          description: A Department is updated, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
  /{clientNamespace}/V1/Employees/{xRefCode}/DocumentManagementSecurityGroups:
    get:
      tags:
        - DocMgmtSecurityGroup
      summary: GET DocMgmtSecurityGroupUserMap Details
      operationId: DocMgmtSecurityGroup_Get_By_xRefCode_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: The DocMgmtSecurityGroupUserMap with the requested XRefCode.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeDocumentManagementSecurityGroup'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeDocumentManagementSecurityGroup'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeDocumentManagementSecurityGroup'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
        - DocMgmtSecurityGroup
      summary: POST a DocMgmtSecurityGroupUserMap
      operationId: DocMgmtSecurityGroup_Post_By_docMgmtSecurityGroupUserMap_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeDocumentManagementSecurityGroup'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeDocumentManagementSecurityGroup'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeDocumentManagementSecurityGroup'
        required: true
      responses:
        '200':
          description: The DocMgmtSecurityGroupUserMap is created, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
        - DocMgmtSecurityGroup
      summary: PATCH a DocMgmtSecurityGroupUserMap
      operationId: DocMgmtSecurityGroup_Patch_By_docMgmtSecurityGroupUserMap_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeDocumentManagementSecurityGroup'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeDocumentManagementSecurityGroup'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeDocumentManagementSecurityGroup'
        required: true
      responses:
        '200':
          description: The DocMgmtSecurityGroupUserMap is updated, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Documents:
    get:
      tags:
        - Documents
      summary: GET a List of Documents
      operationId: Documents_Get_By_employeeXRefCode_lastModifiedTimestampStart_lastModifiedTimestampEnd_entity_entityTypeXRefCode_documentTypeXRefCode_clientNamespace
      parameters:
        - name: employeeXRefCode
          in: query
          description: Filter for documents attached to the uniquely identified employee specified. Partial search is not supported, so provide the full value. Otherwise, a 400 error will be returned.
          schema:
            type: string
        - name: lastModifiedTimestampStart
          in: query
          description: Filter for documents starting from this date time value. The lastModifiedTimestampStart and lastModifiedTimestampEnd criteria require additional criteria to be specified.
          schema:
            type: string
            format: date-time
        - name: lastModifiedTimestampEnd
          in: query
          description: Filter for documents until this date time value. The lastModifiedTimestampStart and lastModifiedTimestampEnd criteria require additional criteria to be specified.
          schema:
            type: string
            format: date-time
        - name: entity
          in: query
          description: Filter documents attached to this specified entity. The entity and entityTypeXRefCode must both be provided to apply this filter criteria.
          schema:
            type: string
        - name: entityTypeXRefCode
          in: query
          description: 'Filter for documents associated with this specified Entity Type. The current Entity Types supported for filtering are: "BENEFIT_PLAN", "BENEFIT_PLAN_OPTION", "HR_POLICY", "PAY_RUN", "PAY_GROUP_CALENDAR", "EMPLOYEE_FILE". The entity and entityTypeXRefCode must both be provided to apply this filter criteria.'
          schema:
            type: string
        - name: documentTypeXRefCode
          in: query
          description: Filter for documents associated with this specified Document Type
          schema:
            type: string
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: Returns documents associated with the given criteria.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_Document'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_Document'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_Document'
        '400':
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '401':
          description: Invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
  /{clientNamespace}/V1/documents/{documentGuid}:
    get:
      tags:
        - Documents
      summary: GET Document Details
      operationId: Documents_Get_By_documentGuid_clientNamespace
      parameters:
        - name: documentGuid
          in: path
          description: Uniquely identifies the document you want to retrieve. Partial search is not supported, so provide the full value. Otherwise, a 400 error will be returned.
          required: true
          schema:
            type: string
            format: uuid
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: Returns the document identified by the documentGuid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_ArchiveDocument'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_ArchiveDocument'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_ArchiveDocument'
        '400':
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '401':
          description: Invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '404':
          description: Document is not accessible.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
  /{clientNamespace}/V1/Documents/Import/Queue:
    post:
      tags:
        - Documents
      summary: POST (Create) Queue Document Import task
      operationId: Documents_Import_By_documents_isValidateOnly_clientNamespace
      parameters:
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST operation validates the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the metadata entities and elements of document import to be processed in POST (queue task) operation.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/DocumentImportQueueRequest'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/DocumentImportQueueRequest'
          text/html:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/DocumentImportQueueRequest'
        required: true
      responses:
        '200':
          description: Document import queued.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_DocumentImportQueueResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_DocumentImportQueueResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_DocumentImportQueueResponse'
        '400':
          description: Request is malformed or has validation errors. Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '401':
          description: Invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
  /{clientNamespace}/V1/Documents/Upload:
    post:
      tags:
        - Documents
      summary: Upload one or more documents using a multipart request.
      description: "### Request body\r\nOne or more files must be attached to the request.\r\n\r\nMetadata JSON string must be provided.\r\n\r\nExample Value:\r\n```\r\n[\r\n    {\r\n        \"FileName\": \"string\",\r\n        \"Link\": \"string\",\r\n        \"DocumentTypeXRefCode\": \"string\",\r\n        \"EntityTypeXRefCode\": \"string\",\r\n        \"Entity\": \"string\",\r\n        \"EmployeeNumber\": \"string\",\r\n        \"Tags\": [\r\n            \"string\"\r\n        ],\r\n        \"Comment\": \"string\",\r\n        \"AdditionalData\": \"string\",\r\n        \"EmployeeXRefCode\": \"string\",\r\n        \"FileKey\": \"string\"\r\n    }\r\n]\r\n```"
      operationId: Documents_Upload_By_isValidateOnly_clientNamespace
      parameters:
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST operation validates the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: Document(s) processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocMgmtUploadResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/DocMgmtUploadResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/DocMgmtUploadResponse'
        '400':
          description: Request is malformed or has validation errors. Correct and resubmit.
          content:
            application/json:
              schema:
                type: object
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                type: object
            text/html:
              schema:
                type: object
        '401':
          description: Invalid authentication credentials.
          content:
            application/json:
              schema:
                type: object
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                type: object
            text/html:
              schema:
                type: object
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: object
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                type: object
            text/html:
              schema:
                type: object
  /{clientNamespace}/V1/EarningDefinition:
    get:
      tags:
        - EarningDefinition
      summary: GET List of Earning Definitions.
      operationId: EarningDefinition_Get_By_countryCodes_earningXRefCodes_taxComplianceXRefCodes_earningTypeXRefCodes_clientNamespace
      parameters:
        - name: countryCodes
          in: query
          description: List of country codes with comma separator to filter the result base on country.
          schema:
            type: string
        - name: earningXRefCodes
          in: query
          description: List of Earning Reference Codes with comma separator to filter the result.
          schema:
            type: string
        - name: taxComplianceXRefCodes
          in: query
          description: List of Tax Compliance Reference Codes (EarningCodeXRefCodes) with comma separator to filter the result.
          schema:
            type: string
        - name: earningTypeXRefCodes
          in: query
          description: List of Earning Type Reference Codes with comma separator to filter the result.
          schema:
            type: string
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: List of Earning Definitions and associated payees.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EarningDefinition'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EarningDefinition'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EarningDefinition'
        '400':
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/EarningStatementHeader:
    get:
      tags:
        - EarningStatement
      summary: GET Earning Statement Headers
      operationId: EarningStatement_Get_By_pageSize_payGroupXRefCode_payDate_payPeriodStartDate_payPeriodEndDate_ppn_employeeXRefCodes_employeeLastNames_employeePayDateBegin_employeePayDateEnd_clientNamespace
      parameters:
        - name: pageSize
          in: query
          description: The number of records returned per page in the paginated response
          schema:
            type: integer
            format: int32
        - name: payGroupXRefCode
          in: query
          description: The pay group's reference code.
          schema:
            type: string
        - name: payDate
          in: query
          description: 'The pay run''s pay date (format: yyyy-mm-dd).'
          schema:
            type: string
        - name: payPeriodStartDate
          in: query
          description: 'The pay run''s period start date (format: yyyy-mm-dd).'
          schema:
            type: string
        - name: payPeriodEndDate
          in: query
          description: 'The pay run''s period end date (format: yyyy-mm-dd).'
          schema:
            type: string
        - name: ppn
          in: query
          description: 'The PayPeriodNumber(format: ##-##).'
          schema:
            type: string
        - name: employeeXRefCodes
          in: query
          description: Comma delimited list of XRef codes for employees
          schema:
            type: string
        - name: employeeLastNames
          in: query
          description: Comma delimited list of last names for employees
          schema:
            type: string
        - name: employeePayDateBegin
          in: query
          description: 'The employee''s pay start date(format: yyyy-mm-dd).'
          schema:
            type: string
        - name: employeePayDateEnd
          in: query
          description: 'The employee''s pay end date(format: yyyy-mm-dd).'
          schema:
            type: string
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: An encrypted string which contains list of earning statement headers.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayload_EarningStatementHeader'
            text/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayload_EarningStatementHeader'
            text/html:
              schema:
                $ref: '#/components/schemas/PaginatedPayload_EarningStatementHeader'
        '400':
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/EarningStatement/{earningStatementXRefCode}:
    get:
      tags:
        - EarningStatement
      summary: GET Earning Statement Pdf
      operationId: EarningStatement_Get_By_employeeXRefCode_earningStatementXRefCode_clientNamespace
      parameters:
        - name: employeeXRefCode
          in: query
          description: Employee XRefCode.
          required: true
          schema:
            type: string
        - name: earningStatementXRefCode
          in: path
          description: Unique identifier for the Earning Statement.
          required: true
          schema:
            type: string
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: Earning statement document.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_List_EarningStatementDocument'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_List_EarningStatementDocument'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_List_EarningStatementDocument'
        '400':
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/EmergencyContacts:
    get:
      tags:
        - EmergencyContact
      summary: GET EmergencyContact Details
      operationId: EmergencyContact_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: contextDate
          in: query
          description: 'The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: contextDateRangeFrom
          in: query
          description: 'The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: contextDateRangeTo
          in: query
          description: 'The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: The emergency contacts of employee with the requested XRefCode.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeEmergencyContact'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeEmergencyContact'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeEmergencyContact'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
        - EmergencyContact
      summary: POST an EmergencyContact
      operationId: EmergencyContact_Post_By_emergencyContact_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeEmergencyContact'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeEmergencyContact'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeEmergencyContact'
        required: true
      responses:
        '200':
          description: An EmergencyContact is created, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
        - EmergencyContact
      summary: PATCH an EmergencyContact
      operationId: EmergencyContact_Patch_By_emergencyContact_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeEmergencyContact'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeEmergencyContact'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeEmergencyContact'
        required: true
      responses:
        '200':
          description: The EmergencyContact is updated, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/EmployeeAccidentInsurance/AccidentInsurance:
    get:
      tags:
        - EmployeeAccidentInsurance
      summary: GET DEUEmployeeAccidentInsurance Details
      operationId: EmployeeAccidentInsurance_Get_By_xRefCode_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: The DEUEmployeeAccidentInsurance with the requested XRefCode.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_DEUEmployeeAccidentInsurance'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_DEUEmployeeAccidentInsurance'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_DEUEmployeeAccidentInsurance'
        '400':
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
        - EmployeeAccidentInsurance
      summary: POST A dEUEmployeeAccidentInsurance
      operationId: EmployeeAccidentInsurance_Post_By_dEUEmployeeAccidentInsurance_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DEUEmployeeAccidentInsurance'
          text/json:
            schema:
              $ref: '#/components/schemas/DEUEmployeeAccidentInsurance'
          text/html:
            schema:
              $ref: '#/components/schemas/DEUEmployeeAccidentInsurance'
        required: true
      responses:
        '200':
          description: A DEUEmployeeAccidentInsurance is created, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
        - EmployeeAccidentInsurance
      summary: PATCH an DEUEmployeeAccidentInsurance
      operationId: EmployeeAccidentInsurance_Patch_By_dEUEmployeeAccidentInsurance_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DEUEmployeeAccidentInsurance'
          text/json:
            schema:
              $ref: '#/components/schemas/DEUEmployeeAccidentInsurance'
          text/html:
            schema:
              $ref: '#/components/schemas/DEUEmployeeAccidentInsurance'
        required: true
      responses:
        '200':
          description: The dEUEmployeeAccidentInsurance is updated, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/EmployeeAssignedSexAndGenderIdentity:
    get:
      tags:
        - EmployeeAssignedSexAndGenderIdentity
      summary: GET EmployeeAssignedSexAndGenderIdentity Details
      operationId: EmployeeAssignedSexAndGenderIdentity_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: contextDate
          in: query
          description: 'The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: contextDateRangeFrom
          in: query
          description: 'The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: contextDateRangeTo
          in: query
          description: 'The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: The EmployeeAssignedSexAndGenderIdentity with the requested XRefCode.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeAssignedSexAndGenderIdentity'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeAssignedSexAndGenderIdentity'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeAssignedSexAndGenderIdentity'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
        - EmployeeAssignedSexAndGenderIdentity
      summary: POST a EmployeeAssignedSexAndGenderIdentity
      operationId: EmployeeAssignedSexAndGenderIdentity_Post_By_employeeAssignedSexAndGenderIdentity_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeAssignedSexAndGenderIdentity'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeAssignedSexAndGenderIdentity'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeAssignedSexAndGenderIdentity'
        required: true
      responses:
        '200':
          description: The EmployeeAssignedSexAndGenderIdentity is created, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
        - EmployeeAssignedSexAndGenderIdentity
      summary: PATCH a EmployeeAssignedSexAndGenderIdentity
      operationId: EmployeeAssignedSexAndGenderIdentity_Patch_By_employeeAssignedSexAndGenderIdentity_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeAssignedSexAndGenderIdentity'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeAssignedSexAndGenderIdentity'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeAssignedSexAndGenderIdentity'
        required: true
      responses:
        '200':
          description: The EmployeeAssignedSexAndGenderIdentity is updated, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/AUSFederalTaxes:
    get:
      tags:
        - EmployeeAUSFederalTax
      summary: GET EmployeeAUSFederalTax Details
      operationId: EmployeeAUSFederalTax_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: contextDate
          in: query
          description: 'The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: contextDateRangeFrom
          in: query
          description: 'The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: contextDateRangeTo
          in: query
          description: 'The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: The EmployeeAUSFederalTax with the requested XRefCode.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeAUSFederalTax'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeAUSFederalTax'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeAUSFederalTax'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
        - EmployeeAUSFederalTax
      summary: POST a EmployeeAUSFederalTax
      operationId: EmployeeAUSFederalTax_Post_By_employeeAUSFederalTax_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeAUSFederalTax'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeAUSFederalTax'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeAUSFederalTax'
        required: true
      responses:
        '200':
          description: An EmployeeAUSFederalTax is created, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
        - EmployeeAUSFederalTax
      summary: PATCH a EmployeeAUSFederalTax
      operationId: EmployeeAUSFederalTax_Patch_By_employeeAUSFederalTax_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeAUSFederalTax'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeAUSFederalTax'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeAUSFederalTax'
        required: true
      responses:
        '200':
          description: The EmployeeAUSFederalTax is updated, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/AUSSuperannuation:
    get:
      tags:
        - EmployeeAUSSuperannuation
      summary: GET Employee superannuation details for Australia
      operationId: EmployeeAUSSuperannuation_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: contextDate
          in: query
          description: 'The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: contextDateRangeFrom
          in: query
          description: 'The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: contextDateRangeTo
          in: query
          description: 'The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: The employee superannuation details for Australia by requested XRefCode.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeAUSSuperannuation'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeAUSSuperannuation'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeAUSSuperannuation'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/AUSSuperannuationRules:
    get:
      tags:
        - EmployeeAUSSuperannuationRules
      summary: GET Employee superannuation rules for Australia
      operationId: EmployeeAUSSuperannuationRules_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: contextDate
          in: query
          description: 'The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: contextDateRangeFrom
          in: query
          description: 'The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: contextDateRangeTo
          in: query
          description: 'The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: The employee superannuation rules for Australia by requested XRefCode.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeAUSSuperannuationRules'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeAUSSuperannuationRules'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeAUSSuperannuationRules'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/AuthorizationAssignments:
    get:
      tags:
        - EmployeeAuthorizationAssignment
      summary: GET Employee's Authorization Assignment Details
      operationId: EmployeeAuthorizationAssignment_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: contextDate
          in: query
          description: 'The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: contextDateRangeFrom
          in: query
          description: 'The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: contextDateRangeTo
          in: query
          description: 'The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: The EmployeeAuthorizationAssignments with the requested XRefCode.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_AuthorizationAssignment'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_AuthorizationAssignment'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_AuthorizationAssignment'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
        - EmployeeAuthorizationAssignment
      summary: POST an AuthorizationAssignment
      operationId: EmployeeAuthorizationAssignment_Post_By_employeeAuthorityTypeAssignment_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorizationAssignment'
          text/json:
            schema:
              $ref: '#/components/schemas/AuthorizationAssignment'
          text/html:
            schema:
              $ref: '#/components/schemas/AuthorizationAssignment'
        required: true
      responses:
        '200':
          description: An AuthorizationAssignment is created, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
        - EmployeeAuthorizationAssignment
      summary: PATCH an AuthorizationAssignment
      operationId: EmployeeAuthorizationAssignment_Patch_By_employeeAuthorityTypeAssignment_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorizationAssignment'
          text/json:
            schema:
              $ref: '#/components/schemas/AuthorizationAssignment'
          text/html:
            schema:
              $ref: '#/components/schemas/AuthorizationAssignment'
        required: true
      responses:
        '200':
          description: The AuthorizationAssignment is updated, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/Badges:
    get:
      tags:
        - EmployeeBadge
      summary: GET EmployeeBadge Details
      operationId: EmployeeBadge_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: contextDate
          in: query
          description: 'The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: contextDateRangeFrom
          in: query
          description: 'The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: contextDateRangeTo
          in: query
          description: 'The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: The EmployeeBadge with the requested XRefCode.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeBadge'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeBadge'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeBadge'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
        - EmployeeBadge
      summary: POST a EmployeeBadge
      operationId: EmployeeBadge_Post_By_employeeBadge_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeBadge'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeBadge'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeBadge'
        required: true
      responses:
        '200':
          description: An EmployeeBadge is created, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
        - EmployeeBadge
      summary: PATCH a EmployeeBadge
      operationId: EmployeeBadge_Patch_By_employeeBadge_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeBadge'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeBadge'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeBadge'
        required: true
      responses:
        '200':
          description: The EmployeeBadge is updated, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/EmployeeBalancePeriods:
    get:
      tags:
        - EmployeeBalancePeriods
      summary: Get a list of Employee Balance Periods
      operationId: EmployeeBalancePeriods_Get_By_employeeXRefCode_asOfDate_startDate_endDate_clientNamespace
      parameters:
        - name: employeeXRefCode
          in: query
          description: A case-sensitive field that identifies a unique employee.
          required: true
          schema:
            type: string
        - name: asOfDate
          in: query
          description: 'The date as of which to calculate the current values for the employee balance periods returned. If omitted, current values will be calculated as of today. Example: 2020-01-01T00:00:00'
          schema:
            type: string
            format: date-time
        - name: startDate
          in: query
          description: 'Period start date to determine which employee balance periods to retrieve. If omitted, today''s date will be used. Example: 2020-01-01T00:00:00'
          schema:
            type: string
            format: date-time
        - name: endDate
          in: query
          description: 'Period end date to determine which employee balance periods to retrieve. If omitted, the period start date will be used. If the period start date is also omitted, today''s date will be used. Example: 2020-01-01T00:00:00'
          schema:
            type: string
            format: date-time
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: A collection of employee balance periods meeting the search criteria.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeBalancePeriod'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeBalancePeriod'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeBalancePeriod'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
  /{clientNamespace}/V1/EmployeeBalanceTransactions:
    get:
      tags:
        - EmployeeBalanceTransactions
      summary: Get a list of Employee Balance Transactions grouped by their employee balance periods
      operationId: EmployeeBalanceTransactions_Get_By_employeeXRefCode_balanceXRefCode_startDate_endDate_clientNamespace
      parameters:
        - name: employeeXRefCode
          in: query
          description: A case-sensitive field that identifies a unique employee.
          required: true
          schema:
            type: string
        - name: balanceXRefCode
          in: query
          description: A case-sensitive field that identifies a unique balance.
          required: true
          schema:
            type: string
        - name: startDate
          in: query
          description: 'Period start date to determine which employee balance periods to retrieve. If omitted, today''s date will be used. Example: 2020-01-01T00:00:00'
          schema:
            type: string
            format: date-time
        - name: endDate
          in: query
          description: 'Period end date to determine which employee balance periods to retrieve. If omitted, the period start date will be used. If the period start date is also omitted, today''s date will be used. Example: 2020-01-01T00:00:00'
          schema:
            type: string
            format: date-time
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: A collection of employee balance transactions grouped by their employee balance periods meeting the search criteria.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeBalanceTransactions'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeBalanceTransactions'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeBalanceTransactions'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
    post:
      tags:
        - EmployeeBalanceTransactions
      summary: POST (Create) Employee Balance Transaction
      operationId: EmployeeBalanceTransactions_Post_By_employeeBalanceTransaction_isValidateOnly_clientNamespace
      parameters:
        - name: isValidateOnly
          in: query
          description: ''
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST operation.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeBalanceTransactionForSubmit'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeBalanceTransactionForSubmit'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeBalanceTransactionForSubmit'
        required: true
      responses:
        '200':
          description: An employee balance transaction is created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeBalanceTransactionPostResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/EmployeeBalanceTransactionPostResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/EmployeeBalanceTransactionPostResponse'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
    patch:
      tags:
        - EmployeeBalanceTransactions
      summary: PATCH (Modify) Employee Balance Transaction
      operationId: EmployeeBalanceTransactions_Patch_By_employeeBalanceTransaction_employeeBalanceTransactionId_isValidateOnly_clientNamespace
      parameters:
        - name: employeeBalanceTransactionId
          in: query
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: ''
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in PATCH operation.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeBalanceTransactionForPatch'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeBalanceTransactionForPatch'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeBalanceTransactionForPatch'
        required: true
      responses:
        '200':
          description: An employee balance transaction is modified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeBalanceTransactionPatchResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/EmployeeBalanceTransactionPatchResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/EmployeeBalanceTransactionPatchResponse'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
  /{clientNamespace}/V1/Employees/{xRefCode}/CANFederalTaxes:
    get:
      tags:
        - EmployeeCANFederalTax
      summary: GET EmployeeCANFederalTax Details
      operationId: EmployeeCANFederalTax_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: contextDate
          in: query
          description: 'The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: contextDateRangeFrom
          in: query
          description: 'The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: contextDateRangeTo
          in: query
          description: 'The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: The EmployeeCANFederalTax with the requested XRefCode.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeCANFederalTax'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeCANFederalTax'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeCANFederalTax'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
        - EmployeeCANFederalTax
      summary: POST a EmployeeCANFederalTax
      operationId: EmployeeCANFederalTax_Post_By_employeeCANFederalTax_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeCANFederalTax'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeCANFederalTax'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeCANFederalTax'
        required: true
      responses:
        '200':
          description: An EmployeeCANFederalTax is created, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
        - EmployeeCANFederalTax
      summary: PATCH a EmployeeCANFederalTax
      operationId: EmployeeCANFederalTax_Patch_By_employeeCANFederalTax_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeCANFederalTax'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeCANFederalTax'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeCANFederalTax'
        required: true
      responses:
        '200':
          description: The EmployeeCANFederalTax is updated, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/CANStateTaxes:
    get:
      tags:
        - EmployeeCANStateTax
      summary: GET EmployeeCANStateTax Details
      operationId: EmployeeCANStateTax_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: contextDate
          in: query
          description: 'The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: contextDateRangeFrom
          in: query
          description: 'The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: contextDateRangeTo
          in: query
          description: 'The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: The EmployeeCANStateTax with the requested XRefCode.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeCANStateTax'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeCANStateTax'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeCANStateTax'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
        - EmployeeCANStateTax
      summary: POST a EmployeeCANStateTax
      operationId: EmployeeCANStateTax_Post_By_employeeCANStateTax_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeCANStateTax'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeCANStateTax'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeCANStateTax'
        required: true
      responses:
        '200':
          description: A CANStateTaxes is created, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
        - EmployeeCANStateTax
      summary: PATCH a EmployeeCANStateTax
      operationId: EmployeeCANStateTax_Patch_By_employeeCANStateTax_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeCANStateTax'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeCANStateTax'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeCANStateTax'
        required: true
      responses:
        '200':
          description: The CANStateTaxes is updated, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/CANTaxStatuses:
    get:
      tags:
        - EmployeeCANTaxStatus
      summary: GET EmployeeCANTaxStatus Details
      operationId: EmployeeCANTaxStatus_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: contextDate
          in: query
          description: 'The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: contextDateRangeFrom
          in: query
          description: 'The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: contextDateRangeTo
          in: query
          description: 'The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: The EmployeeCANTaxStatus with the requested XRefCode.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeCANTaxStatus'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeCANTaxStatus'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeCANTaxStatus'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
        - EmployeeCANTaxStatus
      summary: POST EmployeeCANTaxStatus Details
      operationId: EmployeeCANTaxStatus_Post_By_employeeCANTaxStatus_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeCANTaxStatus'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeCANTaxStatus'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeCANTaxStatus'
        required: true
      responses:
        '200':
          description: A EmployeeCANTaxStatus Detail is created, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
        - EmployeeCANTaxStatus
      summary: PATCH EmployeeCANTaxStatus Details
      operationId: EmployeeCANTaxStatus_Patch_By_employeeCANTaxStatus_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeCANTaxStatus'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeCANTaxStatus'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeCANTaxStatus'
        required: true
      responses:
        '200':
          description: The EmployeeCANTaxStatus Detail is updated, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/EmployeeCertifications:
    get:
      tags:
        - EmployeeCertification
      summary: GET EmployeeCertification Details
      operationId: EmployeeCertification_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: contextDate
          in: query
          description: 'The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: contextDateRangeFrom
          in: query
          description: 'The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: contextDateRangeTo
          in: query
          description: 'The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: The EmployeeCertification with the requested XRefCode.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_LMSEmployeeCertification'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_LMSEmployeeCertification'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_LMSEmployeeCertification'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
        - EmployeeCertification
      summary: POST an Employee Certification
      operationId: EmployeeCertification_Post_By_employeeCertification_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LMSEmployeeCertification'
          text/json:
            schema:
              $ref: '#/components/schemas/LMSEmployeeCertification'
          text/html:
            schema:
              $ref: '#/components/schemas/LMSEmployeeCertification'
        required: true
      responses:
        '200':
          description: An Employee Certification is created, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
    patch:
      tags:
        - EmployeeCertification
      summary: PATCH (Update) an Employee Certification
      operationId: EmployeeCertification_Patch_By_employeeCertification_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LMSEmployeeCertification'
          text/json:
            schema:
              $ref: '#/components/schemas/LMSEmployeeCertification'
          text/html:
            schema:
              $ref: '#/components/schemas/LMSEmployeeCertification'
        required: true
      responses:
        '200':
          description: An Employee Certification is updated, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
  /{clientNamespace}/V1/Employees/{xRefCode}/ClockDeviceGroups:
    get:
      tags:
        - EmployeeClockDeviceGroup
      summary: GET EmployeeClockDeviceGroup Details
      operationId: EmployeeClockDeviceGroup_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: contextDate
          in: query
          description: 'The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: contextDateRangeFrom
          in: query
          description: 'The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: contextDateRangeTo
          in: query
          description: 'The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: The EmployeeClockDeviceGroup with the requested XRefCode.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeClockDeviceGroup'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeClockDeviceGroup'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeClockDeviceGroup'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
        - EmployeeClockDeviceGroup
      summary: POST an EmployeeClockDeviceGroup
      operationId: EmployeeClockDeviceGroup_Post_By_clockDeviceGroup_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeClockDeviceGroup'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeClockDeviceGroup'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeClockDeviceGroup'
        required: true
      responses:
        '200':
          description: The EmployeeClockDeviceGroup is created, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
        - EmployeeClockDeviceGroup
      summary: PATCH an EmployeeClockDeviceGroup
      operationId: EmployeeClockDeviceGroup_Patch_By_clockDeviceGroup_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeClockDeviceGroup'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeClockDeviceGroup'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeClockDeviceGroup'
        required: true
      responses:
        '200':
          description: The EmployeeClockDeviceGroup is updated, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/CompensationSummary:
    get:
      tags:
        - EmployeeCompensation
      summary: GET EmployeeCompensation Details
      operationId: EmployeeCompensation_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: contextDate
          in: query
          description: 'The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: contextDateRangeFrom
          in: query
          description: 'The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: contextDateRangeTo
          in: query
          description: 'The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: The EmployeeCompensation with the requested XRefCode.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeCompensation'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeCompensation'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeCompensation'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/ConfidentialIdentification:
    get:
      tags:
        - EmployeeConfidentialIdentification
      summary: GET EmployeeConfidentialIdentification Details
      operationId: EmployeeConfidentialIdentification_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: contextDate
          in: query
          description: 'The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: contextDateRangeFrom
          in: query
          description: 'The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: contextDateRangeTo
          in: query
          description: 'The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: The EmployeeConfidentialIdentification with the requested XRefCode.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeConfidentialIdentification'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeConfidentialIdentification'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeConfidentialIdentification'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
        - EmployeeConfidentialIdentification
      summary: POST a EmployeeConfidentialIdentification
      operationId: EmployeeConfidentialIdentification_Post_By_employeeConfidentialIdentification_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeConfidentialIdentification'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeConfidentialIdentification'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeConfidentialIdentification'
        required: true
      responses:
        '200':
          description: An EmployeeConfidentialIdentification is created, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
        - EmployeeConfidentialIdentification
      summary: PATCH a EmployeeConfidentialIdentification
      operationId: EmployeeConfidentialIdentification_Patch_By_employeeConfidentialIdentification_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeConfidentialIdentification'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeConfidentialIdentification'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeConfidentialIdentification'
        required: true
      responses:
        '200':
          description: The EmployeeConfidentialIdentification is updated, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/Courses:
    get:
      tags:
        - EmployeeCourse
      summary: GET EmployeeCourse Details
      operationId: EmployeeCourse_Get_By_xRefCode_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: The EmployeeCourse with the requested XRefCode.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeCourse'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeCourse'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeCourse'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
        - EmployeeCourse
      summary: POST an Employee Course Enrollment
      operationId: EmployeeCourse_Post_By_employeeCourse_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be created.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST operation validate the request without applying the changes to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST operation. For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeCourse'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeCourse'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeCourse'
        required: true
      responses:
        '200':
          description: An Employee Course Enrollment is created, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
    patch:
      tags:
        - EmployeeCourse
      summary: PATCH (Update) an Employee Course Enrollment
      operationId: EmployeeCourse_Patch_By_employeeCourse_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be created.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, PATCH operation validate the request without applying the changes to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in PATCH operation. For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeCourse'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeCourse'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeCourse'
        required: true
      responses:
        '200':
          description: An Employee Course Enrollment is updated, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
  /{clientNamespace}/V1/Employees/{xRefCode}/LaborDefaults:
    get:
      tags:
        - EmployeeDefaultLabor
      summary: GET EmployeeDefaultLabor Details
      operationId: EmployeeDefaultLabor_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: contextDate
          in: query
          description: 'The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: contextDateRangeFrom
          in: query
          description: 'The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: contextDateRangeTo
          in: query
          description: 'The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: The EmployeeDefaultLabor with the requested XRefCode.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeDefaultLabor'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeDefaultLabor'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeDefaultLabor'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
        - EmployeeDefaultLabor
      summary: POST a EmployeeDefaultLabor
      operationId: EmployeeDefaultLabor_Post_By_employeeDefaultLabor_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeDefaultLabor'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeDefaultLabor'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeDefaultLabor'
        required: true
      responses:
        '200':
          description: An EmployeeDefaultLabor is created, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
        - EmployeeDefaultLabor
      summary: PATCH a EmployeeDefaultLabor
      operationId: EmployeeDefaultLabor_Patch_By_employeeDefaultLabor_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeDefaultLabor'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeDefaultLabor'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeDefaultLabor'
        required: true
      responses:
        '200':
          description: The EmployeeDefaultLabor is updated, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/DependentsBeneficiaries:
    get:
      tags:
        - EmployeeDependentsBeneficiaries
      summary: GET EmployeeDependentsBeneficiaries Details
      operationId: EmployeeDependentsBeneficiaries_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: contextDate
          in: query
          description: 'The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: contextDateRangeFrom
          in: query
          description: 'The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: contextDateRangeTo
          in: query
          description: 'The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: The EmployeeDependentsBeneficiaries with the requested XRefCode.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeDependentBeneficiary'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeDependentBeneficiary'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeDependentBeneficiary'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/DEUTax/DEUEmployeeWageTax:
    get:
      tags:
        - EmployeeDEUTax
      summary: GET EmployeeWageTax Details
      operationId: EmployeeDEUTax_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: contextDate
          in: query
          description: 'The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: contextDateRangeFrom
          in: query
          description: 'The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: contextDateRangeTo
          in: query
          description: 'The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: The EmployeeWageTax with the requested XRefCode.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_DEUEmployeeWageTax'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_DEUEmployeeWageTax'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_DEUEmployeeWageTax'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
        - EmployeeDEUTax
      summary: POST an Employee Wage Tax
      operationId: EmployeeDEUTax_Post_By_deuEmployeeWageTax_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DEUEmployeeWageTax'
          text/json:
            schema:
              $ref: '#/components/schemas/DEUEmployeeWageTax'
          text/html:
            schema:
              $ref: '#/components/schemas/DEUEmployeeWageTax'
        required: true
      responses:
        '200':
          description: An Employee Wage Tax is created, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
    patch:
      tags:
        - EmployeeDEUTax
      summary: PATCH (Update) an Employee Wage Tax
      operationId: EmployeeDEUTax_Patch_By_deuEmployeeWageTax_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DEUEmployeeWageTax'
          text/json:
            schema:
              $ref: '#/components/schemas/DEUEmployeeWageTax'
          text/html:
            schema:
              $ref: '#/components/schemas/DEUEmployeeWageTax'
        required: true
      responses:
        '200':
          description: An Employee Wage Tax is updated, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
  /{clientNamespace}/V1/Employees/{xRefCode}/DEUTax/SocialInsurance:
    get:
      tags:
        - EmployeeDEUTaxSocialInsurance
      summary: GET Employee Social Insurance Details
      operationId: EmployeeDEUTaxSocialInsurance_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: contextDate
          in: query
          description: 'The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: contextDateRangeFrom
          in: query
          description: 'The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: contextDateRangeTo
          in: query
          description: 'The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: The Employee Social Insurance details with the requested Employee XRefCode.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_DEUTaxSocialInsurance'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_DEUTaxSocialInsurance'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_DEUTaxSocialInsurance'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
        - EmployeeDEUTaxSocialInsurance
      summary: POST Employee Social Insurance Details
      operationId: EmployeeDEUTaxSocialInsurance_Post_By_deuEmployeeSocialInsurance_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DEUTaxSocialInsurance'
          text/json:
            schema:
              $ref: '#/components/schemas/DEUTaxSocialInsurance'
          text/html:
            schema:
              $ref: '#/components/schemas/DEUTaxSocialInsurance'
        required: true
      responses:
        '200':
          description: An Employee Social Insurance is created, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
    patch:
      tags:
        - EmployeeDEUTaxSocialInsurance
      summary: PATCH (Update) aEmployee Social Insurance Details
      operationId: EmployeeDEUTaxSocialInsurance_Patch_By_deuEmployeeSocialInsurance_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DEUTaxSocialInsurance'
          text/json:
            schema:
              $ref: '#/components/schemas/DEUTaxSocialInsurance'
          text/html:
            schema:
              $ref: '#/components/schemas/DEUTaxSocialInsurance'
        required: true
      responses:
        '200':
          description: An Employee Social Insurance is updated, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
  /{clientNamespace}/V1/Employees/{xRefCode}/DirectDeposits:
    get:
      tags:
        - EmployeeDirectDeposit
      summary: GET EmployeeDirectDeposit Details
      operationId: EmployeeDirectDeposit_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: contextDate
          in: query
          description: 'The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: contextDateRangeFrom
          in: query
          description: 'The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: contextDateRangeTo
          in: query
          description: 'The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: The EmployeeDirectDeposit with the requested XRefCode.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeDirectDeposit'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeDirectDeposit'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeDirectDeposit'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/Disabilities:
    get:
      tags:
        - EmployeeDisability
      summary: GET EmployeeDisability Details
      operationId: EmployeeDisability_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: contextDate
          in: query
          description: 'The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: contextDateRangeFrom
          in: query
          description: 'The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: contextDateRangeTo
          in: query
          description: 'The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: The EmployeeDisabilityController with the requested XRefCode.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeDisability'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeDisability'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeDisability'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
        - EmployeeDisability
      summary: POST an EmployeeDisability
      operationId: EmployeeDisability_Post_By_employeeDisability_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeDisability'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeDisability'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeDisability'
        required: true
      responses:
        '200':
          description: A EmployeeDisability is created, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
        - EmployeeDisability
      summary: PATCH an EmployeeDisability
      operationId: EmployeeDisability_Patch_By_employeeDisability_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeDisability'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeDisability'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeDisability'
        required: true
      responses:
        '200':
          description: The EmployeeDisability is updated, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/EIRates:
    get:
      tags:
        - EmployeeEIRate
      summary: GET EmployeeEIRate Details
      operationId: EmployeeEIRate_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: contextDate
          in: query
          description: 'The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: contextDateRangeFrom
          in: query
          description: 'The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: contextDateRangeTo
          in: query
          description: 'The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: The EmployeeEIRate with the requested XRefCode.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeCANEmploymentInsuranceRate'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeCANEmploymentInsuranceRate'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeCANEmploymentInsuranceRate'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/EmploymentAgreements:
    get:
      tags:
        - EmployeeEmploymentAgreement
      summary: GET EmployeeEmploymentAgreement Details
      operationId: EmployeeEmploymentAgreement_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: contextDate
          in: query
          description: 'The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: contextDateRangeFrom
          in: query
          description: 'The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: contextDateRangeTo
          in: query
          description: 'The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: The EmployeeEmploymentAgreement with the requested XRefCode.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeEmploymentAgreement'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeEmploymentAgreement'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeEmploymentAgreement'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
        - EmployeeEmploymentAgreement
      summary: POST a EmployeeEmploymentAgreement
      operationId: EmployeeEmploymentAgreement_Post_By_employeeEmploymentAgreement_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeEmploymentAgreement'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeEmploymentAgreement'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeEmploymentAgreement'
        required: true
      responses:
        '200':
          description: An Employee is created, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
        - EmployeeEmploymentAgreement
      summary: PATCH a EmployeeEmploymentAgreement
      operationId: EmployeeEmploymentAgreement_Patch_By_employeeEmploymentAgreement_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeEmploymentAgreement'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeEmploymentAgreement'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeEmploymentAgreement'
        required: true
      responses:
        '200':
          description: The EmployeeEmploymentAgreement is updated, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/EmploymentStatuses:
    get:
      tags:
        - EmployeeEmploymentStatus
      summary: GET EmploymentStatus Details
      operationId: EmployeeEmploymentStatus_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: contextDate
          in: query
          description: 'The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: contextDateRangeFrom
          in: query
          description: 'The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: contextDateRangeTo
          in: query
          description: 'The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: The Employment Statuses of employee with the requested XRefCode.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeEmploymentStatus'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeEmploymentStatus'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeEmploymentStatus'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
        - EmployeeEmploymentStatus
      summary: POST an EmploymentStatus
      operationId: EmployeeEmploymentStatus_Post_By_employmentStatus_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeEmploymentStatus'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeEmploymentStatus'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeEmploymentStatus'
        required: true
      responses:
        '200':
          description: An EmploymentStatus is created, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
        - EmployeeEmploymentStatus
      summary: PATCH an EmploymentStatus
      operationId: EmployeeEmploymentStatus_Patch_By_employmentStatus_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeEmploymentStatus'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeEmploymentStatus'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeEmploymentStatus'
        required: true
      responses:
        '200':
          description: The EmploymentStatus is updated, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/EmploymentStatuses/Replacement:
    patch:
      tags:
        - EmployeeEmploymentStatus
      summary: Replace EmploymentStatuses
      operationId: EmployeeEmploymentStatus_Replace_By_employmentStatus_xRefCode_replaceFrom_replaceTo_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: "The unique identifier (external reference code) of the Employee for whom the subordinate data will be replaced.\r\nThe value provided must be the exact match for an Employee; otherwise, a bad request (400) error will be returned."
          required: true
          schema:
            type: string
        - name: replaceFrom
          in: query
          description: The date from which all EmploymentStatuses will be replaced.
          schema:
            type: string
            format: date-time
        - name: replaceTo
          in: query
          description: The date up to which all EmploymentStatuses will be replaced.
          schema:
            type: string
            format: date-time
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: "The new JSON-formatted EmploymentStatus with which to replace the deleted ones.\r\nFor more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide."
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeEmploymentStatus'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeEmploymentStatus'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeEmploymentStatus'
        required: true
      responses:
        '200':
          description: The Employee's Employment Statuses are replaced within the given date range; no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/EmploymentTypes:
    get:
      tags:
        - EmployeeEmploymentType
      summary: GET EmployeeEmploymentType Details
      operationId: EmployeeEmploymentType_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: contextDate
          in: query
          description: 'The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: contextDateRangeFrom
          in: query
          description: 'The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: contextDateRangeTo
          in: query
          description: 'The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: The EmployeeEmploymentType with the requested XRefCode.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeEmploymentType'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeEmploymentType'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeEmploymentType'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
        - EmployeeEmploymentType
      summary: POST an EmployeeEmploymentType
      operationId: EmployeeEmploymentType_Post_By_employeeEmploymentType_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeEmploymentType'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeEmploymentType'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeEmploymentType'
        required: true
      responses:
        '200':
          description: An EmployeeEmploymentType is created, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
        - EmployeeEmploymentType
      summary: PATCH an EmployeeEmploymentType
      operationId: EmployeeEmploymentType_Patch_By_employeeEmploymentType_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeEmploymentType'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeEmploymentType'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeEmploymentType'
        required: true
      responses:
        '200':
          description: The EmployeeEmploymentType is updated, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/Ethnicities:
    get:
      tags:
        - EmployeeEthnicity
      summary: GET EmployeeEthnicity Details
      operationId: EmployeeEthnicity_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: contextDate
          in: query
          description: 'The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: contextDateRangeFrom
          in: query
          description: 'The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: contextDateRangeTo
          in: query
          description: 'The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: The EmployeeEthnicity with the requested XRefCode.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeEthnicity'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeEthnicity'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeEthnicity'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
        - EmployeeEthnicity
      summary: POST EmployeeEthnicity Details
      operationId: EmployeeEthnicity_Post_By_employeeEthnicity_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeEthnicity'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeEthnicity'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeEthnicity'
        required: true
      responses:
        '200':
          description: A EmployeeEthnicity Detail is created, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
        - EmployeeEthnicity
      summary: PATCH EmployeeEthnicity Details
      operationId: EmployeeEthnicity_Patch_By_employeeEthnicity_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeEthnicity'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeEthnicity'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeEthnicity'
        required: true
      responses:
        '200':
          description: The EmployeeEthnicity Detail is updated, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/v1/EmployeeExportJobs/Status/{backgroundJobQueueItemId}:
    get:
      tags:
        - EmployeeExportJobs
      summary: Get the status of Job Queue tables.
      operationId: EmployeeExportJobs_Get_By_backgroundJobQueueItemId_clientNamespace
      parameters:
        - name: backgroundJobQueueItemId
          in: path
          description: To find a status of employee export background job
          required: true
          schema:
            type: integer
            format: int32
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: Job Status and Access API URL
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
  /{clientNamespace}/v1/EmployeeExportJobs/Data/{jobId}:
    get:
      tags:
        - EmployeeExportJobs
      summary: Get bulk employee of data as a string in json format
      operationId: EmployeeExportJobs_Get_By_jobId_clientNamespace
      parameters:
        - name: jobId
          in: path
          description: To get background job processed data for employee export
          required: true
          schema:
            type: string
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: Returns a page of employee data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayload_IEnumerable_Employee'
            text/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayload_IEnumerable_Employee'
            text/html:
              schema:
                $ref: '#/components/schemas/PaginatedPayload_IEnumerable_Employee'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
  /{clientNamespace}/V1/EmployeeExportJobs:
    post:
      tags:
        - EmployeeExportJobs
      summary: Add new HR Bulk Export details into Job Queue tables.
      operationId: EmployeeExportJobs_Post_By_export_isValidateOnly_clientNamespace
      parameters:
        - name: isValidateOnly
          in: query
          description: This parameter used to run a test case without fail
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST. For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeExportParams'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeExportParams'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeExportParams'
        required: true
      responses:
        '200':
          description: A HR Bulk Export is created with an empty response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_String'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_String'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_String'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_String'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_String'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_String'
  /{clientNamespace}/V1/Employees/{xRefCode}/EmployeeGlobalProperties:
    get:
      tags:
        - EmployeeGlobalPropertyValue
      summary: GET EmployeeGlobalPropertyValue Details
      operationId: EmployeeGlobalPropertyValue_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: contextDate
          in: query
          description: 'The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: contextDateRangeFrom
          in: query
          description: 'The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: contextDateRangeTo
          in: query
          description: 'The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: The EmployeeGlobalPropertyValue with the requested XRefCode.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeGlobalPropertyValue'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeGlobalPropertyValue'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeGlobalPropertyValue'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
        - EmployeeGlobalPropertyValue
      summary: POST a EmployeeGlobalPropertyValue
      operationId: EmployeeGlobalPropertyValue_Post_By_employeeGlobalPropertyValue_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeGlobalPropertyValue'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeGlobalPropertyValue'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeGlobalPropertyValue'
        required: true
      responses:
        '200':
          description: An Employee Global Property is created, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
        - EmployeeGlobalPropertyValue
      summary: PATCH an EmployeeGlobalPropertyValue
      operationId: EmployeeGlobalPropertyValue_Patch_By_employeeGlobalPropertyValue_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeGlobalPropertyValue'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeGlobalPropertyValue'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeGlobalPropertyValue'
        required: true
      responses:
        '200':
          description: The EmployeeGlobalPropertyValue is updated, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Payroll/EmployeeGLSplits:
    get:
      tags:
        - EmployeeGLSplits
      summary: GET the list of employee gl splits.
      operationId: EmployeeGLSplits_Get_By_payGroupXRefCode_employeeXRefCodes_splitStatus_pageSize_clientNamespace
      parameters:
        - name: payGroupXRefCode
          in: query
          description: The pay group reference code.
          schema:
            type: string
        - name: employeeXRefCodes
          in: query
          description: The comma separated employee XRef codes.
          schema:
            type: string
        - name: splitStatus
          in: query
          description: Filter to fetch all or current/future effective GL splits. Value can be All or Active. Default value is Active.
          schema:
            type: string
        - name: pageSize
          in: query
          description: Number of records to be loaded.
          schema:
            type: integer
            format: int32
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: Employee GL Splits.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayload_IEnumerable_EmployeeGLSplits'
            text/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayload_IEnumerable_EmployeeGLSplits'
            text/html:
              schema:
                $ref: '#/components/schemas/PaginatedPayload_IEnumerable_EmployeeGLSplits'
        '400':
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
    post:
      tags:
        - EmployeeGLSplits
      summary: POST a list of employee GLSplitSets.
      operationId: EmployeeGLSplits_Post_By_glSplits_isValidateOnly_clientNamespace
      parameters:
        - name: isValidateOnly
          in: query
          description: If TRUE, POST operations validate the request without queue the import. The default value is FALSE. Note, POST operation will only validate data structure.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST operation. For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/EmployeeGLSplitUpsert'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/EmployeeGLSplitUpsert'
          text/html:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/EmployeeGLSplitUpsert'
        required: true
      responses:
        '200':
          description: OK response
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed or has validation errors.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
    patch:
      tags:
        - EmployeeGLSplits
      summary: PATCH a list of employee GLSplitSets.
      operationId: EmployeeGLSplits_Patch_By_glSplits_isValidateOnly_clientNamespace
      parameters:
        - name: isValidateOnly
          in: query
          description: If TRUE, PATCH operations validate the request without queue the import. The default value is FALSE. Note, PATCH operation will only validate data structure.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in PATCH operation. For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/EmployeeGLSplitUpsert'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/EmployeeGLSplitUpsert'
          text/html:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/EmployeeGLSplitUpsert'
        required: true
      responses:
        '200':
          description: OK response
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed or has validation errors.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
  /{clientNamespace}/V1/Employees/{xRefCode}/HighlyCompensatedEmployees:
    get:
      tags:
        - EmployeeHCE
      summary: GET HighlyCompensatedEmployee Details
      operationId: EmployeeHCE_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: contextDate
          in: query
          description: 'The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: contextDateRangeFrom
          in: query
          description: 'The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: contextDateRangeTo
          in: query
          description: 'The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: The HighlyCompensatedEmployee with the requested XRefCode.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeHighlyCompensatedEmployeeIndicator'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeHighlyCompensatedEmployeeIndicator'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeHighlyCompensatedEmployeeIndicator'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
        - EmployeeHCE
      summary: POST a HighlyCompensatedEmployee
      operationId: EmployeeHCE_Post_By_highlyCompensatedEmpoyee_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeHighlyCompensatedEmployeeIndicator'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeHighlyCompensatedEmployeeIndicator'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeHighlyCompensatedEmployeeIndicator'
        required: true
      responses:
        '200':
          description: A HighlyCompensatedEmployee is created, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
        - EmployeeHCE
      summary: PATCH a HighlyCompensatedEmployee
      operationId: EmployeeHCE_Patch_By_highlyCompensatedEmpoyee_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeHighlyCompensatedEmployeeIndicator'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeHighlyCompensatedEmployeeIndicator'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeHighlyCompensatedEmployeeIndicator'
        required: true
      responses:
        '200':
          description: The HighlyCompensatedEmployee is updated, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/HealthWellnessDetails:
    get:
      tags:
        - EmployeeHealthWellness
      summary: GET EmployeeHealthWellness Details
      operationId: EmployeeHealthWellness_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: contextDate
          in: query
          description: 'The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: contextDateRangeFrom
          in: query
          description: 'The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: contextDateRangeTo
          in: query
          description: 'The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: The EmployeeHealthWellness with the requested XRefCode.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeHealthWellness'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeHealthWellness'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeHealthWellness'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
        - EmployeeHealthWellness
      summary: POST a EmployeeHealthWellness
      operationId: EmployeeHealthWellness_Post_By_employeeHealthWellness_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeHealthWellness'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeHealthWellness'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeHealthWellness'
        required: true
      responses:
        '200':
          description: A EmployeeHealthWellness is created, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
        - EmployeeHealthWellness
      summary: PATCH a EmployeeHealthWellness
      operationId: EmployeeHealthWellness_Patch_By_employeeHealthWellness_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeHealthWellness'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeHealthWellness'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeHealthWellness'
        required: true
      responses:
        '200':
          description: The EmployeeHealthWellness is updated, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/HRIncidents:
    get:
      tags:
        - EmployeeHRIncident
      summary: GET EmployeeHRIncident Details
      operationId: EmployeeHRIncident_Get_By_xRefCode_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: The EmployeeHRIncident with the requested XRefCode.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeHRIncident'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeHRIncident'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeHRIncident'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
        - EmployeeHRIncident
      summary: POST an EmployeeHRIncident
      operationId: EmployeeHRIncident_Post_By_incident_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeHRIncident'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeHRIncident'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeHRIncident'
        required: true
      responses:
        '200':
          description: An EmployeeHRIncident is created, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/HRPolicies:
    get:
      tags:
        - EmployeeHRPolicy
      summary: GET EmployeeHRPolicy Details
      operationId: EmployeeHRPolicy_Get_By_xRefCode_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: The Employee HRPolicy with the requested XRefCode.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeHRPolicy'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeHRPolicy'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeHRPolicy'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
        - EmployeeHRPolicy
      summary: POST an EmployeeHRPolicy
      operationId: EmployeeHRPolicy_Post_By_employeeHRPolicy_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST operation validates the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeHRPolicy'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeHRPolicy'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeHRPolicy'
        required: true
      responses:
        '200':
          description: An Employee HRPolicy is created, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
  /{clientNamespace}/V1/Employees/{xRefCode}/IRLTax/EWSS:
    get:
      tags:
        - EmployeeIRLTaxEWSS
      summary: GET an EmployeeIRLTax
      operationId: EmployeeIRLTaxEWSS_Get_By_xRefCode_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: The EmployeeIRLTaxEWSS with the requested XRefCode.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeIRLTaxEWSS'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeIRLTaxEWSS'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeIRLTaxEWSS'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
        - EmployeeIRLTaxEWSS
      summary: POST an EmployeeIRLTax
      operationId: EmployeeIRLTaxEWSS_Post_By_employeeIRLTaxEWSS_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeIRLTaxEWSS'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeIRLTaxEWSS'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeIRLTaxEWSS'
        required: true
      responses:
        '200':
          description: An EmployeeIRLTaxEWSS is created, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
        - EmployeeIRLTaxEWSS
      summary: PATCH an EmployeeIRLTax
      operationId: EmployeeIRLTaxEWSS_Patch_By_employeeIRLTaxEWSS_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeIRLTaxEWSS'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeIRLTaxEWSS'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeIRLTaxEWSS'
        required: true
      responses:
        '200':
          description: The EmployeeIRLTaxEWSS is updated, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/IRLTax/PAYEExclusion:
    get:
      tags:
        - EmployeeIRLTaxPAYEExclusion
      summary: GET EmployeeIRLTaxPAYEExclusion Details
      operationId: EmployeeIRLTaxPAYEExclusion_Get_By_xRefCode_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: The EmployeeIRLTaxPAYEExclusion with the requested XRefCode.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeIRLTaxPAYEExclusion'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeIRLTaxPAYEExclusion'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeIRLTaxPAYEExclusion'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
        - EmployeeIRLTaxPAYEExclusion
      summary: POST an EmployeeIRLTaxPAYEExclusion
      operationId: EmployeeIRLTaxPAYEExclusion_Post_By_employeeIRLTaxPAYEExclusion_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeIRLTaxPAYEExclusion'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeIRLTaxPAYEExclusion'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeIRLTaxPAYEExclusion'
        required: true
      responses:
        '200':
          description: An EmployeeIRLTaxPAYEExclusion is created, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
        - EmployeeIRLTaxPAYEExclusion
      summary: PATCH an EmployeeIRLTaxPAYEExclusion
      operationId: EmployeeIRLTaxPAYEExclusion_Patch_By_employeeIRLTaxPAYEExclusion_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeIRLTaxPAYEExclusion'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeIRLTaxPAYEExclusion'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeIRLTaxPAYEExclusion'
        required: true
      responses:
        '200':
          description: The EmployeeIRLTaxPAYEExclusion is updated, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/IRLTax/PRSI:
    get:
      tags:
        - EmployeeIRLTaxPRSI
      summary: GET EmployeeIRLTax Details
      operationId: EmployeeIRLTaxPRSI_Get_By_xRefCode_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: The EmployeeIRLTaxPRSI with the requested XRefCode.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeIRLTaxPRSI'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeIRLTaxPRSI'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeIRLTaxPRSI'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
        - EmployeeIRLTaxPRSI
      summary: POST a EmployeeIRLTax
      operationId: EmployeeIRLTaxPRSI_Post_By_employeeIRLTaxPRSI_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeIRLTaxPRSI'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeIRLTaxPRSI'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeIRLTaxPRSI'
        required: true
      responses:
        '200':
          description: An EmployeeIRLTaxPRSI is created, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
        - EmployeeIRLTaxPRSI
      summary: PATCH a EmployeeIRLTax
      operationId: EmployeeIRLTaxPRSI_Patch_By_employeeIRLTaxPRSI_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeIRLTaxPRSI'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeIRLTaxPRSI'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeIRLTaxPRSI'
        required: true
      responses:
        '200':
          description: The EmployeeIRLTaxPRSI is updated, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/IRLTax/RPN:
    get:
      tags:
        - EmployeeIRLTaxRPN
      summary: GET an EmployeeIRLTax
      operationId: EmployeeIRLTaxRPN_Get_By_xRefCode_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: The EmployeeIRLTaxRPN with the requested XRefCode.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeIRLTaxRPN'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeIRLTaxRPN'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeIRLTaxRPN'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
        - EmployeeIRLTaxRPN
      summary: POST an EmployeeIRLTax
      operationId: EmployeeIRLTaxRPN_Post_By_employeeIRLTaxRPN_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeIRLTaxRPN'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeIRLTaxRPN'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeIRLTaxRPN'
        required: true
      responses:
        '200':
          description: An EmployeeIRLTaxRPN is created, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
        - EmployeeIRLTaxRPN
      summary: PATCH an EmployeeIRLTax
      operationId: EmployeeIRLTaxRPN_Patch_By_employeeRPN_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeIRLTaxRPN'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeIRLTaxRPN'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeIRLTaxRPN'
        required: true
      responses:
        '200':
          description: The EmployeeIRLTaxRPN is updated, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/Locations:
    get:
      tags:
        - EmployeeLocation
      summary: GET EmployeeLocation Details
      operationId: EmployeeLocation_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: contextDate
          in: query
          description: 'The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: contextDateRangeFrom
          in: query
          description: 'The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: contextDateRangeTo
          in: query
          description: 'The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: The EmployeeLocation with the requested XRefCode.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeLocation'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeLocation'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeLocation'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
        - EmployeeLocation
      summary: POST a EmployeeLocation
      operationId: EmployeeLocation_Post_By_location_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeLocation'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeLocation'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeLocation'
        required: true
      responses:
        '200':
          description: An EmployeeLocation is created, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
        - EmployeeLocation
      summary: PATCH a EmployeeLocation
      operationId: EmployeeLocation_Patch_By_location_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeLocation'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeLocation'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeLocation'
        required: true
      responses:
        '200':
          description: The EmployeeLocation is updated, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/EmployeeManagers:
    get:
      tags:
        - EmployeeManagers
      summary: GET EmployeeManager Details
      operationId: EmployeeManagers_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: contextDate
          in: query
          description: 'The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: contextDateRangeFrom
          in: query
          description: 'The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: contextDateRangeTo
          in: query
          description: 'The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: The EmployeeManager with the requested XRefCode.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeManager'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeManager'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeManager'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/OnboardingPolicies:
    get:
      tags:
        - EmployeeOnboardingPolicies
      summary: GET EmployeeOnboardingPolicy Details
      operationId: EmployeeOnboardingPolicies_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: contextDate
          in: query
          description: 'The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: contextDateRangeFrom
          in: query
          description: 'The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: contextDateRangeTo
          in: query
          description: 'The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: The EmployeeOnboardingPolicy with the requested XRefCode.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeOnboardingPolicy'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeOnboardingPolicy'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeOnboardingPolicy'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
        - EmployeeOnboardingPolicies
      summary: POST a EmployeeOnboardingPolicy
      operationId: EmployeeOnboardingPolicies_Post_By_employeeOnboardingPolicy_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeOnboardingPolicy'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeOnboardingPolicy'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeOnboardingPolicy'
        required: true
      responses:
        '200':
          description: An Employee is created, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
        - EmployeeOnboardingPolicies
      summary: PATCH a EmployeeOnboardingPolicy
      operationId: EmployeeOnboardingPolicies_Patch_By_employeeOnboardingPolicy_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeOnboardingPolicy'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeOnboardingPolicy'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeOnboardingPolicy'
        required: true
      responses:
        '200':
          description: The EmployeeOnboardingPolicy is updated, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/OrgUnitInfos:
    get:
      tags:
        - EmployeeOrgUnitInfo
      summary: GET EmployeeOrgUnitInfo Details
      operationId: EmployeeOrgUnitInfo_Get_By_xRefCode_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: The EmployeeOrgUnitInfo with the requested XRefCode.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeOrgUnitInformation'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeOrgUnitInformation'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeOrgUnitInformation'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/EmployeePayAdjustCodeGroups:
    get:
      tags:
        - EmployeePayAdjustCodeGroup
      summary: GET EmployeePayAdjCodeGroupList Details
      operationId: EmployeePayAdjustCodeGroup_Get_By_xRefCode_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: The EmployeePayAdjCodeGroupList with the requested XRefCode.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeePayAdjustCodeGroup'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeePayAdjustCodeGroup'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeePayAdjustCodeGroup'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
        - EmployeePayAdjustCodeGroup
      summary: POST a EmployeePayAdjCodeGroupList
      operationId: EmployeePayAdjustCodeGroup_Post_By_employeePayAdjCodeGroupList_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeePayAdjustCodeGroup'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeePayAdjustCodeGroup'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeePayAdjustCodeGroup'
        required: true
      responses:
        '200':
          description: The EmployeePayAdjCodeGroupList is created, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
        - EmployeePayAdjustCodeGroup
      summary: PATCH a EmployeePayAdjCodeGroupList
      operationId: EmployeePayAdjustCodeGroup_Patch_By_employeePayAdjCodeGroupList_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeePayAdjustCodeGroup'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeePayAdjustCodeGroup'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeePayAdjustCodeGroup'
        required: true
      responses:
        '200':
          description: The EmployeePayAdjCodeGroupList is updated, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/EmployeePayAdjustments:
    get:
      tags:
        - EmployeePayAdjustments
      summary: Get a list of Employee Pay Adjustments
      operationId: EmployeePayAdjustments_GetEmployeePayAdjustments_By_filterPayAdjustmentStartDate_filterPayAdjustmentEndDate_filterLastModifiedStartDateUTC_filterLastModifiedEndDateUTC_orgUnitXRefCode_employeeXRefCode_payAdjustmentCodeXRefCode_projectXRefCode_departmentXRefCode_jobXRefCode_docketXRefCode_referenceDate_managerAuthorized_employeeAuthorized_isDeleted_pageSize_clientNamespace
      parameters:
        - name: filterPayAdjustmentStartDate
          in: query
          description: 'Inclusive period start date in UTC to determine which employee pay adjustment data to retrieve. Example: 2017-01-01T00:00:00'
          required: true
          schema:
            type: string
            format: date-time
        - name: filterPayAdjustmentEndDate
          in: query
          description: 'Inclusive period end date in UTC to determine which employee pay adjustment data to retrieve. Example: 2017-01-01T00:00:00'
          required: true
          schema:
            type: string
            format: date-time
        - name: filterLastModifiedStartDateUTC
          in: query
          description: 'Inclusive period last modified start date in UTC to determine which employee pay adjustment data to retrieve. Example: 2017-01-01T00:00:00Z'
          schema:
            type: string
            format: date-time
        - name: filterLastModifiedEndDateUTC
          in: query
          description: 'Inclusive period last modified end date in UTC to determine which employee pay adjustment data to retrieve. Example: 2017-01-01T00:00:00Z'
          schema:
            type: string
            format: date-time
        - name: orgUnitXRefCode
          in: query
          description: A case-sensitive field that identifies a unique organization
          schema:
            type: string
        - name: employeeXRefCode
          in: query
          description: A case-sensitive field that identifies a unique employee
          schema:
            type: string
        - name: payAdjustmentCodeXRefCode
          in: query
          description: A case-sensitive field that identifies a unique pay adjustment code
          schema:
            type: string
        - name: projectXRefCode
          in: query
          description: A case-sensitive field that identifies a unique project
          schema:
            type: string
        - name: departmentXRefCode
          in: query
          description: A case-sensitive field that identifies a unique department
          schema:
            type: string
        - name: jobXRefCode
          in: query
          description: A case-sensitive field that identifies a unique job
          schema:
            type: string
        - name: docketXRefCode
          in: query
          description: A case-sensitive field that identifies a unique docket
          schema:
            type: string
        - name: referenceDate
          in: query
          description: 'Inclusive period reference date in UTC to determine which employee pay adjustment data to retrieve. Example: 2017-01-01T00:00:00'
          schema:
            type: string
            format: date-time
        - name: managerAuthorized
          in: query
          description: A flag to determine if a pay adjustment is manager authorized
          schema:
            type: boolean
        - name: employeeAuthorized
          in: query
          description: A flag to determine if a pay adjustment is employee authorized
          schema:
            type: boolean
        - name: isDeleted
          in: query
          description: A flag to determine if a pay adjustment is deleted
          schema:
            type: boolean
        - name: pageSize
          in: query
          description: The number of records returned per page in the paginated response
          schema:
            type: integer
            format: int32
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: A collection of EmployeePayAdjustment data meeting the search criteria.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayload_IEnumerable_EmployeePayAdjustment'
            text/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayload_IEnumerable_EmployeePayAdjustment'
            text/html:
              schema:
                $ref: '#/components/schemas/PaginatedPayload_IEnumerable_EmployeePayAdjustment'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
    post:
      tags:
        - EmployeePayAdjustments
      summary: POST (Create) Employee Pay Adjustment
      operationId: EmployeePayAdjustments_Post_By_payAdjustment_isValidateOnly_isValidateLabor_clientNamespace
      parameters:
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: isValidateLabor
          in: query
          description: When a TRUE value is used in this parameter, POST operations validate against Labor Validation Engine to verify pay adjustment follows rules/qualifiers created
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST operation.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeePayAdjustmentForSubmit'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeePayAdjustmentForSubmit'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeePayAdjustmentForSubmit'
        required: true
      responses:
        '200':
          description: An employee pay adjustment is created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeePayAdjustmentPostResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/EmployeePayAdjustmentPostResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/EmployeePayAdjustmentPostResponse'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
  /{clientNamespace}/V1/EmployeePayAdjustments/{xRefCode}:
    patch:
      tags:
        - EmployeePayAdjustments
      summary: PATCH (Update) Employee Pay Adjustment
      operationId: EmployeePayAdjustments_Patch_By_payAdjustment_xRefCode_isValidateOnly_isValidateLabor_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: isValidateLabor
          in: query
          description: When a TRUE value is used in this parameter, PATCH operations validate against Labor Validation Engine to verify pay adjustment follows rules/qualifiers created
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in PATCH operation.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeePayAdjustmentForSubmit'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeePayAdjustmentForSubmit'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeePayAdjustmentForSubmit'
        required: true
      responses:
        '200':
          description: An employee pay adjustment is updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeePayAdjustmentPostResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/EmployeePayAdjustmentPostResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/EmployeePayAdjustmentPostResponse'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
  /{clientNamespace}/V1/Employees/{xRefCode}/PayGradeRates:
    get:
      tags:
        - EmployeePayGradeRate
      summary: GET EmployeePayGradeRate Details
      operationId: EmployeePayGradeRate_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: contextDate
          in: query
          description: 'The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: contextDateRangeFrom
          in: query
          description: 'The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: contextDateRangeTo
          in: query
          description: 'The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: The EmployeePayGradeRate with the requested XRefCode.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeePayGradeRate'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeePayGradeRate'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeePayGradeRate'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/EmployeePayrollTaxes:
    get:
      tags:
        - EmployeePayrollTax
      summary: GET List of Taxes for a specific employee.
      operationId: EmployeePayrollTax_Get_By_xRefCode_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee whose data will be retrieved. The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: The EmployeePayrollTax with the requested XRefCode.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeePayrollTax'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeePayrollTax'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeePayrollTax'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeePayrollTax'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeePayrollTax'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeePayrollTax'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeePayrollTax'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeePayrollTax'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeePayrollTax'
  /{clientNamespace}/V1/Employees/{xRefCode}/EmployeePayrollTaxParameters:
    get:
      tags:
        - EmployeePayrollTaxParameter
      summary: GET List of Tax Parameters for a specific employee.
      operationId: EmployeePayrollTaxParameter_Get_By_xRefCode_contextDateRangeFrom_contextDateRangeTo_taxAuthorityInstance_legalEntityXRefCode_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee whose data will be retrieved. The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: contextDateRangeFrom
          in: query
          description: 'The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates. The service defaults to the current day if the requester does not specify a value. Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: contextDateRangeTo
          in: query
          description: 'The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates. The service defaults to null if the requester does not specify a value. Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: taxAuthorityInstance
          in: query
          description: 'The Governmental Authority having jurisdiction over the assessment, determination, collection or imposition of any tax. The value provided must be an exact match to an authority assigned to the employee. Example: USA-00000000-001.'
          schema:
            type: string
        - name: legalEntityXRefCode
          in: query
          description: The unique reference code which identifies the organization that the federal tax authorities recognize. The value provided must be an exact match to the Legal Entity reference to which the employee is assigned.
          schema:
            type: string
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: The EmployeePayrollTax with the requested XRefCode.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeePayrollTaxParameter'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeePayrollTaxParameter'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeePayrollTaxParameter'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeePayrollTaxParameter'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeePayrollTaxParameter'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeePayrollTaxParameter'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeePayrollTaxParameter'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeePayrollTaxParameter'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeePayrollTaxParameter'
    post:
      tags:
        - EmployeePayrollTaxParameter
      summary: POST Tax Parameter for an employee.
      operationId: EmployeePayrollTaxParameter_Post_By_employeePayrollTaxParameter_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying the updates to the database.  The default value is FALSE if parameter is not specified.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations. For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeePayrollTaxParameter'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeePayrollTaxParameter'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeePayrollTaxParameter'
        required: true
      responses:
        '200':
          description: An EmployeePayrollTaxParameter is created, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
        - EmployeePayrollTaxParameter
      summary: PATCH Tax Parameter for an employee.
      operationId: EmployeePayrollTaxParameter_Patch_By_employeePayrollTaxParameter_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying the updates to the database.  The default value is FALSE if parameter is not specified.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations. For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeePayrollTaxParameter'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeePayrollTaxParameter'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeePayrollTaxParameter'
        required: true
      responses:
        '200':
          description: An EmployeePayrollTaxParameter is created, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/EmployeePayrollTaxParametersList:
    post:
      tags:
        - EmployeePayrollTaxParameter
      summary: POST Tax Parameter for an employee.
      operationId: EmployeePayrollTaxParameter_Post_By_employeePayrollTaxParameters_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying the updates to the database.  The default value is FALSE if parameter is not specified.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations. For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/EmployeePayrollTaxParameter'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/EmployeePayrollTaxParameter'
          text/html:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/EmployeePayrollTaxParameter'
        required: true
      responses:
        '200':
          description: EmployeePayrollTaxParameter is created, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
        - EmployeePayrollTaxParameter
      summary: PATCH Tax Parameter for an employee.
      operationId: EmployeePayrollTaxParameter_Patch_By_employeePayrollTaxParameters_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying the updates to the database.  The default value is FALSE if parameter is not specified.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations. For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/EmployeePayrollTaxParameter'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/EmployeePayrollTaxParameter'
          text/html:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/EmployeePayrollTaxParameter'
        required: true
      responses:
        '200':
          description: EmployeePayrollTaxParameter is created, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/EmployeePaySummaries:
    get:
      tags:
        - EmployeePaySummaries
      summary: GET a List of Employee pay summaries
      operationId: EmployeePaySummaries_GetEmployeePaySummaries_By_filterPaySummaryStartDate_filterPaySummaryEndDate_employeeXRefCode_locationXRefCode_payGroupXRefCode_payCategoryXRefCode_clientNamespace
      parameters:
        - name: filterPaySummaryStartDate
          in: query
          description: 'Inclusive period start date in UTC to determine which employee pay summary data to retrieve. Example: 2017-01-01T00:00:00'
          required: true
          schema:
            type: string
            format: date-time
        - name: filterPaySummaryEndDate
          in: query
          description: 'Inclusive period end date in UTC to determine which employee pay summary data to retrieve. Example: 2017-01-01T00:00:00'
          required: true
          schema:
            type: string
            format: date-time
        - name: employeeXRefCode
          in: query
          description: The unique identifier (external reference code) of the employee to be retrieved. The value provided must be the exact match for an employee
          schema:
            type: string
        - name: locationXRefCode
          in: query
          description: The unique identifier (external reference code) of the location to be retrieved. The value provided must be the exact match for a location
          schema:
            type: string
        - name: payGroupXRefCode
          in: query
          description: The unique identifier (external reference code) of the position to be retrieved. The value provided must be the exact match for a position
          schema:
            type: string
        - name: payCategoryXRefCode
          in: query
          description: The unique identifier (external reference code) of the payCatergory to be retrieved. The value provided must be the exact match for a payCatergory
          schema:
            type: string
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: A collection of EmployeePaySummary data meeting the search criteria.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayload_IEnumerable_EmployeePaySummary'
            text/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayload_IEnumerable_EmployeePaySummary'
            text/html:
              schema:
                $ref: '#/components/schemas/PaginatedPayload_IEnumerable_EmployeePaySummary'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
  /{clientNamespace}/V1/EmployeePaySummariesRetro:
    get:
      tags:
        - EmployeePaySummariesRetro
      summary: GET a List of Employee pay summaries retro
      operationId: EmployeePaySummariesRetro_GetEmployeePaySummaries_By_payGroupXRefCode_periodStartDate_periodEndDate_payDate_employeeXRefCode_locationXRefCode_payCategoryXRefCode_onlyRetros_payExportId_pageSize_clientNamespace
      parameters:
        - name: payGroupXRefCode
          in: query
          description: The unique identifier (external reference code) of the pay group to be retrieved. The value provided must be the exact match for a pay group.
          required: true
          schema:
            type: string
        - name: periodStartDate
          in: query
          description: The start date of the pay calendar to be retrieved. The value provided must be the exact match for an effective start of a pay calendar.
          schema:
            type: string
            format: date-time
        - name: periodEndDate
          in: query
          description: The end date of the pay calendar to be retrieved. The value provided must be the exact match for an effective end of a pay calendar.
          schema:
            type: string
            format: date-time
        - name: payDate
          in: query
          description: The pay date of the pay calendar to be retrieved. The value provided must be the exact match for a pay date of a pay calendar.
          schema:
            type: string
            format: date-time
        - name: employeeXRefCode
          in: query
          description: The unique identifier (external reference code) of the employee to be retrieved. The value provided must be the exact match for an employee.
          schema:
            type: string
        - name: locationXRefCode
          in: query
          description: The unique identifier (external reference code) of the location to be retrieved. The value provided must be the exact match for a location.
          schema:
            type: string
        - name: payCategoryXRefCode
          in: query
          description: The unique identifier (external reference code) of the payCategory to be retrieved. The value provided must be the exact match for a payCategory.
          schema:
            type: string
        - name: onlyRetros
          in: query
          description: Filters only Retro Employee Pay Summaries (defaults to false).
          schema:
            type: boolean
        - name: payExportId
          in: query
          description: The unique identifier of the Pay export data to be retrieved. The value provided must be the exact match for a Pay export.
          schema:
            type: integer
            format: int64
        - name: pageSize
          in: query
          description: Number of records to be loaded (defaults to a 1000 records).
          schema:
            type: integer
            format: int32
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: A collection of EmployeePaySummary retro data meeting the search criteria.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayload_IEnumerable_EmployeePaySummaryRetro'
            text/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayload_IEnumerable_EmployeePaySummaryRetro'
            text/html:
              schema:
                $ref: '#/components/schemas/PaginatedPayload_IEnumerable_EmployeePaySummaryRetro'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
  /{clientNamespace}/V1/Employees/{xRefCode}/PerformanceRatings:
    get:
      tags:
        - EmployeePerformanceRating
      summary: GET EmployeePerformanceRating Details
      operationId: EmployeePerformanceRating_Get_By_xRefCode_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: The EmployeePerformanceRating with the requested XRefCode.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeePerformanceRating'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeePerformanceRating'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeePerformanceRating'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
        - EmployeePerformanceRating
      operationId: EmployeePerformanceRating_Post_By_employeePerformanceRating_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeePerformanceRating'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeePerformanceRating'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeePerformanceRating'
        required: true
      responses:
        '200':
          description: An Employee Performance Rating is created, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
    patch:
      tags:
        - EmployeePerformanceRating
      operationId: EmployeePerformanceRating_Patch_By_employeePerformanceRating_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeePerformanceRating'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeePerformanceRating'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeePerformanceRating'
        required: true
      responses:
        '200':
          description: An Employee Performance Rating is created, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
  /{clientNamespace}/V1/Employees/{xRefCode}/EmployeeProperties:
    get:
      tags:
        - EmployeePropertyValue
      summary: GET EmployeePropertyValue Details
      operationId: EmployeePropertyValue_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: contextDate
          in: query
          description: 'The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: contextDateRangeFrom
          in: query
          description: 'The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: contextDateRangeTo
          in: query
          description: 'The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: The EmployeePropertyValue with the requested XRefCode.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeePropertyValue'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeePropertyValue'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeePropertyValue'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
        - EmployeePropertyValue
      summary: POST a EmployeePropertyValue
      operationId: EmployeePropertyValue_Post_By_employeePropertyValue_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeePropertyValue'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeePropertyValue'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeePropertyValue'
        required: true
      responses:
        '200':
          description: An Employee is created, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
        - EmployeePropertyValue
      summary: PATCH a EmployeePropertyValue
      operationId: EmployeePropertyValue_Patch_By_employeePropertyValue_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeePropertyValue'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeePropertyValue'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeePropertyValue'
        required: true
      responses:
        '200':
          description: The EmployeePropertyValue is updated, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/EmployeePunches:
    get:
      tags:
        - EmployeePunches
      summary: GET a List of Employee Punches
      operationId: EmployeePunches_GetEmployeePunches_By_filterTransactionStartTimeUTC_filterTransactionEndTimeUTC_employeeXRefCode_locationXRefCode_positionXRefCode_departmentXRefCode_jobXRefCode_docketXRefCode_projectXRefCode_payAdjustmentXRefCode_shiftStatus_filterShiftTimeStart_filterShiftTimeEnd_businessDate_pageSize_clientNamespace
      parameters:
        - name: filterTransactionStartTimeUTC
          in: query
          description: 'Inclusive transaction period start date in UTC to determine which employee punch data to retrieve. Example: 2017-01-01T00:00:00'
          required: true
          schema:
            type: string
            format: date-time
        - name: filterTransactionEndTimeUTC
          in: query
          description: 'Inclusive transaction period end date in UTC to determine which employee punch data to retrieve. Example: 2017-01-01T00:00:00'
          required: true
          schema:
            type: string
            format: date-time
        - name: employeeXRefCode
          in: query
          description: The unique identifier (external reference code) of the employee to be retrieved. The value provided must be the exact match for an employee
          schema:
            type: string
        - name: locationXRefCode
          in: query
          description: A case-sensitive field that identifies a location or organizational units
          schema:
            type: string
        - name: positionXRefCode
          in: query
          description: A case-sensitive field that identifies one or more Positions
          schema:
            type: string
        - name: departmentXRefCode
          in: query
          description: A case-sensitive field that identifies one or more Departments
          schema:
            type: string
        - name: jobXRefCode
          in: query
          description: A case-sensitive field that identifies one or more Jobs
          schema:
            type: string
        - name: docketXRefCode
          in: query
          description: A case-sensitive field that identifies one or more dockets
          schema:
            type: string
        - name: projectXRefCode
          in: query
          description: A case-sensitive field that identifies one or more projects
          schema:
            type: string
        - name: payAdjustmentXRefCode
          in: query
          description: A case-sensitive field that identifies one or more pay adjustment
          schema:
            type: string
        - name: shiftStatus
          in: query
          description: 'A case-sensitive field containing shift status groups. Examples: [ACTIVE, COMPLETED, PROBLEM, ALL]'
          schema:
            type: string
        - name: filterShiftTimeStart
          in: query
          description: 'Use with FilterTransactionStartTimeUTC to search for shifts with a Start and end time in a given timeframe. Example: Used to include or exclude edits made to historical punches'
          schema:
            type: string
            format: date-time
        - name: filterShiftTimeEnd
          in: query
          description: 'Use with FilterTransactionEndTimeUTC to search for shifts with a Start and end time in a given timeframe. Example: Used to include or exclude edits made to historical'
          schema:
            type: string
            format: date-time
        - name: businessDate
          in: query
          description: 'The Business Date value is intended as a “Timesheet View” to return punch data related to a clients Business day parameter configuration. Example: 2017-01-01T00:00:00'
          schema:
            type: string
            format: date-time
        - name: pageSize
          in: query
          description: The number of records returned per page in the paginated response
          schema:
            type: integer
            format: int32
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: A collection of EmployeePunch data meeting the search criteria.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayload_IEnumerable_EmployeePunch'
            text/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayload_IEnumerable_EmployeePunch'
            text/html:
              schema:
                $ref: '#/components/schemas/PaginatedPayload_IEnumerable_EmployeePunch'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
    delete:
      tags:
        - EmployeePunches
      operationId: EmployeePunches_DeleteEmployeePunch_By_employeePunchXRefCode_clientNamespace
      parameters:
        - name: employeePunchXRefCode
          in: query
          required: true
          schema:
            type: string
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: EmployeePunch details which matches XRefCode were Deleted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_EmployeePunchPatchPostDeleteResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_EmployeePunchPatchPostDeleteResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_EmployeePunchPatchPostDeleteResponse'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
  /{clientNamespace}/V1/EmployeeRawPunches:
    get:
      tags:
        - EmployeeRawPunches
      summary: GET a List of Employee Raw Punches
      operationId: EmployeeRawPunches_GetEmployeeRawPunches_By_filterTransactionStartTimeUTC_filterTransactionEndTimeUTC_employeeXRefCode_employeeBadge_punchState_punchTypes_pageSize_clientNamespace
      parameters:
        - name: filterTransactionStartTimeUTC
          in: query
          description: 'Inclusive transaction period start date in UTC to determine which employee punch data to retrieve. Example: 2017-01-01T00:00:00'
          required: true
          schema:
            type: string
            format: date-time
        - name: filterTransactionEndTimeUTC
          in: query
          description: 'Inclusive transaction period end date in UTC to determine which employee punch data to retrieve. Example: 2017-01-01T00:00:00'
          required: true
          schema:
            type: string
            format: date-time
        - name: employeeXRefCode
          in: query
          description: The unique identifier (external reference code) of the employee to be retrieved. The value provided must be the exact match for an employee
          schema:
            type: string
        - name: employeeBadge
          in: query
          description: The badge number of the employee to be retrieved. The value provided must be the exact match for a badge
          schema:
            type: string
        - name: punchState
          in: query
          description: 'The state of the punch. Examples: [PROCESSED, REJECTED, ALL]'
          schema:
            type: string
        - name: punchTypes
          in: query
          description: 'Comma separated values of punch types. Example: [Punch_In, Break_Out, Job_Transfer, ALL, etc]'
          schema:
            type: string
        - name: pageSize
          in: query
          description: The number of records returned per page in the paginated response
          schema:
            type: integer
            format: int32
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: A collection of EmployeePunch data meeting the search criteria.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayload_IEnumerable_EmployeeRawPunch'
            text/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayload_IEnumerable_EmployeeRawPunch'
            text/html:
              schema:
                $ref: '#/components/schemas/PaginatedPayload_IEnumerable_EmployeeRawPunch'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
    post:
      tags:
        - EmployeeRawPunches
      summary: POST (Create) Employee Raw Punch
      operationId: EmployeeRawPunches_Post_By_punch_isValidateOnly_clientNamespace
      parameters:
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST operation validates the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeRawPunchForSubmit'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeRawPunchForSubmit'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeRawPunchForSubmit'
        required: true
      responses:
        '200':
          description: A raw punch is created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayload_IEnumerable_EmployeeRawPunch'
            text/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayload_IEnumerable_EmployeeRawPunch'
            text/html:
              schema:
                $ref: '#/components/schemas/PaginatedPayload_IEnumerable_EmployeeRawPunch'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
  /{clientNamespace}/V1/Employees/{xRefCode}/Roles:
    get:
      tags:
        - EmployeeRole
      summary: GET EmployeeRole Details
      operationId: EmployeeRole_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: contextDate
          in: query
          description: 'The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: contextDateRangeFrom
          in: query
          description: 'The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: contextDateRangeTo
          in: query
          description: 'The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: The EmployeeRole with the requested XRefCode.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeRole'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeRole'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeRole'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
        - EmployeeRole
      summary: POST a EmployeeRole
      operationId: EmployeeRole_Post_By_employeeRole_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeRole'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeRole'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeRole'
        required: true
      responses:
        '200':
          description: An Employee is created, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
        - EmployeeRole
      summary: PATCH a EmployeeRole
      operationId: EmployeeRole_Patch_By_employeeRole_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeRole'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeRole'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeRole'
        required: true
      responses:
        '200':
          description: The EmployeeRole is updated, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees:
    get:
      tags:
        - Employees
      summary: GET a List of Employees
      operationId: Employees_Get_By_employeeNumber_displayName_socialSecurityNumber_employmentStatusXRefCode_orgUnitXRefCode_departmentXRefCode_jobXRefCode_positionXRefCode_payClassXRefCode_payGroupXRefCode_payPolicyXRefCode_payTypeXRefCode_payrollPolicyXRefCode_filterHireStartDate_filterHireEndDate_filterTerminationStartDate_filterTerminationEndDate_filterUpdatedStartDate_filterUpdatedEndDate_filterUpdatedEntities_filterOriginalHireStartDate_filterOriginalHireEndDate_filterSeniorityStartDate_filterSeniorityEndDate_filterBaseSalaryFrom_filterBaseSalaryTo_filterBaseRateFrom_filterBaseRateTo_contextDate_clientNamespace
      parameters:
        - name: employeeNumber
          in: query
          description: Employment identification number assigned to an employee.  A partial value can be provided for a wider search.
          schema:
            type: string
        - name: displayName
          in: query
          description: Employee Name. A partial value can be provided for a wider search.
          schema:
            type: string
        - name: socialSecurityNumber
          in: query
          description: Social Security Number of the employee. A partial value can be provided for a wider search.
          schema:
            type: string
        - name: employmentStatusXRefCode
          in: query
          description: Employment status xrefcode, which can be client-specific. Use this to search employees having the given employment status. Use a ContextDate value to search for employees with a given status as of a point in time. Otherwise, the search will use the current date and time.
          schema:
            type: string
        - name: orgUnitXRefCode
          in: query
          description: Organizational units' xrefcode. Use this to search all levels of the employees’ organization including department, location, region, corporate, etc. Use a ContextDate value to search for employees with a specific value as of a point in time.  Otherwise, the search will use the current date and time.
          schema:
            type: string
        - name: departmentXRefCode
          in: query
          description: Department xrefcode value, which can be client-specific. Use this to search employees' work assignments having the given department.Use a ContextDate value to search for employees with a given department as of a point in time. Otherwise, the search will use the current date and time.
          schema:
            type: string
        - name: jobXRefCode
          in: query
          description: Job xrefcode value, which can be client-specific. Use this to search employees' work assignments having the given job. Use a ContextDate value to search for employees with a given job as of a point in time. Otherwise, the search will use the current date and time.
          schema:
            type: string
        - name: positionXRefCode
          in: query
          description: Position xrefcode value, which can be client-specific. Use this to search employees' work assignments having the given position. Use a ContextDate value to search for employees with a given position as of a point in time. Otherwise, the search will use the current date and time.
          schema:
            type: string
        - name: payClassXRefCode
          in: query
          description: Pay class xrefcode value, which can be client-specific. Use this to search employees having the given pay class. Use a ContextDate value to search for employees with a given pay class as of a point in time. Otherwise, the search will use the current date and time.
          schema:
            type: string
        - name: payGroupXRefCode
          in: query
          description: Pay group xrefcode value, which can be client-specific. Use this to search employees having the given pay group. Use a ContextDate value to search for employees with a given pay group as of a point in time. Otherwise, the search will use the current date and time.
          schema:
            type: string
        - name: payPolicyXRefCode
          in: query
          description: Pay policy xrefcode value, which can be client-specific. Use this to search employees having the given pay policy. Use a ContextDate value to search for employees with a given pay policy as of a point in time. Otherwise, the search will use the current date and time.
          schema:
            type: string
        - name: payTypeXRefCode
          in: query
          description: Pay type xrefcode value, which can be client-specific. Use this to search employees having the given pay type. Use a ContextDate value to search for employees with a given pay type as of a point in time. Otherwise, the search will use the current date and time.
          schema:
            type: string
        - name: payrollPolicyXRefCode
          in: query
          description: Payroll policy xrefcode value, which can be client-specific. Use this to search employees having the given payroll policy. Use a ContextDate value to search for employees with a given payroll policy as of a point in time. Otherwise, the search will use the current date and time.
          schema:
            type: string
        - name: filterHireStartDate
          in: query
          description: Use to search for employees whose most recent hire date is greater than or equal to the specified value (e.g. 2017-01-01T13:24:56). Use with filterHireEndDate to search for employees hired or rehired in a given timeframe.
          schema:
            type: string
            format: date-time
        - name: filterHireEndDate
          in: query
          description: 'Use to search for employees whose most recent hire date is less than or equal to the specified value. Typically this parameter is used in conjunction with FilterHireStartDate to search for employees hired or rehired in a given timeframe. Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: filterTerminationStartDate
          in: query
          description: 'Use to search for employees with termination date values greater than or equal to the specified value. Typically this parameter is used in conjunction with FilterTerminationStartDate to search for employees terminated in a given timeframe. Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: filterTerminationEndDate
          in: query
          description: 'Use to search for employees with termination date values less than or equal to the specified value. Typically this parameter is used in conjunction with filterTerminationStartDate to search for employees terminated in a given timeframe. Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: filterUpdatedStartDate
          in: query
          description: 'The beginning date used when searching for employees with updates (and newly effective records) in a specified timeframe. When a value is provided for this parameter, a filterUpdatedEndDate value must also be provided. Because this search is conducted across all entities in the HR data model regardless of whether the requesting user has access to them, it is possible that the query will return XRefCode of employees with changes in which the consuming application is not interested.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: filterUpdatedEndDate
          in: query
          description: 'The end date used when searching for employees with updates (and newly effective records) in a specified timeframe. When a value is provided for this parameter, a filterUpdatedStartDate value must also be provided.   Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: filterUpdatedEntities
          in: query
          description: Use to search employees with changes to specific employee sub-entities. These sub-entity names, based on the employee model, can be provided in a comma-separated value, e.g. filterUpdatedEntities=EmploymentStatuses,WorkAssignments,Addresses. The base Employee is always searched by default. This parameter requires that filterUpdatedStartDate/filterUpdatedEndDate range is provided, otherwise it is ignored and all relevant employee entities are searched.
          schema:
            type: string
        - name: filterOriginalHireStartDate
          in: query
          description: 'Use to search for employees with original hire date values greater than or equal to the specified value. Typically this parameter is used in conjunction with filterOriginialHireEndDate to search for employees who were originally hired in a given timeframe. Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: filterOriginalHireEndDate
          in: query
          description: 'Use to search for employees with original hire date values less than or equal to the specified value. Typically this parameter is used in conjunction with filterOriginialHireStartDate to search for employees who were originally hired in a given timeframe. Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: filterSeniorityStartDate
          in: query
          description: 'Use to search for employees with seniority date values greater than or equal to the specified value. Typically this parameter is used in conjunction with filterSeniorityEndDate to search for employees seniority date in a given timeframe. Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: filterSeniorityEndDate
          in: query
          description: 'Use to search for employees with original hire date values less than or equal to the specified value. Typically this parameter is used in conjunction with filterSeniorityStartDate to search for employees seniority date in a given timeframe. Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: filterBaseSalaryFrom
          in: query
          description: 'Use to search for employees base salary greater than or equal to the specified value. Typically this parameter is used in conjunction with filterBaseSalaryTo to search for employees base salary in a given range. Example: 20000'
          schema:
            type: number
            format: double
        - name: filterBaseSalaryTo
          in: query
          description: 'Use to search for employees base salary less than or equal to the specified value. Typically this parameter is used in conjunction with filterBaseSalaryFrom to search for employees base salary in a given range. Example: 40000'
          schema:
            type: number
            format: double
        - name: filterBaseRateFrom
          in: query
          description: 'Use to search for employees base rate greater than or equal to the specified value. Typically this parameter is used in conjunction with filterBaseRateTo to search for employees base rate in a given range. Example: 10'
          schema:
            type: number
            format: double
        - name: filterBaseRateTo
          in: query
          description: 'Use to search for employees base rate less than or equal to the specified value. Typically this parameter is used in conjunction with filterBaseRateFrom to search for employees base rate in a given range. Example: 40'
          schema:
            type: number
            format: double
        - name: contextDate
          in: query
          description: 'The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: A collection of Employees XRefCodes meeting the search criteria.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_Employee'
              example:
                Data:
                  - XRefCode: string
                  - XRefCode: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_Employee'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_Employee'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
    post:
      tags:
        - Employees
      summary: POST (Hire) an Employee
      operationId: Employees_Post_By_employee_isValidateOnly_clientNamespace
      parameters:
        - name: isValidateOnly
          in: query
          description: If true, then the POST data is validated without being submitted.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST (hire and rehire ) and PATCH (employee update) operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Employee'
          text/json:
            schema:
              $ref: '#/components/schemas/Employee'
          text/html:
            schema:
              $ref: '#/components/schemas/Employee'
        required: true
      responses:
        '200':
          description: An Employee is created, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
  /{clientNamespace}/V1/Employees/{xRefCode}:
    get:
      tags:
        - Employees
      summary: GET Employee Details
      operationId: Employees_Get_By_xRefCode_contextDate_expand_contextDateRangeFrom_contextDateRangeTo_amfEntity_amfLevel_amfLevelValue_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee to be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: contextDate
          in: query
          description: 'The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: expand
          in: query
          description: This parameter accepts a comma-separated list of top-level entities that contain the data elements needed for downstream processing.  When this parameter is not used, only data elements from the employee master record will be included.  For more information, please refer to the Introduction to Dayforce Web Services document.
          schema:
            type: string
        - name: contextDateRangeFrom
          in: query
          description: 'The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: contextDateRangeTo
          in: query
          description: 'The Context Date Range To value is end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: amfEntity
          in: query
          description: This parameter is to identify the application object for Application Metadata Framework (AMF) request.
          schema:
            type: string
        - name: amfLevel
          in: query
          description: This parameter is to identify the level for Application Metadata Framework (AMF) request.
          schema:
            type: string
        - name: amfLevelValue
          in: query
          description: This parameter is to identify context specific to amfLevel for Application Metadata Framework (AMF) request.
          schema:
            type: string
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: The Employee with the requested XRefCode.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Employee'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Employee'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Employee'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
    patch:
      tags:
        - Employees
      summary: PATCH (Update) an Employee
      operationId: Employees_Patch_By_employee_xRefCode_isValidateOnly_replaceExisting_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee to be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: replaceExisting
          in: query
          description: "This parameter accepts a comma-separated list of employee-subordinate entities where the respective data provided will replace all existing records.\r\n            \r\nIt applies to the following collections (which are not effective dated and thus require this special treatment):\r\n            \r\n<list type=\"bullet\"><item>ClockDeviceGroups, </item><item>DirectDeposits, </item><item>EmployeePayAdjustCodeGroups, </item><item>OrgUnitLocationTypes, </item><item>SSOAccounts, </item><item>UserPayAdjustCodeGroups</item></list>"
          schema:
            type: string
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST (hire and rehire ) and PATCH (employee update) operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Employee'
          text/json:
            schema:
              $ref: '#/components/schemas/Employee'
          text/html:
            schema:
              $ref: '#/components/schemas/Employee'
        required: true
      responses:
        '200':
          description: The Employee is updated, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_ProcessResult'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_ProcessResult'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
  /{clientNamespace}/V1/Employees/{xRefCode}/Schedules:
    get:
      tags:
        - Employees
      summary: GET List Employee Schedules
      operationId: EmployeeSchedules_Get_By_xRefCode_filterScheduleStartDate_filterScheduleEndDate_isPosted_expand_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee to be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: filterScheduleStartDate
          in: query
          description: 'Inclusive period start aligned to the employee business day start date to determine which employee schedule data to retrieve . Example: 2017-01-01T13:24:56'
          required: true
          schema:
            type: string
            format: date-time
        - name: filterScheduleEndDate
          in: query
          description: 'Exclusive period end aligned to the employee business day start to determine which employee schedule data to retrieve . Example: 2017-01-01T13:24:56'
          required: true
          schema:
            type: string
            format: date-time
        - name: isPosted
          in: query
          description: A flag to determine whether to display posted schedules.By default it searches for published schedules
          schema:
            type: boolean
        - name: expand
          in: query
          description: This parameter accepts a comma-separated list of top-level entities that contain the data elements needed for downstream processing.  When this parameter is not used, only data elements from the master record will be included.  For more information, please refer to the Introduction to Dayforce Web Services document.
          schema:
            type: string
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: A collection of employee schedule meeting the search criteria.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeSchedule'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeSchedule'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeSchedule'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
  /{clientNamespace}/V1/EmployeeSchedules:
    get:
      tags:
        - EmployeeSchedules
      summary: GET List of Employee Schedules
      operationId: EmployeeSchedules_Get_By_filterScheduleStartDate_filterScheduleEndDate_employeeXRefCode_departmentXRefCode_jobXRefCode_positionXRefCode_orgUnitXRefCode_unfill_expand_pageSize_clientNamespace
      parameters:
        - name: filterScheduleStartDate
          in: query
          description: 'Inclusive period start aligned to the employee business day start date to determine which employee schedule data to retrieve . Example: 2017-01-01T13:24:56'
          required: true
          schema:
            type: string
            format: date-time
        - name: filterScheduleEndDate
          in: query
          description: 'Exclusive period end aligned to the employee business day start to determine which employee schedule data to retrieve . Example: 2017-01-01T13:24:56'
          required: true
          schema:
            type: string
            format: date-time
        - name: employeeXRefCode
          in: query
          description: Only valid when Unfill = FALSE or not provided
          schema:
            type: string
        - name: departmentXRefCode
          in: query
          schema:
            type: string
        - name: jobXRefCode
          in: query
          schema:
            type: string
        - name: positionXRefCode
          in: query
          schema:
            type: string
        - name: orgUnitXRefCode
          in: query
          description: Not required when Unfill = TRUE, Will send all unfilled shifts for the specified date range
          schema:
            type: string
        - name: unfill
          in: query
          description: "When a TRUE value is used in this parameter, the API returns all Unfill shifts.\r\n                                 When a FALSE value is used in this parameter, only employee schdules are returned"
          schema:
            type: boolean
        - name: expand
          in: query
          description: This parameter accepts a comma-separated list of top-level entities that contain the data elements needed for downstream processing.  When this parameter is not used, only data elements from the master record will be included.  For more information, please refer to the Introduction to Dayforce Web Services document.
          schema:
            type: string
        - name: pageSize
          in: query
          description: The number of records returned per page in the paginated response
          schema:
            type: integer
            format: int32
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: A collection of employee schedule meeting the search criteria.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayload_IEnumerable_EmployeeSchedule'
            text/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayload_IEnumerable_EmployeeSchedule'
            text/html:
              schema:
                $ref: '#/components/schemas/PaginatedPayload_IEnumerable_EmployeeSchedule'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '403':
          description: User does not have access to the Organization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
    post:
      tags:
        - EmployeeSchedules
      summary: POST (Create) Employee schedule
      operationId: EmployeeSchedules_Post_By_orgUnitXRefCode_employeeSchedules_isValidateOnly_violationLevel_clientNamespace
      parameters:
        - name: orgUnitXRefCode
          in: query
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST operation validates the request without applying updates to the database.
          schema:
            type: boolean
        - name: violationLevel
          in: query
          schema:
            enum:
              - 0
              - 1
              - 2
              - 3
              - 4
            type: integer
            format: int32
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/EmployeeSchedulePostAPIRequestDTO'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/EmployeeSchedulePostAPIRequestDTO'
          text/html:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/EmployeeSchedulePostAPIRequestDTO'
        required: true
      responses:
        '200':
          description: OK response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeSchedulePostAPIResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeSchedulePostAPIResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeSchedulePostAPIResponse'
        '400':
          description: Request is malformed or has validation errors.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
    patch:
      tags:
        - EmployeeSchedules
      summary: PATCH (Update) Employee schedule
      operationId: EmployeeSchedules_Patch_By_orgUnitXRefCode_employeeSchedules_isValidateOnly_violationLevel_clientNamespace
      parameters:
        - name: orgUnitXRefCode
          in: query
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, PATCH operation validates the request without applying updates to the database.
          schema:
            type: boolean
        - name: violationLevel
          in: query
          schema:
            enum:
              - 0
              - 1
              - 2
              - 3
              - 4
            type: integer
            format: int32
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/EmployeeSchedulePatchAPIRequestDTO'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/EmployeeSchedulePatchAPIRequestDTO'
          text/html:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/EmployeeSchedulePatchAPIRequestDTO'
        required: true
      responses:
        '200':
          description: OK response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeSchedulePostAPIResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeSchedulePostAPIResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeSchedulePostAPIResponse'
        '400':
          description: Request is malformed or has validation errors.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
  /{clientNamespace}/V1/EmployeeSchedulesDelta:
    get:
      tags:
        - EmployeeSchedulesDelta
      summary: GET List of Employee Schedules that have been changed since a given date (or between a date range)
      operationId: EmployeeSchedulesDelta_Get_By_orgUnitXRefCode_scheduleChangesFromDate_scheduleChangesToDate_unscheduledEmployeeDays_unscheduledEmployeeOption_schedulePostedOption_excludeNonProductiveShifts_pageSize_clientNamespace
      parameters:
        - name: orgUnitXRefCode
          in: query
          description: The unique identifier (external reference code) of the org unit. Schedules fetched will belong to this org unit (or children thereof)
          required: true
          schema:
            type: string
        - name: scheduleChangesFromDate
          in: query
          description: 'Date from which to look for changes to schedules from Example: 2017-01-01T13:24:56'
          required: true
          schema:
            type: string
            format: date-time
        - name: scheduleChangesToDate
          in: query
          description: 'Optional Date until which to look for changes to schedules Example: 2017-02-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: unscheduledEmployeeDays
          in: query
          description: 'Number of days from scheduleChangesFromDate date to return unscheduled employee free days for (Maximum : 60)'
          schema:
            type: integer
            format: int32
        - name: unscheduledEmployeeOption
          in: query
          description: Return Unscheduled Employee Days Option possible values are None, PrimaryOnly, SecondaryOnly and Both
          schema:
            enum:
              - 0
              - 1
              - 2
              - 3
            type: integer
            format: int32
        - name: schedulePostedOption
          in: query
          description: 'Whether or not to include only schedules that are posted or not - possible values are:  All, Posted, Unposted'
          schema:
            enum:
              - 0
              - 1
              - 2
            type: integer
            format: int32
        - name: excludeNonProductiveShifts
          in: query
          description: Whether or not to exclude schedules that are entirely or partially marked as non-productive.
          schema:
            type: boolean
        - name: pageSize
          in: query
          description: The number of records returned per page in the paginated response
          schema:
            type: integer
            format: int32
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: A collection of employee schedules meeting the search criteria.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayload_IEnumerable_EmployeeScheduleExtended'
            text/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayload_IEnumerable_EmployeeScheduleExtended'
            text/html:
              schema:
                $ref: '#/components/schemas/PaginatedPayload_IEnumerable_EmployeeScheduleExtended'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '403':
          description: User does not have access to the Organization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
  /{clientNamespace}/V1/Employees/{xRefCode}/EmployeeShortTimeWorks:
    get:
      tags:
        - EmployeeShortTimeWork
      summary: GET EmployeeShortTimeWork Details
      operationId: EmployeeShortTimeWork_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: contextDate
          in: query
          description: 'The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: contextDateRangeFrom
          in: query
          description: 'The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: contextDateRangeTo
          in: query
          description: 'The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: The EmployeeShortTimeWorkController with the requested XRefCode.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeShortTimeWork'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeShortTimeWork'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeShortTimeWork'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/Skills:
    get:
      tags:
        - EmployeeSkill
      summary: GET EmployeeSkill Details
      operationId: EmployeeSkill_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: contextDate
          in: query
          description: 'The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: contextDateRangeFrom
          in: query
          description: 'The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: contextDateRangeTo
          in: query
          description: 'The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: The EmployeeSkill with the requested XRefCode.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeSkill'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeSkill'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeSkill'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
        - EmployeeSkill
      summary: POST an Employee Skill
      operationId: EmployeeSkill_Post_By_employeeSkill_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeSkill'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeSkill'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeSkill'
        required: true
      responses:
        '200':
          description: An Employee Skill is created, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
    patch:
      tags:
        - EmployeeSkill
      summary: PATCH (Update) an Employee Skill
      operationId: EmployeeSkill_Patch_By_employeeSkill_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeSkill'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeSkill'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeSkill'
        required: true
      responses:
        '200':
          description: An Employee Skill is updated, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
  /{clientNamespace}/V1/Employees/{xRefCode}/TrainingPrograms:
    get:
      tags:
        - EmployeeTrainingProgram
      summary: GET EmployeeTrainingProgram Details
      operationId: EmployeeTrainingProgram_Get_By_xRefCode_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: The EmployeeTrainingProgram with the requested XRefCode.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeTrainingProgram'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeTrainingProgram'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeTrainingProgram'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
        - EmployeeTrainingProgram
      summary: POST an EmployeeTrainingProgram
      operationId: EmployeeTrainingProgram_Post_By_employeeTrainingProgram_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeTrainingProgram'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeTrainingProgram'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeTrainingProgram'
        required: true
      responses:
        '200':
          description: An EmployeeTrainingProgram is created, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
  /{clientNamespace}/V1/Employees/{xRefCode}/UKTax/Irregular:
    get:
      tags:
        - EmployeeUKIrregularPaymentDetails
      summary: GET an EmployeeUKIrregularPaymentDetails
      operationId: EmployeeUKIrregularPaymentDetails_Get_By_xRefCode_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: The EmployeeUKIrregularPaymentDetail with the requested XRefCode.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeUKIrregularPaymentDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeUKIrregularPaymentDetails'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeUKIrregularPaymentDetails'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
        - EmployeeUKIrregularPaymentDetails
      summary: POST an EmployeeUKIrregularPaymentDetails
      operationId: EmployeeUKIrregularPaymentDetails_Post_By_employeeUKIrregularPaymentDetails_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeUKIrregularPaymentDetails'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeUKIrregularPaymentDetails'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeUKIrregularPaymentDetails'
        required: true
      responses:
        '200':
          description: An EmployeeUKIrregularPaymentDetails is created, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
        - EmployeeUKIrregularPaymentDetails
      summary: PATCH an EmployeeUKIrregularPaymentDetails
      operationId: EmployeeUKIrregularPaymentDetails_Patch_By_employeeUKIrregularPaymentDetails_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeUKIrregularPaymentDetails'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeUKIrregularPaymentDetails'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeUKIrregularPaymentDetails'
        required: true
      responses:
        '200':
          description: The EmployeeUKIrregularPaymentDetails is updated, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/UKNI/NIInfo:
    get:
      tags:
        - EmployeeUKNIDetails
      summary: GET Employee NI Details
      operationId: EmployeeUKNIDetails_Get_By_xRefCode_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: The EmployeeUKNIDetails with the requested XRefCode.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeUKNIDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeUKNIDetails'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeUKNIDetails'
        '400':
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
        - EmployeeUKNIDetails
      summary: POST Employee NI Details
      operationId: EmployeeUKNIDetails_Post_By_employeeNi_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeUKNIDetails'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeUKNIDetails'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeUKNIDetails'
        required: true
      responses:
        '200':
          description: Created NI Details for Employee with supplied XRefCode.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeUKNIDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeUKNIDetails'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeUKNIDetails'
        '400':
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
        - EmployeeUKNIDetails
      summary: PATCH Employee NI Details
      operationId: EmployeeUKNIDetails_Patch_By_employeeNi_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: ''
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeUKNIDetails'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeUKNIDetails'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeUKNIDetails'
        required: true
      responses:
        '200':
          description: The EmployeeUKTaxDetails is updated, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/UKTax/PostgraduateLoan:
    get:
      tags:
        - EmployeeUKPostgraduateLoan
      summary: GET EmployeeUKPostgraduateLoan Details
      operationId: EmployeeUKPostgraduateLoan_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: contextDate
          in: query
          schema:
            type: string
            format: date-time
        - name: contextDateRangeFrom
          in: query
          schema:
            type: string
            format: date-time
        - name: contextDateRangeTo
          in: query
          schema:
            type: string
            format: date-time
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: The EmployeeUKPostgraduateLoan with the requested XRefCode.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeUKPostgraduateLoan'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeUKPostgraduateLoan'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeUKPostgraduateLoan'
        '400':
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
        - EmployeeUKPostgraduateLoan
      summary: POST an EmployeeUKPostgraduateLoan
      operationId: EmployeeUKPostgraduateLoan_Post_By_employeeUKPostgraduateLoan_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeUKPostgraduateLoan'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeUKPostgraduateLoan'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeUKPostgraduateLoan'
        required: true
      responses:
        '200':
          description: An EmployeeUKPostgraduateLoan is created, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
        - EmployeeUKPostgraduateLoan
      summary: PATCH an EmployeeUKPostgraduateLoan
      operationId: EmployeeUKPostgraduateLoan_Patch_By_employeeUKPostgraduateLoan_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeUKPostgraduateLoan'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeUKPostgraduateLoan'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeUKPostgraduateLoan'
        required: true
      responses:
        '200':
          description: The EmployeeUKPostgraduateLoan is updated, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/UKTax/StudentLoan:
    get:
      tags:
        - EmployeeUKStudentLoan
      summary: GET EmployeeUKStudentLoan Details
      operationId: EmployeeUKStudentLoan_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: contextDate
          in: query
          schema:
            type: string
            format: date-time
        - name: contextDateRangeFrom
          in: query
          schema:
            type: string
            format: date-time
        - name: contextDateRangeTo
          in: query
          schema:
            type: string
            format: date-time
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: The EmployeeUKStudentLoan with the requested XRefCode.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeUKStudentLoan'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeUKStudentLoan'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeUKStudentLoan'
        '400':
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
        - EmployeeUKStudentLoan
      summary: POST an EmployeeUKStudentLoan
      operationId: EmployeeUKStudentLoan_Post_By_employeeUKStudentLoan_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeUKStudentLoan'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeUKStudentLoan'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeUKStudentLoan'
        required: true
      responses:
        '200':
          description: An EmployeeUKStudentLoan is created, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
        - EmployeeUKStudentLoan
      summary: PATCH an EmployeeUKStudentLoan
      operationId: EmployeeUKStudentLoan_Patch_By_employeeUKStudentLoan_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeUKStudentLoan'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeUKStudentLoan'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeUKStudentLoan'
        required: true
      responses:
        '200':
          description: The EmployeeUKStudentLoan is updated, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/UKTax/TaxInfo:
    get:
      tags:
        - EmployeeUKTaxDetails
      summary: GET EmployeeUKTaxDetails Details
      operationId: EmployeeUKTaxDetails_Get_By_xRefCode_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: The EmployeeUKTaxDetails with the requested XRefCode.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeUKTaxDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeUKTaxDetails'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeUKTaxDetails'
        '400':
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
        - EmployeeUKTaxDetails
      summary: POST an EmployeeUKTaxDetails
      operationId: EmployeeUKTaxDetails_Post_By_employeeUKTaxDetails_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeUKTaxDetails'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeUKTaxDetails'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeUKTaxDetails'
        required: true
      responses:
        '200':
          description: An EmployeeUKTaxDetails is created, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
        - EmployeeUKTaxDetails
      summary: PATCH an EmployeeUKTaxDetails
      operationId: EmployeeUKTaxDetails_Patch_By_employeeUKTaxDetails_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeUKTaxDetails'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeUKTaxDetails'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeUKTaxDetails'
        required: true
      responses:
        '200':
          description: The EmployeeUKTaxDetails is updated, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/UnionMemberships:
    get:
      tags:
        - EmployeeUnion
      summary: GET EmployeeUnion Details
      operationId: EmployeeUnion_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: contextDate
          in: query
          description: 'The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: contextDateRangeFrom
          in: query
          description: 'The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: contextDateRangeTo
          in: query
          description: 'The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: The EmployeeUnion with the requested XRefCode.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeUnionMembership'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeUnionMembership'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeUnionMembership'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
        - EmployeeUnion
      summary: POST an EmployeeUnion
      operationId: EmployeeUnion_Post_By_employeeUnion_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeUnionMembership'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeUnionMembership'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeUnionMembership'
        required: true
      responses:
        '200':
          description: A EmployeeUnion is created, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
        - EmployeeUnion
      summary: PATCH an EmployeeUnion
      operationId: EmployeeUnion_Patch_By_employeeUnion_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeUnionMembership'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeUnionMembership'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeUnionMembership'
        required: true
      responses:
        '200':
          description: The EmployeeUnion is updated, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/USFederalTaxes:
    get:
      tags:
        - EmployeeUSFederalTax
      summary: GET EmployeeUSFederalTax Details
      operationId: EmployeeUSFederalTax_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: contextDate
          in: query
          description: 'The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: contextDateRangeFrom
          in: query
          description: 'The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: contextDateRangeTo
          in: query
          description: 'The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: The EmployeeUSFederalTax with the requested XRefCode.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeUSFederalTax'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeUSFederalTax'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeUSFederalTax'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
        - EmployeeUSFederalTax
      summary: POST a EmployeeUSFederalTax
      operationId: EmployeeUSFederalTax_Post_By_employeeUSFederalTax_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeUSFederalTax'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeUSFederalTax'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeUSFederalTax'
        required: true
      responses:
        '200':
          description: An EmployeeUSFederalTax is created, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
        - EmployeeUSFederalTax
      summary: PATCH a EmployeeUSFederalTax
      operationId: EmployeeUSFederalTax_Patch_By_employeeUSFederalTax_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeUSFederalTax'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeUSFederalTax'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeUSFederalTax'
        required: true
      responses:
        '200':
          description: The EmployeeUSFederalTax is updated, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/USStateTaxes:
    get:
      tags:
        - EmployeeUSStateTax
      summary: GET EmployeeUSStateTax Details
      operationId: EmployeeUSStateTax_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: contextDate
          in: query
          description: 'The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: contextDateRangeFrom
          in: query
          description: 'The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: contextDateRangeTo
          in: query
          description: 'The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: The EmployeeUSStateTax with the requested XRefCode.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeUSStateTax'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeUSStateTax'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeUSStateTax'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
        - EmployeeUSStateTax
      summary: POST EmployeeUSStateTax Details
      operationId: EmployeeUSStateTax_Post_By_emplyeeUSStateTax_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeUSStateTax'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeUSStateTax'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeUSStateTax'
        required: true
      responses:
        '200':
          description: A EmployeeUSStateTax Detail is created, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
        - EmployeeUSStateTax
      summary: PATCH EmployeeUSStateTax Details
      operationId: EmployeeUSStateTax_Patch_By_emplyeeUSStateTax_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeUSStateTax'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeUSStateTax'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeUSStateTax'
        required: true
      responses:
        '200':
          description: The EmployeeUSStateTax Detail is updated, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/USTaxStatuses:
    get:
      tags:
        - EmployeeUSTaxStatus
      summary: GET EmployeeUSTaxStatus Details
      operationId: EmployeeUSTaxStatus_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: contextDate
          in: query
          description: 'The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: contextDateRangeFrom
          in: query
          description: 'The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: contextDateRangeTo
          in: query
          description: 'The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: The EmployeeUSTaxStatus with the requested XRefCode.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeUSTaxStatus'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeUSTaxStatus'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeUSTaxStatus'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
        - EmployeeUSTaxStatus
      summary: POST EmployeeUSTaxStatus Details
      operationId: EmployeeUSTaxStatus_Post_By_employeeUSTaxStatus_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeUSTaxStatus'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeUSTaxStatus'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeUSTaxStatus'
        required: true
      responses:
        '200':
          description: A EmployeeUSTaxStatus Detail is created, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
        - EmployeeUSTaxStatus
      summary: PATCH EmployeeUSTaxStatus Details
      operationId: EmployeeUSTaxStatus_Patch_By_employeeUSTaxStatus_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeUSTaxStatus'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeUSTaxStatus'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeUSTaxStatus'
        required: true
      responses:
        '200':
          description: The EmployeeUSTaxStatus Detail is updated, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/EmployeeVOE/{countryCode}/{employeeXRefCode}:
    get:
      tags:
        - EmployeeVerification
      summary: GET Verification of Employment (VOE) for a specific employee.
      operationId: EmployeeVerification_GetEmployeeVOE_By_countryCode_employeeXRefCode_clientNamespace
      parameters:
        - name: countryCode
          in: path
          description: Employee's Country Code.
          required: true
          schema:
            type: string
        - name: employeeXRefCode
          in: path
          description: The unique identifier (external reference code) of the employee.
          required: true
          schema:
            type: string
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: The EmployeePayrollTax with the requested XRefCode.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_EmployeeVOE'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_EmployeeVOE'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_EmployeeVOE'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/EmployeeVOI/{countryCode}/{employeeXRefCode}:
    get:
      tags:
        - EmployeeVerification
      summary: GET Verification of Income (VOI) for a specific employee.
      operationId: EmployeeVerification_GetEmployeeVOI_By_countryCode_employeeXRefCode_clientNamespace
      parameters:
        - name: countryCode
          in: path
          description: Employee's Country Code.
          required: true
          schema:
            type: string
        - name: employeeXRefCode
          in: path
          description: The unique identifier (external reference code) of the employee.
          required: true
          schema:
            type: string
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: The EmployeePayrollTax with the requested XRefCode.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_EmployeeVOI'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_EmployeeVOI'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_EmployeeVOI'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/VeteranStatuses:
    get:
      tags:
        - EmployeeVeteransStatus
      summary: GET EmployeeVeteransStatus Details
      operationId: EmployeeVeteransStatus_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: contextDate
          in: query
          description: 'The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: contextDateRangeFrom
          in: query
          description: 'The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: contextDateRangeTo
          in: query
          description: 'The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: The EmployeeVeteransStatusController with the requested XRefCode.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeVeteransStatus'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeVeteransStatus'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeVeteransStatus'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
        - EmployeeVeteransStatus
      summary: POST an EmployeeVeteransStatus
      operationId: EmployeeVeteransStatus_Post_By_employeeVeteransStatus_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeVeteransStatus'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeVeteransStatus'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeVeteransStatus'
        required: true
      responses:
        '200':
          description: A EmployeeVeteransStatus is created, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
        - EmployeeVeteransStatus
      summary: PATCH an EmployeeVeteransStatus
      operationId: EmployeeVeteransStatus_Patch_By_employeeVeteransStatus_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeVeteransStatus'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeVeteransStatus'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeVeteransStatus'
        required: true
      responses:
        '200':
          description: The EmployeeVeteransStatus is updated, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/VolunteerLists:
    get:
      tags:
        - EmployeeVolunteerList
      summary: GET Employee's Volunteer List Details
      operationId: EmployeeVolunteerList_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: contextDate
          in: query
          description: 'The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: contextDateRangeFrom
          in: query
          description: 'The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: contextDateRangeTo
          in: query
          description: 'The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: The  EmployeeVolunteerList for the requested employee XRefCode.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeVolunteerList'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeVolunteerList'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeVolunteerList'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
        - EmployeeVolunteerList
      summary: POST an EmployeeVolunteerList
      operationId: EmployeeVolunteerList_Post_By_employeeVolunteerList_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeVolunteerList'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeVolunteerList'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeVolunteerList'
        required: true
      responses:
        '200':
          description: A EmployeeVolunteerList is created, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
        - EmployeeVolunteerList
      summary: PATCH an EmployeeVolunteerList
      operationId: EmployeeVolunteerList_Patch_By_employeeVolunteerList_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeVolunteerList'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeVolunteerList'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeVolunteerList'
        required: true
      responses:
        '200':
          description: A EmployeeVolunteerList is updated, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/EmployeeWorkAssignmentManagers:
    get:
      tags:
        - EmployeeWorkAssigmentManager
      summary: GET EmployeeWorkAssignmentManager Details
      operationId: EmployeeWorkAssigmentManager_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: contextDate
          in: query
          description: 'The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: contextDateRangeFrom
          in: query
          description: 'The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: contextDateRangeTo
          in: query
          description: 'The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: The EmployeeWorkAssignmentManager with the requested XRefCode.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeWorkAssignmentManager'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeWorkAssignmentManager'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeWorkAssignmentManager'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
        - EmployeeWorkAssigmentManager
      summary: POST a EmployeeWorkAssignmentManager
      operationId: EmployeeWorkAssigmentManager_Post_By_ewam_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeWorkAssignmentManager'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeWorkAssignmentManager'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeWorkAssignmentManager'
        required: true
      responses:
        '200':
          description: An EmployeeWorkAssignmentManager is created, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
        - EmployeeWorkAssigmentManager
      summary: PATCH a EmployeeWorkAssignmentManager
      operationId: EmployeeWorkAssigmentManager_Patch_By_ewam_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeWorkAssignmentManager'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeWorkAssignmentManager'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeWorkAssignmentManager'
        required: true
      responses:
        '200':
          description: The EmployeeWorkAssignmentManager is updated, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/EmployeeWorkAssignmentManagers/Replacement:
    patch:
      tags:
        - EmployeeWorkAssigmentManager
      summary: Replace EmployeeWorkAssignmentManagers
      operationId: EmployeeWorkAssigmentManager_Replace_By_workAssignmentManager_xRefCode_replaceFrom_replaceTo_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: "The unique identifier (external reference code) of the Employee for whom the subordinate data will be replaced.\r\nThe value provided must be the exact match for an Employee; otherwise, a bad request (400) error will be returned."
          required: true
          schema:
            type: string
        - name: replaceFrom
          in: query
          description: The date from which all EmployeeWorkAssignmentManagers will be replaced.
          schema:
            type: string
            format: date-time
        - name: replaceTo
          in: query
          description: The date up to which all EmployeeWorkAssignmentManagers will be replaced.
          schema:
            type: string
            format: date-time
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: "The new JSON-formatted EmployeeWorkAssignmentManager with which to replace the deleted ones.\r\nFor more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide."
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeWorkAssignmentManager'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeWorkAssignmentManager'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeWorkAssignmentManager'
        required: true
      responses:
        '200':
          description: The Employee's Work Assignment Managers are replaced within the given date range; no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/WorkAssignments:
    get:
      tags:
        - EmployeeWorkAssignment
      summary: GET WorkAssignment Details
      operationId: EmployeeWorkAssignment_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: contextDate
          in: query
          description: 'The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: contextDateRangeFrom
          in: query
          description: 'The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: contextDateRangeTo
          in: query
          description: 'The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: The Work Assignments of employee with the requested XRefCode.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeWorkAssignment'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeWorkAssignment'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeWorkAssignment'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
        - EmployeeWorkAssignment
      summary: POST a WorkAssignment
      operationId: EmployeeWorkAssignment_Post_By_workAssignment_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeWorkAssignment'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeWorkAssignment'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeWorkAssignment'
        required: true
      responses:
        '200':
          description: An EmployeeWorkAssignment is created, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
        - EmployeeWorkAssignment
      summary: PATCH a Work Assignment
      operationId: EmployeeWorkAssignment_Patch_By_workAssignment_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeWorkAssignment'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeWorkAssignment'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeWorkAssignment'
        required: true
      responses:
        '200':
          description: The Work Assignment is updated, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/WorkAssignments/Replacement:
    patch:
      tags:
        - EmployeeWorkAssignment
      summary: Replace WorkAssignments
      operationId: EmployeeWorkAssignment_Replace_By_workAssignment_xRefCode_replaceFrom_replaceTo_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: "The unique identifier (external reference code) of the Employee for whom the subordinate data will be replaced.\r\nThe value provided must be the exact match for an Employee; otherwise, a bad request (400) error will be returned."
          required: true
          schema:
            type: string
        - name: replaceFrom
          in: query
          description: The date from which all WorkAssignments will be replaced.
          schema:
            type: string
            format: date-time
        - name: replaceTo
          in: query
          description: The date up to which all WorkAssignments will be replaced.
          schema:
            type: string
            format: date-time
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: "The new JSON-formatted WorkAssignment with which to replace the deleted ones.\r\nFor more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide."
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeWorkAssignment'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeWorkAssignment'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeWorkAssignment'
        required: true
      responses:
        '200':
          description: The Employee's Work Assignments are replaced within the given date range; no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Payroll/WorkLocationOverride:
    get:
      tags:
        - EmployeeWorkLocationOverride
      summary: GET List of work location overrides.
      operationId: EmployeeWorkLocationOverride_Get_By_workLocationOverrideXRefCodes_locationAddressStateCodes_legalEntityXRefCode_legalEntityOverrideDetails_pageSize_clientNamespace
      parameters:
        - name: workLocationOverrideXRefCodes
          in: query
          description: The comma delimited list of work location overrides XRef codes.
          schema:
            type: string
        - name: locationAddressStateCodes
          in: query
          description: The comma delimited list of location address state codes.
          schema:
            type: string
        - name: legalEntityXRefCode
          in: query
          description: The legal entity XRef code.
          schema:
            type: string
        - name: legalEntityOverrideDetails
          in: query
          description: Filter to fetch all or current/future effective legal entity overrides. Value can be All or Active. Default value is Active.
          schema:
            type: string
        - name: pageSize
          in: query
          description: Number of records to be loaded.
          schema:
            type: integer
            format: int32
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: Work location overrides.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayload_IEnumerable_EmployeeWorkLocationOverride'
            text/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayload_IEnumerable_EmployeeWorkLocationOverride'
            text/html:
              schema:
                $ref: '#/components/schemas/PaginatedPayload_IEnumerable_EmployeeWorkLocationOverride'
        '204':
          description: No work location overrides available.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayload_IEnumerable_EmployeeWorkLocationOverride'
            text/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayload_IEnumerable_EmployeeWorkLocationOverride'
            text/html:
              schema:
                $ref: '#/components/schemas/PaginatedPayload_IEnumerable_EmployeeWorkLocationOverride'
        '400':
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
  /{clientNamespace}/v1/Payroll/WorkLocationOverrides:
    post:
      tags:
        - EmployeeWorkLocationOverride
      summary: POST Employee Elections
      operationId: EmployeeWorkLocationOverride_Post_By_workLocationOverrides_isValidateOnly_clientNamespace
      parameters:
        - name: isValidateOnly
          in: query
          description: If TRUE, POST operations validate the request without queue the import. The default value is FALSE. Note, POST operation will only validate data structure.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST operation. For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/EmployeeWorkLocationOverride'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/EmployeeWorkLocationOverride'
          text/html:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/EmployeeWorkLocationOverride'
        required: true
      responses:
        '200':
          description: OK response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeWorkLocationOverride'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeWorkLocationOverride'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeWorkLocationOverride'
        '400':
          description: Request is malformed or has validation errors.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
    patch:
      tags:
        - EmployeeWorkLocationOverride
      summary: PATCH Employee Elections
      operationId: EmployeeWorkLocationOverride_Patch_By_workLocationOverrides_isValidateOnly_clientNamespace
      parameters:
        - name: isValidateOnly
          in: query
          description: If TRUE, PATCH operations validate the request without queue the import. The default value is FALSE. Note, PATCH operation will only validate data structure.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in PATCH operation. For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/EmployeeWorkLocationOverride'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/EmployeeWorkLocationOverride'
          text/html:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/EmployeeWorkLocationOverride'
        required: true
      responses:
        '200':
          description: OK response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeWorkLocationOverride'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeWorkLocationOverride'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeWorkLocationOverride'
        '400':
          description: Request is malformed or has validation errors.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
  /{clientNamespace}/V1/EmploymentStatuses:
    get:
      tags:
        - EmploymentStatuses
      summary: GET a List of EmploymentStatus XRefCodes
      operationId: EmploymentStatuses_Get_By_clientNamespace
      parameters:
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: A collection of EmploymentStatus XRefCodes.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmploymentStatus'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmploymentStatus'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmploymentStatus'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/EmploymentStatuses/{xrefCode}:
    get:
      tags:
        - EmploymentStatuses
      summary: GET a EmploymentStatus with the requested XRefCode.
      operationId: EmploymentStatuses_Get_By_xrefCode_clientNamespace
      parameters:
        - name: xrefCode
          in: path
          required: true
          schema:
            type: string
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: The EmploymentStatus with the requested XRefCode.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_EmploymentStatus'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_EmploymentStatus'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_EmploymentStatus'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/EmploymentStatusReasons:
    get:
      tags:
        - EmploymentStatusReasons
      summary: GET a List of EmploymentStatusReason XRefCodes
      operationId: EmploymentStatusReasons_Get_By_clientNamespace
      parameters:
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: A collection of EmploymentStatusReason XRefCodes.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmploymentStatusReason'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmploymentStatusReason'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmploymentStatusReason'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/EmploymentStatusReasons/{xrefCode}:
    get:
      tags:
        - EmploymentStatusReasons
      summary: GET a EmploymentStatusReason with the requested XRefCode.
      operationId: EmploymentStatusReasons_Get_By_xrefCode_clientNamespace
      parameters:
        - name: xrefCode
          in: path
          required: true
          schema:
            type: string
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: The EmploymentStatusReason with the requested XRefCode.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_EmploymentStatusReason'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_EmploymentStatusReason'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_EmploymentStatusReason'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/ESignatureOrder:
    post:
      tags:
        - ESignatureOrder
      summary: POST e-signature order status.
      operationId: ESignatureOrder_Post_By_requestXML_clientNamespace
      parameters:
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
          text/json:
            schema:
              type: array
              items:
                type: object
          text/html:
            schema:
              type: array
              items:
                type: object
          application/xml:
            schema:
              type: array
              items:
                type: object
          text/xml:
            schema:
              type: array
              items:
                type: object
        required: true
      responses:
        '200':
          description: Returns a HTTP OK response indicating the acceptance of e-signature order status.
          content:
            application/xml: {}
  /{clientNamespace}/V1/ExtensibleProperty/{typeCode}/{entityType}/{countryCode}/{entityXRefCode}:
    get:
      tags:
        - ExtensibleProperty
      summary: GET The list of regional property.
      operationId: ExtensibleProperty_Get_By_typeCode_entityType_countryCode_entityXRefCode_elementXRefCode_activeAll_clientNamespace
      parameters:
        - name: typeCode
          in: path
          required: true
          schema:
            type: string
        - name: entityType
          in: path
          required: true
          schema:
            type: string
        - name: countryCode
          in: path
          required: true
          schema:
            type: string
        - name: entityXRefCode
          in: path
          required: true
          schema:
            type: string
        - name: elementXRefCode
          in: query
          required: true
          schema:
            type: string
        - name: activeAll
          in: query
          required: true
          schema:
            type: string
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: The ExtensibleProperty with the requested TypeCode,EntityType,CountryCode,EntityXrefCode.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_ExtensibleProperty'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_ExtensibleProperty'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_ExtensibleProperty'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_ExtensibleProperty'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_ExtensibleProperty'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_ExtensibleProperty'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_ExtensibleProperty'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_ExtensibleProperty'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_ExtensibleProperty'
    post:
      tags:
        - ExtensibleProperty
      summary: POST (Create) Extensible Property
      operationId: ExtensibleProperty_Post_By_extensiblePropertyModel_typeCode_entityType_countryCode_entityXRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: typeCode
          in: path
          required: true
          schema:
            type: string
        - name: entityType
          in: path
          required: true
          schema:
            type: string
        - name: countryCode
          in: path
          required: true
          schema:
            type: string
        - name: entityXRefCode
          in: path
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ExtensibleProperty'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ExtensibleProperty'
          text/html:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ExtensibleProperty'
        required: true
      responses:
        '200':
          description: The ExtensibleProperty with the requested TypeCode,EntityType,CountryCode,EntityXrefCode.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExtensibleProperty'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExtensibleProperty'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExtensibleProperty'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
  /{clientNamespace}/V1/ExtensibleProperty/Remove/{typeCode}/{entityType}/{countryCode}/{entityXRefCode}:
    post:
      tags:
        - ExtensibleProperty
      operationId: ExtensibleProperty_Delete_By_typeCode_entityType_countryCode_entityXRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: typeCode
          in: path
          required: true
          schema:
            type: string
        - name: entityType
          in: path
          required: true
          schema:
            type: string
        - name: countryCode
          in: path
          required: true
          schema:
            type: string
        - name: entityXRefCode
          in: path
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: The ExtensibleProperty with the requested EntityXrefCode.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtensibleProperty'
            text/json:
              schema:
                $ref: '#/components/schemas/ExtensibleProperty'
            text/html:
              schema:
                $ref: '#/components/schemas/ExtensibleProperty'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
  /{clientNamespace}/V1/GLOBALPayRunImport:
    post:
      tags:
        - GlobalPayRun
      summary: POST Global Pay Run/s Details
      operationId: GlobalPayRun_Post_By_isValidateOnly_clientNamespace
      parameters:
        - name: isValidateOnly
          in: query
          description: If TRUE, POST operations validate the request without queue the import. The default value is FALSE. Note, POST operation will only validate data structure.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: A Global Pay Run is created with an empty response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
  /{clientNamespace}/V1/I9Orders/{i9OrderId}:
    patch:
      tags:
        - I9Orders
      summary: PATCH (Update) an I-9 order
      operationId: I9Orders_Patch_By_i9Order_i9OrderId_isValidateOnly_clientNamespace
      parameters:
        - name: i9OrderId
          in: path
          description: The unique identifier for the I-9 order on the I-9 partner's system. The value of this parameter needs to match the value for the I9OrderId property in the request body.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: ''
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: Details about the I-9 order to update.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/I9Order'
          text/json:
            schema:
              $ref: '#/components/schemas/I9Order'
          text/html:
            schema:
              $ref: '#/components/schemas/I9Order'
          application/xml:
            schema:
              $ref: '#/components/schemas/I9Order'
          text/xml:
            schema:
              $ref: '#/components/schemas/I9Order'
        required: true
      responses:
        '200':
          description: The I-9 order is updated, no response body.
          content:
            application/xml: {}
  /{clientNamespace}/V1/JobFeeds:
    get:
      tags:
        - JobFeeds
      summary: GET Job Feeds
      operationId: JobFeeds_Get_By_companyName_parentCompanyName_internalJobBoardCode_includeActivePostingOnly_lastUpdateTimeFrom_lastUpdateTimeTo_datePostedFrom_datePostedTo_htmlDescription_clientNamespace
      parameters:
        - name: companyName
          in: query
          description: 'Company name. Example: XYZ Co.'
          schema:
            type: string
        - name: parentCompanyName
          in: query
          description: 'Parent Company name. Example: Ceridian'
          schema:
            type: string
        - name: internalJobBoardCode
          in: query
          description: 'XRefCode of Job Board. Example: CANDIDATEPORTAL'
          schema:
            type: string
        - name: includeActivePostingOnly
          in: query
          description: 'If true, then exclude inactive postings from the result. If False, then the ''Last Update Time From'' and ''Last Update Time To'' parameters are required and the range specified between the ''Last Update Time From'' and ''Last Update Time To'' parameters must not be larger than 1 month. Example: True'
          schema:
            type: boolean
        - name: lastUpdateTimeFrom
          in: query
          description: 'A starting timestamp of last updated job posting. Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: lastUpdateTimeTo
          in: query
          description: 'An ending timestamp of last updated job posting. Example: 2017-02-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: datePostedFrom
          in: query
          description: 'A starting timestamp of job posting date. Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: datePostedTo
          in: query
          description: 'An ending timestamp of job posting date. Example: 2017-02-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: htmlDescription
          in: query
          description: A flag to feed the jobs over with html formatting or plain text description
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: A collection of all active external job postings (i.e. public facing job postings) based on specified filter parameters.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobFeed'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobFeed'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobFeed'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobFeed'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json: {}
            text/html: {}
            application/xml: {}
  /{clientNamespace}/V1/Jobs:
    get:
      tags:
        - Jobs
      summary: GET a List of Jobs
      operationId: Jobs_Get_By_contextDate_clientNamespace
      parameters:
        - name: contextDate
          in: query
          description: 'The Context Date value is an “as-of” date used to determine which job data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: A collection of Job XRefCodes meeting the search criteria.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_Job'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_Job'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_Job'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
        - Jobs
      summary: POST (Add) a Job
      operationId: Jobs_Post_By_job_isValidateOnly_clientNamespace
      parameters:
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, PATCH (job update) operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in PATCH (job update) operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Job'
          text/json:
            schema:
              $ref: '#/components/schemas/Job'
          text/html:
            schema:
              $ref: '#/components/schemas/Job'
        required: true
      responses:
        '200':
          description: A Job is created, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
  /{clientNamespace}/V1/Jobs/{XrefCode}:
    get:
      tags:
        - Jobs
      summary: GET a List of Jobs
      operationId: Jobs_Get_By_XrefCode_clientNamespace
      parameters:
        - name: XrefCode
          in: path
          description: The unique identifier (external reference code) of the job to be retrieved.  The value provided must be the exact match for a job; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: The Job with the requested XRefCode.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Job'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Job'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Job'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Jobs/{xRefCode}:
    patch:
      tags:
        - Jobs
      summary: PATCH (Update) a Job
      operationId: Jobs_Patch_By_job_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the job to be retrieved.  The value provided must be the exact match for a job; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, PATCH (job update) operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in PATCH (job update) operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Job'
          text/json:
            schema:
              $ref: '#/components/schemas/Job'
          text/html:
            schema:
              $ref: '#/components/schemas/Job'
        required: true
      responses:
        '200':
          description: A Job is updated, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
  /{clientNamespace}/V1/KpiData:
    get:
      tags:
        - KpiData
      summary: "Get KPI Data matching search criteria\r\n(if neither Zone or MDSE supplied the data is assumed to be organization-wide)"
      operationId: KpiData_Get_By_orgUnitXRefCode_kpiXRefCode_kpiDataType_timePeriod_filterFrom_filterTo_axisXRefCode_mdseXRefCode_clientNamespace
      parameters:
        - name: orgUnitXRefCode
          in: query
          description: Unique identifier of the Org.
          required: true
          schema:
            type: string
        - name: kpiXRefCode
          in: query
          description: The unique identifier of the KPI.
          required: true
          schema:
            type: string
        - name: kpiDataType
          in: query
          description: The data type of the KPI; Enter values for either actual, plan or forecast.
          required: true
          schema:
            type: string
        - name: timePeriod
          in: query
          description: The time period for the KPI; Enter values in terms of either minutes, days or weeks.
          required: true
          schema:
            type: string
        - name: filterFrom
          in: query
          description: Start date for the KPI data. Format yyyy-mm-dd
          required: true
          schema:
            type: string
            format: date-time
        - name: filterTo
          in: query
          description: End date for the KPI data. Format yyyy-mm-dd
          required: true
          schema:
            type: string
            format: date-time
        - name: axisXRefCode
          in: query
          description: The unique identifier of the KPI's axis . Axis data can be identified from 'Axis' table.
          schema:
            type: string
        - name: mdseXRefCode
          in: query
          description: The unique identifier of the MDSE to select a specific department. Use only when merchandise departments have been configured.
          schema:
            type: string
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: KPI Data which matches the supplied parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_KpiData'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_KpiData'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_KpiData'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '501':
          description: The supplied parameter combination has not been implemented and is unsupported.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
    post:
      tags:
        - KpiData
      summary: Post KPI Data for the supplied parameters
      operationId: KpiData_Post_By_orgUnitXRefCode_kpiXRefCode_kpiDataType_timePeriod_models_AggregateToDay_isValidateOnly_clientNamespace
      parameters:
        - name: orgUnitXRefCode
          in: query
          description: Org unit reference code
          required: true
          schema:
            type: string
        - name: kpiXRefCode
          in: query
          description: KPI reference code
          required: true
          schema:
            type: string
        - name: kpiDataType
          in: query
          description: KPI data type - Enter values for either actual, plan or forecast
          required: true
          schema:
            type: string
        - name: timePeriod
          in: query
          description: KPI time period - Enter values for either minute, day or week
          required: true
          schema:
            type: string
        - name: AggregateToDay
          in: query
          description: Aggregate to day will be set to true by default. This will aggregate data from minute to day
          schema:
            type: boolean
        - name: isValidateOnly
          in: query
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/KpiData'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/KpiData'
          text/html:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/KpiData'
        required: true
      responses:
        '201':
          description: The KPI Data has been created
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '403':
          description: User does not have sufficient access rights to create KPI Data.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '409':
          description: The KPI Data has not been created as conflicting KPI Data already exists
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '500':
          description: An unexpected server error occurred.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
    patch:
      tags:
        - KpiData
      summary: Patch KPI Data for the supplied parameters
      operationId: KpiData_Patch_By_orgUnitXRefCode_kpiXRefCode_kpiDataType_timePeriod_models_AggregateToDay_isValidateOnly_clientNamespace
      parameters:
        - name: orgUnitXRefCode
          in: query
          description: Org unit reference code
          required: true
          schema:
            type: string
        - name: kpiXRefCode
          in: query
          description: KPI reference code
          required: true
          schema:
            type: string
        - name: kpiDataType
          in: query
          description: KPI data type - Enter values for either actual, plan or forecast
          required: true
          schema:
            type: string
        - name: timePeriod
          in: query
          description: KPI time period - Enter values for either minute, day or week
          required: true
          schema:
            type: string
        - name: AggregateToDay
          in: query
          description: Aggregate to day will be set to true by default. This will aggregate data from minute to day
          schema:
            type: boolean
        - name: isValidateOnly
          in: query
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/KpiData'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/KpiData'
          text/html:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/KpiData'
        required: true
      responses:
        '204':
          description: The KPI Data has been updated
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '403':
          description: User does not have sufficient access rights to update KPI Data.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '404':
          description: The Kpi Data has not been patched as could not be found
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '500':
          description: An unexpected server error occurred.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
  /{clientNamespace}/V1/KpiTargetPattern:
    get:
      tags:
        - KpiTargetPattern
      summary: Get KPI Target Patterns matching search criteria
      operationId: KpiTargetPattern_Get_By_orgUnitXRefCode_kpiXRefCode_startDate_endDate_zoneXRefCode_clientNamespace
      parameters:
        - name: orgUnitXRefCode
          in: query
          description: Unique identifier of the Org.
          required: true
          schema:
            type: string
        - name: kpiXRefCode
          in: query
          description: The unique identifier of the KPI.
          required: true
          schema:
            type: string
        - name: startDate
          in: query
          description: Date to represent the start of the period for which KPI target patterns should be retrieved. Format yyyy-mm-dd
          required: true
          schema:
            type: string
            format: date-time
        - name: endDate
          in: query
          description: Date to represent the end of the period for which KPI target patterns should be retrieved. Format yyyy-mm-dd
          required: true
          schema:
            type: string
            format: date-time
        - name: zoneXRefCode
          in: query
          description: The unique identifier of the zone.
          schema:
            type: string
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: KPI Target Pattern details which matches the supplied parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_KpiTargetPattern'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_KpiTargetPattern'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_KpiTargetPattern'
        '400':
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_KpiTargetPattern'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_KpiTargetPattern'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_KpiTargetPattern'
        '501':
          description: The supplied parameter combination has not been implemented and is unsupported.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
    post:
      tags:
        - KpiTargetPattern
      summary: Post KPI Target Pattern for the supplied parameters
      operationId: KpiTargetPattern_Post_By_orgUnitXRefCode_kpiXRefCode_kpiTargetPatternApiModel_isValidateOnly_clientNamespace
      parameters:
        - name: orgUnitXRefCode
          in: query
          description: Org unit reference code
          required: true
          schema:
            type: string
        - name: kpiXRefCode
          in: query
          description: KPI reference code
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: "When a TRUE value is used in this parameter, the POST operation validates the\r\n                request without creating records in the database. The default value is FALSE if parameter is not specified"
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/KpiTargetPatternPOST'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/KpiTargetPatternPOST'
          text/html:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/KpiTargetPatternPOST'
        required: true
      responses:
        '200':
          description: If isValidateOnly was passed in as true, this shows that the validation passed.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '201':
          description: The KPI Target Pattern has been created.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed. Correct and resubmit.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '403':
          description: User does not have sufficient acess rights to create a KPI Target Pattern.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '409':
          description: The KPI Target Pattern has not been created as conflicting data exists.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '500':
          description: An unexpected server error occurred.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
    patch:
      tags:
        - KpiTargetPattern
      summary: Patch KPI Target Pattern for the supplied parameters
      operationId: KpiTargetPattern_Patch_By_orgUnitXRefCode_kpiXRefCode_kpiTargetPatternApiModel_isValidateOnly_clientNamespace
      parameters:
        - name: orgUnitXRefCode
          in: query
          description: Org unit reference code
          required: true
          schema:
            type: string
        - name: kpiXRefCode
          in: query
          description: KPI reference code
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: "When a TRUE value is used in this parameter, the PATCH operation validates the\r\n                request without applying the updates to the database. The default value is FALSE if parameter is not specified."
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/KpiTargetPatternPOST'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/KpiTargetPatternPOST'
          text/html:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/KpiTargetPatternPOST'
        required: true
      responses:
        '200':
          description: If isValidateOnly was passed in as true, this shows that the validation passed
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '204':
          description: The KPI Target Pattern was updated successfully
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed. Correct and resubmit
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '403':
          description: User does not have sufficient acess rights to update KPI Target Pattern
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '404':
          description: The KPI Target Pattern does not exist in Dayforce
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '500':
          description: An unexpected server error occurred
          content:
            application/json: {}
            text/json: {}
            text/html: {}
  /{clientNamespace}/V1/LaborCosts:
    get:
      tags:
        - LaborCosts
      operationId: LaborCosts_GetLaborCostEstimate_By_businessDate_locationXRefCode_workedLocationXRefCode_payCategoryXRefCode_clientNamespace
      parameters:
        - name: businessDate
          in: query
          required: true
          schema:
            type: string
            format: date-time
        - name: locationXRefCode
          in: query
          required: true
          schema:
            type: string
        - name: workedLocationXRefCode
          in: query
          schema:
            type: string
        - name: payCategoryXRefCode
          in: query
          style: form
          schema:
            type: array
            items:
              type: string
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: Labor cost result in the segment of 15 minutes.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_LaborCostResult'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_LaborCostResult'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_LaborCostResult'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: Server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
  /{clientNamespace}/V1/LaborDemands:
    get:
      tags:
        - LaborDemands
      summary: Get Labor Demand Curve details for Org over period
      operationId: LaborDemands_Get_By_orgUnitXRefCode_schedulePeriodStart_filterFrom_filterTo_zoneXRefCode_activityXRefCode_laborMeasureXRefCode_axisXRefCode_clientNamespace
      parameters:
        - name: orgUnitXRefCode
          in: query
          description: Unique identifier of the Org.
          required: true
          schema:
            type: string
        - name: schedulePeriodStart
          in: query
          description: Start of schedule period of the labor demand. Format yyyy-mm-dd
          required: true
          schema:
            type: string
            format: date-time
        - name: filterFrom
          in: query
          description: Start of range (optional) - defaults to schedulePeriodStart if not supplied. Format yyyy-mm-dd
          schema:
            type: string
            format: date-time
        - name: filterTo
          in: query
          description: End of range (optional) - defaults to a week from schedulePeriodStart if not supplied. Format yyyy-mm-dd
          schema:
            type: string
            format: date-time
        - name: zoneXRefCode
          in: query
          description: The unique identifier of the zone.
          schema:
            type: string
        - name: activityXRefCode
          in: query
          description: The unique identifier of the activity.
          schema:
            type: string
        - name: laborMeasureXRefCode
          in: query
          description: The unique identifier of the labor measure.
          schema:
            type: string
        - name: axisXRefCode
          in: query
          description: The unique identifier of the axis.
          schema:
            type: string
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: Labor demand details which matches the supplied OrgXrefCode and SchedulePeriod
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_LaborDemand'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_LaborDemand'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_LaborDemand'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_LaborDemand'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_LaborDemand'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_LaborDemand'
    post:
      tags:
        - LaborDemands
      summary: Create a set of labor demands for an organization in the defined SchedulePeriod
      operationId: LaborDemands_Post_By_model_isValidateOnly_clientNamespace
      parameters:
        - name: isValidateOnly
          in: query
          description: ''
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LaborDemand'
          text/json:
            schema:
              $ref: '#/components/schemas/LaborDemand'
          text/html:
            schema:
              $ref: '#/components/schemas/LaborDemand'
        required: true
      responses:
        '201':
          description: The Labor Demands have been created
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '409':
          description: The Labor Demands have not been created as conflicting labor demands already exist
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '500':
          description: An unexpected server error occurred.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
    delete:
      tags:
        - LaborDemands
      summary: "Deletes Labor Demand Curve details for Org over period\r\nOptional will only delete demands matching filters"
      operationId: LaborDemands_Delete_By_orgUnitXRefCode_schedulePeriodStart_filterFrom_filterTo_zoneXRefCode_activityXRefCode_laborMeasureXRefCode_axisXRefCode_clientNamespace
      parameters:
        - name: orgUnitXRefCode
          in: query
          description: Org Unit Ref Code
          required: true
          schema:
            type: string
        - name: schedulePeriodStart
          in: query
          description: start of schedule period
          required: true
          schema:
            type: string
            format: date-time
        - name: filterFrom
          in: query
          description: start of range (optional) - defaults to schedulePeriodStart if not supplied
          schema:
            type: string
            format: date-time
        - name: filterTo
          in: query
          description: end of range (optional) - defaults to a week from schedulePeriodStart if not supplied
          schema:
            type: string
            format: date-time
        - name: zoneXRefCode
          in: query
          description: filter by Zone Ref Code (optional)
          schema:
            type: string
        - name: activityXRefCode
          in: query
          description: filter by Activity Ref Code (optional)
          schema:
            type: string
        - name: laborMeasureXRefCode
          in: query
          description: filter by Labor Measure Ref Code (optional)
          schema:
            type: string
        - name: axisXRefCode
          in: query
          description: filter by Axis Ref Code (optional)
          schema:
            type: string
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '204':
          description: The Labor demand details for the supplied OrgXrefCode and SchedulePeriod have been deleted
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '500':
          description: An unexpected server error occurred.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
    patch:
      tags:
        - LaborDemands
      summary: Update a set of labor demands for an organization in the defined SchedulePeriod
      operationId: LaborDemands_Patch_By_model_dayToPatch_zoneXRefCode_activityXRefCode_laborMeasureXRefCode_axisXRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: dayToPatch
          in: query
          description: ''
          required: true
          schema:
            type: string
            format: date-time
        - name: zoneXRefCode
          in: query
          description: ''
          schema:
            type: string
        - name: activityXRefCode
          in: query
          description: ''
          schema:
            type: string
        - name: laborMeasureXRefCode
          in: query
          description: ''
          schema:
            type: string
        - name: axisXRefCode
          in: query
          description: ''
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: ''
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LaborDemand'
          text/json:
            schema:
              $ref: '#/components/schemas/LaborDemand'
          text/html:
            schema:
              $ref: '#/components/schemas/LaborDemand'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            text/html:
              schema:
                type: object
        '204':
          description: The Labor Demands have been updated
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '404':
          description: The Labor Demands have not been patched as could not be found
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '409':
          description: Conflict
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '500':
          description: An unexpected server error occurred.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
  /{clientNamespace}/V1/LaborMetrics/{xRefCode}:
    get:
      tags:
        - LaborMetrics
      summary: Get Labor Metric details
      operationId: LaborMetrics_GetLaborMetrics_By_xRefCode_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          required: true
          schema:
            type: string
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: Labor metric details which matches the XRefCode.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_LaborMetricCodes'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_LaborMetricCodes'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_LaborMetricCodes'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
  /{clientNamespace}/V1/LaborMetrics:
    post:
      tags:
        - LaborMetrics
      summary: Post Insert Labor metrics codes
      operationId: LaborMetrics_Post_By_laborMetricsCodeData_isValidateOnly_clientNamespace
      parameters:
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST operation. For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LaborMetricsCodesForSubmit'
          text/json:
            schema:
              $ref: '#/components/schemas/LaborMetricsCodesForSubmit'
          text/html:
            schema:
              $ref: '#/components/schemas/LaborMetricsCodesForSubmit'
        required: true
      responses:
        '200':
          description: New Labor metrics code data is inserted into Dayforce
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LaborMetricsCodePostPatchResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/LaborMetricsCodePostPatchResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/LaborMetricsCodePostPatchResponse'
        '400':
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
    patch:
      tags:
        - LaborMetrics
      summary: Patch (Update) a Labor metrics code
      operationId: LaborMetrics_Patch_By_laborMetricsCodeData_isValidateOnly_clientNamespace
      parameters:
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in PATCH operation. For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LaborMetricsCodesForSubmit'
          text/json:
            schema:
              $ref: '#/components/schemas/LaborMetricsCodesForSubmit'
          text/html:
            schema:
              $ref: '#/components/schemas/LaborMetricsCodesForSubmit'
        required: true
      responses:
        '200':
          description: Labor metrics code data is updated
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed. Correct and resubmit.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '500':
          description: An unexpected server error occurred.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
  /{clientNamespace}/V1/LaborMetricTypes/{xRefCode}:
    get:
      tags:
        - LaborMetricTypes
      summary: Get Labor Metric Type details
      operationId: LaborMetricTypes_GetLaborMetricType_By_xRefCode_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          required: true
          schema:
            type: string
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: Labor metric type details which matches the XRefCode.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_LaborMetricType'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_LaborMetricType'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_LaborMetricType'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
  /{clientNamespace}/V1/LaborMetricTypes:
    post:
      tags:
        - LaborMetricTypes
      summary: POST Labor Metric Type details
      operationId: LaborMetricTypes_PostLaborMetricType_By_laborMetricTypeData_isValidateOnly_clientNamespace
      parameters:
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST operation. For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LaborMetricTypeForSubmit'
          text/json:
            schema:
              $ref: '#/components/schemas/LaborMetricTypeForSubmit'
          text/html:
            schema:
              $ref: '#/components/schemas/LaborMetricTypeForSubmit'
        required: true
      responses:
        '200':
          description: New Labor Metric Type is inserted into Dayforce
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LaborMetricTypePatchPostResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/LaborMetricTypePatchPostResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/LaborMetricTypePatchPostResponse'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
    patch:
      tags:
        - LaborMetricTypes
      summary: Patch (Update) Labor Metric Type
      operationId: LaborMetricTypes_LaborMetricType_By_laborMetricTypeData_laborMetricTypeXRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: laborMetricTypeXRefCode
          in: query
          description: Labor Metric Type XRefCode
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in PATCH operation.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LaborMetricTypeForSubmit'
          text/json:
            schema:
              $ref: '#/components/schemas/LaborMetricTypeForSubmit'
          text/html:
            schema:
              $ref: '#/components/schemas/LaborMetricTypeForSubmit'
        required: true
      responses:
        '200':
          description: Labor Metric Type data is updated
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed. Correct and resubmit.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '500':
          description: An unexpected server error occurred.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
  /{clientNamespace}/V1/LaborValidationPolicy/Search:
    post:
      tags:
        - LaborValidationPolicy
      operationId: LaborValidationPolicy_SearchLaborValidationPolicy_By_laborValidationFilterParams_pageSize_clientNamespace
      parameters:
        - name: pageSize
          in: query
          schema:
            type: integer
            format: int32
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LaborValidationFilters'
          text/json:
            schema:
              $ref: '#/components/schemas/LaborValidationFilters'
          text/html:
            schema:
              $ref: '#/components/schemas/LaborValidationFilters'
        required: true
      responses:
        '200':
          description: Search results for Labor Validation Policy rules based on parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayload_IEnumerable_LaborValidationRule'
            text/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayload_IEnumerable_LaborValidationRule'
            text/html:
              schema:
                $ref: '#/components/schemas/PaginatedPayload_IEnumerable_LaborValidationRule'
        '400':
          description: Request is malformed.  Correct it and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
  /{clientNamespace}/V1/LaborValidationPolicy/Rule/{laborValidationPolicyRuleXRefCode}:
    get:
      tags:
        - LaborValidationPolicy
      summary: Get Labor Validation Policy Rule Details
      operationId: LaborValidationPolicy_GetLaborValidationRule_By_laborValidationPolicyRuleXRefCode_clientNamespace
      parameters:
        - name: laborValidationPolicyRuleXRefCode
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: Labor Validation Policy rules  which matches the XRefCode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_LaborValidationRule'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_LaborValidationRule'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_LaborValidationRule'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
    delete:
      tags:
        - LaborValidationPolicy
      operationId: LaborValidationPolicy_DeleteLaborValidationRule_By_laborValidationPolicyRuleXRefCode_clientNamespace
      parameters:
        - name: laborValidationPolicyRuleXRefCode
          in: path
          required: true
          schema:
            type: string
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: Delete labor validation policy rules based on xrefcode
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Invalid Request xrefcode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
    patch:
      tags:
        - LaborValidationPolicy
      operationId: LaborValidationPolicy_UpdateLaborValidationPolicy_By_laborValidationRule_laborValidationPolicyRuleXRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: laborValidationPolicyRuleXRefCode
          in: path
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST operation validates the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LaborValidationRule'
          text/json:
            schema:
              $ref: '#/components/schemas/LaborValidationRule'
          text/html:
            schema:
              $ref: '#/components/schemas/LaborValidationRule'
        required: true
      responses:
        '200':
          description: Post Validation Policy Rule
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Boolean'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Boolean'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Boolean'
        '400':
          description: Request is malformed.  Correct it and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
  /{clientNamespace}/V1/LaborValidationPolicy/Rule:
    post:
      tags:
        - LaborValidationPolicy
      operationId: LaborValidationPolicy_InsertLaborValidationPolicy_By_laborValidationRule_clientNamespace
      parameters:
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LaborValidationRule'
          text/json:
            schema:
              $ref: '#/components/schemas/LaborValidationRule'
          text/html:
            schema:
              $ref: '#/components/schemas/LaborValidationRule'
        required: true
      responses:
        '200':
          description: Post Validation Policy Rule
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Boolean'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Boolean'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Boolean'
        '400':
          description: Request is malformed.  Correct it and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
  /{clientNamespace}/V1/LegacyLaborMetric:
    get:
      tags:
        - LegacyLaborMetric
      summary: Get Legacy Labor Metric data
      operationId: LegacyLaborMetric_GetLegacyLaborMetric_By_legacyLaborMetricType_legacyLaborMetricXRefCode_clientNamespace
      parameters:
        - name: legacyLaborMetricType
          in: query
          description: ''
          required: true
          schema:
            type: string
        - name: legacyLaborMetricXRefCode
          in: query
          description: ''
          required: true
          schema:
            type: string
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: Legacy labor metric details which matches the Type and XRefCode.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_LegacyLaborMetricCodes'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_LegacyLaborMetricCodes'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_LegacyLaborMetricCodes'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
    post:
      tags:
        - LegacyLaborMetric
      summary: Post Insert Legacy Labor metrics
      operationId: LegacyLaborMetric_Post_By_legacyLaborMetricData_isValidateOnly_clientNamespace
      parameters:
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST operation. For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LegacyLaborMetricForSubmit'
          text/json:
            schema:
              $ref: '#/components/schemas/LegacyLaborMetricForSubmit'
          text/html:
            schema:
              $ref: '#/components/schemas/LegacyLaborMetricForSubmit'
        required: true
      responses:
        '200':
          description: New Legacy Labor Metric data is inserted into Dayforce
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LegacyLaborMetricPatchPostDeleteResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/LegacyLaborMetricPatchPostDeleteResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/LegacyLaborMetricPatchPostDeleteResponse'
        '400':
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
    delete:
      tags:
        - LegacyLaborMetric
      operationId: LegacyLaborMetric_DeleteLegacyLaborMetric_By_legacyLaborMetricType_legacyLaborMetricXRefCode_clientNamespace
      parameters:
        - name: legacyLaborMetricType
          in: query
          required: true
          schema:
            type: string
        - name: legacyLaborMetricXRefCode
          in: query
          required: true
          schema:
            type: string
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: Legacy labor metric details which matches the Type and XRefCode were Deleted.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
    patch:
      tags:
        - LegacyLaborMetric
      summary: Patch (Update) a Legacy Labor Metric
      operationId: LegacyLaborMetric_Patch_By_legacyLaborMetricData_legacyLaborMetricXRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: legacyLaborMetricXRefCode
          in: query
          description: XRefCode
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in PATCH operation. For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LegacyLaborMetricForSubmit'
          text/json:
            schema:
              $ref: '#/components/schemas/LegacyLaborMetricForSubmit'
          text/html:
            schema:
              $ref: '#/components/schemas/LegacyLaborMetricForSubmit'
        required: true
      responses:
        '200':
          description: Legacy Labor Metric data is updated
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed. Correct and resubmit.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '500':
          description: An unexpected server error occurred.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
  /{clientNamespace}/V1/LocationAddresses:
    get:
      tags:
        - LocationAddresses
      summary: GET List of Location Addresses.
      operationId: LocationAddresses_Get_By_ShortName_CountryCode_StateProvinceCode_clientNamespace
      parameters:
        - name: ShortName
          in: query
          description: Filter the location addresses by their ShortName. The service defaults to NULL if the requester does not specify a value.
          schema:
            type: string
        - name: CountryCode
          in: query
          schema:
            type: string
        - name: StateProvinceCode
          in: query
          schema:
            type: string
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: A collection of Location Addresses meeting the search criteria, if provided.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_LocationAddresses'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_LocationAddresses'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_LocationAddresses'
        '400':
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LocationAddresses'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LocationAddresses'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LocationAddresses'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LocationAddresses'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LocationAddresses'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LocationAddresses'
    post:
      tags:
        - LocationAddresses
      summary: POST Location Address.
      operationId: LocationAddresses_Post_By_payrollLocationAddresses_isValidateOnly_clientNamespace
      parameters:
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying the updates to the database.  The default value is FALSE if parameter is not specified.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations. For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationAddresses'
          text/json:
            schema:
              $ref: '#/components/schemas/LocationAddresses'
          text/html:
            schema:
              $ref: '#/components/schemas/LocationAddresses'
        required: true
      responses:
        '200':
          description: A Location Address is created with an empty response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
    patch:
      tags:
        - LocationAddresses
      summary: PATCH Location Address.
      operationId: LocationAddresses_Patch_By_payrollLocationAddresses_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: query
          description: The unique identifier (external reference code) of the position. The value provided must be the exact match for a position; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying the updates to the database.  The default value is FALSE if parameter is not specified.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST (position add) and PATCH (position update) operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationAddresses'
          text/json:
            schema:
              $ref: '#/components/schemas/LocationAddresses'
          text/html:
            schema:
              $ref: '#/components/schemas/LocationAddresses'
        required: true
      responses:
        '200':
          description: A Location Address is updated, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
  /{clientNamespace}/V1/Employees/{xRefCode}/MaritalStatuses:
    get:
      tags:
        - MaritalStatus
      summary: GET MaritalStatus Details
      operationId: MaritalStatus_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: contextDate
          in: query
          description: 'The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: contextDateRangeFrom
          in: query
          description: 'The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: contextDateRangeTo
          in: query
          description: 'The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: The Marital Statuses of employee with the requested XRefCode.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeMaritalStatus'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeMaritalStatus'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeMaritalStatus'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
        - MaritalStatus
      summary: POST a MaritalStatus
      operationId: MaritalStatus_Post_By_maritalStatus_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeMaritalStatus'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeMaritalStatus'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeMaritalStatus'
        required: true
      responses:
        '200':
          description: A MaritalStatus is created, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
        - MaritalStatus
      summary: PATCH a MaritalStatus
      operationId: MaritalStatus_Patch_By_maritalStatus_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeMaritalStatus'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeMaritalStatus'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeMaritalStatus'
        required: true
      responses:
        '200':
          description: The MaritalStatus is updated, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/OperatingHours/GetOperatingHours:
    get:
      tags:
        - OperatingHours
      operationId: OperatingHours_Get_By_startDate_endDate_orgUnitXRefCode_clientNamespace
      parameters:
        - name: startDate
          in: query
          description: Date to represent the start of the period for which operating hours should be retrieved. Format yyyy-mm-dd
          required: true
          schema:
            type: string
            format: date-time
        - name: endDate
          in: query
          description: Date to represent the end of the period for which operating hours should be retrieved. Format yyyy-mm-dd
          required: true
          schema:
            type: string
            format: date-time
        - name: orgUnitXRefCode
          in: query
          description: The unique identifier (external reference code) of the organization to be retrieved. The value provided must be the exact match for an organization
          required: true
          schema:
            type: string
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: Operating Hours details which matches the supplied OrgUnitXRefCode and date range.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_OperatingHours'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_OperatingHours'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_OperatingHours'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_OperatingHours'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_OperatingHours'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_OperatingHours'
  /{clientNamespace}/V1/OperatingHours/PostOperatingHoursException:
    post:
      tags:
        - OperatingHours
      operationId: OperatingHours_PostOperatingHoursException_By_OperatingHoursExceptionAPIPostPayload_isValidateOnly_clientNamespace
      parameters:
        - name: isValidateOnly
          in: query
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/OperatingHoursExceptionPOST'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/OperatingHoursExceptionPOST'
          text/html:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/OperatingHoursExceptionPOST'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            text/html:
              schema:
                type: object
        '201':
          description: The Operating Hours Exception have been created
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '409':
          description: The Operating Hours Exception have not been created as conflicting Operating Hours already exist
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '500':
          description: An unexpected server error occurred.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
  /{clientNamespace}/V1/OperatingHours/PatchOperatingHoursException:
    patch:
      tags:
        - OperatingHours
      operationId: OperatingHours_PatchOperatingHoursException_By_OperatingHoursExceptionAPIPostPayload_isValidateOnly_clientNamespace
      parameters:
        - name: isValidateOnly
          in: query
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/OperatingHoursExceptionPOST'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/OperatingHoursExceptionPOST'
          text/html:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/OperatingHoursExceptionPOST'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            text/html:
              schema:
                type: object
        '201':
          description: The Operating Hours Exception have been created
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '409':
          description: The Operating Hours have not been created as conflicting Operating Hours Exception does not exist
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '500':
          description: An unexpected server error occurred.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
  /{clientNamespace}/V1/OrgUnits:
    get:
      tags:
        - OrgUnits
      summary: Get a list of OrgUnits
      operationId: OrgUnits_Get_By_clientNamespace
      parameters:
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: A collection of OrgUnit XRefCodes meeting the search criteria.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_Location'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_Location'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_Location'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
        - OrgUnits
      summary: POST (Add) an OrgUnit
      operationId: OrgUnits_Post_By_orgUnit_isValidateOnly_calibrateOrg_clientNamespace
      parameters:
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying the updates to the database.  The default value is FALSE if parameter is not specified.
          schema:
            type: boolean
        - name: calibrateOrg
          in: query
          description: This parameter accepts TRUE or FALSE values to determine whether the Org Recalculation process is to be triggered. The default value is TRUE if parameter is not specified.
          schema:
            type: string
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST (orgunit add) and PATCH (orgunit update) operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Location'
          text/json:
            schema:
              $ref: '#/components/schemas/Location'
          text/html:
            schema:
              $ref: '#/components/schemas/Location'
        required: true
      responses:
        '200':
          description: An Org Unit is created, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
  /{clientNamespace}/V1/OrgUnits/{XrefCode}:
    get:
      tags:
        - OrgUnits
      summary: Get OrgUnit details
      operationId: OrgUnits_Get_By_XrefCode_contextDate_expand_includeChildOrgUnits_clientNamespace
      parameters:
        - name: XrefCode
          in: path
          description: The unique identifier (external reference code) of the org unit. The value provided must be the exact match for an org unit; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: contextDate
          in: query
          description: 'The Context Date value is an “as-of” date used to determine which org unit data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2019-01-01T12:34:56'
          schema:
            type: string
            format: date-time
        - name: expand
          in: query
          description: This parameter accepts a comma-separated list of top-level entities that contain the data elements needed for downstream processing.  When this parameter is not used, only data elements from the orgunit master record will be included.  For more information, please refer to the Introduction to Dayforce Web Services document.
          schema:
            type: string
        - name: includeChildOrgUnits
          in: query
          description: When a TRUE value is used in this parameter, the immediate child org units’ information under the org unit being retrieved will be returned as well.  The default value is FALSE if parameter is not specified.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: The Org Unit with the requested XRefCode.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Location'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Location'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Location'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/OrgUnits/{xRefCode}:
    patch:
      tags:
        - OrgUnits
      summary: PATCH (Update) an OrgUnit
      operationId: OrgUnits_Patch_By_orgUnit_xRefCode_isValidateOnly_replaceExisting_calibrateOrg_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the org unit. The value provided must be the exact match for an org unit; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying the updates to the database.  The default value is FALSE if parameter is not specified.
          schema:
            type: boolean
        - name: replaceExisting
          in: query
          description: This parameter accepts a comma-separated list of OrgUnit sub-entities where the respective data provided will replace all existing records. This currently applies to OrgUnitLocationTypes sub-entities, which are considered as a list and are not effective dated.
          schema:
            type: string
        - name: calibrateOrg
          in: query
          description: This parameter accepts TRUE or FALSE values to determine whether the Org Recalculation process is to be triggered. The default value is TRUE if parameter is not specified.
          schema:
            type: string
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST (orgunit add) and PATCH (orgunit update) operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Location'
          text/json:
            schema:
              $ref: '#/components/schemas/Location'
          text/html:
            schema:
              $ref: '#/components/schemas/Location'
        required: true
      responses:
        '200':
          description: An Org Unit is updated, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
  /{clientNamespace}/V1/PayClasses:
    get:
      tags:
        - PayClasses
      summary: GET a List of PayClasses
      operationId: PayClasses_Get_By_contextDate_clientNamespace
      parameters:
        - name: contextDate
          in: query
          description: 'The Context Date value is an “as-of” date used to determine which PayClass data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: A collection of PayClass XRefCodes meeting the search criteria.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_PayClass'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_PayClass'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_PayClass'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/PayClasses/{XrefCode}:
    get:
      tags:
        - PayClasses
      summary: Get PayClass details
      operationId: PayClasses_Get_By_XrefCode_clientNamespace
      parameters:
        - name: XrefCode
          in: path
          description: The unique identifier (external reference code) of the PayClass to be retrieved.  The value provided must be the exact match for a PayClass; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: The PayClass with the requested XRefCode.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_PayClass'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_PayClass'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_PayClass'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Payee:
    get:
      tags:
        - Payee
      summary: GET List of Third Party Payees.
      operationId: Payee_Get_By_PayeeStatus_PayeeXRefCodes_PayeeCategoryXRefCodes_PaymentMethodXRefCodes_OperatingCountries_EarningPayee_DeductionPayee_SystemPayee_clientNamespace
      parameters:
        - name: PayeeStatus
          in: query
          description: '&gt;Can be Active, InActive or All. The default value is Active.'
          schema:
            type: string
        - name: PayeeXRefCodes
          in: query
          description: '&gt;List of Payee Reference Codes with comma separator to filter the result.'
          schema:
            type: string
        - name: PayeeCategoryXRefCodes
          in: query
          description: '&gt;List of Payee Category Reference Codes with comma separator to filter the result.'
          schema:
            type: string
        - name: PaymentMethodXRefCodes
          in: query
          description: '&gt;List of Pay Method Reference Codes with comma separator to filter the result.'
          schema:
            type: string
        - name: OperatingCountries
          in: query
          description: '&gt;List of country codes with comma separator to filter the result base on country.'
          schema:
            type: string
        - name: EarningPayee
          in: query
          description: '&gt;Set to true to only get Earning Payees.'
          schema:
            type: boolean
        - name: DeductionPayee
          in: query
          description: '&gt;Set to true to only get Deduction Payees.'
          schema:
            type: boolean
        - name: SystemPayee
          in: query
          description: '&gt;Set to true to only get System Payees.'
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: List of payees.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_Payee'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_Payee'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_Payee'
        '400':
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
        - Payee
      summary: POST Add Third Party Payees
      operationId: Payee_Post_By_payees_isValidateOnly_clientNamespace
      parameters:
        - name: isValidateOnly
          in: query
          description: If true, only validate the request. Otherwise, validate and save.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Payee'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Payee'
          text/html:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Payee'
        required: true
      responses:
        '200':
          description: OK response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_List_Payee'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_List_Payee'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_List_Payee'
        '400':
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
        - Payee
      summary: PATCH Update Third Party Payees
      operationId: Payee_Patch_By_payees_isValidateOnly_clientNamespace
      parameters:
        - name: isValidateOnly
          in: query
          description: If true, only validate the request. Otherwise, validate and save.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Payee'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Payee'
          text/html:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Payee'
        required: true
      responses:
        '200':
          description: OK response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_List_Payee'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_List_Payee'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_List_Payee'
        '400':
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/PayGroupCalendar/{payGroupXRefCode}:
    get:
      tags:
        - PayGroupCalendar
      summary: GET List of Pay Group Calendars.
      operationId: PayGroupCalendar_Get_By_payGroupXRefCode_payrollCommitted_payDateYear_payDate_periodStartDate_periodEndDate_payPeriod_clientNamespace
      parameters:
        - name: payGroupXRefCode
          in: path
          description: The pay group's reference code.
          required: true
          schema:
            type: string
        - name: payrollCommitted
          in: query
          schema:
            type: boolean
        - name: payDateYear
          in: query
          description: The pay group calen xdar's pay date year.
          schema:
            type: integer
            format: int32
        - name: payDate
          in: query
          description: The pay group calendar's pay date.
          schema:
            type: string
            format: date-time
        - name: periodStartDate
          in: query
          description: The pay group calendar's period start date.
          schema:
            type: string
            format: date-time
        - name: periodEndDate
          in: query
          description: The pay group calendar's period end date.
          schema:
            type: string
            format: date-time
        - name: payPeriod
          in: query
          description: The pay group calendar's pay period number.
          schema:
            type: integer
            format: int32
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: The Pay Group Calendar.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_PayGroupCalendar'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_PayGroupCalendar'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_PayGroupCalendar'
        '400':
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Payroll/PayrollElection:
    get:
      tags:
        - PayrollElections
      summary: GET List of Employee Elections.
      operationId: PayrollElections_GetEmployeeElections_By_source_codeType_electionStatus_payGroupXRefCode_employeeXRefCodes_employmentStatusXRefCode_pageSize_clientNamespace
      parameters:
        - name: source
          in: query
          description: ''
          schema:
            type: string
        - name: codeType
          in: query
          description: ''
          schema:
            type: string
        - name: electionStatus
          in: query
          description: ''
          schema:
            type: string
        - name: payGroupXRefCode
          in: query
          description: ''
          schema:
            type: string
        - name: employeeXRefCodes
          in: query
          description: ''
          schema:
            type: string
        - name: employmentStatusXRefCode
          in: query
          description: ''
          schema:
            type: string
        - name: pageSize
          in: query
          description: ''
          schema:
            type: integer
            format: int32
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: The Employee Payroll Election.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayload_IEnumerable_EmployeePayrollElection'
            text/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayload_IEnumerable_EmployeePayrollElection'
            text/html:
              schema:
                $ref: '#/components/schemas/PaginatedPayload_IEnumerable_EmployeePayrollElection'
        '400':
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/v1/Payroll/PayrollElections:
    post:
      tags:
        - PayrollElections
      summary: POST Employee Elections
      operationId: PayrollElections_Post_By_payrollElections_isValidateOnly_AutoUpdateExisting_clientNamespace
      parameters:
        - name: isValidateOnly
          in: query
          description: If TRUE, POST operations validate the request without queue the import. The default value is FALSE. Note, POST operation will only validate data structure.
          schema:
            type: boolean
        - name: AutoUpdateExisting
          in: query
          description: If TRUE, all other elections of the same employee will be end-dated. The default value is FALSE.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST operation. For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/EmployeePayrollElection'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/EmployeePayrollElection'
          text/html:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/EmployeePayrollElection'
        required: true
      responses:
        '200':
          description: OK response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeePayrollElection'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeePayrollElection'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeePayrollElection'
        '400':
          description: Request is malformed or has validation errors.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
    patch:
      tags:
        - PayrollElections
      summary: PATCH Employee Elections
      operationId: PayrollElections_Patch_By_payrollElections_isValidateOnly_AutoUpdateExisting_clientNamespace
      parameters:
        - name: isValidateOnly
          in: query
          description: If TRUE, POST operations validate the request without queue the import. The default value is FALSE. Note, POST operation will only validate data structure.
          schema:
            type: boolean
        - name: AutoUpdateExisting
          in: query
          description: If TRUE, all other elections of the same employee will be end-dated. The default value is FALSE.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in PATCH operation. For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/EmployeePayrollElection'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/EmployeePayrollElection'
          text/html:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/EmployeePayrollElection'
        required: true
      responses:
        '200':
          description: OK response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeePayrollElection'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeePayrollElection'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeePayrollElection'
        '400':
          description: Request is malformed or has validation errors.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
  /{clientNamespace}/v1/Payroll/DeletePayrollElections:
    patch:
      tags:
        - PayrollElections
      summary: PATCH Employee Elections
      operationId: PayrollElections_DeleteElections_By_payrollElections_isValidateOnly_clientNamespace
      parameters:
        - name: isValidateOnly
          in: query
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in PATCH operation. For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/EmployeePayrollElectionDeletionModel'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/EmployeePayrollElectionDeletionModel'
          text/html:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/EmployeePayrollElectionDeletionModel'
        required: true
      responses:
        '200':
          description: OK response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeePayrollElectionDeletionModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeePayrollElectionDeletionModel'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeePayrollElectionDeletionModel'
        '400':
          description: Request is malformed or has validation errors.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
  /{clientNamespace}/V1/PayrollGL/Import:
    post:
      tags:
        - PayrollGL
      summary: POST Import GL Result
      operationId: PayrollGL_Post_By_importData_isValidateOnly_clientNamespace
      parameters:
        - name: isValidateOnly
          in: query
          description: If TRUE, POST operations validate the request without queue the import. The default value is FALSE. Note, POST operation will only validate data structure.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST operation. For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              type: object
              example:
                ImportSetName: GL Import 20210422
                PayrollGeneralLedgerImport:
                  Setting:
                    Mode: INSERT
                  PayRun:
                    PayGroupXrefCode: QAUSAW
                    PayDate: '2021-09-03T00:00:00.0000000-04:00'
                    PeriodStartDate: '2021-09-03T00:00:00.0000000-04:00'
                    PayPeriod: 35
                    PayCalendarLedgerCode1: PayCalendarLedgerCode11
                    PayCalendarLedgerCode2: PayCalendarLedgerCode12
                    PayGroupName: PayGroupName1
                    PayrollGeneralLedgerOrgUnitHierarchy:
                      - OrgUnitXrefCode: DeptOrg1
                        OrgUnitLevelXrefCode: OrgUnitLevelXrefCode1
                        OrgUnitName: OrgUnitName1
                        OrgUnitLedgerCode: OrgUnitLedgerCode1
                    PayrollGeneralLedgerLaborMetrics:
                      - CodeXrefCode: CodeXrefCode1
                        CodeName: CodeName1
                        LedgerCode: LedgerCode1
                    Employees:
                      - EmployeeXrefCode: qacbw101
                        EmployeeNumber: luffy123
                        PayClassXrefCode: PayClassXrefCode3
                        PayClassLedgerCode: PayClassLedgerCode3
                        PayTypeXrefCode: PayTypeXrefCode3
                        PayTypeLedgerCode: PayTypeLedgerCode3
                        Checks:
                          - LegalEntityXrefCode: LegalEntityXrefCode9
                            LegalEntityFundingIdentifier: LegalEntityFundingIdentifier9
                            LegalEntityName: LegalEntityName9
                            CheckNumber: CheckNumber9
                            HomeOrgUnitXrefCode: HomeOrgUnitXrefCode9
                            HomeOrgUnitName: HomeOrgUnitName9
                            HomeOrgUnitLedgerCode: HomeOrgUnitLedgerCode9
                            HomeJobAssignmentXrefCode: HomeJobAssignmentXrefCode9
                            HomeJobAssignmentName: HomeJobAssignmentName9
                            HomeJobAssignmentLedgerCode: HomeJobAssignmentLedgerCode9
                            HomeDepartmentXrefCode: HomeDeprtmentXrefCode9
                            HomeDepartmentName: HomeDeprtmentName9
                            HomeDepartmentLedgerCode: HomeDepartmentLedgerCode9
                            HomeJobXrefCode: HomeJobXrefCode9
                            HomeJobName: HomeJobName9
                            HomeJobLedgerCode: HomeJobLedgerCode9
                            PayrollGeneralLedgerOrgUnitHierarchy:
                              - HomeOrgUnitXrefCode: HomeOrgUnitXrefCode27
                                HomeOrgUnitLevelXrefCode: HomeOrgUnitLevelXrefCode27
                                HomeOrgUnitName: HomeOrgUnitName27
                                HomeOrgUnitLedgerCode: HomeOrgUnitLedgerCode27
                            CheckElements:
                              - ChargedOrgUnitXrefCode: ChargedOrgUnitXrefCode27
                                ChargedOrgUnitName: ChargedOrgUnitName27
                                ChargedOrgUnitLedgerCode: ChargedOrgUnitLedgerCode27
                                ChargedOrgIsPrimary: true
                                ChargedJobAssignmentXrefCode: ChargedJobAssignmentXrefCode27
                                ChargedJobAssignmentName: ChargedJobAssignmentName27
                                ChargedJobAssignmentLedgerCode: ChargedJobAssignmentLedgerCode27
                                ChargedDepartmentXrefCode: ChargedDepartmentXrefCode27
                                ChargedDepartmentName: ChargedDepartmentName27
                                ChargedDepartmentLedgerCode: ChargedDepartmentLedgerCode27
                                ChargedDepartmentIsPrimary: true
                                ChargedJobXrefCode: ChargedJobXrefCode27
                                ChargedJobName: ChargedJobName27
                                ChargedJobLedgerCode: ChargedJobLedgerCode27
                                ChargedJobIsPrimary: true
                                LegalEntityXrefCode: LegalEntityXrefCode27
                                LegalEntityName: LegalEntityName27
                                PayrollTaxLedgerCode: PayrollTaxLedgerCode27
                                EmployeeWorkAssignmentLedgerCode: EmployeeWorkAssignmentLedgerCode27
                                LaborAllocationPercentage: 94
                                CategoryName: CategoryName27
                                CategoryJournalNumber: CategoryJournalNumber27
                                Amount: 94
                                Hours: 9
                                TransactionType: Credit
                                RecordFlag: AC
                                EarningXrefCode: EarningXrefCode27
                                EarningIsPremium: true
                                DeductionXrefCode: DeductionXrefCode27
                                TaxXrefCode: TaxXrefCode27
                                CheckTemplateXrefCode: CheckTemplateXrefCode27
                                DisbursementType: On-Demand
                                PayeeAccountType: PayeeAccountType27
                                ProjectXrefCode: ProjectXrefCode27
                                ProjectName: CheckElementExample27
                                ProjectLedgerCode: CheckElementExample27
                                DocketXrefCode: DocketXrefCode27
                                DocketName: DocketName27
                                DocketLedgerCode: DocketLedgerCode27
                                BalanceXrefCode: BalanceXrefCode27
                                BalanceTransactionDate: '9999-06-22T00:00:00.0000000-04:00'
                                Constant1: Constant127
                                Constant2: Constant227
                                Constant3: Constant327
                                Constant4: Constant427
                                Constant5: Constant527
                                PayrollGeneralLedgerLaborMetrics:
                                  - CodeXrefCode: CodeXrefCode81
                                    CodeName: CodeName81
                                    LedgerCode: LedgerCode81
                                    IsDefault: true
                                PayrollGeneralLedgerOrgUnitHierarchy:
                                  - ChargedOrgUnitXrefCode: ChargedOrgUnitXrefCode81
                                    ChargedOrgUnitLevelXrefCode: ChargedOrgUnitLevelXrefCode81
                                    ChargedOrgUnitName: ChargedOrgUnitName81
                                    ChargedOrgUnitLedgerCode: ChargedOrgUnitLedgerCode
          text/json:
            schema:
              type: object
              example:
                ImportSetName: GL Import 20210422
                PayrollGeneralLedgerImport:
                  Setting:
                    Mode: INSERT
                  PayRun:
                    PayGroupXrefCode: QAUSAW
                    PayDate: '2021-09-03T00:00:00.0000000-04:00'
                    PeriodStartDate: '2021-09-03T00:00:00.0000000-04:00'
                    PayPeriod: 35
                    PayCalendarLedgerCode1: PayCalendarLedgerCode11
                    PayCalendarLedgerCode2: PayCalendarLedgerCode12
                    PayGroupName: PayGroupName1
                    PayrollGeneralLedgerOrgUnitHierarchy:
                      - OrgUnitXrefCode: DeptOrg1
                        OrgUnitLevelXrefCode: OrgUnitLevelXrefCode1
                        OrgUnitName: OrgUnitName1
                        OrgUnitLedgerCode: OrgUnitLedgerCode1
                    PayrollGeneralLedgerLaborMetrics:
                      - CodeXrefCode: CodeXrefCode1
                        CodeName: CodeName1
                        LedgerCode: LedgerCode1
                    Employees:
                      - EmployeeXrefCode: qacbw101
                        EmployeeNumber: luffy123
                        PayClassXrefCode: PayClassXrefCode3
                        PayClassLedgerCode: PayClassLedgerCode3
                        PayTypeXrefCode: PayTypeXrefCode3
                        PayTypeLedgerCode: PayTypeLedgerCode3
                        Checks:
                          - LegalEntityXrefCode: LegalEntityXrefCode9
                            LegalEntityFundingIdentifier: LegalEntityFundingIdentifier9
                            LegalEntityName: LegalEntityName9
                            CheckNumber: CheckNumber9
                            HomeOrgUnitXrefCode: HomeOrgUnitXrefCode9
                            HomeOrgUnitName: HomeOrgUnitName9
                            HomeOrgUnitLedgerCode: HomeOrgUnitLedgerCode9
                            HomeJobAssignmentXrefCode: HomeJobAssignmentXrefCode9
                            HomeJobAssignmentName: HomeJobAssignmentName9
                            HomeJobAssignmentLedgerCode: HomeJobAssignmentLedgerCode9
                            HomeDepartmentXrefCode: HomeDeprtmentXrefCode9
                            HomeDepartmentName: HomeDeprtmentName9
                            HomeDepartmentLedgerCode: HomeDepartmentLedgerCode9
                            HomeJobXrefCode: HomeJobXrefCode9
                            HomeJobName: HomeJobName9
                            HomeJobLedgerCode: HomeJobLedgerCode9
                            PayrollGeneralLedgerOrgUnitHierarchy:
                              - HomeOrgUnitXrefCode: HomeOrgUnitXrefCode27
                                HomeOrgUnitLevelXrefCode: HomeOrgUnitLevelXrefCode27
                                HomeOrgUnitName: HomeOrgUnitName27
                                HomeOrgUnitLedgerCode: HomeOrgUnitLedgerCode27
                            CheckElements:
                              - ChargedOrgUnitXrefCode: ChargedOrgUnitXrefCode27
                                ChargedOrgUnitName: ChargedOrgUnitName27
                                ChargedOrgUnitLedgerCode: ChargedOrgUnitLedgerCode27
                                ChargedOrgIsPrimary: true
                                ChargedJobAssignmentXrefCode: ChargedJobAssignmentXrefCode27
                                ChargedJobAssignmentName: ChargedJobAssignmentName27
                                ChargedJobAssignmentLedgerCode: ChargedJobAssignmentLedgerCode27
                                ChargedDepartmentXrefCode: ChargedDepartmentXrefCode27
                                ChargedDepartmentName: ChargedDepartmentName27
                                ChargedDepartmentLedgerCode: ChargedDepartmentLedgerCode27
                                ChargedDepartmentIsPrimary: true
                                ChargedJobXrefCode: ChargedJobXrefCode27
                                ChargedJobName: ChargedJobName27
                                ChargedJobLedgerCode: ChargedJobLedgerCode27
                                ChargedJobIsPrimary: true
                                LegalEntityXrefCode: LegalEntityXrefCode27
                                LegalEntityName: LegalEntityName27
                                PayrollTaxLedgerCode: PayrollTaxLedgerCode27
                                EmployeeWorkAssignmentLedgerCode: EmployeeWorkAssignmentLedgerCode27
                                LaborAllocationPercentage: 94
                                CategoryName: CategoryName27
                                CategoryJournalNumber: CategoryJournalNumber27
                                Amount: 94
                                Hours: 9
                                TransactionType: Credit
                                RecordFlag: AC
                                EarningXrefCode: EarningXrefCode27
                                EarningIsPremium: true
                                DeductionXrefCode: DeductionXrefCode27
                                TaxXrefCode: TaxXrefCode27
                                CheckTemplateXrefCode: CheckTemplateXrefCode27
                                DisbursementType: On-Demand
                                PayeeAccountType: PayeeAccountType27
                                ProjectXrefCode: ProjectXrefCode27
                                ProjectName: CheckElementExample27
                                ProjectLedgerCode: CheckElementExample27
                                DocketXrefCode: DocketXrefCode27
                                DocketName: DocketName27
                                DocketLedgerCode: DocketLedgerCode27
                                BalanceXrefCode: BalanceXrefCode27
                                BalanceTransactionDate: '9999-06-22T00:00:00.0000000-04:00'
                                Constant1: Constant127
                                Constant2: Constant227
                                Constant3: Constant327
                                Constant4: Constant427
                                Constant5: Constant527
                                PayrollGeneralLedgerLaborMetrics:
                                  - CodeXrefCode: CodeXrefCode81
                                    CodeName: CodeName81
                                    LedgerCode: LedgerCode81
                                    IsDefault: true
                                PayrollGeneralLedgerOrgUnitHierarchy:
                                  - ChargedOrgUnitXrefCode: ChargedOrgUnitXrefCode81
                                    ChargedOrgUnitLevelXrefCode: ChargedOrgUnitLevelXrefCode81
                                    ChargedOrgUnitName: ChargedOrgUnitName81
                                    ChargedOrgUnitLedgerCode: ChargedOrgUnitLedgerCode
          text/html:
            schema:
              type: object
              example:
                ImportSetName: GL Import 20210422
                PayrollGeneralLedgerImport:
                  Setting:
                    Mode: INSERT
                  PayRun:
                    PayGroupXrefCode: QAUSAW
                    PayDate: '2021-09-03T00:00:00.0000000-04:00'
                    PeriodStartDate: '2021-09-03T00:00:00.0000000-04:00'
                    PayPeriod: 35
                    PayCalendarLedgerCode1: PayCalendarLedgerCode11
                    PayCalendarLedgerCode2: PayCalendarLedgerCode12
                    PayGroupName: PayGroupName1
                    PayrollGeneralLedgerOrgUnitHierarchy:
                      - OrgUnitXrefCode: DeptOrg1
                        OrgUnitLevelXrefCode: OrgUnitLevelXrefCode1
                        OrgUnitName: OrgUnitName1
                        OrgUnitLedgerCode: OrgUnitLedgerCode1
                    PayrollGeneralLedgerLaborMetrics:
                      - CodeXrefCode: CodeXrefCode1
                        CodeName: CodeName1
                        LedgerCode: LedgerCode1
                    Employees:
                      - EmployeeXrefCode: qacbw101
                        EmployeeNumber: luffy123
                        PayClassXrefCode: PayClassXrefCode3
                        PayClassLedgerCode: PayClassLedgerCode3
                        PayTypeXrefCode: PayTypeXrefCode3
                        PayTypeLedgerCode: PayTypeLedgerCode3
                        Checks:
                          - LegalEntityXrefCode: LegalEntityXrefCode9
                            LegalEntityFundingIdentifier: LegalEntityFundingIdentifier9
                            LegalEntityName: LegalEntityName9
                            CheckNumber: CheckNumber9
                            HomeOrgUnitXrefCode: HomeOrgUnitXrefCode9
                            HomeOrgUnitName: HomeOrgUnitName9
                            HomeOrgUnitLedgerCode: HomeOrgUnitLedgerCode9
                            HomeJobAssignmentXrefCode: HomeJobAssignmentXrefCode9
                            HomeJobAssignmentName: HomeJobAssignmentName9
                            HomeJobAssignmentLedgerCode: HomeJobAssignmentLedgerCode9
                            HomeDepartmentXrefCode: HomeDeprtmentXrefCode9
                            HomeDepartmentName: HomeDeprtmentName9
                            HomeDepartmentLedgerCode: HomeDepartmentLedgerCode9
                            HomeJobXrefCode: HomeJobXrefCode9
                            HomeJobName: HomeJobName9
                            HomeJobLedgerCode: HomeJobLedgerCode9
                            PayrollGeneralLedgerOrgUnitHierarchy:
                              - HomeOrgUnitXrefCode: HomeOrgUnitXrefCode27
                                HomeOrgUnitLevelXrefCode: HomeOrgUnitLevelXrefCode27
                                HomeOrgUnitName: HomeOrgUnitName27
                                HomeOrgUnitLedgerCode: HomeOrgUnitLedgerCode27
                            CheckElements:
                              - ChargedOrgUnitXrefCode: ChargedOrgUnitXrefCode27
                                ChargedOrgUnitName: ChargedOrgUnitName27
                                ChargedOrgUnitLedgerCode: ChargedOrgUnitLedgerCode27
                                ChargedOrgIsPrimary: true
                                ChargedJobAssignmentXrefCode: ChargedJobAssignmentXrefCode27
                                ChargedJobAssignmentName: ChargedJobAssignmentName27
                                ChargedJobAssignmentLedgerCode: ChargedJobAssignmentLedgerCode27
                                ChargedDepartmentXrefCode: ChargedDepartmentXrefCode27
                                ChargedDepartmentName: ChargedDepartmentName27
                                ChargedDepartmentLedgerCode: ChargedDepartmentLedgerCode27
                                ChargedDepartmentIsPrimary: true
                                ChargedJobXrefCode: ChargedJobXrefCode27
                                ChargedJobName: ChargedJobName27
                                ChargedJobLedgerCode: ChargedJobLedgerCode27
                                ChargedJobIsPrimary: true
                                LegalEntityXrefCode: LegalEntityXrefCode27
                                LegalEntityName: LegalEntityName27
                                PayrollTaxLedgerCode: PayrollTaxLedgerCode27
                                EmployeeWorkAssignmentLedgerCode: EmployeeWorkAssignmentLedgerCode27
                                LaborAllocationPercentage: 94
                                CategoryName: CategoryName27
                                CategoryJournalNumber: CategoryJournalNumber27
                                Amount: 94
                                Hours: 9
                                TransactionType: Credit
                                RecordFlag: AC
                                EarningXrefCode: EarningXrefCode27
                                EarningIsPremium: true
                                DeductionXrefCode: DeductionXrefCode27
                                TaxXrefCode: TaxXrefCode27
                                CheckTemplateXrefCode: CheckTemplateXrefCode27
                                DisbursementType: On-Demand
                                PayeeAccountType: PayeeAccountType27
                                ProjectXrefCode: ProjectXrefCode27
                                ProjectName: CheckElementExample27
                                ProjectLedgerCode: CheckElementExample27
                                DocketXrefCode: DocketXrefCode27
                                DocketName: DocketName27
                                DocketLedgerCode: DocketLedgerCode27
                                BalanceXrefCode: BalanceXrefCode27
                                BalanceTransactionDate: '9999-06-22T00:00:00.0000000-04:00'
                                Constant1: Constant127
                                Constant2: Constant227
                                Constant3: Constant327
                                Constant4: Constant427
                                Constant5: Constant527
                                PayrollGeneralLedgerLaborMetrics:
                                  - CodeXrefCode: CodeXrefCode81
                                    CodeName: CodeName81
                                    LedgerCode: LedgerCode81
                                    IsDefault: true
                                PayrollGeneralLedgerOrgUnitHierarchy:
                                  - ChargedOrgUnitXrefCode: ChargedOrgUnitXrefCode81
                                    ChargedOrgUnitLevelXrefCode: ChargedOrgUnitLevelXrefCode81
                                    ChargedOrgUnitName: ChargedOrgUnitName81
                                    ChargedOrgUnitLedgerCode: ChargedOrgUnitLedgerCode
        required: true
      responses:
        '200':
          description: GLResult Import was created successfully, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Payroll/Import/TimeData:
    post:
      tags:
        - PayrollPayEntry
      summary: POST Import Time Data
      operationId: PayrollPayEntry_TimeDataPost_By_importData_isValidateOnly_clientNamespace
      parameters:
        - name: isValidateOnly
          in: query
          description: If TRUE, POST operations validate the request without queue the import. The default value is FALSE. Note, POST operation will only validate data structure.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST operation. For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              type: object
              example:
                ImportSetName: TimeData Import
                ErrorOnAction: 1
                DeleteImportedData: false
                PayGroupXrefCode: QAUSABWCopy
                SourceSystem: SourceSystem
                ImportIdentifier: ImportIdentifier
                PayDate: '2021-12-10T00:00:00.0000000-05:00'
                OffCyclePayRunXrefCode: QAUSABW2501
                PeriodStart: '2021-11-05T00:00:00.0000000-04:00'
                PeriodEnd: '2021-11-19T00:00:00.0000000-05:00'
                PPN: 25-01
                AutoDetectPayGroup: false
                DataEntries:
                  - EmployeeName: null
                    EmployeeXRefCode: qaubw201
                    Replace: true
                    CodeXRefCode: RegularEarning
                    Hours: 10
                    Rate: 25
                    RateCode: J
                    Amount: 250
                    Message: Comment One
                    WorkLocationXRefCode: Delaware Dept
                    JobAssignmentXRefCode: QA Tester Position Dept2 Ref Code
                    LegalEntityXrefCode: USALId2
                    CheckTemplateXRefCode: Check
                    ApplyROEMapping: true
                    FLSAAdjustStartDate: '2021-12-10T00:00:00.0000000-05:00'
                    FLSAAdjustEndDate: '2021-12-10T00:00:00.0000000-05:00'
                    ProjectXRefCode: Alabama
                    TrailingTaxationPeriodStart: '2021-12-10T00:00:00.0000000-05:00'
                    TrailingTaxationPeriodEnd: '2021-11-16T00:00:00.0000000-05:00'
                    DebitArrears: true
                    PayPeriodsForTax: 10
                    DocketXRefCode: ZUT
                    BusinessDate: '2021-12-10T00:00:00.0000000-05:00'
                    LaborMetrics:
                      - LaborMetricsTypeXRefCode: Activity Ref
                        LaborMetricsCodeXRefCode: ActivityLaborMetric
          text/json:
            schema:
              type: object
              example:
                ImportSetName: TimeData Import
                ErrorOnAction: 1
                DeleteImportedData: false
                PayGroupXrefCode: QAUSABWCopy
                SourceSystem: SourceSystem
                ImportIdentifier: ImportIdentifier
                PayDate: '2021-12-10T00:00:00.0000000-05:00'
                OffCyclePayRunXrefCode: QAUSABW2501
                PeriodStart: '2021-11-05T00:00:00.0000000-04:00'
                PeriodEnd: '2021-11-19T00:00:00.0000000-05:00'
                PPN: 25-01
                AutoDetectPayGroup: false
                DataEntries:
                  - EmployeeName: null
                    EmployeeXRefCode: qaubw201
                    Replace: true
                    CodeXRefCode: RegularEarning
                    Hours: 10
                    Rate: 25
                    RateCode: J
                    Amount: 250
                    Message: Comment One
                    WorkLocationXRefCode: Delaware Dept
                    JobAssignmentXRefCode: QA Tester Position Dept2 Ref Code
                    LegalEntityXrefCode: USALId2
                    CheckTemplateXRefCode: Check
                    ApplyROEMapping: true
                    FLSAAdjustStartDate: '2021-12-10T00:00:00.0000000-05:00'
                    FLSAAdjustEndDate: '2021-12-10T00:00:00.0000000-05:00'
                    ProjectXRefCode: Alabama
                    TrailingTaxationPeriodStart: '2021-12-10T00:00:00.0000000-05:00'
                    TrailingTaxationPeriodEnd: '2021-11-16T00:00:00.0000000-05:00'
                    DebitArrears: true
                    PayPeriodsForTax: 10
                    DocketXRefCode: ZUT
                    BusinessDate: '2021-12-10T00:00:00.0000000-05:00'
                    LaborMetrics:
                      - LaborMetricsTypeXRefCode: Activity Ref
                        LaborMetricsCodeXRefCode: ActivityLaborMetric
          text/html:
            schema:
              type: object
              example:
                ImportSetName: TimeData Import
                ErrorOnAction: 1
                DeleteImportedData: false
                PayGroupXrefCode: QAUSABWCopy
                SourceSystem: SourceSystem
                ImportIdentifier: ImportIdentifier
                PayDate: '2021-12-10T00:00:00.0000000-05:00'
                OffCyclePayRunXrefCode: QAUSABW2501
                PeriodStart: '2021-11-05T00:00:00.0000000-04:00'
                PeriodEnd: '2021-11-19T00:00:00.0000000-05:00'
                PPN: 25-01
                AutoDetectPayGroup: false
                DataEntries:
                  - EmployeeName: null
                    EmployeeXRefCode: qaubw201
                    Replace: true
                    CodeXRefCode: RegularEarning
                    Hours: 10
                    Rate: 25
                    RateCode: J
                    Amount: 250
                    Message: Comment One
                    WorkLocationXRefCode: Delaware Dept
                    JobAssignmentXRefCode: QA Tester Position Dept2 Ref Code
                    LegalEntityXrefCode: USALId2
                    CheckTemplateXRefCode: Check
                    ApplyROEMapping: true
                    FLSAAdjustStartDate: '2021-12-10T00:00:00.0000000-05:00'
                    FLSAAdjustEndDate: '2021-12-10T00:00:00.0000000-05:00'
                    ProjectXRefCode: Alabama
                    TrailingTaxationPeriodStart: '2021-12-10T00:00:00.0000000-05:00'
                    TrailingTaxationPeriodEnd: '2021-11-16T00:00:00.0000000-05:00'
                    DebitArrears: true
                    PayPeriodsForTax: 10
                    DocketXRefCode: ZUT
                    BusinessDate: '2021-12-10T00:00:00.0000000-05:00'
                    LaborMetrics:
                      - LaborMetricsTypeXRefCode: Activity Ref
                        LaborMetricsCodeXRefCode: ActivityLaborMetric
        required: true
      responses:
        '200':
          description: Time Data Import was created successfully, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Payroll/TimeDataDelete/{payGroupXRefCode}:
    patch:
      tags:
        - PayrollPayEntry
      summary: DELETE Import Time Data
      operationId: PayrollPayEntry_TimeDataDelete_By_payGroupXRefCode_importSetModel_source_periodStartDate_periodEndDate_payDate_ppn_orgUnitXRefCode_offCyclePayRunXRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: payGroupXRefCode
          in: path
          description: The pay group reference code.
          required: true
          schema:
            type: string
        - name: source
          in: query
          description: The source of the import.
          schema:
            type: string
        - name: periodStartDate
          in: query
          description: The pay run period start date.
          schema:
            type: string
            format: date-time
        - name: periodEndDate
          in: query
          description: The pay run period end date.
          schema:
            type: string
            format: date-time
        - name: payDate
          in: query
          description: The pay run pay date.
          schema:
            type: string
            format: date-time
        - name: ppn
          in: query
          description: 'The pay run''s pay period number (format: ##-##).'
          schema:
            type: string
        - name: orgUnitXRefCode
          in: query
          description: The user org unit reference code to load data entries from (in org unit hierarchy).
          schema:
            type: string
        - name: offCyclePayRunXRefCode
          in: query
          description: Offcycle pay run XRef Code.
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: "If TRUE, DELETE operations validate the request and IDs. \r\n            The default value is FALSE. Note, DELETE operation will only validate data structure."
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities ids for DELETE operation.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportSetModel'
          text/json:
            schema:
              $ref: '#/components/schemas/ImportSetModel'
          text/html:
            schema:
              $ref: '#/components/schemas/ImportSetModel'
        required: true
      responses:
        '200':
          description: Time Data Import was deleted successfully, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Payroll/PayrollPayEntryImportHistory/{payGroupXRefCode}:
    get:
      tags:
        - PayrollPayEntry
      summary: GET the list of Time Data Import Job History with Error info.
      operationId: PayrollPayEntry_Get_By_payGroupXRefCode_source_importsFromDate_importsToDate_problemsOnly_periodStartDate_periodEndDate_payDate_ppn_offCyclePayRunXRefCode_importIdentifiers_clientNamespace
      parameters:
        - name: payGroupXRefCode
          in: path
          description: The pay group reference code.
          required: true
          schema:
            type: string
        - name: source
          in: query
          description: The time data import source name.
          schema:
            type: string
        - name: importsFromDate
          in: query
          description: The time data import history from date.
          schema:
            type: string
            format: date-time
        - name: importsToDate
          in: query
          description: The time data import history to date.
          schema:
            type: string
            format: date-time
        - name: problemsOnly
          in: query
          description: If true, then return only time data which has errors. If false, then return both error and non error records.
          schema:
            type: boolean
        - name: periodStartDate
          in: query
          description: The pay run period start date.
          schema:
            type: string
            format: date-time
        - name: periodEndDate
          in: query
          description: The pay run period end date.
          schema:
            type: string
            format: date-time
        - name: payDate
          in: query
          description: The pay run pay date.
          schema:
            type: string
            format: date-time
        - name: ppn
          in: query
          description: 'The pay run''s pay period number (format: ##-##).'
          schema:
            type: string
        - name: offCyclePayRunXRefCode
          in: query
          description: The off cycle pay run reference code.
          schema:
            type: string
        - name: importIdentifiers
          in: query
          description: The comma separated list of import identifiers.
          schema:
            type: string
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: Time data import jobs history.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_PayrollPayEntryImportHistory'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_PayrollPayEntryImportHistory'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_PayrollPayEntryImportHistory'
        '400':
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
  /{clientNamespace}/V1/Payroll/Import/QuickEntry:
    post:
      tags:
        - PayrollPayEntry
      summary: POST Quick Entry Items
      operationId: PayrollPayEntry_QuickEntryPost_By_importData_isValidateOnly_clientNamespace
      parameters:
        - name: isValidateOnly
          in: query
          description: If TRUE, POST operations validate the request without queue the import. The default value is FALSE. Note, POST operation will only validate data structure.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST operation. For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              type: object
              example:
                ImportSetName: TimeData Import
                ErrorOnAction: 1
                ImportIdentifier: ImportIdentifier
                PayGroupXrefCode: QAUSABWCopy
                PPN: 25-01
                AutoDetectPayGroup: false
                OffCyclePayRunXrefCode: QAUSABW2501
                PayDate: '2021-12-10T00:00:00.0000000-05:00'
                PeriodStart: '2021-11-05T00:00:00.0000000-04:00'
                PeriodEnd: '2021-11-19T00:00:00.0000000-05:00'
                DataEntries:
                  - Replace: true
                    Message: Comment One
                    Amount: 250
                    Hours: 10
                    Rate: 25
                    PayOutAccruals: true
                    WorkersCompAccountName: AA
                    WorkersCompCode: WCC
                    ProjectXRefCode: Alabama
                    DocketXRefCode: ZUT
                    LaborPercent: null
                    ApplyROEMapping: true
                    BusinessDate: '2021-12-10T00:00:00.0000000-05:00'
                    FLSAAdjustStartDate: '2021-12-10T00:00:00.0000000-05:00'
                    FLSAAdjustEndDate: '2021-12-10T00:00:00.0000000-05:00'
                    DoNotDisburseToPayee: true
                    PayPeriodsForTax: 10
                    OrderPercent: 22
                    DisposableEarningAmount: 25
                    LimitAmount: 25
                    EmployeeXRefCode: qaubw201
                    EmployeeNumber: null
                    CheckTemplateXRefCode: null
                    WorkLocationXRefCode: Delaware Dept
                    LegalEntityXrefCode: LE001
                    JobAssignmentXRefCode: QA Tester Position Dept2 Ref Code
                    CodeXRefCode: RegularEarning
                    OrderedAmountTypeXRefCode: OT
                    LaborMetrics:
                      - LaborMetricsTypeXRefCode: Activity Ref
                        LaborMetricsCodeXRefCode: ActivityLaborMetric
                    DebitArrears: true
          text/json:
            schema:
              type: object
              example:
                ImportSetName: TimeData Import
                ErrorOnAction: 1
                ImportIdentifier: ImportIdentifier
                PayGroupXrefCode: QAUSABWCopy
                PPN: 25-01
                AutoDetectPayGroup: false
                OffCyclePayRunXrefCode: QAUSABW2501
                PayDate: '2021-12-10T00:00:00.0000000-05:00'
                PeriodStart: '2021-11-05T00:00:00.0000000-04:00'
                PeriodEnd: '2021-11-19T00:00:00.0000000-05:00'
                DataEntries:
                  - Replace: true
                    Message: Comment One
                    Amount: 250
                    Hours: 10
                    Rate: 25
                    PayOutAccruals: true
                    WorkersCompAccountName: AA
                    WorkersCompCode: WCC
                    ProjectXRefCode: Alabama
                    DocketXRefCode: ZUT
                    LaborPercent: null
                    ApplyROEMapping: true
                    BusinessDate: '2021-12-10T00:00:00.0000000-05:00'
                    FLSAAdjustStartDate: '2021-12-10T00:00:00.0000000-05:00'
                    FLSAAdjustEndDate: '2021-12-10T00:00:00.0000000-05:00'
                    DoNotDisburseToPayee: true
                    PayPeriodsForTax: 10
                    OrderPercent: 22
                    DisposableEarningAmount: 25
                    LimitAmount: 25
                    EmployeeXRefCode: qaubw201
                    EmployeeNumber: null
                    CheckTemplateXRefCode: null
                    WorkLocationXRefCode: Delaware Dept
                    LegalEntityXrefCode: LE001
                    JobAssignmentXRefCode: QA Tester Position Dept2 Ref Code
                    CodeXRefCode: RegularEarning
                    OrderedAmountTypeXRefCode: OT
                    LaborMetrics:
                      - LaborMetricsTypeXRefCode: Activity Ref
                        LaborMetricsCodeXRefCode: ActivityLaborMetric
                    DebitArrears: true
          text/html:
            schema:
              type: object
              example:
                ImportSetName: TimeData Import
                ErrorOnAction: 1
                ImportIdentifier: ImportIdentifier
                PayGroupXrefCode: QAUSABWCopy
                PPN: 25-01
                AutoDetectPayGroup: false
                OffCyclePayRunXrefCode: QAUSABW2501
                PayDate: '2021-12-10T00:00:00.0000000-05:00'
                PeriodStart: '2021-11-05T00:00:00.0000000-04:00'
                PeriodEnd: '2021-11-19T00:00:00.0000000-05:00'
                DataEntries:
                  - Replace: true
                    Message: Comment One
                    Amount: 250
                    Hours: 10
                    Rate: 25
                    PayOutAccruals: true
                    WorkersCompAccountName: AA
                    WorkersCompCode: WCC
                    ProjectXRefCode: Alabama
                    DocketXRefCode: ZUT
                    LaborPercent: null
                    ApplyROEMapping: true
                    BusinessDate: '2021-12-10T00:00:00.0000000-05:00'
                    FLSAAdjustStartDate: '2021-12-10T00:00:00.0000000-05:00'
                    FLSAAdjustEndDate: '2021-12-10T00:00:00.0000000-05:00'
                    DoNotDisburseToPayee: true
                    PayPeriodsForTax: 10
                    OrderPercent: 22
                    DisposableEarningAmount: 25
                    LimitAmount: 25
                    EmployeeXRefCode: qaubw201
                    EmployeeNumber: null
                    CheckTemplateXRefCode: null
                    WorkLocationXRefCode: Delaware Dept
                    LegalEntityXrefCode: LE001
                    JobAssignmentXRefCode: QA Tester Position Dept2 Ref Code
                    CodeXRefCode: RegularEarning
                    OrderedAmountTypeXRefCode: OT
                    LaborMetrics:
                      - LaborMetricsTypeXRefCode: Activity Ref
                        LaborMetricsCodeXRefCode: ActivityLaborMetric
                    DebitArrears: true
        required: true
      responses:
        '200':
          description: Quick Entry Import was created successfully, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Payroll/QuickEntry:
    patch:
      tags:
        - PayrollPayEntry
      summary: PATCH Quick Entry Items
      operationId: PayrollPayEntry_QuickEntryPatch_By_quickEntries_isValidateOnly_clientNamespace
      parameters:
        - name: isValidateOnly
          in: query
          description: If TRUE, PATCH operations validate the request without updating the item. The default value is FALSE. Note, PATCH operation will only validate data structure.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/DataEntry'
              example:
                - {}
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/DataEntry'
              example:
                - {}
          text/html:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/DataEntry'
              example:
                - {}
        required: true
      responses:
        '200':
          description: Quick Entry Import was updated successfully, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/TaxAuthorityInstanceDetails:
    get:
      tags:
        - PayrollTaxData
      summary: GET List of IPS Tax Authority Instance Details.
      operationId: PayrollTaxData_Get_By_countryCodes_clientNamespace
      parameters:
        - name: countryCodes
          in: query
          description: List of three letter country codes with comma separator to filter the result.
          schema:
            type: string
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: The IPS Tax Authority Instance Details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_TaxAuthorityInstanceDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_TaxAuthorityInstanceDetails'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_TaxAuthorityInstanceDetails'
        '400':
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/PayRunStatus/{payGroupXRefCode}:
    get:
      tags:
        - PayRunStatus
      summary: GET Pay Run Status.
      operationId: PayRunStatus_Get_By_payGroupXRefCode_payDate_periodStartDate_periodEndDate_ppn_clientNamespace
      parameters:
        - name: payGroupXRefCode
          in: path
          description: The pay group's reference code.
          required: true
          schema:
            type: string
        - name: payDate
          in: query
          description: 'The pay run''s pay date (format: yyyy-mm-dd).'
          schema:
            type: string
        - name: periodStartDate
          in: query
          description: 'The pay run''s period start date (format: yyyy-mm-dd).'
          schema:
            type: string
        - name: periodEndDate
          in: query
          description: 'The pay run''s period end date (format: yyyy-mm-dd).'
          schema:
            type: string
        - name: ppn
          in: query
          description: 'The PayPeriodNumber(format: ##-##).'
          schema:
            type: string
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: The pay run status.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_PayRunStatus'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_PayRunStatus'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_PayRunStatus'
        '400':
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/PayTypes:
    get:
      tags:
        - PayTypes
      summary: GET a List of PayTypes
      operationId: PayTypes_Get_By_clientNamespace
      parameters:
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: A collection of PayType XRefCodes.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_PayType'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_PayType'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_PayType'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/PayTypes/{xrefCode}:
    get:
      tags:
        - PayTypes
      summary: GET a PayType with the requested XRefCode.
      operationId: PayTypes_Get_By_xrefCode_clientNamespace
      parameters:
        - name: xrefCode
          in: path
          required: true
          schema:
            type: string
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: The PayType with the requested XRefCode.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_PayType'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_PayType'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_PayType'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/Addresses:
    get:
      tags:
        - PersonAddress
      summary: GET PersonAddress Details
      operationId: PersonAddress_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: contextDate
          in: query
          description: 'The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: contextDateRangeFrom
          in: query
          description: 'The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: contextDateRangeTo
          in: query
          description: 'The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: The PersonAddress with the requested XRefCode.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_PersonAddress'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_PersonAddress'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_PersonAddress'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
        - PersonAddress
      summary: POST a PersonAddress
      operationId: PersonAddress_Post_By_personAddress_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonAddress'
          text/json:
            schema:
              $ref: '#/components/schemas/PersonAddress'
          text/html:
            schema:
              $ref: '#/components/schemas/PersonAddress'
        required: true
      responses:
        '200':
          description: A PersonAddress is created, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
        - PersonAddress
      summary: PATCH a PersonAddress
      operationId: PersonAddress_Patch_By_personAddress_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonAddress'
          text/json:
            schema:
              $ref: '#/components/schemas/PersonAddress'
          text/html:
            schema:
              $ref: '#/components/schemas/PersonAddress'
        required: true
      responses:
        '200':
          description: The PersonAddress is updated, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/Contacts:
    get:
      tags:
        - PersonContact
      summary: GET PersonContact Details
      operationId: PersonContact_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: contextDate
          in: query
          description: 'The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: contextDateRangeFrom
          in: query
          description: 'The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: contextDateRangeTo
          in: query
          description: 'The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: The PersonContact with the requested XRefCode.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_PersonContact'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_PersonContact'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_PersonContact'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
        - PersonContact
      summary: POST a PersonContact
      operationId: PersonContact_Post_By_personContact_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonContact'
          text/json:
            schema:
              $ref: '#/components/schemas/PersonContact'
          text/html:
            schema:
              $ref: '#/components/schemas/PersonContact'
        required: true
      responses:
        '200':
          description: A PersonContact is created, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
        - PersonContact
      summary: PATCH a PersonContact
      operationId: PersonContact_Patch_By_personContact_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonContact'
          text/json:
            schema:
              $ref: '#/components/schemas/PersonContact'
          text/html:
            schema:
              $ref: '#/components/schemas/PersonContact'
        required: true
      responses:
        '200':
          description: The PersonContact is updated, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/PlanLaborCategoryCode:
    get:
      tags:
        - PlanLaborCategoryCode
      summary: Get PlanLaborCategoryCode
      operationId: PlanLaborCategoryCode_Get_By_clientNamespace
      parameters:
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: Labor Standard Category Code
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_PlanLaborCategoryCode'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_PlanLaborCategoryCode'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_PlanLaborCategoryCode'
        '400':
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_PlanLaborCategoryCode'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_PlanLaborCategoryCode'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_PlanLaborCategoryCode'
        '501':
          description: The supplied parameter combination has not been implemented and is unsupported.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
  /{clientNamespace}/V1/PlanLaborStandardDriver:
    get:
      tags:
        - PlanLaborStandardDriver
      summary: Get PlanLaborStandardDriver
      operationId: PlanLaborStandardDriver_Get_By_clientNamespace
      parameters:
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: Labor Standard Drivers and DriverTypes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_PlanLaborStandardDriver'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_PlanLaborStandardDriver'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_PlanLaborStandardDriver'
        '400':
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_PlanLaborStandardDriver'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_PlanLaborStandardDriver'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_PlanLaborStandardDriver'
        '501':
          description: The supplied parameter combination has not been implemented and is unsupported.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
  /{clientNamespace}/V1/PlanTargets:
    get:
      tags:
        - PlanTargets
      summary: Get Plan Targets matching search criteria
      operationId: PlanTargets_Get_By_planTargetXRefCode_orgUnitXRefCode_kpiXRefCode_zoneXRefCode_isActive_clientNamespace
      parameters:
        - name: planTargetXRefCode
          in: query
          description: The unique identifier of the plan target.
          schema:
            type: string
        - name: orgUnitXRefCode
          in: query
          description: Unique identifier of the Org.
          schema:
            type: string
        - name: kpiXRefCode
          in: query
          description: The unique identifier of the KPI.
          schema:
            type: string
        - name: zoneXRefCode
          in: query
          description: The unique identifier of the zone.
          schema:
            type: string
        - name: isActive
          in: query
          description: Select to filter only active plan targets.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: Plan Target details which matches the supplied parameters (or all if none supplied)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_PlanTarget'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_PlanTarget'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_PlanTarget'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_PlanTarget'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_PlanTarget'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_PlanTarget'
    post:
      tags:
        - PlanTargets
      operationId: PlanTargets_Post_By_planTargetApiModel_isValidateOnly_clientNamespace
      parameters:
        - name: isValidateOnly
          in: query
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlanTarget'
          text/json:
            schema:
              $ref: '#/components/schemas/PlanTarget'
          text/html:
            schema:
              $ref: '#/components/schemas/PlanTarget'
        required: true
      responses:
        '200':
          description: If isValidateOnly was passed in as true, this shows that the validation passed.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '201':
          description: The Plan Target has been created
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '403':
          description: User does not have sufficient acess rights to create a Plan Target.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '409':
          description: The Plan Target has not been created as a conflicting plan target already exists
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '500':
          description: An unexpected server error occurred.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
    delete:
      tags:
        - PlanTargets
      summary: Deletes a plan target matching the supplied XRefCode
      operationId: PlanTargets_Delete_By_planTargetXRefCode_clientNamespace
      parameters:
        - name: planTargetXRefCode
          in: query
          description: ''
          required: true
          schema:
            type: string
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '204':
          description: All matching plan targets were deleted
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '500':
          description: An unexpected server error occurred.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
    patch:
      tags:
        - PlanTargets
      summary: "Amend a Plan Method Target record, plus any child table\r\n    entries."
      operationId: PlanTargets_Patch_By_planTargetApiModel_planTargetXRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: planTargetXRefCode
          in: query
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: "When a TRUE value is used in \r\n                 this parameter the PATCH operation validates the\r\n                 request without applying the updates to the database.\r\n                 The default value is FALSE if parameter is not specified."
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: "The details of the \r\n                 PlanTarget record to Amend."
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlanTarget'
          text/json:
            schema:
              $ref: '#/components/schemas/PlanTarget'
          text/html:
            schema:
              $ref: '#/components/schemas/PlanTarget'
        required: true
      responses:
        '200':
          description: If isValidateOnly was passed in as true, this shows that the validation passed.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '204':
          description: The Plan Target was updated successfully.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '403':
          description: User does not have sufficient acess rights to create a Plan Target.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '404':
          description: The Plan Target does not exist in Dayforce
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '500':
          description: An unexpected server error occurred.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
  /{clientNamespace}/V1/Positions:
    get:
      tags:
        - Positions
      summary: Get a list of Positions
      operationId: Positions_Get_By_contextDate_clientNamespace
      parameters:
        - name: contextDate
          in: query
          description: 'The Context Date value is an “as-of” date used to determine which Position data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2019-01-01T12:34:56'
          schema:
            type: string
            format: date-time
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: A collection of Position XRefCodes meeting the search criteria.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_Position'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_Position'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_Position'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
        - Positions
      summary: POST (Add) a Position
      operationId: Positions_Post_By_position_isValidateOnly_clientNamespace
      parameters:
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying the updates to the database.  The default value is FALSE if parameter is not specified.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST (position add) and PATCH (position update) operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Position'
          text/json:
            schema:
              $ref: '#/components/schemas/Position'
          text/html:
            schema:
              $ref: '#/components/schemas/Position'
        required: true
      responses:
        '200':
          description: A Position is created, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
  /{clientNamespace}/V1/Positions/{XrefCode}:
    get:
      tags:
        - Positions
      summary: Get Position details
      operationId: Positions_Get_By_XrefCode_contextDate_expand_clientNamespace
      parameters:
        - name: XrefCode
          in: path
          description: The unique identifier (external reference code) of the Position. The value provided must be the exact match for a Position; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: contextDate
          in: query
          description: 'The Context Date value is an “as-of” date used to determine which Position data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2019-01-01T12:34:56'
          schema:
            type: string
            format: date-time
        - name: expand
          in: query
          description: This parameter accepts a comma-separated list of top-level entities that contain the data elements needed for downstream processing.  When this parameter is not used, only data elements from the position master record will be included.  For more information, please refer to the Introduction to Dayforce Web Services document.
          schema:
            type: string
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: The Position with the requested XRefCode.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Position'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Position'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Position'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Positions/{xRefCode}:
    patch:
      tags:
        - Positions
      summary: PATCH (Update) a Position
      operationId: Positions_Patch_By_position_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the position. The value provided must be the exact match for a position; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying the updates to the database.  The default value is FALSE if parameter is not specified.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST (position add) and PATCH (position update) operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Position'
          text/json:
            schema:
              $ref: '#/components/schemas/Position'
          text/html:
            schema:
              $ref: '#/components/schemas/Position'
        required: true
      responses:
        '200':
          description: A Position is updated, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
  /{clientNamespace}/V1/Employees/{xRefCode}/GLSplits:
    get:
      tags:
        - PRGLSplitSet
      summary: GET GLSplit Details
      operationId: PRGLSplitSet_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: contextDate
          in: query
          description: 'The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: contextDateRangeFrom
          in: query
          description: 'The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: contextDateRangeTo
          in: query
          description: 'The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: The GLSplit with the requested XRefCode.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_PRGLSplitSet'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_PRGLSplitSet'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_PRGLSplitSet'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Projects:
    get:
      tags:
        - Projects
      summary: Get a list of client projects meeting the search criteria
      operationId: Projects_GetProjects_By_shortName_longName_pageSize_projectClientXRefCode_projectTypeXRefCode_projectPhaseXRefCode_productGroupXRefCode_productModuleXRefCode_creationOrgUnitXRefCode_lastModifedStartDate_lastModifedEndDate_filterStartDateFrom_filterStartDateTo_filterDueDateFrom_filterDueDateTo_filterCompletedDateFrom_filterCompletedDateTo_certifiedPayrollProjectNumber_parentProjectXRefCode_isDeleted_ledgerCode_clockTransferCode_accountNum_iFRSClassification_filterProjectPriorityFrom_filterProjectPriorityTo_filterBudgetHoursFrom_filterBudgetHoursTo_filterBudgetAmountFrom_filterBudgetAmountTo_filterPctCompleteFrom_filterPctCompleteTo_clientNamespace
      parameters:
        - name: shortName
          in: query
          description: Project Name
          schema:
            type: string
        - name: longName
          in: query
          description: Project Description
          schema:
            type: string
        - name: pageSize
          in: query
          description: The number of records returned per page in the paginated response
          schema:
            type: integer
            format: int32
        - name: projectClientXRefCode
          in: query
          description: This field identifies a unique Project Client
          schema:
            type: string
        - name: projectTypeXRefCode
          in: query
          description: This field identifies a unique Project Type
          schema:
            type: string
        - name: projectPhaseXRefCode
          in: query
          description: This field identifies a unique Project Phase
          schema:
            type: string
        - name: productGroupXRefCode
          in: query
          description: This field identifies a unique Product Group
          schema:
            type: string
        - name: productModuleXRefCode
          in: query
          description: This field identifies a unique Product Module
          schema:
            type: string
        - name: creationOrgUnitXRefCode
          in: query
          description: Use to search for projects based on Organizational units' xrefcode
          schema:
            type: string
        - name: lastModifedStartDate
          in: query
          description: The Start date used when searching for projects with updates in a specified timeframe
          schema:
            type: string
            format: date-time
        - name: lastModifedEndDate
          in: query
          description: The End date used when searching for projects with updates in a specified timeframe
          schema:
            type: string
            format: date-time
        - name: filterStartDateFrom
          in: query
          description: Use to search for projects with Start date values greater than or equal to the specified value
          schema:
            type: string
            format: date-time
        - name: filterStartDateTo
          in: query
          description: Use to search for projects with Start date values less than or equal to the specified value
          schema:
            type: string
            format: date-time
        - name: filterDueDateFrom
          in: query
          description: Use to search for projects with Due Date  values greater than or equal to the specified value
          schema:
            type: string
            format: date-time
        - name: filterDueDateTo
          in: query
          description: Use to search for projects with Due Date  values less than or equal to the specified value
          schema:
            type: string
            format: date-time
        - name: filterCompletedDateFrom
          in: query
          description: Use to search for projects with Completed Date values greater than or equal to the specified value
          schema:
            type: string
            format: date-time
        - name: filterCompletedDateTo
          in: query
          description: Use to search for Projects with Completed Date values less than or equal to the specified value
          schema:
            type: string
            format: date-time
        - name: certifiedPayrollProjectNumber
          in: query
          description: Use to search for projects with certifiedPayrollProjectNumber
          schema:
            type: integer
            format: int32
        - name: parentProjectXRefCode
          in: query
          description: Use to search for projects with immediate Parent Project
          schema:
            type: string
        - name: isDeleted
          in: query
          description: This filters the projects based on those are deleted or not
          schema:
            type: boolean
        - name: ledgerCode
          in: query
          schema:
            type: string
        - name: clockTransferCode
          in: query
          description: Use to search for Projects with Clock Code
          schema:
            type: string
        - name: accountNum
          in: query
          schema:
            type: string
        - name: iFRSClassification
          in: query
          schema:
            type: boolean
        - name: filterProjectPriorityFrom
          in: query
          description: Use to search for projects with Project Priority value greater than or equal to the specified value. When a value is provided for this parameter filterProjectPriorityTo value must also be provided.
          schema:
            type: integer
            format: int32
        - name: filterProjectPriorityTo
          in: query
          description: Use to search for Projects  with Project Priority values less than or equal to the specified value. When a value is provided for this parameter filterProjectPriorityFrom value must also be provided.
          schema:
            type: integer
            format: int32
        - name: filterBudgetHoursFrom
          in: query
          description: Use to search for projects with Budget Hours value greater than or equal to the specified value. When a value is provided for this parameter filterBudgetHoursTo value must also be provided.
          schema:
            type: number
            format: double
        - name: filterBudgetHoursTo
          in: query
          description: Use to search for Projects  with Budget Hours values less than or equal to the specified value. When a value is provided for this parameter filterBudgetHoursFrom value must also be provided.
          schema:
            type: number
            format: double
        - name: filterBudgetAmountFrom
          in: query
          description: Use to search for projects with Budget Amount value greater than or equal to the specified value. When a value is provided for this parameter filterBudgetAmountTo value must also be provided.
          schema:
            type: number
            format: double
        - name: filterBudgetAmountTo
          in: query
          description: Use to search for Projects  with Budget Amount values less than or equal to the specified value. When a value is provided for this parameter filterBudgetAmountFrom value must also be provided.
          schema:
            type: number
            format: double
        - name: filterPctCompleteFrom
          in: query
          description: Use to search for projects with Percent Complete value greater than or equal to the specified value. When a value is provided for this parameter filterPctCompleteTo value must also be provided.
          schema:
            type: number
            format: double
        - name: filterPctCompleteTo
          in: query
          description: Use to search for Projects  with Percent Complete values less than or equal to the specified value. When a value is provided for this parameter filterPctCompleteFrom value must also be provided.
          schema:
            type: number
            format: double
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: A collection of client project data meeting the search criteria.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayload_IEnumerable_BaseProject'
            text/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayload_IEnumerable_BaseProject'
            text/html:
              schema:
                $ref: '#/components/schemas/PaginatedPayload_IEnumerable_BaseProject'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
    post:
      tags:
        - Projects
      summary: POST (Insert) new Projects data into Dayforce
      operationId: Projects_Post_By_projectData_isValidateOnly_clientNamespace
      parameters:
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectForSubmit'
          text/json:
            schema:
              $ref: '#/components/schemas/ProjectForSubmit'
          text/html:
            schema:
              $ref: '#/components/schemas/ProjectForSubmit'
        required: true
      responses:
        '200':
          description: New Projects data is inserted into Dayforce
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectsPostResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ProjectsPostResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/ProjectsPostResponse'
        '400':
          description: Request is malformed. Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
    patch:
      tags:
        - Projects
      summary: Patch (Update) a project
      operationId: Projects_Patch_By_projectData_projectXRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: projectXRefCode
          in: query
          description: Project XRefCode
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in PATCH operation.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectForSubmit'
          text/json:
            schema:
              $ref: '#/components/schemas/ProjectForSubmit'
          text/html:
            schema:
              $ref: '#/components/schemas/ProjectForSubmit'
        required: true
      responses:
        '200':
          description: Project data is updated
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed. Correct and resubmit.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '500':
          description: An unexpected server error occurred.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
  /{clientNamespace}/V1/Projects/{xRefCode}:
    get:
      tags:
        - Projects
      summary: Get project details
      operationId: Projects_GetProjectDetails_By_xRefCode_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          required: true
          schema:
            type: string
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: Project details which matches with the XRefCode.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Projects'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Projects'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Projects'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
  /{clientNamespace}/V1/ReportMetadata:
    get:
      tags:
        - Reports
      summary: GET a List of Report Metadata
      operationId: Reports_GetReportMetadataAsync_By_clientNamespace
      parameters:
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: Metadata for all Reports
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_ReportMetadata'
              example:
                Data:
                  - Name: string
                    Description: string
                    XRefCode: string
                    MaxRows: 0
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_ReportMetadata'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_ReportMetadata'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
  /{clientNamespace}/V1/ReportMetadata/{xRefCode}:
    get:
      tags:
        - Reports
      summary: GET Report Metadata for the given XRefCode
      operationId: Reports_GetReportMetadataAsync_By_xRefCode_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the report to be retrieved.  The value provided must be the exact match for an report; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: The Metadata for the Report matching the requested XRefCode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_ReportMetadata'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_ReportMetadata'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_ReportMetadata'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
  /{clientNamespace}/V1/Reports/{xRefCode}:
    get:
      tags:
        - Reports
      summary: GET Report
      operationId: Reports_GetReportAsync_By_xRefCode_pageSize_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the report to be retrieved.  The value provided must be the exact match for an report; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: pageSize
          in: query
          description: The number of records returned per page in the paginated response
          schema:
            type: integer
            format: int32
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
        - name: reportParameters
          in: query
          description: A list of key value pairs for those reports which take as input user supplied parameter values.
          style: form
          schema:
            type: object
            additionalProperties:
              type: string
            example: "\r\n{\r\n  \"exampleParameterGuid1\": \"string\",\r\n  \"exampleParameterGuid2\": \"string\",\r\n  \"exampleParameterGuid3\": \"string\"\r\n}"
      responses:
        '200':
          description: report that match the given request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayload_Report'
            text/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayload_Report'
            text/html:
              schema:
                $ref: '#/components/schemas/PaginatedPayload_Report'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
  /{clientNamespace}/V1/Employees/{EmployeeXRefCode}/UnfilledShiftBids:
    get:
      tags:
        - ShiftBidding
      summary: Get List of Unfilled Shift Bids for Employee
      operationId: ShiftBidding_Get_By_OrgUnitXRefCode_EmployeeXRefCode_ScheduleStartDate_ScheduleEndDate_clientNamespace
      parameters:
        - name: OrgUnitXRefCode
          in: query
          description: The unique identifier (external reference code) of the organization to be retrieved. The value provided must be the exact match for an organization
          required: true
          schema:
            type: string
        - name: EmployeeXRefCode
          in: path
          description: The unique identifier (external reference code) of the employee to be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: ScheduleStartDate
          in: query
          description: Date to represent the start of the schedule period for which Shift Bids should be retrieved
          required: true
          schema:
            type: string
            format: date-time
        - name: ScheduleEndDate
          in: query
          description: Date to represent the end of the schedule period for which Shift Bids should be retrieved
          required: true
          schema:
            type: string
            format: date-time
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: A Collection of Open Shift Bids.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeSchedule'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeSchedule'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeSchedule'
        '400':
          description: The server cannot process your request due to malformed syntax or invalid parameters. Please check your input and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
    post:
      tags:
        - ShiftBidding
      summary: POST (Create) Employee Shift Bids. Employee Request or Revoke Shift Bid Request.
      operationId: ShiftBidding_Post_By_OrgUnitXRefCode_EmployeeXRefCode_employeeShiftBidDTO_isValidateOnly_clientNamespace
      parameters:
        - name: OrgUnitXRefCode
          in: query
          description: The unique identifier (external reference code) of the organization to be retrieved. The value provided must be the exact match for an organization
          required: true
          schema:
            type: string
        - name: EmployeeXRefCode
          in: path
          description: The unique identifier (external reference code) of the employee to be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST operation validates the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeShiftBidDTO'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeShiftBidDTO'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeShiftBidDTO'
        required: true
      responses:
        '200':
          description: Specifies an employee bid request/revocation was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_ProcessResult'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_ProcessResult'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_ProcessResult'
        '400':
          description: The server cannot process your request due to malformed syntax or invalid parameters. Please check your input and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
  /{clientNamespace}/V1/Organization/{OrgUnitXRefCode}/UnfilledShiftBids:
    get:
      tags:
        - ShiftBidding
      summary: Get List of Shift Bids
      operationId: ShiftBidding_Get_By_OrgUnitXRefCode_ScheduleStartDate_ScheduleEndDate_ActiveBids_clientNamespace
      parameters:
        - name: OrgUnitXRefCode
          in: path
          description: The unique identifier (external reference code) of the organization to be retrieved. The value provided must be the exact match for an organization
          required: true
          schema:
            type: string
        - name: ScheduleStartDate
          in: query
          description: Date to represent the start of the schedule period for which Shift Bids should be retrieved
          required: true
          schema:
            type: string
            format: date-time
        - name: ScheduleEndDate
          in: query
          description: Date to represent the end of the schedule period for which Shift Bids should be retrieved
          required: true
          schema:
            type: string
            format: date-time
        - name: ActiveBids
          in: query
          description: Specifies whether to return bids with or without active employee bid requests. When no value is supplied, all shift bids will be returned.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: A Collection of Shift Bids
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_ManagerShiftBid'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_ManagerShiftBid'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_ManagerShiftBid'
        '400':
          description: The server cannot process your request due to malformed syntax or invalid parameters. Please check your input and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
  /{clientNamespace}/V1/Organization/{OrgUnitXRefCode}/UnfilledShiftBid:
    post:
      tags:
        - ShiftBidding
      summary: "Manager assignment of shift to an employee who has bid for a specific group schedule.\r\nNotifies awarded bidder.\r\nNotifies rejected bidder."
      operationId: ShiftBidding_Post_By_OrgUnitXRefCode_body_isValidateOnly_violationLevel_clientNamespace
      parameters:
        - name: OrgUnitXRefCode
          in: path
          description: The unique identifier (external reference code) of the organization to be retrieved. The value provided must be the exact match for an organization
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          schema:
            type: boolean
        - name: violationLevel
          in: query
          schema:
            enum:
              - 0
              - 1
              - 2
              - 3
              - 4
            type: integer
            format: int32
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ManagerAssignShiftBidDTO'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ManagerAssignShiftBidDTO'
          text/html:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ManagerAssignShiftBidDTO'
        required: true
      responses:
        '200':
          description: Assigns shift bid to bidding employee
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeSchedule'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeSchedule'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeSchedule'
        '400':
          description: The server cannot process your request due to malformed syntax or invalid parameters. Please check your input and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
  /{clientNamespace}/V1/Skills:
    get:
      tags:
        - Skill
      summary: GET the list of all skills
      operationId: Skill_Get_By_pageSize_xRefCode_clientNamespace
      parameters:
        - name: pageSize
          in: query
          description: The page size for the pagination (Default is 1000)
          schema:
            type: integer
            format: int32
        - name: xRefCode
          in: query
          description: The xrefcode filter for the skill
          schema:
            type: string
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: A collection of skills
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayload_IEnumerable_Skill'
            text/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayload_IEnumerable_Skill'
            text/html:
              schema:
                $ref: '#/components/schemas/PaginatedPayload_IEnumerable_Skill'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
        - Skill
      summary: POST one skill
      operationId: Skill_Post_By_skill_isValidateOnly_clientNamespace
      parameters:
        - name: isValidateOnly
          in: query
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The skill payload used for skill creation
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Skill'
          text/json:
            schema:
              $ref: '#/components/schemas/Skill'
          text/html:
            schema:
              $ref: '#/components/schemas/Skill'
        required: true
      responses:
        '200':
          description: The skill created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_Skill'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_Skill'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_Skill'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
        - Skill
      summary: PATCH one skill
      operationId: Skill_Patch_By_skill_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: query
          description: The xRefCode of the skill to be updated
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The skill payload used for skill modification
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Skill'
          text/json:
            schema:
              $ref: '#/components/schemas/Skill'
          text/html:
            schema:
              $ref: '#/components/schemas/Skill'
        required: true
      responses:
        '200':
          description: The skill updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_Skill'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_Skill'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_Skill'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/TimeAwayFromWork:
    get:
      tags:
        - Employees
      summary: GET List of Employee Time Away From Work
      operationId: TimeOff_Get_By_xRefCode_filterTAFWStartDate_filterTAFWEndDate_status_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee to be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: filterTAFWStartDate
          in: query
          description: 'Inclusive period start date to determine which employee time away from work data to retrieve. Format: YYYY-MM-DD'
          required: true
          schema:
            type: string
            format: date-time
        - name: filterTAFWEndDate
          in: query
          description: 'Inclusive period end date to determine which employee time away from work data to retrieve. Format: YYYY-MM-DD'
          required: true
          schema:
            type: string
            format: date-time
        - name: status
          in: query
          description: 'A case-sensitive field containing status for time away from work values. Examples: [APPROVED,PENDING,CANCELED,DENIED,CANCELPENDING]'
          required: true
          schema:
            type: string
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: A collection of employee time away from work meeting the search criteria.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeTimeAwayFromWork'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeTimeAwayFromWork'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeTimeAwayFromWork'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
  /{clientNamespace}/V1/TimeOff:
    post:
      tags:
        - TimeOff
      summary: POST (Create) Employee Time Away From Work
      operationId: TimeOff_Post_By_timeOff_isValidateOnly_clientNamespace
      parameters:
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST operation.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeTimeAwayFromWorkForSubmit'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeTimeAwayFromWorkForSubmit'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeTimeAwayFromWorkForSubmit'
        required: true
      responses:
        '200':
          description: An Employee Time Away From Work is created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_EmployeeTimeAwayFromWorkForSubmit'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_EmployeeTimeAwayFromWorkForSubmit'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_EmployeeTimeAwayFromWorkForSubmit'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
  /{clientNamespace}/V1/TimeOff/{xRefCode}:
    patch:
      tags:
        - TimeOff
      summary: PATCH (Update) Employee Time Away From Work
      operationId: TimeOff_Patch_By_timeOff_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the time away from work to be retrieved. The value provided must be the exact match for a time away from work; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST operation.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeTimeAwayFromWorkForSubmit'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeTimeAwayFromWorkForSubmit'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeTimeAwayFromWorkForSubmit'
        required: true
      responses:
        '200':
          description: An Employee Time Away From Work is updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeTimeAwayFromWorkForSubmit'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeTimeAwayFromWorkForSubmit'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeTimeAwayFromWorkForSubmit'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
              example:
                ProcessResults:
                  - Code: string
                    Context: string
                    Level: string
                    Message: string
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_Object'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_Object'
  /{clientNamespace}/V1/TrainingPrograms:
    get:
      tags:
        - TrainingProgram
      summary: Get a list of or one Training Program detail
      operationId: TrainingProgram_Get_By_pageSize_xRefCode_clientNamespace
      parameters:
        - name: pageSize
          in: query
          description: The page size for the pagination (Default is 1000)
          schema:
            type: integer
            format: int32
        - name: xRefCode
          in: query
          description: The xrefcode filter for the Training Program
          schema:
            type: string
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: A collection of Training Program
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayload_IEnumerable_TrainingProgram'
            text/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayload_IEnumerable_TrainingProgram'
            text/html:
              schema:
                $ref: '#/components/schemas/PaginatedPayload_IEnumerable_TrainingProgram'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
        - TrainingProgram
      summary: POST one training program
      operationId: TrainingProgram_Post_By_trainingProgram_isValidateOnly_clientNamespace
      parameters:
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST operation validate the request without applying the changes to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The training program payload that will be used for training program creation
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrainingProgram'
          text/json:
            schema:
              $ref: '#/components/schemas/TrainingProgram'
          text/html:
            schema:
              $ref: '#/components/schemas/TrainingProgram'
        required: true
      responses:
        '200':
          description: A training program is created, no response body
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
        - TrainingProgram
      summary: PATCH one training program
      operationId: TrainingProgram_Patch_By_trainingProgram_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: query
          description: The course xRefCode to be updated
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, PATCH operation validate the request without applying the changes to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The training program payload that will be used for training program creation
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrainingProgram'
          text/json:
            schema:
              $ref: '#/components/schemas/TrainingProgram'
          text/html:
            schema:
              $ref: '#/components/schemas/TrainingProgram'
        required: true
      responses:
        '200':
          description: A training program is updated, no response body
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/TransmissionService:
    post:
      tags:
        - TransmissionService
      operationId: TransmissionService_Post_By_clientNamespace
      parameters:
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            text/html:
              schema:
                type: object
  /{clientNamespace}/V1/Employees/{xRefCode}/UserPayAdjustCodeGroups:
    get:
      tags:
        - UserPayAdjustCodeGroup
      summary: GET UserPayAdjCodeGroup Details
      operationId: UserPayAdjustCodeGroup_Get_By_xRefCode_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: The UserPayAdjCodeGroup with the requested XRefCode.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_UserPayAdjustCodeGroup'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_UserPayAdjustCodeGroup'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_UserPayAdjustCodeGroup'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
        - UserPayAdjustCodeGroup
      summary: POST a UserPayAdjCodeGroup
      operationId: UserPayAdjustCodeGroup_Post_By_userPayAdjCodeGroup_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPayAdjustCodeGroup'
          text/json:
            schema:
              $ref: '#/components/schemas/UserPayAdjustCodeGroup'
          text/html:
            schema:
              $ref: '#/components/schemas/UserPayAdjustCodeGroup'
        required: true
      responses:
        '200':
          description: The UserPayAdjCodeGroup is created, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
        - UserPayAdjustCodeGroup
      summary: PATCH a UserPayAdjCodeGroup
      operationId: UserPayAdjustCodeGroup_Patch_By_userPayAdjCodeGroup_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPayAdjustCodeGroup'
          text/json:
            schema:
              $ref: '#/components/schemas/UserPayAdjustCodeGroup'
          text/html:
            schema:
              $ref: '#/components/schemas/UserPayAdjustCodeGroup'
        required: true
      responses:
        '200':
          description: The UserPayAdjCodeGroup is updated, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
  /{clientNamespace}/V1/Employees/{xRefCode}/WorkContracts:
    get:
      tags:
        - WorkContract
      summary: GET EmployeeWorkContract Details
      operationId: WorkContract_Get_By_xRefCode_contextDate_contextDateRangeFrom_contextDateRangeTo_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: contextDate
          in: query
          description: 'The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: contextDateRangeFrom
          in: query
          description: 'The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: contextDateRangeTo
          in: query
          description: 'The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56'
          schema:
            type: string
            format: date-time
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      responses:
        '200':
          description: The EmployeeWorkContract with the requested XRefCode.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeWorkContract'
            text/json:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeWorkContract'
            text/html:
              schema:
                $ref: '#/components/schemas/Payload_IEnumerable_EmployeeWorkContract'
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    post:
      tags:
        - WorkContract
      summary: POST a EmployeeWorkContract
      operationId: WorkContract_Post_By_employeeWorkContract_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeWorkContract'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeWorkContract'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeWorkContract'
        required: true
      responses:
        '200':
          description: An EmployeeWorkContract is created, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
    patch:
      tags:
        - WorkContract
      summary: PATCH a EmployeeWorkContract
      operationId: WorkContract_Patch_By_employeeWorkContract_xRefCode_isValidateOnly_clientNamespace
      parameters:
        - name: xRefCode
          in: path
          description: The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.
          required: true
          schema:
            type: string
        - name: isValidateOnly
          in: query
          description: When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.
          schema:
            type: boolean
        - name: clientNamespace
          in: path
          description: Uniquely identifies the client's Dayforce instance. Is needed to login.
          required: true
          schema:
            type: string
            default: ddn
      requestBody:
        description: The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer's Guide.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeWorkContract'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeWorkContract'
          text/html:
            schema:
              $ref: '#/components/schemas/EmployeeWorkContract'
        required: true
      responses:
        '200':
          description: The EmployeeWorkContract is updated, no response body.
          content:
            application/json: {}
            text/json: {}
            text/html: {}
        '400':
          description: Request is malformed.  Correct and resubmit.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
        '500':
          description: An unexpected server error occurred.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResult'
components:
  schemas:
    EmployeeExportParams:
      type: object
      properties:
        PayGroupXRefCode:
          type: string
        EmployeeXRefCode:
          type: string
        EmployeeNumber:
          type: string
        Expand:
          type: string
        PageSize:
          type: integer
          format: int32
        ContextDate:
          type: string
          format: date-time
        ContextDateRangeFrom:
          type: string
          format: date-time
        ContextDateRangeTo:
          type: string
          format: date-time
        ContextDateOption:
          type: string
        DeltaOption:
          type: string
        DeltaDate:
          type: string
          format: date-time
        AmfEntity:
          type: string
        AmfLevel:
          type: string
        AmfLevelValue:
          type: string
        ExportAllEmployeeDetailOnDelta:
          type: boolean
        ExcludeTerminatedEmployeesOlderThanXDays:
          type: integer
          format: int32
    Payload_String:
      type: object
      properties:
        Data:
          type: string
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    ProcessResult:
      type: object
      properties:
        Code:
          type: string
        Context:
          type: string
        Level:
          type: string
        Message:
          type: string
    Payload_Object:
      type: object
      properties:
        Data:
          type: object
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    PaginatedPayload_String:
      type: object
      properties:
        Data:
          type: string
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
        Paging:
          $ref: '#/components/schemas/Paging'
    Paging:
      type: object
      properties:
        Next:
          type: string
    PaginatedPayload_IEnumerable_Employee:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/Employee'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
        Paging:
          $ref: '#/components/schemas/Paging'
    Employee:
      type: object
      properties:
        AvatarUri:
          type: string
        BadgeNumber:
          type: string
        BioExempt:
          type: boolean
        BirthDate:
          type: string
          format: date-time
        BirthCountry:
          type: string
        BirthState:
          type: string
        BirthCity:
          type: string
        ChecksumTimestamp:
          type: string
          format: date-time
        ClockSupervisor:
          type: boolean
        COBRANotificationSentDate:
          type: string
          format: date-time
        COBRANotificationStatus:
          type: integer
          format: int32
        Culture:
          $ref: '#/components/schemas/Culture'
        DateOfDeath:
          type: string
          format: date-time
        EligibleForRehire:
          type: string
        EmployeePin:
          type: string
        EntitlementOverrideDate:
          type: string
          format: date-time
        EstimatedReturnDate:
          type: string
          format: date-time
        ExportDate:
          type: string
          format: date-time
        FederatedId:
          type: string
        Gender:
          type: string
        HireDate:
          type: string
          format: date-time
        HomePhone:
          type: string
        IsAboriginal:
          type: string
        IsVisibleMinority:
          type: string
        EligibleForOnDemandPay:
          type: boolean
        EligibleForDFWalletPayCard:
          type: boolean
        EmployeeLatestUpdatedTimestamp:
          type: string
          format: date-time
        LastPayrollNewHireExportDate:
          type: string
          format: date-time
        Nationality:
          type: string
        NewHireApprovalDate:
          type: string
          format: date-time
        NewHireApproved:
          type: boolean
        NewHireApprovedBy:
          type: string
        OriginalHireDate:
          type: string
          format: date-time
        PhotoExempt:
          type: boolean
        PPACAOverrideDate:
          type: string
          format: date-time
        RegisteredDisabled:
          type: string
        RequiresExitInterview:
          type: boolean
        SeniorityDate:
          type: string
          format: date-time
        SocialSecurityNumber:
          type: string
        SSNCountryCode:
          type: string
        SSNExpiryDate:
          type: string
          format: date-time
        StartDate:
          type: string
          format: date-time
        TaxExempt:
          type: boolean
        TaxpayerId:
          type: string
        TerminationDate:
          type: string
          format: date-time
        VeteranSeparationDate:
          type: string
          format: date-time
        FirstTimeAccessEmailSentCount:
          type: integer
          format: int32
        FirstTimeAccessVerificationAttempts:
          type: integer
          format: int32
        SendFirstTimeAccessEmail:
          type: boolean
        EmployeeBadge:
          $ref: '#/components/schemas/EmployeeBadge'
        Badges:
          $ref: '#/components/schemas/EmployeeBadgeCollection'
        PreStartDate:
          type: string
          format: date-time
        PayrollKey:
          type: string
        LoginId:
          type: string
        HomeOrganization:
          $ref: '#/components/schemas/Location'
        EmployeeNumber:
          type: string
        EmploymentStatuses:
          $ref: '#/components/schemas/EmployeeEmploymentStatusCollection'
        WorkAssignments:
          $ref: '#/components/schemas/EmployeeWorkAssignmentCollection'
        Contacts:
          $ref: '#/components/schemas/PersonContactCollection'
        Addresses:
          $ref: '#/components/schemas/PersonAddressCollection'
        Roles:
          $ref: '#/components/schemas/EmployeeRoleCollection'
        EmployeeManagers:
          $ref: '#/components/schemas/EmployeeManagerCollection'
        EmployeeWorkAssignmentManagers:
          $ref: '#/components/schemas/EmployeeWorkAssignmentManagerCollection'
        CompensationSummary:
          $ref: '#/components/schemas/EmployeeCompensationCollection'
        SSOAccounts:
          $ref: '#/components/schemas/AppUserSSOCollection'
        MaritalStatuses:
          $ref: '#/components/schemas/EmployeeMaritalStatusCollection'
        Locations:
          $ref: '#/components/schemas/EmployeeLocationCollection'
        BioSensitivityLevel:
          $ref: '#/components/schemas/BioSensitivityLevel'
        CitizenshipType:
          $ref: '#/components/schemas/CitizenshipType'
        SchoolYear:
          $ref: '#/components/schemas/SchoolYear'
        HealthWellnessDetails:
          $ref: '#/components/schemas/EmployeeHealthWellnessCollection'
        Courses:
          $ref: '#/components/schemas/EmployeeCourseCollection'
        VolunteerLists:
          $ref: '#/components/schemas/EmployeeVolunteerListCollection'
        HRIncidents:
          $ref: '#/components/schemas/EmployeeHRIncidentCollection'
        Skills:
          $ref: '#/components/schemas/EmployeeSkillCollection'
        TrainingPrograms:
          $ref: '#/components/schemas/EmployeeTrainingProgramCollection'
        UnionMemberships:
          $ref: '#/components/schemas/EmployeeUnionCollection'
        EmploymentTypes:
          $ref: '#/components/schemas/EmployeeEmploymentTypeCollection'
        HighlyCompensatedEmployees:
          $ref: '#/components/schemas/HighlyCompensatedEmployeeCollection'
        PayGradeRates:
          $ref: '#/components/schemas/EmployeePayGradeRateCollection'
        DirectDeposits:
          $ref: '#/components/schemas/EmployeeDirectDepositCollection'
        IRLTaxPAYEExclusionInfo:
          $ref: '#/components/schemas/EmployeeIRLTaxPAYEExclusionCollection'
        IRLTaxPRSIInfo:
          $ref: '#/components/schemas/EmployeeIRLTaxPRSICollection'
        IRLTaxRPNInfo:
          $ref: '#/components/schemas/EmployeeIRLTaxRPNCollection'
        IRLTaxEWSSInfo:
          $ref: '#/components/schemas/EmployeeIRLTaxEWSSCollection'
        CANFederalTaxes:
          $ref: '#/components/schemas/EmployeeCANFederalTaxCollection'
        CANStateTaxes:
          $ref: '#/components/schemas/EmployeeCANStateTaxCollection'
        USFederalTaxes:
          $ref: '#/components/schemas/EmployeeUSFederalTaxCollection'
        MUSTaxes:
          $ref: '#/components/schemas/EmployeeMUSTaxDetailsCollection'
        AUSFederalTaxes:
          $ref: '#/components/schemas/EmployeeAUSFederalTaxCollection'
        EmployeePayrollTaxes:
          $ref: '#/components/schemas/EmployeePayrollTaxCollection'
        EmployeePayrollTaxParameters:
          $ref: '#/components/schemas/EmployeePayrollTaxParameterCollection'
        USStateTaxes:
          $ref: '#/components/schemas/EmployeeUSStateTaxCollection'
        EmergencyContacts:
          $ref: '#/components/schemas/EmergencyContactCollection'
        Ethnicities:
          $ref: '#/components/schemas/EmployeeEthnicityCollection'
        Disabilities:
          $ref: '#/components/schemas/EmployeeDisabilityCollection'
        VeteranStatuses:
          $ref: '#/components/schemas/EmployeeVeteransStatusCollection'
        GLSplits:
          $ref: '#/components/schemas/PRGLSplitSetCollection'
        EmployeeProperties:
          $ref: '#/components/schemas/EmployeePropertyValueCollection'
        GlobalProperties:
          $ref: '#/components/schemas/EmployeeGlobalPropertyValueCollection'
        LaborDefaults:
          $ref: '#/components/schemas/EmployeeDefaultLaborCollection'
        DocumentManagementSecurityGroups:
          $ref: '#/components/schemas/DocMgmtSecurityGroupUserMapCollection'
        ClockDeviceGroups:
          $ref: '#/components/schemas/EmployeeClockDeviceGroupCollection'
        EmployeePayAdjustCodeGroups:
          $ref: '#/components/schemas/EmployeePayAdjCodeGroupListCollection'
        UserPayAdjustCodeGroups:
          $ref: '#/components/schemas/UserPayAdjCodeGroupCollection'
        WorkContracts:
          $ref: '#/components/schemas/EmployeeWorkContractCollection'
        PerformanceRatings:
          $ref: '#/components/schemas/EmployeePerformanceRatingCollection'
        EIRates:
          $ref: '#/components/schemas/EmployeeEIRateCollection'
        USTaxStatuses:
          $ref: '#/components/schemas/EmployeeUSTaxStatusCollection'
        CANTaxStatuses:
          $ref: '#/components/schemas/EmployeeCANTaxStatusCollection'
        OrgUnitInfos:
          $ref: '#/components/schemas/EmployeeOrgUnitInfoCollection'
        ManagedEmployees:
          $ref: '#/components/schemas/EmployeeWorkAssignmentManagerCollection'
        ConfidentialIdentification:
          $ref: '#/components/schemas/EmployeeConfidentialIdentificationCollection'
        EmployeeCertifications:
          $ref: '#/components/schemas/LMSEmployeeCertificationCollection'
        EmploymentAgreements:
          $ref: '#/components/schemas/EmployeeEmploymentAgreementCollection'
        HRPolicies:
          $ref: '#/components/schemas/EmployeeHRPolicyCollection'
        AuthorizationAssignments:
          $ref: '#/components/schemas/UserEmployeeAuthorityTypeAssignmentCollection'
        GenderIdentity:
          $ref: '#/components/schemas/GenderIdentity'
        EmployeeAssignedSexAndGenderIdentities:
          $ref: '#/components/schemas/EmployeeAssignedSexAndGenderIdentityCollection'
        OnboardingPolicies:
          $ref: '#/components/schemas/EmployeeOnboardingPolicyCollection'
        PayPeriodInformation:
          $ref: '#/components/schemas/PayPeriodInformationCollection'
        EarningElections:
          $ref: '#/components/schemas/EmployeeEarningsCollection'
        DeductionElections:
          $ref: '#/components/schemas/EmployeeDeductionsCollection'
        LastActiveManagers:
          $ref: '#/components/schemas/EmployeeManagerCollection'
        DependentsBeneficiaries:
          $ref: '#/components/schemas/EmployeeDependentsBeneficiariesCollection'
        UKTaxDetails:
          $ref: '#/components/schemas/EmployeeUKTaxDetailsCollection'
        UKStudentLoan:
          $ref: '#/components/schemas/EmployeeUKStudentLoanCollection'
        UKPostgraduateLoan:
          $ref: '#/components/schemas/EmployeeUKPostgraduateLoanCollection'
        EmployeeUKIrregularPaymentDetails:
          $ref: '#/components/schemas/EmployeeUKIrregularPaymentDetailsCollection'
        ContinuousEmploymentStartDate:
          type: string
          format: date-time
        LSLEligibilityDate:
          type: string
          format: date-time
        UKNIDetails:
          $ref: '#/components/schemas/EmployeeUKNIDetailsCollection'
        UserAccount:
          $ref: '#/components/schemas/AppUser'
        LastNamePrefix:
          $ref: '#/components/schemas/LastNamePrefix'
        LastNamePrefixAtBirth:
          $ref: '#/components/schemas/LastNamePrefix'
        NameAffix:
          $ref: '#/components/schemas/NameAffix'
        NameAffixAtBirth:
          $ref: '#/components/schemas/NameAffix'
        ProfessionalTitle:
          type: string
        AUSSuperannuation:
          $ref: '#/components/schemas/EmployeeAUSSuperannuationCollection'
        AUSSuperannuationRules:
          $ref: '#/components/schemas/EmployeeAUSSuperannuationRulesCollection'
        TerminationNoticeDate:
          type: string
          format: date-time
        RetirementRequestDate:
          type: string
          format: date-time
        EmployeeShortTimeWork:
          $ref: '#/components/schemas/EmployeeShortTimeWorkCollection'
        DEUTaxSocialInsurance:
          $ref: '#/components/schemas/EmployeeDEUTaxSocialInsuranceCollection'
        DEUEmployeeAccidentInsurance:
          $ref: '#/components/schemas/DEUEmployeeAccidentInsuranceCollection'
        DEUEmployeeWageTax:
          $ref: '#/components/schemas/DEUEmployeeWageTaxCollection'
        NZLKiwiSaver:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeNZLKiwiSaver'
        UnknownBirthDate:
          type: boolean
        XRefCode:
          type: string
        NewXRefCode:
          type: string
        CommonName:
          type: string
        DisplayName:
          type: string
        FirstName:
          type: string
        LastName:
          type: string
        Initials:
          type: string
        MaidenName:
          type: string
        MiddleName:
          type: string
        PreferredLastName:
          type: string
        SecondLastName:
          type: string
        Suffix:
          type: string
        Title:
          type: string
        PreviousLastName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    Culture:
      type: object
      properties:
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmployeeBadge:
      type: object
      properties:
        BadgeNumber:
          type: string
        EffectiveStart:
          type: string
          format: date-time
        EffectiveEnd:
          type: string
          format: date-time
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmployeeBadgeCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeBadge'
    Location:
      type: object
      properties:
        PhysicalLocation:
          type: boolean
        BusinessPhone:
          type: string
        ContactBusinessPhone:
          type: string
        ContactCellPhone:
          type: string
        PostalCode:
          type: string
        CountryCode:
          type: string
        OpeningDate:
          type: string
          format: date-time
        ClosingDate:
          type: string
          format: date-time
        ComparableLocation:
          $ref: '#/components/schemas/HRConfigurationEntity'
        Department:
          $ref: '#/components/schemas/Department'
        Zone:
          $ref: '#/components/schemas/Zone'
        StartDayOfWeek:
          type: integer
          format: int32
        GeoCity:
          $ref: '#/components/schemas/City'
        Timezone:
          $ref: '#/components/schemas/TimeZone'
        County:
          type: string
        IsOrgManaged:
          type: boolean
        IsMobileOrg:
          type: boolean
        PublicName:
          type: string
        ClockTransferCode:
          type: string
        ContactEmail:
          type: string
        ContactName:
          type: string
        LedgerCode:
          type: string
        StateCode:
          type: string
        Address:
          type: string
        Address2:
          type: string
        LegalEntity:
          $ref: '#/components/schemas/LegalEntity'
        OrgUnitLegalEntities:
          $ref: '#/components/schemas/OrgUnitLegalEntityCollection'
        OrgUnitParents:
          $ref: '#/components/schemas/OrgUnitParentCollection'
        ChildOrgUnits:
          $ref: '#/components/schemas/ChildLocationCollection'
        OrgUnitLocationTypes:
          $ref: '#/components/schemas/OrgUnitLocationTypeCollection'
        OrgLevel:
          $ref: '#/components/schemas/OrgLevel'
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmployeeEmploymentStatusCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeEmploymentStatus'
    EmployeeWorkAssignmentCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeWorkAssignment'
    PersonContactCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/PersonContact'
    PersonAddressCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/PersonAddress'
    EmployeeRoleCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeRole'
    EmployeeManagerCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeManager'
    EmployeeWorkAssignmentManagerCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeWorkAssignmentManager'
    EmployeeCompensationCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeCompensation'
    AppUserSSOCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeSSOAccount'
    EmployeeMaritalStatusCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeMaritalStatus'
    EmployeeLocationCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeLocation'
    BioSensitivityLevel:
      type: object
      properties:
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    CitizenshipType:
      type: object
      properties:
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    SchoolYear:
      type: object
      properties:
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmployeeHealthWellnessCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeHealthWellness'
    EmployeeCourseCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeCourse'
    EmployeeVolunteerListCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeVolunteerList'
    EmployeeHRIncidentCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeHRIncident'
    EmployeeSkillCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeSkill'
    EmployeeTrainingProgramCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeTrainingProgram'
    EmployeeUnionCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeUnionMembership'
    EmployeeEmploymentTypeCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeEmploymentType'
    HighlyCompensatedEmployeeCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeHighlyCompensatedEmployeeIndicator'
    EmployeePayGradeRateCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeePayGradeRate'
    EmployeeDirectDepositCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeDirectDeposit'
    EmployeeIRLTaxPAYEExclusionCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeIRLTaxPAYEExclusion'
    EmployeeIRLTaxPRSICollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeIRLTaxPRSI'
    EmployeeIRLTaxRPNCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeIRLTaxRPN'
    EmployeeIRLTaxEWSSCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeIRLTaxEWSS'
    EmployeeCANFederalTaxCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeCANFederalTax'
    EmployeeCANStateTaxCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeCANStateTax'
    EmployeeUSFederalTaxCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeUSFederalTax'
    EmployeeMUSTaxDetailsCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeMUSTaxDetails'
    EmployeeAUSFederalTaxCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeAUSFederalTax'
    EmployeePayrollTaxCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeePayrollTax'
    EmployeePayrollTaxParameterCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeePayrollTaxParameter'
    EmployeeUSStateTaxCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeUSStateTax'
    EmergencyContactCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeEmergencyContact'
    EmployeeEthnicityCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeEthnicity'
    EmployeeDisabilityCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeDisability'
    EmployeeVeteransStatusCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeVeteransStatus'
    PRGLSplitSetCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/PRGLSplitSet'
    EmployeePropertyValueCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeePropertyValue'
    EmployeeGlobalPropertyValueCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeGlobalPropertyValue'
    EmployeeDefaultLaborCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeDefaultLabor'
    DocMgmtSecurityGroupUserMapCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeDocumentManagementSecurityGroup'
    EmployeeClockDeviceGroupCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeClockDeviceGroup'
    EmployeePayAdjCodeGroupListCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeePayAdjustCodeGroup'
    UserPayAdjCodeGroupCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/UserPayAdjustCodeGroup'
    EmployeeWorkContractCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeWorkContract'
    EmployeePerformanceRatingCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeePerformanceRating'
    EmployeeEIRateCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeCANEmploymentInsuranceRate'
    EmployeeUSTaxStatusCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeUSTaxStatus'
    EmployeeCANTaxStatusCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeCANTaxStatus'
    EmployeeOrgUnitInfoCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeOrgUnitInformation'
    EmployeeConfidentialIdentificationCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeConfidentialIdentification'
    LMSEmployeeCertificationCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/LMSEmployeeCertification'
    EmployeeEmploymentAgreementCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeEmploymentAgreement'
    EmployeeHRPolicyCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeHRPolicy'
    UserEmployeeAuthorityTypeAssignmentCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/AuthorizationAssignment'
    GenderIdentity:
      type: object
      properties:
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmployeeAssignedSexAndGenderIdentityCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeAssignedSexAndGenderIdentity'
    EmployeeOnboardingPolicyCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeOnboardingPolicy'
    PayPeriodInformationCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/PayPeriodInformation'
    EmployeeEarningsCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeEarning'
    EmployeeDeductionsCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeDeduction'
    EmployeeDependentsBeneficiariesCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeDependentBeneficiary'
    EmployeeUKTaxDetailsCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeUKTaxDetails'
    EmployeeUKStudentLoanCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeUKStudentLoan'
    EmployeeUKPostgraduateLoanCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeUKPostgraduateLoan'
    EmployeeUKIrregularPaymentDetailsCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeUKIrregularPaymentDetails'
    EmployeeUKNIDetailsCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeUKNIDetails'
    AppUser:
      type: object
      properties:
        AllowNativeAuthentication:
          type: boolean
        Display24HourTime:
          type: boolean
        IsApproved:
          type: boolean
        LastModifiedTimestamp:
          type: string
          format: date-time
    LastNamePrefix:
      type: object
      properties:
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    NameAffix:
      type: object
      properties:
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmployeeAUSSuperannuationCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeAUSSuperannuation'
    EmployeeAUSSuperannuationRulesCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeAUSSuperannuationRules'
    EmployeeShortTimeWorkCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeShortTimeWork'
    EmployeeDEUTaxSocialInsuranceCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/DEUTaxSocialInsurance'
    DEUEmployeeAccidentInsuranceCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/DEUEmployeeAccidentInsurance'
    DEUEmployeeWageTaxCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/DEUEmployeeWageTax'
    EmployeeNZLKiwiSaver:
      type: object
    AmfProperty:
      type: object
      properties:
        Id:
          type: integer
          format: int32
        EntityId:
          type: integer
          format: int32
        ParentId:
          type: integer
          format: int32
        EntityState:
          type: string
        StringValue:
          type: string
        BoolValue:
          type: boolean
        NumberValue:
          type: number
          format: double
        DateTimeValue:
          type: string
          format: date-time
    AmfEntity:
      type: object
      properties:
        Id:
          type: integer
          format: int32
        EffectiveStart:
          type: string
          format: date-time
        EffectiveEnd:
          type: string
          format: date-time
    HRConfigurationEntity:
      type: object
      properties:
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
    Department:
      type: object
      properties:
        LedgerCode:
          type: string
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    Zone:
      type: object
      properties:
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    City:
      type: object
      properties:
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    TimeZone:
      type: object
      properties:
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    LegalEntity:
      type: object
      properties:
        Country:
          $ref: '#/components/schemas/Country'
        LegalEntityAddress:
          $ref: '#/components/schemas/Address'
        LegalIdNumber:
          type: string
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    OrgUnitLegalEntityCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/OrgUnitLegalEntity'
    OrgUnitParentCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/OrgUnitParent'
    ChildLocationCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/ChildLocation'
    OrgUnitLocationTypeCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/OrgUnitLocationType'
    OrgLevel:
      type: object
      properties:
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmployeeEmploymentStatus:
      type: object
      properties:
        EmployeeNumber:
          type: string
        EffectiveStart:
          type: string
          format: date-time
        EffectiveEnd:
          type: string
          format: date-time
        EmploymentStatus:
          $ref: '#/components/schemas/EmploymentStatus'
        EmploymentStatusGroup:
          $ref: '#/components/schemas/EmploymentStatusGroup'
        PayType:
          $ref: '#/components/schemas/PayType'
        PayGroup:
          $ref: '#/components/schemas/PayGroup'
        PayTypeGroup:
          $ref: '#/components/schemas/PayTypeGroup'
        PayClass:
          $ref: '#/components/schemas/PayClass'
        PunchPolicy:
          $ref: '#/components/schemas/PunchPolicy'
        PayPolicy:
          $ref: '#/components/schemas/PayPolicy'
        PayHolidayGroup:
          $ref: '#/components/schemas/PayHolidayGroup'
        EmployeeGroup:
          $ref: '#/components/schemas/EmployeeGroup'
        EntitlementPolicy:
          $ref: '#/components/schemas/EntitlementPolicy'
        ShiftRotation:
          $ref: '#/components/schemas/ShiftRotation'
        ShiftRotationDayOffset:
          type: integer
          format: int64
        ShiftRotationStartDate:
          type: string
          format: date-time
        CreateShiftRotationShift:
          type: boolean
        TimeOffPolicy:
          $ref: '#/components/schemas/TimeOffPolicy'
        ShiftTradePolicy:
          $ref: '#/components/schemas/ShiftTradePolicy'
        AttendancePolicy:
          $ref: '#/components/schemas/AttendancePolicy'
        SchedulePolicy:
          $ref: '#/components/schemas/EmployeeSchedulePolicy'
        OvertimeGroup:
          $ref: '#/components/schemas/EmployeeOvertimeGroup'
        PayrollPolicy:
          $ref: '#/components/schemas/PayrollPolicy'
        JobStepPolicy:
          $ref: '#/components/schemas/JobStepPolicy'
        AlternateRate:
          type: number
          format: double
        AverageDailyHours:
          type: number
          format: double
        AverageOvertimeRate:
          type: number
          format: double
        BaseRate:
          type: number
          format: double
        BaseRateManuallySet:
          type: boolean
        BaseSalary:
          type: number
          format: double
        PeriodicSalary:
          type: number
          format: double
        DailyRate:
          type: number
          format: double
        EmploymentStatusReason:
          $ref: '#/components/schemas/EmploymentStatusReason'
        NormalWeeklyHours:
          type: number
          format: double
        DEUHoursChangeReason:
          $ref: '#/components/schemas/DEUHoursChangeReason'
        NormalSemiMonthlyHoursTop:
          type: number
          format: double
        NormalSemiMonthlyHoursBottom:
          type: number
          format: double
        ScheduleChangePolicy:
          $ref: '#/components/schemas/ScheduleChangePolicy'
        AuthorizationPolicy:
          $ref: '#/components/schemas/AuthorizationPolicy'
        WorkContractPremiumPolicy:
          $ref: '#/components/schemas/WorkContractPremiumPolicy'
        LastPayEditDate:
          type: string
          format: date-time
        VacationRate:
          type: number
          format: double
        TargetBonus:
          type: number
          format: double
        OriginalEmploymentStatus:
          $ref: '#/components/schemas/EmploymentStatus'
        OriginalEffectiveStart:
          type: string
          format: date-time
        OriginalEffectiveEnd:
          type: string
          format: date-time
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmployeeWorkAssignment:
      type: object
      properties:
        Position:
          $ref: '#/components/schemas/Position'
        Location:
          $ref: '#/components/schemas/Location'
        EmploymentIndicator:
          $ref: '#/components/schemas/EmploymentIndicator'
        EmploymentStatusReason:
          $ref: '#/components/schemas/EmploymentStatusReason'
        EffectiveStart:
          type: string
          format: date-time
        EffectiveEnd:
          type: string
          format: date-time
        FlatAmount:
          type: number
          format: double
        FTE:
          type: number
          format: double
        IsPAPrimaryWorkSite:
          type: boolean
        IsPrimary:
          type: boolean
        OriginalIsPrimary:
          type: boolean
        OriginalEffectiveStart:
          type: string
          format: date-time
        OriginalEffectiveEnd:
          type: string
          format: date-time
        IsStatutory:
          type: boolean
        IsVirtual:
          type: boolean
        BusinessTitle:
          type: string
        JobSetLevel:
          $ref: '#/components/schemas/JobSetLevel'
        LaborPercentage:
          type: number
          format: double
        LastModifiedTimeStamp:
          type: string
          format: date-time
        MultiJSalaryAllocationPercent:
          type: number
          format: double
        ParticipateInReciprocalTaxCalculation:
          type: boolean
        TelecommuterPercentage:
          type: number
          format: double
        IsConvenienceOfEmployee:
          type: boolean
        EndSecondaryWorkAssignments:
          type: boolean
        PositionTerm:
          $ref: '#/components/schemas/PositionTerm'
        PRBankAccountBranchAddress:
          $ref: '#/components/schemas/BankAccountBranchAddress'
        WorkLocationOverride:
          $ref: '#/components/schemas/WorkLocationOverride'
        Rank:
          type: integer
          format: int64
        JobRate:
          type: number
          format: double
        TipTypeGroup:
          $ref: '#/components/schemas/TipTypeGroup'
        LedgerCode:
          type: string
        PMPositionAssignment:
          $ref: '#/components/schemas/PMPositionAssignment'
        JobClassificationGlobal:
          $ref: '#/components/schemas/JobClassificationGlobal'
    PersonContact:
      type: object
      properties:
        ContactInformationType:
          $ref: '#/components/schemas/ContactInformationType'
        ContactNumber:
          type: string
        Country:
          $ref: '#/components/schemas/Country'
        EffectiveEnd:
          type: string
          format: date-time
        EffectiveStart:
          type: string
          format: date-time
        ElectronicAddress:
          type: string
        Extension:
          type: string
        IsForSystemCommunications:
          type: boolean
        IsPreferredContactMethod:
          type: boolean
        IsUnlistedNumber:
          type: boolean
        FormattedNumber:
          type: string
        IsVerified:
          type: boolean
        IsRejected:
          type: boolean
        ShowRejectedWarning:
          type: boolean
        NumberOfVerificationRequests:
          type: integer
          format: int32
        LastModifiedTimestamp:
          type: string
          format: date-time
    PersonAddress:
      type: object
      properties:
        Address1:
          type: string
        Address2:
          type: string
        Address3:
          type: string
        Address4:
          type: string
        Address5:
          type: string
        Address6:
          type: string
        City:
          type: string
        PostalCode:
          type: string
        Country:
          $ref: '#/components/schemas/Country'
        State:
          $ref: '#/components/schemas/State'
        ContactInformationType:
          $ref: '#/components/schemas/ContactInformationType'
        IsPayrollMailing:
          type: boolean
        DisplayOnTaxForm:
          type: boolean
        DisplayOnEarningStatement:
          type: boolean
        EffectiveStart:
          type: string
          format: date-time
        EffectiveEnd:
          type: string
          format: date-time
        County:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmployeeRole:
      type: object
      properties:
        IsDefault:
          type: boolean
        Role:
          $ref: '#/components/schemas/Role'
        EffectiveStart:
          type: string
          format: date-time
        IsPrestartRole:
          type: boolean
        EffectiveEnd:
          type: string
          format: date-time
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmployeeManager:
      type: object
      properties:
        EffectiveStart:
          type: string
          format: date-time
        EffectiveEnd:
          type: string
          format: date-time
        ManagerXRefCode:
          type: string
        ManagerFirstName:
          type: string
        ManagerMiddleName:
          type: string
        ManagerLastName:
          type: string
        ManagerBadgeNumber:
          type: string
        DerivationMethod:
          type: integer
          format: int32
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmployeeWorkAssignmentManager:
      type: object
      properties:
        EffectiveStart:
          type: string
          format: date-time
        EffectiveEnd:
          type: string
          format: date-time
        TerminationDate:
          type: string
          format: date-time
        EmploymentStatusGroupXRefCode:
          type: string
        ManagerXRefCode:
          type: string
        ManagerName:
          type: string
        ActiveEmployeePosition:
          $ref: '#/components/schemas/Position'
        ActiveEmployeeLocation:
          $ref: '#/components/schemas/Location'
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmployeeCompensation:
      type: object
      properties:
        EmployeeNumber:
          type: string
        EffectiveEnd:
          type: string
          format: date-time
        EffectiveStart:
          type: string
          format: date-time
        PayGrade:
          $ref: '#/components/schemas/PayGrade'
        PayType:
          $ref: '#/components/schemas/PayType'
        PayGroup:
          $ref: '#/components/schemas/PayGroup'
        PayClass:
          $ref: '#/components/schemas/PayClass'
        EmploymentStatusReason:
          $ref: '#/components/schemas/EmploymentStatusReason'
        AlternateRate:
          type: number
          format: double
        AverageDailyHours:
          type: number
          format: double
        AverageOvertimeRate:
          type: number
          format: double
        BaseRate:
          type: number
          format: double
        BaseRateManuallySet:
          type: boolean
        BaseSalary:
          type: number
          format: double
        DailyRate:
          type: number
          format: double
        NormalWeeklyHours:
          type: number
          format: double
        NormalSemiMonthlyHoursTop:
          type: number
          format: double
        NormalSemiMonthlyHoursBottom:
          type: number
          format: double
        LastPayEditDate:
          type: string
          format: date-time
        VacationRate:
          type: number
          format: double
        MinimumRate:
          type: number
          format: double
        ControlRate:
          type: number
          format: double
        MaximumRate:
          type: number
          format: double
        RateMidPoint:
          type: number
          format: double
        MinimumSalary:
          type: number
          format: double
        ControlSalary:
          type: number
          format: double
        MaximumSalary:
          type: number
          format: double
        SalaryMidPoint:
          type: number
          format: double
        CompRatio:
          type: number
          format: double
        ChangePercent:
          type: number
          format: double
        ChangeValue:
          type: number
          format: double
        PreviousBaseSalary:
          type: number
          format: double
        PreviousBaseRate:
          type: number
          format: double
        PayPolicy:
          $ref: '#/components/schemas/PayPolicy'
        RatePolicy:
          $ref: '#/components/schemas/JobStepPolicy'
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmployeeSSOAccount:
      type: object
      properties:
        LoginName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmployeeMaritalStatus:
      type: object
      properties:
        MaritalStatus:
          $ref: '#/components/schemas/MaritalStatus'
        EffectiveStart:
          type: string
          format: date-time
        EffectiveEnd:
          type: string
          format: date-time
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmployeeLocation:
      type: object
      properties:
        IsPrimary:
          type: boolean
        Location:
          $ref: '#/components/schemas/Location'
        EffectiveStart:
          type: string
          format: date-time
        EffectiveEnd:
          type: string
          format: date-time
        IsDefault:
          type: boolean
        EmployeeLocationAuthorities:
          $ref: '#/components/schemas/EmployeeLocationAuthorityCollection'
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmployeeHealthWellness:
      type: object
      properties:
        TobaccoUser:
          type: string
        DateLastSmoked:
          type: string
          format: date-time
        EffectiveStart:
          type: string
          format: date-time
        EffectiveEnd:
          type: string
          format: date-time
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmployeeCourse:
      type: object
      properties:
        StartDate:
          type: string
          format: date-time
        CompletionDate:
          type: string
          format: date-time
        CertificationExpiryDate:
          type: string
          format: date-time
        Course:
          $ref: '#/components/schemas/Course'
        EmployeeTrainingProgram:
          $ref: '#/components/schemas/EmployeeTrainingProgram'
        CertificationNumber:
          type: string
        Comment:
          type: string
        Score:
          type: string
        PassFail:
          type: string
        Credits:
          type: string
        Cost:
          type: number
          format: double
        CostCurrencyCode:
          type: string
        EnrollmentStatus:
          $ref: '#/components/schemas/LMSEnrollmentStatus'
        TimeSpent:
          type: integer
          format: int32
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmployeeVolunteerList:
      type: object
      properties:
        EffectiveEnd:
          type: string
          format: date-time
        EffectiveStart:
          type: string
          format: date-time
        VolunteerList:
          $ref: '#/components/schemas/VolunteerList'
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmployeeHRIncident:
      type: object
      properties:
        EmployeeComplainantXRefCode:
          type: string
        HRIncidentNotes:
          $ref: '#/components/schemas/EmployeeHRIncidentNoteCollection'
        OrgUnit:
          $ref: '#/components/schemas/OrgUnitDetailConfiguration'
        HRIncidentState:
          type: string
        OpenDate:
          type: string
          format: date-time
        HRIncidentAction:
          $ref: '#/components/schemas/HRIncidentAction'
        AssignedToUserXRefCode:
          type: string
        HRIncidentType:
          $ref: '#/components/schemas/HRIncidentType'
        ClosedDate:
          type: string
          format: date-time
        HRIncidentDate:
          type: string
          format: date-time
        HRIncidentBeganWork:
          type: string
          format: date-time
        HRIncidentEventTime:
          type: string
          format: date-time
        SafetyHealthType:
          $ref: '#/components/schemas/SafetyHealthType'
        HRIncidentInjury:
          $ref: '#/components/schemas/HRIncidentInjury'
        HRIncidentBodyPart:
          $ref: '#/components/schemas/HRIncidentBodyPart'
        Died:
          type: boolean
        HRIncidentArea:
          type: string
        TaskBeingPerformed:
          type: string
        CausedObject:
          type: string
        CausedAction:
          type: string
        PrivacyCase:
          type: boolean
        DoctorName:
          type: string
        EmergencyRoom:
          type: boolean
        HospitalOvernight:
          type: boolean
        Hospital:
          type: string
        HospitalStreet:
          type: string
        HospitalCity:
          type: string
        HospitalStateCode:
          type: string
        HospitalZip:
          type: string
        DateReturnToWork:
          type: string
          format: date-time
        DaysLost:
          type: number
          format: double
        DaysRestricted:
          type: number
          format: double
        DateDied:
          type: string
          format: date-time
        QuestionableClaim:
          type: boolean
        IsDaysLost:
          type: boolean
        WCBCaseNumber:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmployeeSkill:
      type: object
      properties:
        Skill:
          $ref: '#/components/schemas/Skill'
        SkillLevel:
          $ref: '#/components/schemas/SkillLevel'
        EffectiveStart:
          type: string
          format: date-time
        EffectiveEnd:
          type: string
          format: date-time
        Course:
          $ref: '#/components/schemas/Course'
        TrainingProgram:
          $ref: '#/components/schemas/TrainingProgram'
        LMSAssignmentMethod:
          $ref: '#/components/schemas/LMSAssignmentMethod'
        LastAssignedBy:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmployeeTrainingProgram:
      type: object
      properties:
        TrainingProgram:
          $ref: '#/components/schemas/TrainingProgram'
        EnrollmentDate:
          type: string
          format: date-time
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmployeeUnionMembership:
      type: object
      properties:
        UnionMembershipDate:
          type: string
          format: date-time
        EffectiveStart:
          type: string
          format: date-time
        Union:
          $ref: '#/components/schemas/DFUnion'
        EffectiveEnd:
          type: string
          format: date-time
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmployeeEmploymentType:
      type: object
      properties:
        EffectiveStart:
          type: string
          format: date-time
        EffectiveEnd:
          type: string
          format: date-time
        EmploymentType:
          $ref: '#/components/schemas/EmploymentTypeConfig'
        TaxPayerId:
          type: string
        DBAName:
          type: string
        GamingProfitsDistributions:
          type: boolean
        IR35:
          type: boolean
        PensionType:
          $ref: '#/components/schemas/PensionTypeConfiguration'
        ContractorTaxFormType:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmployeeHighlyCompensatedEmployeeIndicator:
      type: object
      properties:
        EffectiveStart:
          type: string
          format: date-time
        EffectiveEnd:
          type: string
          format: date-time
        IsHCE:
          type: boolean
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmployeePayGradeRate:
      type: object
      properties:
        EffectiveStart:
          type: string
          format: date-time
        EffectiveEnd:
          type: string
          format: date-time
        WorkAssignmentEffectiveStart:
          type: string
          format: date-time
        WorkAssignmentEffectiveEnd:
          type: string
          format: date-time
        PayGrade:
          $ref: '#/components/schemas/PayGrade'
        MinimumRate:
          type: number
          format: double
        ControlRate:
          type: number
          format: double
        MaximumRate:
          type: number
          format: double
        RateMidPoint:
          type: number
          format: double
        MinimumSalary:
          type: number
          format: double
        ControlSalary:
          type: number
          format: double
        MaximumSalary:
          type: number
          format: double
        SalaryMidPoint:
          type: number
          format: double
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmployeeDirectDeposit:
      type: object
      properties:
        AccountNumber:
          type: string
        BankName:
          type: string
        BankNumber:
          type: string
        BuildingSocietyNumber:
          type: string
        DepositNumber:
          type: integer
          format: int32
        DepositValue:
          type: number
          format: double
        EffectiveStart:
          type: string
          format: date-time
        EffectiveEnd:
          type: string
          format: date-time
        PayMethod:
          $ref: '#/components/schemas/PayMethod'
        IsDeleted:
          type: boolean
        IsPercentage:
          type: boolean
        IsRemainder:
          type: boolean
        IsSpecialDisbursementAccount:
          type: boolean
        IsMultiSourceAccount:
          type: boolean
        NumberOfPreNoteDays:
          type: integer
          format: int32
        PrenoteFileRunPayDate:
          type: string
          format: date-time
        PrenoteFileSentOn:
          type: string
          format: date-time
        RequiresPreNote:
          type: boolean
        RoutingTransitNumber:
          type: string
        PayCardType:
          type: string
        FinancialInstitution:
          $ref: '#/components/schemas/FinancialInstitution'
        AccountHolder:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmployeeIRLTaxPAYEExclusion:
      type: object
      properties:
        EffectiveStart:
          type: string
          format: date-time
        EffectiveEnd:
          type: string
          format: date-time
        ExclusionOrder:
          type: boolean
        LegalEntityXrefCode:
          type: string
        LegalEntity:
          $ref: '#/components/schemas/LegalEntity'
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmployeeIRLTaxPRSI:
      type: object
      properties:
        EffectiveStart:
          type: string
          format: date-time
        EffectiveEnd:
          type: string
          format: date-time
        PRSIClassXrefCode:
          type: string
        CommunityEmployment:
          type: boolean
        PRSIExempt:
          type: boolean
        PRSIExemptReasonXrefCode:
          type: string
        LegalEntityXrefCode:
          type: string
        LegalEntity:
          $ref: '#/components/schemas/LegalEntity'
        PrsiClass:
          $ref: '#/components/schemas/PRSIClass'
        PrsiExemptReason:
          $ref: '#/components/schemas/PRSIExemptReason'
        CompanyDirector:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmployeeIRLTaxRPN:
      type: object
      properties:
        EffectiveStart:
          type: string
          format: date-time
        EffectiveEnd:
          type: string
          format: date-time
        EmploymentCessationDate:
          type: string
          format: date-time
        TaxYear:
          type: integer
          format: int32
        RpnNumber:
          type: string
        EmployeePpsn:
          type: string
        EmploymentID:
          type: string
        RpnIssueDate:
          type: string
          format: date-time
        EmployerReference:
          type: string
        FirstName:
          type: string
        FamilyName:
          type: string
        PreviousEmployeePPSN:
          type: string
        IncomeTaxCalculationBasis:
          type: string
        ExclusionOrder:
          type: boolean
        YearlyTaxCredits:
          type: number
          format: double
        PayForIncomeTaxToDate:
          type: number
          format: double
        IncomeTaxDeductedToDate:
          type: number
          format: double
        UscStatus:
          type: string
        PayForUSCToDate:
          type: number
          format: double
        UscDeductedToDate:
          type: number
          format: double
        LptToDeduct:
          type: number
          format: double
        PRSIExempt:
          type: boolean
        PrsiClass:
          type: string
        TaxRatePercent1:
          type: number
          format: double
        YearlyRateCutOff1:
          type: number
          format: double
        TaxRatePercent2:
          type: number
          format: double
        UscRatePercent1:
          type: number
          format: double
        YearlyUSCRateCutOff1:
          type: number
          format: double
        UscRatePercent2:
          type: number
          format: double
        YearlyUSCRateCutOff2:
          type: number
          format: double
        UscRatePercent3:
          type: number
          format: double
        YearlyUSCRateCutOff3:
          type: number
          format: double
        UscRatePercent4:
          type: number
          format: double
        LegalEntityXrefCode:
          type: string
        LegalEntity:
          $ref: '#/components/schemas/LegalEntity'
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmployeeIRLTaxEWSS:
      type: object
      properties:
        EffectiveStart:
          type: string
          format: date-time
        EffectiveEnd:
          type: string
          format: date-time
        IsEWSSEligible:
          type: boolean
        LegalEntityXrefCode:
          type: string
        LegalEntity:
          $ref: '#/components/schemas/LegalEntity'
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmployeeCANFederalTax:
      type: object
      properties:
        EffectiveStart:
          type: string
          format: date-time
        EffectiveEnd:
          type: string
          format: date-time
        TotalClaimAmount:
          type: number
          format: double
        IsNonResident:
          type: boolean
        MultipleEmployer:
          type: boolean
        IncomeLessThanClaim:
          type: boolean
        DistrictTaxDeduction:
          type: number
          format: double
        AuthorizedTaxCredits:
          type: number
          format: double
        EstimatedExpense:
          type: number
          format: double
        EstimatedRemuneration:
          type: number
          format: double
        AdditionalAmount:
          type: number
          format: double
        PrescribedAreaDeduction:
          type: number
          format: double
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmployeeCANStateTax:
      type: object
      properties:
        EffectiveStart:
          type: string
          format: date-time
        EffectiveEnd:
          type: string
          format: date-time
        State:
          $ref: '#/components/schemas/State'
        TotalClaimAmount:
          type: number
          format: double
        PrescribedAreaDeduction:
          type: number
          format: double
        MaintenanceDeduction:
          type: number
          format: double
        AuthorizedTaxCredits:
          type: number
          format: double
        QuebecDevelopmentFunds:
          type: number
          format: double
        EstimatedExpense:
          type: number
          format: double
        EstimatedRemuneration:
          type: number
          format: double
        AdditionalAmount:
          type: number
          format: double
        LabourSponsoredFunds:
          type: number
          format: double
        HasQuebecHealthContributionExemption:
          type: boolean
        IncomeLessThanClaim:
          type: boolean
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmployeeUSFederalTax:
      type: object
      properties:
        EffectiveStart:
          type: string
          format: date-time
        EffectiveEnd:
          type: string
          format: date-time
        FilingStatus:
          $ref: '#/components/schemas/FederalFilingStatus'
        Allowances:
          type: integer
          format: int32
        AdditionalAmount:
          type: number
          format: double
        IsTaxExempt:
          type: boolean
        IsLocked:
          type: boolean
        TwoJobs:
          type: boolean
        DependentTaxCredit:
          type: number
          format: double
        OtherIncome:
          type: number
          format: double
        Deductions:
          type: number
          format: double
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmployeeMUSTaxDetails:
      type: object
      properties:
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmployeeAUSFederalTax:
      type: object
      properties:
        EffectiveStart:
          type: string
          format: date-time
        EffectiveEnd:
          type: string
          format: date-time
        STSLDebt:
          type: boolean
        ClaimTaxFreeThreshold:
          type: boolean
        AmountClaimedforTaxOffset:
          type: number
          format: double
        MedicareLevyReductionClaimed:
          type: boolean
        Spouse:
          type: boolean
        CombineWeeklyTotalIncomelessthanTableA:
          type: boolean
        NumberofDependentChildren:
          type: integer
          format: int32
        SeniorAndPensionersTaxOffset:
          type: boolean
        PayBasis:
          type: string
        ClaimingZoneOverseasorCarerOffset:
          type: boolean
        ApplyMedicareForWorkingHolidayMaker:
          type: boolean
        WithholdingVariationAmount:
          type: number
          format: double
        DoesWithholdingVariationIncludeSTSLDebt:
          type: boolean
        IsUpwardVariation:
          type: boolean
        TFNExemptionReason:
          $ref: '#/components/schemas/TFNExemptionReason'
        ResidentCode:
          $ref: '#/components/schemas/PRTaxResidentCode'
        MedicareLevyExemptionType:
          $ref: '#/components/schemas/MedicareLevyExemptionType'
        WithholdingVariationType:
          $ref: '#/components/schemas/WithholdingVariationType'
        WithholdingVariationAmountType:
          $ref: '#/components/schemas/WithholdingVariationAmountType'
        EarningGroup:
          $ref: '#/components/schemas/PREarningAccumulator'
        AdditionalTaxType:
          $ref: '#/components/schemas/AdditionalTaxType'
        FlatComissionerInstalmentRate:
          type: number
          format: double
        IsContractorSuperLiabilityOnly:
          type: boolean
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmployeePayrollTax:
      type: object
      properties:
        TaxAuthority:
          type: string
        TaxType:
          type: string
        Name:
          $ref: '#/components/schemas/EmployeePayrollTaxName'
        EmployeeTax:
          type: boolean
        EmployerTax:
          type: boolean
        LegalEntity:
          type: string
        ResidentCode:
          type: string
        ManuallyAddedTax:
          type: boolean
        Addresses:
          type: array
          items:
            type: string
        TaxAuthorityInstance:
          type: string
        LegalEntityXrefCode:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmployeePayrollTaxParameter:
      type: object
      properties:
        EffectiveStart:
          type: string
          format: date-time
        EffectiveEnd:
          type: string
          format: date-time
        ExemptTaxOnlyUpdateWages:
          type: boolean
        ExemptTaxAndTaxableWages:
          type: boolean
        InactivateTax:
          type: boolean
        TaxAuthorityInstance:
          type: string
        LegalEntityXrefCode:
          type: string
        OverrideParameters:
          type: array
          items:
            $ref: '#/components/schemas/EmployeePayrollTaxParameterElement'
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmployeeUSStateTax:
      type: object
      properties:
        EffectiveStart:
          type: string
          format: date-time
        EffectiveEnd:
          type: string
          format: date-time
        State:
          $ref: '#/components/schemas/State'
        FilingStatus:
          $ref: '#/components/schemas/StateFilingStatus'
        StateFilingStatusDisplayName:
          type: string
        Allowances:
          type: integer
          format: int32
        AdditionalAmount:
          type: number
          format: double
        DependentAllowances:
          type: integer
          format: int32
        PersonalAllowances:
          type: integer
          format: int32
        AdditionalAllowances:
          type: integer
          format: int32
        IsTaxExempt:
          type: boolean
        AlternateCalculationCode:
          type: string
        AlternateCalculationCodeDisplayName:
          type: string
        ExemptionAmount:
          type: number
          format: double
        AdditionalTaxPercent:
          type: number
          format: double
        AdditionalExemptionAmount:
          type: number
          format: double
        IsLocked:
          type: boolean
        PRYoungEntrepreneurExemptionOptOut:
          type: boolean
        AdoptionDependents:
          type: integer
          format: int32
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmployeeEmergencyContact:
      type: object
      properties:
        FirstName:
          type: string
        LastName:
          type: string
        MiddleName:
          type: string
        Comment:
          type: string
        IsPrimary:
          type: boolean
        Relationship:
          $ref: '#/components/schemas/RelationshipType'
        Addresses:
          $ref: '#/components/schemas/EmergencyContactPersonAddressCollection'
        Contacts:
          $ref: '#/components/schemas/EmergencyContactPersonContactCollection'
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmployeeEthnicity:
      type: object
      properties:
        EffectiveStart:
          type: string
          format: date-time
        EffectiveEnd:
          type: string
          format: date-time
        Ethnicity:
          $ref: '#/components/schemas/DFEthnicity'
        ManagerEthnicity:
          $ref: '#/components/schemas/DFEthnicity'
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmployeeDisability:
      type: object
      properties:
        EffectiveStart:
          type: string
          format: date-time
        EffectiveEnd:
          type: string
          format: date-time
        EvidenceNumber:
          type: string
        CountryCode:
          type: string
        DisabilityEvidenceIssuingAgencyLocation:
          type: string
        ValidFrom:
          type: string
          format: date-time
        ExpiryDate:
          type: string
          format: date-time
        DisabilityEvidenceIssuingAgency:
          $ref: '#/components/schemas/DisabilityEvidenceIssuingAgency'
        DisabilityEvidenceType:
          $ref: '#/components/schemas/DisabilityEvidenceType'
        DisabilityWorkingTime:
          $ref: '#/components/schemas/DisabilityWorkingTime'
        DisabilityGroup:
          $ref: '#/components/schemas/DisabilityGroup'
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmployeeVeteransStatus:
      type: object
      properties:
        EffectiveStart:
          type: string
          format: date-time
        EffectiveEnd:
          type: string
          format: date-time
        IsVevraa:
          type: boolean
        VeteransStatus:
          $ref: '#/components/schemas/DFVeteransStatus'
        LastModifiedTimestamp:
          type: string
          format: date-time
    PRGLSplitSet:
      type: object
      properties:
        Location:
          $ref: '#/components/schemas/Location'
        Position:
          $ref: '#/components/schemas/Position'
        EffectiveStart:
          type: string
          format: date-time
        EffectiveEnd:
          type: string
          format: date-time
        PRGLSplitSetDetails:
          $ref: '#/components/schemas/PRGLSplitSetDetailCollection'
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmployeePropertyValue:
      type: object
      properties:
        EffectiveEnd:
          type: string
          format: date-time
        EffectiveStart:
          type: string
          format: date-time
        EmployeeProperty:
          $ref: '#/components/schemas/EmployeeProperty'
        BitValue:
          type: boolean
        NumberValue:
          type: number
          format: double
        OptionValue:
          $ref: '#/components/schemas/EmployeePropertyOption'
        StringValue:
          type: string
        DateTimeValue:
          type: string
          format: date-time
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmployeeGlobalPropertyValue:
      type: object
      properties:
        EffectiveEnd:
          type: string
          format: date-time
        EffectiveStart:
          type: string
          format: date-time
        GlobalProperty:
          $ref: '#/components/schemas/GlobalProperty'
        BitValue:
          type: boolean
        NumberValue:
          type: number
          format: double
        OptionValue:
          $ref: '#/components/schemas/GlobalPropertyOption'
        StringValue:
          type: string
        DateTimeValue:
          type: string
          format: date-time
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmployeeDefaultLabor:
      type: object
      properties:
        Position:
          $ref: '#/components/schemas/Position'
        EffectiveEnd:
          type: string
          format: date-time
        EffectiveStart:
          type: string
          format: date-time
        Location:
          $ref: '#/components/schemas/Location'
        PayAdjCode:
          $ref: '#/components/schemas/PayAdjCode'
        Project:
          $ref: '#/components/schemas/Project'
        Docket:
          $ref: '#/components/schemas/Docket'
        EmployeeDefaultLaborMetricsCodes:
          $ref: '#/components/schemas/EmployeeDefaultLaborMetricsCodeCollection'
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmployeeDocumentManagementSecurityGroup:
      type: object
      properties:
        DocMgmtSecurityGroup:
          $ref: '#/components/schemas/DocMgmtSecurityGroup'
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmployeeClockDeviceGroup:
      type: object
      properties:
        ClockDeviceGroup:
          $ref: '#/components/schemas/ClockDeviceGroup'
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmployeePayAdjustCodeGroup:
      type: object
      properties:
        PayAdjCodeGroup:
          $ref: '#/components/schemas/PayAdjCodeGroup'
        LastModifiedTimestamp:
          type: string
          format: date-time
    UserPayAdjustCodeGroup:
      type: object
      properties:
        PayAdjCodeGroup:
          $ref: '#/components/schemas/PayAdjCodeGroup'
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmployeeWorkContract:
      type: object
      properties:
        AverageNumOfDays:
          type: number
          format: double
        BaseHours:
          type: number
          format: double
        BaseComplementaryHours:
          type: number
          format: double
        ContractWorkPercent:
          type: number
          format: double
        CreateShiftOnHolidays:
          type: boolean
        EndDate:
          type: string
          format: date-time
        FullTimeHours:
          type: number
          format: double
        StartDate:
          type: string
          format: date-time
        WorkContract:
          $ref: '#/components/schemas/WorkContract'
        WorkPatternLengthDays:
          type: integer
          format: int32
        WorkPatterns:
          $ref: '#/components/schemas/EmployeeWorkPatternCollection'
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmployeePerformanceRating:
      type: object
      properties:
        Comments:
          type: string
        NextReviewDate:
          type: string
          format: date-time
        PerformanceCycle:
          $ref: '#/components/schemas/PerformanceCycle'
        PerformanceRatingScale:
          $ref: '#/components/schemas/PFRatingScale'
        PerformanceRating:
          $ref: '#/components/schemas/PerformanceRating'
        RatingScore:
          type: number
          format: double
        ReviewDate:
          type: string
          format: date-time
        Reviewer:
          $ref: '#/components/schemas/BaseEmployeeSubset'
        ReviewPeriodStartDate:
          type: string
          format: date-time
        ReviewPeriodEndDate:
          type: string
          format: date-time
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmployeeCANEmploymentInsuranceRate:
      type: object
      properties:
        EffectiveStart:
          type: string
          format: date-time
        EffectiveEnd:
          type: string
          format: date-time
        LegalEntity:
          $ref: '#/components/schemas/LegalEntity'
        RateGroup:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmployeeUSTaxStatus:
      type: object
      properties:
        StateCode:
          type: string
        EffectiveStart:
          type: string
          format: date-time
        EffectiveEnd:
          type: string
          format: date-time
        TaxPropertyCollection:
          $ref: '#/components/schemas/TaxPropertyCollection'
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmployeeCANTaxStatus:
      type: object
      properties:
        ProvinceCode:
          type: string
        EffectiveStart:
          type: string
          format: date-time
        EffectiveEnd:
          type: string
          format: date-time
        TaxPropertyCollection:
          $ref: '#/components/schemas/TaxPropertyCollection'
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmployeeOrgUnitInformation:
      type: object
      properties:
        OrgUnitDetail:
          $ref: '#/components/schemas/OrgUnitDetailConfiguration'
        Department:
          $ref: '#/components/schemas/Department'
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmployeeConfidentialIdentification:
      type: object
      properties:
        EffectiveStart:
          type: string
          format: date-time
        EffectiveEnd:
          type: string
          format: date-time
        ConfidentialIdentificationType:
          $ref: '#/components/schemas/ConfidentialIdentificationType'
        CountryCode:
          type: string
        ExpiryDate:
          type: string
          format: date-time
        IDNumber:
          type: string
        PlaceOfIssue:
          type: string
        IssueDate:
          type: string
          format: date-time
        UseForRTW:
          type: boolean
        RTWDocReview:
          type: string
        RTWDocReviewOn:
          type: string
          format: date-time
        LastModifiedTimestamp:
          type: string
          format: date-time
    LMSEmployeeCertification:
      type: object
      properties:
        EffectiveStart:
          type: string
          format: date-time
        EffectiveEnd:
          type: string
          format: date-time
        LMSCertification:
          $ref: '#/components/schemas/LMSCertification'
        CertificationNumber:
          type: string
        Course:
          $ref: '#/components/schemas/Course'
        TrainingProgram:
          $ref: '#/components/schemas/TrainingProgram'
        LMSAssignmentMethod:
          $ref: '#/components/schemas/LMSAssignmentMethod'
        LMSCertificationStatus:
          $ref: '#/components/schemas/LMSCertificationStatus'
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmployeeEmploymentAgreement:
      type: object
      properties:
        EffectiveEnd:
          type: string
          format: date-time
        EffectiveStart:
          type: string
          format: date-time
        XRefCode:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        EmploymentAgreementType:
          $ref: '#/components/schemas/EmploymentAgreementType'
        EmploymentAgreementPopulation:
          $ref: '#/components/schemas/EmploymentAgreementPopulation'
        EmploymentAgreementDetails:
          $ref: '#/components/schemas/EmploymentAgreementDetails'
        EmploymentAgreementTaxRegime:
          $ref: '#/components/schemas/EmploymentAgreementTaxRegime'
        EmploymentAgreementDuration:
          $ref: '#/components/schemas/EmploymentAgreementDuration'
        EmploymentAgreementSettlement:
          $ref: '#/components/schemas/EmploymentAgreementSettlement'
        GovernmentIdentifier:
          type: string
        AgreementReason:
          $ref: '#/components/schemas/EmploymentStatusReason'
        AgreementEndReason:
          $ref: '#/components/schemas/EmploymentStatusReason'
        Country:
          $ref: '#/components/schemas/Country'
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmployeeHRPolicy:
      type: object
      properties:
        SignOff:
          type: boolean
        SignOffDate:
          type: string
          format: date-time
        HRPolicy:
          $ref: '#/components/schemas/HRPolicy'
        LastModifiedTimestamp:
          type: string
          format: date-time
    AuthorizationAssignment:
      type: object
      properties:
        AuthorityType:
          $ref: '#/components/schemas/AuthorityType'
        EffectiveStart:
          type: string
          format: date-time
        EffectiveEnd:
          type: string
          format: date-time
        AuthorizedPersonnelFirstName:
          type: string
        AuthorizedPersonnelLastName:
          type: string
        AuthorizedPersonnelMiddleName:
          type: string
        AuthorizedPersonnelXrefCode:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmployeeAssignedSexAndGenderIdentity:
      type: object
      properties:
        Country:
          $ref: '#/components/schemas/Country'
        State:
          $ref: '#/components/schemas/State'
        AssignedSexCountryAware:
          $ref: '#/components/schemas/AssignedSexCountryAware'
        GenderIdentityCountryAware:
          $ref: '#/components/schemas/GenderIdentityCountryAware'
        EffectiveStart:
          type: string
          format: date-time
        EffectiveEnd:
          type: string
          format: date-time
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmployeeOnboardingPolicy:
      type: object
      properties:
        OnboardingPolicy:
          $ref: '#/components/schemas/OnboardingPolicy'
        EffectiveStart:
          type: string
          format: date-time
        EffectiveEnd:
          type: string
          format: date-time
        IsInternalHire:
          type: boolean
        LastModifiedTimestamp:
          type: string
          format: date-time
    PayPeriodInformation:
      type: object
      properties:
        PayGroup:
          $ref: '#/components/schemas/PayGroupBrief'
        PayPeriodStartDate:
          type: string
          format: date-time
        PayPeriodEndDate:
          type: string
          format: date-time
        OffsetPayPeriodStartDate:
          type: string
          format: date-time
        OffsetPayPeriodEndDate:
          type: string
          format: date-time
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmployeeEarning:
      type: object
      properties:
        ContinuePaymentOnStatutoryPay:
          type: boolean
        IsOptOut:
          type: integer
          format: int32
        Earning:
          $ref: '#/components/schemas/Earning'
        EffectiveEnd:
          type: string
          format: date-time
        EffectiveStart:
          type: string
          format: date-time
        ElectionSchedule:
          $ref: '#/components/schemas/ElectionSchedule'
        ElectionStartPayGroup:
          $ref: '#/components/schemas/PayGroup'
        ElectionStartPayPeriodStartDate:
          type: string
          format: date-time
        IsBlocked:
          type: boolean
        LimitAmount:
          type: number
          format: double
        LimitPercent:
          type: number
          format: double
        Location:
          $ref: '#/components/schemas/Location'
        Position:
          $ref: '#/components/schemas/Position'
        EmployeeEarningParameters:
          $ref: '#/components/schemas/EmployeeEarningParameterCollection'
        EmployeeEarningLimits:
          $ref: '#/components/schemas/EmployeeEarningLimitCollection'
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmployeeDeduction:
      type: object
      properties:
        Deduction:
          $ref: '#/components/schemas/Deduction'
        EffectiveStart:
          type: string
          format: date-time
        EffectiveEnd:
          type: string
          format: date-time
        ElectionStartPayPeriodStartDate:
          type: string
          format: date-time
        ElectionStartPayGroup:
          $ref: '#/components/schemas/PayGroup'
        ElectionSchedule:
          $ref: '#/components/schemas/ElectionSchedule'
        IsBlocked:
          type: boolean
        Position:
          $ref: '#/components/schemas/Position'
        Location:
          $ref: '#/components/schemas/Location'
        ContinuePaymentOnStatutoryPay:
          type: boolean
        IsOptOut:
          type: integer
          format: int32
        EmployeeDeductionParameters:
          $ref: '#/components/schemas/EmployeeDeductionParameterCollection'
        EmployeeDeductionLimits:
          $ref: '#/components/schemas/EmployeeDeductionLimitCollection'
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmployeeDependentBeneficiary:
      type: object
      properties:
        FirstName:
          type: string
        MiddleName:
          type: string
        LastName:
          type: string
        BirthDate:
          type: string
          format: date-time
        SocialSecurityNumber:
          type: string
        SSNExpiryDate:
          type: string
          format: date-time
        TobaccoUser:
          type: string
        DateLastSmoked:
          type: string
          format: date-time
        IsStudent:
          type: boolean
        IsDisabled:
          type: boolean
        SocialSecurityDisabilityAwardDate:
          type: string
          format: date-time
        Gender:
          type: string
        IsBeneficiary:
          type: boolean
        IsDependent:
          type: boolean
        IsActiveDependent:
          type: boolean
        IsActiveBeneficiary:
          type: boolean
        Relationship:
          $ref: '#/components/schemas/RelationshipType'
        MaritalStatus:
          $ref: '#/components/schemas/MaritalStatus'
        Addresses:
          $ref: '#/components/schemas/EmployeeDependentsBeneficiariesAddressCollection'
        Contacts:
          $ref: '#/components/schemas/EmployeeDependentsBeneficiariesContactCollection'
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmployeeUKTaxDetails:
      type: object
      properties:
        EffectiveStart:
          type: string
          format: date-time
        EffectiveEnd:
          type: string
          format: date-time
        TaxCode:
          type: string
        TaxBasis:
          type: boolean
        PreviousTaxableGrossPaidToDate:
          type: number
          format: double
        PreviousTaxPaidToDate:
          type: number
          format: double
        StarterDeclaration:
          type: string
        PreviouslyReportedOnFPS:
          type: boolean
        ChangeReasonXrefCode:
          type: string
        LegalEntityXrefCode:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmployeeUKStudentLoan:
      type: object
      properties:
        EffectiveStart:
          type: string
          format: date-time
        EffectiveEnd:
          type: string
          format: date-time
        StudentLoanPlanType:
          type: integer
          format: int32
        LegalEntityXrefCode:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmployeeUKPostgraduateLoan:
      type: object
      properties:
        EffectiveStart:
          type: string
          format: date-time
        EffectiveEnd:
          type: string
          format: date-time
        LegalEntityXrefCode:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmployeeUKIrregularPaymentDetails:
      type: object
      properties:
        EffectiveStart:
          type: string
          format: date-time
        EffectiveEnd:
          type: string
          format: date-time
        IrregularPayments:
          type: boolean
        LegalEntityXrefCode:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmployeeUKNIDetails:
      type: object
      properties:
        EffectiveStart:
          type: string
          format: date-time
        EffectiveEnd:
          type: string
          format: date-time
        NILetterXrefCode:
          type: string
        DirectorStartDate:
          type: string
          format: date-time
        IsDirector:
          type: boolean
        Annual:
          type: boolean
        ChangeReasonXrefCode:
          type: string
        LegalEntityXrefCode:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmployeeAUSSuperannuation:
      type: object
      properties:
        EffectiveStart:
          type: string
          format: date-time
        EffectiveEnd:
          type: string
          format: date-time
        MembershipNumber:
          type: string
        SuperannuationContributionCalcValue:
          type: number
          format: double
        PayrollPayee:
          $ref: '#/components/schemas/PayrollPayeeInfo'
        PayrollDeduction:
          $ref: '#/components/schemas/PayrollDeduction'
        SuperannuationContributionType:
          $ref: '#/components/schemas/SuperannuationContributionType'
        SuperannuationType:
          $ref: '#/components/schemas/SuperannuationType'
        SuperannuationContributionCalculationType:
          $ref: '#/components/schemas/SuperannuationContributionCalculationType'
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmployeeAUSSuperannuationRules:
      type: object
      properties:
        EffectiveStart:
          type: string
          format: date-time
        EffectiveEnd:
          type: string
          format: date-time
        ApplyQuarterlyMaxBaseCapForEmployerSuperannuation:
          type: boolean
        OverrideMinBaseForEmployerSuperannuation:
          type: boolean
        MinimumContributionAmount:
          type: number
          format: double
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmployeeShortTimeWork:
      type: object
      properties:
        EmployeeShortTimeWorkId:
          type: integer
          format: int32
        EffectiveStart:
          type: string
          format: date-time
        EffectiveEnd:
          type: string
          format: date-time
        IncreasedRate:
          type: boolean
        Consent:
          type: boolean
        DEUSTWParticipationReason:
          $ref: '#/components/schemas/DEUSTWParticipationReason'
        LegalEntityDEUShortTimeWork:
          $ref: '#/components/schemas/LegalEntityDEUShortTimeWork'
        LastModifiedTimestamp:
          type: string
          format: date-time
    DEUTaxSocialInsurance:
      type: object
      properties:
        EffectiveStart:
          type: string
          format: date-time
        EffectiveEnd:
          type: string
          format: date-time
        PublicHealthInsuranceXrefCode:
          type: string
        LevyHealthInsuranceProviderXrefCode:
          type: string
        HighestSchoolEducationXrefCode:
          type: string
        HighestProfessionalEducationXrefCode:
          type: string
        RelationToEmployerXrefCode:
          type: string
        IsContractor:
          type: boolean
        MainlySelfEmployed:
          type: boolean
        IsParentLegalGuardian:
          type: boolean
        NumberOfEntitledChildren:
          type: string
        ContractTypeXrefCode:
          type: string
        LevyXrefCode:
          type: string
        IsMidijob:
          type: boolean
        IsSeasonalEmployee:
          type: boolean
        EmployeeGroupXrefCode:
          type: string
        HealthInsuranceXrefCode:
          type: string
        PensionInsuranceXrefCode:
          type: string
        UnemploymentInsuranceXrefCode:
          type: string
        CareInsuranceXrefCode:
          type: string
        CalculationBasisXrefCode:
          type: string
        EntitledToSickBenefit:
          type: boolean
        EmployeeOccupationalPension:
          $ref: '#/components/schemas/EmployeeOccupationalPension'
        EmployeePrivateHealthInsurance:
          $ref: '#/components/schemas/EmployeePrivateHealthInsurance'
        MainEmploymentWithMultipleMiniJobs:
          type: boolean
        LastModifiedTimestamp:
          type: string
          format: date-time
    DEUEmployeeAccidentInsurance:
      type: object
      properties:
        LegalEntityXrefCode:
          type: string
        EffectiveStart:
          type: string
          format: date-time
        EffectiveEnd:
          type: string
          format: date-time
        IsExempt:
          type: boolean
        LastModifiedTimestamp:
          type: string
          format: date-time
        AccidentInsuranceHazardCategory:
          $ref: '#/components/schemas/DEUEmployeeAccidentInsuranceHazardCategoryCollection'
    DEUEmployeeWageTax:
      type: object
      properties:
        EffectiveStart:
          type: string
          format: date-time
        EffectiveEnd:
          type: string
          format: date-time
        ReferenceDate:
          type: string
          format: date-time
        EmploymentTypeCodeName:
          type: string
        ElectronicDataTransfer:
          type: boolean
        TaxClass:
          type: string
        Factor:
          type: number
          format: double
        ChildAllowance:
          type: number
          format: double
        DenominationCodeName:
          type: string
        TaxExemption:
          type: boolean
        RequestedAnnualAllowance:
          type: number
          format: double
        AnnualAllowance:
          type: number
          format: double
        MonthlyAllowance:
          type: number
          format: double
        SpouseDenominationCodeName:
          type: string
        OptOutYearEndWageTaxAdjustment:
          type: boolean
        IsManualInput:
          type: boolean
        LastModifiedTimestamp:
          type: string
          format: date-time
    MetadataField:
      type: object
      properties:
        OriginalId:
          type: string
        ParentEntityType:
          type: string
        Label:
          type: string
        DbColumn:
          type: string
        DataType:
          type: string
        Validators:
          type: array
          items:
            $ref: '#/components/schemas/AmfValidationModel'
        PredefinedValues:
          type: array
          items:
            $ref: '#/components/schemas/PredefinedValue'
        EnableAdditionalAssumePreviousValueIfNullLogic:
          type: boolean
        DfAuthorize:
          $ref: '#/components/schemas/AmfAuthorize'
        Cfg:
          $ref: '#/components/schemas/AmfCfg'
        EnumFrom:
          $ref: '#/components/schemas/AmfEnumFrom'
        IsUniqueField:
          type: boolean
        IsPublicKey:
          type: boolean
        IsIndexKey:
          type: boolean
        Id:
          type: string
        Title:
          type: string
        ShortDescription:
          type: string
        LongDescription:
          type: string
        MetadataId:
          type: string
        DbTable:
          type: string
        Name:
          type: string
        Mappings:
          type: object
          additionalProperties:
            type: string
        IsExtended:
          type: boolean
        IsCommon:
          type: boolean
        GeoContext:
          $ref: '#/components/schemas/ContextLevel'
        SchemaName:
          type: string
        ApplicationMapping:
          type: string
          readOnly: true
        DayforcePropertyName:
          type: string
          readOnly: true
    MetadataModel:
      type: object
      properties:
        MetadataFields:
          type: array
          items:
            $ref: '#/components/schemas/MetadataField'
        MetadataModels:
          type: array
          items:
            $ref: '#/components/schemas/MetadataModel'
        MetadataModelCollections:
          type: array
          items:
            $ref: '#/components/schemas/MetadataModelCollection'
        Validators:
          type: array
          items:
            $ref: '#/components/schemas/AmfValidationModel'
        OnCUDActions:
          type: array
          items:
            $ref: '#/components/schemas/AmfOnCUDActionModel'
        CompositeFields:
          type: array
          items:
            type: string
        IsEffectiveDatedContiguous:
          type: boolean
        Rules:
          type: array
          items:
            $ref: '#/components/schemas/AmfRuleModel'
        DfAuthorize:
          $ref: '#/components/schemas/AmfAuthorize'
        Id:
          type: string
        Title:
          type: string
        ShortDescription:
          type: string
        LongDescription:
          type: string
        MetadataId:
          type: string
        DbTable:
          type: string
        Name:
          type: string
        Mappings:
          type: object
          additionalProperties:
            type: string
        IsExtended:
          type: boolean
        IsCommon:
          type: boolean
        GeoContext:
          $ref: '#/components/schemas/ContextLevel'
        SchemaName:
          type: string
        ApplicationMapping:
          type: string
          readOnly: true
        DayforcePropertyName:
          type: string
          readOnly: true
    Country:
      type: object
      properties:
        Name:
          type: string
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    Address:
      type: object
      properties:
        Address1:
          type: string
        Address2:
          type: string
        Address3:
          type: string
        Address4:
          type: string
        Address5:
          type: string
        Address6:
          type: string
        City:
          type: string
        PostalCode:
          type: string
        Country:
          $ref: '#/components/schemas/Country'
        State:
          $ref: '#/components/schemas/State'
        LastModifiedTimestamp:
          type: string
          format: date-time
    OrgUnitLegalEntity:
      type: object
      properties:
        LegalEntity:
          $ref: '#/components/schemas/HRConfigurationEntity'
        EffectiveStart:
          type: string
          format: date-time
        EffectiveEnd:
          type: string
          format: date-time
        LegalEntityWorkSiteState:
          $ref: '#/components/schemas/LegalEntityWorkSiteState'
        OverrideCustomerFundingIdentifier:
          $ref: '#/components/schemas/LegalEntityMasterBankAccountSetting'
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    OrgUnitParent:
      type: object
      properties:
        ParentOrgUnit:
          $ref: '#/components/schemas/HRConfigurationEntity'
        EffectiveStart:
          type: string
          format: date-time
        EffectiveEnd:
          type: string
          format: date-time
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    ChildLocation:
      type: object
      properties:
        OrgLevel:
          $ref: '#/components/schemas/OrgLevel'
        OrgUnitLegalEntities:
          $ref: '#/components/schemas/OrgUnitLegalEntityCollection'
        OrgUnitParents:
          $ref: '#/components/schemas/OrgUnitParentCollection'
        OrgUnitLocationTypes:
          $ref: '#/components/schemas/OrgUnitLocationTypeCollection'
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    OrgUnitLocationType:
      type: object
      properties:
        LocationType:
          $ref: '#/components/schemas/OrgLocationType'
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmploymentStatus:
      type: object
      properties:
        IsBenefitArrearsEnabled:
          type: boolean
        EffectiveStartingPointOfDay:
          type: string
          readOnly: true
        EmploymentStatusGroup:
          $ref: '#/components/schemas/EmploymentStatusGroup'
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmploymentStatusGroup:
      type: object
      properties:
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    PayType:
      type: object
      properties:
        MaximumRate:
          type: number
          format: double
        MaximumSalary:
          type: number
          format: double
        SortOrder:
          type: integer
          format: int32
        HidePayOnTimesheet:
          type: boolean
        IsPayrollAutoPay:
          type: boolean
        LedgerCode:
          type: string
        PayTypeGroup:
          $ref: '#/components/schemas/PayTypeGroup'
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    PayGroup:
      type: object
      properties:
        PayFrequency:
          $ref: '#/components/schemas/PayFrequency'
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    PayTypeGroup:
      type: object
      properties:
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    PayClass:
      type: object
      properties:
        SortOrder:
          type: integer
          format: int32
        DefaultNormalWeeklyHours:
          type: number
          format: double
        LedgerCode:
          type: string
        PayClassGroup:
          $ref: '#/components/schemas/PayClassGroup'
        PayClassFrequency:
          $ref: '#/components/schemas/PayClassFrequency'
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    PunchPolicy:
      type: object
      properties:
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    PayPolicy:
      type: object
      properties:
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    PayHolidayGroup:
      type: object
      properties:
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmployeeGroup:
      type: object
      properties:
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    EntitlementPolicy:
      type: object
      properties:
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    ShiftRotation:
      type: object
      properties:
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    TimeOffPolicy:
      type: object
      properties:
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    ShiftTradePolicy:
      type: object
      properties:
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    AttendancePolicy:
      type: object
      properties:
        TrackingBasedOn:
          type: integer
          format: int32
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmployeeSchedulePolicy:
      type: object
      properties:
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmployeeOvertimeGroup:
      type: object
      properties:
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    PayrollPolicy:
      type: object
      properties:
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    JobStepPolicy:
      type: object
      properties:
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmploymentStatusReason:
      type: object
      properties:
        IsCompChangeReason:
          type: boolean
        IsLeaveReason:
          type: boolean
        IsPositionChangeReason:
          type: boolean
        IsTerminationReason:
          type: boolean
        IsVoluntaryReason:
          type: boolean
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    DEUHoursChangeReason:
      type: object
      properties:
        ITSGCode:
          type: string
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    ScheduleChangePolicy:
      type: object
      properties:
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    AuthorizationPolicy:
      type: object
      properties:
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    WorkContractPremiumPolicy:
      type: object
      properties:
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    Position:
      type: object
      properties:
        AverageDailyHours:
          type: number
          format: double
        ClockTransferCode:
          type: string
        Department:
          $ref: '#/components/schemas/Department'
        Job:
          $ref: '#/components/schemas/Job'
        EffectiveStart:
          type: string
          format: date-time
        EffectiveEnd:
          type: string
          format: date-time
        EmploymentIndicator:
          $ref: '#/components/schemas/EmploymentIndicator'
        Executive:
          type: boolean
        FTE:
          type: number
          format: double
        IsNonService:
          type: boolean
        IsWCBExempt:
          type: boolean
        LedgerCode:
          type: string
        Officer:
          type: boolean
        PayClass:
          $ref: '#/components/schemas/PayClass'
        PayGroup:
          $ref: '#/components/schemas/PayGroup'
        PayType:
          $ref: '#/components/schemas/PayType'
        PositionTerm:
          $ref: '#/components/schemas/PositionTerm'
        PPACAFullTime:
          type: boolean
        SemiMonthlyBottomHours:
          type: number
          format: double
        SemiMonthlyTopHours:
          type: number
          format: double
        StandardCostRate:
          type: number
          format: double
        WeeklyHours:
          type: number
          format: double
        DefaultTargetBonus:
          type: number
          format: double
        PositionAssignments:
          $ref: '#/components/schemas/PositionAssignmentCollection'
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmploymentIndicator:
      type: object
      properties:
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    JobSetLevel:
      type: object
      properties:
        JobSet:
          $ref: '#/components/schemas/JobSet'
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    PositionTerm:
      type: object
      properties:
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    BankAccountBranchAddress:
      type: object
      properties:
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    WorkLocationOverride:
      type: object
      properties:
        County:
          type: string
        Description:
          type: string
        LocationName:
          type: string
        LocationAddress:
          $ref: '#/components/schemas/LocationAddress'
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    TipTypeGroup:
      type: object
      properties:
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    PMPositionAssignment:
      type: object
      properties:
        PositionAssignmentGlobalId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        EffectiveStart:
          type: string
          format: date-time
        EffectiveEnd:
          type: string
          format: date-time
        IsPrimary:
          type: boolean
        PMPosition:
          $ref: '#/components/schemas/PMPosition'
        LastModifiedTimestamp:
          type: string
          format: date-time
    JobClassificationGlobal:
      type: object
      properties:
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    ContactInformationType:
      type: object
      properties:
        ContactInformationTypeGroup:
          $ref: '#/components/schemas/ContactInformationTypeGroup'
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    State:
      type: object
      properties:
        Name:
          type: string
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    Role:
      type: object
      properties:
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    PayGrade:
      type: object
      properties:
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    MaritalStatus:
      type: object
      properties:
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmployeeLocationAuthorityCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeLocationAuthority'
    Course:
      type: object
      properties:
        CourseCode:
          type: string
        CourseType:
          $ref: '#/components/schemas/CourseType'
        CourseProvider:
          $ref: '#/components/schemas/CourseProvider'
        EffectiveStart:
          type: string
          format: date-time
        EffectiveEnd:
          type: string
          format: date-time
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    LMSEnrollmentStatus:
      type: object
      properties:
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    VolunteerList:
      type: object
      properties:
        EffectiveStart:
          type: string
          format: date-time
        EffectiveEnd:
          type: string
          format: date-time
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmployeeHRIncidentNoteCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeHRIncidentNote'
    OrgUnitDetailConfiguration:
      type: object
      properties:
        EffectiveStart:
          type: string
          format: date-time
        EffectiveEnd:
          type: string
          format: date-time
        Address:
          $ref: '#/components/schemas/Address'
        TaxLocationAddress:
          $ref: '#/components/schemas/LocationAddress'
        ChildSortOrder:
          type: integer
          format: int32
        IsPhysicalLocation:
          type: boolean
        IsPrimary:
          type: boolean
        LedgerCode:
          type: string
        ParentSortOrder:
          type: integer
          format: int32
        OrgLevel:
          $ref: '#/components/schemas/OrgLevel'
        Timezone:
          $ref: '#/components/schemas/TimeZone'
        OrgUnitParent:
          $ref: '#/components/schemas/OrgUnitParent'
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    HRIncidentAction:
      type: object
      properties:
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    HRIncidentType:
      type: object
      properties:
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    SafetyHealthType:
      type: object
      properties:
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    HRIncidentInjury:
      type: object
      properties:
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    HRIncidentBodyPart:
      type: object
      properties:
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    Skill:
      type: object
      properties:
        SkillType:
          $ref: '#/components/schemas/SkillType'
        SkillLevel:
          type: array
          items:
            $ref: '#/components/schemas/SkillLevel'
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    SkillLevel:
      type: object
      properties:
        RankOrder:
          type: integer
          format: int32
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    TrainingProgram:
      type: object
      properties:
        TrainingProgramCode:
          type: string
        TrainingProgramCourse:
          type: array
          items:
            $ref: '#/components/schemas/TrainingProgramCourse'
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    LMSAssignmentMethod:
      type: object
      properties:
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    DFUnion:
      type: object
      properties:
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmploymentTypeConfig:
      type: object
      properties:
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    PensionTypeConfiguration:
      type: object
      properties:
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    PayMethod:
      type: object
      properties:
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    FinancialInstitution:
      type: object
      properties:
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    PRSIClass:
      type: object
      properties:
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    PRSIExemptReason:
      type: object
      properties:
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    FederalFilingStatus:
      type: object
      properties:
        CountryCode:
          type: string
        FederalFilingStatusCode:
          type: string
        CalculationCode:
          type: string
        PayrollOutput:
          type: string
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    TFNExemptionReason:
      type: object
      properties:
        PayrollShortName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
    PRTaxResidentCode:
      type: object
      properties:
        XRefCode:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
        ShortName:
          type: string
        LongName:
          type: string
    MedicareLevyExemptionType:
      type: object
      properties:
        LastModifiedTimestamp:
          type: string
          format: date-time
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
    WithholdingVariationType:
      type: object
      properties:
        LastModifiedTimestamp:
          type: string
          format: date-time
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
    WithholdingVariationAmountType:
      type: object
      properties:
        LastModifiedTimestamp:
          type: string
          format: date-time
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
    PREarningAccumulator:
      type: object
      properties:
        LastModifiedTimestamp:
          type: string
          format: date-time
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
    AdditionalTaxType:
      type: object
      properties:
        LastModifiedTimestamp:
          type: string
          format: date-time
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
    EmployeePayrollTaxName:
      type: object
      properties:
        TaxName:
          type: string
        Description:
          type: string
    EmployeePayrollTaxParameterElement:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/EmployeePayrollTaxParameterElementName'
        Value:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    StateFilingStatus:
      type: object
      properties:
        CountryCode:
          type: string
        StateCode:
          type: string
        StateFilingStatusCode:
          type: string
        CalculationCode:
          type: string
        PayrollOutput:
          type: string
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    RelationshipType:
      type: object
      properties:
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmergencyContactPersonAddressCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmergencyContactPersonAddress'
    EmergencyContactPersonContactCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmergencyContactPersonContact'
    DFEthnicity:
      type: object
      properties:
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    DisabilityEvidenceIssuingAgency:
      type: object
      properties:
        DisabilityEvidenceIssuingAgencyId:
          type: integer
          format: int32
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    DisabilityEvidenceType:
      type: object
      properties:
        DisabilityEvidenceTypeId:
          type: integer
          format: int32
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    DisabilityWorkingTime:
      type: object
      properties:
        DisabilityWorkingTimeId:
          type: integer
          format: int32
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    DisabilityGroup:
      type: object
      properties:
        DisabilityGroupId:
          type: integer
          format: int32
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    DFVeteransStatus:
      type: object
      properties:
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    PRGLSplitSetDetailCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/PRGLSplitSetDetail'
    EmployeeProperty:
      type: object
      properties:
        DataType:
          type: integer
          format: int32
        EmployeeCardinality:
          type: integer
          format: int32
        IsEditable:
          type: boolean
        DataTypeParam:
          type: string
        GenerateHREvent:
          type: boolean
        Sequence:
          type: integer
          format: int32
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmployeePropertyOption:
      type: object
      properties:
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    GlobalProperty:
      type: object
      properties:
        DataType:
          type: integer
          format: int32
        EmployeeCardinality:
          type: integer
          format: int32
        IsEditable:
          type: boolean
        DataTypeParam:
          type: string
        GenerateHREvent:
          type: boolean
        Sequence:
          type: integer
          format: int32
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    GlobalPropertyOption:
      type: object
      properties:
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    PayAdjCode:
      type: object
      properties:
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    Project:
      type: object
      properties:
        LedgerCode:
          type: string
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    Docket:
      type: object
      properties:
        LedgerCode:
          type: string
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmployeeDefaultLaborMetricsCodeCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeDefaultLaborMetricsCode'
    DocMgmtSecurityGroup:
      type: object
      properties:
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    ClockDeviceGroup:
      type: object
      properties:
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    PayAdjCodeGroup:
      type: object
      properties:
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    WorkContract:
      type: object
      properties:
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmployeeWorkPatternCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeWorkPattern'
    PerformanceCycle:
      type: object
      properties:
        CycleStartDate:
          type: string
          format: date-time
        CycleEndDate:
          type: string
          format: date-time
        EffectiveStart:
          type: string
          format: date-time
        EffectiveEnd:
          type: string
          format: date-time
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    PFRatingScale:
      type: object
      properties:
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    PerformanceRating:
      type: object
      properties:
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    BaseEmployeeSubset:
      type: object
      properties:
        XRefCode:
          type: string
        NewXRefCode:
          type: string
        CommonName:
          type: string
        DisplayName:
          type: string
        FirstName:
          type: string
        LastName:
          type: string
        Initials:
          type: string
        MaidenName:
          type: string
        MiddleName:
          type: string
        PreferredLastName:
          type: string
        SecondLastName:
          type: string
        Suffix:
          type: string
        Title:
          type: string
        PreviousLastName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    TaxPropertyCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/TaxProperty'
    ConfidentialIdentificationType:
      type: object
      properties:
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    LMSCertification:
      type: object
      properties:
        EffectiveEnd:
          type: string
          format: date-time
        ExpirationUnit:
          type: string
        ExpirationValue:
          type: integer
          format: int32
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    LMSCertificationStatus:
      type: object
      properties:
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmploymentAgreementType:
      type: object
      properties:
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmploymentAgreementPopulation:
      type: object
      properties:
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmploymentAgreementDetails:
      type: object
      properties:
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmploymentAgreementTaxRegime:
      type: object
      properties:
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmploymentAgreementDuration:
      type: object
      properties:
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmploymentAgreementSettlement:
      type: object
      properties:
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    HRPolicy:
      type: object
      properties:
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    AuthorityType:
      type: object
      properties:
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    AssignedSexCountryAware:
      type: object
      properties:
        AssignedSexComplianceCode:
          $ref: '#/components/schemas/AssignedSexComplianceCode'
        UserDefinedComplianceCode:
          type: string
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    GenderIdentityCountryAware:
      type: object
      properties:
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    OnboardingPolicy:
      type: object
      properties:
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    PayGroupBrief:
      type: object
      properties:
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    Earning:
      type: object
      properties:
        CalculationType:
          $ref: '#/components/schemas/CalculationType'
        CreditJournalNumber:
          type: string
        DebitJournalNumber:
          type: string
        DisplayName:
          type: string
        EarningCode:
          $ref: '#/components/schemas/EarningCode'
        IsDecliningBalance:
          type: boolean
        IsGenerated:
          type: boolean
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    ElectionSchedule:
      type: object
      properties:
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmployeeEarningParameterCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeEarningParameter'
    EmployeeEarningLimitCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeEarningLimit'
    Deduction:
      type: object
      properties:
        CalculationType:
          $ref: '#/components/schemas/CalculationType'
        DeductionCode:
          $ref: '#/components/schemas/DeductionCode'
        DeductionType:
          $ref: '#/components/schemas/DeductionType'
        DisplayName:
          type: string
        DebitJournalNumber:
          type: string
        CreditJournalNumber:
          type: string
        IsDecliningBalance:
          type: boolean
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmployeeDeductionParameterCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeDeductionParameter'
    EmployeeDeductionLimitCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeDeductionLimit'
    EmployeeDependentsBeneficiariesAddressCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeDependentsBeneficiariesAddress'
    EmployeeDependentsBeneficiariesContactCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeDependentsBeneficiariesContact'
    PayrollPayeeInfo:
      type: object
      properties:
        IsActive:
          type: boolean
        IsDeductionPayee:
          type: boolean
        ABN:
          type: string
        USI:
          type: string
        ESA:
          type: string
        AddressLine1:
          type: string
        AddressLine2:
          type: string
        AddressLine3:
          type: string
        City:
          type: string
        State:
          type: string
        PostalCode:
          type: string
        CountryCode:
          type: string
        Category:
          $ref: '#/components/schemas/PayrollPayeeCategory'
        PaymentMethod:
          $ref: '#/components/schemas/PayrollPaymentMethod'
        AccountNumber:
          type: string
        BSBCode:
          type: string
        CombineEmployees:
          type: boolean
        CombineEarningsandDeductions:
          type: boolean
        ShowEmployeeDetails:
          type: boolean
        AllowNegativeAmounts:
          type: boolean
        LastModifiedTimestamp:
          type: string
          format: date-time
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
    PayrollDeduction:
      type: object
      properties:
        LastModifiedTimestamp:
          type: string
          format: date-time
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
    SuperannuationContributionType:
      type: object
      properties:
        LastModifiedTimestamp:
          type: string
          format: date-time
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
    SuperannuationType:
      type: object
      properties:
        LastModifiedTimestamp:
          type: string
          format: date-time
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
    SuperannuationContributionCalculationType:
      type: object
      properties:
        LastModifiedTimestamp:
          type: string
          format: date-time
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
    DEUSTWParticipationReason:
      type: object
      properties:
        DEUSTWParticipationReasonId:
          type: integer
          format: int32
        ShortName:
          type: string
        LongName:
          type: string
        XRefCode:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    LegalEntityDEUShortTimeWork:
      type: object
      properties:
        LegalEntityDEUShortTimeWorkID:
          type: integer
          format: int32
        StoppageNumber:
          type: string
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmployeeOccupationalPension:
      type: object
      properties:
        PensionStartDate:
          type: string
          format: date-time
        PensionProviderXrefCode:
          type: string
        PaymentCompletedBy:
          type: string
        MembershipNumber:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmployeePrivateHealthInsurance:
      type: object
      properties:
        HealthInsuranceStartDate:
          type: string
          format: date-time
        PrivateHealthInsuranceXrefCode:
          type: string
        PaymentCompletedByXrefCode:
          type: string
        TotalContributionHealth:
          type: number
          format: double
        TotalContributionCare:
          type: number
          format: double
        BaseContributionHealth:
          type: number
          format: double
        BaseContributionCare:
          type: number
          format: double
        LastModifiedTimestamp:
          type: string
          format: date-time
    DEUEmployeeAccidentInsuranceHazardCategoryCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/AccidentInsuranceHazardCategory'
    AmfValidationModel:
      type: object
      properties:
        Type:
          type: string
        Value:
          type: object
    PredefinedValue:
      type: object
      properties:
        XRefCode:
          type: string
          readOnly: true
        FriendlyName:
          type: string
          readOnly: true
    AmfAuthorize:
      type: object
      properties:
        Tags:
          type: array
          items:
            type: string
    AmfCfg:
      type: object
      properties:
        Type:
          type: string
        Model:
          type: string
        Module:
          type: string
        AppView:
          type: string
    AmfEnumFrom:
      type: object
      properties:
        Criteria:
          type: object
        Model:
          type: string
        Module:
          type: string
        AppView:
          type: string
    ContextLevel:
      type: object
      properties:
        Level:
          type: string
        LevelValue:
          type: string
    MetadataModelCollection:
      type: object
      properties:
        MetadataModel:
          $ref: '#/components/schemas/MetadataModel'
        Id:
          type: string
        Title:
          type: string
        ShortDescription:
          type: string
        LongDescription:
          type: string
        MetadataId:
          type: string
        DbTable:
          type: string
        Name:
          type: string
        Mappings:
          type: object
          additionalProperties:
            type: string
        IsExtended:
          type: boolean
        IsCommon:
          type: boolean
        GeoContext:
          $ref: '#/components/schemas/ContextLevel'
        SchemaName:
          type: string
        ApplicationMapping:
          type: string
          readOnly: true
        DayforcePropertyName:
          type: string
          readOnly: true
    AmfOnCUDActionModel:
      type: object
      properties:
        Type:
          type: string
        Action:
          enum:
            - 0
            - 1
            - 2
          type: integer
          format: int32
        Location:
          type: string
        Value:
          type: object
        Params:
          type: object
    AmfRuleModel:
      type: object
      properties:
        WorkflowName:
          type: string
        FunctionName:
          type: string
        Parameters:
          type: array
          items:
            $ref: '#/components/schemas/AmfRuleParameterModel'
    LegalEntityWorkSiteState:
      type: object
      properties:
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    LegalEntityMasterBankAccountSetting:
      type: object
      properties:
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    OrgLocationType:
      type: object
      properties:
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    PayFrequency:
      type: object
      properties:
        PayFrequencyType:
          type: string
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    PayClassGroup:
      type: object
      properties:
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    PayClassFrequency:
      type: object
      properties:
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    Job:
      type: object
      properties:
        EmployeeEEO:
          $ref: '#/components/schemas/EmployeeEEO'
        IsUnionJob:
          type: boolean
        JobQualifications:
          type: string
        JobRank:
          type: integer
          format: int32
        JobSOC:
          $ref: '#/components/schemas/JobSOC'
        JobUDFString1:
          type: string
        JobUDFString2:
          type: string
        JobUDFString3:
          type: string
        LedgerCode:
          type: string
        NOC:
          type: string
        JobClassification:
          $ref: '#/components/schemas/JobClassification'
        JobFunction:
          $ref: '#/components/schemas/JobFunction'
        PayGrade:
          $ref: '#/components/schemas/PayGrade'
        Union:
          $ref: '#/components/schemas/DFUnion'
        EffectiveEnd:
          type: string
          format: date-time
        EffectiveStart:
          type: string
          format: date-time
        FLSAStatus:
          $ref: '#/components/schemas/FLSAStatus'
        JobFamily:
          $ref: '#/components/schemas/JobFamily'
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    PositionAssignmentCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/PositionAssignment'
    JobSet:
      type: object
      properties:
        Grade:
          type: integer
          format: int32
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    LocationAddress:
      type: object
      properties:
        Address1:
          type: string
        Address2:
          type: string
        PostalCode:
          type: string
        State:
          $ref: '#/components/schemas/State'
        Country:
          $ref: '#/components/schemas/Country'
        City:
          type: string
        County:
          type: string
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    PMPosition:
      type: object
      properties:
        PositionGlobalId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        EffectiveStart:
          type: string
          format: date-time
        EffectiveEnd:
          type: string
          format: date-time
        LedgerCode:
          type: string
        Number:
          type: string
        FTE:
          type: number
          format: double
        BusinessUnit:
          $ref: '#/components/schemas/BusinessUnit'
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    ContactInformationTypeGroup:
      type: object
      properties:
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmployeeLocationAuthority:
      type: object
      properties:
        EffectiveStart:
          type: string
          format: date-time
        EffectiveEnd:
          type: string
          format: date-time
        AuthorityType:
          $ref: '#/components/schemas/AuthorityType'
        LastModifiedTimestamp:
          type: string
          format: date-time
    CourseType:
      type: object
      properties:
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    CourseProvider:
      type: object
      properties:
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmployeeHRIncidentNote:
      type: object
      properties:
        DateAdded:
          type: string
          format: date-time
        Notes:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    SkillType:
      type: object
      properties:
        IsWFM:
          type: boolean
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    TrainingProgramCourse:
      type: object
      properties:
        Course:
          $ref: '#/components/schemas/Course'
        EffectiveStart:
          type: string
          format: date-time
        EffectiveEnd:
          type: string
          format: date-time
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmployeePayrollTaxParameterElementName:
      type: object
      properties:
        ShortName:
          type: string
        LongName:
          type: string
        XRefCode:
          type: string
    EmergencyContactPersonAddress:
      type: object
      properties:
        Address1:
          type: string
        Address2:
          type: string
        Address3:
          type: string
        Address4:
          type: string
        Address5:
          type: string
        Address6:
          type: string
        County:
          type: string
        City:
          type: string
        PostalCode:
          type: string
        Country:
          $ref: '#/components/schemas/Country'
        State:
          $ref: '#/components/schemas/State'
        EffectiveStart:
          type: string
          format: date-time
        EffectiveEnd:
          type: string
          format: date-time
        ContactInformationType:
          $ref: '#/components/schemas/ContactInformationType'
        IsPayrollMailing:
          type: boolean
        DisplayOnTaxForm:
          type: boolean
        DisplayOnEarningStatement:
          type: boolean
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmergencyContactPersonContact:
      type: object
      properties:
        ContactNumber:
          type: string
        Country:
          $ref: '#/components/schemas/Country'
        ElectronicAddress:
          type: string
        Extension:
          type: string
        EffectiveStart:
          type: string
          format: date-time
        EffectiveEnd:
          type: string
          format: date-time
        ContactInformationType:
          $ref: '#/components/schemas/ContactInformationType'
        IsForSystemCommunications:
          type: boolean
        IsPreferredContactMethod:
          type: boolean
        IsUnlistedNumber:
          type: boolean
        FormattedNumber:
          type: string
        IsVerified:
          type: boolean
        IsRejected:
          type: boolean
        ShowRejectedWarning:
          type: boolean
        NumberOfVerificationRequests:
          type: integer
          format: int32
        LastModifiedTimestamp:
          type: string
          format: date-time
    PRGLSplitSetDetail:
      type: object
      properties:
        LaborPercentage:
          type: number
          format: double
        IsPrimary:
          type: boolean
        PRGLSplitSetDetailMetricCodes:
          $ref: '#/components/schemas/PRGLSplitSetDetailMetricCodeCollection'
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmployeeDefaultLaborMetricsCode:
      type: object
      properties:
        LaborMetricsCode:
          $ref: '#/components/schemas/LaborMetricsCode'
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmployeeWorkPattern:
      type: object
      properties:
        NetHours:
          type: number
          format: double
        ShiftTimeBegin:
          type: string
          format: date-time
        ShiftTimeEnd:
          type: string
          format: date-time
        WorkPatternDayIndex:
          type: integer
          format: int32
        Deparment:
          $ref: '#/components/schemas/Department'
        Job:
          $ref: '#/components/schemas/Job'
        ShiftType:
          $ref: '#/components/schemas/WorkPatternShiftType'
        Location:
          $ref: '#/components/schemas/Location'
        OrgLocationType:
          $ref: '#/components/schemas/OrgLocationType'
        LastModifiedTimestamp:
          type: string
          format: date-time
    TaxProperty:
      type: object
      properties:
        PropertyCodeName:
          type: string
        PropertyValue:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    AssignedSexComplianceCode:
      type: object
      properties:
        ComplianceCode:
          type: string
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    CalculationType:
      type: object
      properties:
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    EarningCode:
      type: object
      properties:
        EarningType:
          $ref: '#/components/schemas/EarningType'
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmployeeEarningParameter:
      type: object
      properties:
        EarningParameter:
          $ref: '#/components/schemas/EarningParameter'
        Value:
          type: number
          format: double
        PayGroupValue:
          type: number
          format: double
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmployeeEarningLimit:
      type: object
      properties:
        EarningLimit:
          $ref: '#/components/schemas/EarningLimit'
        LimitAmount:
          type: number
          format: double
        LimitPercent:
          type: number
          format: double
        PayGroupLimitAmount:
          type: number
          format: double
        PayGroupLimitPercent:
          type: number
          format: double
        LastModifiedTimestamp:
          type: string
          format: date-time
    DeductionCode:
      type: object
      properties:
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    DeductionType:
      type: object
      properties:
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmployeeDeductionParameter:
      type: object
      properties:
        DeductionParameter:
          $ref: '#/components/schemas/DeductionParameter'
        Value:
          type: number
          format: double
        PayGroupValue:
          type: number
          format: double
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmployeeDeductionLimit:
      type: object
      properties:
        DeductionLimit:
          $ref: '#/components/schemas/DeductionLimit'
        LimitAmount:
          type: number
          format: double
        LimitPercent:
          type: number
          format: double
        PayGroupLimitAmount:
          type: number
          format: double
        PayGroupLimitPercent:
          type: number
          format: double
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmployeeDependentsBeneficiariesAddress:
      type: object
      properties:
        County:
          type: string
        ContactInformationType:
          $ref: '#/components/schemas/ContactInformationType'
        EffectiveStart:
          type: string
          format: date-time
        EffectiveEnd:
          type: string
          format: date-time
        Address1:
          type: string
        Address2:
          type: string
        Address3:
          type: string
        Address4:
          type: string
        Address5:
          type: string
        Address6:
          type: string
        City:
          type: string
        PostalCode:
          type: string
        Country:
          $ref: '#/components/schemas/Country'
        State:
          $ref: '#/components/schemas/State'
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmployeeDependentsBeneficiariesContact:
      type: object
      properties:
        ContactNumber:
          type: string
        Extension:
          type: string
        IsUnlistedNumber:
          type: boolean
        EffectiveStart:
          type: string
          format: date-time
        EffectiveEnd:
          type: string
          format: date-time
        ContactInformationType:
          $ref: '#/components/schemas/ContactInformationType'
        Country:
          $ref: '#/components/schemas/Country'
        LastModifiedTimestamp:
          type: string
          format: date-time
    PayrollPayeeCategory:
      type: object
      properties:
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    PayrollPaymentMethod:
      type: object
      properties:
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    AccidentInsuranceHazardCategory:
      type: object
      properties:
        PRDEUAccidentInsuranceProvider_BBNR_UV:
          type: string
        CategoryNumber:
          type: string
        Percentage:
          type: integer
          format: int32
    AmfRuleParameterModel:
      type: object
      properties:
        AccessType:
          type: string
        DataType:
          type: string
        Value:
          type: object
        InputName:
          type: string
        InnerParameter:
          $ref: '#/components/schemas/AmfRuleParameterModel'
    EmployeeEEO:
      type: object
      properties:
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    JobSOC:
      type: object
      properties:
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    JobClassification:
      type: object
      properties:
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    JobFunction:
      type: object
      properties:
        Level:
          type: integer
          format: int32
        UsableForExternalPosting:
          type: boolean
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    FLSAStatus:
      type: object
      properties:
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    JobFamily:
      type: object
      properties:
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    PositionAssignment:
      type: object
      properties:
        Location:
          $ref: '#/components/schemas/Location'
        BudgetedHeadCount:
          type: number
          format: double
        EffectiveEnd:
          type: string
          format: date-time
        EffectiveStart:
          type: string
          format: date-time
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    BusinessUnit:
      type: object
      properties:
        BusinessUnitGlobalId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        EffectiveStart:
          type: string
          format: date-time
        EffectiveEnd:
          type: string
          format: date-time
        LedgerCode:
          type: string
        BusinessUnitParents:
          type: array
          items:
            $ref: '#/components/schemas/BusinessUnitParentAssignment'
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    PRGLSplitSetDetailMetricCodeCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/PRGLSplitSetDetailMetricCode'
    LaborMetricsCode:
      type: object
      properties:
        LaborMetricsType:
          $ref: '#/components/schemas/LaborMetricsType'
        ClockTransferCode:
          type: string
        LedgerCode:
          type: string
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    WorkPatternShiftType:
      type: object
      properties:
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    EarningType:
      type: object
      properties:
        CodeName:
          type: string
        IsGLAllocatedDebit:
          type: boolean
        IsGLAllocatedCredit:
          type: boolean
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    EarningParameter:
      type: object
      properties:
        CodeName:
          type: string
        ParameterAccessType:
          $ref: '#/components/schemas/ParameterAccessType'
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    EarningLimit:
      type: object
      properties:
        LimitAccessType:
          $ref: '#/components/schemas/LimitAccessType'
        AccumulationType:
          $ref: '#/components/schemas/AccumulationType'
        LimitType:
          $ref: '#/components/schemas/LimitType'
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    DeductionParameter:
      type: object
      properties:
        ParameterAccessType:
          $ref: '#/components/schemas/ParameterAccessType'
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    DeductionLimit:
      type: object
      properties:
        LimitAccessType:
          $ref: '#/components/schemas/LimitAccessType'
        AccumulationType:
          $ref: '#/components/schemas/AccumulationType'
        LimitType:
          $ref: '#/components/schemas/LimitType'
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    BusinessUnitParentAssignment:
      type: object
      properties:
        BusinessUnitGlobalId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    PRGLSplitSetDetailMetricCode:
      type: object
      properties:
        LaborMetricsCode:
          $ref: '#/components/schemas/LaborMetricsCode'
        LastModifiedTimestamp:
          type: string
          format: date-time
    LaborMetricsType:
      type: object
      properties:
        ClockTransferCode:
          type: string
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    ParameterAccessType:
      type: object
      properties:
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    LimitAccessType:
      type: object
      properties:
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    AccumulationType:
      type: object
      properties:
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    LimitType:
      type: object
      properties:
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    Payload_IEnumerable_AnalyticsReportDefinitions:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/AnalyticsReportDefinitions'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    AnalyticsReportDefinitions:
      type: object
      properties:
        ReportId:
          type: string
          description: Feature Id for the Report.
        Name:
          type: string
          description: "Name of the Report.\r\nThe name will be localized, based on the Session Culture."
        Description:
          type: string
          description: "Description of the Report.\r\nThe description will be localized, based on the Session Culture."
    Payload_IEnumerable_Object:
      type: object
      properties:
        Data:
          type: array
          items:
            type: object
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    Payload_AnalyticsReportDataset:
      type: object
      properties:
        Data:
          $ref: '#/components/schemas/AnalyticsReportDataset'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    AnalyticsReportDataset:
      type: object
      properties:
        Dataset:
          type: object
    AnalyticsReportMetadata:
      type: object
      properties:
        Name:
          type: string
          description: "Name of the Report.\r\nThe name will be localized, based on the Session Culture."
        Description:
          type: string
          description: "Description of the Report.\r\nThe description will be localized, based on the Session Culture."
        XRefCode:
          type: string
          description: "Reference Code for the Report.\r\nThis is a unique, human readable, code used to identify the Report."
        ReportId:
          type: integer
          description: FeatureId of the report
          format: int32
        MaxRows:
          type: integer
          description: Maximum number of rows the Report will return as part of it's ResultSet.
          format: int32
        OnlyIncludeUniqueRecords:
          type: boolean
          description: ''
        Columns:
          type: array
          items:
            $ref: '#/components/schemas/AnalyticsReportColumnMetadata'
          description: An array of ReportColumnMetadata objects.
        Filters:
          type: array
          items:
            $ref: '#/components/schemas/AnalyticsReportFilterMetadata'
          description: An array of AnalyticsParameterMetadata objects.
    AnalyticsReportColumnMetadata:
      type: object
      properties:
        Name:
          type: string
          description: "CodeName is a unique name that can be used with code\r\nto refer to this specific column.  Its value should be consistent."
        Description:
          type: string
          description: "This is a name as defined by a user when developing this report.  This name\r\nwould be a human facing name that would be used on a printed report.\r\nThis field is used as the key to the values dictionary"
        DataType:
          type: string
          description: This is a string representation of the data type.
      description: This class encapsulates the report data generated during the execution of the report.
    AnalyticsReportFilterMetadata:
      type: object
      properties:
        Name:
          type: string
          description: Name of the parameter.
        Description:
          type: string
          description: "Description of the Parameter.\r\nThe description will be localized, based on the Session Culture."
        DataType:
          type: string
          description: Data type of the parameter.
        Operator:
          type: string
          description: "Operator type of the parameter, such as =, &lt;, &gt;=, etc...\r\nNot all parameters have operator type.\r\nFor example, SQL Parameters don't have operators."
        IsRequired:
          type: boolean
          description: True if a value needs to be supplied.
        Value:
          type: string
          description: "Value that will be used.\r\nReference values should contain Ids and be comma separated. E.g \"1,2,3\""
        Editable:
          type: boolean
          description: True if the operator is editable
        Sequence:
          type: integer
          description: Sequence of the filter
          format: int32
        AvailableValues:
          type: array
          items:
            $ref: '#/components/schemas/AnalyticsListValue'
          description: List of available values a parameter can have.
      description: "Report meta data that defines report parameters.\r\nParameter values are supplied by the end-user for execution.\r\nAll parameters must be supplied during execution.\r\nNot all Parameters have default value."
    AnalyticsListValue:
      type: object
      properties:
        ListValueId:
          type: integer
          description: "The Id of the list item.  This value would be passed as the parameter value.\r\nMultiple Id's can be passed as a parameter value if comma separated."
          format: int32
        Name:
          type: string
          description: The name that can be displayed in a list to the user.
    Payload_AnalyticsDatasetMetadataResponse:
      type: object
      properties:
        Data:
          $ref: '#/components/schemas/AnalyticsDatasetMetadataResponse'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    AnalyticsDatasetMetadataResponse:
      type: object
      properties:
        Message:
          type: string
          description: Message returned to user
        DatasetId:
          type: string
          description: Dataset Id.
        Status:
          type: string
        RowCount:
          type: string
          description: Row count in the dataset.
        ReportId:
          type: integer
          description: Report Id.
          format: int32
        RefreshStatus:
          type: string
          description: RefreshStatus.
        Filters:
          type: string
          description: Report Filters
        Parameters:
          type: string
          description: Report Parameters
        CreatedDate:
          type: string
          description: Created Date of report
          format: date-time
        LastModifiedTimestamp:
          type: string
          description: Last modified timestamp of report
          format: date-time
        StartedTimestamp:
          type: string
          description: Started refresh Timestamp
          format: date-time
        EndedTimestamp:
          type: string
          description: Ended refresh Timestamp
          format: date-time
        DifferenceCount:
          type: integer
          description: Difference between report row counts
          format: int32
        TotalPages:
          type: integer
          description: Total number of pages for given dataset
          format: int32
    Payload_AnalyticsDatasetMetadata:
      type: object
      properties:
        Data:
          $ref: '#/components/schemas/AnalyticsDatasetMetadata'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    AnalyticsDatasetMetadata:
      type: object
      properties:
        DatasetId:
          type: string
          description: Dataset Id.
        Status:
          type: string
        RowCount:
          type: string
          description: Row count in the dataset.
        ReportId:
          type: integer
          description: Report Id.
          format: int32
        RefreshStatus:
          type: string
          description: RefreshStatus.
        Filters:
          type: string
          description: Report Filters
        Parameters:
          type: string
          description: Report Parameters
        CreatedDate:
          type: string
          description: Created Date of report
          format: date-time
        LastModifiedTimestamp:
          type: string
          description: Last modified timestamp of report
          format: date-time
        StartedTimestamp:
          type: string
          description: Started refresh Timestamp
          format: date-time
        EndedTimestamp:
          type: string
          description: Ended refresh Timestamp
          format: date-time
        DifferenceCount:
          type: integer
          description: Difference between report row counts
          format: int32
        TotalPages:
          type: integer
          description: Total number of pages for given dataset
          format: int32
    Payload_IEnumerable_AnalyticsReportMetadata:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/AnalyticsReportMetadata'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    Payload_AnalyticsReportMetadata:
      type: object
      properties:
        Data:
          $ref: '#/components/schemas/AnalyticsReportMetadata'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    Payload_IEnumerable_EmployeeSSOAccount:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeSSOAccount'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    Payload_SubordinateEntityReferences:
      type: object
      properties:
        Data:
          $ref: '#/components/schemas/SubordinateEntityReferences'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    SubordinateEntityReferences:
      type: object
      properties:
        EntityReferences:
          type: array
          items:
            type: string
    Payload_IEnumerable_EmployeeAvailability:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeAvailability'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    EmployeeAvailability:
      type: object
      properties:
        DateOfRequest:
          type: string
          format: date-time
        UnAvailable:
          type: boolean
        IsDefault:
          type: boolean
        StartTime1:
          type: string
        EndTime1:
          type: string
        StartTime2:
          type: string
        EndTime2:
          type: string
    EmployeeAvailabilityPostAPIRequestDTO:
      required:
        - IsDefault
        - EffectiveStart
        - EffectiveEnd
        - Weeks
      type: object
      properties:
        IsDefault:
          type: boolean
        EffectiveStart:
          type: string
          format: date-time
        EffectiveEnd:
          type: string
          format: date-time
        ManagerComments:
          type: string
        Weeks:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeAvailabilityWeeksPostRequestDTO'
    EmployeeAvailabilityWeeksPostRequestDTO:
      required:
        - Days
      type: object
      properties:
        Days:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeAvailabilityDaysPostRequestDTO'
    EmployeeAvailabilityDaysPostRequestDTO:
      required:
        - IsAvailable
      type: object
      properties:
        StartTime1:
          type: string
        EndTime1:
          type: string
        StartTime2:
          type: string
        EndTime2:
          type: string
        IsAvailable:
          type: boolean
    Payload_IEnumerable_ProcessResult:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    PaginatedPayload_IEnumerable_BackgroundJobLog:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/BackgroundJobLog'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
        Paging:
          $ref: '#/components/schemas/Paging'
    BackgroundJobLog:
      type: object
      properties:
        BackgroundJobLogId:
          type: integer
          format: int32
        BackgroundJobLogGuid:
          type: string
        Name:
          type: string
        CodeName:
          type: string
        Status:
          type: string
        WasScheduled:
          type: boolean
        HasItemLevelErrors:
          type: boolean
        QueueTimeUtc:
          type: string
          format: date-time
        ExecStartTimeUtc:
          type: string
          format: date-time
        ExecEndTimeUtc:
          type: string
          format: date-time
        SubmittedBy:
          type: string
        Parameters:
          type: array
          items:
            $ref: '#/components/schemas/BackgroundJobLogParameters'
        JobInformation:
          type: string
        ErrorInformation:
          type: string
        DebugInformation:
          type: string
        FileList:
          type: string
        LastModifiedTimestampUtc:
          type: string
          format: date-time
    BackgroundJobLogParameters:
      type: object
      properties:
        Name:
          type: string
        Value:
          type: string
    Payload_BackgroundJobLog:
      type: object
      properties:
        Data:
          $ref: '#/components/schemas/BackgroundJobLog'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    BackgroundScreeningStatus:
      type: object
      properties:
        ScreeningRequestId:
          type: string
        ScreeningStatus:
          type: string
        ScreeningResult:
          type: string
    BackgroundScreeningAdjudicationStatus:
      type: object
      properties:
        ScreeningRequestId:
          type: string
        AdjudicationStatus:
          type: string
    BackgroundScreeningPackage:
      type: object
      properties:
        ProviderReference:
          type: string
        Packages:
          type: array
          items:
            $ref: '#/components/schemas/BackgroundScreeningProviderPackage'
    BackgroundScreeningProviderPackage:
      type: object
      properties:
        PackageId:
          type: string
        Name:
          type: string
        Description:
          type: string
        IncludeRTW:
          type: boolean
        AssociatedBillingCodes:
          type: array
          items:
            $ref: '#/components/schemas/BackgroundScreeningAssociatedBillingCode'
    BackgroundScreeningAssociatedBillingCode:
      type: object
      properties:
        BillingCodeId:
          type: string
        Name:
          type: string
        Description:
          type: string
    BackgroundScreeningBillingCode:
      type: object
      properties:
        ProviderReference:
          type: string
        BillingCodes:
          type: array
          items:
            $ref: '#/components/schemas/BackgroundScreeningProviderBillingCode'
    BackgroundScreeningProviderBillingCode:
      type: object
      properties:
        BillingCodeId:
          type: string
        Name:
          type: string
        Description:
          type: string
        AssociatedPackages:
          type: array
          items:
            $ref: '#/components/schemas/BackgroundScreeningAssociatedPackage'
    BackgroundScreeningAssociatedPackage:
      type: object
      properties:
        PackageId:
          type: string
        Name:
          type: string
        Description:
          type: string
        IncludeRTW:
          type: boolean
    BackgroundScreeningProviderStatuses:
      type: object
      properties:
        ProviderReference:
          type: string
        OrderStatuses:
          type: array
          items:
            type: string
        AdjudicationStatuses:
          type: array
          items:
            type: string
        ResultStatuses:
          type: array
          items:
            type: string
    BackgroundScreeningStatusUrlReport:
      type: object
      properties:
        ScreeningRequestId:
          type: string
        Url:
          type: string
        ScreeningStatus:
          $ref: '#/components/schemas/BackgroundScreeningReportScreeningStatus'
        CandidatePII:
          $ref: '#/components/schemas/CandidatePersonalIdentifiableInformation'
        DetailedResults:
          type: array
          items:
            $ref: '#/components/schemas/CandidateScreeningDetailedResult'
        CandidateRightToWorkResults:
          $ref: '#/components/schemas/CandidateRightToWorkResult'
    BackgroundScreeningReportScreeningStatus:
      type: object
      properties:
        Status:
          type: string
        AdjudicationStatus:
          type: string
        Result:
          type: string
    CandidatePersonalIdentifiableInformation:
      type: object
      properties:
        DateOfBirth:
          type: string
        SocialSecurityNumber:
          type: string
        SocialInsuranceNumber:
          type: string
        DriverLicense:
          type: string
    CandidateScreeningDetailedResult:
      type: object
      properties:
        ReportIdentifier:
          type: string
        ScreeningType:
          type: string
        Status:
          type: string
        Result:
          type: string
        CompletionDate:
          type: string
          format: date-time
    CandidateRightToWorkResult:
      type: object
      properties:
        CandidateRightToWorkResultId:
          type: integer
          format: int32
        WorkRightStatus:
          type: string
        Status:
          type: string
        DateIssued:
          type: string
          format: date-time
        PartnerIdentifier:
          type: integer
          format: int32
        DateCompleted:
          type: string
          format: date-time
        WorkRightEffectiveStart:
          type: string
          format: date-time
        WorkRightEffectiveEnd:
          type: string
          format: date-time
        RejectionOrCancellationReasons:
          type: array
          items:
            $ref: '#/components/schemas/CandidateRTWRejectionReason'
        Documents:
          type: array
          items:
            $ref: '#/components/schemas/CandidateRTWDocument'
    CandidateRTWRejectionReason:
      type: object
      properties:
        ReasonCode:
          type: string
        ReasonDescription:
          type: string
    CandidateRTWDocument:
      type: object
      properties:
        CandidateRTWDocumentId:
          type: integer
          format: int32
        DocumentName:
          type: string
        DocumentExtension:
          type: string
        DateAdded:
          type: string
          format: date-time
        DateExpire:
          type: string
          format: date-time
        Type:
          type: string
        PathwayCode:
          type: string
        CountryCode:
          type: string
        Sources:
          $ref: '#/components/schemas/CandidateRTWDocumentSource'
        Details:
          type: array
          items:
            $ref: '#/components/schemas/CandidateRTWDocumentDetails'
        DocumentErrors:
          type: array
          items:
            $ref: '#/components/schemas/CandidateRTWDocumentGenericError'
    CandidateRTWDocumentSource:
      type: object
      properties:
        SingleDocumentBase64:
          type: string
        DocumentFrontBase64:
          type: string
        DocumentBackBase64:
          type: string
    CandidateRTWDocumentDetails:
      type: object
      properties:
        Name:
          type: string
        Value:
          type: string
    CandidateRTWDocumentGenericError:
      type: object
      properties:
        Code:
          type: string
        Message:
          type: string
    BackgroundScreeningReport:
      type: object
      properties:
        ScreeningRequestId:
          type: string
        CandidatePII:
          $ref: '#/components/schemas/CandidatePersonalIdentifiableInformation'
    Payload_CarrierFeeds:
      type: object
      properties:
        Data:
          $ref: '#/components/schemas/CarrierFeeds'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    CarrierFeeds:
      type: object
      properties:
        Header:
          $ref: '#/components/schemas/BenefitsDFLinkExportCarrierInfo'
        EmployeeRecords:
          type: array
          items:
            $ref: '#/components/schemas/BenefitsDFLinkExportRecord'
    BenefitsDFLinkExportCarrierInfo:
      type: object
      properties:
        RecordType:
          type: string
        FileFormatMajorVersion:
          type: string
        FileFormatMinorVersion:
          type: string
        CTCReceiverId:
          type: string
        CarrierName:
          type: string
        CarrierFEINNumber:
          type: string
        MasterPolicyNumber:
          type: string
        EmployerName:
          type: string
        EmployerFEINNumber:
          type: string
        EmployerDivisionNumber:
          type: string
        PlanStartDate:
          type: string
          format: date-time
        CreateDate:
          type: string
          format: date-time
        ClientId:
          type: string
        CorrelationId:
          type: string
    BenefitsDFLinkExportRecord:
      type: object
      properties:
        EmployeeDetails:
          $ref: '#/components/schemas/BenefitsDFLinkExportEmployeeRecord'
        AddressDetails:
          type: array
          items:
            $ref: '#/components/schemas/BenefitsDFLinkExportAddress'
        PropertyDetails:
          type: array
          items:
            $ref: '#/components/schemas/BenefitsDFLinkExportProperty'
        OrgUnitDetails:
          type: array
          items:
            $ref: '#/components/schemas/BenefitsDFLinkExportOrgUnit'
        UnionMembershipDetails:
          type: array
          items:
            $ref: '#/components/schemas/BenefitsDFLinkExportUnionMembership'
        ContactDetails:
          type: array
          items:
            $ref: '#/components/schemas/BenefitsDFLinkExportContact'
        EmployeeElectionDetails:
          type: array
          items:
            $ref: '#/components/schemas/BenefitsDFLinkExportEmployeeElectionDetail'
        DependentDetails:
          type: array
          items:
            $ref: '#/components/schemas/BenefitsDFLinkExportDependentRecord'
        BeneficiaryDetails:
          type: array
          items:
            $ref: '#/components/schemas/BenefitsDFLinkExportBeneficiaryRecord'
        EarningGroupingResults:
          type: array
          items:
            $ref: '#/components/schemas/BenefitsDFLinkExportEarningGroupingResults'
        EarningGroupingCustomPeriodResults:
          type: array
          items:
            $ref: '#/components/schemas/BenefitsDFLinkExportEarningGroupingCustomPeriodResults'
    BenefitsDFLinkExportEmployeeRecord:
      type: object
      properties:
        RecordType:
          type: string
        FirstName:
          type: string
        MiddleName:
          type: string
        LastName:
          type: string
        NameSuffix:
          type: string
        NationalId:
          type: string
        NationalIDExpiryDate:
          type: string
          format: date-time
        XRefCode:
          type: string
        EmployeeNumber:
          type: string
        CultureCode:
          type: string
        Citizenship:
          type: string
        SeniorityDate:
          type: string
          format: date-time
        IsVisibleMinority:
          type: boolean
        IsAboriginal:
          type: boolean
        BadgeNumber:
          type: string
        EmploymentStatus:
          type: string
        EmploymentStatusReasonCode:
          type: string
        EmploymentStatusStartDate:
          type: string
          format: date-time
        EmploymentStatusEndDate:
          type: string
          format: date-time
        NormalWeeklyHours:
          type: number
          format: double
        NormalSemiMonthlyHoursTop:
          type: number
          format: double
        NormalSemiMonthlyHoursBottom:
          type: number
          format: double
        AverageDailyHours:
          type: number
          format: double
        BaseSalary:
          type: number
          format: double
        BaseRate:
          type: number
          format: double
        PayGroupCode:
          type: string
        EmployeeGroupCode:
          type: string
        PayTypeCode:
          type: string
        PayClassCode:
          type: string
        DateOfBirth:
          type: string
          format: date-time
        GenderCode:
          type: integer
          format: int32
        MaritalStatusCode:
          type: string
        IncomeFrequency:
          type: integer
          format: int32
        TobaccoSubstanceUse:
          type: boolean
        DateLastSmoked:
          type: string
          format: date-time
        TobaccoUseEffectiveStart:
          type: string
          format: date-time
        TobaccoUseEffectiveEnd:
          type: string
          format: date-time
        Height:
          type: integer
          format: int32
        Weight:
          type: integer
          format: int32
        DisabilityCode:
          type: boolean
        DisabilityBeginDate:
          type: string
          format: date-time
        DisabilityEndDate:
          type: string
          format: date-time
        DepartmentJobNameCode:
          type: string
        WorkAssignmentEffectiveStart:
          type: string
          format: date-time
        WorkAssignmentEffectiveEnd:
          type: string
          format: date-time
        EmploymentIndicatorCode:
          type: string
        VirtualIndicator:
          type: boolean
        PositionLedgerCode:
          type: string
        WorkedInState:
          type: string
        ManagerFirstName:
          type: string
        ManagerLastName:
          type: string
        ManagerEmail:
          type: string
        ManagerPhoneNumber:
          type: string
        PayRunCheckDate:
          type: string
          format: date-time
        PayPeriodStartDate:
          type: string
          format: date-time
        PayPeriodEndDate:
          type: string
          format: date-time
        PayFrequencyCode:
          type: integer
          format: int32
        Ethnicity:
          type: string
        MedicareStatus:
          type: integer
          format: int32
        MedicareReasonCode:
          type: integer
          format: int32
        OriginalHireDate:
          type: string
          format: date-time
        TerminationDate:
          type: string
          format: date-time
        HireDate:
          type: string
          format: date-time
        DateOfDeath:
          type: string
          format: date-time
        InitialNoticeFlag:
          type: boolean
        GenderIdentity:
          type: string
        Age:
          type: integer
          format: int32
    BenefitsDFLinkExportAddress:
      type: object
      properties:
        RecordType:
          type: string
        AddressType:
          type: string
        AddressLine1:
          type: string
        AddressLine2:
          type: string
        AddressLine3:
          type: string
        City:
          type: string
        County:
          type: string
        StateCode:
          type: string
        CountryCode:
          type: string
        PostalCode:
          type: string
        EffectiveStart:
          type: string
          format: date-time
        EffectiveEnd:
          type: string
          format: date-time
    BenefitsDFLinkExportProperty:
      type: object
      properties:
        RecordType:
          type: string
        PropertyTypeCode:
          type: string
        PropertyValue:
          type: string
        PropertyValueTypeCode:
          type: integer
          format: int32
        EffectiveStartDate:
          type: string
          format: date-time
        EffectiveEndDate:
          type: string
          format: date-time
    BenefitsDFLinkExportOrgUnit:
      type: object
      properties:
        RecordType:
          type: string
        OrgUnitName:
          type: string
        OrgLevelCode:
          type: string
        OrgUnitCode:
          type: string
        LegalEntity:
          type: string
        OrgUnitWorkSiteZipCode:
          type: string
        OrgUnitLedgerCode:
          type: string
    BenefitsDFLinkExportUnionMembership:
      type: object
      properties:
        RecordType:
          type: string
        UnionName:
          type: string
        UnionXrefCode:
          type: string
        MembershipEffectiveStartDate:
          type: string
          format: date-time
        MembershipDate:
          type: string
          format: date-time
    BenefitsDFLinkExportContact:
      type: object
      properties:
        RecordType:
          type: string
        ContactInformation:
          type: string
        CountryCode:
          type: string
        ContactInformationCategoryCode:
          type: integer
          format: int32
        ContactInformationType:
          type: string
    BenefitsDFLinkExportEmployeeElectionDetail:
      type: object
      properties:
        RecordType:
          type: string
        ElectionId:
          type: integer
          format: int32
        PlanTypeCode:
          type: string
        PlanSubTypeCode:
          type: string
        PlanXrefCode:
          type: string
        PlanCode:
          type: string
        PolicyNumber:
          type: string
        OptionCode:
          type: string
        CoverageStartDate:
          type: string
          format: date-time
        CoverageEndDate:
          type: string
          format: date-time
        EffectiveStartDate:
          type: string
          format: date-time
        EffectiveEndDate:
          type: string
          format: date-time
        EmployeePerPayCost:
          type: number
          format: double
        EmployeeDeductionScheduleCode:
          type: string
        EmployeeAnnualCost:
          type: number
          format: double
        EmployerPerPayCost:
          type: number
          format: double
        EmployerDeductionScheduleCode:
          type: string
        EmployerAnnualCost:
          type: number
          format: double
        CarrierPerPayCost:
          type: number
          format: double
        CarrierAnnualCost:
          type: number
          format: double
        EmployeeContributionAmount:
          type: number
          format: double
        EmployeeContributionPercentage:
          type: number
          format: double
        EmployerContributionAmount:
          type: number
          format: double
        EmployerContributionPercentage:
          type: number
          format: double
        CoverageAmount:
          type: number
          format: double
        CoverageMultiplier:
          type: number
          format: double
        RequestedCoverageAmount:
          type: number
          format: double
        PreAgeReducedCoverageAmount:
          type: number
          format: double
        EOIStatusCode:
          type: integer
          format: int32
        RateXrefCode:
          type: string
        PlanStartDate:
          type: string
          format: date-time
        ElectionDate:
          type: string
          format: date-time
        PlanEndDate:
          type: string
          format: date-time
        CareProviderDetails:
          type: array
          items:
            $ref: '#/components/schemas/BenefitsDFLinkExportCareProvider'
    BenefitsDFLinkExportDependentRecord:
      type: object
      properties:
        RecordType:
          type: string
        UniqueDependentId:
          type: integer
          format: int32
        EmployeeNationalId:
          type: string
        NationalId:
          type: string
        NationalIDExpiryDate:
          type: string
          format: date-time
        FirstName:
          type: string
        MiddleName:
          type: string
        LastName:
          type: string
        DateOfBirth:
          type: string
          format: date-time
        GenderCode:
          type: integer
          format: int32
        RelationshipCode:
          type: string
        MedicareStatusCode:
          type: integer
          format: int32
        MedicareReasonCode:
          type: integer
          format: int32
        StudentIndicator:
          type: boolean
        DependentHandicapIndicator:
          type: boolean
        DeathDate:
          type: string
          format: date-time
        EligibilityBeginDate:
          type: string
          format: date-time
        EligibilityEndDate:
          type: string
          format: date-time
        XRefCode:
          type: string
        TobaccoSubstanceUse:
          type: boolean
        DateLastSmoked:
          type: string
          format: date-time
        Height:
          type: integer
          format: int32
        Weight:
          type: integer
          format: int32
        InitialNoticeFlag:
          type: boolean
        SocialSecurityDisabilityAwardDate:
          type: string
          format: date-time
        DependentAge:
          type: integer
          format: int32
        AddressDetails:
          type: array
          items:
            $ref: '#/components/schemas/BenefitsDFLinkExportAddress'
        ContactDetails:
          type: array
          items:
            $ref: '#/components/schemas/BenefitsDFLinkExportContact'
        DependentElectionDetails:
          type: array
          items:
            $ref: '#/components/schemas/BenefitsDFLinkExportDependentElectionDetail'
    BenefitsDFLinkExportBeneficiaryRecord:
      type: object
      properties:
        RecordType:
          type: string
        UniqueBeneficiaryId:
          type: integer
          format: int32
        EmployeeNationalId:
          type: string
        NationalId:
          type: string
        NationalIDExpiryDate:
          type: string
          format: date-time
        FirstName:
          type: string
        MiddleName:
          type: string
        LastName:
          type: string
        DateOfBirth:
          type: string
          format: date-time
        GenderCode:
          type: integer
          format: int32
        RelationshipCode:
          type: string
        XRefCode:
          type: string
        HomePhoneNumber:
          type: string
        AddressDetails:
          type: array
          items:
            $ref: '#/components/schemas/BenefitsDFLinkExportAddress'
        ContactDetails:
          type: array
          items:
            $ref: '#/components/schemas/BenefitsDFLinkExportContact'
        BeneficiaryElectionDetails:
          type: array
          items:
            $ref: '#/components/schemas/BenefitsDFLinkExportBeneficiaryElectionDetail'
    BenefitsDFLinkExportEarningGroupingResults:
      type: object
      properties:
        RecordType:
          type: string
        LegalEntityReferenceCode:
          type: string
        EarningGroupingReferenceCode:
          type: string
        CurrentHours:
          type: number
          format: double
        MTDHours:
          type: number
          format: double
        QTDHours:
          type: number
          format: double
        YTDHours:
          type: number
          format: double
    BenefitsDFLinkExportEarningGroupingCustomPeriodResults:
      type: object
      properties:
        RecordType:
          type: string
        LegalEntityXrefCode:
          type: string
        EarningGroupingXrefCode:
          type: string
        CustomPeriodXrefCode:
          type: string
        Hours:
          type: number
          format: double
    BenefitsDFLinkExportCareProvider:
      type: object
      properties:
        RecordType:
          type: string
        ProviderIDQualifier:
          type: string
        ProviderId:
          type: string
        RelationshipCode:
          type: string
        EntityIDCode:
          type: string
    BenefitsDFLinkExportDependentElectionDetail:
      type: object
      properties:
        RecordType:
          type: string
        EmployeeElectionId:
          type: integer
          format: int32
        UniqueDependentId:
          type: integer
          format: int32
        PlanTypeCode:
          type: string
        PlanSubTypeCode:
          type: string
        PlanXrefCode:
          type: string
        PlanCode:
          type: string
        PolicyNumber:
          type: string
        OptionCode:
          type: string
        CoverageStartDate:
          type: string
          format: date-time
        CoverageEndDate:
          type: string
          format: date-time
        EffectiveStartDate:
          type: string
          format: date-time
        EffectiveEndDate:
          type: string
          format: date-time
        PlanStartDate:
          type: string
          format: date-time
        CareProviderDetails:
          type: array
          items:
            $ref: '#/components/schemas/BenefitsDFLinkExportCareProvider'
    BenefitsDFLinkExportBeneficiaryElectionDetail:
      type: object
      properties:
        RecordType:
          type: string
        UniqueBeneficiaryId:
          type: integer
          format: int32
        PlanTypeCode:
          type: string
        PlanSubTypeCode:
          type: string
        PlanXrefCode:
          type: string
        PlanCode:
          type: string
        PolicyNumber:
          type: string
        OptionCode:
          type: string
        CoverageStartDate:
          type: string
          format: date-time
        CoverageEndDate:
          type: string
          format: date-time
        BeneficiaryPercentage:
          type: number
          format: double
        ContingentBeneficiaryIndicator:
          type: boolean
        EffectiveStartDate:
          type: string
          format: date-time
        EffectiveEndDate:
          type: string
          format: date-time
        PlanStartDate:
          type: string
          format: date-time
    JobPostingApplicantModel:
      type: object
      properties:
        Locale:
          type: string
        AppliedOnMillis:
          type: integer
          format: int64
        Job:
          $ref: '#/components/schemas/JobPostingResponseModel'
        Applicant:
          $ref: '#/components/schemas/ApplicantDetails'
        Questions:
          $ref: '#/components/schemas/QuestionsInResponse'
        CandidateSource:
          $ref: '#/components/schemas/CandidateProfileSource'
    JobPostingResponseModel:
      type: object
      properties:
        JobId:
          type: string
        JobTitle:
          type: string
        JobCompany:
          type: string
        JobLocation:
          type: string
        JobUrl:
          type: string
        JobMeta:
          type: string
        JobRequisitionId:
          type: string
    ApplicantDetails:
      type: object
      properties:
        FullName:
          type: string
        FirstName:
          type: string
        LastName:
          type: string
        Email:
          type: string
        UseEmailForLogin:
          type: boolean
        PhoneNumber:
          type: string
        HomePhoneNumber:
          type: string
        CoverLetter:
          type: string
        Resume:
          $ref: '#/components/schemas/ApplicantResume'
        AdditionalDocuments:
          type: array
          items:
            $ref: '#/components/schemas/FileDetails'
    QuestionsInResponse:
      type: object
      properties:
        Questions:
          type: array
          items:
            $ref: '#/components/schemas/QuestionModel'
        Url:
          type: string
        RetrievedOnMillis:
          type: integer
          format: int64
        Answers:
          type: array
          items:
            $ref: '#/components/schemas/QuestionAnswers'
    CandidateProfileSource:
      type: object
      properties:
        ShortName:
          type: string
        CandidateProfileSourceAdditionalInfo:
          type: string
    ApplicantResume:
      type: object
      properties:
        Text:
          type: string
        HrXml:
          type: string
        Html:
          type: string
        Json:
          $ref: '#/components/schemas/CandidateDetails'
        File:
          $ref: '#/components/schemas/FileDetails'
    FileDetails:
      type: object
      properties:
        ContentType:
          type: string
        Data:
          type: string
        FileName:
          type: string
    QuestionModel:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        question:
          type: string
        text:
          type: string
        options:
          type: array
          items:
            $ref: '#/components/schemas/QuestionOptionModel'
        required:
          type: boolean
        format:
          type: string
        limit:
          type: integer
          format: int32
        min:
          type: string
        max:
          type: string
        condition:
          $ref: '#/components/schemas/QuestionConditionModel'
        hierarchicalOptions:
          type: array
          items:
            $ref: '#/components/schemas/QuestionHierarchicalOptionModel'
        HTML:
          type: boolean
        fontSize:
          type: string
    QuestionAnswers:
      type: object
      properties:
        Id:
          type: string
        Value:
          type: string
        Values:
          type: array
          items:
            type: string
    CandidateDetails:
      type: object
      properties:
        FirstName:
          type: string
        LastName:
          type: string
        Headline:
          type: string
        Summary:
          type: string
        PublicProfileUrl:
          type: string
        AdditionalInfo:
          type: string
        PhoneNumber:
          type: string
        HomePhoneNumber:
          type: string
        Location:
          $ref: '#/components/schemas/CandidateLocation'
        Skills:
          type: string
        Positions:
          $ref: '#/components/schemas/Positions'
        Educations:
          $ref: '#/components/schemas/Educations'
        Links:
          $ref: '#/components/schemas/Links'
        Awards:
          $ref: '#/components/schemas/Awards'
        Certifications:
          $ref: '#/components/schemas/Certifications'
        Associations:
          $ref: '#/components/schemas/Associations'
        Patents:
          $ref: '#/components/schemas/Patents'
        Publications:
          $ref: '#/components/schemas/Publications'
        MilitaryServices:
          $ref: '#/components/schemas/MilitaryServices'
    QuestionOptionModel:
      type: object
      properties:
        value:
          type: string
        label:
          type: string
    QuestionConditionModel:
      type: object
      properties:
        id:
          type: string
        value:
          type: string
    QuestionHierarchicalOptionModel:
      type: object
      properties:
        id:
          type: string
        condition:
          $ref: '#/components/schemas/QuestionConditionModel'
        options:
          type: array
          items:
            $ref: '#/components/schemas/QuestionOptionModel'
    CandidateLocation:
      type: object
      properties:
        City:
          type: string
        PostalCode:
          type: string
        Address1:
          type: string
        Address2:
          type: string
        Address3:
          type: string
        Country:
          type: string
        StateCode:
          type: string
        StateName:
          type: string
        County:
          type: string
    Positions:
      type: object
      properties:
        _Total:
          type: integer
          format: int32
        Values:
          type: array
          items:
            $ref: '#/components/schemas/PositionDetails'
    Educations:
      type: object
      properties:
        _Total:
          type: integer
          format: int32
        Values:
          type: array
          items:
            $ref: '#/components/schemas/EducationDetails'
    Links:
      type: object
      properties:
        _Total:
          type: integer
          format: int32
        Values:
          type: array
          items:
            $ref: '#/components/schemas/LinkDetails'
    Awards:
      type: object
      properties:
        _Total:
          type: integer
          format: int32
        Values:
          type: array
          items:
            $ref: '#/components/schemas/AwardDetails'
    Certifications:
      type: object
      properties:
        _Total:
          type: integer
          format: int32
        Values:
          type: array
          items:
            $ref: '#/components/schemas/CertificationDetails'
    Associations:
      type: object
      properties:
        _Total:
          type: integer
          format: int32
        Values:
          type: array
          items:
            $ref: '#/components/schemas/AssociationDetails'
    Patents:
      type: object
      properties:
        _Total:
          type: integer
          format: int32
        Values:
          type: array
          items:
            $ref: '#/components/schemas/PatentDetails'
    Publications:
      type: object
      properties:
        _Total:
          type: integer
          format: int32
        Values:
          type: array
          items:
            $ref: '#/components/schemas/PublicationDetails'
    MilitaryServices:
      type: object
      properties:
        _Total:
          type: integer
          format: int32
        Values:
          type: array
          items:
            $ref: '#/components/schemas/MilitaryServiceDetails'
    PositionDetails:
      type: object
      properties:
        Title:
          type: string
        Company:
          type: string
        Location:
          type: string
        StartDateMonth:
          type: string
        StartDateYear:
          type: string
        EndDateMonth:
          type: string
        EndDateYear:
          type: string
        EndCurrent:
          type: boolean
        Description:
          type: string
    EducationDetails:
      type: object
      properties:
        Degree:
          type: string
        Field:
          type: string
        School:
          type: string
        Location:
          type: string
        StartDateYear:
          type: string
        EndDateYear:
          type: string
        EndCurrent:
          type: boolean
    LinkDetails:
      type: object
      properties:
        Url:
          type: string
    AwardDetails:
      type: object
      properties:
        Title:
          type: string
        DateMonth:
          type: string
        DateYear:
          type: string
        Description:
          type: string
    CertificationDetails:
      type: object
      properties:
        Title:
          type: string
        StartDateMonth:
          type: string
        StartDateYear:
          type: string
        EndDateMonth:
          type: string
        EndDateYear:
          type: string
        EndCurrent:
          type: boolean
        Description:
          type: string
    AssociationDetails:
      type: object
      properties:
        Title:
          type: string
        StartDateMonth:
          type: string
        StartDateYear:
          type: string
        EndDateMonth:
          type: string
        EndDateYear:
          type: string
        EndCurrent:
          type: boolean
        Description:
          type: string
    PatentDetails:
      type: object
      properties:
        PatentNumber:
          type: string
        Title:
          type: string
        Url:
          type: string
        DateMonth:
          type: string
        DateYear:
          type: string
        Description:
          type: string
    PublicationDetails:
      type: object
      properties:
        Title:
          type: string
        Url:
          type: string
        DateDay:
          type: string
        DateMonth:
          type: string
        DateYear:
          type: string
        Description:
          type: string
    MilitaryServiceDetails:
      type: object
      properties:
        ServiceCountry:
          type: string
        Branch:
          type: string
        Rank:
          type: string
        StartDateMonth:
          type: string
        StartDateYear:
          type: string
        EndDateMonth:
          type: string
        EndDateYear:
          type: string
        EndCurrent:
          type: boolean
        Commendations:
          type: string
        Description:
          type: string
    response:
      type: object
      properties:
        Identifier:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
    Payload_IEnumerable_QuestionModel:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/QuestionModel'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    Payload_CandidateApplicationStatusUpdatesPaginationModel:
      type: object
      properties:
        Data:
          $ref: '#/components/schemas/CandidateApplicationStatusUpdatesPaginationModel'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    CandidateApplicationStatusUpdatesPaginationModel:
      type: object
      properties:
        HasUnretrievedStatuses:
          type: string
        ApplicationStatusUpdates:
          type: array
          items:
            $ref: '#/components/schemas/CandidateApplicationStatusUpdatesModel'
    CandidateApplicationStatusUpdatesModel:
      type: object
      properties:
        Identifier:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        ApplicationStatuses:
          type: array
          items:
            $ref: '#/components/schemas/CandidateApplicationStatusModel'
    CandidateApplicationStatusModel:
      type: object
      properties:
        StatusName:
          type: string
        StatusGroupName:
          type: string
        EffectiveStart:
          type: string
          format: date-time
        EffectiveEnd:
          type: string
          format: date-time
    Payload_IEnumerable_JobFeed:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/JobFeed'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    JobFeed:
      type: object
      properties:
        Title:
          type: string
        Description:
          type: string
        ClientSiteName:
          type: string
        ClientSiteXRefCode:
          type: string
        CompanyName:
          type: string
        ParentCompanyName:
          type: string
        JobDetailsUrl:
          type: string
        ApplyUrl:
          type: string
        AddressLine1:
          type: string
        AddressLine2:
          type: string
        City:
          type: string
        State:
          type: string
        Country:
          type: string
        PostalCode:
          type: string
        Education:
          type: string
        JobFamily:
          type: string
        JobFunction:
          type: string
        EmploymentIndicator:
          type: string
        Qualifications:
          type: string
        DatePosted:
          type: string
          format: date-time
        LastUpdated:
          type: string
          format: date-time
        ReferenceNumber:
          type: integer
          format: int32
        CandidatesUrl:
          type: string
        CultureCode:
          type: string
        ParentRequisitionCode:
          type: integer
          format: int32
        MinHiringRate:
          type: number
          format: double
        MaxHiringRate:
          type: number
          format: double
        HiringRate:
          type: number
          format: double
        JobType:
          type: integer
          format: int32
        TravelPercentage:
          type: number
          format: double
        TravelRequired:
          type: integer
          format: int32
        TelecommutePercentage:
          type: number
          format: double
        IsVirtualLocation:
          type: boolean
        QuestionnaireUrl:
          type: string
        CandidateApplicationPostUrl:
          type: string
    PaginatedPayload_IEnumerable_LMSCertification:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/LMSCertification'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
        Paging:
          $ref: '#/components/schemas/Paging'
    ClientMetadata:
      type: object
      properties:
        ServiceVersion:
          type: string
        ServiceUri:
          type: string
    Payload_ClientPayrollCountry:
      type: object
      properties:
        Data:
          $ref: '#/components/schemas/ClientPayrollCountry'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    ClientPayrollCountry:
      type: object
      properties:
        ClientOperatingLocations:
          type: string
        ClientOperatingLocationsLabel:
          type: string
        ConnectPayEnabled:
          type: boolean
        Countries:
          type: array
          items:
            $ref: '#/components/schemas/PayrollCountry'
    PayrollCountry:
      type: object
      properties:
        CountryName:
          type: string
        CountryCode:
          type: string
        HCMPayrollCountry:
          type: boolean
        ConnectedPayCountry:
          type: boolean
        IPSEnabled:
          type: boolean
        PayGroup:
          type: boolean
        DefaultTimeZoneName:
          type: string
        DefaultTimeZoneXRefCode:
          type: string
    ClientPayrollCountryUpdate:
      type: object
      properties:
        CountryCode:
          type: string
        DefaultTimeZoneXRefCode:
          type: string
        HCMPayrollCountry:
          type: boolean
        ConnectedPayCountry:
          type: boolean
    Payload_IEnumerable_ContactInformationType:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/ContactInformationType'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    Payload_ContactInformationType:
      type: object
      properties:
        Data:
          $ref: '#/components/schemas/ContactInformationType'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    PaginatedPayload_IEnumerable_Course:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/Course'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
        Paging:
          $ref: '#/components/schemas/Paging'
    PaginatedPayload_IEnumerable_DataEntry:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/DataEntry'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
        Paging:
          $ref: '#/components/schemas/Paging'
    DataEntry:
      type: object
      properties:
        DataEntryXRefCode:
          type: integer
          format: int64
        EntryType:
          type: string
        PayGroupXRefCode:
          type: string
        Currency:
          type: string
        PeriodStart:
          type: string
          format: date-time
        PeriodEnd:
          type: string
          format: date-time
        PPN:
          type: string
        PayDate:
          type: string
          format: date-time
        EditSet:
          type: string
        EmployeeXRefCode:
          type: string
        EmployeeName:
          type: string
        EmployeeNumber:
          type: string
        Replace:
          type: boolean
        CodeType:
          type: string
        CodeXRefCode:
          type: string
        CodeName:
          type: string
        TaxAuthorityInstance:
          type: string
        Hours:
          type: number
          format: double
        Rate:
          type: number
          format: double
        Amount:
          type: number
          format: double
        BusinessDate:
          type: string
          format: date-time
        JobAssignmentXRefCode:
          type: string
        JobAssignmentName:
          type: string
        WorkLocationXRefCode:
          type: string
        WorkLocation:
          type: string
        LegalEntityXrefCode:
          type: string
        LegalEntityName:
          type: string
        LegalEntityIdNumber:
          type: string
        LaborPercent:
          type: boolean
        DebitArrears:
          type: boolean
        CheckTemplateXRefCode:
          type: string
        CheckTemplateName:
          type: string
        FLSAAdjustStartDate:
          type: string
          format: date-time
        FLSAAdjustEndDate:
          type: string
          format: date-time
        Message:
          type: string
        ProjectXRefCode:
          type: string
        ProjectName:
          type: string
        DocketXRefCode:
          type: string
        DocketName:
          type: string
        PayPeriodNumber:
          type: string
        OrderedAmountTypeXRefCode:
          type: string
        OrderedAmountType:
          type: string
        OrderPercent:
          type: number
          format: double
        LimitAmount:
          type: number
          format: double
        DisposableEarningAmount:
          type: number
          format: double
        PayPeriodsForTax:
          type: integer
          format: int32
        PayOutAccurals:
          type: boolean
        WorkersCompAccountNumber:
          type: string
        WorkersCompAccountName:
          type: string
        WorkersCompCode:
          type: string
        DoNotDisburseToPayee:
          type: boolean
        ImportSet:
          type: string
        ApplyROEMapping:
          type: boolean
        TrailingTaxationPeriodStart:
          type: string
          format: date-time
        TrailingTaxationPeriodEnd:
          type: string
          format: date-time
        LaborMetrics:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeLaborMetrics'
        SavedBy:
          type: string
        SavedAt:
          type: string
          format: date-time
        ImportIdentifier:
          type: string
        SourceSystem:
          type: string
        PayrollFrequencyType:
          type: string
        PayrollFrequencyName:
          type: string
        OffCyclePayRunXrefCode:
          type: string
    EmployeeLaborMetrics:
      type: object
      properties:
        LaborMetricsTypeXRefCode:
          type: string
        LaborMetricsTypeName:
          type: string
        LaborMetricsCodeXRefCode:
          type: string
        LaborMetricsCodeName:
          type: string
    PaginatedPayload_PersonManagementHistory:
      type: object
      properties:
        Data:
          $ref: '#/components/schemas/PersonManagementHistory'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
        Paging:
          $ref: '#/components/schemas/Paging'
    PersonManagementHistory:
      type: object
      properties:
        PurgeDate:
          type: string
          format: date-time
        ValidationMessage:
          $ref: '#/components/schemas/Validation'
        Policy:
          type: array
          items:
            type: string
        Name:
          type: string
        RemovalAction:
          type: string
        ApprovedBy:
          type: string
        PersonType:
          type: string
        TerminationDate:
          type: string
          format: date-time
    Validation:
      type: object
      properties:
        Warnings:
          type: array
          items:
            type: string
        Errors:
          type: array
          items:
            type: string
    PaginatedPayload_PersonManagementExemption:
      type: object
      properties:
        Data:
          $ref: '#/components/schemas/PersonManagementExemption'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
        Paging:
          $ref: '#/components/schemas/Paging'
    PersonManagementExemption:
      type: object
      properties:
        AppliedByName:
          type: string
        Country:
          type: string
        PersonType:
          type: string
        Name:
          type: string
        Number:
          type: string
        EmploymentStatus:
          type: string
        AppliedOn:
          type: string
          format: date-time
    PaginatedPayload_PersonManagementEraseHistory:
      type: object
      properties:
        Data:
          $ref: '#/components/schemas/PersonManagementEraseHistory'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
        Paging:
          $ref: '#/components/schemas/Paging'
    PersonManagementEraseHistory:
      type: object
      properties:
        HireDate:
          type: string
          format: date-time
        TerminationDate:
          type: string
          format: date-time
        LastPayDate:
          type: string
          format: date-time
        PersonType:
          type: string
        LastBenefitCoverageDate:
          type: string
          format: date-time
        LastDeptJob:
          type: string
        LastOrgUnit:
          type: string
        EmploymentStatusReason:
          type: string
        EligibleForRehire:
          type: string
        DisplayName:
          type: string
        Reason:
          type: string
        PurgeDate:
          type: string
          format: date-time
        Originator:
          type: string
        EraseRequestDate:
          type: string
          format: date-time
        LastPayGroup:
          type: string
        DayforceCreateDate:
          type: string
          format: date-time
        RequestId:
          type: integer
          format: int32
    PaginatedPayload_IEnumerable_PolicyAssociation:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/PolicyAssociation'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
        Paging:
          $ref: '#/components/schemas/Paging'
    PolicyAssociation:
      type: object
      properties:
        Person:
          type: string
        XRefCode:
          type: string
        Number:
          type: string
        StartDate:
          type: string
          format: date-time
        PersonType:
          type: string
        Status:
          type: string
        ExemptedFromDataMinimization:
          type: boolean
        DataManagementCountryCode:
          type: string
    Payload_IEnumerable_DeductionDefinition:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/DeductionDefinition'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    DeductionDefinition:
      type: object
      properties:
        SystemDeduction:
          type: boolean
        Active:
          type: boolean
        AllowArrears:
          type: boolean
        WorkersComp:
          type: boolean
        Countries:
          type: array
          items:
            $ref: '#/components/schemas/DeductionCountry'
        Payees:
          type: array
          items:
            $ref: '#/components/schemas/DeductionPayee'
        Name:
          type: string
        Description:
          type: string
        DisplayName:
          type: string
        XRefCode:
          type: string
        AllowPayee:
          type: boolean
        SourceTypeName:
          type: string
        SourceTypeXRefCode:
          type: string
        PayeeCategoryName:
          type: string
        PayeeCategoryXRefCode:
          type: string
    DeductionCountry:
      type: object
      properties:
        TaxComplianceName:
          type: string
        TaxComplianceXRefCode:
          type: string
        TaxTypeName:
          type: string
        TaxTypeCode:
          type: string
        CountryCode:
          type: string
        CountryName:
          type: string
    DeductionPayee:
      type: object
      properties:
        PayeeParameters:
          type: array
          items:
            $ref: '#/components/schemas/DeductionPayeeParameter'
        PayeeName:
          type: string
        PayeeXRefCode:
          type: string
        EffectiveStart:
          type: string
          format: date-time
        EffectiveEnd:
          type: string
          format: date-time
        Default:
          type: boolean
    DeductionPayeeParameter:
      type: object
      properties:
        PayeeParameterName:
          type: string
        PayeeParameterXRefCode:
          type: string
        Value:
          type: string
    Payload_IEnumerable_Department:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/Department'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    Payload_Department:
      type: object
      properties:
        Data:
          $ref: '#/components/schemas/Department'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    Payload_IEnumerable_EmployeeDocumentManagementSecurityGroup:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeDocumentManagementSecurityGroup'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    Payload_IEnumerable_Document:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/Document'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    Document:
      type: object
      properties:
        DocumentGUID:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        DocumentName:
          type: string
        DocumentType:
          $ref: '#/components/schemas/DocumentType'
        FileName:
          type: string
        UploadedDate:
          type: string
          format: date-time
        UploadedBy:
          $ref: '#/components/schemas/UploadedBy'
    DocumentType:
      type: object
      properties:
        ShortName:
          type: string
        Description:
          type: string
        XRefCode:
          type: string
    UploadedBy:
      type: object
      properties:
        DisplayName:
          type: string
        XRefCode:
          type: string
        LoginId:
          type: string
    Payload_ArchiveDocument:
      type: object
      properties:
        Data:
          $ref: '#/components/schemas/ArchiveDocument'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    ArchiveDocument:
      type: object
      properties:
        DocumentType:
          type: string
        DocumentGroup:
          type: string
        UserId:
          type: integer
          format: int32
        SourceReportUniqueId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        PublishDateTime:
          type: string
          format: date-time
        Title:
          type: string
        PageCount:
          type: integer
          format: int32
        CultureId:
          type: integer
          format: int32
        Contents:
          type: string
          format: byte
        Link:
          type: string
        FileName:
          type: string
        SizeBytes:
          type: integer
          format: int64
        ReportAlternateTitle:
          type: string
        EmployeeXRefCode:
          type: string
        IsAvailableOnCloud:
          type: boolean
    DocumentImportQueueRequest:
      type: object
      properties:
        FileName:
          type: string
        Link:
          type: string
        DocumentTypeXRefCode:
          type: string
        EntityTypeXRefCode:
          type: string
        Entity:
          type: string
        EmployeeNumber:
          type: string
        Tags:
          type: array
          items:
            type: string
        Comment:
          type: string
        AdditionalData:
          type: string
        EmployeeXRefCode:
          type: string
    Payload_DocumentImportQueueResponse:
      type: object
      properties:
        Data:
          $ref: '#/components/schemas/DocumentImportQueueResponse'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    DocumentImportQueueResponse:
      type: object
      properties:
        Status:
          type: string
        JobGuid:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        QueueTimestamp:
          type: string
          format: date-time
        DocumentsQueued:
          type: array
          items:
            type: integer
            format: int32
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    DocMgmtUploadResponse:
      type: object
      properties:
        Status:
          type: string
        FilesProcessed:
          type: array
          items:
            $ref: '#/components/schemas/DocMgmtFileProcessedResponse'
    DocMgmtFileProcessedResponse:
      type: object
      properties:
        Index:
          type: integer
          format: int32
        DocumentGUID:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        UploadStatus:
          type: string
        Message:
          type: string
    Payload_IEnumerable_EarningDefinition:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EarningDefinition'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    EarningDefinition:
      type: object
      properties:
        PayEntryRates:
          type: boolean
        Generated:
          type: boolean
        GrossedUp:
          type: boolean
        EIRefund:
          type: boolean
        PRPensionPaymentType:
          type: string
        PREarningBenefitCategory:
          type: string
        SeparateCheckName:
          type: string
        SeparateCheckXRefCode:
          type: string
        Countries:
          type: array
          items:
            $ref: '#/components/schemas/EarningCountry'
        Payees:
          type: array
          items:
            $ref: '#/components/schemas/EarningPayee'
        Name:
          type: string
        Description:
          type: string
        DisplayName:
          type: string
        XRefCode:
          type: string
        AllowPayee:
          type: boolean
        SourceTypeName:
          type: string
        SourceTypeXRefCode:
          type: string
        PayeeCategoryName:
          type: string
        PayeeCategoryXRefCode:
          type: string
    EarningCountry:
      type: object
      properties:
        TaxComplianceName:
          type: string
        TaxComplianceXRefCode:
          type: string
        EarningTypeName:
          type: string
        EarningTypeXRefCode:
          type: string
        CountryCode:
          type: string
        CountryName:
          type: string
    EarningPayee:
      type: object
      properties:
        EarningScheduleName:
          type: string
        EarningScheduleXRefCode:
          type: string
        PayeeParameters:
          type: array
          items:
            $ref: '#/components/schemas/EarningPayeeParameter'
        PayeeEarningParameters:
          type: array
          items:
            $ref: '#/components/schemas/EarningPayeeEarningParameter'
        PayeeEarningLimits:
          type: array
          items:
            $ref: '#/components/schemas/EarningPayeeEarningLimit'
        PayeeName:
          type: string
        PayeeXRefCode:
          type: string
        EffectiveStart:
          type: string
          format: date-time
        EffectiveEnd:
          type: string
          format: date-time
        Default:
          type: boolean
    EarningPayeeParameter:
      type: object
      properties:
        PayeeParameterName:
          type: string
        PayeeParameterXRefCode:
          type: string
        Value:
          type: string
    EarningPayeeEarningParameter:
      type: object
      properties:
        ElementParamName:
          type: string
        ElementParamCodeName:
          type: string
        Value:
          type: number
          format: double
    EarningPayeeEarningLimit:
      type: object
      properties:
        LimitAmount:
          type: number
          format: double
        LimitPercent:
          type: number
          format: double
        LimitTypeXRefCode:
          type: string
        LimitTypeName:
          type: string
        EarningLimitXRefCode:
          type: string
    PaginatedPayload_EarningStatementHeader:
      type: object
      properties:
        Data:
          $ref: '#/components/schemas/EarningStatementHeader'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
        Paging:
          $ref: '#/components/schemas/Paging'
    EarningStatementHeader:
      type: object
      properties:
        EarningStatementHeaders:
          type: string
    Payload_List_EarningStatementDocument:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EarningStatementDocument'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    EarningStatementDocument:
      type: object
      properties:
        Contents:
          type: string
        Title:
          type: string
        Link:
          type: string
        FileName:
          type: string
    Payload_IEnumerable_EmployeeEmergencyContact:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeEmergencyContact'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    Payload_IEnumerable_DEUEmployeeAccidentInsurance:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/DEUEmployeeAccidentInsurance'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    Payload_IEnumerable_EmployeeAssignedSexAndGenderIdentity:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeAssignedSexAndGenderIdentity'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    Payload_IEnumerable_EmployeeAUSFederalTax:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeAUSFederalTax'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    Payload_IEnumerable_EmployeeAUSSuperannuation:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeAUSSuperannuation'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    Payload_IEnumerable_EmployeeAUSSuperannuationRules:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeAUSSuperannuationRules'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    Payload_IEnumerable_AuthorizationAssignment:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/AuthorizationAssignment'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    Payload_IEnumerable_EmployeeBadge:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeBadge'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    Payload_IEnumerable_EmployeeBalancePeriod:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeBalancePeriod'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    EmployeeBalancePeriod:
      type: object
      properties:
        EmployeeXRefCode:
          type: string
        BalanceName:
          type: string
        BalanceXRefCode:
          type: string
        EffectiveStart:
          type: string
          format: date-time
        EffectiveEnd:
          type: string
          format: date-time
        InitialAccruedValue:
          type: number
          format: double
        InitialGrantValue:
          type: number
          format: double
        CurrentAccruedValue:
          type: number
          format: double
        CurrentGrantValue:
          type: number
          format: double
        MinimumValue:
          type: number
          format: double
        MaximumValue:
          type: number
          format: double
    Payload_IEnumerable_EmployeeBalanceTransactions:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeBalanceTransactions'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    EmployeeBalanceTransactions:
      type: object
      properties:
        EmployeeBalancePeriodIdExternal:
          type: integer
          format: int64
        EffectiveStart:
          type: string
          format: date-time
        EffectiveEnd:
          type: string
          format: date-time
        Transactions:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeBalanceTransaction'
    EmployeeBalanceTransaction:
      type: object
      properties:
        TransactionDate:
          type: string
          format: date-time
        ExpiryDate:
          type: string
          format: date-time
        Delta:
          type: number
          format: double
        GrantDelta:
          type: number
          format: double
        TransactionSource:
          type: integer
          format: int32
        TAFWXRefCode:
          type: string
        Comment:
          type: string
        ApprovalStatus:
          type: string
    EmployeeBalanceTransactionForSubmit:
      type: object
      properties:
        BalanceXRefCode:
          type: string
        EmployeeXRefCode:
          type: string
        TransactionDate:
          type: string
          format: date-time
        Value:
          type: number
          format: double
        Comment:
          type: string
    EmployeeBalanceTransactionPostResponse:
      type: object
      properties:
        EmployeeBalanceTransactionXRefCode:
          type: string
    EmployeeBalanceTransactionForPatch:
      type: object
      properties:
        TransactionDate:
          type: string
          format: date-time
        Delta:
          type: number
          format: double
        GrantDelta:
          type: number
          format: double
        Comment:
          type: string
    EmployeeBalanceTransactionPatchResponse:
      type: object
      properties:
        EmployeeBalanceTransactionXRefCode:
          type: string
    Payload_IEnumerable_EmployeeCANFederalTax:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeCANFederalTax'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    Payload_IEnumerable_EmployeeCANStateTax:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeCANStateTax'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    Payload_IEnumerable_EmployeeCANTaxStatus:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeCANTaxStatus'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    Payload_IEnumerable_LMSEmployeeCertification:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/LMSEmployeeCertification'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    Payload_IEnumerable_EmployeeClockDeviceGroup:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeClockDeviceGroup'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    Payload_IEnumerable_EmployeeCompensation:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeCompensation'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    Payload_IEnumerable_EmployeeConfidentialIdentification:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeConfidentialIdentification'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    Payload_IEnumerable_EmployeeCourse:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeCourse'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    Payload_IEnumerable_EmployeeDefaultLabor:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeDefaultLabor'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    Payload_IEnumerable_EmployeeDependentBeneficiary:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeDependentBeneficiary'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    Payload_IEnumerable_DEUEmployeeWageTax:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/DEUEmployeeWageTax'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    Payload_IEnumerable_DEUTaxSocialInsurance:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/DEUTaxSocialInsurance'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    Payload_IEnumerable_EmployeeDirectDeposit:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeDirectDeposit'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    Payload_IEnumerable_EmployeeDisability:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeDisability'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    Payload_IEnumerable_EmployeeCANEmploymentInsuranceRate:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeCANEmploymentInsuranceRate'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    Payload_IEnumerable_EmployeeEmploymentAgreement:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeEmploymentAgreement'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    Payload_IEnumerable_EmployeeEmploymentStatus:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeEmploymentStatus'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    Payload_IEnumerable_EmployeeEmploymentType:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeEmploymentType'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    Payload_IEnumerable_EmployeeEthnicity:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeEthnicity'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    Payload_IEnumerable_EmployeeGlobalPropertyValue:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeGlobalPropertyValue'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    PaginatedPayload_IEnumerable_EmployeeGLSplits:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeGLSplits'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
        Paging:
          $ref: '#/components/schemas/Paging'
    EmployeeGLSplits:
      type: object
      properties:
        EmployeeName:
          type: string
        EmployeeNumber:
          type: string
        EmployeeXRefCode:
          type: string
        EmployeeGLSplitSets:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeGLSplitSets'
    EmployeeGLSplitSets:
      type: object
      properties:
        OrgUnitXRefCode:
          type: string
        DeptJobXRefCode:
          type: string
        DeptJobName:
          type: string
        OrgUnitName:
          type: string
        SplitEffectiveTo:
          type: string
          format: date-time
        SplitEffectiveFrom:
          type: string
          format: date-time
        EmployeeGLSplitSetDetails:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeGLSplitSetDetails'
    EmployeeGLSplitSetDetails:
      type: object
      properties:
        LaborPercentage:
          type: number
          format: double
        IsPrimary:
          type: boolean
        EmployeeGLSplitSetDetailLaborMetricCodeDetails:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeGLSplitSetDetailLaborMetricCodes'
    EmployeeGLSplitSetDetailLaborMetricCodes:
      type: object
      properties:
        LaborMetricsTypeXRefCode:
          type: string
        LaborMetricsTypeName:
          type: string
        LaborMetricsCodeXRefCode:
          type: string
        LaborMetricsCodeName:
          type: string
    EmployeeGLSplitUpsert:
      type: object
      properties:
        EmployeeXRefCode:
          type: string
        GLSplitSets:
          type: array
          items:
            $ref: '#/components/schemas/GLSplitSetUpsert'
    GLSplitSetUpsert:
      type: object
      properties:
        OrgUnitXRefCode:
          type: string
        DeptJobXRefCode:
          type: string
        EffectiveStart:
          type: string
          format: date-time
        EffectiveEnd:
          type: string
          format: date-time
        GLSplitSetDetails:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeGLSplitSetDetailUpsert'
    EmployeeGLSplitSetDetailUpsert:
      type: object
      properties:
        LaborPercentage:
          type: integer
          format: int32
        IsPrimary:
          type: boolean
        LaborMetricsXRefCodes:
          type: array
          items:
            type: string
    Payload_IEnumerable_EmployeeHighlyCompensatedEmployeeIndicator:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeHighlyCompensatedEmployeeIndicator'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    Payload_IEnumerable_EmployeeHealthWellness:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeHealthWellness'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    Payload_IEnumerable_EmployeeHRIncident:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeHRIncident'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    Payload_IEnumerable_EmployeeHRPolicy:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeHRPolicy'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    Payload_IEnumerable_EmployeeIRLTaxEWSS:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeIRLTaxEWSS'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    Payload_IEnumerable_EmployeeIRLTaxPAYEExclusion:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeIRLTaxPAYEExclusion'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    Payload_IEnumerable_EmployeeIRLTaxPRSI:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeIRLTaxPRSI'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    Payload_IEnumerable_EmployeeIRLTaxRPN:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeIRLTaxRPN'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    Payload_IEnumerable_EmployeeLocation:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeLocation'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    Payload_IEnumerable_EmployeeManager:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeManager'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    Payload_IEnumerable_EmployeeOnboardingPolicy:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeOnboardingPolicy'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    Payload_IEnumerable_EmployeeOrgUnitInformation:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeOrgUnitInformation'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    Payload_IEnumerable_EmployeePayAdjustCodeGroup:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeePayAdjustCodeGroup'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    PaginatedPayload_IEnumerable_EmployeePayAdjustment:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeePayAdjustment'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
        Paging:
          $ref: '#/components/schemas/Paging'
    EmployeePayAdjustment:
      type: object
      properties:
        EmployeePayAdjustXRefCode:
          type: string
        AdjustPeriodStartDate:
          type: string
          format: date-time
        AdjustPeriodEndDate:
          type: string
          format: date-time
        EmployeeXRefCode:
          type: string
        DepartmentXRefCode:
          type: string
        JobXRefCode:
          type: string
        PayAdjustmentCodeXRefCode:
          type: string
        PayCategoryXRefCode:
          type: string
        PayDate:
          type: string
          format: date-time
        OrgUnitXRefCode:
          type: string
        IsPremium:
          type: boolean
        IsDeleted:
          type: boolean
        TimeStart:
          type: string
          format: date-time
        TimeEnd:
          type: string
          format: date-time
        Hours:
          type: number
          format: double
        Rate:
          type: number
          format: double
        Amount:
          type: number
          format: double
        ReferenceDate:
          type: string
          format: date-time
        ProjectXRefCode:
          type: string
        DocketXRefCode:
          type: string
        EmployeeComment:
          type: string
        ManagerComment:
          type: string
        EmployeeAuthorized:
          type: boolean
        ManagerAuthorized:
          type: boolean
        LaborMetrics:
          type: array
          items:
            $ref: '#/components/schemas/EmployeePayAdjustmentLaborMetrics'
        LastModifiedTimestampUtc:
          type: string
          format: date-time
    EmployeePayAdjustmentLaborMetrics:
      type: object
      properties:
        LaborMetricsTypeXRefCode:
          type: string
        LaborMetricsCodeXRefCode:
          type: string
    EmployeePayAdjustmentForSubmit:
      type: object
      properties:
        EmployeePayAdjustXRefCode:
          type: string
        OrgUnitXRefCode:
          type: string
        EmployeeXRefCode:
          type: string
        PayAdjustmentCodeXRefCode:
          type: string
        PayAdjustmentDate:
          type: string
          format: date-time
        Hours:
          type: number
          format: double
        Amount:
          type: number
          format: double
        JobXRefCode:
          type: string
        DepartmentXRefCode:
          type: string
        PayCategoryXRefCode:
          type: string
        ProjectXRefCode:
          type: string
        DocketXRefCode:
          type: string
        IsPremium:
          type: boolean
        IsDeleted:
          type: boolean
        Rate:
          type: number
          format: double
        PayDate:
          type: string
          format: date-time
        ReferenceDate:
          type: string
          format: date-time
        EmployeeComment:
          type: string
        ManagerComment:
          type: string
        ManagerAuthorized:
          type: boolean
        EmployeeAuthorized:
          type: boolean
        AdjustPeriodStartDate:
          type: string
          format: date-time
        AdjustPeriodEndDate:
          type: string
          format: date-time
        LaborMetrics:
          type: array
          items:
            $ref: '#/components/schemas/EmployeePayAdjustmentLaborMetrics'
    EmployeePayAdjustmentPostResponse:
      type: object
      properties:
        EmployeePayAdjustXRefCode:
          type: string
    Payload_IEnumerable_EmployeePayGradeRate:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeePayGradeRate'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    Payload_IEnumerable_EmployeePayrollTax:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeePayrollTax'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    Payload_IEnumerable_EmployeePayrollTaxParameter:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeePayrollTaxParameter'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    PaginatedPayload_IEnumerable_EmployeePaySummary:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeePaySummary'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
        Paging:
          $ref: '#/components/schemas/Paging'
    EmployeePaySummary:
      type: object
      properties:
        EmployeeXRefCode:
          type: string
        PositionXRefCode:
          type: string
        DepartmentXRefCode:
          type: string
        JobXRefCode:
          type: string
        PayCodeXRefCode:
          type: string
        PayCategoryXRefCode:
          type: string
        PayDate:
          type: string
          format: date-time
        BusinessDate:
          type: string
          format: date-time
        TimeStart:
          type: string
          format: date-time
        TimeEnd:
          type: string
          format: date-time
        PunchSegmentStart:
          type: string
          format: date-time
        LocationXRefCode:
          type: string
        NetHours:
          type: number
          format: double
        MinuteDuration:
          type: integer
          format: int32
        Rate:
          type: number
          format: double
        PayAmount:
          type: number
          format: double
        IsPremium:
          type: boolean
        ProjectXRefCode:
          type: string
        DocketXRefCode:
          type: string
        PieceQuantity:
          type: number
          format: double
        PayExportId:
          type: integer
          format: int64
        LaborMetricsCode0XRefCode:
          type: string
        LaborMetricsCode1XRefCode:
          type: string
        LaborMetricsCode2XRefCode:
          type: string
        LaborMetricsCode3XRefCode:
          type: string
        LaborMetricsCode4XRefCode:
          type: string
        LaborMetricsCode5XRefCode:
          type: string
        LaborMetricsCode6XRefCode:
          type: string
        LaborMetricsCode7XRefCode:
          type: string
        LaborMetricsCode8XRefCode:
          type: string
        LaborMetricsCode9XRefCode:
          type: string
    PaginatedPayload_IEnumerable_EmployeePaySummaryRetro:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeePaySummaryRetro'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
        Paging:
          $ref: '#/components/schemas/Paging'
    EmployeePaySummaryRetro:
      type: object
      properties:
        IsRetro:
          type: boolean
        EmployeeXRefCode:
          type: string
        PositionXRefCode:
          type: string
        DepartmentXRefCode:
          type: string
        JobXRefCode:
          type: string
        PayCodeXRefCode:
          type: string
        PayCategoryXRefCode:
          type: string
        PayDate:
          type: string
          format: date-time
        BusinessDate:
          type: string
          format: date-time
        TimeStart:
          type: string
          format: date-time
        TimeEnd:
          type: string
          format: date-time
        PunchSegmentStart:
          type: string
          format: date-time
        LocationXRefCode:
          type: string
        NetHours:
          type: number
          format: double
        MinuteDuration:
          type: integer
          format: int32
        Rate:
          type: number
          format: double
        PayAmount:
          type: number
          format: double
        IsPremium:
          type: boolean
        ProjectXRefCode:
          type: string
        DocketXRefCode:
          type: string
        PieceQuantity:
          type: number
          format: double
        PayExportId:
          type: integer
          format: int64
        LaborMetricsCode0XRefCode:
          type: string
        LaborMetricsCode1XRefCode:
          type: string
        LaborMetricsCode2XRefCode:
          type: string
        LaborMetricsCode3XRefCode:
          type: string
        LaborMetricsCode4XRefCode:
          type: string
        LaborMetricsCode5XRefCode:
          type: string
        LaborMetricsCode6XRefCode:
          type: string
        LaborMetricsCode7XRefCode:
          type: string
        LaborMetricsCode8XRefCode:
          type: string
        LaborMetricsCode9XRefCode:
          type: string
    Payload_IEnumerable_EmployeePerformanceRating:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeePerformanceRating'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    Payload_IEnumerable_EmployeePropertyValue:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeePropertyValue'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    PaginatedPayload_IEnumerable_EmployeePunch:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeePunch'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
        Paging:
          $ref: '#/components/schemas/Paging'
    EmployeePunch:
      type: object
      properties:
        PunchXRefCode:
          type: string
        EmployeeXRefCode:
          type: string
        PunchStatus:
          type: string
        TimeStart:
          type: string
          format: date-time
        TimeEnd:
          type: string
          format: date-time
        TimeStartRaw:
          type: string
          format: date-time
        TimeEndRaw:
          type: string
          format: date-time
        NetHours:
          type: number
          format: double
        LocationXRefCode:
          type: string
        PositionXRefCode:
          type: string
        DepartmentXRefCode:
          type: string
        JobXRefCode:
          type: string
        DocketXRefCode:
          type: string
        DocketQuantity:
          type: number
          format: double
        ProjectXRefCode:
          type: string
        PayAdjustmentXRefCode:
          type: string
        StartExceptionCode:
          type: string
        EndExceptionCode:
          type: string
        EmployeeComment:
          type: string
        ManagerComment:
          type: string
        BusinessDate:
          type: string
          format: date-time
        IsDeleted:
          type: boolean
        IsOnCall:
          type: boolean
        FuturePunch:
          type: boolean
        AssumedTimeStart:
          type: string
          format: date-time
        AssumedTimeEnd:
          type: string
          format: date-time
        LastModifiedTimestampUtc:
          type: string
          format: date-time
        MealBreaks:
          type: array
          items:
            $ref: '#/components/schemas/MealBreaks'
        Transfers:
          type: array
          items:
            $ref: '#/components/schemas/Transfers'
        LaborMetrics:
          type: array
          items:
            $ref: '#/components/schemas/LaborMetrics'
    MealBreaks:
      type: object
      properties:
        PunchXRefCode:
          type: string
        Type:
          type: string
        TimeStart:
          type: string
          format: date-time
        TimeEnd:
          type: string
          format: date-time
        TimeStartRaw:
          type: string
          format: date-time
        TimeEndRaw:
          type: string
          format: date-time
        NetHours:
          type: number
          format: double
        StartExceptionCode:
          type: string
        EndExceptionCode:
          type: string
        IsAutoInjected:
          type: boolean
        LastModifiedTimestampUtc:
          type: string
          format: date-time
    Transfers:
      type: object
      properties:
        TimeStart:
          type: string
          format: date-time
        TimeStartRaw:
          type: string
          format: date-time
        LocationXRefCode:
          type: string
        PositionXRefCode:
          type: string
        ProjectXRefCode:
          type: string
        DocketXRefCode:
          type: string
        DocketQuantity:
          type: number
          format: double
        PayAdjustmentXRefCode:
          type: string
        EmployeeComment:
          type: string
        ManagerComment:
          type: string
        LaborMetrics:
          type: array
          items:
            $ref: '#/components/schemas/LaborMetrics'
    LaborMetrics:
      type: object
      properties:
        LaborMetricsTypeXRefCode:
          type: string
        LaborMetricsCodeXRefCode:
          type: string
    Payload_EmployeePunchPatchPostDeleteResponse:
      type: object
      properties:
        Data:
          $ref: '#/components/schemas/EmployeePunchPatchPostDeleteResponse'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    EmployeePunchPatchPostDeleteResponse:
      type: object
      properties:
        XRefCode:
          type: string
    PaginatedPayload_IEnumerable_EmployeeRawPunch:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeRawPunch'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
        Paging:
          $ref: '#/components/schemas/Paging'
    EmployeeRawPunch:
      type: object
      properties:
        RawPunchXRefCode:
          type: string
        PunchState:
          type: string
        PayDate:
          type: string
          format: date-time
        EmployeeXRefCode:
          type: string
        EmployeeBadge:
          type: string
        RawPunchTime:
          type: string
          format: date-time
        WasOfflinePunch:
          type: boolean
        ExtraData:
          $ref: '#/components/schemas/PunchExtraData'
        PunchType:
          type: string
        Comment:
          type: string
        PunchDevice:
          type: string
        SupervisorBadge:
          type: string
        IsDuplicate:
          type: boolean
        RejectedReason:
          type: string
        LocationXRefCode:
          type: string
        PositionXRefCode:
          type: string
        DepartmentXRefCode:
          type: string
        JobXRefCode:
          type: string
        IPAddress:
          type: string
        PunchOrigin:
          type: string
        Latitude:
          type: number
          format: double
        Longitude:
          type: number
          format: double
        Accuracy:
          type: integer
          format: int32
        PunchXRefCode:
          type: string
    PunchExtraData:
      type: object
      properties:
        DocketXRefCode:
          type: string
        ProjectXRefCode:
          type: string
        PositionXRefCode:
          type: string
        LocationXRefCode:
          type: string
        Quantity:
          type: number
          format: double
        MealWaiver:
          type: string
        BreakAttestation:
          type: boolean
        BioFailure:
          type: boolean
        FaceVerificationFailure:
          type: boolean
        LaborMetrics:
          type: array
          items:
            $ref: '#/components/schemas/PunchLaborMetric'
        DocketClockTransferCode:
          type: string
        ProjectClockTransferCode:
          type: string
        PositionClockTransferCode:
          type: string
        LocationClockTransferCode:
          type: string
    PunchLaborMetric:
      type: object
      properties:
        TypeXRefCode:
          type: string
        CodeXRefCode:
          type: string
        TypeClockTransferCode:
          type: string
        CodeClockTransferCode:
          type: string
    EmployeeRawPunchForSubmit:
      type: object
      properties:
        EmployeeBadge:
          type: string
        RawPunchTime:
          type: string
        PunchType:
          type: string
        PunchDevice:
          type: string
        SupervisorBadge:
          type: string
        LocationXRefCode:
          type: string
        LocationClockTransferCode:
          type: string
        PositionXRefCode:
          type: string
        PositionClockTransferCode:
          type: string
        DocketXRefCode:
          type: string
        DocketClockTransferCode:
          type: string
        ProjectXRefCode:
          type: string
        ProjectClockTransferCode:
          type: string
        LaborMetrics:
          type: array
          items:
            $ref: '#/components/schemas/PunchLaborMetric'
        Quantity:
          type: number
          format: double
        MealWaiver:
          type: string
        BreakAttestation:
          type: boolean
    Payload_IEnumerable_EmployeeRole:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeRole'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    Payload_IEnumerable_Employee:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/Employee'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    Payload_List_Employee:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/Employee'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    Payload_Employee:
      type: object
      properties:
        Data:
          $ref: '#/components/schemas/Employee'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    Payload_IEnumerable_EmployeeSchedule:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeSchedule'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    EmployeeSchedule:
      type: object
      properties:
        EmployeeScheduleXRefCode:
          type: string
          readOnly: true
        EmployeeXRefCode:
          type: string
        TimeStart:
          type: string
          format: date-time
        TimeEnd:
          type: string
          format: date-time
        NetHours:
          type: number
          format: double
        DepartmentXRefCode:
          type: string
        JobXRefCode:
          type: string
        PositionXRefCode:
          type: string
        OrgUnitXRefCode:
          type: string
        SiteOrgUnitXRefCode:
          type: string
        OrgLocationTypeXRefCode:
          type: string
        PayAdjCodeXRefCode:
          type: string
        DocketXRefCode:
          type: string
        ProjectXRefCode:
          type: string
        Comment:
          type: string
        Published:
          type: boolean
        Breaks:
          type: array
          items:
            $ref: '#/components/schemas/Breaks'
        Activities:
          type: array
          items:
            $ref: '#/components/schemas/Activity'
        Skills:
          type: array
          items:
            $ref: '#/components/schemas/Skills'
        LaborMetrics:
          type: array
          items:
            $ref: '#/components/schemas/LaborMetric'
        Segments:
          type: array
          items:
            $ref: '#/components/schemas/Segment'
        IsPostedShiftBid:
          type: boolean
          readOnly: true
    Breaks:
      type: object
      properties:
        TimeStart:
          type: string
          format: date-time
        TimeEnd:
          type: string
          format: date-time
        NetHours:
          type: number
          format: double
        Type:
          type: string
    Activity:
      type: object
      properties:
        TimeStart:
          type: string
          format: date-time
        TimeEnd:
          type: string
          format: date-time
        XRefCode:
          type: string
    Skills:
      type: object
      properties:
        SkillXRefCode:
          type: string
        SkillLevelXRefCode:
          type: string
        IsMandatory:
          type: boolean
    LaborMetric:
      type: object
      properties:
        CodeXRefCode:
          type: string
        TypeXRefCode:
          type: string
    Segment:
      type: object
      properties:
        TimeStart:
          type: string
          format: date-time
        TimeEnd:
          type: string
          format: date-time
        NetHours:
          type: number
          format: double
        DepartmentXRefCode:
          type: string
        JobXRefCode:
          type: string
        PositionXRefCode:
          type: string
        OrgUnitXRefCode:
          type: string
        OrgLocationTypeXRefCode:
          type: string
        PayAdjCodeXRefCode:
          type: string
        DocketXRefCode:
          type: string
        ProjectXRefCode:
          type: string
        Comment:
          type: string
        LaborMetrics:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeScheduleSegmentLaborMetric'
    EmployeeScheduleSegmentLaborMetric:
      type: object
      properties:
        CodeXRefCode:
          type: string
        TypeXRefCode:
          type: string
    PaginatedPayload_IEnumerable_EmployeeSchedule:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeSchedule'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
        Paging:
          $ref: '#/components/schemas/Paging'
    EmployeeSchedulePostAPIRequestDTO:
      required:
        - TimeStart
        - TimeEnd
        - PositionXRefCode
      type: object
      properties:
        TimeStart:
          type: string
          format: date-time
        TimeEnd:
          type: string
          format: date-time
        PositionXRefCode:
          type: string
        EmployeeXRefCode:
          type: string
        PostShiftBid:
          type: boolean
        Breaks:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeScheduleMBPostAPIRequestDTO'
        Activities:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeScheduleActivityPostAPIRequestDTO'
        Segments:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeScheduleSegmentAPIRequestDTO'
        DocketXRefCode:
          type: string
        PayAdjCodeXRefCode:
          type: string
        OrgLocationTypeXRefCode:
          type: string
        ProjectXRefCode:
          type: string
        Comment:
          type: string
        LaborMetrics:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeScheduleLaborMetricPostAPIRequestDTO'
    EmployeeScheduleMBPostAPIRequestDTO:
      required:
        - TimeStart
        - TimeEnd
        - Type
      type: object
      properties:
        TimeStart:
          type: string
          format: date-time
        TimeEnd:
          type: string
          format: date-time
        Type:
          enum:
            - 1
            - 2
          type: integer
          format: int32
    EmployeeScheduleActivityPostAPIRequestDTO:
      required:
        - XRefCode
        - TimeStart
        - TimeEnd
      type: object
      properties:
        XRefCode:
          type: string
        TimeStart:
          type: string
          format: date-time
        TimeEnd:
          type: string
          format: date-time
    EmployeeScheduleSegmentAPIRequestDTO:
      required:
        - TimeStart
        - TimeEnd
        - PositionXRefCode
      type: object
      properties:
        TimeStart:
          type: string
          format: date-time
        TimeEnd:
          type: string
          format: date-time
        PositionXRefCode:
          type: string
        DocketXRefCode:
          type: string
        PayAdjCodeXRefCode:
          type: string
        OrgLocationTypeXRefCode:
          type: string
        ProjectXRefCode:
          type: string
        Comment:
          type: string
        LaborMetrics:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeScheduleLaborMetricPostAPIRequestDTO'
    EmployeeScheduleLaborMetricPostAPIRequestDTO:
      required:
        - CodeXRefCode
        - TypeXRefCode
      type: object
      properties:
        CodeXRefCode:
          type: string
        TypeXRefCode:
          type: string
    Payload_IEnumerable_EmployeeSchedulePostAPIResponse:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeSchedulePostAPIResponse'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    EmployeeSchedulePostAPIResponse:
      type: object
      properties:
        EmployeeScheduleXRefCode:
          type: string
          readOnly: true
        EmployeeXRefCode:
          type: string
        TimeStart:
          type: string
          format: date-time
        TimeEnd:
          type: string
          format: date-time
    EmployeeSchedulePatchAPIRequestDTO:
      required:
        - EmployeeScheduleXRefCode
      type: object
      properties:
        EmployeeScheduleXRefCode:
          type: string
        TimeStart:
          type: string
          format: date-time
        TimeEnd:
          type: string
          format: date-time
        IsDeleted:
          type: boolean
        EmployeeXRefCode:
          type: string
        PostShiftBid:
          type: boolean
        Breaks:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeScheduleMBPostAPIRequestDTO'
        Activities:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeScheduleActivityPostAPIRequestDTO'
        Segments:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeScheduleSegmentAPIRequestDTO'
        PositionXRefCode:
          type: string
        DocketXRefCode:
          type: string
        PayAdjCodeXRefCode:
          type: string
        OrgLocationTypeXRefCode:
          type: string
        ProjectXRefCode:
          type: string
        Comment:
          type: string
        LaborMetrics:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeScheduleLaborMetricPostAPIRequestDTO'
    PaginatedPayload_IEnumerable_EmployeeScheduleExtended:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeScheduleExtended'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
        Paging:
          $ref: '#/components/schemas/Paging'
    EmployeeScheduleExtended:
      type: object
      properties:
        Employee:
          $ref: '#/components/schemas/ScheduleEmployee'
        EmployeeScheduleXRefCode:
          type: string
          readOnly: true
        EmployeeXRefCode:
          type: string
        TimeStart:
          type: string
          format: date-time
        TimeEnd:
          type: string
          format: date-time
        NetHours:
          type: number
          format: double
        DepartmentName:
          type: string
        DepartmentXRefCode:
          type: string
        JobName:
          type: string
        JobXRefCode:
          type: string
        Position:
          $ref: '#/components/schemas/EmployeeSchedulePosition'
        OrgUnitName:
          type: string
        OrgUnitCode:
          type: string
        OrgUnitXRefCode:
          type: string
        OrgUnitIsStore:
          type: boolean
        OrgUnitClockCode:
          type: string
        OrgUnitLedgerCode:
          type: string
        OrgLocationTypeXRefCode:
          type: string
        OrgLocationTypeName:
          type: string
        PayAdjCodeXRefCode:
          type: string
        PayAdjCodeName:
          type: string
        DocketXRefCode:
          type: string
        DocketName:
          type: string
        ProjectXRefCode:
          type: string
        ProjectName:
          type: string
        Comment:
          type: string
        Published:
          type: boolean
        Breaks:
          type: array
          items:
            $ref: '#/components/schemas/Breaks'
        Activities:
          type: array
          items:
            $ref: '#/components/schemas/ScheduleActivityExtended'
        Skills:
          type: array
          items:
            $ref: '#/components/schemas/Skills'
        LaborMetrics:
          type: array
          items:
            $ref: '#/components/schemas/ScheduleLaborMetricExtended'
        Segments:
          type: array
          items:
            $ref: '#/components/schemas/Segment'
        PayCalendar:
          $ref: '#/components/schemas/EmployeeSchedulePayCalendar'
        EmployeePropertyValues:
          type: object
          additionalProperties:
            type: string
    ScheduleEmployee:
      type: object
      properties:
        XRefCode:
          type: string
        BadgeNumber:
          type: string
        EmployeeNumber:
          type: string
        DisplayName:
          type: string
        FirstName:
          type: string
        LastName:
          type: string
        City:
          type: string
        CountryCode:
          type: string
        PostalCode:
          type: string
        Address:
          type: string
        Address2:
          type: string
        StateCode:
          type: string
        SocialSecurityNumber:
          type: string
        Gender:
          type: string
        BirthDate:
          type: string
          format: date-time
        HireDate:
          type: string
          format: date-time
        SeniorityDate:
          type: string
          format: date-time
        HomePhone:
          type: string
    EmployeeSchedulePosition:
      type: object
      properties:
        Name:
          type: string
        XRefCode:
          type: string
        LedgerCode:
          type: string
        ClockCode:
          type: string
        IsNonService:
          type: boolean
        DepartmentXRefCode:
          type: string
        DepartmentName:
          type: string
        JobXRefCode:
          type: string
        JobName:
          type: string
        JobRank:
          type: integer
          format: int32
    ScheduleActivityExtended:
      type: object
      properties:
        TimeStart:
          type: string
          format: date-time
        TimeEnd:
          type: string
          format: date-time
        XRefCode:
          type: string
        Name:
          type: string
    ScheduleLaborMetricExtended:
      type: object
      properties:
        CodeXRefCode:
          type: string
        CodeName:
          type: string
        TypeXRefCode:
          type: string
    EmployeeSchedulePayCalendar:
      type: object
      properties:
        EffectiveStart:
          type: string
          format: date-time
        EffectiveEnd:
          type: string
          format: date-time
        CalendarStart:
          type: string
          format: date-time
        CalendarEnd:
          type: string
          format: date-time
    Payload_IEnumerable_EmployeeShortTimeWork:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeShortTimeWork'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    Payload_IEnumerable_EmployeeSkill:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeSkill'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    Payload_IEnumerable_EmployeeTrainingProgram:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeTrainingProgram'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    Payload_IEnumerable_EmployeeUKIrregularPaymentDetails:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeUKIrregularPaymentDetails'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    Payload_IEnumerable_EmployeeUKNIDetails:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeUKNIDetails'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    Payload_IEnumerable_EmployeeUKPostgraduateLoan:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeUKPostgraduateLoan'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    Payload_IEnumerable_EmployeeUKStudentLoan:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeUKStudentLoan'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    Payload_IEnumerable_EmployeeUKTaxDetails:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeUKTaxDetails'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    Payload_IEnumerable_EmployeeUnionMembership:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeUnionMembership'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    Payload_IEnumerable_EmployeeUSFederalTax:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeUSFederalTax'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    Payload_IEnumerable_EmployeeUSStateTax:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeUSStateTax'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    Payload_IEnumerable_EmployeeUSTaxStatus:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeUSTaxStatus'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    Payload_EmployeeVOE:
      type: object
      properties:
        Data:
          $ref: '#/components/schemas/EmployeeVOE'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    EmployeeVOE:
      type: object
      properties:
        Namespace:
          type: string
        LegalEntities:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeLegalEntity'
        NationalIdNumber:
          type: string
        EmployeeXRefCode:
          type: string
        FirstName:
          type: string
        MiddleName:
          type: string
        LastName:
          type: string
        BirthDate:
          type: string
          format: date-time
        EmployeeResidentialAddress:
          $ref: '#/components/schemas/EmployeeAddress'
    EmployeeLegalEntity:
      type: object
      properties:
        NormalWeeklyHours:
          type: number
          format: double
        WorkLocationAddress:
          $ref: '#/components/schemas/WorkLocationAddress'
        OriginalHireDate:
          type: string
          format: date-time
        BaseSalary:
          type: number
          format: double
        HourlyRate:
          type: number
          format: double
        EmploymentStatus:
          type: string
        EmploymentType:
          type: string
        JobAssignment:
          type: string
        HireDate:
          type: string
          format: date-time
        TerminationDate:
          type: string
          format: date-time
        PayFrequency:
          type: string
        PayType:
          type: string
        LastPayrollPayDate:
          type: string
          format: date-time
        LegalEntityName:
          type: string
        FEIN:
          type: string
        LegalEntityAddress:
          $ref: '#/components/schemas/LegalEntityAddress'
    EmployeeAddress:
      type: object
      properties:
        AddressLine1:
          type: string
        AddressLine2:
          type: string
        City:
          type: string
        State:
          type: string
        Country:
          type: string
        PostalCode:
          type: string
    WorkLocationAddress:
      type: object
      properties:
        AddressLine1:
          type: string
        AddressLine2:
          type: string
        City:
          type: string
        State:
          type: string
        Country:
          type: string
        PostalCode:
          type: string
    LegalEntityAddress:
      type: object
      properties:
        AddressLine1:
          type: string
        AddressLine2:
          type: string
        City:
          type: string
        State:
          type: string
        Country:
          type: string
        PostalCode:
          type: string
    Payload_EmployeeVOI:
      type: object
      properties:
        Data:
          $ref: '#/components/schemas/EmployeeVOI'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    EmployeeVOI:
      type: object
      properties:
        Earnings:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeEarningSummary'
        Namespace:
          type: string
        LegalEntities:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeLegalEntity'
        NationalIdNumber:
          type: string
        EmployeeXRefCode:
          type: string
        FirstName:
          type: string
        MiddleName:
          type: string
        LastName:
          type: string
        BirthDate:
          type: string
          format: date-time
        EmployeeResidentialAddress:
          $ref: '#/components/schemas/EmployeeAddress'
    EmployeeEarningSummary:
      type: object
      properties:
        Year:
          type: integer
          format: int32
        NationalIdNumber:
          type: string
        FirstName:
          type: string
        LastName:
          type: string
        RateOfPay:
          type: number
          format: double
        EmployeeResidentialAddress:
          $ref: '#/components/schemas/EmployeeAddress'
        GrossEarningYTD:
          type: number
          format: double
        GrossNormalEarningYTD:
          type: number
          format: double
        GrossOverTimeEarningYTD:
          type: number
          format: double
        GrossBonusEarningYTD:
          type: number
          format: double
        GrossCommissionEarningYTD:
          type: number
          format: double
        GrossOtherEarningYTD:
          type: number
          format: double
        EarningGroupingsSumUp:
          type: boolean
        EmploymentStatus:
          type: string
        EmploymentType:
          type: string
        JobAssignment:
          type: string
        HireDate:
          type: string
          format: date-time
        TerminationDate:
          type: string
          format: date-time
        PayFrequency:
          type: string
        PayType:
          type: string
        LastPayrollPayDate:
          type: string
          format: date-time
        LegalEntityName:
          type: string
        FEIN:
          type: string
        LegalEntityAddress:
          $ref: '#/components/schemas/LegalEntityAddress'
    Payload_IEnumerable_EmployeeVeteransStatus:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeVeteransStatus'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    Payload_IEnumerable_EmployeeVolunteerList:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeVolunteerList'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    Payload_IEnumerable_EmployeeWorkAssignmentManager:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeWorkAssignmentManager'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    Payload_IEnumerable_EmployeeWorkAssignment:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeWorkAssignment'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    PaginatedPayload_IEnumerable_EmployeeWorkLocationOverride:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeWorkLocationOverride'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
        Paging:
          $ref: '#/components/schemas/Paging'
    EmployeeWorkLocationOverride:
      type: object
      properties:
        LocationName:
          type: string
        Description:
          type: string
        ReferenceCode:
          type: string
        AllowLegalEntityOverride:
          type: boolean
        LocationAddressXRefCode:
          type: string
        Address:
          type: string
        Address2:
          type: string
        CityName:
          type: string
        StateName:
          type: string
        StateCode:
          type: string
        PostalCode:
          type: string
        County:
          type: string
        CountryName:
          type: string
        CountryCode:
          type: string
        JeddTaxes:
          type: string
        LegalEntityOverrideDetails:
          type: array
          items:
            $ref: '#/components/schemas/LegalEntityOverride'
    LegalEntityOverride:
      type: object
      properties:
        LegalEntityName:
          type: string
        LegalEntityXrefCode:
          type: string
        EffectiveStart:
          type: string
          format: date-time
        EffectiveEnd:
          type: string
          format: date-time
        BankBranchAddressName:
          type: string
        BankBranchAddressXRefCode:
          type: string
        WorkSiteName:
          type: string
        WorkSiteXRefCode:
          type: string
        WorkSiteNumber:
          type: string
        WorkSiteStateCode:
          type: string
        OverrideCustomerFundingIdentiferName:
          type: string
        OverrideCustomerFundingIdentiferXRefCode:
          type: string
    Payload_IEnumerable_EmployeeWorkLocationOverride:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeWorkLocationOverride'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    Payload_IEnumerable_EmploymentStatus:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmploymentStatus'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    Payload_EmploymentStatus:
      type: object
      properties:
        Data:
          $ref: '#/components/schemas/EmploymentStatus'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    Payload_IEnumerable_EmploymentStatusReason:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmploymentStatusReason'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    Payload_EmploymentStatusReason:
      type: object
      properties:
        Data:
          $ref: '#/components/schemas/EmploymentStatusReason'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    Payload_IEnumerable_ExtensibleProperty:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/ExtensibleProperty'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    ExtensibleProperty:
      type: object
      properties:
        TypeCode:
          type: string
        EntityType:
          type: string
        CountryCode:
          type: string
        EntityXRefCode:
          type: string
        EntityName:
          type: string
        EffectiveStart:
          type: string
          format: date-time
        EffectiveEnd:
          type: string
          format: date-time
        Comment:
          type: string
        SavedAt:
          type: string
        SavedBy:
          type: integer
          format: int32
        PropertyValues:
          type: array
          items:
            $ref: '#/components/schemas/PropertyValue'
    PropertyValue:
      type: object
      properties:
        ElementXRefCode:
          type: string
        ElementName:
          type: string
        IsElementActive:
          type: boolean
        ElementDefaultValue:
          type: string
        Value:
          type: string
        SavedAt:
          type: string
        SavedBy:
          type: integer
          format: int32
    I9Order:
      type: object
      properties:
        I9OrderId:
          type: string
        OrderStatusXRefCode:
          type: string
        EVerify:
          $ref: '#/components/schemas/EVerify'
    EVerify:
      type: object
      properties:
        EVerifyCaseNumber:
          type: string
        EVerifyStatus:
          type: string
        EVerifyStatusDate:
          type: string
          format: date-time
        EVerifyStatusDesc:
          type: string
    Payload_IEnumerable_Job:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/Job'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    Payload_Job:
      type: object
      properties:
        Data:
          $ref: '#/components/schemas/Job'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    Payload_IEnumerable_KpiData:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/KpiData'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    KpiData:
      type: object
      properties:
        OrgUnitXRefCode:
          type: string
        KpiXRefCode:
          type: string
        Day:
          type: string
          format: date-time
        Week:
          type: string
          format: date-time
        Minute:
          type: string
          format: date-time
        AggregateToDay:
          type: boolean
        Value:
          type: number
          format: double
        AdjustedValue:
          type: number
          format: double
        Forma:
          type: string
        Forecast:
          type: string
        AxisXRefCode:
          type: string
        MdseXRefCode:
          type: string
    Payload_IEnumerable_KpiTargetPattern:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/KpiTargetPattern'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    KpiTargetPattern:
      type: object
      properties:
        KpiXRefCode:
          type: string
        OrgUnitXRefCode:
          type: string
        ZoneXRefCode:
          type: string
        EffectiveStart:
          type: string
          format: date-time
        EffectiveEnd:
          type: string
          format: date-time
        PatternOffset:
          type: integer
          format: int32
        PatternLength:
          type: integer
          format: int32
        Pattern:
          type: array
          items:
            $ref: '#/components/schemas/KpiTargetPatternDetail'
    KpiTargetPatternDetail:
      type: object
      properties:
        PatternIndex:
          type: integer
          format: int32
        Value:
          type: number
          format: double
    KpiTargetPatternPOST:
      type: object
      properties:
        Assignment:
          type: array
          items:
            $ref: '#/components/schemas/KpiTargetPatternAssignment'
        Pattern:
          type: array
          items:
            $ref: '#/components/schemas/KpiTargetPatternDetail'
    KpiTargetPatternAssignment:
      type: object
      properties:
        KpiXRefCode:
          type: string
        OrgUnitXRefCode:
          type: string
        ZoneXRefCode:
          type: string
        EffectiveStart:
          type: string
          format: date-time
        EffectiveEnd:
          type: string
          format: date-time
        PatternOffset:
          type: integer
          format: int32
    Payload_LaborCostResult:
      type: object
      properties:
        Data:
          $ref: '#/components/schemas/LaborCostResult'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    LaborCostResult:
      type: object
      properties:
        LocationXRefCode:
          type: string
        CalendarDate:
          type: string
          format: date-time
        Currency:
          type: string
        Totals:
          $ref: '#/components/schemas/LaborCostTotalResult'
        Intervals:
          type: array
          items:
            $ref: '#/components/schemas/LaborCostTimeInterval'
    LaborCostTotalResult:
      type: object
      properties:
        LaborCost:
          type: number
          format: double
        LaborHours:
          type: number
          format: double
    LaborCostTimeInterval:
      type: object
      properties:
        IntervalStartTime:
          type: string
          format: date-time
        IntervalEndTime:
          type: string
          format: date-time
        Totals:
          $ref: '#/components/schemas/LaborCostTotalResult'
    Payload_LaborDemand:
      type: object
      properties:
        Data:
          $ref: '#/components/schemas/LaborDemand'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    LaborDemand:
      type: object
      properties:
        OrgUnitXRefCode:
          type: string
        SchedulePeriodStart:
          type: string
          format: date-time
        LaborDemands:
          type: array
          items:
            $ref: '#/components/schemas/LaborDemandItem'
    LaborDemandItem:
      type: object
      properties:
        ZoneXRefCode:
          type: string
        LaborMeasureXRefCode:
          type: string
        ActivityXRefCode:
          type: string
        AxisXRefCode:
          type: string
        Day:
          type: string
          format: date-time
        Time:
          type: string
          format: date-time
        Hours:
          type: number
          format: double
        ServiceHours:
          type: number
          format: double
        NonServiceHours:
          type: number
          format: double
    Payload_LaborMetricCodes:
      type: object
      properties:
        Data:
          $ref: '#/components/schemas/LaborMetricCodes'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    LaborMetricCodes:
      type: object
      properties:
        Name:
          type: string
        Description:
          type: string
        EffectiveStart:
          type: string
          format: date-time
        EffectiveEnd:
          type: string
          format: date-time
        LaborMetricsCodeXRefCode:
          type: string
        ClockTransferCode:
          type: string
        LedgerCode:
          type: string
        OrgXRefCodes:
          type: array
          items:
            type: string
        LaborMetricsTypeXRefCode:
          type: string
    LaborMetricsCodesForSubmit:
      type: object
      properties:
        ShortName:
          type: string
        LongName:
          type: string
        EffectiveFrom:
          type: string
          format: date-time
        EffectiveEnd:
          type: string
          format: date-time
        LaborMetricsCodeXRefCode:
          type: string
        ClockTransferCode:
          type: string
        LedgerCode:
          type: string
        OrgUnitXRefCodes:
          type: array
          items:
            type: string
        LaborMetricsTypeXRefCode:
          type: string
        IsDeleted:
          type: boolean
    LaborMetricsCodePostPatchResponse:
      type: object
      properties:
        LaborMetricsCodePostPatchResponseXRefCode:
          type: string
    Payload_LaborMetricType:
      type: object
      properties:
        Data:
          $ref: '#/components/schemas/LaborMetricType'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    LaborMetricType:
      type: object
      properties:
        Name:
          type: string
        Description:
          type: string
        ClockTransferCode:
          type: string
        LaborMetricTypeXRefCode:
          type: string
    LaborMetricTypeForSubmit:
      type: object
      properties:
        ShortName:
          type: string
        LongName:
          type: string
        LaborMetricTypeXRefCode:
          type: string
        ClockTransferCode:
          type: string
        IsDeleted:
          type: boolean
    LaborMetricTypePatchPostResponse:
      type: object
      properties:
        LaborMetricTypePatchPostResponseXrefCode:
          type: string
    LaborValidationFilters:
      type: object
      properties:
        LaborValidationPolicyXRefCode:
          type: string
        FilterXRefCodes:
          type: array
          items:
            $ref: '#/components/schemas/LaborValidationMetricFilterXRefCodes'
    LaborValidationMetricFilterXRefCodes:
      type: object
      properties:
        Criteria:
          type: array
          items:
            $ref: '#/components/schemas/LaborValidationModel'
    LaborValidationModel:
      type: object
      properties:
        CodeName:
          type: string
        XRefCode:
          type: object
    PaginatedPayload_IEnumerable_LaborValidationRule:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/LaborValidationRule'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
        Paging:
          $ref: '#/components/schemas/Paging'
    LaborValidationRule:
      type: object
      properties:
        PolicyId:
          type: integer
          format: int32
        PolicyXRefCode:
          type: string
        XRefCode:
          type: string
        Name:
          type: string
        Description:
          type: string
        EffectiveFrom:
          type: string
          format: date-time
        EffectiveTo:
          type: string
          format: date-time
        Active:
          type: boolean
        CodeName:
          type: string
        Sequence:
          type: integer
          format: int32
        ValidationErrorMessage:
          type: string
        SeverityLevel:
          type: integer
          format: int32
          default: 4
          example: 4
        Models:
          type: array
          items:
            $ref: '#/components/schemas/LaborValidationModel'
        Children:
          type: array
          items:
            $ref: '#/components/schemas/LaborValidationQualifier'
        Qualifiers:
          type: array
          items:
            $ref: '#/components/schemas/LaborValidationQualifier'
    LaborValidationQualifier:
      type: object
      properties:
        XRefCode:
          type: string
        Name:
          type: string
        Description:
          type: string
        Active:
          type: boolean
        Sequence:
          type: integer
          format: int32
        CodeName:
          type: string
        Models:
          type: array
          items:
            $ref: '#/components/schemas/LaborValidationModel'
        Children:
          type: array
          items:
            $ref: '#/components/schemas/LaborValidationQualifier'
    Payload_Boolean:
      type: object
      properties:
        Data:
          type: boolean
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    Payload_IEnumerable_LaborValidationRule:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/LaborValidationRule'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    Payload_LegacyLaborMetricCodes:
      type: object
      properties:
        Data:
          $ref: '#/components/schemas/LegacyLaborMetricCodes'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    LegacyLaborMetricCodes:
      type: object
      properties:
        Name:
          type: string
        Description:
          type: string
        LegacyLaborMetricType:
          type: string
        LegacyLaborMetricXRefCode:
          type: string
    LegacyLaborMetricForSubmit:
      type: object
      properties:
        ShortName:
          type: string
        LongName:
          type: string
        LegacyLaborMetricType:
          type: string
        LegacyLaborMetricXRefCode:
          type: string
    LegacyLaborMetricPatchPostDeleteResponse:
      type: object
      properties:
        XRefCode:
          type: string
    Payload_IEnumerable_LocationAddresses:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/LocationAddresses'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    LocationAddresses:
      type: object
      properties:
        Description:
          type: string
        Address:
          type: string
        AddressLineTwo:
          type: string
        ZipPostalCode:
          type: string
        CountryName:
          type: string
        StateProvince:
          type: string
        City:
          type: string
        County:
          type: string
        IsTaxation:
          type: boolean
        CountryCode:
          type: string
        StateProvinceCode:
          type: string
        LocationInJtEconomicDevDistAreaJedd:
          type: boolean
        JeddTaxes:
          type: string
        TaxAuthorityInstance:
          type: string
        XRefCode:
          type: string
        ShortName:
          type: string
        LongName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    Payload_IEnumerable_EmployeeMaritalStatus:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeMaritalStatus'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    Payload_OperatingHours:
      type: object
      properties:
        Data:
          $ref: '#/components/schemas/OperatingHours'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    OperatingHours:
      type: object
      properties:
        EffectiveStart:
          type: string
          format: date-time
        EffectiveEnd:
          type: string
          format: date-time
        OrgUnitXRefCode:
          type: string
        OperatingHours:
          type: array
          items:
            $ref: '#/components/schemas/OperatingHoursItem'
    OperatingHoursItem:
      type: object
      properties:
        Day:
          type: string
          format: date-time
        IsClosed:
          type: integer
          format: int32
        NoDayPattern:
          type: integer
          format: int32
        ShortName:
          type: string
        LongName:
          type: string
        OpenTime:
          type: string
          format: date-time
        CloseTime:
          type: string
          format: date-time
        IsException:
          type: integer
          format: int32
        LastModifiedTimestamp:
          type: string
          format: date-time
        Client:
          type: integer
          format: int32
    OperatingHoursExceptionPOST:
      type: object
      properties:
        EffectiveStart:
          type: string
          format: date-time
        EffectiveEnd:
          type: string
          format: date-time
        OrgUnitXRefCode:
          type: string
        OpHrsPatternAssignment:
          type: integer
          format: int64
        OpHrsPatternException:
          type: integer
          format: int64
        OperatingHoursExceptionDay:
          type: array
          items:
            $ref: '#/components/schemas/OperatingHoursExceptionDay'
        OperatingHoursDayPattern:
          $ref: '#/components/schemas/OperatingHoursDayPattern'
    OperatingHoursExceptionDay:
      type: object
      properties:
        ExceptionName:
          type: string
        ExceptionDescription:
          type: string
        ExceptionStartDateTime:
          type: string
          format: date-time
        ExceptionEndDateTime:
          type: string
          format: date-time
        IsClosed:
          type: string
          format: date-time
        OperatingHoursRecurExceptionDetails:
          $ref: '#/components/schemas/OperatingHoursRecurExceptionDetails'
    OperatingHoursDayPattern:
      type: object
      properties:
        SundayStartTime:
          type: string
          format: date-time
        SundayEndTime:
          type: string
          format: date-time
        MondayStartTime:
          type: string
          format: date-time
        MondayEndTime:
          type: string
          format: date-time
        TuesdayStartTime:
          type: string
          format: date-time
        TuesdayEndTime:
          type: string
          format: date-time
        WednesdayStartTime:
          type: string
          format: date-time
        WednesdayEndTime:
          type: string
          format: date-time
        ThursdayStartTime:
          type: string
          format: date-time
        ThursdayEndTime:
          type: string
          format: date-time
        FridayStartTime:
          type: string
          format: date-time
        FridayEndTime:
          type: string
          format: date-time
        SaturdayStartTime:
          type: string
          format: date-time
        SaturdayEndTime:
          type: string
          format: date-time
    OperatingHoursRecurExceptionDetails:
      type: object
      properties:
        RecurrenceType:
          type: integer
          format: int32
        RecurrencePeriod:
          type: integer
          format: int32
        RecurrenceValue:
          type: string
        RecurrenceEndDate:
          type: string
          format: date-time
    Payload_IEnumerable_Location:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/Location'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    Payload_Location:
      type: object
      properties:
        Data:
          $ref: '#/components/schemas/Location'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    Payload_IEnumerable_PayClass:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/PayClass'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    Payload_PayClass:
      type: object
      properties:
        Data:
          $ref: '#/components/schemas/PayClass'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    Payload_IEnumerable_Payee:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/Payee'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    Payee:
      type: object
      properties:
        Name:
          type: string
        Description:
          type: string
        XRefCode:
          type: string
        PayeeCategoryName:
          type: string
        PayeeCategoryXRefCode:
          type: string
        OperatingCountryCode:
          type: string
        OperatingCountryName:
          type: string
        Active:
          type: boolean
        EarningPayee:
          type: boolean
        DeductionPayee:
          type: boolean
        SystemPayee:
          type: boolean
        ElectronicServiceAddress:
          type: string
        BusinessNumber:
          type: string
        UniqueSuperIdentifier:
          type: string
        Address:
          $ref: '#/components/schemas/PayeeAddress'
        PaymentMethod:
          $ref: '#/components/schemas/PayeePaymentMethod'
        HealthCareProvider:
          $ref: '#/components/schemas/PayeeHealthCareProvider'
        PayeeParameters:
          type: array
          items:
            $ref: '#/components/schemas/PayeeParameter'
        StateCoverage:
          type: array
          items:
            $ref: '#/components/schemas/PayeeStateCoverage'
    PayeeAddress:
      type: object
      properties:
        AddressLine3:
          type: string
        AddressLine1:
          type: string
        AddressLine2:
          type: string
        City:
          type: string
        StateProvinceCode:
          type: string
        StateProvinceName:
          type: string
        CountryCode:
          type: string
        CountryName:
          type: string
        PostalCode:
          type: string
    PayeePaymentMethod:
      type: object
      properties:
        PaymentMethodXrefCode:
          type: string
        PaymentMethodName:
          type: string
        StatementMessage:
          type: string
        PayableTo:
          type: string
        CombineEmployee:
          type: boolean
        CombineEarningAndDeduction:
          type: boolean
        ShowEmployeeDetail:
          type: boolean
        AllowNegativeAmounts:
          type: boolean
        AccountNumber:
          type: string
        TransitNumber:
          type: string
        AccountTypeName:
          type: string
        AccountTypeCode:
          type: string
        BankName:
          type: string
        BankNumber:
          type: string
        SuppressPrintOfAdviceStatements:
          type: boolean
        PaymentFrequencyName:
          type: string
        PaymentFrequencyXRefCode:
          type: string
        StatementLanguageCode:
          type: string
        StatementLanguageName:
          type: string
        BuildingSocietyNumber:
          type: string
        PayeeCode:
          type: string
        PayeeReferenceNumber:
          type: string
        ScheduleStartDate:
          type: string
          format: date-time
        ScheduleEndDate:
          type: string
          format: date-time
        SchedulePayDate:
          type: string
          format: date-time
    PayeeHealthCareProvider:
      type: object
      properties:
        EffectiveFrom:
          type: string
          format: date-time
        EffectiveTo:
          type: string
          format: date-time
        HealthInsuranceType:
          type: integer
          format: int32
        HealthCareBusinessNumber:
          type: integer
          format: int32
        HealthCareSuccessorBusinessNumber:
          type: integer
          format: int32
        AdditionalContributionPercentage:
          type: number
          format: double
        U1Percentage:
          type: number
          format: double
        U2Percentage:
          type: number
          format: double
        DataCollectionPoint:
          type: integer
          format: int32
        ForwardingOffice:
          type: integer
          format: int32
        InstitutionCode:
          type: integer
          format: int32
    PayeeParameter:
      type: object
      properties:
        PayeeParameterName:
          type: string
        PayeeParameterDescription:
          type: string
        PayeeParameterXRefCode:
          type: string
        AccessTypeName:
          type: string
        AccessTypeCode:
          type: string
        ParameterTypeName:
          type: string
        ParameterTypeXRefCode:
          type: string
        Required:
          type: boolean
        Pattern:
          type: string
        MaxLength:
          type: integer
          format: int32
        DataTypeCode:
          type: string
    PayeeStateCoverage:
      type: object
      properties:
        StateCode:
          type: string
        StateName:
          type: string
        EffectiveStart:
          type: string
          format: date-time
        EffectiveEnd:
          type: string
          format: date-time
    Payload_List_Payee:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/Payee'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    Payload_PayGroupCalendar:
      type: object
      properties:
        Data:
          $ref: '#/components/schemas/PayGroupCalendar'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    PayGroupCalendar:
      type: object
      properties:
        PayGroupXRefCode:
          type: string
        PayGroupName:
          type: string
        Frequency:
          type: string
        PayrollFrequency:
          type: string
        DayStartOfWeek:
          type: string
        Country:
          type: string
        CollectionFrequency:
          type: string
        Calendar:
          type: array
          items:
            $ref: '#/components/schemas/PayGroupCalendarDetails'
    PayGroupCalendarDetails:
      type: object
      properties:
        PeriodStartDate:
          type: string
        PeriodEndDate:
          type: string
        TimeCollectionStartDate:
          type: string
        TimeCollectionEndDate:
          type: string
        OffsetPayPeriodStartDate:
          type: string
        OffsetPayPeriodEndDate:
          type: string
        ApproveByDate:
          type: string
          format: date-time
        TransmitByDate:
          type: string
          format: date-time
        CommitByDate:
          type: string
          format: date-time
        PayrollCommitted:
          type: boolean
        DataGateOpen:
          type: string
          format: date-time
        DataGateClose:
          type: string
          format: date-time
        ImpoundBy:
          type: string
        PayDate:
          type: string
        ContractPayDate:
          type: string
        LedgerCode1:
          type: string
        LedgerCode2:
          type: string
        GLAccrualPercent:
          type: number
          format: double
        PayPeriod:
          type: string
        PayPeriodSuffix:
          type: string
        Locked:
          type: boolean
        LockDate:
          type: string
        LockedBy:
          type: integer
          format: int32
        AutoLockDate:
          type: string
        SupervisorDate:
          type: string
        Transmitted:
          type: boolean
        TransmittedDate:
          type: string
        TransmittedBy:
          type: integer
          format: int32
        Approved:
          type: boolean
        ApprovedDate:
          type: string
        ApprovedBy:
          type: integer
          format: int32
        Closed:
          type: boolean
        ClosedDate:
          type: string
        ClosedBy:
          type: integer
          format: int32
        ChecklistClosed:
          type: boolean
        ChecklistClosedDate:
          type: string
        ChecklistClosedBy:
          type: integer
          format: int32
        ArrearsStart:
          type: string
        ArrearsEnd:
          type: string
        FuturePunchesEnabled:
          type: boolean
    PaginatedPayload_IEnumerable_EmployeePayrollElection:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeePayrollElection'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
        Paging:
          $ref: '#/components/schemas/Paging'
    EmployeePayrollElection:
      type: object
      properties:
        EmployeeName:
          type: string
        EmployeeNumber:
          type: string
        EmployeeXRefCode:
          type: string
        RowNumber:
          type: integer
          format: int64
        Elections:
          type: array
          items:
            $ref: '#/components/schemas/PayrollElection'
        CurrentPayRunStatus:
          type: string
        CurrentPayPeriodStart:
          type: string
          format: date-time
        CurrentPayPeriodEnd:
          type: string
          format: date-time
        PreviousPayPeriodStart:
          type: string
          format: date-time
        PreviousPayPeriodEnd:
          type: string
          format: date-time
    PayrollElection:
      type: object
      properties:
        IsNew:
          type: boolean
        ElectionXrefCode:
          type: string
        Code:
          type: string
        Type:
          type: string
        TypeCode:
          type: string
        EarningDeductionXRefCode:
          type: string
        EffectiveStart:
          type: string
          format: date-time
        EffectiveEnd:
          type: string
          format: date-time
        CreatedDate:
          type: string
          format: date-time
        LastModifiedTimestamp:
          type: string
          format: date-time
        Source:
          type: string
        Schedule:
          type: string
        ScheduleXRefCode:
          type: string
        IsBlocked:
          type: boolean
        IsOptOut:
          type: integer
          format: int32
        OrgUnitXRefCode:
          type: string
        DeptJobXRefCode:
          type: string
        SourceTypeXRefCode:
          type: string
        PayeePayableTo:
          type: string
        DefaultPayee:
          type: string
        DefaultPayeeXRefCode:
          type: string
        PensionTracingNumber:
          type: string
        IsCreatedByBenefits:
          type: boolean
        ContinuePaymentOnStatutoryPay:
          type: boolean
        ArrearMultipleLimitOption:
          type: number
          format: double
        EmployeeDeductionParams:
          type: array
          items:
            $ref: '#/components/schemas/PayrollEmployeeDeductionParameter'
        EmployeeEarningParams:
          type: array
          items:
            $ref: '#/components/schemas/PayrollEmployeeEarningParameter'
        EmployeeDeductionLimits:
          type: array
          items:
            $ref: '#/components/schemas/PayrollEmployeeDeductionLimit'
        EmployeeEarningLimits:
          type: array
          items:
            $ref: '#/components/schemas/PayrollEmployeeEarningLimit'
        EmployeePayeeEarnings:
          type: array
          items:
            $ref: '#/components/schemas/PRPayeeEarning'
        EmployeePayeeDeductions:
          type: array
          items:
            $ref: '#/components/schemas/PRPayeeDeduction'
        EmployeeDeductionPayeeParameters:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeDeductionPayeeParameter'
        EmployeeEarningPayeeParameters:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeEarningPayeeParameter'
        ExternalXrefCode:
          type: string
    PayrollEmployeeDeductionParameter:
      type: object
      properties:
        ParamCodeName:
          type: string
        ShortName:
          type: string
        EmployeeElectedValue:
          type: number
          format: double
        PayGroupDefaultValue:
          type: number
          format: double
        LastModifiedTimestamp:
          type: string
          format: date-time
    PayrollEmployeeEarningParameter:
      type: object
      properties:
        ParamCodeName:
          type: string
        ShortName:
          type: string
        EmployeeElectedValue:
          type: number
          format: double
        PayGroupDefaultValue:
          type: number
          format: double
        LastModifiedTimestamp:
          type: string
          format: date-time
    PayrollEmployeeDeductionLimit:
      type: object
      properties:
        LimitAmount:
          type: number
          format: double
        LimitPercent:
          type: number
          format: double
        LimitTypeCodeName:
          type: string
        ShortNameFormattedAmount:
          type: string
        ShortNameFormattedPercent:
          type: string
        PayGroupDefaultLimitAmount:
          type: number
          format: double
        PayGroupDefaultLimitPercent:
          type: number
          format: double
        PRDeductionLimitXRefCode:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    PayrollEmployeeEarningLimit:
      type: object
      properties:
        LimitTypeCodeName:
          type: string
        LimitAmount:
          type: number
          format: double
        LimitPercent:
          type: number
          format: double
        ShortNameFormattedAmount:
          type: string
        ShortNameFormattedPercent:
          type: string
        PayGroupDefaultLimitAmount:
          type: number
          format: double
        PayGroupDefaultLimitPercent:
          type: number
          format: double
        PREarningLimitXRefCode:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    PRPayeeEarning:
      type: object
      properties:
        ShortName:
          type: string
        PayeeXRefCode:
          type: string
        LongName:
          type: string
        PaymentMethodCode:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    PRPayeeDeduction:
      type: object
      properties:
        LongName:
          type: string
        PaymentMethodCode:
          type: string
        PayeeXRefCode:
          type: string
        ShortName:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmployeeDeductionPayeeParameter:
      type: object
      properties:
        ShortName:
          type: string
        XRefCode:
          type: string
        EmployeeElectedValue:
          type: string
        PayeeDefaultValue:
          type: string
        Comments:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    EmployeeEarningPayeeParameter:
      type: object
      properties:
        ShortName:
          type: string
        XRefCode:
          type: string
        EmployeeElectedValue:
          type: string
        PayeeDefaultValue:
          type: string
        Comments:
          type: string
        LastModifiedTimestamp:
          type: string
          format: date-time
    Payload_IEnumerable_EmployeePayrollElection:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeePayrollElection'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    EmployeePayrollElectionDeletionModel:
      type: object
      properties:
        EmployeeXRefCode:
          type: string
        Elections:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeElectionAPIDeletionModel'
    EmployeeElectionAPIDeletionModel:
      type: object
      properties:
        ElectionXrefCode:
          type: string
        SourceTypeXRefCode:
          type: string
    Payload_IEnumerable_EmployeePayrollElectionDeletionModel:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeePayrollElectionDeletionModel'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    ImportSetModel:
      type: object
      properties:
        ImportSetName:
          type: string
        DataEntries:
          type: array
          items:
            $ref: '#/components/schemas/DataEntryDeleteModel'
    DataEntryDeleteModel:
      type: object
      properties:
        DataEntryXRefCode:
          type: integer
          format: int64
    Payload_PayrollPayEntryImportHistory:
      type: object
      properties:
        Data:
          $ref: '#/components/schemas/PayrollPayEntryImportHistory'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    PayrollPayEntryImportHistory:
      type: object
      properties:
        PayGroupXRefCode:
          type: string
        Currency:
          type: string
        PeriodStart:
          type: string
        PeriodEnd:
          type: string
        PayDate:
          type: string
        PPN:
          type: string
        Imports:
          type: array
          items:
            $ref: '#/components/schemas/PayrollPayEntryImportHistoryDetails'
    PayrollPayEntryImportHistoryDetails:
      type: object
      properties:
        Source:
          type: string
        ImportSetName:
          type: string
        ImportIdentifier:
          type: string
        SourceFile:
          type: string
        UploadedDateUTC:
          type: string
          format: date-time
        StartDate:
          type: string
          format: date-time
        FinishedDate:
          type: string
          format: date-time
        ErrorActionCode:
          type: integer
          format: int32
        ErrorOccurActionName:
          type: string
        ImportStatus:
          type: string
        TotalRecordsIncluded:
          type: integer
          format: int32
        TotalRecordsImported:
          type: integer
          format: int32
        TotalInvalidRecords:
          type: integer
          format: int32
        Errors:
          type: array
          items:
            $ref: '#/components/schemas/PayrollPayEntryImportHistoryErrorDetails'
    PayrollPayEntryImportHistoryErrorDetails:
      type: object
      properties:
        LineNumber:
          type: integer
          format: int32
        LineContent:
          type: string
        ErrorMessage:
          type: string
    Payload_IEnumerable_TaxAuthorityInstanceDetails:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/TaxAuthorityInstanceDetails'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    TaxAuthorityInstanceDetails:
      type: object
      properties:
        Name:
          type: string
        Description:
          type: string
        EmployerTax:
          type: boolean
        EmployeeTax:
          type: boolean
        TaxAuthorityInstance:
          type: string
        CountryCode:
          type: string
    Payload_PayRunStatus:
      type: object
      properties:
        Data:
          $ref: '#/components/schemas/PayRunStatus'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    PayRunStatus:
      type: object
      properties:
        PayGroupXRefCode:
          type: string
        PayGroupName:
          type: string
        PPN:
          type: string
        PayDate:
          type: string
          format: date-time
        PeriodStartDate:
          type: string
          format: date-time
        PeriodEndDate:
          type: string
          format: date-time
        CountryCode:
          type: string
        CountryName:
          type: string
        Currency:
          type: string
        Status:
          type: string
        RejectionReason:
          type: string
        RejectionReasonDescription:
          type: string
        RejectionReasonXRefCode:
          type: string
        RejectionReasonCategory:
          type: string
        RejectionReasonCategoryXRefCode:
          type: string
    Payload_IEnumerable_PayType:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/PayType'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    Payload_PayType:
      type: object
      properties:
        Data:
          $ref: '#/components/schemas/PayType'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    Payload_IEnumerable_PersonAddress:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/PersonAddress'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    Payload_IEnumerable_PersonContact:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/PersonContact'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    Payload_IEnumerable_PlanLaborCategoryCode:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/PlanLaborCategoryCode'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    PlanLaborCategoryCode:
      type: object
      properties:
        CategoryCodeXRefCode:
          type: string
        ShortName:
          type: string
    Payload_IEnumerable_PlanLaborStandardDriver:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/PlanLaborStandardDriver'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    PlanLaborStandardDriver:
      type: object
      properties:
        DriverXRefCode:
          type: string
        DriverShortName:
          type: string
        DriverTypeXRefCode:
          type: string
        DriverTypeShortName:
          type: string
    Payload_IEnumerable_PlanTarget:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/PlanTarget'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    PlanTarget:
      type: object
      properties:
        PlanTargetXRefCode:
          type: string
        Name:
          type: string
        Description:
          type: string
        EffectiveStart:
          type: string
          format: date-time
        EffectiveEnd:
          type: string
          format: date-time
        TargetValue:
          type: number
          format: double
        KpiXRefCode:
          type: string
        ZoneXRefCode:
          type: string
        DaysOfWeek:
          type: array
          items:
            type: string
        OrgUnitXRefCodes:
          type: array
          items:
            type: string
        CreationOrgUnitXRefCode:
          type: string
    Payload_IEnumerable_Position:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/Position'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    Payload_Position:
      type: object
      properties:
        Data:
          $ref: '#/components/schemas/Position'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    Payload_IEnumerable_PRGLSplitSet:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/PRGLSplitSet'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    PaginatedPayload_IEnumerable_BaseProject:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/BaseProject'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
        Paging:
          $ref: '#/components/schemas/Paging'
    BaseProject:
      type: object
      properties:
        ProjectXRefCode:
          type: string
        ShortName:
          type: string
        ParentProjectXRefCode:
          type: string
        StartDate:
          type: string
          format: date-time
        DueDate:
          type: string
          format: date-time
    ProjectForSubmit:
      type: object
      properties:
        ProjectXRefCode:
          type: string
        ShortName:
          type: string
        CreationOrgUnitXRefCodes:
          type: array
          items:
            type: string
        ClockTransferCode:
          type: string
        ProjectPriority:
          type: integer
          format: int32
        AccountNum:
          type: string
        IFRSClassification:
          type: boolean
        LongName:
          type: string
        LedgerCode:
          type: string
        CertifiedPayrollProjectNumber:
          type: string
        ProjectClientXRefCode:
          type: string
        ProjectTypeXRefCode:
          type: string
        ProjectPhaseXRefCode:
          type: string
        ProductGroupXRefCode:
          type: string
        ProductModuleXRefCode:
          type: string
        StartDate:
          type: string
          format: date-time
        DueDate:
          type: string
          format: date-time
        BudgetHours:
          type: number
          format: double
        BudgetAmount:
          type: number
          format: double
        EmployeeAssignment:
          $ref: '#/components/schemas/ProjectAssignmentType'
        DeptJobAssignment:
          $ref: '#/components/schemas/ProjectAssignmentType'
        DepartmentAssignment:
          $ref: '#/components/schemas/ProjectAssignmentType'
        CompletedDate:
          type: string
          format: date-time
        PctComplete:
          type: number
          format: double
        IsDeleted:
          type: boolean
        PayCodeXRefCodeChargeToHours:
          $ref: '#/components/schemas/ProjectAssignmentType'
        PayCodeXRefCodeChargeToAmount:
          $ref: '#/components/schemas/ProjectAssignmentType'
        ParentProjectXRefCode:
          type: string
        TaxLocationAddressXRefCode:
          type: string
        IsResidentAddressUsedForTaxation:
          type: boolean
        IsCOEProject:
          type: boolean
    ProjectAssignmentType:
      type: object
      properties:
        IsAssignedAll:
          type: boolean
        XrefCodes:
          type: array
          items:
            type: string
    ProjectsPostResponse:
      type: object
      properties:
        ProjectsPostResponseXRefCode:
          type: string
    Payload_Projects:
      type: object
      properties:
        Data:
          $ref: '#/components/schemas/Projects'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    Projects:
      type: object
      properties:
        CreationOrgUnitXRefCodes:
          type: array
          items:
            type: string
        LongName:
          type: string
        ClockTransferCode:
          type: string
        ProjectPriority:
          type: integer
          format: int32
        AccountNum:
          type: string
        LedgerCode:
          type: string
        IFRSClassification:
          type: boolean
        CertifiedPayrollProjectNumber:
          type: string
        CompletedDate:
          type: string
          format: date-time
        PctComplete:
          type: number
          format: double
        BudgetHours:
          type: number
          format: double
        BudgetAmount:
          type: number
          format: double
        ProjectClientXRefCode:
          type: string
        ProjectTypeXRefCode:
          type: string
        ProjectPhaseXRefCode:
          type: string
        ProductGroupXRefCode:
          type: string
        ProductModuleXRefCode:
          type: string
        Deleted:
          type: boolean
        TaxLocationAddressXRefCode:
          type: string
        ChildProjectXRefCodes:
          type: array
          items:
            type: string
        EmployeeXRefCodes:
          $ref: '#/components/schemas/ProjectAssignmentType'
        DeptJobXRefCodes:
          $ref: '#/components/schemas/ProjectAssignmentType'
        DepartmentXRefCodes:
          $ref: '#/components/schemas/ProjectAssignmentType'
        PayCodeXRefCodeChargeToHours:
          $ref: '#/components/schemas/ProjectAssignmentType'
        PayCodeXRefCodeChargeToAmount:
          $ref: '#/components/schemas/ProjectAssignmentType'
        IsResidentAddressUsedForTaxation:
          type: boolean
        IsCOEProject:
          type: boolean
        ProjectXRefCode:
          type: string
        ShortName:
          type: string
        ParentProjectXRefCode:
          type: string
        StartDate:
          type: string
          format: date-time
        DueDate:
          type: string
          format: date-time
    Payload_IEnumerable_ReportMetadata:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/ReportMetadata'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    ReportMetadata:
      type: object
      properties:
        Name:
          type: string
          description: "Name of the Report.\r\nThe name will be localized, based on the Session Culture."
        Description:
          type: string
          description: "Description of the Report.\r\nThe description will be localized, based on the Session Culture."
        XRefCode:
          type: string
          description: "Reference Code for the Report.\r\nThis is a unique, human readable, code used to identify the Report."
        MaxRows:
          type: integer
          description: "Maximum number of rows the Report will return as part of it's ResultSet.\r\nIf the MaxRows is assigned -1, it will execute to include all possible rows in it's ResultSet."
          format: int32
        ColumnMetadata:
          type: array
          items:
            $ref: '#/components/schemas/ReportColumnMetadata'
          description: An array of ReportColumnMetadata objects.
        Parameters:
          type: array
          items:
            $ref: '#/components/schemas/ReportParameterMetadata'
          description: Collection of report parameters defined by the report.
      description: This class provides information about a report.
    ReportColumnMetadata:
      type: object
      properties:
        CodeName:
          type: string
          description: "CodeName is a unique name that can be used with code\r\nto refer to this specific column.  Its value should be consistent."
        DisplayName:
          type: string
          description: "This is a name as defined by a user when developing this report.  This name\r\nwould be a human facing name that would be used on a printed report.\r\nThis field is used as the key to the values dictionary"
        DataType:
          type: string
          description: This is a string representation of the data type.
      description: This class encapsulates the report data generated during the execution of the report.
    ReportParameterMetadata:
      type: object
      properties:
        Name:
          type: string
          description: Name of the parameter.
        DisplayName:
          type: string
          description: Human readable name of the parameter.
        ReportParameterMetadataId:
          type: string
          description: Unique Id of parameter.
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        DataType:
          type: string
          description: Data type of the parameter.
        Operator:
          type: string
          description: "Operator type of the parameter, such as =, &lt;, &gt;=, etc...\r\nNot all parameters have operator type.\r\nFor example, SQL Parameters don't have operators."
        DefaultValue:
          type: string
          description: "Default value that will be used if no other value is provided for the parameter.\r\nNot all parameters have default value.\r\nEnd-user needs to supply a value in here if the parameter doesn't have value.\r\nReference values should contain Ids and be comma separated. E.g \"1,2,3\""
        IsRequired:
          type: boolean
          description: True if a value needs to be supplied.
        AvailableValues:
          type: array
          items:
            $ref: '#/components/schemas/ListValue'
          description: List of available values a parameter can have.
      description: "Report meta data that defines report parameters.\r\nParameter values are supplied by the end-user for execution.\r\nAll parameters must be supplied during execution.\r\nNot all Parameters have default value."
    ListValue:
      type: object
      properties:
        ListValueId:
          type: integer
          description: "The Id of the list item.  This value would be passed as the parameter value.\r\nMultiple Id's can be passed as a parameter value if comma separated."
          format: int32
        Name:
          type: string
          description: The name that can be displayed in a list to the user.
    Payload_List_ReportMetadata:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/ReportMetadata'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    PaginatedPayload_Report:
      type: object
      properties:
        Data:
          $ref: '#/components/schemas/Report'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
        Paging:
          $ref: '#/components/schemas/Paging'
    Report:
      type: object
      properties:
        XRefCode:
          type: string
          description: "Reference Code for the Report.\r\nThis is a unique, human readable, code used to identify the Report."
        Rows:
          type: array
          items:
            type: object
            additionalProperties:
              type: string
          description: "An array of Dictionary objects which contain the report data. \r\nEach dictionary object represents a row: the key is column name and the values is the column value for the row."
      description: This class encapsulates the report data generated during the execution of the report.
    EmployeeShiftBidDTO:
      required:
        - GroupXRefCode
        - BidState
      type: object
      properties:
        GroupXRefCode:
          type: string
        BidState:
          type: string
    Payload_IEnumerable_ManagerShiftBid:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/ManagerShiftBid'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    ManagerShiftBid:
      type: object
      properties:
        GroupXRefCode:
          type: string
          readOnly: true
        QualifyingBids:
          type: integer
          format: int64
        BiddingEmployees:
          type: array
          items:
            $ref: '#/components/schemas/BidderInfo'
        EmployeeScheduleXRefCodes:
          type: array
          items:
            type: string
        EmployeeSchedule:
          $ref: '#/components/schemas/EmployeeSchedule'
    BidderInfo:
      type: object
      properties:
        EmployeeXRefCode:
          type: string
        BaseRate:
          type: number
          format: double
        CurrentWeeklyHours:
          type: number
          format: double
        SeniorityDate:
          type: string
          format: date-time
    ManagerAssignShiftBidDTO:
      required:
        - GroupXRefCode
        - EmployeeXRefCode
      type: object
      properties:
        GroupXRefCode:
          type: string
        EmployeeXRefCode:
          type: string
    PaginatedPayload_IEnumerable_Skill:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/Skill'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
        Paging:
          $ref: '#/components/schemas/Paging'
    Payload_IEnumerable_Skill:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/Skill'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    Payload_IEnumerable_EmployeeTimeAwayFromWork:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeTimeAwayFromWork'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    EmployeeTimeAwayFromWork:
      type: object
      properties:
        TAFWXRefCode:
          type: string
        DateOfRequest:
          type: string
          format: date-time
        TimeStart:
          type: string
          format: date-time
        TimeEnd:
          type: string
          format: date-time
        NetHours:
          type: number
          format: double
        NetUnits:
          type: number
          format: double
        NetUnitsType:
          type: integer
          format: int32
        ManagerComment:
          type: string
        EmployeeComment:
          type: string
        ReasonName:
          type: string
        AllDay:
          type: boolean
        HalfDay:
          type: boolean
        DailyElapsedHours:
          type: number
          format: double
    EmployeeTimeAwayFromWorkForSubmit:
      type: object
      properties:
        EmployeeXRefCode:
          type: string
        TAFWXRefCode:
          type: string
        PayAdjustmentCodeXRefCode:
          type: string
        StatusXRefCode:
          type: string
        TimeStart:
          type: string
          format: date-time
        TimeEnd:
          type: string
          format: date-time
        NetHours:
          type: number
          format: double
        NetHoursPerDay:
          type: array
          items:
            type: number
            format: double
        ManagerComment:
          type: string
        EmployeeComment:
          type: string
        AllDay:
          type: boolean
        HalfDay:
          type: boolean
        Days:
          type: integer
          format: int32
    Payload_EmployeeTimeAwayFromWorkForSubmit:
      type: object
      properties:
        Data:
          $ref: '#/components/schemas/EmployeeTimeAwayFromWorkForSubmit'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    Payload_IEnumerable_EmployeeTimeAwayFromWorkForSubmit:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeTimeAwayFromWorkForSubmit'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    PaginatedPayload_IEnumerable_TrainingProgram:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/TrainingProgram'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
        Paging:
          $ref: '#/components/schemas/Paging'
    Payload_IEnumerable_UserPayAdjustCodeGroup:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/UserPayAdjustCodeGroup'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
    Payload_IEnumerable_EmployeeWorkContract:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeWorkContract'
        ProcessResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessResult'
  securitySchemes:
    basic:
      type: http
      description: Basic HTTP Authentication
      scheme: basic
