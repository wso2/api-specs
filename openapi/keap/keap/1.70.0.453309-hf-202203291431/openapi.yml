openapi: 3.0.1
info:
  title: Keap REST API
  description: |
    This is a generated connector for [Keap API v1.70.0.453309-hf-202203291431](https://developer.infusionsoft.com/docs/rest/) OpenAPI specification.
    Keap is an all-in-one CRM, sales and marketing automation software that helps organize leads, land the job, get paid, and keep growing.
  x-ballerina-init-description: >
    The connector initialization requires setting the API credentials. 
  
    Create a [Keap account](https://developer.keap.com) and obtain tokens by following [this guide](https://developer.infusionsoft.com/developer-guide).
  x-ballerina-display:
    label: Keap
    iconPath: "icon.png"
  termsOfService: https://keap.com/legal
  contact:
    name: Keap
    url: https://developer.keap.com/get-support/
  version: 1.70.0.453309-hf-202203291431
servers:
- url: https://api.infusionsoft.com/crm/rest/
tags:
- name: Product
  description: Products-Endpoint
- name: User Info
  description: UserInfo-Endpoint
- name: Appointment
  description: Appointments-Endpoint
- name: Locale
  description: Locale-Endpoint
- name: REST Hooks
  description: Rest-Hook-Endpoint
- name: Account Info
  description: Account Info-Endpoint
- name: Campaign
  description: Campaigns-Endpoint
- name: Tags
  description: Tag-Company-Endpoint
- name: Setting
  description: Setting-Endpoint
- name: File
  description: File-Endpoint
- name: Note
  description: Notes-Endpoint
- name: Contact
  description: Contacts-Endpoint
- name: Email
  description: Emails-Endpoint
- name: Affiliate
  description: Affiliates-Endpoint
- name: Merchant
  description: Merchant-Endpoint
- name: Task
  description: Tasks-Endpoint
- name: Company
  description: Companies-Endpoint
- name: Users
  description: Users-Endpoint
- name: Email Address
  description: Email-Addresses-Endpoint
- name: E-Commerce
  description: E-Commerce-Endpoint
- name: Opportunity
  description: Opportunities-Endpoint
paths:
  /account/profile:
    get:
      tags:
      - Account Info
      summary: Retrieve account profile
      description: Retrieves profile/company info for an account.
      operationId: getAccountProfile
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountProfile'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
      - Account Info
      summary: Updates an account profile
      description: Updates profile/company info for an account.
      operationId: updateAccountInfo
      requestBody:
        description: accountInfo
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountProfile'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountProfile'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: accountInfo
  /affiliates:
    get:
      tags:
      - Affiliate
      summary: List Affiliates
      description: Retrieves a list of all affiliates
      operationId: listAffiliates
      parameters:
      - name: name
        in: query
        description: Optional affiliate name to query on
        schema:
          type: string
      - name: code
        in: query
        description: Optional affiliate parent ID to query on
        schema:
          type: string
      - name: parent_id
        in: query
        description: Optional affiliate code to query on
        schema:
          type: string
      - name: contact_id
        in: query
        description: Optional contact ID to query on
        schema:
          type: string
      - name: program_id
        in: query
        description: Optional affiliate program ID to query on
        schema:
          type: string
      - name: status
        in: query
        description: Optional affiliate status to query on
        schema:
          type: string
          enum:
          - active
          - inactive
      - name: order
        in: query
        description: Attribute to order items by
        schema:
          type: string
          enum:
          - id
          - name
      - name: order_direction
        in: query
        description: How to order the data i.e. ascending (A-Z) or descending (Z-A)
        schema:
          type: string
          enum:
          - ASCENDING
          - DESCENDING
      - name: offset
        in: query
        description: Count to offset the returned results by
        schema:
          type: integer
          format: int32
      - name: limit
        in: query
        description: Sets a beginning range of items to return
        schema:
          type: integer
          format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AffiliateList'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
      - Affiliate
      summary: Create an affiliate
      description: Create a single affiliate
      operationId: createAffiliate
      requestBody:
        description: affiliate
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAffiliate'
        required: false
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Affiliate'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: affiliate
  /affiliates/commissions:
    get:
      tags:
      - Affiliate
      summary: List Commissions
      description: Retrieve a list of Commissions based on Affiliate or Date Range
      operationId: listCommissions
      parameters:
      - name: since
        in: query
        description: Date to start searching from ex. `2017-01-01T22:17:59.039Z`
        schema:
          type: string
      - name: until
        in: query
        description: Date to search to ex. `2017-01-01T22:17:59.039Z`
        schema:
          type: string
      - name: order
        in: query
        description: Attribute to order items by
        schema:
          type: string
          enum:
          - DATE_EARNED
      - name: order_direction
        in: query
        description: How to order the data i.e. ascending (A-Z) or descending (Z-A)
        schema:
          type: string
          enum:
          - ASCENDING
          - DESCENDING
      - name: limit
        in: query
        description: Sets a total of items to return
        schema:
          type: integer
          format: int32
      - name: offset
        in: query
        description: Sets a beginning range of items to return
        schema:
          type: integer
          format: int32
      - name: affiliateId
        in: query
        description: Affiliate to retrieve commissions for
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AffiliateCommissionList'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /affiliates/model:
    get:
      tags:
      - Affiliate
      summary: Retrieve Affiliate Model
      description: Get the custom fields for the Affiliate object
      operationId: retrieveAffiliateModel
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectModel'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /affiliates/programs:
    get:
      tags:
      - Affiliate
      summary: List Commission Programs
      description: Retrieve a list of Commission Programs
      operationId: listPrograms
      parameters:
      - name: affiliate_id
        in: query
        description: Id of the affiliate you would like programs for
        schema:
          type: integer
          format: int64
      - name: order
        in: query
        description: Attribute to order items by
        schema:
          type: string
          enum:
          - id
          - name
          - priority
      - name: order_direction
        in: query
        description: How to order the data i.e. ascending (A-Z) or descending (Z-A)
        schema:
          type: string
          enum:
          - ASCENDING
          - DESCENDING
      - name: offset
        in: query
        description: Count to offset the returned results by
        schema:
          type: integer
          format: int32
      - name: limit
        in: query
        description: Sets a beginning range of items to return
        schema:
          type: integer
          format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AffiliateProgramList'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /affiliates/redirectlinks:
    get:
      tags:
      - Affiliate
      summary: List Affiliate Redirects
      description: Retrieves a list of all affiliate redirects
      operationId: listAffiliateRedirectLinks
      parameters:
      - name: affiliate_id
        in: query
        description: Affiliate ID to search by
        schema:
          type: string
      - name: order
        in: query
        description: Attribute to order items by
        schema:
          type: string
          enum:
          - id
          - name
      - name: order_direction
        in: query
        description: How to order the data i.e. ascending (A-Z) or descending (Z-A)
        schema:
          type: string
          enum:
          - ASCENDING
          - DESCENDING
      - name: offset
        in: query
        description: Count to offset the returned results by
        schema:
          type: integer
          format: int32
      - name: limit
        in: query
        description: Sets a beginning range of items to return
        schema:
          type: integer
          format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedirectList'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /affiliates/summaries:
    get:
      tags:
      - Affiliate
      summary: List affiliate summaries
      description: Retrieve a list of affiliate summaries
      operationId: listSummaries
      parameters:
      - name: affiliate_ids
        in: query
        description: Ids of the affiliates you would like a summary for
        style: form
        explode: true
        schema:
          type: array
          items:
            type: integer
            format: int64
      - name: order
        in: query
        description: Attribute to order items by
        schema:
          type: string
          enum:
          - affiliate_id
          - amount_earned
          - balance
          - clawbacks
      - name: order_direction
        in: query
        description: How to order the data i.e. ascending (A-Z) or descending (Z-A)
        schema:
          type: string
          enum:
          - ASCENDING
          - DESCENDING
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AffiliateSummaryList'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /affiliates/{affiliateId}/clawbacks:
    get:
      tags:
      - Affiliate
      summary: List Affiliate clawbacks
      description: Retrieves a list of all affiliate clawbacks
      operationId: listAffiliateClawbacks
      parameters:
      - name: affiliateId
        in: path
        description: affiliateId
        required: true
        schema:
          type: string
      - name: since
        in: query
        description: Optional inclusive start date
        schema:
          type: string
      - name: until
        in: query
        description: Optional inclusive end date
        schema:
          type: string
      - name: order
        in: query
        description: Attribute to order items by
        schema:
          type: string
          enum:
          - DATE_EARNED
      - name: order_direction
        in: query
        description: How to order the data i.e. ascending (A-Z) or descending (Z-A)
        schema:
          type: string
          enum:
          - ASCENDING
          - DESCENDING
      - name: offset
        in: query
        description: Count to offset the returned results by
        schema:
          type: integer
          format: int32
      - name: limit
        in: query
        description: Sets a beginning range of items to return
        schema:
          type: integer
          format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AffiliateClawbackList'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /affiliates/{id}:
    get:
      tags:
      - Affiliate
      summary: Retrieve an affiliate
      description: Retrieve a single affiliate
      operationId: getAffiliate
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Affiliate'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /appointments:
    get:
      tags:
      - Appointment
      summary: List Appointments
      description: Retrieves all appointments for the authenticated user
      operationId: listAppointments
      parameters:
      - name: since
        in: query
        description: Date to start searching from ex. `2017-01-01T22:17:59.039Z`
        schema:
          type: string
      - name: until
        in: query
        description: Date to search to ex. `2017-01-01T22:17:59.039Z`
        schema:
          type: string
      - name: limit
        in: query
        description: Sets a total of items to return
        schema:
          type: integer
          format: int32
      - name: offset
        in: query
        description: Sets a beginning range of items to return
        schema:
          type: integer
          format: int32
      - name: contact_id
        in: query
        description: Optionally find appointments with a contact
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppointmentList'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
      - Appointment
      summary: Create an Appointment
      description: Creates a new appointment as the authenticated user
      operationId: createAppointment
      requestBody:
        description: appointment
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Appointment'
        required: true
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Appointment'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: appointment
  /appointments/model:
    get:
      tags:
      - Appointment
      summary: Retrieve Appointment Model
      description: Get the custom fields for the Appointment object
      operationId: retrieveAppointmentModel
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectModel'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /appointments/model/customFields:
    post:
      tags:
      - Appointment
      summary: Create a Custom Field
      description: Adds a custom field of the specified type and options to the Appointment
        object.
      operationId: createAppointmentCustomField
      requestBody:
        description: customField
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRestCustomField'
        required: true
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomFieldMetaData'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: customField
  /appointments/{appointmentId}:
    get:
      tags:
      - Appointment
      summary: Retrieve an Appointment
      description: Retrieves a specific appointment with respect to user permissions.
        The authenticated user will need the "can view all records" permission for
        Task/Appt/Notes
      operationId: getAppointment
      parameters:
      - name: appointmentId
        in: path
        description: appointmentId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Appointment'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
      - Appointment
      summary: Replace an Appointment
      description: Replaces all values of a given appointment
      operationId: updateAppointment
      parameters:
      - name: appointmentId
        in: path
        description: appointmentId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: appointmentDTO
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Appointment'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Appointment'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: appointmentDTO
    delete:
      tags:
      - Appointment
      summary: Delete an Appointment
      description: Deletes the specified appointment
      operationId: deleteAppointment
      parameters:
      - name: appointmentId
        in: path
        description: appointmentId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        204:
          description: No Content
          content: {}
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
      - Appointment
      summary: Update an Appointment
      description: Updates the provided values of a given appointment
      operationId: updatePropertiesOnAppointment
      parameters:
      - name: appointmentId
        in: path
        description: appointmentId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: appointmentDTO
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Appointment'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Appointment'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: appointmentDTO
  /campaigns:
    get:
      tags:
      - Campaign
      summary: List Campaigns
      description: Retrieves all campaigns for the authenticated user
      operationId: listCampaigns
      parameters:
      - name: limit
        in: query
        description: Sets a total of items to return
        schema:
          type: integer
          format: int32
      - name: offset
        in: query
        description: Sets a beginning range of items to return
        schema:
          type: integer
          format: int32
      - name: search_text
        in: query
        description: Optional text to search
        schema:
          type: string
      - name: order
        in: query
        description: Attribute to order items by
        schema:
          type: string
          enum:
          - name
          - published_date
          - id
          - completed_contact_count
          - active_contact_count
          - date_created
      - name: order_direction
        in: query
        description: How to order the data i.e. ascending (A-Z) or descending (Z-A)
        schema:
          type: string
          enum:
          - ascending
          - descending
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignList'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /campaigns/goals/{integration}/{callName}:
    post:
      tags:
      - Campaign
      summary: Achieve API Goal
      description: Achieves API goal for campaigns with matching integration, callName
        for a given contactId
      operationId: createAchieveApiGoalEvent
      parameters:
      - name: integration
        in: path
        description: integration
        required: true
        schema:
          type: string
      - name: callName
        in: path
        description: callName
        required: true
        schema:
          type: string
      requestBody:
        description: goalEvent
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AchieveApiGoalEvent'
        required: true
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GoalEventResultDTO'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: goalEvent
  /campaigns/{campaignId}:
    get:
      tags:
      - Campaign
      summary: Retrieve a Campaign
      description: Retrieves a single campaign
      operationId: getCampaign
      parameters:
      - name: campaignId
        in: path
        description: campaignId
        required: true
        schema:
          type: integer
          format: int64
      - name: optional_properties
        in: query
        description: Comma-delimited list of Campaign properties to include in the
          response. (The fields `goals` and `sequences` aren't included, by default.)
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Campaign'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /campaigns/{campaignId}/sequences/{sequenceId}/contacts:
    post:
      tags:
      - Campaign
      summary: Add Multiple to Campaign Sequence
      description: Adds a list of contacts to a campaign sequence
      operationId: addContactsToCampaignSequence
      parameters:
      - name: campaignId
        in: path
        description: campaignId
        required: true
        schema:
          type: integer
          format: int64
      - name: sequenceId
        in: path
        description: sequenceId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: ids
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetOfIds'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: string
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: ids
    # delete:
    #   tags:
    #   - Campaign
    #   summary: Remove Multiple from Campaign Sequence
    #   description: Removes a list of contacts from a campaign sequence
    #   operationId: removeContactsFromCampaignSequenceUsingDELETE_1
    #   parameters:
    #   - name: campaignId
    #     in: path
    #     description: campaignId
    #     required: true
    #     schema:
    #       type: integer
    #       format: int64
    #   - name: sequenceId
    #     in: path
    #     description: sequenceId
    #     required: true
    #     schema:
    #       type: integer
    #       format: int64
    #   requestBody:
    #     description: ids
    #     content:
    #       application/json:
    #         schema:
    #           $ref: '#/components/schemas/SetOfIds'
    #     required: true
    #   responses:
    #     204:
    #       description: No Content
    #       content: {}
    #     401:
    #       description: Unauthorized
    #       content:
    #         application/json:
    #           schema:
    #             $ref: '#/components/schemas/Error'
    #     403:
    #       description: Forbidden
    #       content:
    #         application/json:
    #           schema:
    #             $ref: '#/components/schemas/Error'
    #     404:
    #       description: Not Found
    #       content:
    #         application/json:
    #           schema:
    #             $ref: '#/components/schemas/Error'
    #   x-codegen-request-body-name: ids
  /campaigns/{campaignId}/sequences/{sequenceId}/contacts/{contactId}:
    post:
      tags:
      - Campaign
      summary: Add to Campaign Sequence
      description: Adds a single contact to a campaign sequence
      operationId: addContactToCampaignSequence
      parameters:
      - name: campaignId
        in: path
        description: campaignId
        required: true
        schema:
          type: integer
          format: int64
      - name: sequenceId
        in: path
        description: sequenceId
        required: true
        schema:
          type: integer
          format: int64
      - name: contactId
        in: path
        description: contactId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        204:
          description: No Content
          content: {}
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
      - Campaign
      summary: Remove from Campaign Sequence
      description: Removes a single contact from a campaign sequence
      operationId: removeContactFromCampaignSequence
      parameters:
      - name: campaignId
        in: path
        description: campaignId
        required: true
        schema:
          type: integer
          format: int64
      - name: sequenceId
        in: path
        description: sequenceId
        required: true
        schema:
          type: integer
          format: int64
      - name: contactId
        in: path
        description: contactId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        204:
          description: No Content
          content: {}
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /companies:
    get:
      tags:
      - Company
      summary: List Companies
      description: Retrieves a list of all companies
      operationId: listCompanies
      parameters:
      - name: limit
        in: query
        description: Sets a total of items to return
        schema:
          type: integer
          format: int32
      - name: offset
        in: query
        description: Sets a beginning range of items to return
        schema:
          type: integer
          format: int32
      - name: company_name
        in: query
        description: Optional company name to query on
        schema:
          type: string
      - name: order
        in: query
        description: Attribute to order items by
        schema:
          type: string
          enum:
          - id
          - date_created
          - name
          - email
      - name: order_direction
        in: query
        description: How to order the data i.e. ascending (A-Z) or descending (Z-A)
        schema:
          type: string
          enum:
          - ascending
          - descending
      - name: optional_properties
        in: query
        description: Comma-delimited list of Company properties to include in the
          response. (Fields such as `notes`, `fax_number` and `custom_fields` aren't
          included, by default.)
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyList'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
      - Company
      summary: Create a Company
      description: |-
        Creates a new company as the authenticated user. NB: Company must contain at least the company name. The `country_code` is required if `region` is specified.

        You may opt-in or mark a Company as _Marketable_ by including the following field in the request JSON with an opt-in reason. (This field is also shown in the complete request body sample.) The reason you provide here will help with compliance. Example reasons: "Customer opted-in through webform", "Company gave explicit permission."

        ```json
        "opt_in_reason": "your reason for opt-in"
        ```
        Note that the email address status will only be updated to unconfirmed (marketable) for email addresses that are currently in the following states:
        Unengaged Marketable
        Unengaged Non-Marketable
        Non-Marketable
        Opt-Out: Manual
        All other existing statuses e.g. List Unsubscribe, Opt-Out System etc will remain non-marketable and in their existing state.
      operationId: createCompany
      requestBody:
        description: company
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrPatchCompany'
        required: false
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: company
  /companies/model:
    get:
      tags:
      - Company
      summary: Retrieve Company Model
      description: Get the custom fields and optional properties for the Company object
      operationId: retrieveCompanyModel
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectModel'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /companies/{companyId}:
    get:
      tags:
      - Company
      summary: Retrieve a Company
      description: Retrieves a single company
      operationId: getCompany
      parameters:
      - name: companyId
        in: path
        description: companyId
        required: true
        schema:
          type: integer
          format: int64
      - name: optional_properties
        in: query
        description: Comma-delimited list of Company properties to include in the
          response. (Fields such as `notes`, `fax_number` and `custom_fields` aren't
          included, by default.)
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
      - Company
      summary: Update a Company
      description: |-
        Updates a company with only the values provided in the request.

        You may opt-in or mark a Company as _Marketable_ by including the following field in the request JSON with an opt-in reason. (This field is also shown in the complete request body sample.) The reason you provide here will help with compliance. Example reasons: "Customer opted-in through webform", "Company gave explicit permission."

        ```json
        "opt_in_reason": "your reason for opt-in"
        ```
        Note that the email address status will only be updated to unconfirmed (marketable) for email addresses that are currently in the following states:
        Unengaged Marketable
        Unengaged Non-Marketable
        Non-Marketable
        Opt-Out: Manual
        All other existing statuses e.g. List Unsubscribe, Opt-Out System etc will remain non-marketable and in their existing state.
      operationId: updateCompanies
      parameters:
      - name: companyId
        in: path
        description: companyId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: company
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrPatchCompany'
        required: false
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: company
  /company/{companyId}:
    patch:
      tags:
      - Company
      summary: Update a Company
      description: |-
        Updates a company with only the values provided in the request.

        You may opt-in or mark a Company as _Marketable_ by including the following field in the request JSON with an opt-in reason. (This field is also shown in the complete request body sample.) The reason you provide here will help with compliance. Example reasons: "Customer opted-in through webform", "Company gave explicit permission."

        ```json
        "opt_in_reason": "your reason for opt-in"
        ```
        Note that the email address status will only be updated to unconfirmed (marketable) for email addresses that are currently in the following states:
        Unengaged Marketable
        Unengaged Non-Marketable
        Non-Marketable
        Opt-Out: Manual
        All other existing statuses e.g. List Unsubscribe, Opt-Out System etc will remain non-marketable and in their existing state.
      operationId: updateCompany
      parameters:
      - name: companyId
        in: path
        description: companyId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: company
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrPatchCompany'
        required: false
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: company
  /contacts:
    get:
      tags:
      - Contact
      summary: List Contacts
      description: Retrieves a list of all contacts
      operationId: listContacts
      parameters:
      - name: limit
        in: query
        description: Sets a total of items to return
        schema:
          type: integer
          format: int32
      - name: offset
        in: query
        description: Sets a beginning range of items to return
        schema:
          type: integer
          format: int32
      - name: email
        in: query
        description: Optional email address to query on
        schema:
          type: string
      - name: given_name
        in: query
        description: Optional first name or forename to query on
        schema:
          type: string
      - name: family_name
        in: query
        description: Optional last name or surname to query on
        schema:
          type: string
      - name: order
        in: query
        description: Attribute to order items by
        schema:
          type: string
          enum:
          - id
          - date_created
          - name
          - firstName
          - email
      - name: order_direction
        in: query
        description: How to order the data i.e. ascending (A-Z) or descending (Z-A)
        schema:
          type: string
          enum:
          - ascending
          - descending
      - name: since
        in: query
        description: Date to start searching from on LastUpdated ex. `2017-01-01T22:17:59.039Z`
        schema:
          type: string
      - name: until
        in: query
        description: Date to search to on LastUpdated ex. `2017-01-01T22:17:59.039Z`
        schema:
          type: string
      - name: optional_properties
        in: query
        description: Comma-delimited list of Contact properties to include in the
          response. (Some fields such as `lead_source_id`, `custom_fields`, and `job_title`
          aren't included, by default.)
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactList'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
      - Contact
      summary: Create or Update a Contact
      description: |-
        Creates a new contact or updates a contact as the authenticated user. NB: New Contacts must contain at least one item in `email_addresses` or `phone_numbers` and `country_code` is required if `region` is specified. Existing Contacts are updated with only the values provided in the request. Accepts a `duplicate_option` which performs duplicate checking by one of the following options: `Email`, `EmailAndName`, if a match is found using the option provided, the existing contact will be updated. If an existing contact was not found using the `duplicate_option` provided, a new contact record will be created.

        You may opt-in or mark a Contact as _Marketable_ by including the following field in the request JSON with an opt-in reason. (This field is also shown in the complete request body sample.) The reason you provide here will help with compliance. Example reasons: "Customer opted-in through webform", "Contact gave explicit permission."

        ```json
        "opt_in_reason": "your reason for opt-in"
        ```
        Note that the email address status will only be updated to unconfirmed (marketable) for email addresses that are currently in the following states:
        Unengaged Marketable
        Unengaged Non-Marketable
        Non-Marketable
        Opt-Out: Manual
        All other existing statuses e.g. List Unsubscribe, Opt-Out System etc will remain non-marketable and in their existing state.

        This API only supports a subset of valid timezones. A list of the supported timezones can be found [here](https://developer.infusionsoft.com/faqs/what-timezones-do-contact-calls-accept/).
      operationId: createOrUpdateContact
      requestBody:
        description: contact
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpsertContact'
        required: false
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FullContact'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: contact
    post:
      tags:
      - Contact
      summary: Create a Contact
      description: |-
        Creates a new contact as the authenticated user. NB: Contact must contain at least one item in `email_addresses` or `phone_numbers` and `country_code` is required if `region` is specified.

        Please see the body schema for updates to the postal code field.

        You may opt-in or mark a Contact as _Marketable_ by including the following field in the request JSON with an opt-in reason. (This field is also shown in the complete request body sample.) The reason you provide here will help with compliance. Example reasons: "Customer opted-in through webform", "Contact gave explicit permission."

        ```json
        "opt_in_reason": "your reason for opt-in"
        ```
        Note that the email address status will only be updated to unconfirmed (marketable) for email addresses that are currently in the following states:
        Unengaged Marketable
        Unengaged Non-Marketable
        Non-Marketable
        Opt-Out: Manual
        All other existing statuses e.g. List Unsubscribe, Opt-Out System etc will remain non-marketable and in their existing state.

        This API only supports a subset of valid timezones. A list of the supported timezones can be found [here](https://developer.infusionsoft.com/faqs/what-timezones-do-contact-calls-accept/).
      operationId: createContact
      requestBody:
        description: contact
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrPatchContact'
        required: false
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FullContact'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: contact
  /contacts/model:
    get:
      tags:
      - Contact
      summary: Retrieve Contact Model
      description: Get the custom fields and optional properties for the Contact object
      operationId: retrieveContactModel
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectModel'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /contacts/model/customFields:
    post:
      tags:
      - Contact
      summary: Create a Custom Field
      description: Adds a custom field of the specified type and options to the Contact
        object.
      operationId: createCustomField
      requestBody:
        description: customField
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRestCustomField'
        required: true
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomFieldMetaData'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: customField
  /contacts/{contactId}:
    delete:
      tags:
      - Contact
      summary: Delete a Contact
      description: Deletes the specified contact.
      operationId: deleteContact
      parameters:
      - name: contactId
        in: path
        description: contactId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        204:
          description: No Content
          content: {}
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
      - Contact
      summary: Update a Contact
      description: |-
        Updates a contact with only the values provided in the request.

        You may opt-in or mark a Contact as _Marketable_ by including the following field in the request JSON with an opt-in reason. (This field is also shown in the complete request body sample.) The reason you provide here will help with compliance. Example reasons: "Customer opted-in through webform", "Contact gave explicit permission."

        ```json
        "opt_in_reason": "your reason for opt-in"
        ```
        Note that the email address status will only be updated to unconfirmed (marketable) for email addresses that are currently in the following states:
        Unengaged Marketable
        Unengaged Non-Marketable
        Non-Marketable
        Opt-Out: Manual
        All other existing statuses e.g. List Unsubscribe, Opt-Out System etc will remain non-marketable and in their existing state.
      operationId: updatePropertiesOnContact
      parameters:
      - name: contactId
        in: path
        description: contactId
        required: true
        schema:
          type: integer
          format: int64
      - name: update_mask
        in: query
        description: An optional list of properties to be updated. If set, only the
          provided properties will be updated and others will be skipped.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          enum:
          - addresses
          - anniversary
          - birthday
          - company
          - contact_type
          - custom_fields
          - email_addresses
          - family_name
          - fax_numbers
          - given_name
          - job_title
          - lead_source_id
          - middle_name
          - notes
          - opt_in_reason
          - origin
          - owner_id
          - phone_numbers
          - preferred_locale
          - preferred_name
          - prefix
          - social_accounts
          - source_type
          - spouse_name
          - suffix
          - time_zone
          - website
      requestBody:
        description: contact
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrPatchContact'
        required: false
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FullContact'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: contact
  /contacts/{contactId}/creditCards:
    get:
      tags:
      - Contact
      summary: Retrieve Credit Cards
      description: List all Credit Cards on a contact
      operationId: listCreditCards
      parameters:
      - name: contactId
        in: path
        description: contactId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContactCreditCard'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
      - Contact
      summary: Create a Credit Card
      description: Creates a new credit card associated to a contact
      operationId: createCreditCard
      parameters:
      - name: contactId
        in: path
        description: contactId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: creditCard
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreditCard'
        required: false
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditCardAdded'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: creditCard
  /contacts/{contactId}/emails:
    get:
      tags:
      - Contact
      summary: List Emails
      description: List Emails that have been sent to a Contact
      operationId: listEmailsForContact
      parameters:
      - name: contactId
        in: path
        description: contactId
        required: true
        schema:
          type: integer
          format: int64
      - name: limit
        in: query
        description: Sets a total of items to return
        schema:
          type: integer
          format: int32
      - name: offset
        in: query
        description: Sets a beginning range of items to return
        schema:
          type: integer
          format: int32
      - name: email
        in: query
        description: Optional email address to query on
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailSentQueryResultList'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
      - Contact
      summary: Create an Email Record
      description: Create a record of an email sent to a contact
      operationId: createEmailForContact
      parameters:
      - name: contactId
        in: path
        description: contactId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Email records to persist, with content.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailSentCreate'
        required: false
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailSentCreate'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: emailWithContent
  /contacts/{contactId}/tags:
    get:
      tags:
      - Contact
      summary: List Applied Tags
      description: Retrieves a list of tags applied to a given contact
      operationId: listAppliedTags
      parameters:
      - name: contactId
        in: path
        description: contactId
        required: true
        schema:
          type: integer
          format: int64
      - name: limit
        in: query
        description: Sets a total of items to return
        schema:
          type: integer
          format: int32
      - name: offset
        in: query
        description: Sets a beginning range of items to return
        schema:
          type: integer
          format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactTagList'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
      - Contact
      summary: Apply Tags
      description: Apply a list of tags to a given contact record
      operationId: applyTagsToContactId
      parameters:
      - name: contactId
        in: path
        description: contactId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: tagIds
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagId'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EntryLongString'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: tagIds
    delete:
      tags:
      - Contact
      summary: Remove Applied Tags
      description: Removes a list of tags from the given contact. Provide one or more
        tag ids in the querystring as a comma-separated URIencoded list (%2C is a
        comma). E.g. DELETE /contacts/{contact_id}/tags?ids=1%2C2%2C3
      operationId: removeAppliedTagsFromContact
      parameters:
      - name: contactId
        in: path
        description: contactId
        required: true
        schema:
          type: integer
          format: int64
      - name: ids
        in: query
        description: ids
        required: true
        schema:
          type: string
      responses:
        204:
          description: No Content
          content: {}
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /contacts/{contactId}/tags/{tagId}:
    delete:
      tags:
      - Contact
      summary: Remove Applied Tag
      description: Removes a tag from the given contact
      operationId: removeTagsFromContact
      parameters:
      - name: contactId
        in: path
        description: contactId
        required: true
        schema:
          type: integer
          format: int64
      - name: tagId
        in: path
        description: tagId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        204:
          description: No Content
          content: {}
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /emailAddresses/{email}:
    put:
      tags:
      - Email Address
      summary: Replace an Email Address
      description: |-
        Replaces all of the values of a given email address

        You may opt-in or mark an email address as _Marketable_ by including the following field in the request JSON with an opt-in reason. (This field is also shown in the complete request body sample.) The reason you provide here will help with compliance. Example reasons: "Customer opted-in through webform", "Company gave explicit permission."

        ```json
        "opt_in_reason": "your reason for opt-in"
        ```
        Note that the email address status will only be updated to unconfirmed (marketable) for email addresses that are currently in the following states:
        Unengaged Marketable
        Unengaged Non-Marketable
        Non-Marketable
        Opt-Out: Manual
        All other existing statuses e.g. List Unsubscribe, Opt-Out System etc will remain non-marketable and in their existing state.
      operationId: replaceEmailAddress
      parameters:
      - name: email
        in: path
        description: email
        required: true
        schema:
          type: string
      requestBody:
        description: update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEmailAddress'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestEmailAddress'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: update
  /emails:
    get:
      tags:
      - Email
      summary: List Emails
      description: |-
        Retrieve a list of emails that have been sent

        Keap is currently investigating an issue with degraded performance
        of this endpoint with very large (millions of records) record sets
      operationId: listEmails
      parameters:
      - name: limit
        in: query
        description: Sets a total of items to return
        schema:
          type: integer
          format: int32
      - name: offset
        in: query
        description: Sets a beginning range of items to return
        schema:
          type: integer
          format: int32
      - name: contact_id
        in: query
        description: Optional Contact Id to find Emails for
        schema:
          type: integer
          format: int64
      - name: email
        in: query
        description: Optional email address to query on
        schema:
          type: string
      - name: since_sent_date
        in: query
        description: Optional date to query on, emails sent since the provided date,
          must be present if untilDate is provided
        schema:
          type: string
      - name: until_sent_date
        in: query
        description: Optional date to query on, email sent until the provided date
        schema:
          type: string
      - name: ordered
        in: query
        description: Optional boolean to turn off ORDER BY in SQL query
        schema:
          type: boolean
          default: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailSentQueryResultList'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
      - Email
      summary: Create an Email Record
      description: Create a record of an email sent to a contact
      operationId: createEmail
      requestBody:
        description: Email records to persist, with content.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailSentCreate'
        required: false
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailSentCreate'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: emailWithContent
  /emails/queue:
    post:
      tags:
      - Email
      summary: Send an Email
      description: Send an Email to a list of Contacts
      operationId: sendEmail
      requestBody:
        description: emailSendRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailSendRequest'
        required: false
      responses:
        202:
          description: Accepted
          content: {}
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: emailSendRequest
  /emails/sync:
    post:
      tags:
      - Email
      summary: Create a set of Email Records
      description: Create a set of records of emails sent to contacts, maximum 1000
        per transaction.
      operationId: createEmails
      requestBody:
        description: Email records to persist, with content.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailSentCreateList'
        required: false
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailSentCreateList'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: emailWithContent
  /emails/unsync:
    post:
      tags:
      - Email
      summary: Un-sync a batch of Email Records
      description: Un-syncs a batch of email records
      operationId: deleteEmails
      requestBody:
        description: emailIds
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetOfIds'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: string
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: emailIds
  /emails/{id}:
    get:
      tags:
      - Email
      summary: Retrieve an Email
      description: Retrieves a single email that has been sent
      operationId: getEmail
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailSentQueryResultWithContent'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
      - Email
      summary: Update an Email Record
      description: Update a record of an email sent to a contact
      operationId: updateEmail
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Email records to persist, with content.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailSentCreate'
        required: false
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailSentCreate'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: true
      x-codegen-request-body-name: emailWithContent
    delete:
      tags:
      - Email
      summary: Delete an Email Record
      description: Delete a specific email record
      operationId: deleteEmail
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
          format: int64
      responses:
        204:
          description: No Content
          content: {}
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /files:
    get:
      tags:
      - File
      summary: List Files
      description: Retrieves a list of all files
      operationId: listFiles
      parameters:
      - name: limit
        in: query
        description: Sets a total of items to return
        schema:
          type: integer
          format: int32
      - name: offset
        in: query
        description: Sets a beginning range of items to return
        schema:
          type: integer
          format: int32
      - name: viewable
        in: query
        description: Include public or private files in response (PUBLIC or PRIVATE),
          defaults to BOTH.
        schema:
          type: string
          enum:
          - PUBLIC
          - PRIVATE
          - BOTH
      - name: permission
        in: query
        description: Filter based on the permission of files (USER or COMPANY), defaults
          to BOTH.
        schema:
          type: string
          enum:
          - USER
          - COMPANY
          - BOTH
      - name: type
        in: query
        description: Filter based on the type of file.
        schema:
          type: string
          enum:
          - Application
          - Image
          - Fax
          - Attachment
          - Ticket
          - Contact
          - DigitalProduct
          - Import
          - Hidden
          - WebForm
          - StyledCart
          - ReSampledImage
          - TemplateThumbnail
          - Funnel
          - LogoThumbnail
      - name: name
        in: query
        description: Filter files based on name, with '*' preceding or following to
          indicate LIKE queries.
        schema:
          type: string
      - name: contact_id
        in: query
        description: Filter based on Contact Id, if user has permission to see Contact
          files.
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileList'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
      - File
      summary: Upload File
      description: Upload a base64 encoded file. `contact_id` is required only when
        `file_association` is `CONTACT`.
      operationId: createFile
      requestBody:
        description: fileUpload
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileUpload'
        required: false
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileInformation'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: fileUpload
  /files/{fileId}:
    get:
      tags:
      - File
      summary: Retrieve File
      description: Retrieves metadata about a specific file. Optionally returns the
        base64 encoded file data.
      operationId: getFile
      parameters:
      - name: fileId
        in: path
        description: fileId
        required: true
        schema:
          type: integer
          format: int64
      - name: optional_properties
        in: query
        description: Comma-delimited list of File properties to include in the response.
          (Some fields such as `file_data` aren't included, by default.)
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileInformation'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
      - File
      summary: Replace File
      description: Upload a base64 encoded file to replace an existing one. `contact_id`
        is required only when `file_association` is `CONTACT`.
      operationId: updateFile
      parameters:
      - name: fileId
        in: path
        description: fileId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: fileUpload
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileUpload'
        required: false
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileInformation'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: fileUpload
    delete:
      tags:
      - File
      summary: Delete File
      description: Deletes the specified file
      operationId: deleteFile
      parameters:
      - name: fileId
        in: path
        description: fileId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        204:
          description: No Content
          content: {}
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /hooks:
    get:
      tags:
      - REST Hooks
      summary: List Stored Hook Subscriptions
      description: Lists your hook subscriptions.
      operationId: list_stored_hook_subscriptions
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestHook'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
      - REST Hooks
      summary: Create a Hook Subscription
      description: |-
        To receive hooks, you'll first need to subscribe to events one at a time *and* individually verify each subscription.

        This operation is used to create hook subscriptions. During this process, Infusionsoft will attempt to verify your subscription. Continue reading to learn how that works.

        To verify or reactivate a hook subscription, Infusionsoft will make a `POST` request with a temporary secret to the `hookUrl` you provided during creation. The secret is passed as the value of a header named `X-Hook-Secret`. Your response to that `POST` *must* have a status code of `200` and return the same `X-Hook-Secret` header and value pair. Once you've done that, you'll begin receiving hooks. Don't worry if verification fails; you can always [request another verification attempt](#!/REST_Hooks/verify_a_hook_subscription).

        NB: You will not receive events until the subscription is verified.

        If the verification process seems confusing, head over to [RESTHooks.org](http://resthooks.org/docs/security/) for more on the concept.
      operationId: create_a_hook_subscription
      requestBody:
        description: restHookRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestHookRequest'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestHook'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: restHookRequest
  /hooks/event_keys:
    get:
      tags:
      - REST Hooks
      summary: List Hook Event Types
      description: |-
        ### _What are REST Hooks?_

        _REST Hooks itself is not a specification, it is a collection of patterns that treat webhooks like subscriptions. These subscriptions are manipulated via a REST API just like any other resource._

        _With most modern REST APIs, polling is the only way to detect changes. But it doesn't have to be. On average, 98.5% of polls are wasted. There is a better way. REST Hooks enable real-time communication and eliminate polling._ -- [RESTHooks.org](http://RESTHooks.org)

        Infusionsoft offers a growing set of REST Hooks to keep you notified of changes in your data. To get started, use [List Hook Event Types](#!/REST_Hooks/list_hook_event_types) to discover event types. Event types are identified using _noun.verb dot syntax_, e.g.: `contact.add` or `invoice.delete`.

        After you’ve read this documentation, you might be interested in the [REST Hook Event and Retry policies](https://developer.infusionsoft.com/rest-hook-documentation/).

        NB: REST Hooks are **not** triggered by legacy action sets.

        Once you've chosen the events you're interested in, subscribe to them via [Create a Hook Subscription](#!/REST_Hooks/create_a_hook_subscription).
      operationId: list_hook_event_types
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /hooks/{key}:
    get:
      tags:
      - REST Hooks
      summary: Retrieve a Hook Subscription
      description: |-
        Retrieves an existing hook subscription and its status.

        If your hook subscription becomes inactive, you may request an activation attempt via [Verify a Hook Subscription](#!/REST_Hooks/verify_a_hook_subscription).
      operationId: retrieve_a_hook_subscription
      parameters:
      - name: key
        in: path
        description: key
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestHook'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
      - REST Hooks
      summary: Update a Hook Subscription
      description: Modify an existing hook subscription using the provided values.
      operationId: update_a_hook_subscription
      parameters:
      - name: key
        in: path
        description: key
        required: true
        schema:
          type: string
      requestBody:
        description: restHookRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestHookRequest'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestHook'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: restHookRequest
    delete:
      tags:
      - REST Hooks
      summary: Delete a Hook Subscription
      description: Stop receiving hooks by deleting an existing hook subscription.
      operationId: delete_a_hook_subscription
      parameters:
      - name: key
        in: path
        description: key
        required: true
        schema:
          type: string
      responses:
        204:
          description: No Content
          content: {}
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /hooks/{key}/delayedVerify:
    post:
      tags:
      - REST Hooks
      summary: Verify a Hook Subscription, Delayed
      description: |-
        This operation is used to verify or reactivate a hook subscription out-of-band using RESTHooks.org's [Delayed Confirmation](http://resthooks.org/docs/security/) pattern.

        Use this verification method if you're not able to use the Immediate Confirmation provided through [Create a Hook Subscription](#!/REST_Hooks/create_a_hook_subscription) or [Verify a Hook Subscription](#!/REST_Hooks/verify_a_hook_subscription). This operation allows you to confirm a subscription by manually sending us the `X-Hook-Secret` you received.

        NB: **The `X-Hook-Secret` _must_ be passed as a _header_.**

        Don't worry if verification fails; you can always [request another verification attempt](#!/REST_Hooks/verify_a_hook_subscription).

        NB: You will not receive events until the subscription is verified.

        If the verification process seems confusing, head over to [RESTHooks.org](http://resthooks.org/docs/security/) for more on the concept.
      operationId: verify_a_hook_subscription_delayed
      parameters:
      - name: key
        in: path
        description: key
        required: true
        schema:
          type: string
      - name: X-Hook-Secret
        in: header
        description: X-Hook-Secret
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestHook'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /hooks/{key}/verify:
    post:
      tags:
      - REST Hooks
      summary: Verify a Hook Subscription
      description: |-
        This operation is used to verify or reactivate a hook subscription using RESTHooks.org's [Immediate Confirmation](http://resthooks.org/docs/security/) pattern.

        To verify or reactivate a hook subscription, Infusionsoft will make a `POST` request with a temporary secret to the `hookUrl` you provided during creation. The secret is passed as the value of a header named `X-Hook-Secret`. Your response to that `POST` *must* have a status code of `200` and return the same `X-Hook-Secret` header and value pair. Once you've done that, you'll begin receiving hooks. Don't worry if verification fails; you can always [request another verification attempt](#!/REST_Hooks/verify_a_hook_subscription).

        NB: You will not receive events until the subscription is verified.

        If the verification process seems confusing, head over to [RESTHooks.org](http://resthooks.org/docs/security/) for more on the concept.
      operationId: verify_a_hook_subscription
      parameters:
      - name: key
        in: path
        description: key
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestHook'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /locales/countries:
    get:
      tags:
      - Locale
      summary: List Countries
      operationId: listCountries
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountriesByCode'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /locales/countries/{countryCode}/provinces:
    get:
      tags:
      - Locale
      summary: List a Country's Provinces
      operationId: listCountriesProvinces
      parameters:
      - name: countryCode
        in: path
        description: countryCode
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvincesByCode'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /merchants:
    get:
      tags:
      - Merchant
      summary: List Merchants
      description: Retrieves a list of all merchant accounts
      operationId: getMerchantAccounts
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestMerchantAccountResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /notes:
    get:
      tags:
      - Note
      summary: List Notes
      description: Retrieves a list of all notes
      operationId: listNotes
      parameters:
      - name: limit
        in: query
        description: Sets a total of items to return
        schema:
          type: integer
          format: int32
      - name: offset
        in: query
        description: Sets a beginning range of items to return
        schema:
          type: integer
          format: int32
      - name: user_id
        in: query
        description: Filter based on the user id assigned to the note.
        schema:
          type: integer
          format: int64
      - name: contact_id
        in: query
        description: Filter based on the contact id assigned to the note.
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoteList'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
      - Note
      summary: Create a Note
      description: Creates a new note as the authenticated user. Either a "title"
        or "body" is required
      operationId: createNote
      requestBody:
        description: createNote
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestNote'
        required: true
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: createNote
  /notes/model:
    get:
      tags:
      - Note
      summary: Retrieve Note Model
      description: Get the custom fields for the Note object
      operationId: retrieveNoteModel
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectModel'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /notes/model/customFields:
    post:
      tags:
      - Note
      summary: Create a Custom Field
      description: Adds a custom field of the specified type and options to the Note
        object.
      operationId: createNoteCustomField
      requestBody:
        description: customField
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRestCustomField'
        required: true
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomFieldMetaData'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: customField
  /notes/{noteId}:
    get:
      tags:
      - Note
      summary: Retrieve a Note
      description: Retrieves a single note
      operationId: getNote
      parameters:
      - name: noteId
        in: path
        description: noteId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
      - Note
      summary: Delete a Note
      description: Deletes a note
      operationId: deleteNote
      parameters:
      - name: noteId
        in: path
        description: noteId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        204:
          description: No Content
          content: {}
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
      - Note
      summary: Update a Note
      description: Updates a note with only the values provided in the request
      operationId: updatePropertiesOnNote
      parameters:
      - name: noteId
        in: path
        description: noteId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: note
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateNote'
        required: false
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: note
  /oauth/connect/userinfo:
    get:
      tags:
      - User Info
      summary: Retrieve User Info
      description: Retrieves information for the current authenticated end-user, as
        outlined by the [OpenID Connect specification](http://openid.net/specs/openid-connect-core-1_0.html#UserInfo).
      operationId: getUserInfo
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfoDTO'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /opportunities:
    get:
      tags:
      - Opportunity
      summary: List Opportunities
      description: |-
        Retrieves a list of all opportunities.

        Please note: the sample response erroneously shows properties, such as _stage reasons_, that are unavailable through the list endpoint. Such properties are only available through the retrieve operation. Future versions of the Opportunity resource will correct the oversight.
      operationId: listOpportunities
      parameters:
      - name: limit
        in: query
        description: Sets a total of items to return
        schema:
          type: integer
          format: int32
      - name: offset
        in: query
        description: Sets a beginning range of items to return
        schema:
          type: integer
          format: int32
      - name: user_id
        in: query
        description: Returns opportunities for the provided user id
        schema:
          type: integer
          format: int64
      - name: stage_id
        in: query
        description: Returns opportunities for the provided stage id
        schema:
          type: integer
          format: int64
      - name: search_term
        in: query
        description: Returns opportunities that match any of the contact's `given_name`,
          `family_name`, `company_name`, and `email_addresses` (searches `EMAIL1`
          only) fields as well as `opportunity_title`
        schema:
          type: string
      - name: order
        in: query
        description: Attribute to order items by
        schema:
          type: string
          enum:
          - next_action
          - opportunity_name
          - contact_name
          - date_created
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpportunityList'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
      - Opportunity
      summary: Replace an Opportunity
      description: Replaces all values of a given opportunity
      operationId: updateOpportunity
      requestBody:
        description: opportunity
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Opportunity'
        required: false
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Opportunity'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: opportunity
    post:
      tags:
      - Opportunity
      summary: Create an Opportunity
      description: 'Creates a new opportunity as the authenticated user. NB: Opportunity
        must contain values for `opportunity_title`, `contact`, and `stage`.'
      operationId: createOpportunity
      requestBody:
        description: opportunity
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Opportunity'
        required: false
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Opportunity'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: opportunity
  /opportunities/model:
    get:
      tags:
      - Opportunity
      summary: Retrieve Opportunity Model
      description: Get the custom fields for the Opportunity object
      operationId: retrieveOpportunityModel
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectModel'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /opportunities/{opportunityId}:
    get:
      tags:
      - Opportunity
      summary: Retrieve an Opportunity
      description: Retrives a single opportunity
      operationId: getOpportunity
      parameters:
      - name: opportunityId
        in: path
        description: opportunityId
        required: true
        schema:
          type: integer
          format: int64
      - name: optional_properties
        in: query
        description: Comma-delimited list of Opportunity properties to include in
          the response. (Some fields such as `custom_fields` aren't included, by default.)
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Opportunity'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
      - Opportunity
      summary: Update an Opportunity
      description: Updates an opportunity with only the values provided in the request.
      operationId: updatePropertiesOnOpportunity
      parameters:
      - name: opportunityId
        in: path
        description: opportunityId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: opportunity
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Opportunity'
        required: false
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Opportunity'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: opportunity
  /opportunity/stage_pipeline:
    get:
      tags:
      - Opportunity
      summary: List Opportunity Stage Pipeline
      description: Retrieves a list of all opportunity stages with pipeline details
      operationId: listOpportunityStagePipelines
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SalesPipeline'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /orders:
    get:
      tags:
      - E-Commerce
      summary: List Orders
      description: |-
        Retrieves a list of all orders using the specified search criteria. Each order may or may not have items.

        Potential values for order status:`DRAFT`, `SENT`, `VIEWED`, `PAID`
      operationId: listOrders
      parameters:
      - name: since
        in: query
        description: Date to start searching from ex. `2017-01-01T22:17:59.039Z`
        schema:
          type: string
      - name: until
        in: query
        description: Date to search to ex. `2017-01-01T22:17:59.039Z`
        schema:
          type: string
      - name: limit
        in: query
        description: Sets a total of items to return
        schema:
          type: integer
          format: int32
      - name: offset
        in: query
        description: Sets a beginning range of items to return
        schema:
          type: integer
          format: int32
      - name: paid
        in: query
        description: Sets paid status of items to return
        schema:
          type: boolean
      - name: order
        in: query
        description: Attribute to order items by
        schema:
          type: string
      - name: contact_id
        in: query
        description: Returns orders for the provided contact id
        schema:
          type: integer
          format: int64
      - name: product_id
        in: query
        description: Returns orders containing the provided product id
        schema:
          type: integer
          format: int64
      - name: contact_name
        in: query
        description: Returns orders for the provided contact name
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderList'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
      - E-Commerce
      summary: Create an Order
      description: Create a one time order with order items.
      operationId: createOrder
      requestBody:
        description: createOrder
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrder'
        required: true
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: createOrder
  /orders/model:
    get:
      tags:
      - E-Commerce
      summary: Retrieve Custom Order Model
      description: Get the custom fields for the Order object
      operationId: retrieveOrderModel
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectModel'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /orders/{orderId}:
    get:
      tags:
      - E-Commerce
      summary: Retrieve an Order
      description: |-
        Retrieves a single order. The order may or may not have items.

        Potential values for order status:`DRAFT`, `SENT`, `VIEWED`, `PAID`
      operationId: getOrder
      parameters:
      - name: orderId
        in: path
        description: orderId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EcommerceReportingOrder'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
      - E-Commerce
      summary: Delete an Order
      description: Delete an order that does not have a payment
      operationId: deleteOrder
      parameters:
      - name: orderId
        in: path
        description: orderId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        204:
          description: No Content
          content: {}
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /orders/{orderId}/items:
    post:
      tags:
      - E-Commerce
      summary: Create an Order Item
      description: Creates an order item on an existing order.
      operationId: createOrderItemsOnOrder
      parameters:
      - name: orderId
        in: path
        description: orderId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: createOrderItem
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrderItem'
        required: true
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderItem'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: createOrderItem
  /orders/{orderId}/items/{orderItemId}:
    delete:
      tags:
      - E-Commerce
      summary: Delete an Order Item
      description: Delete an order Item on specified Order
      operationId: deleteOrderOrderItem
      parameters:
      - name: orderId
        in: path
        description: orderId
        required: true
        schema:
          type: integer
          format: int64
      - name: orderItemId
        in: path
        description: orderItemId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        204:
          description: No Content
          content: {}
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /orders/{orderId}/paymentPlan:
    put:
      tags:
      - E-Commerce
      summary: Replace an Order Pay Plan
      description: Replaces the order's payment plan with the given values.
      operationId: replacePaymentPlan
      parameters:
      - name: orderId
        in: path
        description: orderId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: paymentPlan
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentPlan'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentPlan'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: paymentPlan
  /orders/{orderId}/payments:
    get:
      tags:
      - E-Commerce
      summary: Retrieve Order Payments
      description: Retrieves a list of payments made against a given order, including
        historical or external payments of cash or credit card.
      operationId: listOrderPayments
      parameters:
      - name: orderId
        in: path
        description: orderId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InvoicePayment'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
      - E-Commerce
      summary: Create a Payment
      description: Creates a payment record that can charge a credit card. Alternatively,
        adds a record of historical or external payment of cash or credit card.
      operationId: createPaymentOnOrder
      parameters:
      - name: orderId
        in: path
        description: orderId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: createPayment
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePayment'
        required: false
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentResult'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: createPayment
  /orders/{orderId}/transactions:
    get:
      tags:
      - E-Commerce
      summary: Retrieve Order Transactions
      description: Retrieves a list of all transactions on a given order using the
        specified search criteria
      operationId: listTransactionsForOrder
      parameters:
      - name: orderId
        in: path
        description: orderId
        required: true
        schema:
          type: integer
          format: int64
      - name: since
        in: query
        description: Date to start searching from ex. `2017-01-01T22:17:59.039Z`
        schema:
          type: string
      - name: until
        in: query
        description: Date to search to ex. `2017-01-01T22:17:59.039Z`
        schema:
          type: string
      - name: limit
        in: query
        description: Sets a total of items to return
        schema:
          type: integer
          format: int32
      - name: offset
        in: query
        description: Sets a beginning range of items to return
        schema:
          type: integer
          format: int32
      - name: contact_id
        in: query
        description: Returns transactions for the provided contact id
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionList'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /products:
    get:
      tags:
      - Product
      summary: List Products
      description: Retrieves a list of all products
      operationId: listProducts
      parameters:
      - name: limit
        in: query
        description: Sets a total of items to return
        schema:
          type: integer
          format: int32
      - name: offset
        in: query
        description: Sets a beginning range of items to return
        schema:
          type: integer
          format: int32
      - name: active
        in: query
        description: Sets status of items to return
        schema:
          type: boolean
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductList'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
      - Product
      summary: Create a Product
      description: Creates a new product
      operationId: createProduct
      requestBody:
        description: createProduct
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProduct'
        required: true
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: createProduct
  /products/sync:
    get:
      tags:
      - Product
      summary: Retrieve Synced Products
      description: The Sync endpoint returns a set of products that have been updated
        or created since the last result set was retrieved, minus any products that
        have been deleted.
      operationId: listProductsFromSyncToken
      parameters:
      - name: sync_token
        in: query
        description: sync_token
        schema:
          type: string
      - name: limit
        in: query
        description: Sets a total of items to return
        schema:
          type: integer
          format: int32
      - name: offset
        in: query
        description: Sets a beginning range of items to return
        schema:
          type: integer
          format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductStatusList'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: true
  /products/{productId}:
    get:
      tags:
      - Product
      summary: Retrieve a Product
      operationId: retrieveProduct
      parameters:
      - name: productId
        in: path
        description: productId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
      - Product
      summary: Delete a Product
      description: Deletes a product and its subscriptions
      operationId: deleteProduct
      parameters:
      - name: productId
        in: path
        description: productId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        204:
          description: No Content
          content: {}
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
      - Product
      summary: Update a Product
      description: Updates a Product with only the values provided in the request.
      operationId: updateProduct
      parameters:
      - name: productId
        in: path
        description: productId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: createProduct
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProduct'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: createProduct
  /products/{productId}/image:
    post:
      tags:
      - Product
      summary: Upload a product image
      description: Max payload 3 megabytes, the `file_data` is base64 encoded.
      operationId: createProductImage
      parameters:
      - name: productId
        in: path
        description: productId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: restProductImage
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProductImage'
        required: true
      responses:
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: restProductImage
    delete:
      tags:
      - Product
      summary: Delete a product image
      operationId: deleteProductImage
      parameters:
      - name: productId
        in: path
        description: productId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        204:
          description: No Content
          content: {}
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /products/{productId}/subscriptions:
    post:
      tags:
      - Product
      summary: Create a Product Subscription
      description: Creates a new product subscription
      operationId: createProductSubscription
      parameters:
      - name: productId
        in: path
        description: productId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: createProductSubscription
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProductSubscription'
        required: true
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductSubscription'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: createProductSubscription
  /products/{productId}/subscriptions/{subscriptionId}:
    get:
      tags:
      - Product
      summary: Retrieve a Product Subscription
      operationId: retrieveProductSubscription
      parameters:
      - name: productId
        in: path
        description: productId
        required: true
        schema:
          type: integer
          format: int64
      - name: subscriptionId
        in: path
        description: subscriptionId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductSubscription'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
      - Product
      summary: Delete a Product Subscription
      description: Deletes a product subscription
      operationId: deleteProductSubscription
      parameters:
      - name: productId
        in: path
        description: productId
        required: true
        schema:
          type: integer
          format: int64
      - name: subscriptionId
        in: path
        description: subscriptionId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        204:
          description: No Content
          content: {}
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /setting/application/configuration:
    get:
      tags:
      - Setting
      summary: Retrieve application configuration
      description: Get the properties for the current application's configuration
      operationId: getConfiguration
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestApplicationConfiguration'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /setting/application/enabled:
    get:
      tags:
      - Setting
      summary: Retrieve application status
      description: Retrieves whether the application is enabled
      operationId: getApplicationEnabled
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Setting'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /setting/contact/optionTypes:
    get:
      tags:
      - Setting
      summary: List Contact types
      description: Lists the Contact types in a comma-separated list
      operationId: getContactOptionTypes
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Setting'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /subscriptions:
    get:
      tags:
      - E-Commerce
      summary: List Subscriptions
      description: Retrieves a list of all subcriptions using the specified search
        criteria.
      operationId: listSubscriptions
      parameters:
      - name: limit
        in: query
        description: Sets a total of items to return
        schema:
          type: integer
          format: int32
      - name: offset
        in: query
        description: Sets a beginning range of items to return
        schema:
          type: integer
          format: int32
      - name: contact_id
        in: query
        description: Returns subscriptions for the provided contact id
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionList'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
      - E-Commerce
      summary: Create Subscription
      description: Creates a subscription with the specified product and product subscription
        id.
      operationId: createSubscription
      requestBody:
        description: createSubscription
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSubscription'
        required: true
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: createSubscription
  /subscriptions/model:
    get:
      tags:
      - E-Commerce
      summary: Retrieve Subscription Model
      description: Get the custom fields for the Subscription object
      operationId: retrieveSubscriptionModel
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectModel'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /tags:
    get:
      tags:
      - Tags
      summary: List Tags
      description: Retrieve a list of tags defined in the application
      operationId: listTags
      parameters:
      - name: limit
        in: query
        description: Sets a total of items to return
        schema:
          type: integer
          format: int32
      - name: offset
        in: query
        description: Sets a beginning range of items to return
        schema:
          type: integer
          format: int32
      - name: category
        in: query
        description: Category Id of tags to filter by
        schema:
          type: integer
          format: int64
      - name: name
        in: query
        description: Filter for tags with a specific name
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tags'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
      - Tags
      summary: Create Tag
      description: Create a new tag
      operationId: createTag
      requestBody:
        description: tag
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTag'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: tag
  /tags/categories:
    post:
      tags:
      - Tags
      summary: Create Tag Category
      description: Create a new tag category
      operationId: createTagCategory
      requestBody:
        description: tagCategory
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTagCategory'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagCategory'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: tagCategory
  /tags/{id}:
    get:
      tags:
      - Tags
      summary: Retrieve a Tag
      description: Retrieves a single tag
      operationId: getTag
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /tags/{tagId}/companies:
    get:
      tags:
      - Tags
      summary: List Tagged Companies
      description: Retrieves a list of companies that have the given tag applied
      operationId: listCompaniesForTagId
      parameters:
      - name: tagId
        in: path
        description: tagId
        required: true
        schema:
          type: integer
          format: int64
      - name: limit
        in: query
        description: Sets a total of items to return
        schema:
          type: integer
          format: int32
      - name: offset
        in: query
        description: Sets a beginning range of items to return
        schema:
          type: integer
          format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaggedCompanyList'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /tags/{tagId}/contacts:
    get:
      tags:
      - Tags
      summary: List Tagged Contacts
      description: Retrieves a list of contacts that have the given tag applied
      operationId: listContactsForTagId
      parameters:
      - name: tagId
        in: path
        description: tagId
        required: true
        schema:
          type: integer
          format: int64
      - name: limit
        in: query
        description: Sets a total of items to return
        schema:
          type: integer
          format: int32
      - name: offset
        in: query
        description: Sets a beginning range of items to return
        schema:
          type: integer
          format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaggedContactList'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
      - Tags
      summary: Apply Tag to Contacts
      description: Apply a tag to a list of contacts
      operationId: applyTagToContactIds
      parameters:
      - name: tagId
        in: path
        description: tagId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: ids
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetOfIds'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EntryLongString'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: ids
    delete:
      tags:
      - Tags
      summary: Remove Tag from Contacts
      description: Remove a tag from a list of contacts
      operationId: removeTagFromContactIds
      parameters:
      - name: tagId
        in: path
        description: tagId
        required: true
        schema:
          type: integer
          format: int64
      - name: ids
        in: query
        description: ids
        required: true
        style: form
        explode: true
        schema:
          type: array
          items:
            type: integer
            format: int64
      responses:
        204:
          description: No Content
          content: {}
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /tags/{tagId}/contacts/{contactId}:
    delete:
      tags:
      - Tags
      summary: Remove Tag from Contact
      description: Remove a tag from a Contact
      operationId: removeTagFromContactId
      parameters:
      - name: tagId
        in: path
        description: tagId
        required: true
        schema:
          type: integer
          format: int64
      - name: contactId
        in: path
        description: contactId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        204:
          description: No Content
          content: {}
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /tasks:
    get:
      tags:
      - Task
      summary: List Tasks
      description: Retrieves a list of all tasks using the specified search criteria
      operationId: listTasks
      parameters:
      - name: contact_id
        in: query
        description: contact_id
        schema:
          type: integer
          format: int64
      - name: has_due_date
        in: query
        description: has_due_date
        schema:
          type: boolean
      - name: user_id
        in: query
        description: user_id
        schema:
          type: integer
          format: int64
      - name: since
        in: query
        description: Date to start searching from ex. `2017-01-01T22:17:59.039Z`
        schema:
          type: string
      - name: until
        in: query
        description: Date to search to ex. `2017-01-01T22:17:59.039Z`
        schema:
          type: string
      - name: completed
        in: query
        description: Sets completed status of items to return
        schema:
          type: boolean
      - name: limit
        in: query
        description: Sets a total of items to return
        schema:
          type: integer
          format: int32
      - name: offset
        in: query
        description: Sets a beginning range of items to return
        schema:
          type: integer
          format: int32
      - name: order
        in: query
        description: Attribute to order items by
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskList'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
      - Task
      summary: Create a Task
      description: 'Creates a new task as the authenticated user. NB: Contact must
        contain at least one item in the fields `title` and `due_date`. All other
        attributes are optional'
      operationId: createTask
      requestBody:
        description: task
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: task
  /tasks/model:
    get:
      tags:
      - Task
      summary: Retrieve Task Model
      description: Get the custom fields for the Task object
      operationId: retrieveTaskModel
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectModel'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /tasks/model/customFields:
    post:
      tags:
      - Task
      summary: Create a Custom Field
      description: Adds a custom field of the specified type and options to the Task
        object.
      operationId: createTaskCustomField
      requestBody:
        description: customField
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRestCustomField'
        required: true
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomFieldMetaData'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: customField
  /tasks/search:
    get:
      tags:
      - Task
      summary: Search Tasks
      description: Retrieves Tasks belonging to the authenticated user using the specified
        search criteria
      operationId: listTasksForCurrentUser
      parameters:
      - name: contact_id
        in: query
        description: Returns tasks for the provided contact id
        schema:
          type: integer
          format: int64
      - name: has_due_date
        in: query
        description: Returns tasks that have an 'action date' when set to true
        schema:
          type: boolean
      - name: user_id
        in: query
        description: Returns tasks for the provided user id
        schema:
          type: integer
          format: int64
      - name: since
        in: query
        description: Date to start searching from ex. `2017-01-01T22:17:59.039Z`
        schema:
          type: string
      - name: until
        in: query
        description: Date to search to ex. `2017-01-01T22:17:59.039Z`
        schema:
          type: string
      - name: completed
        in: query
        description: Sets completed status of items to return
        schema:
          type: boolean
      - name: limit
        in: query
        description: Sets a total of items to return
        schema:
          type: integer
          format: int32
      - name: offset
        in: query
        description: Sets a beginning range of items to return
        schema:
          type: integer
          format: int32
      - name: order
        in: query
        description: Attribute to order items by
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskList'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /tasks/{taskId}:
    get:
      tags:
      - Task
      summary: Retrieve a Task
      description: Retrieves a single task
      operationId: getTask
      parameters:
      - name: taskId
        in: path
        description: taskId
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
      - Task
      summary: Replace a Task
      description: Replaces a task with the values provided in the request
      operationId: updateTask
      parameters:
      - name: taskId
        in: path
        description: taskId
        required: true
        schema:
          type: string
      requestBody:
        description: task
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: task
    delete:
      tags:
      - Task
      summary: Delete a Task
      description: Permanently deletes a task
      operationId: deleteTask
      parameters:
      - name: taskId
        in: path
        description: taskId
        required: true
        schema:
          type: string
      responses:
        204:
          description: No Content
          content: {}
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
      - Task
      summary: Update a Task
      description: Updates a task with only the values provided in the request
      operationId: updatePropertiesOnTask
      parameters:
      - name: taskId
        in: path
        description: taskId
        required: true
        schema:
          type: string
      requestBody:
        description: task
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: task
  /transactions:
    get:
      tags:
      - E-Commerce
      summary: List Transactions
      description: Retrieves a list transactions for a given contact
      operationId: listTransactions
      parameters:
      - name: since
        in: query
        description: Date to start searching from ex. `2017-01-01T22:17:59.039Z`
        schema:
          type: string
      - name: until
        in: query
        description: Date to search to ex. `2017-01-01T22:17:59.039Z`
        schema:
          type: string
      - name: limit
        in: query
        description: Sets a total of items to return
        schema:
          type: integer
          format: int32
      - name: offset
        in: query
        description: Sets a beginning range of items to return
        schema:
          type: integer
          format: int32
      - name: contact_id
        in: query
        description: Returns transactions for the provided contact id
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionList'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /transactions/{transactionId}:
    get:
      tags:
      - E-Commerce
      summary: Retrieve a Transaction
      description: Retrieves a single transaction
      operationId: getTransaction
      parameters:
      - name: transactionId
        in: path
        description: transactionId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EcommerceReportingTransaction'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /users:
    get:
      tags:
      - Users
      summary: List Users
      description: Retrieves a list of all users
      operationId: listUsers
      parameters:
      - name: limit
        in: query
        description: Sets a total of items to return
        schema:
          type: integer
          format: int32
      - name: offset
        in: query
        description: Sets a beginning range of items to return
        schema:
          type: integer
          format: int32
      - name: include_inactive
        in: query
        description: Include users that are Inactive in results, defaults to TRUE
        schema:
          type: boolean
      - name: include_partners
        in: query
        description: Include partner users in results, defaults to TRUE
        schema:
          type: boolean
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Users'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
      - Users
      summary: Create a User
      description: 'Creates a new user record. NB: Users will be invited to the application
        and remain in the "Invited" status until the user accepts the invite. "Inactive"
        users will not take up a user license.'
      operationId: createUser
      requestBody:
        description: user
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUser'
        required: false
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestUser'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: user
  /users/{userId}/signature:
    get:
      tags:
      - Users
      summary: Get User email signature
      description: Retrieves a HTML snippet that contains the user's email signature.
      operationId: getUserSignature
      parameters:
      - name: userId
        in: path
        description: userId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: string
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Appointment:
      required:
      - end_date
      - start_date
      - title
      type: object
      properties:
        contact_id:
          type: integer
          description: Required for pop-up reminders
          format: int64
        description:
          type: string
        end_date:
          type: string
        location:
          type: string
        remind_time:
          type: integer
          description: Value in minutes before start_date to show pop-up reminder.  Acceptable
            values are [5,10,15,30,60,120,240,480,1440,2880]
          format: int32
        start_date:
          type: string
        title:
          type: string
        user:
          type: integer
          description: Required only for pop-up reminders
          format: int64
    SubscriptionPlan:
      type: object
      properties:
        active:
          type: boolean
        cycle:
          type: integer
          format: int32
        frequency:
          type: integer
          format: int32
        id:
          type: integer
          format: int64
        number_of_cycles:
          type: integer
          format: int32
        plan_price:
          type: number
          format: double
        subscription_plan_index:
          type: integer
          format: int32
        subscription_plan_name:
          type: string
    EcommerceReportingTransaction:
      type: object
      properties:
        amount:
          type: number
          format: double
        collection_method:
          type: string
        contact_id:
          type: integer
          format: int64
        currency:
          type: string
        errors:
          type: string
        gateway:
          type: string
        gateway_account_name:
          type: string
        id:
          type: integer
          format: int64
        order_ids:
          type: string
        orders:
          type: array
          items:
            $ref: '#/components/schemas/EcommerceReportingOrder'
        paymentDate:
          type: string
        status:
          type: string
        test:
          type: boolean
        transaction_date:
          type: string
        type:
          type: string
    SalesPipeline:
      type: object
      properties:
        end_stage:
          type: boolean
        is_default:
          type: boolean
        stage_count:
          type: integer
          format: int32
        stage_id:
          type: integer
          format: int64
        stage_name:
          type: string
        stage_order:
          type: integer
          format: int32
    Address:
      type: object
      properties:
        country_code:
          type: string
        line1:
          type: string
        line2:
          type: string
        locality:
          type: string
        region:
          type: string
        zip_code:
          type: string
        zip_four:
          type: string
    CreateOrPatchCompany:
      required:
      - company_name
      type: object
      properties:
        address:
          $ref: '#/components/schemas/CompanyAddress'
        company_name:
          type: string
        custom_fields:
          type: array
          items:
            $ref: '#/components/schemas/CustomFieldValue'
        email_address:
          type: string
        fax_number:
          $ref: '#/components/schemas/CompanyFaxNumber'
        notes:
          type: string
        opt_in_reason:
          type: string
        phone_number:
          $ref: '#/components/schemas/CompanyPhoneNumber'
        website:
          type: string
    Product:
      required:
      - id
      - product_name
      type: object
      properties:
        active:
          type: boolean
        id:
          type: integer
          format: int64
        product_desc:
          type: string
        product_name:
          type: string
        product_price:
          type: number
          format: double
        product_short_desc:
          type: string
        sku:
          type: string
        subscription_only:
          type: boolean
        subscription_plans:
          type: array
          items:
            $ref: '#/components/schemas/ProductSubscription'
        url:
          type: string
    Users:
      type: object
      properties:
        count:
          type: integer
          format: int32
        next:
          type: string
        previous:
          type: string
        users:
          type: array
          items:
            $ref: '#/components/schemas/RestUser'
    AffiliateList:
      type: object
      properties:
        affiliates:
          type: array
          items:
            $ref: '#/components/schemas/Affiliate'
        count:
          type: integer
          format: int32
        next:
          type: string
        previous:
          type: string
    Affiliate:
      type: object
      properties:
        code:
          type: string
        contact_id:
          type: integer
          format: int64
        id:
          type: integer
          format: int64
        name:
          type: string
        notify_on_lead:
          type: boolean
        notify_on_sale:
          type: boolean
        parent_id:
          type: integer
          format: int64
        status:
          type: string
        track_leads_for:
          type: integer
          format: int32
    Item:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        next_item_id:
          type: integer
          format: int64
        previous_item_id:
          type: integer
          format: int64
        type:
          type: string
          enum:
          - NULL
          - Start
          - Wait
          - DelayTimer
          - ContactTimer
          - DateTimer
          - AppointmentTimer
          - Email
          - BardEmail
          - UnlayerEmail
          - EmailConfirm
          - Voice
          - Fax
          - Letter
          - AutomatedSms
          - Tag
          - Opportunity
          - Note
          - Task
          - CompleteTasks
          - Appointment
          - AssignOwner
          - FieldValue
          - Fulfillment
          - CreateOrder
          - Deal
          - AddToSequence
          - CancelSubscription
          - MoveOpportunity
          - SendHelloSign
          - Http
          - CustomerHub
          - ActionSet
    EmailSentQueryResultWithContent:
      type: object
      properties:
        clicked_date:
          type: string
          format: date-time
        contact_id:
          type: integer
          format: int64
        headers:
          type: string
        html_content:
          type: string
          description: Base64 encoded HTML
        id:
          type: integer
          format: int64
        opened_date:
          type: string
          format: date-time
        original_provider:
          type: string
          enum:
          - UNKNOWN
          - INFUSIONSOFT
          - MICROSOFT
          - GOOGLE
        original_provider_id:
          type: string
        plain_content:
          type: string
          description: Base64 encoded plain text
        received_date:
          type: string
          format: date-time
        sent_date:
          type: string
          format: date-time
        sent_from_address:
          type: string
        sent_from_reply_address:
          type: string
        sent_to_address:
          type: string
        sent_to_bcc_addresses:
          type: string
        sent_to_cc_addresses:
          type: string
        subject:
          type: string
    Goal:
      type: object
      properties:
        historical_contact_counts:
          $ref: '#/components/schemas/HistoricalCounts'
        id:
          type: integer
          format: int64
        name:
          type: string
        next_sequence_ids:
          type: array
          items:
            type: integer
            format: int64
        previous_sequence_ids:
          type: array
          items:
            type: integer
            format: int64
        type:
          type: string
          enum:
          - WebForm
          - LandingPage
          - Survey
          - LinkClick
          - EmailOpened
          - Score
          - Purchase
          - FailedPurchase
          - Quote
          - WebsiteTrigger
          - InternalForm
          - SmartForm
          - AppointmentEvent
          - Task
          - StageMove
          - Note
          - Tag
          - PipelineStageMove
          - UnlayerLandingPage
          - GroSocial
          - TwitterForm
          - API
          - WordPress
          - NewLandingPage
          - HelloSign
    FaxNumber:
      required:
      - field
      type: object
      properties:
        field:
          type: string
          enum:
          - FAX1
          - FAX2
        number:
          type: string
        type:
          type: string
    EcommerceReportingOrderContactDetails:
      type: object
      properties:
        company_name:
          type: string
        email:
          type: string
        first_name:
          type: string
        id:
          type: integer
          format: int64
        job_title:
          type: string
        last_name:
          type: string
    EcommerceReportingPaymentGateway:
      type: object
      properties:
        merchant_account_id:
          type: integer
          format: int64
        use_default:
          type: boolean
    RestAffiliateClawback:
      type: object
      properties:
        amount:
          type: number
          format: double
        contact_id:
          type: integer
          format: int64
        date_earned:
          type: string
        description:
          type: string
        family_name:
          type: string
        given_name:
          type: string
        invoice_id:
          type: integer
          format: int64
        product_name:
          type: string
        sale_affiliate_id:
          type: integer
          format: int64
        sold_by_family_name:
          type: string
        sold_by_given_name:
          type: string
        subscription_plan_name:
          type: string
    Subscription:
      type: object
      properties:
        active:
          type: boolean
        allow_tax:
          type: boolean
        auto_charge:
          type: boolean
        billing_amount:
          type: number
          format: double
        billing_cycle:
          type: string
          enum:
          - YEAR
          - MONTH
          - WEEK
          - DAY
        billing_frequency:
          type: integer
          format: int32
        contact_id:
          type: integer
          format: int64
        credit_card_id:
          type: integer
          format: int64
        end_date:
          type: string
          format: date
        id:
          type: integer
          format: int64
        next_bill_date:
          type: string
          format: date
        payment_gateway_id:
          type: integer
          format: int64
        product_id:
          type: integer
          format: int64
        quantity:
          type: integer
          format: int64
        sale_affiliate_id:
          type: integer
          format: int64
        start_date:
          type: string
          format: date
        subscription_plan_id:
          type: integer
          format: int64
        use_default_payment_gateway:
          type: boolean
    EcommerceReportingSimpleProduct:
      type: object
      properties:
        description:
          type: string
        id:
          type: integer
          format: int64
        name:
          type: string
        shippable:
          type: boolean
        sku:
          type: string
        taxable:
          type: boolean
    Tags:
      type: object
      properties:
        count:
          type: integer
          format: int32
        next:
          type: string
        previous:
          type: string
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
    ContactAddress:
      required:
      - field
      type: object
      properties:
        country_code:
          type: string
        field:
          type: string
          enum:
          - BILLING
          - SHIPPING
          - OTHER
        line1:
          type: string
        line2:
          type: string
        locality:
          type: string
        postal_code:
          type: string
          description: Field used to store postal codes containing a combination of
            letters and numbers ex. 'EC1A', 'S1 2HE', '75000'
        region:
          type: string
        zip_code:
          type: string
          description: 'Mainly used in the United States, this is typically numeric.
            ex. ''85001'', ''90002'' Note: this is to be used instead of ''postal_code'',
            not in addition to.'
        zip_four:
          type: string
          description: Last four of a full zip code ex. '8244', '4320'. This field
            is supplemental to the zip_code field, otherwise will be ignored.
    EcommerceReportingPaymentPlan:
      type: object
      properties:
        auto_charge:
          type: boolean
        credit_card_id:
          type: integer
          format: int64
        days_between_payments:
          type: integer
          format: int64
        initial_payment_amount:
          type: number
          format: double
        initial_payment_date:
          type: string
        number_of_payments:
          type: integer
          format: int64
        payment_gateway:
          $ref: '#/components/schemas/EcommerceReportingPaymentGateway'
        plan_start_date:
          type: string
    RestApplicationConfigurationModuleTask:
      type: object
      properties:
        appointment_types:
          type: string
        share_opportunity_with_related_user:
          type: boolean
    CreateOrderItem:
      required:
      - product_id
      - quantity
      type: object
      properties:
        description:
          type: string
        price:
          type: string
          description: Overridable price of the product, if not specified, the default
            will be used. Must be greater than or equal to 0.
        product_id:
          type: integer
          description: The id of the product to be added to the order.
          format: int64
        quantity:
          type: integer
          description: Quantity must be greater than or equal to 1
          format: int32
    CreateProduct:
      required:
      - product_name
      type: object
      properties:
        active:
          type: boolean
        product_desc:
          type: string
        product_name:
          type: string
        product_price:
          type: number
          format: double
        product_short_desc:
          type: string
        sku:
          type: string
        subscription_only:
          type: boolean
    RestPartialContact:
      type: object
      properties:
        ScoreValue:
          type: string
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/ContactAddress'
        anniversary:
          type: string
          format: date-time
        birthday:
          type: string
          format: date-time
        company:
          $ref: '#/components/schemas/CompanyReference'
        company_name:
          type: string
        contact_type:
          type: string
        custom_fields:
          type: array
          items:
            $ref: '#/components/schemas/CustomFieldValue'
        date_created:
          type: string
          format: date-time
        email_addresses:
          type: array
          items:
            $ref: '#/components/schemas/EmailAddress'
        email_opted_in:
          type: boolean
        email_status:
          type: string
          enum:
          - UnengagedMarketable
          - SingleOptIn
          - DoubleOptin
          - Confirmed
          - UnengagedNonMarketable
          - NonMarketable
          - Lockdown
          - Bounce
          - HardBounce
          - Manual
          - Admin
          - System
          - ListUnsubscribe
          - Feedback
          - Spam
          - Invalid
          - Deactivated
        family_name:
          type: string
        fax_numbers:
          type: array
          items:
            $ref: '#/components/schemas/FaxNumber'
        given_name:
          type: string
        id:
          type: integer
          format: int64
        job_title:
          type: string
        last_updated:
          type: string
          format: date-time
        lead_source_id:
          type: integer
          format: int64
        middle_name:
          type: string
        owner_id:
          type: integer
          format: int64
        phone_numbers:
          type: array
          items:
            $ref: '#/components/schemas/PhoneNumber'
        preferred_locale:
          type: string
          example: en_US
        preferred_name:
          type: string
        prefix:
          type: string
        social_accounts:
          type: array
          items:
            $ref: '#/components/schemas/SocialAccount'
        source_type:
          type: string
          enum:
          - APPOINTMENT
          - FORMAPIHOSTED
          - FORMAPIINTERNAL
          - WEBFORM
          - INTERNALFORM
          - LANDINGPAGE
          - IMPORT
          - MANUAL
          - API
          - OTHER
          - UNKNOWN
        spouse_name:
          type: string
        suffix:
          type: string
        time_zone:
          type: string
        website:
          type: string
    EmailAddress:
      required:
      - field
      type: object
      properties:
        email:
          type: string
        field:
          type: string
          enum:
          - EMAIL1
          - EMAIL2
          - EMAIL3
    CompanyPhoneNumber:
      type: object
      properties:
        extension:
          type: string
        number:
          type: string
        type:
          type: string
    CreditCardAdded:
      type: object
      properties:
        address:
          $ref: '#/components/schemas/ContactAddress'
        card_type:
          type: string
        contact_id:
          type: integer
          format: int64
        email_address:
          type: string
        expiration_month:
          type: string
        expiration_year:
          type: string
        id:
          type: integer
          format: int64
        maestro_issue_number:
          type: string
        maestro_start_date_month:
          type: string
        maestro_start_date_year:
          type: string
        name_on_card:
          type: string
        validation_message:
          type: string
        validation_status:
          type: string
    AffiliatePaymentList:
      type: object
      properties:
        count:
          type: integer
          format: int32
        next:
          type: string
        payments:
          type: array
          items:
            $ref: '#/components/schemas/RestAffiliatePayment'
        previous:
          type: string
    Note:
      type: object
      properties:
        body:
          type: string
        contact_id:
          type: integer
          format: int64
        date_created:
          type: string
          format: date-time
        id:
          type: integer
          format: int64
        last_updated:
          type: string
          format: date-time
        last_updated_by:
          $ref: '#/components/schemas/NoteUser'
        title:
          type: string
        type:
          type: string
          enum:
          - Appointment
          - Call
          - Email
          - Fax
          - Letter
          - Other
        user_id:
          type: integer
          format: int64
    TaggedContact:
      type: object
      properties:
        contact:
          $ref: '#/components/schemas/BasicContact'
        date_applied:
          type: string
          format: date-time
    RestApplicationConfigurationModuleAffiliate:
      type: object
      properties:
        choose_affiliate:
          type: boolean
        commission:
          $ref: '#/components/schemas/RestApplicationConfigurationModuleAffiliateCommission'
        custom_affiliate_url:
          type: string
        display_affiliate_ip_address:
          type: boolean
        do_not_notify_affiliate:
          type: boolean
        skip_pay_if_unused:
          type: boolean
        use_referral_history_if_no_tracking_cookie:
          type: boolean
    TaggedCompanyList:
      type: object
      properties:
        companies:
          type: array
          items:
            $ref: '#/components/schemas/TaggedCompany'
        count:
          type: integer
          format: int32
        next:
          type: string
        previous:
          type: string
    ContactTagList:
      type: object
      properties:
        count:
          type: integer
          format: int32
        next:
          type: string
        previous:
          type: string
        tags:
          type: array
          items:
            $ref: '#/components/schemas/ContactTag'
    EmailSentCreateError:
      type: object
      properties:
        email:
          $ref: '#/components/schemas/EmailSentCreate'
        error_message:
          type: string
    RestApplicationConfigurationModuleOpportunityStatesWin:
      type: object
      properties:
        reasons:
          type: string
        stage:
          type: string
    ContactOrigin:
      required:
      - date
      - ip_address
      type: object
      properties:
        date:
          type: string
          format: date-time
        ip_address:
          type: string
    CreateTagCategory:
      required:
      - name
      type: object
      properties:
        description:
          type: string
          description: The category description
        name:
          type: string
          description: The category name
    ProductStatusList:
      type: object
      properties:
        count:
          type: integer
          format: int32
        next:
          type: string
        previous:
          type: string
        product_statuses:
          type: array
          items:
            $ref: '#/components/schemas/ProductStatus'
        sync_token:
          type: string
    ObjectModel:
      type: object
      properties:
        custom_fields:
          type: array
          items:
            $ref: '#/components/schemas/CustomFieldMetaData'
        optional_properties:
          type: array
          description: These fields are not transmitted by default on this model,
            but can be requested by specifying them in a comma-separated list in the
            optional_properties query parameter.
          items:
            type: string
    AddressInformation:
      type: object
      properties:
        company:
          type: string
        country_code:
          type: string
        first_name:
          type: string
        is_invoice_to_company:
          type: boolean
        last_name:
          type: string
        line1:
          type: string
        line2:
          type: string
        locality:
          type: string
        middle_name:
          type: string
        phone:
          type: string
        region:
          type: string
        zip_code:
          type: string
        zip_four:
          type: string
    UpdateEmailAddress:
      required:
      - opted_in
      - reason
      type: object
      properties:
        opted_in:
          type: boolean
        reason:
          type: string
    SimpleOpportunityStage:
      required:
      - id
      type: object
      properties:
        details:
          $ref: '#/components/schemas/StageDetails'
        id:
          type: integer
          format: int64
        name:
          type: string
        reasons:
          type: array
          items:
            type: string
    StackTraceElement:
      type: object
      properties:
        className:
          type: string
        fileName:
          type: string
        lineNumber:
          type: integer
          format: int32
        methodName:
          type: string
        nativeMethod:
          type: boolean
    SequencePath:
      type: object
      properties:
        id:
          type: integer
          format: int64
        items:
          type: array
          items:
            $ref: '#/components/schemas/Item'
    RestApplicationConfigurationModuleApplicationCompany:
      type: object
      properties:
        caller_id_number:
          type: string
        city:
          type: string
        country:
          type: string
        email:
          type: string
        name:
          type: string
        phone:
          type: string
        phone_ext:
          type: string
        state:
          type: string
        street_address_1:
          type: string
        street_address_2:
          type: string
        web_logo_url:
          type: string
        website:
          type: string
        zip:
          type: string
    UpdateNote:
      type: object
      properties:
        body:
          type: string
        contact_id:
          type: integer
          format: int64
        title:
          type: string
        type:
          type: string
          enum:
          - Appointment
          - Call
          - Email
          - Fax
          - Letter
          - Other
        user_id:
          type: integer
          format: int64
    AffiliateProgram:
      type: object
      properties:
        affiliate_id:
          type: integer
          format: int64
        id:
          type: integer
          format: int64
        name:
          type: string
        notes:
          type: string
        priority:
          type: integer
          format: int32
    ContactTag:
      type: object
      properties:
        date_applied:
          type: string
          format: date-time
        tag:
          $ref: '#/components/schemas/SimpleTag'
    Merchant:
      type: object
      properties:
        account_name:
          type: string
        id:
          type: integer
          format: int64
        is_test:
          type: boolean
        type:
          type: string
    ContactCreditCard:
      type: object
      properties:
        card_number:
          type: string
        card_type:
          type: string
        id:
          type: integer
          format: int64
        validation_status:
          type: string
    CreateProductImage:
      required:
      - file_data
      - file_name
      type: object
      properties:
        checksum:
          type: string
          description: SHA256 checksum of image in Hex.
        file_data:
          type: string
          description: The image data, base64 encoded.
        file_name:
          type: string
          description: 'The name of the file with extension, must match file data.  Acceptable
            file types:  [.png, .gif, .jpg, .jpeg].'
    CampaignLandingPageNodeDTO:
      type: object
      properties:
        formId:
          type: string
        id:
          type: string
        landingPageId:
          type: string
        leadBucketIds:
          type: array
          items:
            type: string
        name:
          type: string
        properties:
          type: object
          properties: {}
        ready:
          type: boolean
        type:
          type: string
          enum:
          - WebForm
          - LandingPage
          - Survey
          - LinkClick
          - EmailOpened
          - Score
          - Purchase
          - FailedPurchase
          - Quote
          - WebsiteTrigger
          - InternalForm
          - SmartForm
          - AppointmentEvent
          - Task
          - StageMove
          - Note
          - Tag
          - PipelineStageMove
          - UnlayerLandingPage
          - GroSocial
          - TwitterForm
          - API
          - WordPress
          - NewLandingPage
          - HelloSign
    RequestCompanyReference:
      type: object
      properties:
        id:
          type: integer
          format: int64
    HistoricalCounts:
      type: object
      properties:
        24_hours:
          type: integer
          format: int32
        30_days:
          type: integer
          format: int32
    CreateAffiliate:
      required:
      - code
      - contact_id
      - password
      type: object
      properties:
        code:
          type: string
        contact_id:
          type: integer
          format: int64
        name:
          type: string
        notify_on_lead:
          type: boolean
        notify_on_sale:
          type: boolean
        parent_id:
          type: integer
          format: int64
        password:
          type: string
        status:
          type: string
          enum:
          - active
          - inactive
        track_leads_for:
          type: integer
          format: int32
    InvoicePayment:
      type: object
      properties:
        amount:
          type: number
        id:
          type: integer
          format: int64
        invoice_id:
          type: integer
          format: int64
        last_updated:
          type: string
          format: date-time
        note:
          type: string
        pay_date:
          type: string
          format: date-time
        pay_status:
          type: string
        payment_id:
          type: integer
          format: int64
        refund_invoice_payment_id:
          type: integer
          format: int64
        skip_commission:
          type: boolean
    ProvincesByCode:
      required:
      - provinces
      type: object
      properties:
        provinces:
          type: object
          additionalProperties:
            type: string
          description: A key-value pair of province code and province name.
    RestUser:
      required:
      - id
      type: object
      properties:
        address:
          $ref: '#/components/schemas/Address'
        company_name:
          type: string
        created_by:
          type: integer
          format: int64
        date_created:
          type: string
          format: date-time
        email_address:
          type: string
        family_name:
          type: string
        fax_numbers:
          type: array
          items:
            $ref: '#/components/schemas/FaxNumber'
        given_name:
          type: string
        global_user_id:
          type: integer
          format: int64
        id:
          type: integer
          format: int64
        infusionsoft_id:
          type: string
        job_title:
          type: string
        last_updated:
          type: string
          format: date-time
        last_updated_by:
          type: integer
          format: int64
        middle_name:
          type: string
        partner:
          type: boolean
        phone_numbers:
          type: array
          items:
            $ref: '#/components/schemas/PhoneNumber'
        preferred_name:
          type: string
        status:
          type: string
          enum:
          - Active
          - Invited
          - Inactive
        time_zone:
          type: string
        website:
          type: string
    AffiliateRedirect:
      type: object
      properties:
        affiliate_id:
          type: integer
          format: int64
        id:
          type: integer
          format: int64
        local_url_code:
          type: string
        name:
          type: string
        program_ids:
          type: array
          items:
            type: integer
            format: int64
        redirect_url:
          type: string
    CampaignNodeDTO:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        properties:
          type: object
          properties: {}
        ready:
          type: boolean
        type:
          type: string
          enum:
          - WebForm
          - LandingPage
          - Survey
          - LinkClick
          - EmailOpened
          - Score
          - Purchase
          - FailedPurchase
          - Quote
          - WebsiteTrigger
          - InternalForm
          - SmartForm
          - AppointmentEvent
          - Task
          - StageMove
          - Note
          - Tag
          - PipelineStageMove
          - UnlayerLandingPage
          - GroSocial
          - TwitterForm
          - API
          - WordPress
          - NewLandingPage
          - HelloSign
    AffiliateCommissionList:
      type: object
      properties:
        commissions:
          type: array
          items:
            $ref: '#/components/schemas/AffiliateCommission'
        count:
          type: integer
          format: int32
        next:
          type: string
        previous:
          type: string
    ProductStatus:
      type: object
      properties:
        product:
          $ref: '#/components/schemas/Product_'
        status:
          type: string
          enum:
          - CREATED
          - UPDATED
          - DELETED
    RestApplicationConfigurationModuleOpportunityStatesActive:
      type: object
      properties:
        stages:
          type: string
    CreateUser:
      required:
      - email
      - given_name
      type: object
      properties:
        admin:
          type: boolean
        email:
          type: string
        given_name:
          type: string
        partner:
          type: boolean
    CreateRestCustomFieldOption:
      type: object
      properties:
        label:
          type: string
        options:
          type: array
          items:
            $ref: '#/components/schemas/CreateRestCustomFieldOption'
    ContactList:
      type: object
      properties:
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/RestPartialContact'
        count:
          type: integer
          format: int32
        next:
          type: string
        previous:
          type: string
    AchieveApiGoalEvent:
      required:
      - contact_id
      type: object
      properties:
        contact_id:
          type: integer
          format: int64
    RestApplicationConfigurationModuleForms:
      type: object
      properties:
        spam_filters_enabled:
          type: boolean
    SetOfIds:
      required:
      - ids
      type: object
      properties:
        ids:
          type: array
          items:
            type: integer
            format: int64
    EmailSentCreate:
      required:
      - sent_to_address
      type: object
      properties:
        clicked_date:
          type: string
          format: date-time
        contact_id:
          type: integer
          format: int64
        headers:
          type: string
        html_content:
          type: string
          description: Base64 encoded HTML
        id:
          type: integer
          format: int64
        opened_date:
          type: string
          format: date-time
        original_provider:
          type: string
          description: Provider that sent the email case insensitive, must be in list
            [GOOGLE, INFUSIONSOFT].  If omitted gets mapped to UNKNOWN.
          enum:
          - UNKNOWN
          - INFUSIONSOFT
          - MICROSOFT
          - GOOGLE
        original_provider_id:
          type: string
          description: Provider id that sent the email, must be unique when combined
            with provider.  If omitted a UUID without dashes is autogenerated for
            the record.
        plain_content:
          type: string
          description: Base64 encoded text
        provider_source_id:
          type: string
          description: The email address of the synced email account that generated
            this message.
        received_date:
          type: string
          format: date-time
        sent_date:
          type: string
          format: date-time
        sent_from_address:
          type: string
        sent_from_reply_address:
          type: string
        sent_to_address:
          type: string
        sent_to_bcc_addresses:
          type: string
        sent_to_cc_addresses:
          type: string
        subject:
          type: string
    ProductList:
      type: object
      properties:
        count:
          type: integer
          format: int32
        next:
          type: string
        previous:
          type: string
        products:
          type: array
          items:
            $ref: '#/components/schemas/Product_'
        sync_token:
          type: string
    OrderItemTax:
      type: object
      properties:
        amount:
          type: number
          format: double
        id:
          type: integer
          format: int64
        name:
          type: string
        orderItemId:
          type: integer
          format: int64
        rate:
          type: number
          format: double
        taxTemplateId:
          type: integer
          format: int64
    Product_:
      type: object
      properties:
        id:
          type: integer
          format: int64
        product_desc:
          type: string
        product_name:
          type: string
        product_options:
          type: array
          items:
            $ref: '#/components/schemas/ProductOption'
        product_price:
          type: number
          format: double
        product_short_desc:
          type: string
        sku:
          type: string
        status:
          type: integer
          format: int32
        subscription_only:
          type: boolean
        subscription_plans:
          type: array
          items:
            $ref: '#/components/schemas/SubscriptionPlan_'
        url:
          type: string
    Relationship:
      type: object
      properties:
        id:
          type: integer
          format: int64
        linked_contact_id:
          type: integer
          format: int64
        relationship_type_id:
          type: integer
          format: int64
    OrderItem:
      type: object
      properties:
        billingCycle:
          type: integer
          format: int32
        cost:
          type: number
          format: double
        description:
          type: string
        discount:
          type: number
          format: double
        frequency:
          type: integer
          format: int32
        id:
          type: integer
          format: int64
        jobRecurringId:
          type: integer
          format: int64
        name:
          type: string
        notes:
          type: string
        numberOfPayments:
          type: integer
          format: int32
        orderItemTaxes:
          type: array
          items:
            $ref: '#/components/schemas/OrderItemTax'
        price:
          type: number
          format: double
        product:
          $ref: '#/components/schemas/Product_'
        quantity:
          type: integer
          format: int32
        recurringBilling:
          type: boolean
        specialAmount:
          type: number
          format: double
        specialId:
          type: integer
          format: int64
        specialPctOrAmt:
          type: integer
          format: int32
        type:
          type: string
    PhoneNumber:
      required:
      - field
      type: object
      properties:
        extension:
          type: string
        field:
          type: string
          enum:
          - PHONE1
          - PHONE2
          - PHONE3
          - PHONE4
          - PHONE5
        number:
          type: string
        type:
          type: string
    SubscriptionList:
      type: object
      properties:
        count:
          type: integer
          format: int32
        next:
          type: string
        previous:
          type: string
        subscriptions:
          type: array
          items:
            $ref: '#/components/schemas/Subscription'
    EmailSendRequestAttachment:
      type: object
      properties:
        file_data:
          type: string
          description: The content of the attachment, encoded in Base64
        file_name:
          type: string
          description: The filename of the attached file, including extension
    CountriesByCode:
      required:
      - countries
      type: object
      properties:
        countries:
          type: object
          additionalProperties:
            type: string
          description: A key-value pair of country code and country name.
    Tag:
      required:
      - id
      - name
      type: object
      properties:
        category:
          $ref: '#/components/schemas/TagCategory'
        description:
          type: string
          description: The tag description
        id:
          type: integer
          description: The id for the tag
          format: int64
        name:
          type: string
          description: The tag name
    AccountProfile:
      type: object
      properties:
        address:
          $ref: '#/components/schemas/ContactAddress'
        business_goals:
          type: array
          description: The goals of this business, ie. Grow Business, Convert more
            leads
          items:
            type: string
        business_primary_color:
          type: string
        business_secondary_color:
          type: string
        business_type:
          type: string
          description: The type of business
        currency_code:
          type: string
        email:
          type: string
        language_tag:
          type: string
        logo_url:
          type: string
        name:
          type: string
        phone:
          type: string
        phone_ext:
          type: string
        time_zone:
          type: string
        website:
          type: string
      # description: Information about the company that owns/uses this account
    RestApplicationConfigurationModuleAffiliateCommission:
      type: object
      properties:
        calculation_type:
          type: string
        levels:
          type: integer
          format: int32
        participant_types:
          type: string
    CustomFieldMetaData:
      type: object
      properties:
        field_name:
          type: string
        field_type:
          type: string
          enum:
          - Currency
          - Date
          - DateTime
          - DayOfWeek
          - Drilldown
          - Email
          - Month
          - ListBox
          - Name
          - WholeNumber
          - DecimalNumber
          - Percent
          - PhoneNumber
          - Radio
          - Dropdown
          - SocialSecurityNumber
          - State
          - Text
          - TextArea
          - User
          - UserListBox
          - Website
          - Year
          - YesNo
        id:
          type: integer
          format: int64
        label:
          type: string
        options:
          type: array
          items:
            $ref: '#/components/schemas/CustomFieldOption'
        record_type:
          type: string
          enum:
          - CONTACT
          - REFERRAL_PARTNER
          - OPPORTUNITY
          - TASK_NOTE_APPOINTMENT
          - COMPANY
          - ORDER
          - SUBSCRIPTION
    CustomFieldValue:
      type: object
      properties:
        content:
          type: object
          properties: {}
        id:
          type: integer
          format: int64
    EntryLongString:
      type: object
      properties:
        key:
          type: string
          enum:
          - SUCCESS
          - DUPLICATE
          - CONTACT_NOT_FOUND
          - TAG_ID_NOT_FOUND
          - FAILURE
          - NO_PERMISSION
    Company:
      type: object
      properties:
        address:
          $ref: '#/components/schemas/CompanyAddress'
        company_name:
          type: string
        custom_fields:
          type: array
          items:
            $ref: '#/components/schemas/CustomFieldValue'
        email_address:
          type: string
        email_opted_in:
          type: boolean
        email_status:
          type: string
          enum:
          - UnengagedMarketable
          - SingleOptIn
          - DoubleOptin
          - Confirmed
          - UnengagedNonMarketable
          - NonMarketable
          - Lockdown
          - Bounce
          - HardBounce
          - Manual
          - Admin
          - System
          - ListUnsubscribe
          - Feedback
          - Spam
          - Invalid
          - Deactivated
        fax_number:
          $ref: '#/components/schemas/CompanyFaxNumber'
        id:
          type: integer
          format: int64
        notes:
          type: string
        phone_number:
          $ref: '#/components/schemas/CompanyPhoneNumber'
        website:
          type: string
    Task:
      type: object
      properties:
        completed:
          type: boolean
        completion_date:
          type: string
        contact:
          $ref: '#/components/schemas/BasicContact'
        creation_date:
          type: string
        description:
          type: string
        due_date:
          type: string
        modification_date:
          type: string
        priority:
          type: integer
          format: int32
        remind_time:
          type: integer
          description: Value in minutes before start_date to show pop-up reminder.  Acceptable
            values are [5,10,15,30,60,120,240,480,1440,2880]
          format: int32
        title:
          type: string
        type:
          type: string
        url:
          type: string
        user_id:
          type: integer
          format: int64
    CompanyList:
      type: object
      properties:
        companies:
          type: array
          items:
            $ref: '#/components/schemas/Company'
        count:
          type: integer
          format: int32
        next:
          type: string
        previous:
          type: string
    EcommerceReportingShippingInformation:
      type: object
      properties:
        city:
          type: string
        company:
          type: string
        country:
          type: string
        first_name:
          type: string
        id:
          type: integer
          format: int64
        invoiceToCompany:
          type: boolean
        last_name:
          type: string
        middle_name:
          type: string
        phone:
          type: string
        state:
          type: string
        street1:
          type: string
        street2:
          type: string
        zip:
          type: string
    RestApplicationConfigurationModuleFulfillment:
      type: object
      properties:
        default_message_fields:
          type: string
        default_message_to:
          type: string
    CheckListItemDetails:
      type: object
      properties:
        description:
          type: string
        done_date:
          type: string
          format: date-time
        id:
          type: integer
          format: int64
        instance_id:
          type: integer
          format: int64
        item_order:
          type: integer
          format: int32
        required:
          type: boolean
    TaskList:
      type: object
      properties:
        count:
          type: integer
          format: int32
        next:
          type: string
        previous:
          type: string
        sync_token:
          type: string
        tasks:
          type: array
          items:
            $ref: '#/components/schemas/Task'
    CreateOrder:
      required:
      - contact_id
      - order_date
      - order_items
      - order_title
      - order_type
      type: object
      properties:
        contact_id:
          type: integer
          format: int64
        lead_affiliate_id:
          type: integer
          format: int64
        order_date:
          type: string
          format: date-time
        order_items:
          type: array
          items:
            $ref: '#/components/schemas/CreateOrderItem'
        order_title:
          type: string
        order_type:
          type: string
          enum:
          - Offline
          - Online
        promo_codes:
          type: array
          description: Uses multiple strings as promo codes. The corresponding discount
            will be applied to the order.
          items:
            type: string
        sales_affiliate_id:
          type: integer
          format: int64
        shipping_address:
          $ref: '#/components/schemas/AddressInformation'
    SubscriptionPlan_:
      type: object
      properties:
        active:
          type: boolean
        cycle:
          type: integer
          format: int32
        frequency:
          type: integer
          format: int32
        id:
          type: integer
          format: int64
        number_of_cycles:
          type: integer
          format: int32
        plan_price:
          type: number
          format: double
        subscription_plan_index:
          type: integer
          format: int32
        subscription_plan_name:
          type: string
        url:
          type: string
    CreateRestCustomField:
      required:
      - field_type
      - label
      type: object
      properties:
        field_type:
          type: string
          enum:
          - Currency
          - Date
          - DateTime
          - DayOfWeek
          - Drilldown
          - Email
          - Month
          - ListBox
          - Name
          - WholeNumber
          - DecimalNumber
          - Percent
          - PhoneNumber
          - Radio
          - Dropdown
          - SocialSecurityNumber
          - State
          - Text
          - TextArea
          - User
          - UserListBox
          - Website
          - Year
          - YesNo
        group_id:
          type: integer
          description: An optional tab group to place the field under in the interface.  If
            not specified, will default to the 'Custom Fields' tab.
          format: int64
        label:
          type: string
        options:
          type: array
          items:
            $ref: '#/components/schemas/CreateRestCustomFieldOption'
        user_group_id:
          type: integer
          description: An optional user group to choose from when selecting values
            for User or UserListBox fields.
          format: int64
    CreateSubscription:
      required:
      - contact_id
      type: object
      properties:
        allow_duplicate:
          type: boolean
          description: If true, it will disable the check to see if there is already
            an identical subscription for the contact. Default is false.
          example: false
        allow_tax:
          type: boolean
          description: Only works if the product the product subscription is for is
            taxable. Default is false.
          example: false
        auto_charge:
          type: boolean
          description: Defaults to true.
          example: false
        billing_amount:
          type: number
          description: Must be 0 or greater. Default is the price in the product subscription.
          format: double
        contact_id:
          type: integer
          format: int64
        credit_card_id:
          type: integer
          description: Default is the contact's most recently used card, if auto charge
            is true. Default is 0 otherwise.
          format: int64
        first_bill_date:
          type: string
          description: The first day the subscription will bill, in EST. Must not
            be in the past. Default is today.
          format: date
        payment_gateway_id:
          type: integer
          description: Default is the app's default merchant.
          format: int64
        quantity:
          type: integer
          description: Must be greater than 0. Default is 1.
          format: int32
        sale_affiliate_id:
          type: integer
          format: int64
        subscription_plan_id:
          type: integer
          description: Id of the product subscription.
          format: int64
    RestEmailAddress:
      required:
      - email
      - opted_in
      - status
      type: object
      properties:
        email:
          type: string
        opted_in:
          type: boolean
        status:
          type: string
          enum:
          - Unengaged Marketable
          - Unconfirmed
          - Confirmed (Legacy)
          - Confirmed
          - Unengaged NonMarketable
          - Non-marketable
          - Lockdown
          - Soft Bounce
          - Hard Bounce
          - Opt-Out
          - 'Opt-Out: Admin'
          - 'Opt-Out: System'
          - List Unsubscribe
          - Provided Feedback
          - Reported Spam
          - Invalid Email
          - Deactivated/Delinquent Mailbox
    OpportunityContact:
      required:
      - id
      type: object
      properties:
        company_name:
          type: string
        email:
          type: string
        first_name:
          type: string
        id:
          type: integer
          format: int64
        job_title:
          type: string
        last_name:
          type: string
        phone_number:
          type: string
    RestApplicationConfigurationModuleTemplate:
      type: object
      properties:
        default_country_code:
          type: integer
          format: int32
        default_user_id:
          type: integer
          format: int64
    CategoryReference:
      required:
      - id
      type: object
      properties:
        id:
          type: integer
          description: The id for the tag category
          format: int64
    RestHook:
      type: object
      properties:
        eventKey:
          type: string
        hookUrl:
          type: string
        key:
          type: string
        status:
          type: string
          enum:
          - Unverified
          - Verified
          - Inactive
    RestApplicationConfigurationModuleEMail:
      type: object
      properties:
        append_contact_key_to_links:
          type: boolean
        default_opt_in_link:
          type: string
        default_opt_out_link:
          type: string
        hide_emails_to_and_from_domains:
          type: string
        whitelisted_domains:
          type: string
    ProductOptionValue:
      type: object
      properties:
        id:
          type: integer
          format: int64
        index:
          type: integer
          format: int64
        is_default:
          type: boolean
        label:
          type: string
        price_adjustment:
          type: number
          format: double
        sku:
          type: string
    FullContact:
      type: object
      properties:
        ScoreValue:
          type: string
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/ContactAddress'
        anniversary:
          type: string
          format: date-time
        birthday:
          type: string
          format: date-time
        company:
          $ref: '#/components/schemas/CompanyReference'
        company_name:
          type: string
        contact_type:
          type: string
        custom_fields:
          type: array
          items:
            $ref: '#/components/schemas/CustomFieldValue'
        date_created:
          type: string
          format: date-time
        email_addresses:
          type: array
          items:
            $ref: '#/components/schemas/EmailAddress'
        email_opted_in:
          type: boolean
        email_status:
          type: string
          enum:
          - UnengagedMarketable
          - SingleOptIn
          - DoubleOptin
          - Confirmed
          - UnengagedNonMarketable
          - NonMarketable
          - Lockdown
          - Bounce
          - HardBounce
          - Manual
          - Admin
          - System
          - ListUnsubscribe
          - Feedback
          - Spam
          - Invalid
          - Deactivated
        family_name:
          type: string
        fax_numbers:
          type: array
          items:
            $ref: '#/components/schemas/FaxNumber'
        given_name:
          type: string
        id:
          type: integer
          format: int64
        job_title:
          type: string
        last_updated:
          type: string
          format: date-time
        lead_source_id:
          type: integer
          format: int64
        middle_name:
          type: string
        opt_in_reason:
          type: string
        origin:
          $ref: '#/components/schemas/ContactOrigin'
        owner_id:
          type: integer
          format: int64
        phone_numbers:
          type: array
          items:
            $ref: '#/components/schemas/PhoneNumber'
        preferred_locale:
          type: string
          example: en_US
        preferred_name:
          type: string
        prefix:
          type: string
        relationships:
          type: array
          items:
            $ref: '#/components/schemas/Relationship'
        social_accounts:
          type: array
          items:
            $ref: '#/components/schemas/SocialAccount'
        source_type:
          type: string
          enum:
          - APPOINTMENT
          - FORMAPIHOSTED
          - FORMAPIINTERNAL
          - WEBFORM
          - INTERNALFORM
          - LANDINGPAGE
          - IMPORT
          - MANUAL
          - API
          - OTHER
          - UNKNOWN
        spouse_name:
          type: string
        suffix:
          type: string
        tag_ids:
          type: array
          items:
            type: integer
            format: int64
        time_zone:
          type: string
        website:
          type: string
    RestApplicationConfigurationModuleApplication:
      type: object
      properties:
        company:
          $ref: '#/components/schemas/RestApplicationConfigurationModuleApplicationCompany'
        default_view_locale:
          type: string
        features_enabled:
          $ref: '#/components/schemas/RestApplicationConfigurationModuleApplicationFeaturesEnabled'
        time_zone:
          type: string
    CreateContactOrigin:
      required:
      - ip_address
      type: object
      properties:
        ip_address:
          type: string
    CreateOrPatchContact:
      type: object
      properties:
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/ContactAddress'
        anniversary:
          type: string
          format: date-time
        birthday:
          type: string
          format: date-time
        company:
          $ref: '#/components/schemas/RequestCompanyReference'
        contact_type:
          type: string
        custom_fields:
          type: array
          items:
            $ref: '#/components/schemas/CustomFieldValue'
        email_addresses:
          type: array
          items:
            $ref: '#/components/schemas/EmailAddress'
        family_name:
          type: string
        fax_numbers:
          type: array
          items:
            $ref: '#/components/schemas/FaxNumber'
        given_name:
          type: string
        job_title:
          type: string
        lead_source_id:
          type: integer
          format: int64
        middle_name:
          type: string
        opt_in_reason:
          type: string
        origin:
          $ref: '#/components/schemas/CreateContactOrigin'
        owner_id:
          type: integer
          format: int64
        phone_numbers:
          type: array
          items:
            $ref: '#/components/schemas/PhoneNumber'
        preferred_locale:
          type: string
          example: en_US
        preferred_name:
          type: string
        prefix:
          type: string
        social_accounts:
          type: array
          items:
            $ref: '#/components/schemas/SocialAccount'
        source_type:
          type: string
          enum:
          - APPOINTMENT
          - FORMAPIHOSTED
          - FORMAPIINTERNAL
          - WEBFORM
          - INTERNALFORM
          - LANDINGPAGE
          - IMPORT
          - MANUAL
          - API
          - OTHER
          - UNKNOWN
        spouse_name:
          type: string
        suffix:
          type: string
        time_zone:
          type: string
        website:
          type: string
    OpportunityList:
      type: object
      properties:
        count:
          type: integer
          format: int32
        next:
          type: string
        opportunities:
          type: array
          items:
            $ref: '#/components/schemas/Opportunity'
        previous:
          type: string
    Order:
      type: object
      properties:
        contact:
          $ref: '#/components/schemas/EcommerceReportingOrderContactDetails'
        creation_date:
          type: string
        id:
          type: integer
          format: int64
        lead_affiliate_id:
          type: integer
          format: int64
        modification_date:
          type: string
        notes:
          type: string
        order_date:
          type: string
        order_items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
        payment_plan:
          $ref: '#/components/schemas/PaymentPlan'
        refund_total:
          type: number
          format: double
        sales_affiliate_id:
          type: integer
          format: int64
        shipping_information:
          $ref: '#/components/schemas/AddressInformation'
        status:
          type: string
        title:
          type: string
        total:
          type: number
          format: double
        total_due:
          type: number
          format: double
        total_paid:
          type: number
          format: double
    GoalEventResultDTO:
      type: object
      properties:
        campaign_id:
          type: integer
          format: int64
        goal_id:
          type: integer
          format: int64
        message:
          type: string
        success:
          type: boolean
    FileList:
      type: object
      properties:
        count:
          type: integer
          format: int32
        files:
          type: array
          items:
            $ref: '#/components/schemas/FileDescriptor'
        next:
          type: string
        previous:
          type: string
    Setting:
      type: object
      properties:
        value:
          type: string
    AffiliateCommission:
      type: object
      properties:
        amount_earned:
          type: number
          format: float
        contact_first_name:
          type: string
        contact_id:
          type: integer
          format: int64
        contact_last_name:
          type: string
        date_earned:
          type: string
          format: date-time
        description:
          type: string
        invoice_id:
          type: integer
          format: int64
        product_name:
          type: string
        sales_affiliate_id:
          type: integer
          format: int64
        sold_by_first_name:
          type: string
        sold_by_last_name:
          type: string
    Sequence:
      type: object
      properties:
        active_contact_count:
          type: integer
          format: int32
        active_contact_count_completed:
          type: integer
          format: int32
        historical_contact_count:
          $ref: '#/components/schemas/HistoricalCounts'
        id:
          type: integer
          format: int64
        name:
          type: string
        paths:
          type: array
          items:
            $ref: '#/components/schemas/SequencePath'
    TransactionList:
      type: object
      properties:
        count:
          type: integer
          format: int32
        next:
          type: string
        previous:
          type: string
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/EcommerceReportingTransaction'
    AffiliateClawbackList:
      type: object
      properties:
        clawbacks:
          type: array
          items:
            $ref: '#/components/schemas/RestAffiliateClawback'
        count:
          type: integer
          format: int32
        next:
          type: string
        previous:
          type: string
    UpsertContact:
      type: object
      properties:
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/ContactAddress'
        anniversary:
          type: string
          format: date-time
        birthday:
          type: string
          format: date-time
        company:
          $ref: '#/components/schemas/RequestCompanyReference'
        contact_type:
          type: string
        custom_fields:
          type: array
          items:
            $ref: '#/components/schemas/CustomFieldValue'
        duplicate_option:
          type: string
          enum:
          - Email
          - EmailAndName
        email_addresses:
          type: array
          items:
            $ref: '#/components/schemas/EmailAddress'
        family_name:
          type: string
        fax_numbers:
          type: array
          items:
            $ref: '#/components/schemas/FaxNumber'
        given_name:
          type: string
        job_title:
          type: string
        lead_source_id:
          type: integer
          format: int64
        middle_name:
          type: string
        opt_in_reason:
          type: string
        origin:
          $ref: '#/components/schemas/CreateContactOrigin'
        owner_id:
          type: integer
          format: int64
        phone_numbers:
          type: array
          items:
            $ref: '#/components/schemas/PhoneNumber'
        preferred_locale:
          type: string
          example: en_US
        preferred_name:
          type: string
        prefix:
          type: string
        social_accounts:
          type: array
          items:
            $ref: '#/components/schemas/SocialAccount'
        source_type:
          type: string
          enum:
          - APPOINTMENT
          - FORMAPIHOSTED
          - FORMAPIINTERNAL
          - WEBFORM
          - INTERNALFORM
          - LANDINGPAGE
          - IMPORT
          - MANUAL
          - API
          - OTHER
          - UNKNOWN
        spouse_name:
          type: string
        suffix:
          type: string
        time_zone:
          type: string
        website:
          type: string
    EmailSendRequest:
      required:
      - contacts
      - subject
      - user_id
      type: object
      properties:
        address_field:
          type: string
          description: Email field of each Contact record to address the email to,
            such as 'Email', 'EmailAddress2', 'EmailAddress3' or '_CustomFieldName',
            defaulting to the contact's primary email
        attachments:
          type: array
          description: Attachments to be sent with each copy of the email, maximum
            of 10 with size of 1MB each
          items:
            $ref: '#/components/schemas/EmailSendRequestAttachment'
        contacts:
          type: array
          description: An array of Contact Ids to receive the email
          items:
            type: integer
            format: int64
        html_content:
          type: string
          description: The HTML-formatted content of the email, encoded in Base64
        plain_content:
          type: string
          description: The plain-text content of the email, encoded in Base64
        subject:
          type: string
          description: The subject line of the email
        user_id:
          type: integer
          description: The infusionsoft user to send the email on behalf of
          format: int64
    Campaign:
      type: object
      properties:
        active_contact_count:
          type: integer
          format: int32
        completed_contact_count:
          type: integer
          format: int32
        created_by_global_id:
          type: integer
          format: int64
        date_created:
          type: string
          format: date-time
        error_message:
          type: string
        goals:
          type: array
          items:
            $ref: '#/components/schemas/Goal'
        id:
          type: integer
          format: int64
        locked:
          type: boolean
        name:
          type: string
        published_date:
          type: string
          format: date-time
        published_status:
          type: boolean
        published_time_zone:
          type: string
        sequences:
          type: array
          items:
            $ref: '#/components/schemas/Sequence'
        time_zone:
          type: string
    RestApplicationConfigurationModuleContactAddressLabels:
      type: object
      properties:
        line_1:
          type: string
        line_2:
          type: string
        line_3:
          type: string
    RestApplicationConfiguration:
      type: object
      properties:
        affiliate:
          $ref: '#/components/schemas/RestApplicationConfigurationModuleAffiliate'
        application:
          $ref: '#/components/schemas/RestApplicationConfigurationModuleApplication'
        appointment:
          $ref: '#/components/schemas/RestApplicationConfigurationModuleAppointment'
        contact:
          $ref: '#/components/schemas/RestApplicationConfigurationModuleContact'
        ecommerce:
          $ref: '#/components/schemas/RestApplicationConfigurationModuleECommerce'
        email:
          $ref: '#/components/schemas/RestApplicationConfigurationModuleEMail'
        forms:
          $ref: '#/components/schemas/RestApplicationConfigurationModuleForms'
        fulfillment:
          $ref: '#/components/schemas/RestApplicationConfigurationModuleFulfillment'
        invoice:
          $ref: '#/components/schemas/RestApplicationConfigurationModuleInvoice'
        note:
          $ref: '#/components/schemas/RestApplicationConfigurationModuleNote'
        opportunity:
          $ref: '#/components/schemas/RestApplicationConfigurationModuleOpportunity'
        task:
          $ref: '#/components/schemas/RestApplicationConfigurationModuleTask'
        template:
          $ref: '#/components/schemas/RestApplicationConfigurationModuleTemplate'
    BasicContact:
      type: object
      properties:
        email:
          type: string
        first_name:
          type: string
        id:
          type: integer
          format: int64
        last_name:
          type: string
    PaymentPlan:
      required:
      - days_between_payments
      - number_of_payments
      - plan_start_date
      type: object
      properties:
        auto_charge:
          type: boolean
        credit_card_id:
          type: integer
          format: int64
        days_between_payments:
          type: integer
          format: int32
        initial_payment_amount:
          type: number
          format: double
        initial_payment_date:
          type: string
          format: date
        number_of_payments:
          type: integer
          format: int32
        payment_gateway:
          $ref: '#/components/schemas/PaymentGateway'
        plan_start_date:
          type: string
          format: date
    Throwable:
      type: object
      properties:
        cause:
          $ref: '#/components/schemas/Throwable'
        localizedMessage:
          type: string
        message:
          type: string
        stackTrace:
          type: array
          items:
            $ref: '#/components/schemas/StackTraceElement'
        suppressed:
          type: array
          items:
            $ref: '#/components/schemas/Throwable'
    UserInfoDTO:
      required:
      - email
      - family_name
      - given_name
      - global_user_id
      - infusionsoft_id
      - sub
      type: object
      properties:
        email:
          type: string
        family_name:
          type: string
        given_name:
          type: string
        global_user_id:
          type: integer
          format: int64
        infusionsoft_id:
          type: string
        middle_name:
          type: string
        preferred_name:
          type: string
        sub:
          type: string
    AffiliateProgramList:
      type: object
      properties:
        count:
          type: integer
          format: int32
        next:
          type: string
        previous:
          type: string
        programs:
          type: array
          items:
            $ref: '#/components/schemas/AffiliateProgram'
    SimpleTag:
      type: object
      properties:
        category:
          type: string
        id:
          type: integer
          format: int64
        name:
          type: string
    RestApplicationConfigurationModuleInvoice:
      type: object
      properties:
        tax_label:
          type: string
    CreateTag:
      required:
      - name
      type: object
      properties:
        category:
          $ref: '#/components/schemas/CategoryReference'
        description:
          type: string
          description: The tag description
        name:
          type: string
          description: The tag name
    SimpleUser:
      type: object
      properties:
        first_name:
          type: string
        id:
          type: integer
          format: int64
        last_name:
          type: string
    TaggedContactList:
      type: object
      properties:
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/TaggedContact'
        count:
          type: integer
          format: int32
        next:
          type: string
        previous:
          type: string
    CompanyReference:
      type: object
      properties:
        company_name:
          type: string
        id:
          type: integer
          format: int64
    NoteList:
      type: object
      properties:
        count:
          type: integer
          format: int32
        next:
          type: string
        notes:
          type: array
          items:
            $ref: '#/components/schemas/Note'
        previous:
          type: string
    AffiliateSummary:
      type: object
      properties:
        affiliate_id:
          type: integer
          format: int64
        amount_earned:
          type: number
          format: double
        balance:
          type: number
          format: double
        clawbacks:
          type: number
          format: double
    PaymentResult:
      type: object
      properties:
        id:
          type: integer
          format: int64
        invoice_id:
          type: integer
          format: int64
        payment_amount:
          type: number
          format: double
        payment_status:
          type: string
        transaction_id:
          type: integer
          format: int64
    RestHookRequest:
      type: object
      properties:
        eventKey:
          type: string
        hookUrl:
          type: string
    EmailSentCreateList:
      type: object
      properties:
        emails:
          type: array
          items:
            $ref: '#/components/schemas/EmailSentCreate'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/EmailSentCreateError'
    RedirectList:
      type: object
      properties:
        count:
          type: integer
          format: int32
        next:
          type: string
        previous:
          type: string
        redirects:
          type: array
          items:
            $ref: '#/components/schemas/AffiliateRedirect'
    CompanyAddress:
      type: object
      properties:
        country_code:
          type: string
        line1:
          type: string
        line2:
          type: string
        locality:
          type: string
        region:
          type: string
        zip_code:
          type: string
        zip_four:
          type: string
    CreateProductSubscription:
      required:
      - cycle_type
      - plan_price
      type: object
      properties:
        active:
          type: boolean
        cycle_type:
          type: string
          enum:
          - YEAR
          - MONTH
          - WEEK
          - DAY
        frequency:
          type: integer
          format: int32
        number_of_cycles:
          type: integer
          format: int32
        plan_price:
          type: number
          format: double
        subscription_plan_index:
          type: integer
          format: int32
    RestApplicationConfigurationModuleNote:
      type: object
      properties:
        appointment_types:
          type: string
        share_opportunity_with_related_user:
          type: boolean
    RestApplicationConfigurationModuleContact:
      type: object
      properties:
        address_labels:
          $ref: '#/components/schemas/RestApplicationConfigurationModuleContactAddressLabels'
        contact_types:
          type: string
        default_new_contact_form:
          type: string
        disable_contact_edit_in_client_login:
          type: boolean
        fax_types:
          type: string
        phone_types:
          type: string
        suffix_types:
          type: string
        title_types:
          type: string
    RestApplicationConfigurationModuleApplicationFeaturesEnabled:
      type: object
      properties:
        marketing:
          type: boolean
    RestApplicationConfigurationModuleAppointment:
      type: object
      properties:
        appointment_types:
          type: string
        share_opportunity_with_related_user:
          type: boolean
    EcommerceReportingOrderItem:
      type: object
      properties:
        cost:
          type: number
          format: double
        description:
          type: string
        discount:
          type: number
          format: double
        id:
          type: integer
          format: int64
        jobRecurringId:
          type: integer
          format: int64
        name:
          type: string
        notes:
          type: string
        price:
          type: number
          format: double
        product:
          $ref: '#/components/schemas/EcommerceReportingSimpleProduct'
        quantity:
          type: integer
          format: int32
        specialAmount:
          type: number
          format: double
        specialId:
          type: integer
          format: int64
        specialPctOrAmt:
          type: integer
          format: int32
        subscriptionPlan:
          $ref: '#/components/schemas/SubscriptionPlan'
        type:
          type: string
    CustomFieldOption:
      type: object
      properties:
        id:
          type: string
        label:
          type: string
        options:
          type: array
          items:
            $ref: '#/components/schemas/CustomFieldOption'
    PaymentGateway:
      type: object
      properties:
        merchant_account_id:
          type: integer
          format: int64
        use_default:
          type: boolean
    Opportunity:
      required:
      - contact
      - opportunity_title
      - stage
      type: object
      properties:
        affiliate_id:
          type: integer
          format: int64
        contact:
          $ref: '#/components/schemas/OpportunityContact'
        custom_fields:
          type: array
          items:
            $ref: '#/components/schemas/CustomFieldValue'
        date_created:
          type: string
          format: date-time
        estimated_close_date:
          type: string
          format: date-time
        id:
          type: integer
          format: int64
        include_in_forecast:
          type: integer
          format: int32
        last_updated:
          type: string
          format: date-time
        next_action_date:
          type: string
          format: date-time
        next_action_notes:
          type: string
        opportunity_notes:
          type: string
        opportunity_title:
          type: string
        projected_revenue_high:
          type: number
          format: double
        projected_revenue_low:
          type: number
          format: double
        stage:
          $ref: '#/components/schemas/SimpleOpportunityStage'
        user:
          $ref: '#/components/schemas/SimpleUser'
    AppointmentList:
      type: object
      properties:
        appointments:
          type: array
          items:
            $ref: '#/components/schemas/Appointment'
        count:
          type: integer
          format: int32
        next:
          type: string
        previous:
          type: string
        sync_token:
          type: string
    TagCategory:
      required:
      - id
      - name
      type: object
      properties:
        description:
          type: string
          description: The category description
        id:
          type: integer
          description: The id for the tag category
          format: int64
        name:
          type: string
          description: The category name
    FileUpload:
      required:
      - contact_id
      - file_association
      - file_data
      - file_name
      - is_public
      type: object
      properties:
        file_name:
          type: string
        public:
          type: boolean
        file_data:
          type: string
        contact_id:
          type: integer
          format: int64
        is_public:
          type: boolean
        file_association:
          type: string
          enum:
          - CONTACT
          - USER
          - COMPANY
    ProductOption:
      type: object
      properties:
        allow_spaces:
          type: boolean
        can_contain_character:
          type: boolean
        can_contain_number:
          type: boolean
        can_end_with_character:
          type: boolean
        can_end_with_number:
          type: boolean
        can_start_with_character:
          type: boolean
        can_start_with_number:
          type: boolean
        display_index:
          type: integer
          format: int32
        id:
          type: integer
          format: int64
        label:
          type: string
        max_chars:
          type: integer
          format: int32
        min_chars:
          type: integer
          format: int32
        name:
          type: string
        required:
          type: boolean
        text_message:
          type: string
        type:
          type: string
          enum:
          - FixedList
          - Variable
        values:
          type: array
          items:
            $ref: '#/components/schemas/ProductOptionValue'
    TaggedCompany:
      type: object
      properties:
        company:
          $ref: '#/components/schemas/BasicCompany'
        date_applied:
          type: string
          format: date-time
    FileInformation:
      type: object
      properties:
        file_data:
          type: string
        file_descriptor:
          $ref: '#/components/schemas/FileDescriptor'
    NoteUser:
      type: object
      properties:
        family_name:
          type: string
        given_name:
          type: string
        user_id:
          type: integer
          format: int64
    CompanyFaxNumber:
      type: object
      properties:
        number:
          type: string
        type:
          type: string
    RestApplicationConfigurationModuleECommerce:
      type: object
      properties:
        credit_card_types:
          type: string
        currency:
          type: string
        default_charge_max_retry_attempts:
          type: integer
          format: int32
        default_country:
          type: string
        default_merchant:
          type: string
        default_number_of_days_between_charge_attempts:
          type: integer
          format: int32
        default_tax:
          type: string
        default_to_auto_charge:
          type: boolean
        merchant_account_max_retry_attempts:
          type: integer
          format: int32
        payment_types:
          type: string
        promo_codes:
          type: string
        track_cost_per_unit:
          type: boolean
        track_inventory:
          type: boolean
    CreatePayment:
      type: object
      properties:
        apply_to_commissions:
          type: boolean
        charge_now:
          type: boolean
        credit_card_id:
          type: integer
          format: int64
        date:
          type: string
          description: Used when charge_now:false or inserting historical data. ex
            `2017-01-01T22:17:59.039Z`
          format: date-time
        notes:
          type: string
        payment_amount:
          type: string
        payment_gateway_id:
          type: string
        payment_method_type:
          type: string
          enum:
          - CREDIT_CARD
          - CASH
          - CHECK
    ProductSubscription:
      required:
      - cycle_type
      - id
      - plan_price
      type: object
      properties:
        active:
          type: boolean
        cycle_type:
          type: string
          enum:
          - YEAR
          - MONTH
          - WEEK
          - DAY
        frequency:
          type: integer
          format: int32
        id:
          type: integer
          format: int64
        number_of_cycles:
          type: integer
          format: int32
        plan_price:
          type: number
          format: double
        subscription_plan_index:
          type: integer
          format: int32
        subscription_plan_name:
          type: string
        url:
          type: string
    Error:
      type: object
      properties:
        cause:
          $ref: '#/components/schemas/Throwable'
        localizedMessage:
          type: string
        message:
          type: string
        stackTrace:
          type: array
          items:
            $ref: '#/components/schemas/StackTraceElement'
        suppressed:
          type: array
          items:
            $ref: '#/components/schemas/Throwable'
    SocialAccount:
      type: object
      properties:
        name:
          type: string
        type:
          type: string
          enum:
          - Facebook
          - Twitter
          - LinkedIn
          - Instagram
          - Snapchat
          - YouTube
          - Pinterest
    EmailSentQueryResultList:
      type: object
      properties:
        count:
          type: integer
          format: int32
        emails:
          type: array
          items:
            $ref: '#/components/schemas/EmailSentQueryResult'
        next:
          type: string
        previous:
          type: string
    AffiliateSummaryList:
      type: object
      properties:
        count:
          type: integer
          format: int32
        summaries:
          type: array
          items:
            $ref: '#/components/schemas/AffiliateSummary'
    CreditCard:
      type: object
      properties:
        address:
          $ref: '#/components/schemas/ContactAddress'
        card_number:
          type: string
        card_type:
          type: string
        email_address:
          type: string
        expiration_month:
          type: string
        expiration_year:
          type: string
        maestro_issue_number:
          type: string
        maestro_start_date_month:
          type: string
        maestro_start_date_year:
          type: string
        name_on_card:
          type: string
        verification_code:
          type: string
    FileDescriptor:
      required:
      - id
      type: object
      properties:
        category:
          type: string
          enum:
          - Attachments
          - Cart
          - Documents
          - Hidden
          - Invoice
          - Logo
          - Tickets
          - WebForm
          - Funnel
        contact_id:
          type: integer
          format: int64
        created_by:
          type: integer
          format: int64
        date_created:
          type: string
          format: date-time
        download_url:
          type: string
        file_box_type:
          type: string
          enum:
          - Application
          - Image
          - Fax
          - Attachment
          - Ticket
          - Contact
          - DigitalProduct
          - Import
          - Hidden
          - WebForm
          - StyledCart
          - ReSampledImage
          - TemplateThumbnail
          - Funnel
          - LogoThumbnail
        file_name:
          type: string
        file_size:
          type: integer
          format: int64
        id:
          type: integer
          format: int64
        last_updated:
          type: string
          format: date-time
        public:
          type: boolean
        remote_file_key:
          type: string
    RestAffiliatePayment:
      type: object
      properties:
        amount:
          type: number
          format: double
        date:
          type: string
        id:
          type: integer
          format: int64
        notes:
          type: string
        type:
          type: string
    RequestNote:
      required:
      - contact_id
      type: object
      properties:
        body:
          type: string
        contact_id:
          type: integer
          format: int64
        title:
          type: string
        type:
          type: string
          enum:
          - Appointment
          - Call
          - Email
          - Fax
          - Letter
          - Other
        user_id:
          type: integer
          format: int64
    RestMerchantAccountResponse:
      type: object
      properties:
        default_merchant_account:
          type: integer
          format: int64
        merchant_accounts:
          type: array
          items:
            $ref: '#/components/schemas/Merchant'
    EcommerceReportingOrder:
      type: object
      properties:
        allow_payment:
          type: boolean
        allow_paypal:
          type: boolean
        contact:
          $ref: '#/components/schemas/EcommerceReportingOrderContactDetails'
        creation_date:
          type: string
        id:
          type: integer
          format: int64
        lead_affiliate_id:
          type: integer
          format: int64
        modification_date:
          type: string
        notes:
          type: string
        order_date:
          type: string
        order_items:
          type: array
          items:
            $ref: '#/components/schemas/EcommerceReportingOrderItem'
        payment_plan:
          $ref: '#/components/schemas/EcommerceReportingPaymentPlan'
        recurring:
          type: boolean
        refund_total:
          type: number
          format: double
        sales_affiliate_id:
          type: integer
          format: int64
        shipping_information:
          $ref: '#/components/schemas/EcommerceReportingShippingInformation'
        source_type:
          type: string
          enum:
          - INVOICE
          - API
          - CHECKOUT_FORM
          - MANUAL_PAYMENT
          - UNKNOWN
          - QBO_SYNC
        status:
          type: string
        terms:
          type: string
        title:
          type: string
        total:
          type: number
          format: double
        total_due:
          type: number
          format: double
        total_paid:
          type: number
          format: double
    RestApplicationConfigurationModuleOpportunityStatesLoss:
      type: object
      properties:
        reasons:
          type: string
        stage:
          type: string
    TagId:
      type: object
      properties:
        tagIds:
          type: array
          items:
            type: integer
            format: int64
    BasicCompany:
      type: object
      properties:
        company_name:
          type: string
        email:
          type: string
        id:
          type: integer
          format: int64
    StageDetails:
      type: object
      properties:
        check_list_items:
          type: array
          items:
            $ref: '#/components/schemas/CheckListItemDetails'
        probability:
          type: integer
          format: int32
        stage_order:
          type: integer
          format: int32
        target_num_days:
          type: integer
          format: int32
    OrderList:
      type: object
      properties:
        count:
          type: integer
          format: int32
        next:
          type: string
        orders:
          type: array
          items:
            $ref: '#/components/schemas/EcommerceReportingOrder'
        previous:
          type: string
    RestApplicationConfigurationModuleOpportunityStates:
      type: object
      properties:
        active:
          $ref: '#/components/schemas/RestApplicationConfigurationModuleOpportunityStatesActive'
        loss:
          $ref: '#/components/schemas/RestApplicationConfigurationModuleOpportunityStatesLoss'
        win:
          $ref: '#/components/schemas/RestApplicationConfigurationModuleOpportunityStatesWin'
    RestApplicationConfigurationModuleOpportunity:
      type: object
      properties:
        default_stage:
          type: string
        states:
          $ref: '#/components/schemas/RestApplicationConfigurationModuleOpportunityStates'
    CampaignList:
      type: object
      properties:
        campaigns:
          type: array
          items:
            $ref: '#/components/schemas/Campaign'
        count:
          type: integer
          format: int32
        next:
          type: string
        previous:
          type: string
    EmailSentQueryResult:
      type: object
      properties:
        clicked_date:
          type: string
          format: date-time
        contact_id:
          type: integer
          format: int64
        headers:
          type: string
        id:
          type: integer
          format: int64
        opened_date:
          type: string
          format: date-time
        original_provider:
          type: string
          enum:
          - UNKNOWN
          - INFUSIONSOFT
          - MICROSOFT
          - GOOGLE
        original_provider_id:
          type: string
        received_date:
          type: string
          format: date-time
        sent_date:
          type: string
          format: date-time
        sent_from_address:
          type: string
        sent_from_reply_address:
          type: string
        sent_to_address:
          type: string
        sent_to_bcc_addresses:
          type: string
        sent_to_cc_addresses:
          type: string
        subject:
          type: string
  securitySchemes:
    oauth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.infusionsoft.com/app/oauth/authorize
          tokenUrl: https://api.infusionsoft.com/token
          scopes: {}
