openapi: 3.0.1
info:
  x-ballerina-display:
    label: PowerTools Developer Data
    iconPath: "icon.png"
  title: PowerTools Developer
  description: >
    This is a generated connector for [Apptigent PowerTools Developer API v2021.1.01](https://portal.apptigent.com/node/612) OpenAPI specification.

    'Apptigent PowerTools Developer Edition is a powerful suite of API endpoints for custom applications running on any stack. 

    Manipulate text, modify collections, format dates and times, convert currency, perform advanced mathematical calculations, shorten URL's, encode strings, convert text to speech, translate content into multiple languages, process images, and more. 

    PowerTools is the ultimate developer toolkit.'

    This connector provides the capability for data conversion.
  contact:
    name: Customer Support
    url: 'https://www.apptigent.com/help/'
    email: support@apptigent.com
  version: 2021.1.01
  x-ibm-name: powertools-developer
  x-ballerina-init-description: >
    The connector initialization requires setting the API credentials. 
  
    Please create an [Apptigent account](https://portal.apptigent.com/user/register) and obtain tokens following [this guide](https://portal.apptigent.com/start).
servers:
  - url: 'https://connect.apptigent.com/api/utilities'
security:
  - apiKeyHeader: []
tags:
  - name: Data
    description: Data conversion operations.
paths:
  /JSONtoHTML:
    post:
      tags:
        - Data
      summary: Data - JSON to HTML Table
      description: Convert a JSON array to an HTML table
      operationId: JsonToHtml
      requestBody:
        description: Input json conversion parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/inputJsonConversionHTML'
        required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/outputString'
        '400':
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/outputString'
      x-codegen-request-body-name: jsonConversionHTML
  /JSONtoCSV:
    post:
      tags:
        - Data
      summary: Data - JSON to CSV
      description: Convert a JSON array to CSV string
      operationId: JsonToCsv
      requestBody:
        description: Input json conversion parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/inputJsonConversionCSV'
        required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/outputString'
        '400':
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/outputString'
      x-codegen-request-body-name: jsonConversionCSV
  /JSONtoXML:
    post:
      tags:
        - Data
      summary: Data - JSON to XML
      description: Convert a JSON object to an XML string
      operationId: JsonToXml
      requestBody:
        description: Input json conversion parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/inputJsonConversionXML'
        required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/outputString'
        '400':
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/outputString'
      x-codegen-request-body-name: jsonConversionXML
  /CSVtoJSON:
    post:
      tags:
        - Data
      summary: Data - CSV to JSON
      description: Convert a CSV string to a JSON array
      operationId: CsvToJson
      requestBody:
        description: Input CSV conversion parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/inputCsvConversionJSON'
        required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/outputString'
        '400':
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/outputString'
      x-codegen-request-body-name: csvConversionJSON
  /XMLtoJSON:
    post:
      tags:
        - Data
      summary: Data - XML to JSON
      description: Convert an XML string to a JSON object
      operationId: XmlToJson
      requestBody:
        description: Input XML conversion parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/inputXmlConversionJSON'
        required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/outputString'
        '400':
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/outputString'
      x-codegen-request-body-name: xmlConversionJSON
  /QueryJSON:
    post:
      tags:
        - Data
      summary: Data - Query JSON
      description: Query a JSON object using a JSONPath expression
      operationId: QueryJson
      requestBody:
        description: Input data query parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/inputDataQuery'
        required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/outputString'
        '400':
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/outputString'
      x-codegen-request-body-name: inputDataQuery
  /QueryXML:
    post:
      tags:
        - Data
      summary: Data - Query XML
      description: Query an XML string using an XPath expression
      operationId: QueryXml
      requestBody:
        description: Input data query parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/inputDataQuery'
        required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/outputString'
        '400':
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/outputString'
      x-codegen-request-body-name: inputDataQuery
components:
  schemas:
    inputCollectionSearch:
      required:
        - input
        - match
      type: object
      properties:
        input:
          type: array
          description: Collection of strings to search
          items:
            type: string
          x-ms-summary: Values
        match:
          type: string
          description: Text to match
          x-ms-summary: Text
        trim:
          type: string
          description: Trim white space from comparison string
          x-ms-summary: Trim
        ignorecase:
          type: string
          description: Ignore case when performing comparison
          x-ms-summary: Ignore Case
      example:
        input:
          - the
          - brown
          - 'cow '
        match: cow
        trim: true
        ignorecase: true
    inputCollectionSearchNumeric:
      required:
        - input
        - match
      type: object
      properties:
        input:
          type: array
          description: Collection of strings to search
          items:
            type: number
          x-ms-summary: Values
        match:
          type: number
          description: Number to match
          x-ms-summary: Number
        type:
          type: string
          description: Type of number - integer or decimal
          default: Integer
          x-ms-summary: Number Type
      example:
        input:
          - 1.25
          - 10.5
          - 20.75
          - 51.25
          - 119.6
          - 301.25
        match: '1.25,'
        type: Decimal
    inputCollectionModify:
      required:
        - input
      type: object
      properties:
        input:
          type: array
          description: Collection of values or objects to modify
          items:
            type: string
          x-ms-summary: Collection
        item:
          type: string
          description: 'Item (for multiple items, leave blank and use Items)'
          x-ms-summary: Item
        items:
          type: array
          description: 'Items (Collection, for a single item leave blank and use Item)'
          items:
            type: string
          x-ms-summary: Items
        index:
          type: string
          description: Index position for operation (leave blank to specify end of collection)
          x-ms-summary: Index
      example:
        input:
          - a
          - b
          - c
        item: d
        items: ''
        index: '0'
    inputCollectionFilter:
      required:
        - input
        - keywords
        - match
      type: object
      properties:
        input:
          type: array
          description: Collection of strings to filter
          items:
            type: string
          x-ms-summary: Collection
        match:
          type: string
          description: Match type
          default: Any
          x-ms-summary: Match
        keywords:
          type: string
          description: Keywords (separate multiple values with commas)
          x-ms-summary: Keywords
      example:
        input:
          - the cow
          - jumped over
          - the moon
        match: Any
        keywords: 'cow,moon'
    inputCollectionSort:
      required:
        - input
        - order
      type: object
      properties:
        input:
          type: array
          description: Collection of strings to sort
          items:
            type: string
          x-ms-summary: Collection
        order:
          type: string
          description: Sort order
          default: Ascending
          x-ms-summary: Order
      example:
        input:
          - a
          - d
          - c
          - b
          - e
        order: Ascending
    inputCollectionCount:
      required:
        - input
      type: object
      properties:
        input:
          type: array
          description: Collection of items to count
          items:
            type: string
          x-ms-summary: Collection
      example:
        input:
          - a
          - d
          - c
          - b
          - e
    inputCollectionSplit:
      required:
        - input
      type: object
      properties:
        input:
          type: array
          description: Collection of items to split
          items:
            type: string
          x-ms-summary: Collection
        match:
          type: string
          description: 'String to match (explicit, case-insensitive, leave empty to use Index)'
          x-ms-summary: Match Value
        index:
          type: string
          description: Index location to split (leave empty to use Match value)
          x-ms-summary: Index
      example:
        input:
          - the cow
          - jumped over
          - the moon
        match: jumped over
        index: ''
    inputCollectionReplace:
      required:
        - ignoreCase
        - input
        - match
        - replacement
      type: object
      properties:
        input:
          type: array
          description: Collection of strings
          items:
            type: string
          x-ms-summary: Collection
        match:
          type: string
          description: Match value
          x-ms-summary: Match value
        replacement:
          type: string
          description: Replacement value
          x-ms-summary: Replacement value
        ignoreCase:
          type: string
          description: Ignore case
          default: true
          x-ms-summary: Ignore case
      example:
        input:
          - the brown cow
          - jumped over
          - the brown dog
        match: Brown
        replacement: spotted
        ignoreCase: true
    inputCalculateNumber:
      required:
        - decimals
        - input
      type: object
      properties:
        input:
          type: number
          description: Numeric value to calculate
          x-ms-summary: Value
        decimals:
          minimum: 0
          type: number
          description: Round to number of decimal places
          x-ms-summary: Decimal Places
      example:
        input: 0.195928
        decimals: 2
    inputCalculateNumbers:
      required:
        - decimals
        - input
        - value
      type: object
      properties:
        input:
          type: number
          description: Numeric value
          x-ms-summary: Primary Value
        value:
          type: number
          description: 'Addend, subtrahend, factor, divisor or radicand'
          x-ms-summary: Secondary Value
        decimals:
          minimum: 0
          type: number
          description: Round to number of decimal places
          x-ms-summary: Decimal Places
      example:
        input: 4
        value: 2
        decimals: 2
    inputCalculateSeries:
      required:
        - decimals
        - input
      type: object
      properties:
        input:
          type: array
          description: Colllection of values to calculate
          items:
            type: number
          x-ms-summary: Values
        decimals:
          minimum: 0
          type: number
          description: Round to number of decimal places
          x-ms-summary: Decimal Places
      example:
        input:
          - 1
          - 2
          - 3
          - 4
          - 5
        decimals: 2
    inputCalculatePower:
      required:
        - decimals
        - input
        - power
      type: object
      properties:
        input:
          type: number
          description: Number to raise
          x-ms-summary: Number
        power:
          type: number
          description: Power
          x-ms-summary: Power
        decimals:
          minimum: 0
          type: number
          description: Round to number of decimal places
          x-ms-summary: Decimal Places
      example:
        input: 5.53
        power: 4
        decimals: 2
    inputCalculateMinMax:
      required:
        - input
        - type
      type: object
      properties:
        input:
          type: array
          description: Colllection of values to calculate
          items:
            type: number
          x-ms-summary: Values
        type:
          type: string
          description: Minimum or Maximum
          default: Minimum
          x-ms-summary: Min or Max
      example:
        input:
          - 1
          - 2
          - 3
          - 4
          - 5
        type: Minimum
    inputCollectionConversion:
      required:
        - input
        - name
      type: object
      properties:
        input:
          type: array
          description: Collection containing strings to convert
          items:
            type: string
          x-ms-summary: Values
        name:
          type: string
          description: Collection name
          x-ms-summary: Name
      example:
        input:
          - a
          - b
          - c
          - d
          - e
        name: Items
    inputCollectionConversionXML:
      required:
        - child
        - input
        - root
      type: object
      properties:
        input:
          type: array
          description: Collection containing strings to convert
          items:
            type: string
          x-ms-summary: Values
        root:
          type: string
          description: Name of root XML node
          x-ms-summary: Root Node Name
        child:
          type: string
          description: Name of child XML node(s)
          x-ms-summary: Child Node Name
      example:
        input:
          - a
          - b
          - c
          - d
          - e
        root: Items
        child: Item
    inputCaseConversion:
      required:
        - alphacase
        - input
      type: object
      properties:
        input:
          type: string
          description: String containing the text to convert
          x-ms-summary: Value
        alphacase:
          type: string
          description: Case of conversion result
          x-ms-summary: Case
      example:
        input: the brown cow
        alphacase: Upper
    inputConvertAngle:
      required:
        - input
        - source
        - target
      type: object
      properties:
        input:
          type: number
          x-ms-summary: Measurement value
        source:
          type: string
          x-ms-summary: Source measurement
        target:
          type: string
          x-ms-summary: Target measurement
      example:
        input: 16.036844
        source: Arcminute
        target: Arcsecond
    inputConvertDuration:
      required:
        - input
        - source
        - target
      type: object
      properties:
        input:
          type: number
          x-ms-summary: Measurement value
        source:
          type: string
          x-ms-summary: Source measurement
        target:
          type: string
          x-ms-summary: Target measurement
      example:
        input: 0.66375
        source: Day
        target: Hour
    inputConvertDistance:
      required:
        - input
        - source
        - target
      type: object
      properties:
        input:
          type: number
          x-ms-summary: Measurement value
        source:
          type: string
          x-ms-summary: Source measurement
        target:
          type: string
          x-ms-summary: Target measurement
      example:
        input: 0.525505
        source: Meter
        target: Foot
    inputConvertArea:
      required:
        - input
        - source
        - target
      type: object
      properties:
        input:
          type: number
          x-ms-summary: Measurement value
        source:
          type: string
          x-ms-summary: Source measurement
        target:
          type: string
          x-ms-summary: Target measurement
      example:
        input: 0.416714
        source: Acre
        target: SquareFoot
    inputConvertEnergy:
      required:
        - input
        - source
        - target
      type: object
      properties:
        input:
          type: number
          x-ms-summary: Measurement value
        source:
          type: string
          x-ms-summary: Source measurement
        target:
          type: string
          x-ms-summary: Target measurement
      example:
        input: 0.397155
        source: Calorie
        target: Joule
    inputConvertPower:
      required:
        - input
        - source
        - target
      type: object
      properties:
        input:
          type: number
          x-ms-summary: Measurement value
        source:
          type: string
          x-ms-summary: Source measurement
        target:
          type: string
          x-ms-summary: Target measurement
      example:
        input: 0.866107
        source: Gigawatt
        target: Kilowatt
    inputConvertSpeed:
      required:
        - input
        - source
        - target
      type: object
      properties:
        input:
          type: number
          x-ms-summary: Measurement value
        source:
          type: string
          x-ms-summary: Source measurement
        target:
          type: string
          x-ms-summary: Target measurement
      example:
        input: 0.278054
        source: Knot
        target: MilePerHour
    inputConvertTemperature:
      required:
        - input
        - source
        - target
      type: object
      properties:
        input:
          type: number
          x-ms-summary: Measurement value
        source:
          type: string
          x-ms-summary: Source measurement
        target:
          type: string
          x-ms-summary: Target measurement
      example:
        input: 10
        source: Celsius
        target: Fahrenheit
    inputConvertVolume:
      required:
        - input
        - source
        - target
      type: object
      properties:
        input:
          type: number
          x-ms-summary: Measurement value
        source:
          type: string
          x-ms-summary: Source measurement
        target:
          type: string
          x-ms-summary: Target measurement
      example:
        input: 1.5
        source: CubicFoot
        target: CubicMeter
    inputConvertWeight:
      required:
        - input
        - source
        - target
      type: object
      properties:
        input:
          type: number
          x-ms-summary: Measurement value
        source:
          type: string
          x-ms-summary: Source measurement
        target:
          type: string
          x-ms-summary: Target measurement
      example:
        input: 5.7
        source: Gram
        target: Ounce
    inputCsvConversionJSON:
      required:
        - header
        - input
      type: object
      properties:
        input:
          type: string
          description: CSV string
          x-ms-summary: Value
        header:
          type: boolean
          description: Include header row
          default: true
          x-ms-summary: Header
      example:
        input: "Property1,Property2,Property3\r\nvalue,value,value\r\nvalue,value,value"
        header: true
    inputCurrencyConversion:
      required:
        - input
        - source
        - target
      type: object
      properties:
        input:
          type: number
          description: Amount to convert
          x-ms-summary: Value
        source:
          type: string
          default: USD
          x-ms-summary: Source currency
        target:
          type: string
          x-ms-summary: Target currency
      example:
        input: 100.25
        source: USD
        target: CAD
    inputCurrencyFormat:
      required:
        - input
        - target
      type: object
      properties:
        input:
          type: number
          description: Amount to format
          x-ms-summary: Value
        target:
          type: string
          x-ms-summary: Target currency
      example:
        input: 10980.79
        target: GBP
    inputDateTimeConversion:
      required:
        - input
        - source
        - target
      type: object
      properties:
        input:
          type: string
          description: Source date and time
          x-ms-summary: Value
        source:
          type: string
          default: 'GMT Standard Time - (GMT) Greenwich Mean Time : Dublin, Edinburgh, Lisbon, London'
          x-ms-summary: Source Time Zone
        target:
          type: string
          default: 'GMT Standard Time - (GMT) Greenwich Mean Time : Dublin, Edinburgh, Lisbon, London'
          x-ms-summary: Target Time Zone
        format:
          type: string
          description: 'Display format (defaults to ''yyyy-MM-dd HH:mm:ss'')'
          x-ms-summary: Format
      example:
        input: '03/10/2010 09:00:00'
        source: 'GMT Standard Time - (GMT) Greenwich Mean Time : Dublin, Edinburgh, Lisbon, London'
        target: 'Central Standard Time - (GMT-06:00) Central Time (US & Canada)'
        format: 'yyyy-MM-dd HH:mm:ss'
    inputDateTimeFormat:
      required:
        - culture
        - format
        - input
      type: object
      properties:
        input:
          type: string
          description: Source date and time
          x-ms-summary: Value
        culture:
          type: string
          description: Language culture
          default: en-US
          x-ms-summary: Culture
        format:
          type: string
          description: Output format
          x-ms-summary: Format
      example:
        input: '03/10/2010 00:00:00'
        culture: en-GB
        format: ddd
    inputDateTimeInfo:
      required:
        - culture
        - input
      type: object
      properties:
        input:
          type: string
          description: Source date and time
          x-ms-summary: Value
        culture:
          type: string
          description: Language culture
          default: en-US
          x-ms-summary: Culture
      example:
        input: '03/10/2010 09:00:00'
        culture: en-GB
    inputDateTimeDifference:
      required:
        - dateTime1
        - dateTime2
      type: object
      properties:
        dateTime1:
          type: string
          description: First date/time value
          x-ms-summary: First date/time value
        dateTime2:
          type: string
          description: Second date/time value
          x-ms-summary: Second date/time value
      example:
        dateTime1: '1/1/2010 12:37:19'
        dateTime2: '3/15/2011 14:27:49'
    inputGenerateUniqueID:
      required:
        - uppercase
      type: object
      properties:
        uppercase:
          type: string
          description: All uppercase alpha characters
          x-ms-summary: Uppercase
      example:
        uppercase: true
    inputJoinStrings:
      required:
        - input
        - lower
        - separator
        - trim
      type: object
      properties:
        input:
          type: array
          description: Collection of strings to be joined
          items:
            type: string
          x-ms-summary: Values
        separator:
          type: string
          description: Separator character
          x-ms-summary: Separator
        lower:
          type: string
          description: Convert strings in collection to lowercase
          x-ms-summary: Lowercase
        trim:
          type: string
          description: Trim strings in collection
          x-ms-summary: Trim
      example:
        input:
          - The
          - brown
          - cow
        separator: ;
        lower: true
        trim: true
    inputJsonConversionCSV:
      required:
        - header
        - input
      type: object
      properties:
        input:
          type: string
          description: JSON array object
          x-ms-summary: Value
        header:
          type: boolean
          description: Include header row
          default: true
          x-ms-summary: Header
        omit:
          type: string
          description: Columns to omit (comma separated)
          x-ms-summary: Omit Columns
        order:
          type: string
          description: Column order (comma separated)
          x-ms-summary: Order
      example:
        input:
          - property1: value
          - property2: value
          - property3: value
        header: true
        omit: property1
        order: 'property3,property2'
    inputJsonConversionHTML:
      required:
        - header
        - input
      type: object
      properties:
        input:
          type: string
          description: JSON array object
          x-ms-summary: Value
        header:
          type: boolean
          description: Include header row
          default: true
          x-ms-summary: Header
        alternate:
          type: string
          description: Alternate header row markup
          x-ms-summary: Alternate Header
        attributes:
          type: string
          description: Optional table attributes (single quoted values)
          x-ms-summary: Table Attributes
        omit:
          type: string
          description: Columns to omit (comma separated)
          x-ms-summary: Omit Columns
        order:
          type: string
          description: Column order (comma separated)
          x-ms-summary: Order
      example:
        input:
          - property1: value
          - property2: value
          - property3: value
        header: false
        alternate: <tr><th>Property 3</th><th>Property 2</th></tr>
        attributes: 'style=''width:100%;text-align:center;'''
        omit: property1
        order: 'property3,property2'
    inputJsonConversionXML:
      required:
        - input
        - root
      type: object
      properties:
        input:
          type: string
          description: JSON array object
          x-ms-summary: Value
        root:
          type: string
          description: Name of root node
          x-ms-summary: Root Name
      example:
        input: '{"property1":"value","property2":"value","property3":"value"}'
        root: Properties
    inputNumberRange:
      required:
        - end
        - start
      type: object
      properties:
        start:
          minimum: 0
          type: number
          description: Start of range
          x-ms-summary: Start
        end:
          minimum: 0
          type: number
          description: End of range
          x-ms-summary: End
      example:
        start: 1
        end: 1000000
    inputRedactString:
      required:
        - source
      type: object
      properties:
        source:
          type: string
          description: String containing the complete text
          x-ms-summary: Source String
        value:
          type: string
          description: Individual string to redact
          x-ms-summary: Value
        values:
          type: array
          description: Collection of strings to redact
          items:
            type: string
          x-ms-summary: '-OR- Values Collection'
        regex:
          type: string
          description: Regular expression pattern for matching strings
          x-ms-summary: '-OR- Regular Expression'
      example:
        value: brown
        source: The brown cow
        values:
          - The
          - brown
          - cow
        regex: '[A-Za-z]{5}'
    inputReplaceString:
      required:
        - replacement
        - source
        - value
      type: object
      properties:
        source:
          type: string
          description: String containing the text to be replaced
          x-ms-summary: Source
        value:
          type: string
          description: Text to replace
          x-ms-summary: Value
        replacement:
          type: string
          description: Replacement text
          x-ms-summary: Replacement
      example:
        source: The brown cow
        value: cow
        replacement: dog
    inputSplitString:
      required:
        - characters
        - input
      type: object
      properties:
        input:
          type: string
          description: Text to split
          x-ms-summary: Value
        characters:
          type: string
          description: One or more characters that will be used to split the text
          x-ms-summary: Character(s)
      example:
        input: 'The,brown,cow'
        characters: ','
    inputStringComparison:
      required:
        - compare
        - input
        - lower
        - trim
      type: object
      properties:
        input:
          type: string
          description: Original string
          x-ms-summary: Source
        compare:
          type: string
          description: Comparison string
          x-ms-summary: Target
        lower:
          type: string
          description: Convert strings to lowercase before comparison
          x-ms-summary: Lowercase
        trim:
          type: string
          description: Trim strings before comparison
          x-ms-summary: Trim
      example:
        input: Cow
        compare: dog
        lower: true
        trim: true
    inputStringContains:
      required:
        - find
        - input
        - lower
      type: object
      properties:
        find:
          type: string
          description: Text to match
          x-ms-summary: Value
        input:
          type: string
          description: Text to search
          x-ms-summary: Target
        lower:
          type: string
          description: Convert strings to lowercase
          x-ms-summary: Lowercase
      example:
        find: cow
        input: The brown cow
        lower: true
    inputString:
      required:
        - source
      type: object
      properties:
        source:
          type: string
          description: String variable or text value
          x-ms-summary: Source
      example:
        source: The brown cow
    inputTranslateString:
      required:
        - input
        - language
      type: object
      properties:
        input:
          type: string
          description: String containing the text to be translated
          x-ms-summary: Value
        language:
          type: string
          description: Translation language
          x-ms-summary: Language
      example:
        input: The brown cow
        language: German
    inputTrimString:
      required:
        - source
        - type
      type: object
      properties:
        source:
          type: string
          description: String containing the text to be trimmed
          x-ms-summary: Source
        type:
          type: string
          description: Type of white space to remove
          x-ms-summary: Type
      example:
        source: '  The brown cow  '
        type: Both
    inputXmlConversionJSON:
      required:
        - input
      type: object
      properties:
        input:
          type: string
          description: XML string
          x-ms-summary: Value
      example:
        input: <properties><property1>value</property1></properties>
    inputTextToSpeech:
      required:
        - text
        - type
        - voice
      type: object
      properties:
        text:
          type: string
          description: 'Text to convert (10,000 characters max)'
          x-ms-summary: Text
        type:
          type: string
          description: Text or file type
          default: PlainText
          x-ms-summary: Text or file type
        voice:
          type: string
          description: Voice locale (must match language of input text)
          default: 'en-US, Aria (Female)'
          x-ms-summary: Voice
      example:
        text: This is sample text.
        type: PlainText
        voice: 'en-US, Aria (Female)'
    inputDataQuery:
      required:
        - input
        - query
      type: object
      properties:
        input:
          type: string
          description: XML or JSON string
          x-ms-summary: Value
        query:
          type: string
          description: XPath or JSONPath query
          x-ms-summary: Query
      example:
        input: '{"properties": [{"name":"ID","value":"1234"},{"name":"Title","value":"Some Title"}]}'
        query: '$.properties[?(@.name == "ID")].value'
    inputGenerateHash:
      required:
        - algorithm
        - input
      type: object
      properties:
        input:
          type: string
          description: Hash source string
          x-ms-summary: Input
        algorithm:
          type: string
          description: Hash algorithm
          x-ms-summary: Algorithm
      example:
        source: text to hash
        algorithm: SHA256
    inputVerifyHash:
      required:
        - algorithm
        - hash
        - input
      type: object
      properties:
        input:
          type: string
          description: Original source string
          x-ms-summary: Input
        algorithm:
          type: string
          description: Hash algorithm
          x-ms-summary: Algorithm
        hash:
          type: string
          description: Hashed result
          x-ms-summary: Hash
      example:
        source: this is a really good test
        algorithm: SHA256
        hash: a52b8248f023cebd33aeeddda695f60d2561c0c9
    inputStockPrices:
      required:
        - symbols
      type: object
      properties:
        symbols:
          type: string
          description: 'Stock ticker symbols (comma-separated, max 20)'
          x-ms-summary: Symbols
        date:
          type: string
          description: 'Date (yyyy-MM-dd, leave empty for latest)'
          x-ms-summary: Date
        exchange:
          type: string
          description: Stock exchange
          x-ms-summary: Exchange
      example:
        symbols: 'MMM,CVX'
        date: '2020-10-07T00:00:00.000Z'
        exchange: XNYS (New York Stock Exchange)
    inputMarketIndex:
      required:
        - symbol
      type: object
      properties:
        symbol:
          type: string
          description: Market index
          x-ms-summary: Index
        date:
          type: string
          description: 'Date (yyyy-MM-dd, leave empty for last trading day)'
          x-ms-summary: Date
      example:
        symbol: DJI.INDX
        date: '2020-10-07T00:00:00.000Z'
    inputQRCode:
      required:
        - input
        - payload
      type: object
      properties:
        input:
          type: string
          description: Text value(s) (vertical bar delimited by type)
          x-ms-summary: Value
        payload:
          type: string
          description: Payload type
          default: Plain Text (string)
          x-ms-summary: Type
      example:
        input: someone@example.com|Test message|This is a test.
        payload: Mail
    inputStringToFile:
      required:
        - extension
        - filename
        - input
      type: object
      properties:
        input:
          type: string
          description: Text string (body of file)
          x-ms-summary: Value
        extension:
          type: string
          description: File extension
          default: TXT
          x-ms-summary: Extension
        filename:
          type: string
          description: Name of file (without extension)
          x-ms-summary: Filename
      example:
        input: This is a test.
        extension: TXT
        filename: Test
    outputStringArray:
      type: object
      properties:
        data:
          type: array
          description: data
          items:
            type: string
          x-ms-summary: data
      example:
        data:
          - string
    outputDateInfo:
      type: object
      properties:
        DayOfYear:
          type: number
          description: DayOfYear
          x-ms-summary: DayOfYear
        DayOfWeek:
          type: number
          description: DayOfWeek
          x-ms-summary: DayOfWeek
        WeekOfYear:
          type: number
          description: WeekOfYear
          x-ms-summary: WeekOfYear
        SecondsInDay:
          type: number
          description: SecondsInDay
          x-ms-summary: SecondsInDay
        MinutesInDay:
          type: number
          description: MinutesInDay
          x-ms-summary: MinutesInDay
        Ticks:
          type: number
          description: Ticks
          x-ms-summary: Ticks
      example:
        DayOfYear: 25
        DayOfWeek: 2
        WeekOfYear: 10
        SecondsInDay: 1234
        MinutesInDay: 359
        Ticks: 1234567890
    outputDateDifference:
      type: object
      properties:
        years:
          type: number
          description: Years
          x-ms-summary: Years
        months:
          type: number
          description: Months
          x-ms-summary: Months
        days:
          type: number
          description: Days
          x-ms-summary: Days
        hours:
          type: number
          description: Hours
          x-ms-summary: Hours
        minutes:
          type: number
          description: Minutes
          x-ms-summary: Minutes
        milliseconds:
          type: number
          description: Milliseconds
          x-ms-summary: Milliseconds
        totalYears:
          type: number
          description: Total Years
          format: double
          x-ms-summary: Total Years
        totalMonths:
          type: number
          description: Total Months
          format: double
          x-ms-summary: Total Months
        totalDays:
          type: number
          description: Total Days
          format: double
          x-ms-summary: Total Days
        totalHours:
          type: number
          description: Total Hours
          format: double
          x-ms-summary: Total Hours
        totalMinutes:
          type: number
          description: Total Minutes
          format: double
          x-ms-summary: Total Minutes
        totalSeconds:
          type: number
          description: Total Seconds
          format: double
          x-ms-summary: Total Seconds
        totalMilliseconds:
          type: number
          description: Total Milliseconds
          format: double
          x-ms-summary: Total Milliseconds
        ticks:
          type: number
          description: Ticks
          x-ms-summary: Ticks
      example:
        years: 1
        months: 2
        days: 14
        hours: 1
        minutes: 50
        seconds: 30
        milliseconds: 0
        totalYears: 1.2
        totalMonths: 14.39
        totalDays: 438.08
        totalHours: 10513.84
        totalMinutes: 630830.5
        totalSeconds: 37849830
        totalMilliseconds: 37849830000
        ticks: 378498300000000
    outputCollectionNumber:
      type: object
      properties:
        status:
          type: boolean
          description: Success
          x-ms-summary: Success
        item:
          type: number
          description: First Value
          x-ms-summary: First Value
        items:
          type: array
          description: All Values
          items:
            type: number
          x-ms-summary: All Values
      example:
        status: false
        item: 1.25
        items:
          - 1.25
          - 2.5
          - 3.75
    outputCollectionResult:
      type: object
      properties:
        result:
          type: array
          description: Modified collection result
          items:
            type: string
          x-ms-summary: Modified collection result
      example:
        result:
          - a
          - b
          - c
    outputCollectionString:
      type: object
      properties:
        status:
          type: boolean
          description: Success
          x-ms-summary: Success
        item:
          type: string
          description: First Value
          x-ms-summary: First Value
        items:
          type: array
          description: All Values
          items:
            type: string
          x-ms-summary: All Values
      example:
        status: false
        item: string
        items:
          - string
    outputMultiCollection:
      type: object
      properties:
        result1:
          type: array
          description: First collection result
          items:
            type: string
          x-ms-summary: First collection result
        result2:
          type: array
          description: Second collection result
          items:
            type: string
          x-ms-summary: Second collection result
      example:
        result1:
          - a
          - b
          - c
        result2:
          - d
          - e
          - f
    outputString:
      type: object
      properties:
        result:
          type: string
          description: Result
          x-ms-summary: Result
      example:
        result: string
    outputNumber:
      type: object
      properties:
        result:
          type: number
          description: Result
          x-ms-summary: Result
      example:
        result: 1
    outputBoolean:
      type: object
      properties:
        result:
          type: boolean
          description: Result
          x-ms-summary: Result
      example:
        result: true
    outputFileByte:
      type: object
      properties:
        result:
          pattern: '^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$'
          type: string
          description: Result
          format: byte
          x-ms-summary: Result
      example:
        result: Base64 encoded string (byte array)
    outputStockPrice:
      type: object
      properties:
        result:
          type: array
          description: Stock price information
          items:
            type: object
            properties:
              date:
                type: string
                description: Date
                x-ms-summary: Date
              symbol:
                type: string
                description: Ticker symbol
                x-ms-summary: Symbol
              exchange:
                type: string
                description: Stock exchange
                x-ms-summary: Exchange
              open:
                type: number
                description: Open
                x-ms-summary: Open
              high:
                type: number
                description: High
                x-ms-summary: High
              low:
                type: number
                description: Low
                x-ms-summary: Low
              close:
                type: number
                description: Close
                x-ms-summary: Close
              volume:
                type: number
                description: Volume
                x-ms-summary: Volume
          x-ms-summary: Stock price information
      example:
        result:
          - open: 73.84
            high: 74.32
            low: 72.245
            last: 72.3
            close: 72.7
            volume: 15151304
            date: '2020-10-07T00:00:00+0000'
            symbol: CVX
            exchange: XNYS
    outputMarketIndex:
      type: object
      properties:
        date:
          type: string
          description: Date
          x-ms-summary: Date
        symbol:
          type: string
          description: Index symbol
          x-ms-summary: Symbol
        exchange:
          type: string
          description: Market exchange
          x-ms-summary: Exchange
        open:
          type: number
          description: Open value
          x-ms-summary: Open
        high:
          type: number
          description: High value
          x-ms-summary: High
        low:
          type: number
          description: Low value
          x-ms-summary: Low
        close:
          type: number
          description: Close value
          x-ms-summary: Close
        volume:
          type: number
          description: Trading volume
          x-ms-summary: Volume
        adj_open:
          type: number
          description: Adjusted open value
          x-ms-summary: Adjusted Open
        adj_high:
          type: number
          description: Adjusted high value
          x-ms-summary: Adjusted High
        adj_low:
          type: number
          description: Adjusted low value
          x-ms-summary: Adjusted Low
        adj_close:
          type: number
          description: Adjusted close value
          x-ms-summary: Adjusted Close
        adj_volume:
          type: number
          description: Adjusted trading volume
          x-ms-summary: Adjusted Volume
      example:
        date: '2020-10-07T00:00:00+0000'
        symbol: DJI.INDX
        exchange: INDX
        open: 73.84
        high: 74.32
        low: 72.245
        close: 72.7
        volume: 15151304
        adj_open: 73.84
        adj_high: 74.32
        adj_low: 72.245
        adj_close: 72.7
        adj_volume: 15151304
  securitySchemes:
    apiKeyHeader:
      type: apiKey
      name: X-IBM-Client-Id
      in: header
      description: Represents API Key `X-IBM-Client-Id`
x-ibm-configuration:
  enforced: true
  testable: true
  phase: realized
x-ibm-endpoints:
  - endpointUrl: 'https://connect.apptigent.com'
    type:
      - production
      - development

