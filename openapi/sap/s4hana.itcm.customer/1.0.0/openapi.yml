openapi: 3.0.1
info:
  title: Customer Service
  description: >
    This is a generated connector for [SAPS4HANA Intelligent Trade Claims Management API v1.0.0](https://help.sap.com/viewer/902b9d277dfe48fea582d28849d54935/CURRENT/en-US) OpenAPI specification. 
    
    In SAPS4HANA Intelligent Trade Claims Management, the customer service allows you to access their customers retailer and distributor information.
  x-ballerina-init-description: >
    The connector initialization requires setting the API credentials.

    Create and configure an OAuth2 client credentials by following [this guide](https://help.sap.com/viewer/b865ed651e414196b39f8922db2122c7/LATEST/en-US/7aefa21a65f94b25b7e639c3931b6f83.html).
  x-ballerina-display:
    label: SAPS4HANA ITCM Customer
    iconPath: "icon.png"
  contact:
    name: ITCM
  license:
    name: SAP
  version: 1.0.0
externalDocs:
  description: Business Documentation for Customer Service
  url: https://help.sap.com/viewer/902b9d277dfe48fea582d28849d54935/CURRENT/en-US/b6e65eda3fd94311af84abd5e4403579.html
security:
- OAuth2: []
# servers:
# - url: https://{host}.{environment}.{domain}/v1
#   variables:
#     host:
#       default: api.dev1
#       description: Your host where SAP Intelligent Trade Claims Management has deployed
#     environment:
#       default: e2e
#       description: Your defined environment for your SAP Intelligent Trade Claims Management account
#     domain:
#       default: eurekacloud.io
tags:
- name: Customer
paths:
  /customers:
    post:
      tags:
      - Customer
      summary: Create a new Customer
      description: Using this API, user can create a Customer. As of now, batch creation is not supported
      operationId: createCustomer
      requestBody:
        description: Request payload to create customer
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerDTO'
        required: true
      responses:
        '201':
          description: Success Created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseCreatedMessage'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseUnauthorizedMessage'
        '403':
          description: Forbidden (insufficient authorization).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseForbiddenMessage'
      deprecated: false
      security:
      - OAuth2: []
  /customers/{externalid}:
    get:
      tags:
      - Customer
      summary: Get the details of a Customer with externalId
      description: Using this API, user can get a particular Customer using {externalid}
      operationId: getCustomerByExternalId
      parameters:
      - name: externalid
        in: path
        description: customer's external id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerDTO'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseUnauthorizedMessage'
        '403':
          description: Forbidden (insufficient authorization).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseForbiddenMessage'
        '404':
          description: Not Found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseNotFoundMessage'
      deprecated: false
      security:
      - OAuth2: []
    delete:
      tags:
      - Customer
      summary: Delete a Customer with externalId
      description: Using this API, a user can delete particular Customer by using {externalId}
      operationId: deleteCustomer
      parameters:
      - name: externalid
        in: path
        description: customer's external id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDeleteCurrencyMessage'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseUnauthorizedMessage'
        '403':
          description: Forbidden (insufficient authorization).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseForbiddenMessage'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseNotFoundMessage'
      deprecated: false
      security:
      - OAuth2: []
components:
  schemas:
    ResponseNotFoundMessage:
      type: object
      example:
        message: There is no data found based on the given inputs.
        error: No Result Found
        timestamp: '2021-01-18T19:37:13.701+00:00'
      properties:
        message:
          type: string
        error:
          type: string
        timestamp:
          type: string
          format: date-time
      title: Not Found Message
    ResponseCreatedMessage:
      title: Response Customer created
      type: object
      example:
        id: '1234'
        message: Success Created
        timestamp: '2021-01-18T18:32:30.095Z'
      properties:
        id:
          type: string
        message:
          type: string
        timestamp:
          type: string
          format: date-time
    ResponseForbiddenMessage:
      type: object
      example:
        message: Access denied
        timestamp: '2021-01-18T18:33:18.914Z'
      properties:
        message:
          type: string
        timestamp:
          type: string
          format: date-time
        uri:
          type: string
      title: Forbidden Message
    ResponseUnauthorizedMessage:
      type: object
      example:
        message: Unauthorized/API key not found
        timestamp: '2021-01-18T18:33:18.914Z'
      properties:
        message:
          type: string
        timestamp:
          type: string
          format: date-time
        uri:
          type: string
      title: Unauthorized Message
    CustomerDTO:
      title: CustomerDTO
      type: object
      example:
        businessSystem: 0
        customerAddress:
          formattedOrgNameLine1: USA
          formattedOrgNameLine2: California
          formattedOrgNameLine3: Cupertino
          formattedOrgNameLine4: '#1234'
        customerSalesData:
        - customerPartnerRole:
          - customerID: '34567'
            name: Sam
            partnerCode: '01'
            partnerDescription: Platinum Partner
          salesArea:
            distributionChannelCode: '01'
            salesDivision: '02'
            salesOrganizationID: '12345'
        deletionIndicator: true
        externalID: '34567'
        externalId: '122345'
        fullName: Sam Billings
        name: Sam
        supplierID: '34509'
      properties:
        businessSystem:
          type: integer
          format: int64
        customerAddress:
          $ref: '#/components/schemas/ScriptedOrganizationAddressDTO'
        customerSalesData:
          type: array
          items:
            $ref: '#/components/schemas/CustomerSalesAspectDTO'
        deletionIndicator:
          type: boolean
        externalID:
          type: string
        externalId:
          type: string
        fullName:
          type: string
        name:
          type: string
        supplierID:
          type: string
    CustomerPartnerRoleDTO:
      title: CustomerPartnerRoleDTO
      type: object
      properties:
        customerID:
          type: string
        name:
          type: string
        partnerCode:
          type: string
        partnerDescription:
          type: string
    ResponseDeleteCurrencyMessage:
      title: Response Delete Customer
      type: object
      example:
        message: Success Deleted
        timestamp: '2021-01-18T18:32:30.095Z'
      properties:
        message:
          type: string
        timestamp:
          type: string
          format: date-time
    CustomerSalesAspectDTO:
      title: CustomerSalesAspectDTO
      type: object
      properties:
        customerPartnerRole:
          type: array
          items:
            $ref: '#/components/schemas/CustomerPartnerRoleDTO'
        salesArea:
          $ref: '#/components/schemas/SalesAreaDTO'
    PageDTO:
      title: PageDTO«CustomerDTO»
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/CustomerDTO'
        first:
          type: boolean
        last:
          type: boolean
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
    SalesAreaDTO:
      title: SalesAreaDTO
      type: object
      properties:
        distributionChannelCode:
          type: string
        salesDivision:
          type: string
        salesOrganizationID:
          type: string
    ScriptedOrganizationAddressDTO:
      title: ScriptedOrganizationAddressDTO
      type: object
      properties:
        formattedOrgNameLine1:
          type: string
        formattedOrgNameLine2:
          type: string
        formattedOrgNameLine3:
          type: string
        formattedOrgNameLine4:
          type: string
  securitySchemes:
    OAuth2:
      type: oauth2
      description: To use this API, you need to get OAuth client credentials (client ID and secret) from SAP ITCM, and be authorized to use the relevant scope. Refer to the <a href="https://developer.sap.com/api-reference/authentication/getting-started.html">full authentication information</a> for more information.
      flows:
        clientCredentials:
          tokenUrl: https://colgate-dev1.authentication.us30.hana.ondemand.com/oauth/token
          scopes: {}
x-sap-shortText: The Customer service represent customers that can be posted to, deleted or queried from SAP Intelligent Trade Claims Management by a user.