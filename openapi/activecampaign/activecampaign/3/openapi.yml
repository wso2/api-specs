openapi: 3.0.0
info:
  title: ActiveCampaign API v3
  description: >-
    This is a generated connector for [ActiveCampaign API version 3](https://developers.activecampaign.com/reference/overview) OpenAPI specification.
    ActiveCampaignis an integrated email marketing, automation, sales software, and CRM platform. It lets users perform powerful automation, email marketing, and customer relationship management.
  x-ballerina-init-description:
    The connector initialization requires setting the API credentials.

    Create an [ActiveCampaign account](https://www.activecampaign.com) and obtain tokens by following [this guide](https://developers.activecampaign.com/reference/authentication).
  x-ballerina-display:
    label: ActiveCampaign
    iconPath: "icon.png"
  version: "3"
servers:
  - url: /
    description:
      The API is accessed using a base URL that is specific to your account.
      Your API URL can be found in your account on the My Settings page under the "Developer" tab.
      Generally, the URL will be in the form `https://<your-account>.api-us1.com/api/3/<resource>`
security:
  - apiToken: []
tags:
  - name: Accounts
  - name: Contacts
    description:
      Contacts are the center of activity in ActiveCampaign and represent the people that the owner of an
      ActiveCampaign account is marketing to or selling to.
  - name: Campaigns
  - name: Messages
  - name: Tags
  - name: Bulk
  - name: Automations
# - name: Emails
# - name: Addresses
# - name: Branding
# - name: Calendar Feeds
# - name: Deals
# - name: Forms
# - name: Lists
# - name: Notes
paths:
  /api/3/accounts/{id}:
    get:
      tags:
        - Accounts
      summary: Retrieve an account
      operationId: Retrieve account
      parameters:
        - name: id
          in: path
          description: Account's ID
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Account data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountData"
      deprecated: false
    delete:
      tags:
        - Accounts
      summary: Delete an account
      operationId: Delete account
      parameters:
        - name: id
          in: path
          description: Account's ID
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Deletion response
      deprecated: false
    put:
      tags:
        - Accounts
      summary: Update an account
      operationId: Update account
      parameters:
        - name: id
          in: path
          description: Account's ID
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        description: Update account payload
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateAccountRequest"
        required: true
      responses:
        "200":
          description: Account data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountData"
      deprecated: false
  /api/3/accounts:
    post:
      tags:
        - Accounts
      summary: Create an account
      operationId: Create account
      requestBody:
        description: Create account payload
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateAccountRequest"
        required: true
      responses:
        "201":
          description: Account data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountData"
      deprecated: false
    get:
      tags:
        - Accounts
      summary: List all accounts
      operationId: List accounts
      parameters:
        - in: query
          name: search
          schema:
            type: string
          style: form
          explode: true
          description: Search by name
        - in: query
          name: count_deals
          schema:
            type: string
          style: form
          explode: true
          description:
            Whether to compute the contactCount and dealCount counts for the number of contacts/deals associated with each account.
            Set it to true to include the right counts. If set to false or omitted from the call,
            then contactCount and dealCount will not be counted and be simply displayed as 0.
      responses:
        "200":
          description: Accounts
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountListResponse"
      deprecated: false
  /api/3/accounts/{id}/notes:
    post:
      tags:
        - Accounts
      summary: Create a new note for an account
      operationId: Create account note
      parameters:
        - name: id
          in: path
          description: Account's id to assign new note to
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        description: Create Account Note payload
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateAccountNoteRequest"
        required: true
      responses:
        "201":
          description: Account Note data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountNoteData"
      deprecated: false
  /api/3/accounts/{id}/notes/{noteId}:
    put:
      tags:
        - Accounts
      summary: Update an account note
      operationId: Update  accout note
      parameters:
        - name: id
          in: path
          description: Account's id to assign new note to
          required: true
          style: simple
          schema:
            type: string
        - name: noteId
          in: path
          description: Account note's id to update
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        description: Update Account Note payload
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateAccountNoteRequest"
        required: true
      responses:
        "200":
          description: Account Note data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountNoteData"
      deprecated: false
  /api/3/contacts:
    get:
      tags:
        - Contacts
      summary: List, search, and filter contacts
      operationId: Get Contacts
      parameters:
        - in: query
          name: ids
          schema:
            type: string
          style: form
          explode: true
          description: Filter contacts by ID. Can be repeated for multiple IDs.
        - in: query
          name: email
          schema:
            type: string
          style: form
          explode: true
          description: Filter contacts by ID. Can be repeated for multiple IDs.
        - in: query
          name: email_like
          schema:
            type: string
          style: form
          explode: true
          description: Filter contacts that contain the given value in the email address
        - in: query
          name: exclude
          schema:
            type: integer
          style: form
          explode: true
          description: Exclude from the response the contact with the given ID
        - in: query
          name: formid
          schema:
            type: integer
          style: form
          explode: true
          description: Filter contacts associated with the given form
        - in: query
          name: id_greater
          schema:
            type: integer
          style: form
          explode: true
          description: Only include contacts with an ID greater than the given ID
        - in: query
          name: id_less
          schema:
            type: integer
          style: form
          explode: true
          description: Only include contacts with an ID less than the given ID
        - in: query
          name: listid
          schema:
            type: string
          style: form
          explode: true
          description: Filter contacts associated with the given list
        - in: query
          name: search
          schema:
            type: string
          style: form
          explode: true
          description: Filter contacts that match the given value in the contact names, organization, phone or email
        - in: query
          name: segmentid
          schema:
            type: integer
          style: form
          explode: true
          description:
            Return only contacts that match a list segment (this param initially returns segment information,
            when it is run a second time it will return contacts that match the segment)
        - in: query
          name: seriesid
          schema:
            type: integer
          style: form
          explode: true
          description: Filter contacts associated with the given automation
        - in: query
          name: status
          schema:
            type: integer
          style: form
          explode: true
          description: Status
        - in: query
          name: tagid
          schema:
            type: integer
          style: form
          explode: true
          description: Filter contacts associated with the given tag
        - in: query
          name: filters[created_before]
          schema:
            type: string
          style: form
          explode: true
          description: Filter contacts that were created prior to this date
        - in: query
          name: filters[created_after]
          schema:
            type: string
          style: form
          explode: true
          description: Filter contacts that were created after this date
        - in: query
          name: filters[updated_before]
          schema:
            type: string
          style: form
          explode: true
          description: Filter contacts that were updated before this date
        - in: query
          name: filters[updated_after]
          schema:
            type: string
          style: form
          explode: true
          description: Filter contacts that were updated after this date
        - in: query
          name: waitid
          schema:
            type: integer
          style: form
          explode: true
          description: Filter by contacts in the wait queue of an automation block
        - in: query
          name: orders[cdate]
          schema:
            type: string
          style: form
          explode: true
          description: Order contacts by creation date
        - in: query
          name: orders[email]
          schema:
            type: string
          style: form
          explode: true
          description: Order contacts by email
        - in: query
          name: orders[first_name]
          schema:
            type: string
          style: form
          explode: true
          description: Order contacts by first name
        - in: query
          name: orders[last_name]
          schema:
            type: string
          style: form
          explode: true
          description: Order contacts by last name
        - in: query
          name: orders[name]
          schema:
            type: string
          style: form
          explode: true
          description: Order contacts by full name
        - in: query
          name: forders[score]
          schema:
            type: string
          style: form
          explode: true
          description: Order contacts by score
        - in: query
          name: in_group_lists
          schema:
            type: string
          style: form
          explode: true
          description: Set this to "true" in order to return only contacts that the current user has permissions to see.
      responses:
        "200":
          description: Contacts
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContactListResponse"
      deprecated: false
    post:
      tags:
        - Contacts
      summary: Create Contact
      operationId: Create Contact
      requestBody:
        description: Create Contact payload
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateContactRequest"
        required: true
      responses:
        "201":
          description: Contact data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContactReadResponse"
      deprecated: false
  /api/3/contacts/{contactId}:
    get:
      tags:
        - Contacts
      summary: Retrieve an existing contact
      operationId: Get Contact by ID
      parameters:
        - name: contactId
          in: path
          description: ID of the contact
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Contact data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContactReadResponse"
      deprecated: false
    delete:
      tags:
        - Contacts
      summary: Delete Contact
      operationId: Delete Contact
      parameters:
        - name: contactId
          in: path
          description: Delete an existing contact
          required: true
          style: simple
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: "No content"
      deprecated: false
  /api/3/contacts/{contactId}/contactData:
    get:
      tags:
        - Contacts
      summary: Retrieve a contact's data
      operationId: Get Contact Data
      parameters:
        - name: contactId
          in: path
          description: ID of the contact
          required: true
          style: simple
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Contact data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContactDataResponse"
      deprecated: false
  ### Get specific contact's data - These opeartions are already supported by `Get Contact by ID`
  /api/3/contacts/{contactId}/bounceLogs:
    get:
      tags:
        - Contacts
      summary: Get Contact Bounce Logs
      operationId: Get Contact Bounce Logs
      parameters:
        - name: contactId
          in: path
          description: ID of the contact
          required: true
          style: simple
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Bounce Log data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BounceLogResponse"
      deprecated: false
  /api/3/contacts/{contactId}/contactGoals:
    get:
      tags:
        - Contacts
      summary: Retrieve a contact's goals
      operationId: Get Contact Data Goals
      parameters:
        - name: contactId
          in: path
          description: ID of the contact
          required: true
          style: simple
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Contact Goals data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContactGoalResponse"
      deprecated: false
  # /api/3/contacts/{contactId}/contactLogs:
  #   get:
  #     tags:
  #     - Contacts
  #     summary: Retrieve a contact's logs
  #     operationId: Get Contact Logs
  #     parameters:
  #     - name: contactId
  #       in: path
  #       description: ID of the contact
  #       required: true
  #       style: simple
  #       schema:
  #         type: integer
  #         format: int32
  #     responses:
  #       '200':
  #         description: ''
  #         headers: {}
  #     deprecated: false
  # /api/3/contacts/{contactId}/contactDeals:
  #   get:
  #     tags:
  #     - Contacts
  #     summary: Retrieve a list of contact's deals
  #     operationId: Get Contact Deal List
  #     parameters:
  #     - name: contactId
  #       in: path
  #       description: ID of the contact
  #       required: true
  #       style: simple
  #       schema:
  #         type: integer
  #         format: int32
  #     responses:
  #       '200':
  #         description: ''
  #         headers: {}
  #     deprecated: false
  # /api/3/contacts/{contactId}/notes:
  #   get:
  #     tags:
  #     - Contacts
  #     summary: Retrieve a contacts notes
  #     operationId: Get Contact Notes
  #     parameters:
  #     - name: contactId
  #       in: path
  #       description: ID of the contact
  #       required: true
  #       style: simple
  #       schema:
  #         type: integer
  #         format: int32
  #     responses:
  #       '200':
  #         description: ''
  #         headers: {}
  #     deprecated: false
  # /api/3/contacts/{contactId}/accountContacts:
  #   get:
  #     tags:
  #     - Contacts
  #     summary: Get Contact Account Contacts
  #     operationId: GetContactAccountContacts
  #     parameters:
  #     - name: contactId
  #       in: path
  #       description: ID of the contact
  #       required: true
  #       style: simple
  #       schema:
  #         type: integer
  #         format: int32
  #     responses:
  #       '200':
  #         description: ''
  #         headers: {}
  #     deprecated: false
  # /api/3/contacts/{contactId}/automationEntryCounts:
  #   get:
  #     tags:
  #     - Contacts
  #     summary: Retrieve a contacts automation entry counts
  #     operationId: Get Contact Automation Entry Counts
  #     parameters:
  #     - name: contactId
  #       in: path
  #       description: ID of the contact
  #       required: true
  #       style: simple
  #       schema:
  #         type: integer
  #         format: int32
  #     responses:
  #       '200':
  #         description: ''
  #         headers: {}
  #     deprecated: false
  # /api/3/contacts/{contactId}/plusAppend:
  #   get:
  #     tags:
  #     - Contacts
  #     summary: Retrieve a contacts plus append
  #     operationId: Get Contact Plus Append
  #     parameters:
  #     - name: contactId
  #       in: path
  #       description: ID of the contact
  #       required: true
  #       style: simple
  #       schema:
  #         type: integer
  #         format: int32
  #     responses:
  #       '200':
  #         description: ''
  #         headers: {}
  #     deprecated: false
  # /api/3/contacts/{contactId}/trackingLogs:
  #   get:
  #     tags:
  #     - Contacts
  #     summary: Retrieve a contacts tracking logs
  #     operationId: Get Contact Tracking Logs
  #     parameters:
  #     - name: contactId
  #       in: path
  #       description: ID of the contact
  #       required: true
  #       style: simple
  #       schema:
  #         type: integer
  #         format: int32
  #     responses:
  #       '200':
  #         description: ''
  #         headers: {}
  #     deprecated: false
  /api/3/contactAutomations:
    post:
      tags:
        - Contacts
        - Automations
      summary: Add a contact to an automation
      operationId: Add Contact to Automation
      requestBody:
        description: Add Contact to Automation payload
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddContactAutomationRequest"
        required: true
      responses:
        "201":
          description: Contact Automation data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContactAutomationResponse"
      deprecated: false
    get:
      tags:
        - Contacts
        - Automations
      summary: List all automations a contact is in
      operationId: List Contact Automations
      responses:
        "201":
          description: Contact Automations
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContactAutomationListResponse"
      deprecated: false
  /api/3/contactAutomations/{contactAutomationId}:
    post:
      tags:
        - Contacts
        - Automations
      summary: Retrieve an automation a contact is in
      operationId: Get Contact Automation
      parameters:
        - name: contactAutomationId
          in: path
          description: ID of the contactAutomation to retrieve
          required: true
          style: simple
          schema:
            type: integer
            format: int32
      responses:
        "201":
          description: Contact Automation data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContactAutomationResponse"
      deprecated: false
    delete:
      tags:
        - Contacts
        - Automations
      summary: Remove a contact from an automation
      operationId: Delete Contact Automation
      parameters:
        - name: contactAutomationId
          in: path
          description: ID of the contactAutomation to delete
          required: true
          style: simple
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: No content
      deprecated: false
  /api/3/cemailActivities:
    get:
      tags:
        - Contacts
        - Emails
      summary: List all email activities
      operationId: List email activities
      parameters:
        - name: filters[subscriberid]
          in: query
          description: Set this parameter to return only email activities belonging to a given subscriber.
          required: true
          style: form
          explode: true
          schema:
            type: integer
        - name: filters[dealId]
          in: query
          description: Set this parameter to return only email activities belonging to a given deal.
          required: true
          style: form
          explode: true
          schema:
            type: integer
      responses:
        "200":
          description: Email Activities
          content:
            application/json:
              schema: {}
      deprecated: false
  /api/3/contact/sync:
    post:
      tags:
        - Contacts
      summary: Create or update a contact
      operationId: Create or Update Contact
      requestBody:
        description: Update Contact payload
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateContactRequest"
        required: true
      responses:
        "200":
          description: Contact data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContactReadResponse"
      deprecated: false
  /api/3/contactLists:
    post:
      tags:
        - Contacts
      summary: Subscribe a contact to a list or unsubscribe a contact from a list.
      operationId: Subscribe or Unsubscribe contact from list
      requestBody:
        description: Subscribe or Unsubscribe from list payload
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SubscribeOrUnsubscribeContactRequest"
        required: true
      responses:
        "200":
          description: List subscription data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SubscribeOrUnsubscribeContactResponse"
      deprecated: false
  ## Generation Not suported in the tool
  # /api/3/accounts/bulk_delete/{ids}:
  #   delete:
  #     tags:
  #     - Accounts
  #     - Bulk
  #     summary: Bulk delete accounts
  #     operationId: Bulk delete accounts
  #     parameters:
  #     - name: ids
  #       in: path
  #       description: Array with integers representing ID's of accounts to be deleted
  #       required: true
  #       style: simple
  #       explode: false
  #       schema:
  #         type: array
  #         items:
  #           type: string
  #     responses:
  #       '200':
  #         description: Deletion response
  #     deprecated: false
  /api/3/import/bulk_import:
    post:
      tags:
        - Contacts
        - Bulk
      summary: Bulk import contacts
      operationId: Bulk import contacts
      requestBody:
        description: Bulk import payload
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BulkImportRequest"
        required: true
      responses:
        "200":
          description: Bulk import data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BulkImportResponse"
      deprecated: false
    get:
      tags:
        - Contacts
        - Bulk
      summary: Bulk import status list. After using the POST endpoint to send bulk data, you can use this endpoint to monitor progress.
      operationId: Bulk Import Status List
      responses:
        "200":
          description: BulkImport status response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BulkImportStatus"
      deprecated: false
  /api/3/import/info:
    get:
      tags:
        - Contacts
        - Bulk
      summary: This endpoint returns a specific bulk import's status including the contact IDs of any newly created contacts, and emails of any contacts that failed to be created.
      operationId: Bulk Import Status Info
      parameters:
        - name: batchId
          in: query
          description: Batch ID
          required: true
          style: form
          explode: true
          schema:
            type: string
      responses:
        "200":
          description: BulkImport status list
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BulkImportStatusInfo"
      deprecated: false
  /api/3/campaigns:
    get:
      tags:
        - Campaigns
      summary: List all campaigns
      operationId: Get Campaigns
      parameters:
        - in: query
          name: orders[sdate]
          schema:
            type: string
          style: form
          explode: true
          description: Order campaigns by send date
        - in: query
          name: orders[ldate]
          schema:
            type: string
          style: form
          explode: true
          description: Order campaigns by last send date
        - in: query
          name: filters[automation]
          schema:
            type: string
          style: form
          explode: true
          description: Filter to return automation campaigns
      responses:
        "200":
          description: Campaigns
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CampaignListResponse"
      deprecated: false
  /api/3/campaigns/{campaignId}:
    get:
      tags:
        - Campaigns
      summary: Retrieve a campaign
      operationId: Get Campaign by ID
      parameters:
        - name: campaignId
          in: path
          description: ID of campaign to retrieve
          required: true
          style: simple
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Campaign data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CampaignReadResponse"
      deprecated: false
  ## Retrieve links associated to campaign
  /api/3/messages:
    get:
      tags:
        - Messages
      summary: List all messages
      operationId: Get Messages
      responses:
        "200":
          description: Message List
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageListResponse"
      deprecated: false
  ## Create a message
  ## Retrieve a message
  ## Delete a message
  /api/3/contactTags:
    post:
      tags:
        - Contact
        - Tags
      summary: Add a tag to a contact
      operationId: Add tag to contact
      requestBody:
        description: Contact tag data payload
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddTagToContactRequest"
        required: true
      responses:
        "201":
          description: Contact Tag data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContactTagReadResponse"
      deprecated: false
  /api/3/contactTags/{tagId}:
    delete:
      tags:
        - Contact
        - Tags
      summary: Remove a tag from a contact
      operationId: Remove tag from contact
      parameters:
        - name: tagId
          in: path
          description: The contactTag id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: No Content
      deprecated: false
  /api/3/lists:
    get:
      tags:
        - Lists
      summary: Retrieve all lists
      operationId: Get Lists
      parameters:
        - name: filters[name]
          in: query
          description: Filter by the name of the list
          schema:
            type: string
      responses:
        "200":
          description: Lists
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListListResponse"
      deprecated: false
    post:
      tags:
        - Lists
      summary: Create a list
      operationId: Create List
      requestBody:
        description: Create List payload
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateListRequest"
        required: true
      responses:
        "200":
          description: List
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListCreateResponse"
      deprecated: false
## Delete a list
## Retrieve a list
## Create a list group permission

## Notes
## Create a note
## Retrieve a note
## Update a note
## Delete a note
components:
  parameters:
    accept:
      description: The ID of your Unify application
      in: header
      name: Accept
      required: true
      schema:
        type: string
  schemas:
    AccountListResponse:
      type: object
      properties:
        accounts:
          type: array
          items:
            $ref: "#/components/schemas/AccountData"
    AccountData:
      title: Account data
      type: object
      properties:
        account:
          type: object
          properties:
            name:
              type: string
            accountUrl:
              type: string
            createdTimestamp:
              type: string
            updatedTimestamp:
              type: string
            links:
              type: array
              items:
                type: string
            id:
              type: string
            fields:
              type: array
              items:
                $ref: "#/components/schemas/Field"
    CreateAccountRequest:
      title: Create Account payload
      required:
        - account
      type: object
      properties:
        account:
          $ref: "#/components/schemas/Account"
    Account:
      title: Account
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: Account's name
        accountUrl:
          type: string
          description: Account's website
        fields:
          type: array
          items:
            $ref: "#/components/schemas/Field"
          description: Account's custom field values {customFieldId- int, fieldValue- string, fieldCurrency?-string}[]
    UpdatableAccount:
      title: Account
      type: object
      properties:
        name:
          type: string
          description: Account's name
        accountUrl:
          type: string
          description: Account's website
        fields:
          type: array
          items:
            $ref: "#/components/schemas/Field"
          description: Account's custom field values {customFieldId- int, fieldValue- string, fieldCurrency?-string}[]
    Field:
      title: Field
      required:
        - customFieldId
        - fieldValue
      type: object
      properties:
        customFieldId:
          description: Field ID, ID of the Custom Field Meta Data
          type: integer
          format: int32
        fieldValue:
          oneOf:
            - type: string
            - type: integer
              format: int32
          description: Updated field value. For currency field, this needs to be in cents not dollars (or 100 x Base Unit).
        fieldCurrency:
          type: string
          description: Required only for the currency field type. The three letter currency code for the currency value
    UpdateAccountRequest:
      title: Update Account payload
      required:
        - account
      type: object
      properties:
        account:
          $ref: "#/components/schemas/UpdatableAccount"
    CreateAccountNoteRequest:
      title: Create Account Note payload
      required:
        - note
      type: object
      properties:
        note:
          description: Account note's content
          type: string
    NoteData:
      title: Note
      type: object
      properties:
        note:
          type: object
          properties:
            cdate:
              type: string
            id:
              type: string
            links:
              type: object
              properties:
                activities:
                  type: string
                mentions:
                  type: string
                notes:
                  type: string
                owner:
                  type: string
                user:
                  type: string
            mdate:
              type: string
            note:
              type: string
            owner:
              type: object
              properties:
                id:
                  type: string
                type:
                  type: string
            relid:
              type: object
            reltype:
              type: object
            user:
              type: object
            userid:
              type: object
    UpdateAccountNoteRequest:
      title: Update Account Note payload
      type: object
      properties:
        note:
          description: Account note's content
          type: string
    AccountNoteData:
      title: Account Note Data
      type: object
      properties:
        accounts:
          type: array
          items:
            $ref: "#/components/schemas/AccountData"
        note:
          $ref: "#/components/schemas/NoteData"
    CreateContactRequest:
      title: CreateContactRequest
      required:
        - contact
      type: object
      properties:
        contact:
          $ref: "#/components/schemas/Contact"
    Contact:
      title: Contact
      required:
        - email
      type: object
      properties:
        email:
          type: string
          description: Email address of the new contact. Example- 'test@example.com'
        firstName:
          type: string
          description: First name of the new contact.
        lastName:
          type: string
          description: Last name of the new contact.
        phone:
          type: integer
          description: Phone number of the contact.
        fieldValues:
          type: array
          items:
            $ref: "#/components/schemas/FieldValue"
    ContactReadResponse:
      type: object
      properties:
        contactAutomations:
          type: array
          items:
            $ref: "#/components/schemas/ContactAutomation"
        contactLists:
          type: array
          items:
            $ref: "#/components/schemas/ContactList"
        deals:
          type: array
          items:
            $ref: "#/components/schemas/Deal"
        fieldValues:
          type: array
          items:
            $ref: "#/components/schemas/FieldValue"
        geoAddresses:
          type: array
          items:
            $ref: "#/components/schemas/GeoAddress"
        geoIps:
          type: array
          items:
            $ref: "#/components/schemas/GeoIp"
        contact:
          $ref: "#/components/schemas/ContactRead"
    ContactListListResponse:
      type: object
      properties:
        contactLists:
          type: array
          items:
            $ref: "#/components/schemas/ContactList"
    ContactList:
      type: object
      properties:
        contact:
          type: string
        list:
          type: string
        form:
          type: string
          format: nullable
        seriesid:
          type: string
        sdate:
          type: string
          format: nullable
        udate:
          type: string
          format: nullable
        status:
          type: string
        responder:
          type: string
        sync:
          type: string
        unsubreason:
          type: string
          format: nullable
        campaign:
          type: string
          format: nullable
        message:
          type: string
          format: nullable
        first_name:
          type: string
        last_name:
          type: string
        ip4Sub:
          type: string
        sourceid:
          type: string
        autosyncLog:
          type: string
          format: nullable
        ip4_last:
          type: string
        ip4Unsub:
          type: string
        unsubscribeAutomation:
          type: string
          format: nullable
        links:
          $ref: "#/components/schemas/Links"
        id:
          type: string
        automation:
          type: string
          format: nullable
    ContactDataResponse:
      type: object
      properties:
        contactDatum:
          $ref: "#/components/schemas/ContactData"
    BounceLogResponse:
      type: object
      properties:
        bounceLogs:
          type: array
          items:
            $ref: "#/components/schemas/BounceLog"
    BounceLog:
      type: object
      properties:
        tstamp:
          type: string
          format: date-time
        bounceid:
          type: string
        subscriberid:
          type: string
        campaignid:
          type: string
        messageid:
          type: string
        codeid:
          type: string
        email:
          type: string
        error:
          type: string
        source:
          type: string
        created_timestamp:
          type: string
        updated_timestamp:
          type: string
        created_by:
          type: string
          format: nullable
        updated_by:
          type: string
          format: nullable
        links:
          $ref: "#/components/schemas/Links"
        id:
          type: string
        bounce:
          type: string
        contact:
          type: string
        campaign:
          type: string
        message:
          type: string
        code:
          type: string
    ContactGoalResponse:
      type: object
      properties:
        contactGoals:
          type: array
          items:
            $ref: "#/components/schemas/ContactGoal"
    ContactGoal:
      type: object
      properties:
        goalid:
          type: string
        seriesid:
          type: string
        subscriberid:
          type: string
        subscriberseriesid:
          type: string
        timespan:
          type: string
        tstamp:
          type: string
          format: date-time
        links:
          $ref: "#/components/schemas/Links"
        id:
          type: string
        goal:
          type: string
        automation:
          type: string
        contact:
          type: string
        contactAutomation:
          type: string
    ContactData:
      type: object
      properties:
        contact:
          type: string
        tstamp:
          type: string
          format: date-time
        geoTstamp:
          type: string
          format: nullable
        geoIp4:
          type: string
        geoCountry2:
          type: string
        geo_country:
          type: string
        geoState:
          type: string
        geoCity:
          type: string
        geoZip:
          type: string
        geoArea:
          type: string
        geoLat:
          type: string
        geoLon:
          type: string
        geoTz:
          type: string
        geoTzOffset:
          type: string
        ga_campaign_source:
          type: string
        ga_campaign_name:
          type: string
        ga_campaign_medium:
          type: string
        ga_campaign_term:
          type: string
        ga_campaign_content:
          type: string
        ga_campaign_customsegment:
          type: string
        ga_first_visit:
          type: string
          format: nullable
        ga_times_visited:
          type: string
        fb_id:
          type: string
        fb_name:
          type: string
        tw_id:
          type: string
        created_timestamp:
          type: string
        updated_timestamp:
          type: string
        created_by:
          type: string
        updated_by:
          type: string
        links:
          $ref: "#/components/schemas/Links"
        id:
          type: string
    Deal:
      type: object
      properties:
        owner:
          type: string
        contact:
          type: string
        organization:
          type: string
          format: nullable
        group:
          type: string
          format: nullable
        title:
          type: string
        nexttaskid:
          type: string
        currency:
          type: string
        status:
          type: string
        links:
          $ref: "#/components/schemas/Links"
        id:
          type: string
        nextTask:
          type: string
          format: nullable
    GeoAddress:
      type: object
      properties:
        ip4:
          type: string
        country2:
          type: string
        country:
          type: string
        state:
          type: string
        city:
          type: string
        zip:
          type: string
        area:
          type: string
        lat:
          type: string
        lon:
          type: string
        tz:
          type: string
        tstamp:
          type: string
          format: date-time
        links:
          $ref: "#/components/schemas/Links"
        id:
          type: string
    GeoIp:
      type: object
      properties:
        contact:
          type: string
        campaignid:
          type: string
        messageid:
          type: string
        geoaddrid:
          type: string
        ip4:
          type: string
        tstamp:
          type: string
          format: date-time
        geoAddress:
          type: string
        links:
          $ref: "#/components/schemas/Links"
        id:
          type: string
    ContactListResponse:
      type: object
      properties:
        scoreValues:
          type: array
          items: {}
        contacts:
          type: array
          items:
            $ref: "#/components/schemas/ContactRead"
        meta:
          $ref: "#/components/schemas/Meta"
    ContactRead:
      type: object
      properties:
        cdate:
          type: string
          format: date-time
        email:
          type: string
        phone:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        orgid:
          type: string
        segmentio_id:
          type: string
        bounced_hard:
          type: string
        bounced_soft:
          type: string
        bounced_date:
          type: string
        ip:
          type: string
        ua:
          type: string
        hash:
          type: string
        socialdata_lastcheck:
          type: string
        email_local:
          type: string
        email_domain:
          type: string
        sentcnt:
          type: string
        rating_tstamp:
          type: string
        gravatar:
          type: string
        deleted:
          type: string
        anonymized:
          type: string
        udate:
          type: string
          format: date-time
        deleted_at:
          type: string
        scoreValues:
          type: array
          items: {}
        links:
          $ref: "#/components/schemas/Links"
        id:
          type: string
        organization:
          type: string
          format: nullable
    Links:
      type: object
      properties:
        bounceLogs:
          type: string
        contactAutomations:
          type: string
        contactData:
          type: string
        contactGoals:
          type: string
        contactLists:
          type: string
        contactLogs:
          type: string
        contactTags:
          type: string
        contactDeals:
          type: string
        deals:
          type: string
        fieldValues:
          type: string
        geoIps:
          type: string
        notes:
          type: string
        organization:
          type: string
        plusAppend:
          type: string
        trackingLogs:
          type: string
        scoreValues:
          type: string
    Meta:
      type: object
      properties:
        total:
          type: string
        page_input:
          type: object
          properties:
            segmentid:
              type: integer
              format: int32
            formid:
              type: integer
              format: int32
            listid:
              type: integer
              format: int32
            tagid:
              type: integer
              format: int32
            limit:
              type: integer
              format: int32
            offset:
              type: integer
              format: int32
            search:
              type: string
              format: nullable
            sort:
              type: string
              format: nullable
            seriesid:
              type: integer
              format: int32
            waitid:
              type: integer
              format: int32
            status:
              type: integer
              format: int32
            forceQuery:
              type: integer
              format: int32
            cacheid:
              type: string
    AddContactAutomationRequest:
      title: Add Contact to Automation payload
      required:
        - contactAutomation
      type: object
      properties:
        contactAutomation:
          $ref: "#/components/schemas/ContactAutomation"
    ContactAutomation:
      type: object
      properties:
        contact:
          type: string
          description: Contact ID of the Contact, to be linked to the contactAutomation
        automation:
          type: string
          description: Automation ID of the automation, to be linked to the contactAutomation
    ContactAutomationResponse:
      title: Contact Automation data
      type: object
      properties:
        contacts:
          type: array
          items:
            $ref: "#/components/schemas/ContactRead"
        contactAutomation:
          $ref: "#/components/schemas/ContactAutomationData"
    ContactAutomationData:
      type: object
      properties:
        contact:
          type: string
        seriesid:
          type: string
        startid:
          type: string
        status:
          type: string
        adddate:
          type: string
          format: date-time
        remdate:
          type: string
          format: nullable
        timespan:
          type: string
          format: nullable
        lastblock:
          type: string
        lastdate:
          type: string
          format: date-time
        completedElements:
          type: string
        totalElements:
          type: string
        completed:
          type: integer
          format: int32
        completeValue:
          type: integer
          format: int32
        links:
          $ref: "#/components/schemas/Links"
        id:
          type: string
        automation:
          type: string
    ContactAutomationListResponse:
      title: Contact Automation list
      type: object
      properties:
        contactAutomations:
          type: array
          items:
            $ref: "#/components/schemas/ContactAutomationData"
        meta:
          $ref: "#/components/schemas/Meta"
    UpdateContactRequest:
      title: Create or Update Contact payload
      required:
        - contact
      type: object
      properties:
        contact:
          $ref: "#/components/schemas/UpdateContactData"
    UpdateContactData:
      title: Contact data update
      type: object
      properties:
        email:
          type: string
          description: Email address of the contact to sync
        firstName:
          type: string
          description: First name of the new contact.
        lastName:
          type: string
          description: Last name of the new contact.
        phone:
          type: integer
          description: Phone number of the contact.
        fieldValues:
          type: array
          description: Contact's custom field values [{field, value}]
          items:
            $ref: "#/components/schemas/FieldValue"
    FieldValue:
      title: FieldValue
      required:
        - field
        - value
      type: object
      properties:
        field:
          type: string
          description: Field name
        value:
          type: string
          description: Value related to field name
    SubscribeOrUnsubscribeContactRequest:
      title: Subscribe Or Unsubscribe Contact payload
      required:
        - contactList
      type: object
      properties:
        contactList:
          $ref: "#/components/schemas/ContactListData"
    SubscribeOrUnsubscribeContactResponse:
      title: Subscribe Or Unsubscribe Contact Response
      type: object
      properties:
        contacts:
          type: array
          items:
            $ref: "#/components/schemas/ContactRead"
        contactList:
          $ref: "#/components/schemas/ContactList"
    ContactListData:
      title: ContactList
      required:
        - list
        - contact
        - status
      type: object
      properties:
        list:
          type: integer
          format: int32
          description: ID of the list to subscribe the contact to
        contact:
          type: integer
          format: int32
          description: ID of the contact to subscribe to the list
        status:
          type: integer
          format: int32
          description:
            Set to "1" to subscribe the contact to the list. Set to "2" to unsubscribe the contact from the list.
            WARNING- If you change a status from unsubscribed to active, you can re-subscribe a contact to a list from which they had manually unsubscribed.
        sourceid:
          type: integer
          format: int32
          description: Set to "4" when re-subscribing a contact to a list
    ListCreateResponse:
      type: object
      properties:
        list:
          $ref: "#/components/schemas/ListData"
    ListListResponse:
      type: object
      properties:
        lists:
          type: array
          items:
            $ref: "#/components/schemas/ListData"
        meta:
          $ref: "#/components/schemas/Meta"
    ListReadResponse:
      type: object
      properties:
        list:
          $ref: "#/components/schemas/ListData"
    ListData:
      type: object
      properties:
        stringid:
          type: string
        userid:
          type: string
        name:
          type: string
        cdate:
          type: string
          format: date-time
        p_use_tracking:
          type: string
        p_use_analytics_read:
          type: string
        p_use_analytics_link:
          type: string
        p_use_twitter:
          type: string
        p_use_facebook:
          type: string
        p_embed_image:
          type: string
        p_use_captcha:
          type: string
        send_last_broadcast:
          type: string
        private:
          type: string
        analytics_domains:
          type: string
          format: nullable
        analytics_source:
          type: string
        analytics_ua:
          type: string
        twitter_token:
          type: string
        twitter_token_secret:
          type: string
        facebook_session:
          type: string
          format: nullable
        carboncopy:
          type: string
          format: nullable
        subscription_notify:
          type: string
          format: nullable
        unsubscription_notify:
          type: string
          format: nullable
        require_name:
          type: string
        get_unsubscribe_reason:
          type: string
        to_name:
          type: string
        optinoptout:
          type: string
        sender_name:
          type: string
        sender_addr1:
          type: string
        sender_addr2:
          type: string
        sender_city:
          type: string
        sender_state:
          type: string
        sender_zip:
          type: string
        sender_country:
          type: string
        sender_phone:
          type: string
        sender_url:
          type: string
        sender_reminder:
          type: string
        fulladdress:
          type: string
        optinmessageid:
          type: string
        optoutconf:
          type: string
        deletestamp:
          type: string
          format: nullable
        udate:
          type: string
          format: nullable
        links:
          $ref: "#/components/schemas/Links"
        id:
          type: string
        user:
          type: string
    CampaignListResponse:
      type: object
      properties:
        campaigns:
          type: array
          items:
            $ref: "#/components/schemas/CampaignData"
        meta:
          $ref: "#/components/schemas/Meta"
    CampaignReadResponse:
      type: object
      properties:
        campaign:
          $ref: "#/components/schemas/CampaignData"
    CampaignData:
      type: object
      properties:
        type:
          type: string
        userid:
          type: string
        segmentid:
          type: string
        bounceid:
          type: string
        realcid:
          type: string
        sendid:
          type: string
        threadid:
          type: string
        seriesid:
          type: string
        formid:
          type: string
        basetemplateid:
          type: string
        basemessageid:
          type: string
        addressid:
          type: string
        source:
          type: string
        name:
          type: string
        cdate:
          type: string
          format: date-time
        mdate:
          type: string
          format: date-time
        sdate:
          type: string
          format: nullable
        ldate:
          type: string
          format: nullable
        send_amt:
          type: string
        total_amt:
          type: string
        opens:
          type: string
        uniqueopens:
          type: string
        linkclicks:
          type: string
        uniquelinkclicks:
          type: string
        subscriberclicks:
          type: string
        forwards:
          type: string
        uniqueforwards:
          type: string
        hardbounces:
          type: string
        softbounces:
          type: string
        unsubscribes:
          type: string
        unsubreasons:
          type: string
        updates:
          type: string
        socialshares:
          type: string
        replies:
          type: string
        uniquereplies:
          type: string
        status:
          type: string
        public:
          type: string
        mail_transfer:
          type: string
        mail_send:
          type: string
        mail_cleanup:
          type: string
        mailer_log_file:
          type: string
        tracklinks:
          type: string
        tracklinksanalytics:
          type: string
        trackreads:
          type: string
        trackreadsanalytics:
          type: string
        analytics_campaign_name:
          type: string
        tweet:
          type: string
        facebook:
          type: string
        survey:
          type: string
        embed_images:
          type: string
        htmlunsub:
          type: string
        textunsub:
          type: string
        htmlunsubdata:
          type: string
          format: nullable
        textunsubdata:
          type: string
          format: nullable
        recurring:
          type: string
        willrecur:
          type: string
        split_type:
          type: string
        split_content:
          type: string
        split_offset:
          type: string
        split_offset_type:
          type: string
        split_winner_messageid:
          type: string
        split_winner_awaiting:
          type: string
        responder_offset:
          type: string
        responder_type:
          type: string
        responder_existing:
          type: string
        reminder_field:
          type: string
        reminder_format:
          type: string
          format: nullable
        reminder_type:
          type: string
        reminder_offset:
          type: string
        reminder_offset_type:
          type: string
        reminder_offset_sign:
          type: string
        reminder_last_cron_run:
          type: string
          format: nullable
        activerss_interval:
          type: string
        activerss_url:
          type: string
          format: nullable
        activerss_items:
          type: string
        ip4:
          type: string
        laststep:
          type: string
        managetext:
          type: string
        schedule:
          type: string
        scheduleddate:
          type: string
          format: nullable
        waitpreview:
          type: string
        deletestamp:
          type: string
          format: nullable
        replysys:
          type: string
        links:
          $ref: "#/components/schemas/Links"
        id:
          type: string
        user:
          type: string
        automation:
          type: string
          format: nullable
    MessageListResponse:
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: "#/components/schemas/MessageData"
        meta:
          $ref: "#/components/schemas/Meta"
    MessageReadResponse:
      type: object
      properties:
        message:
          $ref: "#/components/schemas/MessageData"
    MessageData:
      type: object
      properties:
        userid:
          type: string
        ed_instanceid:
          type: string
        ed_version:
          type: string
        cdate:
          type: string
          format: date-time
        mdate:
          type: string
          format: date-time
        name:
          type: string
        fromname:
          type: string
        fromemail:
          type: string
        reply2:
          type: string
        priority:
          type: string
        charset:
          type: string
        encoding:
          type: string
        format:
          type: string
        subject:
          type: string
        preheader_text:
          type: string
        text:
          type: string
        html:
          type: string
        htmlfetch:
          type: string
        textfetch:
          type: string
        hidden:
          type: string
        preview_mime:
          type: string
        preview_data:
          type: string
    BulkImportRequest:
      title: Bulk Import payload
      required:
        - contacts
      type: object
      properties:
        contacts:
          type: array
          items:
            $ref: "#/components/schemas/BulkContactData"
          description: ""
        callback:
          type: string
          nullable: true
    BulkContactData:
      title: Bulk Contact Data
      required:
        - email
      type: object
      properties:
        email:
          type: string
          description: The contact's email.
        first_name:
          type: string
          description: The contact's first name
        last_name:
          type: string
          description: The contact's last name.
        phone:
          type: string
          description: The contact’s phone number.
        customer_acct_name:
          type: string
          description: The name of the contact’s account.
        tags:
          type: array
          items:
            type: string
          description: Each string in the array will be added as a single tag to the contact. New tags will be created if they do not already exist.
        fields:
          type: array
          items:
            $ref: "#/components/schemas/FieldValue"
          description: A list of custom fields to apply to the contact. Each field must contain two fields- Each contact may have up to N custom fields.
        subscribe:
          type: array
          items:
            $ref: "#/components/schemas/Subscribe"
          description: An array of lists to subscribe the contact to. Contacts may not be subscribed to lists which they have previously unsubscribed from. Each list object contains a single field.
        unsubscribe:
          type: array
          items:
            $ref: "#/components/schemas/Subscribe"
          description: An array of lists to unsubscribe the contact to. Each list object contains a single field.
          nullable: true
    Subscribe:
      title: Subscribe
      required:
        - listid
      type: object
      properties:
        listid:
          type: string
          description:
            The ID of the list to subscribe the contact to or unsubscribe the contact from.
            Lists must be referenced by the ID that ActiveCampaign assigns to them.
            You can find the list ID by clicking the list in your ActiveCampaign account then viewing the URL bar.
            It will look something like this- `/app/contacts/?listid=19&status=1` You can also retrieve the ID number for a list by using the "Retrieve all lists" API call.
    BulkImportResponse:
      type: object
      properties:
        Success:
          type: integer
          format: int32
        queued_contacts:
          type: integer
          format: int32
        batchId:
          type: string
        message:
          type: string
    BulkImportStatus:
      type: object
      properties:
        outstanding:
          type: array
          items:
            $ref: "#/components/schemas/Batch"
        recentlyCompleted:
          type: array
          items:
            $ref: "#/components/schemas/Batch"
    BulkImportStatusInfo:
      type: object
      properties:
        status:
          type: string
        success:
          type: array
          items:
            type: string
        failure:
          type: array
          items:
            type: string
    Batch:
      type: object
      properties:
        forDate:
          type: string
          format: date
        batches:
          type: string
        contacts:
          type: string
    AddTagToContactRequest:
      title: AddatagtoacontactRequest
      required:
        - contactTag
      type: object
      properties:
        contactTag:
          $ref: "#/components/schemas/ContactTag"
    ContactTag:
      title: ContactTag
      type: object
      properties:
        contact:
          type: string
          description: The id of the Contact
        tag:
          type: string
          description: The id of the tag
    ContactTagReadResponse:
      type: object
      properties:
        contactTag:
          $ref: "#/components/schemas/ContactTagData"
    ContactTagData:
      type: object
      properties:
        cdate:
          type: string
          format: date-time
        contact:
          type: string
        id:
          type: string
        links:
          $ref: "#/components/schemas/Links"
        tag:
          type: string
    CreateListRequest:
      title: Create List payload
      required:
        - list
      type: object
      properties:
        list:
          $ref: "#/components/schemas/List"
    List:
      title: List
      required:
        - name
        - stringid
        - sender_url
        - sender_reminder
      type: object
      properties:
        name:
          type: string
          description: Name of the list to create
        stringid:
          type: string
          description: URL-safe list name. Example- 'list-name-sample'
        sender_url:
          type: string
          description: The website URL this list is for.
        sender_reminder:
          type: string
          description: A reminder for your contacts as to why they are on this list and you are messaging them.
        user:
          type: integer
          description:
            User Id of the list owner. A list owner is able to control campaign branding. A property of list.
            userid also exists on this object; both properties map to the same list owner field and are being maintained in the response object for backward compatibility.
            If you post values for both list.user and list.userid, the value of list.user will be used.
          format: int32
        send_last_broadcast:
          type: boolean
          description: Boolean value indicating whether or not to send the last sent campaign to this list to a new subscriber upon subscribing. 1 = yes, 0 = no
        carboncopy:
          type: string
          description: Comma-separated list of email addresses to send a copy of all mailings to upon send
        subscription_notify:
          type: string
          description: Comma-separated list of email addresses to notify when a new subscriber joins this list.
        unsubscription_notify:
          type: string
          description: Comma-separated list of email addresses to notify when a subscriber unsubscribes from this list.
  securitySchemes:
    apiToken:
      type: apiKey
      in: header
      name: Api-Token
      description:
        "Provide your API Key as Api-Token. Eg: {apiToken : <Your API Key>}
        Your API key can be found in your account on the Settings page under the Developer tab."
