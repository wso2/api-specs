openapi: 3.0.1
info:
  title: Product Service
  description: >
    This is a generated connector for [SAPS4HANA Intelligent Trade Claims Management API v1.0.0](https://help.sap.com/viewer/902b9d277dfe48fea582d28849d54935/CURRENT/en-US) OpenAPI specification. 
    
    In SAPS4HANA Intelligent Trade Claims Management, the product service allows you to access their product retailer and distributor information.
  x-ballerina-init-description: >
    The connector initialization requires setting the API credentials.

    Create and configure an OAuth2 client credentials by following [this guide](https://help.sap.com/viewer/b865ed651e414196b39f8922db2122c7/LATEST/en-US/7aefa21a65f94b25b7e639c3931b6f83.html).
  x-ballerina-display:
    label: SAPS4HANA ITCM Product
    iconPath: "icon.png"
  contact:
    name: ITCM
  license:
    name: SAP
  version: 1.0.0
externalDocs:
  description: Business Documentation Product Service Service
  url: https://help.sap.com/viewer/902b9d277dfe48fea582d28849d54935/CURRENT/en-US/4dcc92d0dcf84fe29ed6649fcfaf11d3.html
# servers:
# - url: https://{host}.{environment}.{domain}/v1
#   variables:
#     host:
#       default: api.dev1
#       description: Your host where SAP Intelligent Trade Claims Management has deployed
#     environment:
#       default: e2e
#       description: Your defined environment for your SAP Intelligent Trade Claims Management account
#     domain:
#       default: eurekacloud.io
security:
- OAuth2: []
tags:
- name: Product
paths:
  /products:
    post:
      tags:
      - Product
      summary: Create a new product
      operationId: createProduct
      description: Using this API, user can create a Product. As of now, batch creation is not supported
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      responses:
        '201':
          description: Success Created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseProductMessage'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseUnauthorizedMessage'
        '403':
          description: Forbidden (insufficient authorization).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseForbiddenMessage'
      deprecated: false
      security:
      - OAuth2: []
  /products/{externalId}:
    delete:
      tags:
      - Product
      summary: Delete a product
      description: Using this API, user can delete a particular Product using {externalId}
      operationId: deleteProduct
      parameters:
      - name: externalId
        in: path
        description: ExternalId
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDeleteMessage'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseUnauthorizedMessage'
        '403':
          description: Forbidden (insufficient authorization).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseForbiddenMessage'
        '404':
          description: Not Found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseNotFoundMessage'
      deprecated: false
      security:
      - OAuth2: []
components:
  schemas:
    ProductCodes:
      type: object
      properties:
        productCode:
          type: string
          minLength: 0
          maxLength: 40
          pattern: '[a-zA-Z0-9]*'
        productCodeTypeCode:
          type: string
          minLength: 0
          maxLength: 2
          pattern: '[a-zA-Z0-9]*'
      title: ProductCodes
    Product:
      type: object
      example:
        baseUnitOfMeasure: EA
        brand: testBrand
        businessSystem: 5279
        isMarkedForDeletion: false
        externalId: testId
        description:
        - description: test description
          languageKey: EN
        groupCode: testGroup
        externalHierarchyId: '000101278126'
        unitOfMeasureConversions:
        - quantityDenominator: 1
          quantityNumerator: 1
          productCodes:
          - productCode: testCode
            productCodeTypeCode: UPC
          measurementUnit: EA
      required:
      - baseUnitOfMeasure
      - externalId
      - description
      properties:
        baseUnitOfMeasure:
          type: string
        brand:
          type: string
          minLength: 0
          maxLength: 4
          pattern: '[a-zA-Z0-9/ ]*'
        businessSystem:
          type: integer
          format: int64
          minimum: 0
          maximum: 20
        isMarkedForDeletion:
          type: boolean
        externalId:
          type: string
          minLength: 0
          maxLength: 40
        description:
          type: array
          items:
            $ref: '#/components/schemas/ProductDescription'
        groupCode:
          type: string
          minLength: 0
          maxLength: 9
          pattern: '[ a-zA-Z0-9/ ]*'
        externalHierarchyId:
          type: string
          minLength: 0
          maxLength: 18
          pattern: '[a-zA-Z0-9/ ]*'
        unitOfMeasureConversions:
          type: array
          items:
            $ref: '#/components/schemas/ProductUnitOfMeasureConversion'
      title: Product
    ProductDescription:
      type: object
      properties:
        description:
          type: string
          pattern: '[ a-zA-Z0-9/.+!@#$%^&*()+\- ]*'
        languageKey:
          type: string
          minLength: 2
          maxLength: 2
          pattern: '[a-zA-Z0-9/ ]*'
      title: ProductDescription
    ProductUnitOfMeasureConversion:
      type: object
      required:
      - productCodes
      properties:
        quantityDenominator:
          type: integer
          format: int32
        quantityNumerator:
          type: integer
          format: int32
        productCodes:
          type: array
          items:
            $ref: '#/components/schemas/ProductCodes'
        measurementUnit:
          type: string
          pattern: '[a-zA-Z0-9]*'
      title: ProductUnitOfMeasureConversion
    ResponseDeleteMessage:
      title: Response Delete
      type: object
      example:
        message: Success Deleted
        timestamp: '2021-01-18T18:32:30.095Z'
      properties:
        message:
          type: string
        timestamp:
          type: string
          format: date-time
    ResponseMessage:
      type: object
      properties:
        error:
          type: string
        message:
          type: string
        timestamp:
          type: string
          format: date-time
        uri:
          type: string
      title: ResponseMessage
    ResponseNotFoundMessage:
      type: object
      example:
        message: There is no data found based on the given inputs.
        error: No Result Found
        timestamp: '2021-01-18T19:37:13.701+00:00'
      properties:
        message:
          type: string
        error:
          type: string
        timestamp:
          type: string
          format: date-time
      title: Not Found Message
    ResponseForbiddenMessage:
      type: object
      example:
        message: Access denied
        timestamp: '2021-01-18T18:33:18.914Z'
      properties:
        message:
          type: string
        timestamp:
          type: string
          format: date-time
        uri:
          type: string
      title: Forbidden Message
    ResponseUnauthorizedMessage:
      type: object
      example:
        message: Unauthorized/API key not found
        timestamp: '2021-01-18T18:33:18.914Z'
      properties:
        message:
          type: string
        timestamp:
          type: string
          format: date-time
        uri:
          type: string
      title: Unauthorized Message
    ResponseProductMessage:
      type: object
      example:
        message: Created Successfully
        timestamp: '2021-01-19T15:23:43.280+00:00'
        externalId: '620003'
      properties:
        externalid:
          type: string
        message:
          type: string
        timestamp:
          type: string
          format: date-time
      title: ResponseProductMessage
    ResponseProductDeleteMessage:
      type: object
      example:
        message: Success Deleted
        externalId: '620003'
        timestamp: '2021-01-18T18:32:30.095Z'
      properties:
        externalid:
          type: string
        message:
          type: string
        timestamp:
          type: string
          format: date-time
      title: ResponseProductDeletetMessage
  securitySchemes:
    OAuth2:
      type: oauth2
      description: To use this API, you need to get OAuth client credentials (client ID and secret) from SAP ITCM, and be authorized to use the relevant scope. Refer to the <a href="https://developer.sap.com/api-reference/authentication/getting-started.html">full authentication information</a> for more information.
      flows:
        clientCredentials:
          tokenUrl: https://colgate-dev1.authentication.us30.hana.ondemand.com/oauth/token
          scopes: {}
x-sap-shortText: The Product service represent the product that can be posted to, or deleted from SAP Intelligent Trade Claims Management by a user.
