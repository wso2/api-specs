openapi: 3.0.1
info:
  title: Text Analytics & Sentiment Analysis API | api.text2data.com
  description: >
    This is a generated connector for [Text Analytics & Sentiment Analysis API v3.4](http://api.text2data.com/swagger/ui/index#/) OpenAPI specification.
    
    The current api version is <b>v3.4</b></p><br><br><p>The api methods
    listed below can be called directly from this page to test the output. You might
    set the api_key to pre-authenticate all requests on this page (this will work
    if your secret is blank).</p><br><br> API endpoint URL: http://{apiName}.text2data.com/v3/
    {method}<br><br>The api can be consumed directly or using our SDK. Our Excel Add-In
    and Google Sheets Add-on are also using this api to process the data.'
  x-ballerina-init-description: >
    The connector initialization requires setting the API credentials.
    
    Create an [Interzoid Account](https://www.interzoid.com/register) 
    and obtain tokens by log into [Interzoid Account](https://www.interzoid.com/account).
  x-ballerina-display:
    label: Text2data
    iconPath: "icon.png"
  contact:
    name: text2data.com
    url: https://text2data.com/Integration
  license:
    name: See license
    url: https://text2data.com/License
  version: v3.4
  x-apisguru-categories:
  - text
  x-logo:
    url: https://twitter.com/Text2Data/profile_image?size=original
  x-origin:
  - format: swagger
    url: http://api.text2data.org/swagger/docs/v3.4
    version: "2.0"
  x-providerName: text2data.org
servers:
- url: http://api.text2data.org/
paths:
  /v3/Analyze:
    get:
      tags:
      - Analyze
      summary: Test api response without api key
      operationId: Analyze_Get
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentResult'
            text/json:
              schema:
                $ref: '#/components/schemas/DocumentResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/DocumentResult'
            text/xml:
              schema:
                $ref: '#/components/schemas/DocumentResult'
    post:
      tags:
      - Analyze
      summary: Sentiment analysis service
      description: "Sample request:\r\n            \r\n    POST /Analyze\r\n    {\r\
        \n       \"DocumentText\": \"Excellent location, opposite a very large mall\
        \ with wide variety of shops, restaurants and more.\",\r\n       \"PrivateKey\"\
        : \"your_api_key\",\r\n       \"Secret\": \"\"\r\n    }"
      operationId: Analyze_Post
      requestBody:
        description: Document payload in form of text, json or xml.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Document'
          text/json:
            schema:
              $ref: '#/components/schemas/Document'
          application/xml:
            schema:
              $ref: '#/components/schemas/Document'
          text/xml:
            schema:
              $ref: '#/components/schemas/Document'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentResult'
            text/json:
              schema:
                $ref: '#/components/schemas/DocumentResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/DocumentResult'
            text/xml:
              schema:
                $ref: '#/components/schemas/DocumentResult'
      x-codegen-request-body-name: requestDoc
  /v3/Categorize:
    get:
      tags:
      - Categorize
      summary: Test api response without api key
      operationId: Categorize_Get
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentResult'
            text/json:
              schema:
                $ref: '#/components/schemas/DocumentResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/DocumentResult'
            text/xml:
              schema:
                $ref: '#/components/schemas/DocumentResult'
    post:
      tags:
      - Categorize
      summary: Document categorization service
      description: "Sample request:\r\n            \r\n    POST /Categorize\r\n  \
        \  {\r\n       \"DocumentText\": \"Excellent location, opposite a very large\
        \ mall with wide variety of shops, restaurants and more.\",\r\n       \"PrivateKey\"\
        : \"your_api_key\",\r\n       \"UserCategoryModelName\": \"your_model_name\"\
        ,\r\n       \"Secret\": \"\"\r\n    }"
      operationId: Categorize_Post
      requestBody:
        description: Document payload in form of text, json or xml.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Document'
          text/json:
            schema:
              $ref: '#/components/schemas/Document'
          application/xml:
            schema:
              $ref: '#/components/schemas/Document'
          text/xml:
            schema:
              $ref: '#/components/schemas/Document'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentResult'
            text/json:
              schema:
                $ref: '#/components/schemas/DocumentResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/DocumentResult'
            text/xml:
              schema:
                $ref: '#/components/schemas/DocumentResult'
      x-codegen-request-body-name: requestDoc
  /v3/Extract:
    get:
      tags:
      - Extract
      summary: Test api response without api key
      operationId: Extract_Get
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentResult'
            text/json:
              schema:
                $ref: '#/components/schemas/DocumentResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/DocumentResult'
            text/xml:
              schema:
                $ref: '#/components/schemas/DocumentResult'
    post:
      tags:
      - Extract
      summary: Document extraction service
      description: "Sample request:\r\n            \r\n    POST /Extract\r\n    {\r\
        \n       \"DocumentText\": \"Excellent location, opposite a very large mall\
        \ with wide variety of shops, restaurants and more.\",\r\n       \"PrivateKey\"\
        : \"your_api_key\",\r\n       \"UserCategoryModelName\": \"your_model_name\"\
        ,\r\n       \"Secret\": \"\"\r\n    }"
      operationId: Extract_Post
      requestBody:
        description: Document payload in form of text, json or xml.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Document'
          text/json:
            schema:
              $ref: '#/components/schemas/Document'
          application/xml:
            schema:
              $ref: '#/components/schemas/Document'
          text/xml:
            schema:
              $ref: '#/components/schemas/Document'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentResult'
            text/json:
              schema:
                $ref: '#/components/schemas/DocumentResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/DocumentResult'
            text/xml:
              schema:
                $ref: '#/components/schemas/DocumentResult'
      x-codegen-request-body-name: requestDoc
components:
  schemas:
    ApiConfig:
      type: object
      properties:
        APIPrivateKey:
          type: string
        APISecret:
          type: string
        BlacklistedWords:
          type: array
          items:
            type: string
        ErrorMessage:
          type: string
        IsRequestStatusOK:
          type: boolean
    Category:
      type: object
      properties:
        CategoryName:
          type: string
        Score:
          type: number
          format: double
    Document:
      required:
      - DocumentText
      - PrivateKey
      type: object
      properties:
        DocumentLanguage:
          type: string
        DocumentText:
          type: string
        IsTwitterContent:
          type: boolean
        PrivateKey:
          type: string
        RequestIdentifier:
          type: string
        Secret:
          type: string
        SerializeFormat:
          type: integer
          format: int32
        UserCategoryModelName:
          type: string
    DocumentResult:
      type: object
      properties:
        AutoCategories:
          type: array
          items:
            $ref: '#/components/schemas/Category'
        Citations:
          type: array
          items:
            $ref: '#/components/schemas/SentencePart'
        CloudTagHTML:
          type: string
        CoreSentences:
          type: array
          items:
            $ref: '#/components/schemas/Sentence'
        DetectedLanguage:
          type: string
        DocSentimentPolarity:
          type: string
        DocSentimentResultString:
          type: string
        DocSentimentValue:
          type: number
          format: double
        Entities:
          type: array
          items:
            $ref: '#/components/schemas/SentencePart'
        ErrorMessage:
          type: string
        Keywords:
          type: array
          items:
            $ref: '#/components/schemas/SentencePart'
        Magnitude:
          type: number
          format: double
        PartsOfSpeech:
          type: array
          items:
            $ref: '#/components/schemas/PartOfSpeech'
        ResultTextHtml:
          type: string
        SlangWords:
          type: array
          items:
            $ref: '#/components/schemas/SlangWord'
        Status:
          type: integer
          format: int32
        StorageInfo:
          $ref: '#/components/schemas/StorageInfo'
        Subjectivity:
          type: string
        SwearWords:
          type: array
          items:
            $ref: '#/components/schemas/SlangWord'
        Themes:
          type: array
          items:
            $ref: '#/components/schemas/SentencePart'
        Timestamp:
          type: integer
          format: int64
        TransactionCurrentDay:
          type: integer
          format: int32
        TransactionDailyLimit:
          type: integer
          format: int32
        TransactionTotalCreditsLeft:
          type: integer
          format: int32
        TransactionUseByDate:
          type: string
          format: date-time
        UserCategories:
          type: array
          items:
            $ref: '#/components/schemas/Category'
    PartOfSpeech:
      type: object
      properties:
        Action:
          type: string
        Object:
          type: string
        ObjectSentimentPolarity:
          type: string
        ObjectSentimentResultString:
          type: string
        ObjectSentimentValue:
          type: number
          format: double
        Subject:
          type: string
        Text:
          type: string
    Sentence:
      type: object
      properties:
        Magnitude:
          type: number
          format: double
        SentenceNumber:
          type: integer
          format: int32
        SentimentPolarity:
          type: string
        SentimentResultString:
          type: string
        SentimentValue:
          type: number
          format: double
        Text:
          type: string
    SentencePart:
      type: object
      properties:
        KeywordType:
          type: string
        Magnitude:
          type: number
          format: double
        Mentions:
          type: integer
          format: int32
        SentencePartType:
          type: string
        SentenceText:
          type: string
        SentimentPolarity:
          type: string
        SentimentResult:
          type: string
        SentimentValue:
          type: number
          format: double
        Text:
          type: string
    SlangWord:
      type: object
      properties:
        SlangWordText:
          type: string
        SlangWordTranslation:
          type: string
    StorageInfo:
      type: object
      properties:
        CreateDate:
          type: string
          format: date-time
        DocumentText:
          type: string
        IP:
          type: string
        IsExcel:
          type: boolean
        IsGSExcel:
          type: boolean
        IsTwitterMode:
          type: boolean
        PrivateKey:
          type: string
        RequestIdentifier:
          type: string
        UserCategoryModelName:
          type: string
  securitySchemes:
    PrivateKey:
      type: apiKey
      description: >
        All requests on this API needs to include an API key. 

        The API key can be provided as part of the query string or as a request header. The name of the API key needs to be `PrivateKey`.
      name: PrivateKey
      in: query