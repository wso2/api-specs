openapi: 3.0.1
info:
  title: AvaTax API
  description: >
    This is a generated connector for [Avalara AvaTax API v2](https://developer.avalara.com/api-reference/avatax/rest/v2/) OpenAPI specification.

    Avalara AvaTax is sales tax software that automates tax calculations and the tax filing process.
  x-ballerina-init-description: >
    The connector initialization requires setting the API credentials. 
 
    Create an [Avalara account](https://buy.avalara.com/signup) and obtain tokens following [this guide](https://developer.avalara.com/avatax/).
  x-ballerina-display:
    label: AvaTax
    iconPath: "icon.png"
  contact:
    name: Avalara Developer Community
    url: https://community.avalara.com
  license:
    name: Terms of Use
    url: https://www.avalara.com/terms-of-use/
  version: v2
servers:
- url: /
paths:
  /api/v2/accounts:
    get:
      tags:
      - Accounts
      summary: Retrieve all accounts
      description: "List all account objects that can be seen by the current user.\r\
        \n            \r\nThis API lists all accounts you are allowed to see.  In\
        \ general, most users will only be able to see their own account.\r\n    \
        \        \r\nSearch for specific objects using the criteria in the `$filter`\
        \ parameter; full documentation is available on [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/)\
        \ .\r\nPaginate your results using the `$top`, `$skip`, and `$orderby` parameters.\r\
        \nYou may specify one or more of the following values in the `$include` parameter\
        \ to fetch additional nested data, using commas to separate multiple values:\r\
        \n            \r\n* Subscriptions\r\n* Users\r\n            \r\nFor more information\
        \ about filtering in REST, please see the documentation at http://developer.avalara.com/avatax/filtering-in-rest/\
        \ .\n\n### Security Policies\n\n* This API requires one of the following user\
        \ roles: AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, Compliance\
        \ Root User, ComplianceAdmin, ComplianceUser, CSPAdmin, CSPTester, FirmAdmin,\
        \ FirmUser, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin,\
        \ TechnicalSupportUser, TreasuryAdmin, TreasuryUser.\n"
      operationId: QueryAccounts
      parameters:
      - name: $include
        in: query
        description: A comma separated list of objects to fetch underneath this account.  Any
          object with a URL path underneath this account can be fetched by specifying
          its name.
        schema:
          type: string
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br
          />*Not filterable:* subscriptions, users
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountModelFetchResult'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
    post:
      tags:
      - Registrar
      summary: Create a new account
      description: "# For Registrar Use Only\r\nThis API is for use by Avalara Registrar\
        \ administrative users only.\r\n            \r\nCreate a single new account\
        \ object.\r\nWhen creating an account object you may attach subscriptions\
        \ and users as part of the 'Create' call.\n\n### Security Policies\n\n* This\
        \ API requires one of the following user roles: FirmAdmin, Registrar, SiteAdmin,\
        \ SSTAdmin, SystemAdmin, TechnicalSupportAdmin.\n"
      operationId: CreateAccount
      parameters:
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        description: The account you wish to create.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AccountModel'
          application/json:
            schema:
              $ref: '#/components/schemas/AccountModel'
          text/json:
            schema:
              $ref: '#/components/schemas/AccountModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AccountModel'
        required: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
  /api/v2/accounts/{id}:
    get:
      tags:
      - Accounts
      summary: Retrieve a single account
      description: "Get the account object identified by this URL.\r\nYou may use\
        \ the '$include' parameter to fetch additional nested data:\r\n          \
        \  \r\n* Subscriptions\r\n* Users\n\n### Security Policies\n\n* This API requires\
        \ one of the following user roles: AccountAdmin, AccountUser, CompanyAdmin,\
        \ CompanyUser, Compliance Root User, ComplianceAdmin, ComplianceUser, CSPAdmin,\
        \ CSPTester, FirmAdmin, FirmUser, Registrar, SiteAdmin, SSTAdmin, SystemAdmin,\
        \ TechnicalSupportAdmin, TechnicalSupportUser, TreasuryAdmin, TreasuryUser.\n"
      operationId: GetAccount
      parameters:
      - name: id
        in: path
        description: The ID of the account to retrieve
        required: true
        schema:
          type: integer
          format: int32
      - name: $include
        in: query
        description: A comma separated list of special fetch options
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
    put:
      tags:
      - Registrar
      summary: Update a single account
      description: "# For Registrar Use Only\r\nThis API is for use by Avalara Registrar\
        \ administrative users only.\r\n            \r\nReplace an existing account\
        \ object with an updated account object.\n\n### Security Policies\n\n* This\
        \ API requires one of the following user roles: FirmAdmin, Registrar, SiteAdmin,\
        \ SSTAdmin, SystemAdmin, TechnicalSupportAdmin.\n"
      operationId: UpdateAccount
      parameters:
      - name: id
        in: path
        description: The ID of the account you wish to update.
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        description: The account object you wish to update.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AccountModel'
          application/json:
            schema:
              $ref: '#/components/schemas/AccountModel'
          text/json:
            schema:
              $ref: '#/components/schemas/AccountModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AccountModel'
        required: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
    delete:
      tags:
      - Registrar
      summary: Delete a single account
      description: "# For Registrar Use Only\r\nThis API is for use by Avalara Registrar\
        \ administrative users only.\r\n            \r\nDelete an account.\r\nDeleting\
        \ an account will delete all companies, all account level users and license\
        \ keys attached to this account.\n\n### Security Policies\n\n* This API requires\
        \ the user role SystemAdmin.\n"
      operationId: DeleteAccount
      parameters:
      - name: id
        in: path
        description: The ID of the account you wish to delete.
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorDetail'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/accounts/{id}/activate:
    post:
      tags:
      - Accounts
      summary: Activate an account by accepting terms and conditions
      description: "Activate the account specified by the unique accountId number.\r\
        \n            \r\nThis activation request can only be called by account administrators.\
        \  You must indicate\r\nthat you have read and accepted Avalara's terms and\
        \ conditions to call this API.\r\n            \r\nOnce you have activated\
        \ your account, use the `AccountResetLicenseKey` API to generate\r\na license\
        \ key for your account.\r\n            \r\nIf you have not read or accepted\
        \ the terms and conditions, this API call will return the\r\nunchanged account\
        \ model.\n\n### Security Policies\n\n* This API requires one of the following\
        \ user roles: AccountAdmin, FirmAdmin, Registrar, SiteAdmin, SSTAdmin, SystemAdmin,\
        \ TechnicalSupportAdmin.\n"
      operationId: ActivateAccount
      parameters:
      - name: id
        in: path
        description: The ID of the account to activate
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        description: The activation request
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ActivateAccountModel'
          application/json:
            schema:
              $ref: '#/components/schemas/ActivateAccountModel'
          text/json:
            schema:
              $ref: '#/components/schemas/ActivateAccountModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ActivateAccountModel'
        required: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
  /api/v2/accounts/{id}/audit:
    get:
      tags:
      - Accounts
      summary: Retrieve audit history for an account.
      description: "Retrieve audit trace history for an account.\r\n            \r\
        \nYour audit trace history contains a record of all API calls made against\
        \ the AvaTax REST API that returned an error.   You can use this API to investigate\r\
        \nproblems and see exactly what information was sent back and forth between\
        \ your code and AvaTax.\r\n            \r\nWhen specifying a start and end\
        \ datetime, please include a valid timezone indicator, such as the \"Z\" present\
        \ in the examples for the start and end query parameters.\r\nYou can learn\
        \ more about valid time zone designators at https://en.wikipedia.org/wiki/ISO_8601#Time_zone_designators.\r\
        \n            \r\nThis API enforces limits to the amount of data retrieved.\
        \ These limits are subject to change.\r\n            \r\n* You may request\
        \ data from a maximum of a one-hour time period.\r\n* The amount of data and\
        \ number of API calls returned by this API are limited and may be adjusted\
        \ at any time.\r\n* Old records may be migrated out of immediately available\
        \ storage.  To request older data, please contact your account manager.\r\n\
        * New records must migrate to available storage before they can be retrieved.\
        \  You may need to wait a period of time before newly created records can\
        \ be fetched.\n\n### Security Policies\n\n* This API requires one of the following\
        \ user roles: AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, Compliance\
        \ Root User, ComplianceAdmin, ComplianceUser, CSPAdmin, CSPTester, FirmAdmin,\
        \ FirmUser, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin,\
        \ TechnicalSupportUser, TreasuryAdmin, TreasuryUser.\n"
      operationId: AuditAccount
      parameters:
      - name: id
        in: path
        description: The ID of the account you wish to audit.
        required: true
        schema:
          type: integer
          format: int32
      - name: start
        in: query
        description: The start datetime of audit history you with to retrieve, e.g.
          "2018-06-08T17:00:00Z". Defaults to the past 15 minutes.
        schema:
          type: string
          format: date-time
      - name: end
        in: query
        description: The end datetime of audit history you with to retrieve, e.g.
          "2018-06-08T17:15:00Z. Defaults to the current time. Maximum of an hour
          after the start time.
        schema:
          type: string
          format: date-time
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
          default: 10
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
          default: 0
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditModelFetchResult'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/accounts/{id}/configuration:
    get:
      tags:
      - Accounts
      summary: Get configuration settings for this account
      description: "Retrieve a list of all configuration settings tied to this account.\r\
        \n            \r\nConfiguration settings provide you with the ability to control\
        \ features of your account and of your\r\ntax software.  The category names\
        \ `TaxServiceConfig` and `AddressServiceConfig` are reserved for\r\nAvalara\
        \ internal software configuration values; to store your own account-level\
        \ settings, please\r\ncreate a new category name that begins with `X-`, for\
        \ example, `X-MyCustomCategory`.\r\n            \r\nAccount settings are permanent\
        \ settings that cannot be deleted.  You can set the value of an\r\naccount\
        \ setting to null if desired.\r\n            \r\nAvalara-based account settings\
        \ for `TaxServiceConfig` and `AddressServiceConfig` affect your account's\r\
        \ntax calculation and address resolution, and should only be changed with\
        \ care.\n\n### Security Policies\n\n* This API requires one of the following\
        \ user roles: AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, CSPAdmin,\
        \ CSPTester, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n"
      operationId: GetAccountConfiguration
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountConfigurationModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
    post:
      tags:
      - Accounts
      summary: Change configuration settings for this account
      description: "Update configuration settings tied to this account.\r\n      \
        \      \r\nConfiguration settings provide you with the ability to control\
        \ features of your account and of your\r\ntax software.  The category names\
        \ `TaxServiceConfig` and `AddressServiceConfig` are reserved for\r\nAvalara\
        \ internal software configuration values; to store your own account-level\
        \ settings, please\r\ncreate a new category name that begins with `X-`, for\
        \ example, `X-MyCustomCategory`.\r\n            \r\nAccount settings are permanent\
        \ settings that cannot be deleted.  You can set the value of an\r\naccount\
        \ setting to null if desired.\r\n            \r\nAvalara-based account settings\
        \ for `TaxServiceConfig` and `AddressServiceConfig` affect your account's\r\
        \ntax calculation and address resolution, and should only be changed with\
        \ care.\n\n### Security Policies\n\n* This API requires one of the following\
        \ user roles: AccountAdmin, CSPTester, SSTAdmin, TechnicalSupportAdmin.\n"
      operationId: SetAccountConfiguration
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AccountConfigurationModel'
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AccountConfigurationModel'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AccountConfigurationModel'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AccountConfigurationModel'
        required: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountConfigurationModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
  /api/v2/accounts/{id}/licensekey:
    post:
      tags:
      - Accounts
      summary: Create license key for this account
      description: "Creates a new license key for this account.\r\n            \r\n\
        To create a license key for your account, you must specify the ID of the account\
        \ and license key name.\r\n            \r\nThis API is only available to account\
        \ administrators for the account in question, and may only be called after\r\
        \nan account has been activated by reading and accepting Avalara's terms and\
        \ conditions.  To activate your account\r\nplease log onto the AvaTax website\
        \ or call the `ActivateAccount` API.\r\n            \r\nYou will reference\
        \ this key using license key name. The existing license key will be using\
        \ 'Default' as license key name.\r\nHence make sure that the license key name\
        \ is unique per account considering the existing license key name 'Default'\n\
        \n### Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin.\n"
      operationId: CreateLicenseKey
      parameters:
      - name: id
        in: path
        description: The ID of the account you wish to update.
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AccountLicenseKeyModel'
          application/json:
            schema:
              $ref: '#/components/schemas/AccountLicenseKeyModel'
          text/json:
            schema:
              $ref: '#/components/schemas/AccountLicenseKeyModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AccountLicenseKeyModel'
        required: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LicenseKeyModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
  /api/v2/accounts/{id}/licensekey/{licensekeyname}:
    get:
      tags:
      - Accounts
      summary: Retrieve license key by license key name
      description: |2


        ### Security Policies

        * This API requires one of the following user roles: AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, Compliance Root User, ComplianceAdmin, ComplianceUser, CSPAdmin, CSPTester, FirmAdmin, FirmUser, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser, TreasuryAdmin, TreasuryUser.
      operationId: GetLicenseKey
      parameters:
      - name: id
        in: path
        description: The ID of the account to retrieve
        required: true
        schema:
          type: integer
          format: int32
      - name: licensekeyname
        in: path
        description: The ID of the account to retrieve
        required: true
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountLicenseKeyModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
    delete:
      tags:
      - Accounts
      summary: Delete license key for this account by license key name
      description: "Deletes the license key for this account using license key name.\r\
        \n            \r\nTo delete a license key for your account, you must specify\
        \ the accountID of the account and license key name.\r\n            \r\nThis\
        \ API is only available to account administrators for the account in question.\n\
        \n### Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin.\n"
      operationId: DeleteLicenseKey
      parameters:
      - name: id
        in: path
        description: The ID of the account you wish to update.
        required: true
        schema:
          type: integer
          format: int32
      - name: licensekeyname
        in: path
        description: The license key name you wish to update.
        required: true
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorDetail'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/accounts/{id}/licensekeys:
    get:
      tags:
      - Accounts
      summary: Retrieve all license keys for this account
      description: |
        Gets list of all the license keys used by the account.

        ### Security Policies

        * This API requires one of the following user roles: AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, Compliance Root User, ComplianceAdmin, ComplianceUser, CSPAdmin, CSPTester, FirmAdmin, FirmUser, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser, TreasuryAdmin, TreasuryUser.
      operationId: GetLicenseKeys
      parameters:
      - name: id
        in: path
        description: The ID of the account to retrieve
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountLicenseKeyModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/accounts/{id}/resetlicensekey:
    post:
      tags:
      - Accounts
      summary: Reset this account's license key
      description: "Resets the existing license key for this account to a new key.\r\
        \n            \r\nTo reset your account, you must specify the ID of the account\
        \ you wish to reset and confirm the action.\r\n            \r\nThis API is\
        \ only available to account administrators for the account in question, and\
        \ may only be called after\r\nan account has been activated by reading and\
        \ accepting Avalara's terms and conditions.  To activate your account\r\n\
        please log onto the AvaTax website or call the `ActivateAccount` API.\r\n\
        \            \r\nYou can only reset license with 'Default' license key name.\
        \ \r\nResetting a license key cannot be undone.  Any previous license keys\
        \ will immediately cease to work when a new key is created.\r\n          \
        \  \r\nWhen you call this API, all account administrators for this account\
        \ will receive an email with the newly updated license key.\r\nThe email will\
        \ specify which user reset the license key and it will contain the new key\
        \ to use to update your connectors.\r\nNote: The reset license key functionality\
        \ will only be available for existing active license key i.e. when you reset\
        \ license key for the account, the Default license key will be reset.The reset\
        \ license key functionality is not available for newly created license keys\
        \ i.e. license keys other than Default\n\n### Security Policies\n\n* This\
        \ API requires one of the following user roles: AccountAdmin, Registrar, SiteAdmin,\
        \ SSTAdmin, SystemAdmin, TechnicalSupportAdmin.\n"
      operationId: AccountResetLicenseKey
      parameters:
      - name: id
        in: path
        description: The ID of the account you wish to update.
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        description: A request confirming that you wish to reset the license key of
          this account.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ResetLicenseKeyModel'
          application/json:
            schema:
              $ref: '#/components/schemas/ResetLicenseKeyModel'
          text/json:
            schema:
              $ref: '#/components/schemas/ResetLicenseKeyModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ResetLicenseKeyModel'
        required: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LicenseKeyModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
  /api/v2/addresses/resolve:
    get:
      tags:
      - Addresses
      summary: Retrieve geolocation information for a specified address
      description: "Resolve an address against Avalara's address-validation system.\
        \  If the address can be resolved, this API\r\nprovides the latitude and longitude\
        \ of the resolved location.  The value 'resolutionQuality' can be used\r\n\
        to identify how closely this address can be located.  If the address cannot\
        \ be clearly located, use the\r\n'messages' structure to learn more about\
        \ problems with this address.\r\nThis is the same API as the POST /api/v2/addresses/resolve\
        \ endpoint.\r\nBoth verbs are supported to provide for flexible implementation.\r\
        \n            \r\nIn order to get any evaluation for an address, please provide\
        \ at least one of the following fields/pairs:\r\n1. postal code\r\n2. line1\
        \ + city + region\r\n3. line1 + postal code\n\n### Security Policies\n\n*\
        \ This API requires one of the following user roles: AccountAdmin, AccountOperator,\
        \ AccountUser, CompanyAdmin, CompanyUser, CSPTester, SSTAdmin, TechnicalSupportAdmin,\
        \ TechnicalSupportUser.\n* This API depends on the following active services:*Required*\
        \ (all):  AutoAddress.\n"
      operationId: ResolveAddress
      parameters:
      - name: line1
        in: query
        description: Line 1
        schema:
          type: string
      - name: line2
        in: query
        description: Line 2
        schema:
          type: string
      - name: line3
        in: query
        description: Line 3
        schema:
          type: string
      - name: city
        in: query
        description: City
        schema:
          type: string
      - name: region
        in: query
        description: State / Province / Region
        schema:
          type: string
      - name: postalCode
        in: query
        description: Postal Code / Zip Code
        schema:
          type: string
      - name: country
        in: query
        description: Two character ISO 3166 Country Code (see /api/v2/definitions/countries
          for a full list)
        schema:
          type: string
      - name: textCase
        in: query
        description: selectable text case for address validation
        schema:
          type: string
          enum:
          - Upper
          - Mixed
          x-enum-metadata:
            name: TextCase
            values:
            - name: Upper
              value: 0
            - name: Mixed
              value: 1
        x-enum-metadata:
          name: TextCase
          values:
          - name: Upper
            value: 0
          - name: Mixed
            value: 1
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressResolutionModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
    post:
      tags:
      - Addresses
      summary: Retrieve geolocation information for a specified address
      description: "Resolve an address against Avalara's address-validation system.\
        \  If the address can be resolved, this API\r\nprovides the latitude and longitude\
        \ of the resolved location.  The value 'resolutionQuality' can be used\r\n\
        to identify how closely this address can be located.  If the address cannot\
        \ be clearly located, use the\r\n'messages' structure to learn more about\
        \ problems with this address.\r\nThis is the same API as the GET /api/v2/addresses/resolve\
        \ endpoint.\r\nBoth verbs are supported to provide for flexible implementation.\n\
        \n### Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, CSPTester,\
        \ SSTAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n* This API depends\
        \ on the following active services:*Required* (all):  AutoAddress.\n"
      operationId: ResolveAddressPost
      parameters:
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        description: The address to resolve
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AddressValidationInfo'
          application/json:
            schema:
              $ref: '#/components/schemas/AddressValidationInfo'
          text/json:
            schema:
              $ref: '#/components/schemas/AddressValidationInfo'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AddressValidationInfo'
        required: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressResolutionModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
  /api/v2/advancedrules/accounts/{accountId}/companies/{companyId}/lookupFiles:
    get:
      tags:
      - AdvancedRules
      summary: Get the lookup files for a company
      operationId: GetCompanyLookupFiles
      parameters:
      - name: accountId
        in: path
        description: The account ID for the company
        required: true
        schema:
          type: integer
          format: int32
      - name: companyId
        in: path
        description: The ID of the company for which to retrieve lookup files
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvancedRuleLookupFileModelFetchResult'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
    post:
      tags:
      - AdvancedRules
      summary: Create a lookup file for a company
      operationId: CreateCompanyLookupFile
      parameters:
      - name: accountId
        in: path
        description: The ID of the account for the company
        required: true
        schema:
          type: integer
          format: int32
      - name: companyId
        in: path
        description: The ID of the company for which the lookup file is to be created
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        description: The lookup file you wish to create
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AdvancedRuleLookupFileModel'
          application/json:
            schema:
              $ref: '#/components/schemas/AdvancedRuleLookupFileModel'
          text/json:
            schema:
              $ref: '#/components/schemas/AdvancedRuleLookupFileModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AdvancedRuleLookupFileModel'
        required: false
      responses:
        201:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvancedRuleLookupFileModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
  /api/v2/advancedrules/accounts/{accountId}/lookupFiles/{id}:
    get:
      tags:
      - AdvancedRules
      summary: Get a lookup file for an accountId and companyLookupFileId
      operationId: GetLookupFile
      parameters:
      - name: accountId
        in: path
        description: The ID of the account for the lookup file
        required: true
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: The unique ID/GUID of the company lookup file to return
        required: true
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvancedRuleLookupFileModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
    put:
      tags:
      - AdvancedRules
      summary: Update a lookup file
      operationId: UpdateLookupFile
      parameters:
      - name: accountId
        in: path
        description: The ID of the account for the company the lookup file is for
        required: true
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: The unique ID/GUID of the company lookup file to be updated
        required: true
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        description: The new values to update the lookup file
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AdvancedRuleLookupFileModel'
          application/json:
            schema:
              $ref: '#/components/schemas/AdvancedRuleLookupFileModel'
          text/json:
            schema:
              $ref: '#/components/schemas/AdvancedRuleLookupFileModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AdvancedRuleLookupFileModel'
        required: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvancedRuleLookupFileModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
    delete:
      tags:
      - AdvancedRules
      summary: Delete a lookup file
      operationId: DeleteLookupFile
      parameters:
      - name: accountId
        in: path
        description: The ID of the account for the company the lookup file is for
        required: true
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: The unique ID/GUID for the company lookup file to be deleted
        required: true
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorDetail'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/avafileforms:
    get:
      tags:
      - AvaFileForms
      summary: Retrieve all AvaFileForms
      description: "Search for specific objects using the criteria in the `$filter`\
        \ parameter; full documentation is available on [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/)\
        \ .\r\nPaginate your results using the `$top`, `$skip`, and `$orderby` parameters.\n\
        \n### Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, AccountOperator, CompanyAdmin, CompanyUser, Compliance Root\
        \ User, Compliance Temp User, ComplianceAdmin, ComplianceUser, FirmAdmin,\
        \ FirmUser, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser, TreasuryAdmin.\n\
        * This API depends on the following active services:*Returns* (at least one\
        \ of):  Mrs, MRSComplianceManager, AvaTaxCsp.*Firm Managed* (for accounts\
        \ managed by a firm):  ARA, ARAManaged.\n"
      operationId: QueryAvaFileForms
      parameters:
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br
          />*Not filterable:* outletTypeId
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvaFileFormModelFetchResult'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
    post:
      tags:
      - AvaFileForms
      summary: Create a new AvaFileForm
      description: "Create one or more AvaFileForms\r\nA 'AvaFileForm' represents\
        \ a form supported by our returns team\n\n### Security Policies\n\n* This\
        \ API requires the user role Compliance Root User.\n* This API depends on\
        \ the following active services:*Returns* (at least one of):  Mrs, MRSComplianceManager,\
        \ AvaTaxCsp.*Firm Managed* (for accounts managed by a firm):  ARA, ARAManaged.\n"
      operationId: CreateAvaFileForms
      parameters:
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        description: The AvaFileForm you wish to create.
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AvaFileFormModel'
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AvaFileFormModel'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AvaFileFormModel'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AvaFileFormModel'
        required: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AvaFileFormModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
  /api/v2/avafileforms/{id}:
    get:
      tags:
      - AvaFileForms
      summary: Retrieve a single AvaFileForm
      description: |
        Get the AvaFileForm object identified by this URL.

        ### Security Policies

        * This API requires one of the following user roles: AccountAdmin, AccountOperator, CompanyAdmin, CompanyUser, Compliance Root User, Compliance Temp User, ComplianceAdmin, ComplianceUser, FirmAdmin, FirmUser, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser, TreasuryAdmin.
        * This API depends on the following active services:*Returns* (at least one of):  Mrs, MRSComplianceManager, AvaTaxCsp.*Firm Managed* (for accounts managed by a firm):  ARA, ARAManaged.
      operationId: GetAvaFileForm
      parameters:
      - name: id
        in: path
        description: The primary key of this AvaFileForm
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvaFileFormModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
    put:
      tags:
      - AvaFileForms
      summary: Update a AvaFileForm
      description: "All data from the existing object will be replaced with data in\
        \ the object you PUT.\r\nTo set a field's value to null, you may either set\
        \ its value to null or omit that field from the object you post.\n\n### Security\
        \ Policies\n\n* This API requires the user role Compliance Root User.\n* This\
        \ API depends on the following active services:*Returns* (at least one of):\
        \  Mrs, MRSComplianceManager, AvaTaxCsp.*Firm Managed* (for accounts managed\
        \ by a firm):  ARA, ARAManaged.\n"
      operationId: UpdateAvaFileForm
      parameters:
      - name: id
        in: path
        description: The ID of the AvaFileForm you wish to update
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        description: The AvaFileForm model you wish to update.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AvaFileFormModel'
          application/json:
            schema:
              $ref: '#/components/schemas/AvaFileFormModel'
          text/json:
            schema:
              $ref: '#/components/schemas/AvaFileFormModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AvaFileFormModel'
        required: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvaFileFormModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
    delete:
      tags:
      - AvaFileForms
      summary: Delete a single AvaFileForm
      description: |
        Marks the existing AvaFileForm object at this URL as deleted.

        ### Security Policies

        * This API requires one of the following user roles: Compliance Root User, ComplianceUser, FirmAdmin.
        * This API depends on the following active services:*Returns* (at least one of):  Mrs, MRSComplianceManager, AvaTaxCsp.*Firm Managed* (for accounts managed by a firm):  ARA, ARAManaged.
      operationId: DeleteAvaFileForm
      parameters:
      - name: id
        in: path
        description: The ID of the AvaFileForm you wish to delete.
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorDetail'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/batches:
    get:
      tags:
      - Batches
      summary: Retrieve all batches
      description: "Get multiple batch objects across all companies.\r\n         \
        \   \r\nA batch object is a large collection of API calls stored in a compact\
        \ file.\r\n            \r\nSearch for specific objects using the criteria\
        \ in the `$filter` parameter;\r\nfull documentation is available on [Filtering\
        \ in REST](http://developer.avalara.com/avatax/filtering-in-rest/) .\r\nPaginate\
        \ results using the `$top`, `$skip`, and `$orderby` parameters.\r\n      \
        \      \r\nWhen a batch is created, it is added to the AvaTax Batch Queue\
        \ and will be\r\nprocessed as quickly as possible in the order it was received.\
        \ To check the\r\nstatus of a batch, fetch the batch and retrieve the results\
        \ of the batch\r\noperation.\r\n            \r\nBecause the batch system processes\
        \ with a degree of concurrency, and\r\nbecause of batch sizes in the queue\
        \ vary, AvaTax API is unable to accurately\r\npredict when a batch will complete.\
        \ If high performance processing is\r\nrequired, please use the\r\n[CreateTransaction\
        \ API](https://developer.avalara.com/api-reference/avatax/rest/v2/methods/Transactions/CreateTransaction/).\n\
        \n### Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, CSPAdmin,\
        \ CSPTester, SiteAdmin, SSTAdmin, SystemAdmin, SystemOperator, TechnicalSupportAdmin,\
        \ TechnicalSupportUser.\n"
      operationId: QueryBatches
      parameters:
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br
          />*Not filterable:* files
        schema:
          type: string
      - name: $include
        in: query
        description: A comma separated list of additional data to retrieve.
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchModelFetchResult'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/companies/{companyId}/batches:
    get:
      tags:
      - Batches
      summary: Retrieve all batches for this company
      description: "List all batch objects attached to the specified company.\r\n\
        \            \r\nA batch object is a large collection of API calls stored\
        \ in a compact file.\r\n            \r\nSearch for specific objects using\
        \ the criteria in the `$filter` parameter;\r\nfull documentation is available\
        \ on [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/)\
        \ .\r\nPaginate results using the `$top`, `$skip`, and `$orderby` parameters.\r\
        \n            \r\nUse [GetBatch](https://developer.avalara.com/api-reference/avatax/rest/v2/methods/Batches/GetBatch/)\r\
        \nto retrieve the results, or check the status, of an individual batch.\r\n\
        \            \r\nWhen a batch is created, it is added to the AvaTax Batch\
        \ Queue and will be\r\nprocessed as quickly as possible in the order it was\
        \ received. To check the\r\nstatus of a batch, fetch the batch and retrieve\
        \ the results of the batch\r\noperation.\r\n            \r\nBecause the batch\
        \ system processes with a degree of concurrency, and\r\nbecause of batch sizes\
        \ in the queue vary, AvaTax API is unable to accurately\r\npredict when a\
        \ batch will complete. If high performance processing is\r\nrequired, please\
        \ use the\r\n[CreateTransaction API](https://developer.avalara.com/api-reference/avatax/rest/v2/methods/Transactions/CreateTransaction/).\n\
        \n### Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, CSPAdmin,\
        \ CSPTester, SiteAdmin, SSTAdmin, SystemAdmin, SystemOperator, TechnicalSupportAdmin,\
        \ TechnicalSupportUser.\n"
      operationId: ListBatchesByCompany
      parameters:
      - name: companyId
        in: path
        description: The ID of the company that owns these batches
        required: true
        schema:
          type: integer
          format: int32
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br
          />*Not filterable:* files
        schema:
          type: string
      - name: $include
        in: query
        description: A comma separated list of additional data to retrieve.
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchModelFetchResult'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
    post:
      tags:
      - Batches
      summary: Create a new batch
      description: "Create one or more new batch objects attached to this company.\r\
        \n            \r\nEach batch object may have one or more file objects (currently\
        \ only one file is supported).\r\n            \r\nWhen a batch is created,\
        \ it is added to the AvaTax Batch Queue and will be\r\nprocessed as quickly\
        \ as possible in the order it was received. To check the\r\nstatus of a batch,\
        \ fetch the batch and retrieve the results of the batch\r\noperation.\r\n\
        \            \r\nBecause the batch system processes with a degree of concurrency,\
        \ and\r\nbecause of batch sizes in the queue vary, AvaTax API is unable to\
        \ accurately\r\npredict when a batch will complete. If high performance processing\
        \ is\r\nrequired, please use the\r\n[CreateTransaction API](https://developer.avalara.com/api-reference/avatax/rest/v2/methods/Transactions/CreateTransaction/).\r\
        \n            \r\nThe maximum content length of the request body is limited\
        \ to 28.6 MB. If this limit\r\nis exceeded, a 404 Not Found status will be\
        \ returned (possibly with a CORS error if\r\nthe API is called from a browser).\
        \ In this situation, please split the request into\r\nsmaller batches.\n\n\
        ### Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, AccountOperator, CompanyAdmin, CSPTester, SSTAdmin, SystemAdmin,\
        \ SystemOperator, TechnicalSupportAdmin.\n"
      operationId: CreateBatches
      parameters:
      - name: companyId
        in: path
        description: The ID of the company that owns this batch.
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        description: The batch you wish to create.
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/BatchModel'
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/BatchModel'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/BatchModel'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/BatchModel'
        required: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BatchModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
  /api/v2/companies/{companyId}/batches/{batchId}/files/{id}/attachment:
    get:
      tags:
      - Batches
      summary: Download a single batch file
      description: |
        Download a single batch file identified by this URL.

        ### Security Policies

        * This API requires one of the following user roles: AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, CSPAdmin, CSPTester, SiteAdmin, SSTAdmin, SystemAdmin, SystemOperator, TechnicalSupportAdmin, TechnicalSupportUser.
      operationId: DownloadBatch
      parameters:
      - name: companyId
        in: path
        description: The ID of the company that owns this batch
        required: true
        schema:
          type: integer
          format: int32
      - name: batchId
        in: path
        description: The ID of the batch object
        required: true
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: The primary key of this batch file object
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: string
                format: binary
            application/octet-stream:
              schema:
                type: string
                format: binary
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/companies/{companyId}/batches/{id}:
    get:
      tags:
      - Batches
      summary: Retrieve a single batch
      description: "Get the batch object identified by this URL. A batch object is\
        \ a large\r\ncollection of API calls stored in a compact file.\r\n       \
        \     \r\nUse this endpoint to retrieve the results or check the status of\
        \ a batch.\r\n            \r\nWhen a batch is created, it is added to the\
        \ AvaTax Batch Queue and will be\r\nprocessed as quickly as possible in the\
        \ order it was received. To check the\r\nstatus of a batch, fetch the batch\
        \ and retrieve the results of the batch\r\noperation.\r\n            \r\n\
        Because the batch system processes with a degree of concurrency, and\r\nbecause\
        \ of batch sizes in the queue vary, AvaTax API is unable to accurately\r\n\
        predict when a batch will complete. If high performance processing is\r\n\
        required, please use the\r\n[CreateTransaction API](https://developer.avalara.com/api-reference/avatax/rest/v2/methods/Transactions/CreateTransaction/).\n\
        \n### Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, CSPAdmin,\
        \ CSPTester, SiteAdmin, SSTAdmin, SystemAdmin, SystemOperator, TechnicalSupportAdmin,\
        \ TechnicalSupportUser.\n"
      operationId: GetBatch
      parameters:
      - name: companyId
        in: path
        description: The ID of the company that owns this batch
        required: true
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: The primary key of this batch
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
    delete:
      tags:
      - Batches
      summary: Delete a single batch
      description: "Marks the batch identified by this URL as deleted.\r\n       \
        \     \r\nIf you attempt to delete a batch that is being processed, you will\
        \ receive an error message.\r\nDeleting a batch does not delete any transactions\
        \ that were created by importing the batch.\r\n            \r\nBecause the\
        \ batch system processes with a degree of concurrency, and\r\nbecause of batch\
        \ sizes in the queue vary, AvaTax API is unable to accurately\r\npredict when\
        \ a batch will complete. If high performance processing is\r\nrequired, please\
        \ use the\r\n[CreateTransaction API](https://developer.avalara.com/api-reference/avatax/rest/v2/methods/Transactions/CreateTransaction/).\n\
        \n### Security Policies\n\n* This API requires one of the following user roles:\
        \ CSPAdmin, CSPTester, SSTAdmin, SystemAdmin, SystemOperator, TechnicalSupportAdmin.\n"
      operationId: DeleteBatch
      parameters:
      - name: companyId
        in: path
        description: The ID of the company that owns this batch.
        required: true
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: The ID of the batch to delete.
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorDetail'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/companies/{companyId}/batches/{id}/cancel:
    post:
      tags:
      - Batches
      summary: Cancel an in progress batch
      description: "Marks the in progress batch identified by this URL as cancelled.\r\
        \n            \r\nOnly JSON batches can be cancelled. If you attempt to cancel\
        \ a file batch, you will receive an error message.\r\n            \r\nOnly\
        \ in progress batches can be cancelled.  If you attempt to cancel a batch\
        \ that its status is not Waiting or Processing, you will receive an error\
        \ message.\r\nCancelling an in progress batch does not delete any transactions\
        \ that were created before the cancellation.\r\n            \r\nBecause the\
        \ batch system processes with a degree of concurrency, and\r\nbecause of batch\
        \ sizes in the queue vary, AvaTax API is unable to accurately\r\npredict when\
        \ a batch will complete. If high performance processing is\r\nrequired, please\
        \ use the\r\n[CreateTransaction API](https://developer.avalara.com/api-reference/avatax/rest/v2/methods/Transactions/CreateTransaction/).\n\
        \n### Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, AccountOperator, CompanyAdmin, CSPTester, SSTAdmin, SystemAdmin,\
        \ SystemOperator, TechnicalSupportAdmin.\n"
      operationId: CancelBatch
      parameters:
      - name: companyId
        in: path
        description: The ID of the company that owns this batch.
        required: true
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: The ID of the batch to cancel.
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/companies/{companyId}/batches/transactions:
    post:
      tags:
      - Batches
      summary: Create a new transaction batch
      description: "Create a new transaction batch objects attached to this company.\r\
        \n            \r\nWhen a transaction batch is created, it is added to the\
        \ AvaTax Batch v2 Queue and will be\r\nprocessed as quickly as possible in\
        \ the order it was received. To check the\r\nstatus of a batch, fetch the\
        \ batch and retrieve the results of the batch\r\noperation.\r\n          \
        \  \r\nBecause the batch system processes with a degree of concurrency, and\r\
        \nbecause of batch sizes in the queue vary, AvaTax API is unable to accurately\r\
        \npredict when a batch will complete. If high performance processing is\r\n\
        required, please use the\r\n[CreateTransaction API](https://developer.avalara.com/api-reference/avatax/rest/v2/methods/Transactions/CreateTransaction/).\r\
        \n            \r\nThe maximum content length of the request body is limited\
        \ to 28.6 MB. If this limit\r\nis exceeded, a 404 Not Found status will be\
        \ returned (possibly with a CORS error if\r\nthe API is called from a browser).\
        \ In this situation, please split the request into\r\nsmaller batches.\n\n\
        ### Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, AccountOperator, CompanyAdmin, CSPTester, SSTAdmin, SystemAdmin,\
        \ SystemOperator, TechnicalSupportAdmin.\n"
      operationId: CreateTransactionBatch
      parameters:
      - name: companyId
        in: path
        description: The ID of the company that owns this batch.
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        description: The transaction batch you wish to create.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CreateTransactionBatchRequestModel'
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTransactionBatchRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateTransactionBatchRequestModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateTransactionBatchRequestModel'
        required: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTransactionBatchResponseModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
  /api/v2/companies/{companyId}/certexpressinvites:
    get:
      tags:
      - CertExpressInvites
      summary: List CertExpress invitations
      description: "Retrieve CertExpress invitations sent by this company.\r\n   \
        \         \r\nA CertExpression invitation allows a customer to follow a helpful\
        \ step-by-step guide to provide information\r\nabout their certificates. \
        \ This step by step guide allows the customer to complete and upload the full\r\
        \ncertificate in a convenient, friendly web browser experience.  When the\
        \ customer completes their certificates,\r\nthey will automatically be recorded\
        \ to your company and linked to the customer record.\r\n            \r\nThe\
        \ [CertExpress website](https://app.certexpress.com/home) is available for\
        \ customers to use at any time.\r\nUsing CertExpress with this API will ensure\
        \ that your certificates are automatically linked correctly into\r\nyour company\
        \ so that they can be used for tax exemptions.\r\n            \r\nBefore you\
        \ can use any exemption certificates endpoints, you must set up your company\
        \ for exemption certificate data storage.\r\nCompanies that do not have this\
        \ storage system set up will see `CertCaptureNotConfiguredError` when they\
        \ call exemption \r\ncertificate related APIs. To check if this is set up\
        \ for a company, call `GetCertificateSetup`.  To request setup of exemption\
        \ \r\ncertificate storage for this company, call `RequestCertificateSetup`.\n\
        \n### Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, CSPTester,\
        \ SSTAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n* This API depends\
        \ on the following active services:*Required* (all):  AvaTaxPro.\n"
      operationId: ListCertExpressInvitations
      parameters:
      - name: companyId
        in: path
        description: The unique ID number of the company that issued this invitation
        required: true
        schema:
          type: integer
          format: int32
      - name: $include
        in: query
        description: "OPTIONAL: A comma separated list of special fetch options. No options are defined at this time."
        schema:
          type: string
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br
          />*Not filterable:* companyId, customer, coverLetter, exposureZones, exemptReasons,
          requestLink
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertExpressInvitationModelFetchResult'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/companies/{companyId}/customers/{customerCode}/certexpressinvites:
    post:
      tags:
      - CertExpressInvites
      summary: Create a CertExpress invitation
      description: "Creates an invitation for a customer to self-report certificates\
        \ using the CertExpress website.\r\n            \r\nThis invitation is delivered\
        \ by your choice of method, or you can present a hyperlink to the user\r\n\
        directly in your connector.  Your customer will be redirected to https://app.certexpress.com/\
        \ where\r\nthey can follow a step-by-step guide to enter information about\
        \ their exemption certificates.  The\r\ncertificates entered will be recorded\
        \ and automatically linked to their customer record.\r\n            \r\nThe\
        \ [CertExpress website](https://app.certexpress.com/home) is available for\
        \ customers to use at any time.\r\nUsing CertExpress with this API will ensure\
        \ that your certificates are automatically linked correctly into\r\nyour company\
        \ so that they can be used for tax exemptions.\r\n            \r\nBefore you\
        \ can use any exemption certificates endpoints, you must set up your company\
        \ for exemption certificate data storage.\r\nCompanies that do not have this\
        \ storage system set up will see `CertCaptureNotConfiguredError` when they\
        \ call exemption \r\ncertificate related APIs. To check if this is set up\
        \ for a company, call `GetCertificateSetup`.  To request setup of exemption\
        \ \r\ncertificate storage for this company, call `RequestCertificateSetup`.\n\
        \n### Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, CSPTester,\
        \ SSTAdmin, TechnicalSupportAdmin.\n* This API depends on the following active\
        \ services:*Required* (all):  AvaTaxPro.\n"
      operationId: CreateCertExpressInvitation
      parameters:
      - name: companyId
        in: path
        description: The unique ID number of the company that will record certificates
        required: true
        schema:
          type: integer
          format: int32
      - name: customerCode
        in: path
        description: The number of the customer where the request is sent to
        required: true
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        description: the requests to send out to customers
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CreateCertExpressInvitationModel'
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CreateCertExpressInvitationModel'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CreateCertExpressInvitationModel'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CreateCertExpressInvitationModel'
        required: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CertExpressInvitationStatusModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
  /api/v2/companies/{companyId}/customers/{customerCode}/certexpressinvites/{id}:
    get:
      tags:
      - CertExpressInvites
      summary: Retrieve a single CertExpress invitation
      description: "Retrieve an existing CertExpress invitation sent to a customer.\r\
        \n            \r\nA CertExpression invitation allows a customer to follow\
        \ a helpful step-by-step guide to provide information\r\nabout their certificates.\
        \  This step by step guide allows the customer to complete and upload the\
        \ full\r\ncertificate in a convenient, friendly web browser experience.  When\
        \ the customer completes their certificates,\r\nthey will automatically be\
        \ recorded to your company and linked to the customer record.\r\n        \
        \    \r\nThe [CertExpress website](https://app.certexpress.com/home) is available\
        \ for customers to use at any time.\r\nUsing CertExpress with this API will\
        \ ensure that your certificates are automatically linked correctly into\r\n\
        your company so that they can be used for tax exemptions.\r\n            \r\
        \nBefore you can use any exemption certificates endpoints, you must set up\
        \ your company for exemption certificate data storage.\r\nCompanies that do\
        \ not have this storage system set up will see `CertCaptureNotConfiguredError`\
        \ when they call exemption \r\ncertificate related APIs. To check if this\
        \ is set up for a company, call `GetCertificateSetup`.  To request setup of\
        \ exemption \r\ncertificate storage for this company, call `RequestCertificateSetup`.\n\
        \n### Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, CSPTester,\
        \ SSTAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n* This API depends\
        \ on the following active services:*Required* (all):  AvaTaxPro.\n"
      operationId: GetCertExpressInvitation
      parameters:
      - name: companyId
        in: path
        description: The unique ID number of the company that issued this invitation
        required: true
        schema:
          type: integer
          format: int32
      - name: customerCode
        in: path
        description: The number of the customer where the request is sent to
        required: true
        schema:
          type: string
      - name: id
        in: path
        description: The unique ID number of this CertExpress invitation
        required: true
        schema:
          type: integer
          format: int32
      - name: $include
        in: query
        description: 'OPTIONAL: A comma separated list of special fetch options.  No
          options are defined at this time.'
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertExpressInvitationModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/companies/{companyId}/certificates:
    get:
      tags:
      - Certificates
      summary: List all certificates for a company
      description: "List all certificates recorded by a company\r\n            \r\n\
        A certificate is a document stored in either AvaTax Exemptions or CertCapture.\
        \  The certificate document\r\ncan contain information about a customer's\
        \ eligibility for exemption from sales or use taxes based on\r\ncriteria you\
        \ specify when you store the certificate.  To view or manage your certificates\
        \ directly, please\r\nlog onto the administrative website for the product\
        \ you purchased.\r\n            \r\nYou can use the `$include` parameter to\
        \ fetch the following additional objects for expansion:\r\n            \r\n\
        * customers - Retrieves the list of customers linked to the certificate.\r\
        \n* po_numbers - Retrieves all PO numbers tied to the certificate.\r\n* attributes\
        \ - Retrieves all attributes applied to the certificate.\r\n            \r\
        \nBefore you can use any exemption certificates endpoints, you must set up\
        \ your company for exemption certificate data storage.\r\nCompanies that do\
        \ not have this storage system set up will see `CertCaptureNotConfiguredError`\
        \ when they call exemption \r\ncertificate related APIs. To check if this\
        \ is set up for a company, call `GetCertificateSetup`.  To request setup of\
        \ exemption \r\ncertificate storage for this company, call `RequestCertificateSetup`.\n\
        \n### Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, CSPTester,\
        \ SSTAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n* This API depends\
        \ on the following active services:*Required* (all):  AvaTaxPro.\n"
      operationId: QueryCertificates
      parameters:
      - name: companyId
        in: path
        description: The ID number of the company to search
        required: true
        schema:
          type: integer
          format: int32
      - name: $include
        in: query
        description: "OPTIONAL: A comma separated list of special fetch options. \
          \ You can specify one or more of the following: customers - Retrieves the list of customers linked to the certificate. po_numbers - Retrieves all PO numbers tied to the certificate. attributes - Retrieves all attributes applied to the certificate."
        schema:
          type: string
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br
          />*Not filterable:* exemptionNumber, status, ecmsId, ecmsStatus, pdf, pages
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateModelFetchResult'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
    post:
      tags:
      - Certificates
      summary: Create certificates for this company
      description: "Record one or more certificates document for this company.\r\n\
        \            \r\nA certificate is a document stored in either AvaTax Exemptions\
        \ or CertCapture.  The certificate document\r\ncan contain information about\
        \ a customer's eligibility for exemption from sales or use taxes based on\r\
        \ncriteria you specify when you store the certificate.  To view or manage\
        \ your certificates directly, please\r\nlog onto the administrative website\
        \ for the product you purchased.\r\n            \r\nWhen you create a certificate,\
        \ it will be processed by Avalara and will become available for use in\r\n\
        calculating tax exemptions when processing is complete.  For a certificate\
        \ to be used in calculating exemptions,\r\nit must have the following:\r\n\
        \            \r\n* An exposure zone indicating where the certificate is valid\r\
        \n* A link to the customer that is allowed to use this certificate\r\n* Your\
        \ tax transaction must contain the correct customer code\r\n            \r\
        \nBefore you can use any exemption certificates endpoints, you must set up\
        \ your company for exemption certificate data storage.\r\nCompanies that do\
        \ not have this storage system set up will see `CertCaptureNotConfiguredError`\
        \ when they call exemption \r\ncertificate related APIs. To check if this\
        \ is set up for a company, call `GetCertificateSetup`.  To request setup of\
        \ exemption \r\ncertificate storage for this company, call `RequestCertificateSetup`.\r\
        \n            \r\nIf the users specified in the certificates do not exist,\
        \ the API will create the user and link them to the certificate\n\n### Security\
        \ Policies\n\n* This API requires one of the following user roles: AccountAdmin,\
        \ CompanyAdmin, CSPTester, ProStoresOperator, Registrar, SiteAdmin, SSTAdmin,\
        \ SystemAdmin, TechnicalSupportAdmin.\n* This API depends on the following\
        \ active services:*Required* (all):  AvaTaxPro.\n"
      operationId: CreateCertificates
      parameters:
      - name: companyId
        in: path
        description: The ID number of the company recording this certificate
        required: true
        schema:
          type: integer
          format: int32
      - name: $preValidatedExemptionReason
        in: query
        description: If set to true, the certificate will bypass the human verification
          process.
        schema:
          type: boolean
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        description: Certificates to be created
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CertificateModel'
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CertificateModel'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CertificateModel'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CertificateModel'
        required: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CertificateModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
  /api/v2/companies/{companyId}/certificates/{id}:
    get:
      tags:
      - Certificates
      summary: Retrieve a single certificate
      description: "Get the current certificate identified by this URL.\r\n      \
        \      \r\nA certificate is a document stored in either AvaTax Exemptions\
        \ or CertCapture.  The certificate document\r\ncan contain information about\
        \ a customer's eligibility for exemption from sales or use taxes based on\r\
        \ncriteria you specify when you store the certificate.  To view or manage\
        \ your certificates directly, please\r\nlog onto the administrative website\
        \ for the product you purchased.\r\n            \r\nYou can use the `$include`\
        \ parameter to fetch the following additional objects for expansion:\r\n \
        \           \r\n* customers - Retrieves the list of customers linked to the\
        \ certificate.\r\n* po_numbers - Retrieves all PO numbers tied to the certificate.\r\
        \n* attributes - Retrieves all attributes applied to the certificate.\r\n\
        \            \r\nBefore you can use any exemption certificates endpoints,\
        \ you must set up your company for exemption certificate data storage.\r\n\
        Companies that do not have this storage system set up will see `CertCaptureNotConfiguredError`\
        \ when they call exemption \r\ncertificate related APIs. To check if this\
        \ is set up for a company, call `GetCertificateSetup`.  To request setup of\
        \ exemption \r\ncertificate storage for this company, call `RequestCertificateSetup`.\n\
        \n### Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, CSPTester,\
        \ SSTAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n* This API depends\
        \ on the following active services:*Required* (all):  AvaTaxPro.\n"
      operationId: GetCertificate
      parameters:
      - name: companyId
        in: path
        description: The ID number of the company that recorded this certificate
        required: true
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: The unique ID number of this certificate
        required: true
        schema:
          type: integer
          format: int32
      - name: $include
        in: query
        description: "OPTIONAL: A comma separated list of special fetch options. \
          \ You can specify one or more of the following: customers - Retrieves the list of customers linked to the certificate. po_numbers - Retrieves all PO numbers tied to the certificate. attributes - Retrieves all attributes applied to the certificate."
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
    put:
      tags:
      - Certificates
      summary: Update a single certificate
      description: "Replace the certificate identified by this URL with a new one.\r\
        \n            \r\nA certificate is a document stored in either AvaTax Exemptions\
        \ or CertCapture.  The certificate document\r\ncan contain information about\
        \ a customer's eligibility for exemption from sales or use taxes based on\r\
        \ncriteria you specify when you store the certificate.  To view or manage\
        \ your certificates directly, please\r\nlog onto the administrative website\
        \ for the product you purchased.\r\n            \r\nBefore you can use any\
        \ exemption certificates endpoints, you must set up your company for exemption\
        \ certificate data storage.\r\nCompanies that do not have this storage system\
        \ set up will see `CertCaptureNotConfiguredError` when they call exemption\
        \ \r\ncertificate related APIs. To check if this is set up for a company,\
        \ call `GetCertificateSetup`.  To request setup of exemption \r\ncertificate\
        \ storage for this company, call `RequestCertificateSetup`.\n\n### Security\
        \ Policies\n\n* This API requires one of the following user roles: AccountAdmin,\
        \ AccountOperator, AccountUser, CompanyAdmin, CompanyUser, CSPTester, SSTAdmin,\
        \ TechnicalSupportAdmin.\n* This API depends on the following active services:*Required*\
        \ (all):  AvaTaxPro.\n"
      operationId: UpdateCertificate
      parameters:
      - name: companyId
        in: path
        description: The ID number of the company that recorded this certificate
        required: true
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: The unique ID number of this certificate
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        description: The new certificate object that will replace the existing one
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CertificateModel'
          application/json:
            schema:
              $ref: '#/components/schemas/CertificateModel'
          text/json:
            schema:
              $ref: '#/components/schemas/CertificateModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CertificateModel'
        required: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
    delete:
      tags:
      - Certificates
      summary: Revoke and delete a certificate
      description: "Revoke the certificate identified by this URL, then delete it.\r\
        \n            \r\nA certificate is a document stored in either AvaTax Exemptions\
        \ or CertCapture.  The certificate document\r\ncan contain information about\
        \ a customer's eligibility for exemption from sales or use taxes based on\r\
        \ncriteria you specify when you store the certificate.  To view or manage\
        \ your certificates directly, please\r\nlog onto the administrative website\
        \ for the product you purchased.\r\n            \r\nRevoked certificates can\
        \ no longer be used.\r\n            \r\nBefore you can use any exemption certificates\
        \ endpoints, you must set up your company for exemption certificate data storage.\r\
        \nCompanies that do not have this storage system set up will see `CertCaptureNotConfiguredError`\
        \ when they call exemption \r\ncertificate related APIs. To check if this\
        \ is set up for a company, call `GetCertificateSetup`.  To request setup of\
        \ exemption \r\ncertificate storage for this company, call `RequestCertificateSetup`.\n\
        \n### Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, CSPTester,\
        \ SSTAdmin, TechnicalSupportAdmin.\n* This API depends on the following active\
        \ services:*Required* (all):  AvaTaxPro.\n"
      operationId: DeleteCertificate
      parameters:
      - name: companyId
        in: path
        description: The unique ID number of the company that recorded this certificate
        required: true
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: The unique ID number of this certificate
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorDetail'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/companies/{companyId}/certificates/{id}/attachment:
    get:
      tags:
      - Certificates
      summary: Download an image for this certificate
      description: "Download an image or PDF file for this certificate.\r\n      \
        \      \r\nThis API can be used to download either a single-page preview of\
        \ the certificate or a full PDF document.\r\nTo retrieve a preview image,\
        \ set the `$type` parameter to `Jpeg` and the `$page` parameter to `1`.\r\n\
        \            \r\nA certificate is a document stored in either AvaTax Exemptions\
        \ or CertCapture.  The certificate document\r\ncan contain information about\
        \ a customer's eligibility for exemption from sales or use taxes based on\r\
        \ncriteria you specify when you store the certificate.  To view or manage\
        \ your certificates directly, please\r\nlog onto the administrative website\
        \ for the product you purchased.\r\n            \r\nBefore you can use any\
        \ exemption certificates endpoints, you must set up your company for exemption\
        \ certificate data storage.\r\nCompanies that do not have this storage system\
        \ set up will see `CertCaptureNotConfiguredError` when they call exemption\
        \ \r\ncertificate related APIs. To check if this is set up for a company,\
        \ call `GetCertificateSetup`.  To request setup of exemption \r\ncertificate\
        \ storage for this company, call `RequestCertificateSetup`.\n\n### Security\
        \ Policies\n\n* This API requires one of the following user roles: AccountAdmin,\
        \ AccountOperator, AccountUser, CompanyAdmin, CompanyUser, CSPTester, SSTAdmin,\
        \ TechnicalSupportAdmin, TechnicalSupportUser.\n* This API depends on the\
        \ following active services:*Required* (all):  AvaTaxPro.\n"
      operationId: DownloadCertificateImage
      parameters:
      - name: companyId
        in: path
        description: The unique ID number of the company that recorded this certificate
        required: true
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: The unique ID number of this certificate
        required: true
        schema:
          type: integer
          format: int32
      - name: $page
        in: query
        description: If you choose `$type`=`Jpeg`, you must specify which page number
          to retrieve.
        schema:
          type: integer
          format: int32
      - name: $type
        in: query
        description: The data format in which to retrieve the certificate image
        schema:
          type: string
          default: Pdf
          enum:
          - Pdf
          - Jpeg
          x-enum-metadata:
            name: CertificatePreviewType
            values:
            - name: Pdf
              value: 1
            - name: Jpeg
              value: 2
        x-enum-metadata:
          name: CertificatePreviewType
          values:
          - name: Pdf
            value: 1
          - name: Jpeg
            value: 2
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: OK
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
            application/json:
              schema:
                type: string
                format: binary
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
    post:
      tags:
      - Certificates
      summary: Upload an image or PDF attachment for this certificate
      description: "Upload an image or PDF attachment for this certificate.\r\n  \
        \          \r\nImage attachments can be of the format `PDF`, `JPEG`, `TIFF`,\
        \ or `PNG`.  To upload a multi-page image, please\r\nuse the `PDF` data type.\r\
        \n            \r\nA certificate is a document stored in either AvaTax Exemptions\
        \ or CertCapture.  The certificate document\r\ncan contain information about\
        \ a customer's eligibility for exemption from sales or use taxes based on\r\
        \ncriteria you specify when you store the certificate.  To view or manage\
        \ your certificates directly, please\r\nlog onto the administrative website\
        \ for the product you purchased.\r\n            \r\nBefore you can use any\
        \ exemption certificates endpoints, you must set up your company for exemption\
        \ certificate data storage.\r\nCompanies that do not have this storage system\
        \ set up will see `CertCaptureNotConfiguredError` when they call exemption\
        \ \r\ncertificate related APIs. To check if this is set up for a company,\
        \ call `GetCertificateSetup`.  To request setup of exemption \r\ncertificate\
        \ storage for this company, call `RequestCertificateSetup`.\n\n### Security\
        \ Policies\n\n* This API requires one of the following user roles: AccountAdmin,\
        \ AccountOperator, AccountUser, CompanyAdmin, CompanyUser, CSPTester, SSTAdmin,\
        \ TechnicalSupportAdmin, TechnicalSupportUser.\n* This API depends on the\
        \ following active services:*Required* (all):  AvaTaxPro.\n"
      operationId: UploadCertificateImage
      parameters:
      - name: companyId
        in: path
        description: The unique ID number of the company that recorded this certificate
        required: true
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: The unique ID number of this certificate
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - file
              properties:
                file:
                  type: string
                  description: 'The exemption certificate file you wanted to upload.
                    Accepted formats are: PDF, JPEG, TIFF, PNG.'
                  format: binary
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: string
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/companies/{companyId}/certificates/{id}/attributes:
    get:
      tags:
      - Certificates
      summary: List all attributes applied to this certificate
      description: "Retrieve the list of attributes that are linked to this certificate.\r\
        \n            \r\nA certificate may have multiple attributes that control\
        \ its behavior.  You may link or unlink attributes to a\r\ncertificate at\
        \ any time.  The full list of defined attributes may be found using [ListCertificateAttributes](https://developer.avalara.com/api-reference/avatax/rest/v2/methods/Definitions/ListCertificateAttributes/)\
        \ API.\r\n            \r\nA certificate is a document stored in either AvaTax\
        \ Exemptions or CertCapture.  The certificate document\r\ncan contain information\
        \ about a customer's eligibility for exemption from sales or use taxes based\
        \ on\r\ncriteria you specify when you store the certificate.  To view or manage\
        \ your certificates directly, please\r\nlog onto the administrative website\
        \ for the product you purchased.\r\n            \r\nBefore you can use any\
        \ exemption certificates endpoints, you must set up your company for exemption\
        \ certificate data storage.\r\nCompanies that do not have this storage system\
        \ set up will see `CertCaptureNotConfiguredError` when they call exemption\
        \ \r\ncertificate related APIs. To check if this is set up for a company,\
        \ call `GetCertificateSetup`.  To request setup of exemption \r\ncertificate\
        \ storage for this company, call `RequestCertificateSetup`.\n\n### Security\
        \ Policies\n\n* This API requires one of the following user roles: AccountAdmin,\
        \ AccountOperator, AccountUser, CompanyAdmin, CompanyUser, CSPTester, SSTAdmin,\
        \ TechnicalSupportAdmin.\n* This API depends on the following active services:*Required*\
        \ (all):  AvaTaxPro.\n"
      operationId: ListAttributesForCertificate
      parameters:
      - name: companyId
        in: path
        description: The unique ID number of the company that recorded this certificate
        required: true
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: The unique ID number of this certificate
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateAttributeModelFetchResult'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/companies/{companyId}/certificates/{id}/attributes/link:
    post:
      tags:
      - Certificates
      summary: Link attributes to a certificate
      description: "Link one or many attributes to a certificate.\r\n            \r\
        \nA certificate may have multiple attributes that control its behavior.  You\
        \ may link or unlink attributes to a\r\ncertificate at any time.  The full\
        \ list of defined attributes may be found using `ListCertificateAttributes`.\r\
        \n            \r\nA certificate is a document stored in either AvaTax Exemptions\
        \ or CertCapture.  The certificate document\r\ncan contain information about\
        \ a customer's eligibility for exemption from sales or use taxes based on\r\
        \ncriteria you specify when you store the certificate.  To view or manage\
        \ your certificates directly, please\r\nlog onto the administrative website\
        \ for the product you purchased.\r\n            \r\nBefore you can use any\
        \ exemption certificates endpoints, you must set up your company for exemption\
        \ certificate data storage.\r\nCompanies that do not have this storage system\
        \ set up will see `CertCaptureNotConfiguredError` when they call exemption\
        \ \r\ncertificate related APIs. To check if this is set up for a company,\
        \ call `GetCertificateSetup`.  To request setup of exemption \r\ncertificate\
        \ storage for this company, call `RequestCertificateSetup`.\n\n### Security\
        \ Policies\n\n* This API requires one of the following user roles: AccountAdmin,\
        \ AccountOperator, AccountUser, CompanyAdmin, CompanyUser, CSPTester, SSTAdmin,\
        \ TechnicalSupportAdmin.\n* This API depends on the following active services:*Required*\
        \ (all):  AvaTaxPro.\n"
      operationId: LinkAttributesToCertificate
      parameters:
      - name: companyId
        in: path
        description: The unique ID number of the company that recorded this certificate
        required: true
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: The unique ID number of this certificate
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        description: The list of attributes to link to this certificate.
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CertificateAttributeModel'
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CertificateAttributeModel'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CertificateAttributeModel'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CertificateAttributeModel'
        required: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateAttributeModelFetchResult'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
  /api/v2/companies/{companyId}/certificates/{id}/attributes/unlink:
    post:
      tags:
      - Certificates
      summary: Unlink attributes from a certificate
      description: "Unlink one or many attributes from a certificate.\r\n        \
        \    \r\nA certificate may have multiple attributes that control its behavior.\
        \  You may link or unlink attributes to a\r\ncertificate at any time.  The\
        \ full list of defined attributes may be found using `ListCertificateAttributes`.\r\
        \n            \r\nA certificate is a document stored in either AvaTax Exemptions\
        \ or CertCapture.  The certificate document\r\ncan contain information about\
        \ a customer's eligibility for exemption from sales or use taxes based on\r\
        \ncriteria you specify when you store the certificate.  To view or manage\
        \ your certificates directly, please\r\nlog onto the administrative website\
        \ for the product you purchased.\r\n            \r\nBefore you can use any\
        \ exemption certificates endpoints, you must set up your company for exemption\
        \ certificate data storage.\r\nCompanies that do not have this storage system\
        \ set up will see `CertCaptureNotConfiguredError` when they call exemption\
        \ \r\ncertificate related APIs. To check if this is set up for a company,\
        \ call `GetCertificateSetup`.  To request setup of exemption \r\ncertificate\
        \ storage for this company, call `RequestCertificateSetup`.\n\n### Security\
        \ Policies\n\n* This API requires one of the following user roles: AccountAdmin,\
        \ AccountOperator, AccountUser, CompanyAdmin, CompanyUser, CSPTester, SSTAdmin,\
        \ TechnicalSupportAdmin.\n* This API depends on the following active services:*Required*\
        \ (all):  AvaTaxPro.\n"
      operationId: UnlinkAttributesFromCertificate
      parameters:
      - name: companyId
        in: path
        description: The unique ID number of the company that recorded this certificate
        required: true
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: The unique ID number of this certificate
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        description: The list of attributes to unlink from this certificate.
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CertificateAttributeModel'
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CertificateAttributeModel'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CertificateAttributeModel'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CertificateAttributeModel'
        required: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateAttributeModelFetchResult'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
  /api/v2/companies/{companyId}/certificates/{id}/customers:
    get:
      tags:
      - Certificates
      summary: List customers linked to this certificate
      description: "List all customers linked to this certificate.\r\n           \
        \ \r\nCustomers must be linked to a certificate in order to make use of its\
        \ tax exemption features.  You\r\ncan link or unlink customers to a certificate\
        \ at any time.\r\n            \r\nA certificate is a document stored in either\
        \ AvaTax Exemptions or CertCapture.  The certificate document\r\ncan contain\
        \ information about a customer's eligibility for exemption from sales or use\
        \ taxes based on\r\ncriteria you specify when you store the certificate. \
        \ To view or manage your certificates directly, please\r\nlog onto the administrative\
        \ website for the product you purchased.\r\n            \r\nBefore you can\
        \ use any exemption certificates endpoints, you must set up your company for\
        \ exemption certificate data storage.\r\nCompanies that do not have this storage\
        \ system set up will see `CertCaptureNotConfiguredError` when they call exemption\
        \ \r\ncertificate related APIs. To check if this is set up for a company,\
        \ call `GetCertificateSetup`.  To request setup of exemption \r\ncertificate\
        \ storage for this company, call `RequestCertificateSetup`.\n\n### Security\
        \ Policies\n\n* This API requires one of the following user roles: AccountAdmin,\
        \ AccountOperator, AccountUser, CompanyAdmin, CompanyUser, CSPTester, SSTAdmin,\
        \ TechnicalSupportAdmin.\n* This API depends on the following active services:*Required*\
        \ (all):  AvaTaxPro.\n"
      operationId: ListCustomersForCertificate
      parameters:
      - name: companyId
        in: path
        description: The unique ID number of the company that recorded this certificate
        required: true
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: The unique ID number of this certificate
        required: true
        schema:
          type: integer
          format: int32
      - name: $include
        in: query
        description: "OPTIONAL: A comma separated list of special fetch options. No options are currently available when fetching customers."
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerModelFetchResult'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/companies/{companyId}/certificates/{id}/customers/link:
    post:
      tags:
      - Certificates
      summary: Link customers to a certificate
      description: "Link one or more customers to an existing certificate.\r\n   \
        \         \r\nCustomers and certificates must be linked before a customer\
        \ can make use of a certificate to obtain\r\na tax exemption in AvaTax.  Since\
        \ some certificates may cover more than one business entity, a certificate\r\
        \ncan be connected to multiple customer records using the `LinkCustomersToCertificate`\
        \ API.\r\n            \r\nA certificate is a document stored in either AvaTax\
        \ Exemptions or CertCapture.  The certificate document\r\ncan contain information\
        \ about a customer's eligibility for exemption from sales or use taxes based\
        \ on\r\ncriteria you specify when you store the certificate.  To view or manage\
        \ your certificates directly, please\r\nlog onto the administrative website\
        \ for the product you purchased.\r\n            \r\nBefore you can use any\
        \ exemption certificates endpoints, you must set up your company for exemption\
        \ certificate data storage.\r\nCompanies that do not have this storage system\
        \ set up will see `CertCaptureNotConfiguredError` when they call exemption\
        \ \r\ncertificate related APIs. To check if this is set up for a company,\
        \ call `GetCertificateSetup`.  To request setup of exemption \r\ncertificate\
        \ storage for this company, call `RequestCertificateSetup`.\n\n### Security\
        \ Policies\n\n* This API requires one of the following user roles: AccountAdmin,\
        \ AccountOperator, AccountUser, CompanyAdmin, CompanyUser, CSPTester, SSTAdmin,\
        \ TechnicalSupportAdmin.\n* This API depends on the following active services:*Required*\
        \ (all):  AvaTaxPro.\n"
      operationId: LinkCustomersToCertificate
      parameters:
      - name: companyId
        in: path
        description: The unique ID number of the company that recorded this certificate
        required: true
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: The unique ID number of this certificate
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        description: The list of customers needed be added to the Certificate for
          exemption
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/LinkCustomersModel'
          application/json:
            schema:
              $ref: '#/components/schemas/LinkCustomersModel'
          text/json:
            schema:
              $ref: '#/components/schemas/LinkCustomersModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/LinkCustomersModel'
        required: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerModelFetchResult'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
  /api/v2/companies/{companyId}/certificates/{id}/customers/unlink:
    post:
      tags:
      - Certificates
      summary: Unlink customers from a certificate
      description: "Unlinks one or more customers from a certificate.\r\n        \
        \    \r\nUnlinking a certificate from a customer will prevent the certificate\
        \ from being used to generate\r\ntax exemptions for the customer in the future.\
        \  If any previous transactions for this customer had\r\nused this linked\
        \ certificate, those transactions will be unchanged and will still have a\
        \ link to the\r\nexemption certificate in question.\r\n            \r\nA certificate\
        \ is a document stored in either AvaTax Exemptions or CertCapture.  The certificate\
        \ document\r\ncan contain information about a customer's eligibility for exemption\
        \ from sales or use taxes based on\r\ncriteria you specify when you store\
        \ the certificate.  To view or manage your certificates directly, please\r\
        \nlog onto the administrative website for the product you purchased.\r\n \
        \           \r\nBefore you can use any exemption certificates endpoints, you\
        \ must set up your company for exemption certificate data storage.\r\nCompanies\
        \ that do not have this storage system set up will see `CertCaptureNotConfiguredError`\
        \ when they call exemption \r\ncertificate related APIs. To check if this\
        \ is set up for a company, call `GetCertificateSetup`.  To request setup of\
        \ exemption \r\ncertificate storage for this company, call `RequestCertificateSetup`.\n\
        \n### Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, CSPTester,\
        \ SSTAdmin, TechnicalSupportAdmin.\n* This API depends on the following active\
        \ services:*Required* (all):  AvaTaxPro.\n"
      operationId: UnlinkCustomersFromCertificate
      parameters:
      - name: companyId
        in: path
        description: The unique ID number of the company that recorded this certificate
        required: true
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: The unique ID number of this certificate
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        description: The list of customers to unlink from this certificate
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/LinkCustomersModel'
          application/json:
            schema:
              $ref: '#/components/schemas/LinkCustomersModel'
          text/json:
            schema:
              $ref: '#/components/schemas/LinkCustomersModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/LinkCustomersModel'
        required: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerModelFetchResult'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
  /api/v2/companies/{companyId}/certificates/setup:
    get:
      tags:
      - Certificates
      summary: Check a company's exemption certificate status.
      description: "Checks whether this company is configured to use exemption certificates\
        \ in AvaTax.\r\n            \r\nExemption certificates are tracked through\
        \ a different auditable data store than the one that\r\nholds AvaTax transactions.\
        \  To use the AvaTax exemption certificate document store, please call\r\n\
        `GetCertificateSetup` to see if your company is configured to use the exemption\
        \ certificate\r\ndocument store.  To request setup, please call `RequestCertificateSetup`\
        \ and your company will\r\nbe configured with data storage in the auditable\
        \ certificate system.\n\n### Security Policies\n\n* This API requires one\
        \ of the following user roles: AccountAdmin, AccountOperator, AccountUser,\
        \ CompanyAdmin, CompanyUser, CSPTester, SSTAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n\
        * This API depends on the following active services:*Required* (all):  AvaTaxPro.\n"
      operationId: GetCertificateSetup
      parameters:
      - name: companyId
        in: path
        description: The company ID to check
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisionStatusModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
    post:
      tags:
      - Certificates
      summary: Request setup of exemption certificates for this company.
      description: "Requests the setup of exemption certificates for this company.\r\
        \n            \r\nExemption certificates are tracked through a different auditable\
        \ data store than the one that\r\nholds AvaTax transactions.  To use the AvaTax\
        \ exemption certificate document store, please call\r\n`GetCertificateSetup`\
        \ to see if your company is configured to use the exemption certificate\r\n\
        document store.  To request setup, please call `RequestCertificateSetup` and\
        \ your company will\r\nbe configured with data storage in the auditable certificate\
        \ system.\r\n            \r\nThis API will return the current status of exemption\
        \ certificate setup for this company.\n\n### Security Policies\n\n* This API\
        \ requires one of the following user roles: AccountAdmin, AccountOperator,\
        \ AccountUser, CompanyAdmin, CompanyUser, CSPTester, SSTAdmin, TechnicalSupportAdmin,\
        \ TechnicalSupportUser.\n* This API depends on the following active services:*Required*\
        \ (all):  AvaTaxPro.\n"
      operationId: RequestCertificateSetup
      parameters:
      - name: companyId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisionStatusModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/companies:
    get:
      tags:
      - Companies
      summary: Retrieve all companies
      description: "Get multiple company objects.\r\n            \r\nA `company` represents\
        \ a single corporation or individual that is registered to handle transactional\
        \ taxes.\r\n            \r\nSearch for specific objects using the criteria\
        \ in the `$filter` parameter; full documentation is available on [Filtering\
        \ in REST](http://developer.avalara.com/avatax/filtering-in-rest/) .\r\nPaginate\
        \ your results using the `$top`, `$skip`, and `$orderby` parameters.\r\nYou\
        \ may specify one or more of the following values in the `$include` parameter\
        \ to fetch additional nested data, using commas to separate multiple values:\r\
        \n            \r\n* Contacts\r\n* Items\r\n* Locations\r\n* Nexus\r\n* Settings\r\
        \n* TaxCodes\r\n* TaxRules\r\n* UPC\r\n* Parameters\n\n### Security Policies\n\
        \n* This API requires one of the following user roles: AccountAdmin, AccountOperator,\
        \ AccountUser, CompanyAdmin, CompanyUser, Compliance Root User, ComplianceAdmin,\
        \ ComplianceUser, CSPAdmin, CSPTester, FirmAdmin, FirmUser, ProStoresOperator,\
        \ Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser,\
        \ TreasuryAdmin, TreasuryUser.\n"
      operationId: QueryCompanies
      parameters:
      - name: $include
        in: query
        description: A comma separated list of objects to fetch underneath this company.  Any
          object with a URL path underneath this company can be fetched by specifying
          its name.
        schema:
          type: string
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br
          />*Not filterable:* IsFein, contacts, items, locations, nexus, settings,
          taxCodes, taxRules, upcs, nonReportingChildCompanies, exemptCerts, parameters,
          supplierandcustomers
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyModelFetchResult'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
    post:
      tags:
      - Companies
      summary: Create new companies
      description: "Create one or more new company objects.\r\nA 'company' represents\
        \ a single corporation or individual that is registered to handle transactional\
        \ taxes.\r\nYou may attach nested data objects such as contacts, locations,\
        \ and nexus with this CREATE call, and those objects will be created with\
        \ the company.\r\n            \r\nNOTE: Please do not use these blacklisted\
        \ characters in company name and code: ';', '\\', '|'.\n\n### Security Policies\n\
        \n* This API requires one of the following user roles: AccountAdmin, CompanyAdmin,\
        \ CSPTester, FirmAdmin, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin.\n"
      operationId: CreateCompanies
      parameters:
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        description: Either a single company object or an array of companies to create
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CompanyModel'
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CompanyModel'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CompanyModel'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CompanyModel'
        required: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
  /api/v2/companies/{companyId}/funding/configuration:
    get:
      tags:
      - Companies
      summary: Check the funding configuration of a company
      description: "This API is available by invitation only.\r\nRequires a subscription\
        \ to Avalara Managed Returns or SST Certified Service Provider.\r\nReturns\
        \ the funding configuration of the requested company.\r\n.\n\n### Security\
        \ Policies\n\n* This API requires one of the following user roles: AccountAdmin,\
        \ AccountOperator, AccountUser, CompanyAdmin, CompanyUser, Compliance Root\
        \ User, ComplianceAdmin, ComplianceUser, CSPAdmin, CSPTester, FirmAdmin, FirmUser,\
        \ ProStoresOperator, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin,\
        \ TechnicalSupportUser, TreasuryAdmin, TreasuryUser.\n* This API depends on\
        \ the following active services:*Returns* (at least one of):  Mrs, MRSComplianceManager,\
        \ AvaTaxCsp.*Firm Managed* (for accounts managed by a firm):  ARA, ARAManaged.\n"
      operationId: FundingConfigurationByCompany
      parameters:
      - name: companyId
        in: path
        description: The unique identifier of the company
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FundingConfigurationModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/companies/{companyId}/funding/configurations:
    get:
      tags:
      - Companies
      summary: Check the funding configuration of a company
      description: "This API is available by invitation only.\r\nRequires a subscription\
        \ to Avalara Managed Returns or SST Certified Service Provider.\r\nReturns\
        \ the funding configuration of the requested company.\r\n.\n\n### Security\
        \ Policies\n\n* This API requires one of the following user roles: AccountAdmin,\
        \ AccountOperator, AccountUser, CompanyAdmin, CompanyUser, Compliance Root\
        \ User, ComplianceAdmin, ComplianceUser, CSPAdmin, CSPTester, FirmAdmin, FirmUser,\
        \ ProStoresOperator, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin,\
        \ TechnicalSupportUser, TreasuryAdmin, TreasuryUser.\n* This API depends on\
        \ the following active services:*Returns* (at least one of):  Mrs, MRSComplianceManager,\
        \ AvaTaxCsp.*Firm Managed* (for accounts managed by a firm):  ARA, ARAManaged.\n"
      operationId: FundingConfigurationsByCompanyAndCurrency
      parameters:
      - name: companyId
        in: path
        description: The unique identifier of the company
        required: true
        schema:
          type: integer
          format: int32
      - name: currency
        in: query
        description: The currency of the funding.  USD and CAD are the only valid
          currencies
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FundingConfigurationModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/companies/{companyId}/parameters:
    get:
      tags:
      - Companies
      summary: Retrieve parameters for a company
      description: "Retrieve all parameters of a company.\r\n            \r\nSome\
        \ companies can be taxed and reported differently depending on the properties\
        \ of the company, such as IsPrimaryAddress. In AvaTax, these tax-affecting\
        \ properties are called \"parameters\".\r\n            \r\nA parameter added\
        \ to a company will be used by default in tax calculation but will not show\
        \ on the transaction line referencing the company.\r\n            \r\nA company\
        \ location parameter specified on a transaction line will override a company\
        \ parameter if they share the same parameter name.\r\n            \r\nSearch\
        \ for specific objects using the criteria in the `$filter` parameter; full\
        \ documentation is available on [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/)\
        \ .\r\nPaginate your results using the `$top`, `$skip`, and `$orderby` parameters.\n\
        \n### Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, Compliance\
        \ Root User, ComplianceAdmin, ComplianceUser, CSPAdmin, CSPTester, FirmAdmin,\
        \ FirmUser, ProStoresOperator, Registrar, SiteAdmin, SSTAdmin, SystemAdmin,\
        \ TechnicalSupportAdmin, TechnicalSupportUser, TreasuryAdmin, TreasuryUser.\n"
      operationId: ListCompanyParameterDetails
      parameters:
      - name: companyId
        in: path
        description: The company id
        required: true
        schema:
          type: integer
          format: int32
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br
          />*Not filterable:* name, unit
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyParameterDetailModelFetchResult'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
    post:
      tags:
      - Companies
      summary: Add parameters to a company.
      description: "Add parameters to a company.\r\n            \r\nSome companies\
        \ can be taxed and reported differently depending on the properties of the\
        \ company, such as IsPrimaryAddress. In AvaTax, these tax-affecting properties\
        \ are called \"parameters\".\r\n            \r\nA parameter added to a company\
        \ will be used by default in tax calculation but will not show on the transaction\
        \ line referencing the company.\r\n            \r\nA company location parameter\
        \ specified on a transaction line will override a company parameter if they\
        \ share the same parameter name.\r\n            \r\nTo see available parameters\
        \ for this company, call `/api/v2/definitions/parameters?$filter=attributeType\
        \ eq Company`\r\n            \r\nSome parameters are only available for use\
        \ if you have subscribed to specific AvaTax services. To see which parameters\
        \ you are able to use, add the query parameter \"$showSubscribed=true\" to\
        \ the parameter definition call above.\n\n### Security Policies\n\n* This\
        \ API requires one of the following user roles: AccountAdmin, CompanyAdmin,\
        \ CSPTester, FirmAdmin, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin.\n"
      operationId: CreateCompanyParameters
      parameters:
      - name: companyId
        in: path
        description: The ID of the company that owns this company parameter.
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        description: The company parameters you wish to create.
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CompanyParameterDetailModel'
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CompanyParameterDetailModel'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CompanyParameterDetailModel'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CompanyParameterDetailModel'
        required: false
      responses:
        201:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyParameterDetailModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
  /api/v2/companies/{companyId}/parameters/{id}:
    get:
      tags:
      - Companies
      summary: Retrieve a single company parameter
      description: "Retrieves a single parameter of a company.\r\n            \r\n\
        Some companies can be taxed and reported differently depending on the properties\
        \ of the company, such as IsPrimaryAddress. In AvaTax, these tax-affecting\
        \ properties are called \"parameters\".\r\n            \r\nA parameter added\
        \ to a company will be used by default in tax calculation but will not show\
        \ on the transaction line referencing the company.\r\n            \r\nA company\
        \ location parameter specified on a transaction line will override a company\
        \ parameter if they share the same parameter name.\n\n### Security Policies\n\
        \n* This API requires one of the following user roles: AccountAdmin, AccountOperator,\
        \ AccountUser, CompanyAdmin, CompanyUser, Compliance Root User, ComplianceAdmin,\
        \ ComplianceUser, CSPAdmin, CSPTester, FirmAdmin, FirmUser, ProStoresOperator,\
        \ Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser,\
        \ TreasuryAdmin, TreasuryUser.\n"
      operationId: GetCompanyParameterDetail
      parameters:
      - name: companyId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyParameterDetailModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
    put:
      tags:
      - Companies
      summary: Update a company parameter
      description: "Update a parameter of a company.\r\n            \r\nSome companies\
        \ can be taxed and reported differently depending on the properties of the\
        \ company, such as IsPrimaryAddress. In AvaTax, these tax-affecting properties\
        \ are called \"parameters\".\r\n            \r\nA parameter added to a company\
        \ will be used by default in tax calculation but will not show on the transaction\
        \ line referencing the company.\r\n            \r\nA company location parameter\
        \ specified on a transaction line will override a company parameter if they\
        \ share the same parameter name.\n\n### Security Policies\n\n* This API requires\
        \ one of the following user roles: AccountAdmin, CompanyAdmin, CSPTester,\
        \ FirmAdmin, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin.\n"
      operationId: UpdateCompanyParameterDetail
      parameters:
      - name: companyId
        in: path
        description: The company id.
        required: true
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: The company parameter id
        required: true
        schema:
          type: integer
          format: int64
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        description: The company parameter object you wish to update.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CompanyParameterDetailModel'
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyParameterDetailModel'
          text/json:
            schema:
              $ref: '#/components/schemas/CompanyParameterDetailModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CompanyParameterDetailModel'
        required: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyParameterDetailModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
    delete:
      tags:
      - Companies
      summary: Delete a single company parameter
      description: "Delete a parameter of a company.\r\nSome companies can be taxed\
        \ and reported differently depending on the properties of the company, such\
        \ as IsPrimaryAddress. In AvaTax, these tax-affecting properties are called\
        \ \"parameters\".\r\n            \r\nA parameter added to a company will be\
        \ used by default in tax calculation but will not show on the transaction\
        \ line referencing the company.\r\n            \r\nA company location parameter\
        \ specified on a transaction line will override a company parameter if they\
        \ share the same parameter name.\n\n### Security Policies\n\n* This API requires\
        \ one of the following user roles: AccountAdmin, CompanyAdmin, CSPTester,\
        \ FirmAdmin, SSTAdmin, TechnicalSupportAdmin.\n"
      operationId: DeleteCompanyParameter
      parameters:
      - name: companyId
        in: path
        description: The company id
        required: true
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: The parameter id
        required: true
        schema:
          type: integer
          format: int64
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorDetail'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/companies/{id}:
    get:
      tags:
      - Companies
      summary: Retrieve a single company
      description: "Get the company object identified by this URL.\r\nA 'company'\
        \ represents a single corporation or individual that is registered to handle\
        \ transactional taxes.\r\nYou may specify one or more of the following values\
        \ in the '$include' parameter to fetch additional nested data, using commas\
        \ to separate multiple values:\r\n            \r\n * Contacts\r\n * Items\r\
        \n * Locations\r\n * Nexus\r\n * Settings\r\n * TaxCodes\r\n * TaxRules\r\n\
        \ * UPC\r\n * Parameters\n\n### Security Policies\n\n* This API requires one\
        \ of the following user roles: AccountAdmin, AccountOperator, AccountUser,\
        \ CompanyAdmin, CompanyUser, Compliance Root User, ComplianceAdmin, ComplianceUser,\
        \ CSPAdmin, CSPTester, FirmAdmin, FirmUser, ProStoresOperator, Registrar,\
        \ SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser,\
        \ TreasuryAdmin, TreasuryUser.\n"
      operationId: GetCompany
      parameters:
      - name: id
        in: path
        description: The ID of the company to retrieve.
        required: true
        schema:
          type: integer
          format: int32
      - name: $include
        in: query
        description: "OPTIONAL: A comma separated list of special fetch options. Child objects - Specify one or more of\
          \ the following to retrieve objects related to each company: \"Contacts\"\
          , \"FilingCalendars\", \"Items\", \"Locations\", \"Nexus\", \"TaxCodes\"\
          , \"NonReportingChildren\" or \"TaxRules\". Deleted objects\
          \ - Specify \"FetchDeleted\" to retrieve information about previously deleted\
          \ objects."
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
    put:
      tags:
      - Companies
      summary: Update a single company
      description: "Replace the existing company object at this URL with an updated\
        \ object.\r\n            \r\nA `CompanyModel` represents a single corporation\
        \ or individual that is registered to handle transactional taxes.\r\nAll data\
        \ from the existing object will be replaced with data in the object you PUT.\r\
        \n            \r\nWhen calling `UpdateCompany`, you are permitted to update\
        \ the company itself.  Updates to the nested objects\r\nsuch as contacts,\
        \ locations, or settings are not permitted.  To update the nested objects\r\
        \n            \r\nTo set a field's value to `null`, you may either set its\
        \ value to `null` or omit that field from the object you PUT.\r\n        \
        \    \r\nNOTE: Please do not use these blacklisted characters in company name\
        \ and code: ';', '\\', '|'.\n\n### Security Policies\n\n* This API requires\
        \ one of the following user roles: AccountAdmin, CompanyAdmin, CSPTester,\
        \ FirmAdmin, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin.\n"
      operationId: UpdateCompany
      parameters:
      - name: id
        in: path
        description: The ID of the company you wish to update.
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        description: The company object you wish to update.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CompanyModel'
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyModel'
          text/json:
            schema:
              $ref: '#/components/schemas/CompanyModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CompanyModel'
        required: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
    delete:
      tags:
      - Companies
      summary: Delete a single company
      description: |
        Deleting a company will delete all child companies, and all users attached to this company.

        ### Security Policies

        * This API requires one of the following user roles: AccountAdmin, CompanyAdmin, CSPTester, FirmAdmin, SSTAdmin, TechnicalSupportAdmin.
      operationId: DeleteCompany
      parameters:
      - name: id
        in: path
        description: The ID of the company you wish to delete.
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorDetail'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/companies/{id}/certify:
    get:
      tags:
      - Companies
      summary: Checks whether the integration being used to set up this company and
        run transactions onto this company is compliant to all requirements.
      description: "Examines the most recent 100 transactions or data from the last\
        \ month when verifying transaction-related integrations.\r\nFor partners who\
        \ write integrations against AvaTax for many clients, this API is a way to\
        \ do a quick self testing to verify whether the\r\nwritten integrations for\
        \ a company are sufficient enough to be delivered to the respective customers\
        \ to start using it.\r\n            \r\nThis API provides messages specific\
        \ enough (through predefined checks) to guide the partner on what integrations\
        \ are still missing from the company to get fully certified.\r\nThe API makes\
        \ the following checks to conclude if the company is NOT fully certified:\r\
        \n1. Any past month items contains generic tax code of P0000000.\r\n2. All\
        \ the companies on the requesting account are test companies.\r\n3. No Voided/Cancelled\
        \ documents in the past 30 days.\r\n4. There are less than 2 committed documents.\r\
        \n5. Any documentCode is a generic GUID string.\r\n6. Any customerCode on\
        \ document is a generic GUID string.\r\n7. No document has more than 1 documentLine.\r\
        \n8. All of the documents have missing exemptionNo, customerUsageType, taxDateOverride\
        \ or negative amount.\r\n9. Any document quantity is a negative number.\r\n\
        10. Any document have repeated lines.\r\n11. No document has shipping charge.\r\
        \n12. All documents have same ItemCodes, descriptions and taxCodes.\r\n13.\
        \ Less than 2 addresses used across all documents.\r\n14. Whether locationCode\
        \ was used in documents.\r\n15. Account with AvaGlobal subscription and no\
        \ documents have VATBuyerId.\r\n16. Any document has currencyCode not being\
        \ USD for accounts with AvaGlobal subscription.\r\n17. All documents have\
        \ countryCode used for accounts with AvaGlobal subscription.\n\n### Security\
        \ Policies\n\n* This API requires one of the following user roles: AccountAdmin,\
        \ AccountOperator, AccountUser, CompanyAdmin, CompanyUser, Compliance Root\
        \ User, ComplianceAdmin, ComplianceUser, CSPAdmin, CSPTester, FirmAdmin, FirmUser,\
        \ ProStoresOperator, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin,\
        \ TechnicalSupportUser, TreasuryAdmin, TreasuryUser.\n"
      operationId: CertifyIntegration
      parameters:
      - name: id
        in: path
        description: The ID of the company to check if its integration is certified.
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: string
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/companies/{id}/configuration:
    get:
      tags:
      - Companies
      summary: Get configuration settings for this company
      description: "Retrieve a list of all configuration settings tied to this company.\r\
        \n            \r\nConfiguration settings provide you with the ability to control\
        \ features of your account and of your\r\ntax software.  The category name\
        \ `AvaCertServiceConfig` is reserved for\r\nAvalara internal software configuration\
        \ values; to store your own company-level settings, please\r\ncreate a new\
        \ category name that begins with `X-`, for example, `X-MyCustomCategory`.\r\
        \n            \r\nCompany settings are permanent settings that cannot be deleted.\
        \  You can set the value of a\r\ncompany setting to null if desired and if\
        \ the particular setting supports it.\r\n            \r\nAvalara-based company\
        \ settings for `AvaCertServiceConfig` affect your company's exemption certificate\r\
        \nprocessing, and should be changed with care.\n\n### Security Policies\n\n\
        * This API requires one of the following user roles: AccountAdmin, AccountUser,\
        \ CompanyAdmin, CompanyUser, CSPAdmin, CSPTester, SiteAdmin, SSTAdmin, SystemAdmin,\
        \ TechnicalSupportAdmin, TechnicalSupportUser.\n"
      operationId: GetCompanyConfiguration
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyConfigurationModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
    post:
      tags:
      - Companies
      summary: Change configuration settings for this company
      description: "Update configuration settings tied to this company.\r\n      \
        \      \r\nConfiguration settings provide you with the ability to control\
        \ features of your account and of your\r\ntax software.  The category names\
        \ `AvaCertServiceConfig` is reserved for\r\nAvalara internal software configuration\
        \ values; to store your own company-level settings, please\r\ncreate a new\
        \ category name that begins with `X-`, for example, `X-MyCustomCategory`.\r\
        \n            \r\nCompany settings are permanent settings that cannot be deleted.\
        \  You can set the value of a\r\ncompany setting to null if desired and if\
        \ the particular setting supports it.\r\n            \r\nAvalara-based company\
        \ settings for `AvaCertServiceConfig` affect your company's exemption certificate\r\
        \nprocessing, and should be changed with care.\n\n### Security Policies\n\n\
        * This API requires one of the following user roles: AccountAdmin, CompanyAdmin,\
        \ CSPTester, SSTAdmin, TechnicalSupportAdmin.\n"
      operationId: SetCompanyConfiguration
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CompanyConfigurationModel'
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CompanyConfigurationModel'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CompanyConfigurationModel'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CompanyConfigurationModel'
        required: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyConfigurationModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
  /api/v2/companies/{id}/filingstatus:
    get:
      tags:
      - Companies
      summary: Get this company's filing status
      description: "Retrieve the current filing status of this company.\r\n      \
        \      \r\nFor customers using Avalara's Managed Returns Service, each company\
        \ within their account can request\r\nfor Avalara to file tax returns on their\
        \ behalf.  Avalara compliance team members will review all\r\nrequested filing\
        \ calendars prior to beginning filing tax returns on behalf of this company.\r\
        \n            \r\nA company's filing status can be one of the following values:\r\
        \n            \r\n* `NoReporting` - This company is not configured to report\
        \ tax returns; instead, it reports through a parent company.\r\n* `NotYetFiling`\
        \ - This company has not yet begun filing tax returns through Avalara's Managed\
        \ Returns Service.\r\n* `FilingRequested` - The company has requested to begin\
        \ filing tax returns, but Avalara's compliance team has not yet begun filing.\r\
        \n* `FirstFiling` - The company has recently filing tax returns and is in\
        \ a new status.\r\n* `Active` - The company is currently active and is filing\
        \ tax returns via Avalara Managed Returns.\r\n* `Inactive` - The company is\
        \ currently inactive.\n\n### Security Policies\n\n* This API requires one\
        \ of the following user roles: AccountAdmin, AccountOperator, AccountUser,\
        \ CompanyAdmin, CompanyUser, Compliance Root User, ComplianceAdmin, ComplianceUser,\
        \ CSPAdmin, CSPTester, FirmAdmin, FirmUser, ProStoresOperator, Registrar,\
        \ SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser,\
        \ TreasuryAdmin, TreasuryUser.\n"
      operationId: GetFilingStatus
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: string
                example: NotConfiguredForCompliance
                enum:
                - NotConfiguredForCompliance
                - NotYetFiling
                - FilingRequested
                - FirstFiling
                - Active
                - NoReporting
                - Inactive
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
    post:
      tags:
      - Companies
      summary: Change the filing status of this company
      description: "Changes the current filing status of this company.\r\n       \
        \     \r\nFor customers using Avalara's Managed Returns Service, each company\
        \ within their account can request\r\nfor Avalara to file tax returns on their\
        \ behalf.  Avalara compliance team members will review all\r\nrequested filing\
        \ calendars prior to beginning filing tax returns on behalf of this company.\r\
        \n            \r\nThe following changes may be requested through this API:\r\
        \n            \r\n* If a company is in `NotYetFiling` status, the customer\
        \ may request this be changed to `FilingRequested`.\r\n* Avalara compliance\
        \ team members may change a company from `FilingRequested` to `FirstFiling`.\r\
        \n* Avalara compliance team members may change a company from `FirstFiling`\
        \ to `Active`.\r\n            \r\nAll other status changes must be requested\
        \ through the Avalara customer support team.\n\n### Security Policies\n\n\
        * This API requires one of the following user roles: AccountAdmin, AccountOperator,\
        \ AccountUser, CompanyAdmin, CompanyUser, Compliance Root User, ComplianceAdmin,\
        \ ComplianceUser, CSPAdmin, CSPTester, FirmAdmin, FirmUser, ProStoresOperator,\
        \ Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser,\
        \ TreasuryAdmin, TreasuryUser.\n"
      operationId: ChangeFilingStatus
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FilingStatusChangeModel'
          application/json:
            schema:
              $ref: '#/components/schemas/FilingStatusChangeModel'
          text/json:
            schema:
              $ref: '#/components/schemas/FilingStatusChangeModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FilingStatusChangeModel'
        required: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: string
                example: NotConfiguredForCompliance
                enum:
                - NotConfiguredForCompliance
                - NotYetFiling
                - FilingRequested
                - FirstFiling
                - Active
                - NoReporting
                - Inactive
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
  /api/v2/companies/{id}/funding:
    get:
      tags:
      - Companies
      summary: Check managed returns funding status for a company
      description: "This API is available by invitation only.\r\nRequires a subscription\
        \ to Avalara Managed Returns or SST Certified Service Provider.\r\nReturns\
        \ a list of funding setup requests and their current status.\r\nEach object\
        \ in the result is a request that was made to setup or adjust funding status\
        \ for this company.\n\n### Security Policies\n\n* This API depends on the\
        \ following active services:*Returns* (at least one of):  Mrs, MRSComplianceManager,\
        \ AvaTaxCsp.\n* This API requires one of the following user roles: AccountAdmin,\
        \ AccountOperator, AccountUser, CompanyAdmin, CompanyUser, Compliance Root\
        \ User, ComplianceAdmin, ComplianceUser, CSPAdmin, CSPTester, FirmAdmin, FirmUser,\
        \ ProStoresOperator, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin,\
        \ TechnicalSupportUser, TreasuryAdmin, TreasuryUser.\n"
      operationId: ListFundingRequestsByCompany
      parameters:
      - name: id
        in: path
        description: The unique identifier of the company
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FundingStatusModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/companies/{id}/funding/setup:
    post:
      tags:
      - Companies
      summary: Request managed returns funding setup for a company
      description: "This API is available by invitation only.\r\nCompanies that use\
        \ the Avalara Managed Returns or the SST Certified Service Provider services\
        \ are\r\nrequired to setup their funding configuration before Avalara can\
        \ begin filing tax returns on their\r\nbehalf.\r\nFunding configuration for\
        \ each company is set up by submitting a funding setup request, which can\r\
        \nbe sent either via email or via an embedded HTML widget.\r\nWhen the funding\
        \ configuration is submitted to Avalara, it will be reviewed by treasury team\
        \ members\r\nbefore approval.\r\nThis API records that an ambedded HTML funding\
        \ setup widget was activated.\r\nThis API requires a subscription to Avalara\
        \ Managed Returns or SST Certified Service Provider.\n\n### Security Policies\n\
        \n* This API depends on the following active services:*Returns* (at least\
        \ one of):  Mrs, MRSComplianceManager, AvaTaxCsp.\n* This API requires one\
        \ of the following user roles: AccountAdmin, AccountOperator, AccountUser,\
        \ CompanyAdmin, CompanyUser, Compliance Root User, ComplianceAdmin, ComplianceUser,\
        \ CSPAdmin, CSPTester, FirmAdmin, FirmUser, ProStoresOperator, Registrar,\
        \ SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser,\
        \ TreasuryAdmin, TreasuryUser.\n"
      operationId: CreateFundingRequest
      parameters:
      - name: id
        in: path
        description: The unique identifier of the company
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        description: The funding initialization request
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FundingInitiateModel'
          application/json:
            schema:
              $ref: '#/components/schemas/FundingInitiateModel'
          text/json:
            schema:
              $ref: '#/components/schemas/FundingInitiateModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FundingInitiateModel'
        required: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FundingStatusModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
  /api/v2/companies/initialize:
    post:
      tags:
      - Companies
      summary: Quick setup for a company with a single physical address
      description: "Shortcut to quickly setup a single-physical-location company with\
        \ critical information and activate it.\r\nThis API provides quick and simple\
        \ company setup functionality and does the following things:\r\n         \
        \   \r\n* Create a company object with its own tax profile\r\n* Add a key\
        \ contact person for the company\r\n* Set up one physical location for the\
        \ main office\r\n* Declare nexus in all taxing jurisdictions for that main\
        \ office address\r\n* Activate the company\r\n            \r\nThis API only\
        \ provides a limited subset of functionality compared to the 'Create Company'\
        \ API call.\r\nIf you need additional features or options not present in this\
        \ 'Quick Setup' API call, please use the full 'Create Company' call instead.\r\
        \nPlease allow 1 minute before making transactions using the company.\n\n\
        ### Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, CompanyAdmin, CSPTester, FirmAdmin, Registrar, SiteAdmin,\
        \ SSTAdmin, SystemAdmin, TechnicalSupportAdmin.\n"
      operationId: CompanyInitialize
      parameters:
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        description: Information about the company you wish to create.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CompanyInitializationModel'
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyInitializationModel'
          text/json:
            schema:
              $ref: '#/components/schemas/CompanyInitializationModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CompanyInitializationModel'
        required: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
  /api/v2/companies/mrs:
    get:
      tags:
      - Companies
      summary: Retrieve a list of MRS Companies with account
      description: "This API is available by invitation only.\r\n            \r\n\
        Get a list of companies with an active MRS service.\n\n### Security Policies\n\
        \n* This API requires one of the following user roles: AccountAdmin, AccountOperator,\
        \ AccountUser, CompanyAdmin, CompanyUser, Compliance Root User, ComplianceAdmin,\
        \ ComplianceUser, CSPAdmin, CSPTester, FirmAdmin, FirmUser, ProStoresOperator,\
        \ Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser,\
        \ TreasuryAdmin, TreasuryUser.\n"
      operationId: ListMrsCompanies
      parameters:
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MrsCompanyModelFetchResult'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/compliance/taxauthorityjurisdictionrates:
    get:
      tags:
      - Compliance
      summary: Retrieve jurisdiction rate information for tax authority
      description: |
        This API is available by invitation only.

        ### Security Policies

        * This API depends on the following active services:*Returns* (at least one of):  Mrs, MRSComplianceManager, AvaTaxCsp.*Firm Managed* (for accounts managed by a firm):  ARA, ARAManaged.
      operationId: QueryTaxAuthorityJurisdictionRates
      parameters:
      - name: taxAuthorityId
        in: query
        description: Used to limit the jurisdictions returned.
        schema:
          type: integer
          format: int32
      - name: effectiveDate
        in: query
        description: Used to limit the jurisdictions returned.
        schema:
          type: string
          format: date-time
      - name: endDate
        in: query
        description: Used to limit the jurisdictions returned.
        schema:
          type: string
          format: date-time
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).
        schema:
          type: string
      - name: $include
        in: query
        description: A comma separated list of objects to fetch underneath this jurisdiction.
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComplianceJurisdictionRateModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/companies/{companyId}/contacts:
    get:
      tags:
      - Contacts
      summary: Retrieve contacts for this company
      description: "List all contact objects assigned to this company.\r\n       \
        \     \r\nSearch for specific objects using the criteria in the `$filter`\
        \ parameter; full documentation is available on [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/)\
        \ .\r\nPaginate your results using the `$top`, `$skip`, and `$orderby` parameters.\n\
        \n### Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, CSPAdmin, CSPTester,\
        \ FirmAdmin, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser,\
        \ TreasuryAdmin, TreasuryUser.\n"
      operationId: ListContactsByCompany
      parameters:
      - name: companyId
        in: path
        description: The ID of the company that owns these contacts
        required: true
        schema:
          type: integer
          format: int32
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactModelFetchResult'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
    post:
      tags:
      - Contacts
      summary: Create a new contact
      description: "Create one or more new contact objects.\r\nA 'contact' is a person\
        \ associated with a company who is designated to handle certain responsibilities\
        \ of\r\na tax collecting and filing entity.\n\n### Security Policies\n\n*\
        \ This API requires one of the following user roles: AccountAdmin, CompanyAdmin,\
        \ CSPTester, FirmAdmin, SSTAdmin, TechnicalSupportAdmin.\n"
      operationId: CreateContacts
      parameters:
      - name: companyId
        in: path
        description: The ID of the company that owns this contact.
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        description: The contacts you wish to create.
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ContactModel'
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ContactModel'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ContactModel'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ContactModel'
        required: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContactModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
  /api/v2/companies/{companyId}/contacts/{id}:
    get:
      tags:
      - Contacts
      summary: Retrieve a single contact
      description: "Get the contact object identified by this URL.\r\nA 'contact'\
        \ is a person associated with a company who is designated to handle certain\
        \ responsibilities of\r\na tax collecting and filing entity.\n\n### Security\
        \ Policies\n\n* This API requires one of the following user roles: AccountAdmin,\
        \ AccountUser, CompanyAdmin, CompanyUser, CSPAdmin, CSPTester, FirmAdmin,\
        \ SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser,\
        \ TreasuryAdmin, TreasuryUser.\n"
      operationId: GetContact
      parameters:
      - name: companyId
        in: path
        description: The ID of the company for this contact
        required: true
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: The primary key of this contact
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
    put:
      tags:
      - Contacts
      summary: Update a single contact
      description: "Replace the existing contact object at this URL with an updated\
        \ object.\r\nA 'contact' is a person associated with a company who is designated\
        \ to handle certain responsibilities of\r\na tax collecting and filing entity.\r\
        \nAll data from the existing object will be replaced with data in the object\
        \ you PUT.\r\nTo set a field's value to null, you may either set its value\
        \ to null or omit that field from the object you post.\n\n### Security Policies\n\
        \n* This API requires one of the following user roles: AccountAdmin, CompanyAdmin,\
        \ CSPTester, FirmAdmin, SSTAdmin, TechnicalSupportAdmin.\n"
      operationId: UpdateContact
      parameters:
      - name: companyId
        in: path
        description: The ID of the company that this contact belongs to.
        required: true
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: The ID of the contact you wish to update
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        description: The contact you wish to update.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ContactModel'
          application/json:
            schema:
              $ref: '#/components/schemas/ContactModel'
          text/json:
            schema:
              $ref: '#/components/schemas/ContactModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ContactModel'
        required: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
    delete:
      tags:
      - Contacts
      summary: Delete a single contact
      description: |
        Mark the existing contact object at this URL as deleted.

        ### Security Policies

        * This API requires one of the following user roles: AccountAdmin, CompanyAdmin, CSPTester, FirmAdmin, SSTAdmin, TechnicalSupportAdmin.
      operationId: DeleteContact
      parameters:
      - name: companyId
        in: path
        description: The ID of the company that owns this contact.
        required: true
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: The ID of the contact you wish to delete.
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorDetail'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/contacts:
    get:
      tags:
      - Contacts
      summary: Retrieve all contacts
      description: "Get multiple contact objects across all companies.\r\nA 'contact'\
        \ is a person associated with a company who is designated to handle certain\
        \ responsibilities of\r\na tax collecting and filing entity.\r\n         \
        \   \r\nSearch for specific objects using the criteria in the `$filter` parameter;\
        \ full documentation is available on [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/)\
        \ .\r\nPaginate your results using the `$top`, `$skip`, and `$orderby` parameters.\n\
        \n### Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, CSPAdmin, CSPTester,\
        \ FirmAdmin, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser,\
        \ TreasuryAdmin, TreasuryUser.\n"
      operationId: QueryContacts
      parameters:
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactModelFetchResult'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/companies/{companyId}/customers:
    get:
      tags:
      - Customers
      summary: List all customers for this company
      description: "List all customers recorded by this company matching the specified\
        \ criteria.\r\n            \r\nA customer object defines information about\
        \ a person or business that purchases products from your\r\ncompany.  When\
        \ you create a tax transaction in AvaTax, you can use the `customerCode` from\
        \ this\r\nrecord in your `CreateTransaction` API call.  AvaTax will search\
        \ for this `customerCode` value and\r\nidentify any certificates linked to\
        \ this `customer` object.  If any certificate applies to the transaction,\r\
        \nAvaTax will record the appropriate elements of the transaction as exempt\
        \ and link it to the `certificate`.\r\n            \r\nYou can use the `$include`\
        \ parameter to fetch the following additional objects for expansion:\r\n \
        \           \r\n* Certificates - Fetch a list of certificates linked to this\
        \ customer.\r\n* attributes - Retrieves all attributes applied to the customer.\r\
        \n            \r\nBefore you can use any exemption certificates endpoints,\
        \ you must set up your company for exemption certificate data storage.\r\n\
        Companies that do not have this storage system set up will see `CertCaptureNotConfiguredError`\
        \ when they call exemption \r\ncertificate related APIs. To check if this\
        \ is set up for a company, call `GetCertificateSetup`.  To request setup of\
        \ exemption \r\ncertificate storage for this company, call `RequestCertificateSetup`.\n\
        \n### Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, CSPTester,\
        \ SSTAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n* This API depends\
        \ on the following active services:*Required* (all):  AvaTaxPro.\n"
      operationId: QueryCustomers
      parameters:
      - name: companyId
        in: path
        description: The unique ID number of the company that recorded this customer
        required: true
        schema:
          type: integer
          format: int32
      - name: $include
        in: query
        description: OPTIONAL - You can specify the value `certificates` to fetch
          information about certificates linked to the customer.
        schema:
          type: string
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br
          />*Not filterable:* shipTos
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerModelFetchResult'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
    post:
      tags:
      - Customers
      summary: Create customers for this company
      description: "Create one or more customers for this company.\r\n           \
        \ \r\nA customer object defines information about a person or business that\
        \ purchases products from your\r\ncompany.  When you create a tax transaction\
        \ in AvaTax, you can use the `customerCode` from this\r\nrecord in your `CreateTransaction`\
        \ API call.  AvaTax will search for this `customerCode` value and\r\nidentify\
        \ any certificates linked to this `customer` object.  If any certificate applies\
        \ to the transaction,\r\nAvaTax will record the appropriate elements of the\
        \ transaction as exempt and link it to the `certificate`.\r\n            \r\
        \nA nested object such as CustomFields could be specified and created along\
        \ with the customer object. To fetch the\r\nnested object, please call 'GetCustomer'\
        \ API with appropriate $include parameters.\r\n            \r\nBefore you\
        \ can use any exemption certificates endpoints, you must set up your company\
        \ for exemption certificate data storage.\r\nCompanies that do not have this\
        \ storage system set up will see `CertCaptureNotConfiguredError` when they\
        \ call exemption \r\ncertificate related APIs. To check if this is set up\
        \ for a company, call `GetCertificateSetup`.  To request setup of exemption\
        \ \r\ncertificate storage for this company, call `RequestCertificateSetup`.\n\
        \n### Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, CSPTester,\
        \ SSTAdmin, TechnicalSupportAdmin.\n* This API depends on the following active\
        \ services:*Required* (all):  AvaTaxPro.\n"
      operationId: CreateCustomers
      parameters:
      - name: companyId
        in: path
        description: The unique ID number of the company that recorded this customer
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        description: The list of customer objects to be created
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CustomerModel'
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CustomerModel'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CustomerModel'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CustomerModel'
        required: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
  /api/v2/companies/{companyId}/customers/{customerCode}:
    get:
      tags:
      - Customers
      summary: Retrieve a single customer
      description: "Retrieve the customer identified by this URL.\r\n            \r\
        \nA customer object defines information about a person or business that purchases\
        \ products from your\r\ncompany.  When you create a tax transaction in AvaTax,\
        \ you can use the `customerCode` from this\r\nrecord in your `CreateTransaction`\
        \ API call.  AvaTax will search for this `customerCode` value and\r\nidentify\
        \ any certificates linked to this customer object.  If any certificate applies\
        \ to the transaction,\r\nAvaTax will record the appropriate elements of the\
        \ transaction as exempt and link it to the `certificate`.\r\n            \r\
        \nYou can use the `$include` parameter to fetch the following additional objects\
        \ for expansion:\r\n            \r\n* Certificates - Fetch a list of certificates\
        \ linked to this customer.\r\n* CustomFields - Fetch a list of custom fields\
        \ associated to this customer.\r\n* attributes - Retrieves all attributes\
        \ applied to the customer.\r\n            \r\nBefore you can use any exemption\
        \ certificates endpoints, you must set up your company for exemption certificate\
        \ data storage.\r\nCompanies that do not have this storage system set up will\
        \ see `CertCaptureNotConfiguredError` when they call exemption \r\ncertificate\
        \ related APIs. To check if this is set up for a company, call `GetCertificateSetup`.\
        \  To request setup of exemption \r\ncertificate storage for this company,\
        \ call `RequestCertificateSetup`.\n\n### Security Policies\n\n* This API requires\
        \ one of the following user roles: AccountAdmin, AccountOperator, AccountUser,\
        \ CompanyAdmin, CompanyUser, CSPTester, SSTAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n\
        * This API depends on the following active services:*Required* (all):  AvaTaxPro.\n"
      operationId: GetCustomer
      parameters:
      - name: companyId
        in: path
        description: The unique ID number of the company that recorded this customer
        required: true
        schema:
          type: integer
          format: int32
      - name: customerCode
        in: path
        description: The unique code representing this customer
        required: true
        schema:
          type: string
      - name: $include
        in: query
        description: Specify optional additional objects to include in this fetch
          request
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
    put:
      tags:
      - Customers
      summary: Update a single customer
      description: "Replace the customer object at this URL with a new record.\r\n\
        \            \r\nA customer object defines information about a person or business\
        \ that purchases products from your\r\ncompany.  When you create a tax transaction\
        \ in AvaTax, you can use the `customerCode` from this\r\nrecord in your `CreateTransaction`\
        \ API call.  AvaTax will search for this `customerCode` value and\r\nidentify\
        \ any certificates linked to this `customer` object.  If any certificate applies\
        \ to the transaction,\r\nAvaTax will record the appropriate elements of the\
        \ transaction as exempt and link it to the `certificate`.\r\n            \r\
        \nBefore you can use any exemption certificates endpoints, you must set up\
        \ your company for exemption certificate data storage.\r\nCompanies that do\
        \ not have this storage system set up will see `CertCaptureNotConfiguredError`\
        \ when they call exemption \r\ncertificate related APIs. To check if this\
        \ is set up for a company, call `GetCertificateSetup`.  To request setup of\
        \ exemption \r\ncertificate storage for this company, call `RequestCertificateSetup`.\n\
        \n### Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, CSPTester,\
        \ SSTAdmin, TechnicalSupportAdmin.\n* This API depends on the following active\
        \ services:*Required* (all):  AvaTaxPro.\n"
      operationId: UpdateCustomer
      parameters:
      - name: companyId
        in: path
        description: The unique ID number of the company that recorded this customer
        required: true
        schema:
          type: integer
          format: int32
      - name: customerCode
        in: path
        description: The unique code representing this customer
        required: true
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        description: The new customer model that will replace the existing record
          at this URL
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CustomerModel'
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerModel'
          text/json:
            schema:
              $ref: '#/components/schemas/CustomerModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CustomerModel'
        required: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
    delete:
      tags:
      - Customers
      summary: Delete a customer record
      description: "Deletes the customer object referenced by this URL.\r\n      \
        \      \r\nA customer object defines information about a person or business\
        \ that purchases products from your\r\ncompany.  When you create a tax transaction\
        \ in AvaTax, you can use the `customerCode` from this\r\nrecord in your `CreateTransaction`\
        \ API call.  AvaTax will search for this `customerCode` value and\r\nidentify\
        \ any certificates linked to this `customer` object.  If any certificate applies\
        \ to the transaction,\r\nAvaTax will record the appropriate elements of the\
        \ transaction as exempt and link it to the `certificate`.\r\n            \r\
        \nBefore you can use any exemption certificates endpoints, you must set up\
        \ your company for exemption certificate data storage.\r\nCompanies that do\
        \ not have this storage system set up will see `CertCaptureNotConfiguredError`\
        \ when they call exemption \r\ncertificate related APIs. To check if this\
        \ is set up for a company, call `GetCertificateSetup`.  To request setup of\
        \ exemption \r\ncertificate storage for this company, call `RequestCertificateSetup`.\n\
        \n### Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, CSPTester,\
        \ SSTAdmin, TechnicalSupportAdmin.\n* This API depends on the following active\
        \ services:*Required* (all):  AvaTaxPro.\n"
      operationId: DeleteCustomer
      parameters:
      - name: companyId
        in: path
        description: The unique ID number of the company that recorded this customer
        required: true
        schema:
          type: integer
          format: int32
      - name: customerCode
        in: path
        description: The unique code representing this customer
        required: true
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/companies/{companyId}/customers/{customerCode}/attributes:
    get:
      tags:
      - Customers
      summary: Retrieve a customer's attributes
      description: "Retrieve the attributes linked to the customer identified by this\
        \ URL.\r\n            \r\nA customer may have multiple attributes that control\
        \ its behavior.  You may link or unlink attributes to a\r\ncustomer at any\
        \ time.  The full list of defined attributes may be found using `QueryCompanyCustomerAttributes`\
        \ API.\r\n            \r\nA customer object defines information about a person\
        \ or business that purchases products from your\r\ncompany.  When you create\
        \ a tax transaction in AvaTax, you can use the `customerCode` from this\r\n\
        record in your `CreateTransaction` API call.  AvaTax will search for this\
        \ `customerCode` value and\r\nidentify any certificates linked to this customer\
        \ object.  If any certificate applies to the transaction,\r\nAvaTax will record\
        \ the appropriate elements of the transaction as exempt and link it to the\
        \ `certificate`.\r\n            \r\nBefore you can use any exemption certificates\
        \ endpoints, you must set up your company for exemption certificate data storage.\r\
        \nCompanies that do not have this storage system set up will see `CertCaptureNotConfiguredError`\
        \ when they call exemption \r\ncertificate related APIs. To check if this\
        \ is set up for a company, call `GetCertificateSetup`.  To request setup of\
        \ exemption \r\ncertificate storage for this company, call `RequestCertificateSetup`.\n\
        \n### Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, CSPTester,\
        \ SSTAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n* This API depends\
        \ on the following active services:*Required* (all):  AvaTaxPro.\n"
      operationId: ListAttributesForCustomer
      parameters:
      - name: companyId
        in: path
        description: The unique ID number of the company that recorded the provided
          customer
        required: true
        schema:
          type: integer
          format: int32
      - name: customerCode
        in: path
        description: The unique code representing the current customer
        required: true
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerAttributeModelFetchResult'
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/companies/{companyId}/customers/{customerCode}/attributes/link:
    put:
      tags:
      - Customers
      summary: Link attributes to a customer
      description: "Link one or many attributes to a customer.\r\n            \r\n\
        A customer may have multiple attributes that control its behavior.  You may\
        \ link or unlink attributes to a\r\ncustomer at any time.  The full list of\
        \ defined attributes may be found using `QueryCompanyCustomerAttributes` API.\r\
        \n            \r\nA customer object defines information about a person or\
        \ business that purchases products from your\r\ncompany.  When you create\
        \ a tax transaction in AvaTax, you can use the `customerCode` from this\r\n\
        record in your `CreateTransaction` API call.  AvaTax will search for this\
        \ `customerCode` value and\r\nidentify any certificates linked to this customer\
        \ object.  If any certificate applies to the transaction,\r\nAvaTax will record\
        \ the appropriate elements of the transaction as exempt and link it to the\
        \ `certificate`.\r\n            \r\nBefore you can use any exemption certificates\
        \ endpoints, you must set up your company for exemption certificate data storage.\r\
        \nCompanies that do not have this storage system set up will see `CertCaptureNotConfiguredError`\
        \ when they call exemption \r\ncertificate related APIs. To check if this\
        \ is set up for a company, call `GetCertificateSetup`.  To request setup of\
        \ exemption \r\ncertificate storage for this company, call `RequestCertificateSetup`.\n\
        \n### Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, CSPTester,\
        \ SSTAdmin, TechnicalSupportAdmin.\n* This API depends on the following active\
        \ services:*Required* (all):  AvaTaxPro.\n"
      operationId: LinkAttributesToCustomer
      parameters:
      - name: companyId
        in: path
        description: The unique ID number of the company that recorded the provided
          customer
        required: true
        schema:
          type: integer
          format: int32
      - name: customerCode
        in: path
        description: The unique code representing the current customer
        required: true
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        description: The list of attributes to link to the customer.
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CustomerAttributeModel'
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CustomerAttributeModel'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CustomerAttributeModel'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CustomerAttributeModel'
        required: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerAttributeModelFetchResult'
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
  /api/v2/companies/{companyId}/customers/{customerCode}/attributes/unlink:
    put:
      tags:
      - Customers
      summary: Unlink attributes from a customer
      description: "Unlink one or many attributes from a customer.\r\n           \
        \ \r\nA customer may have multiple attributes that control its behavior. \
        \ You may link or unlink attributes to a\r\ncustomer at any time.  The full\
        \ list of defined attributes may be found using `QueryCompanyCustomerAttributes`\
        \ API.\r\n            \r\nA customer object defines information about a person\
        \ or business that purchases products from your\r\ncompany.  When you create\
        \ a tax transaction in AvaTax, you can use the `customerCode` from this\r\n\
        record in your `CreateTransaction` API call.  AvaTax will search for this\
        \ `customerCode` value and\r\nidentify any certificates linked to this customer\
        \ object.  If any certificate applies to the transaction,\r\nAvaTax will record\
        \ the appropriate elements of the transaction as exempt and link it to the\
        \ `certificate`.\r\n            \r\nBefore you can use any exemption certificates\
        \ endpoints, you must set up your company for exemption certificate data storage.\r\
        \nCompanies that do not have this storage system set up will see `CertCaptureNotConfiguredError`\
        \ when they call exemption \r\ncertificate related APIs. To check if this\
        \ is set up for a company, call `GetCertificateSetup`.  To request setup of\
        \ exemption \r\ncertificate storage for this company, call `RequestCertificateSetup`.\n\
        \n### Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, CSPTester,\
        \ SSTAdmin, TechnicalSupportAdmin.\n* This API depends on the following active\
        \ services:*Required* (all):  AvaTaxPro.\n"
      operationId: UnlinkAttributesFromCustomer
      parameters:
      - name: companyId
        in: path
        description: The unique ID number of the company that recorded the customer
        required: true
        schema:
          type: integer
          format: int32
      - name: customerCode
        in: path
        description: The unique code representing the current customer
        required: true
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        description: The list of attributes to unlink from the customer.
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CustomerAttributeModel'
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CustomerAttributeModel'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CustomerAttributeModel'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CustomerAttributeModel'
        required: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerAttributeModelFetchResult'
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
  /api/v2/companies/{companyId}/customers/{customerCode}/certificates:
    get:
      tags:
      - Customers
      summary: List certificates linked to a customer
      description: "List all certificates linked to a customer.\r\n            \r\n\
        A customer object defines information about a person or business that purchases\
        \ products from your\r\ncompany.  When you create a tax transaction in AvaTax,\
        \ you can use the `customerCode` from this\r\nrecord in your `CreateTransaction`\
        \ API call.  AvaTax will search for this `customerCode` value and\r\nidentify\
        \ any certificates linked to this `customer` object.  If any certificate applies\
        \ to the transaction,\r\nAvaTax will record the appropriate elements of the\
        \ transaction as exempt and link it to the `certificate`.\r\n            \r\
        \nBefore you can use any exemption certificates endpoints, you must set up\
        \ your company for exemption certificate data storage.\r\nCompanies that do\
        \ not have this storage system set up will see `CertCaptureNotConfiguredError`\
        \ when they call exemption \r\ncertificate related APIs. To check if this\
        \ is set up for a company, call `GetCertificateSetup`.  To request setup of\
        \ exemption \r\ncertificate storage for this company, call `RequestCertificateSetup`.\n\
        \n### Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, CSPTester,\
        \ SSTAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n* This API depends\
        \ on the following active services:*Required* (all):  AvaTaxPro.\n"
      operationId: ListCertificatesForCustomer
      parameters:
      - name: companyId
        in: path
        description: The unique ID number of the company that recorded this customer
        required: true
        schema:
          type: integer
          format: int32
      - name: customerCode
        in: path
        description: The unique code representing this customer
        required: true
        schema:
          type: string
      - name: $include
        in: query
        description: "OPTIONAL: A comma separated list of special fetch options. \
          \ You can specify one or more of the following: customers - Retrieves the list of customers linked to the certificate. po_numbers - Retrieves all PO numbers tied to the certificate. attributes - Retrieves all attributes applied to the certificate."
        schema:
          type: string
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br
          />*Not filterable:* exemptionNumber, status, ecmsId, ecmsStatus, pdf, pages
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateModelFetchResult'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/companies/{companyId}/customers/{customerCode}/certificates/{country}/{region}:
    get:
      tags:
      - Customers
      summary: List valid certificates for a location
      description: "List valid certificates linked to a customer in a particular country\
        \ and region.\r\n            \r\nThis API is intended to help identify whether\
        \ a customer has already provided a certificate that\r\napplies to a particular\
        \ country and region.  This API is intended to help you remind a customer\r\
        \nwhen they have or have not provided copies of their exemption certificates\
        \ to you during the sales\r\norder process.\r\n            \r\nIf a customer\
        \ does not have a certificate on file and they wish to provide one, you should\
        \ send the customer\r\na CertExpress invitation link so that the customer\
        \ can upload proof of their exemption certificate.  Please\r\nsee the `CreateCertExpressInvitation`\
        \ API to create an invitation link for this customer.\r\n            \r\n\
        Before you can use any exemption certificates endpoints, you must set up your\
        \ company for exemption certificate data storage.\r\nCompanies that do not\
        \ have this storage system set up will see `CertCaptureNotConfiguredError`\
        \ when they call exemption \r\ncertificate related APIs. To check if this\
        \ is set up for a company, call `GetCertificateSetup`.  To request setup of\
        \ exemption \r\ncertificate storage for this company, call `RequestCertificateSetup`.\n\
        \n### Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, CSPTester,\
        \ SSTAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n* This API depends\
        \ on the following active services:*Required* (all):  AvaTaxPro.\n"
      operationId: ListValidCertificatesForCustomer
      parameters:
      - name: companyId
        in: path
        description: The unique ID number of the company that recorded this customer
        required: true
        schema:
          type: integer
          format: int32
      - name: customerCode
        in: path
        description: The unique code representing this customer
        required: true
        schema:
          type: string
      - name: country
        in: path
        description: Search for certificates matching this country.  Uses the ISO
          3166 two character country code.
        required: true
        schema:
          type: string
      - name: region
        in: path
        description: Search for certificates matching this region.  Uses the ISO 3166
          two or three character state, region, or province code.
        required: true
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExemptionStatusModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/companies/{companyId}/customers/{customerCode}/certificates/link:
    post:
      tags:
      - Customers
      summary: Link certificates to a customer
      description: "Link one or more certificates to a customer.\r\n            \r\
        \nA customer object defines information about a person or business that purchases\
        \ products from your\r\ncompany.  When you create a tax transaction in AvaTax,\
        \ you can use the `customerCode` from this\r\nrecord in your `CreateTransaction`\
        \ API call.  AvaTax will search for this `customerCode` value and\r\nidentify\
        \ any certificates linked to this `customer` object.  If any certificate applies\
        \ to the transaction,\r\nAvaTax will record the appropriate elements of the\
        \ transaction as exempt and link it to the `certificate`.\r\n            \r\
        \nBefore you can use any exemption certificates endpoints, you must set up\
        \ your company for exemption certificate data storage.\r\nCompanies that do\
        \ not have this storage system set up will see `CertCaptureNotConfiguredError`\
        \ when they call exemption \r\ncertificate related APIs. To check if this\
        \ is set up for a company, call `GetCertificateSetup`.  To request setup of\
        \ exemption \r\ncertificate storage for this company, call `RequestCertificateSetup`.\n\
        \n### Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, CSPTester,\
        \ SSTAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n* This API depends\
        \ on the following active services:*Required* (all):  AvaTaxPro.\n"
      operationId: LinkCertificatesToCustomer
      parameters:
      - name: companyId
        in: path
        description: The unique ID number of the company that recorded this customer
        required: true
        schema:
          type: integer
          format: int32
      - name: customerCode
        in: path
        description: The unique code representing this customer
        required: true
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        description: The list of certificates to link to this customer
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/LinkCertificatesModel'
          application/json:
            schema:
              $ref: '#/components/schemas/LinkCertificatesModel'
          text/json:
            schema:
              $ref: '#/components/schemas/LinkCertificatesModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/LinkCertificatesModel'
        required: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateModelFetchResult'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
  /api/v2/companies/{companyId}/customers/{customerCode}/certificates/unlink:
    post:
      tags:
      - Customers
      summary: Unlink certificates from a customer
      description: "Remove one or more certificates to a customer.\r\n           \
        \ \r\nA customer object defines information about a person or business that\
        \ purchases products from your\r\ncompany.  When you create a tax transaction\
        \ in AvaTax, you can use the `customerCode` from this\r\nrecord in your `CreateTransaction`\
        \ API call.  AvaTax will search for this `customerCode` value and\r\nidentify\
        \ any certificates linked to this `customer` object.  If any certificate applies\
        \ to the transaction,\r\nAvaTax will record the appropriate elements of the\
        \ transaction as exempt and link it to the `certificate`.\r\n            \r\
        \nBefore you can use any exemption certificates endpoints, you must set up\
        \ your company for exemption certificate data storage.\r\nCompanies that do\
        \ not have this storage system set up will see `CertCaptureNotConfiguredError`\
        \ when they call exemption \r\ncertificate related APIs. To check if this\
        \ is set up for a company, call `GetCertificateSetup`.  To request setup of\
        \ exemption \r\ncertificate storage for this company, call `RequestCertificateSetup`.\n\
        \n### Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, CSPTester,\
        \ SSTAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n* This API depends\
        \ on the following active services:*Required* (all):  AvaTaxPro.\n"
      operationId: UnlinkCertificatesFromCustomer
      parameters:
      - name: companyId
        in: path
        description: The unique ID number of the company that recorded this customer
        required: true
        schema:
          type: integer
          format: int32
      - name: customerCode
        in: path
        description: The unique code representing this customer
        required: true
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        description: The list of certificates to link to this customer
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/LinkCertificatesModel'
          application/json:
            schema:
              $ref: '#/components/schemas/LinkCertificatesModel'
          text/json:
            schema:
              $ref: '#/components/schemas/LinkCertificatesModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/LinkCertificatesModel'
        required: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateModelFetchResult'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
  /api/v2/companies/{companyId}/customers/billto/{code}/shipto/link:
    post:
      tags:
      - Customers
      summary: Link two customer records together
      description: "Links a Ship-To customer record with a Bill-To customer record.\r\
        \n            \r\nCustomer records represent businesses or individuals who\
        \ can provide exemption certificates.  Some customers\r\nmay have certificates\
        \ that are linked to their shipping address or their billing address.  To\
        \ group these\r\ncustomer records together, you may link multiple bill-to\
        \ and ship-to addresses together to represent a single\r\nentity that has\
        \ multiple different addresses of different kinds.\r\n            \r\nIn general,\
        \ a customer will have only one primary billing address and multiple ship-to\
        \ addresses, representing\r\nall of the different locations where they receive\
        \ goods.  To facilitate this type of customer, you can send in\r\none bill-to\
        \ customer code and multiple ship-to customer codes in a single API call.\r\
        \n            \r\nNote that you can only link a ship-to customer record to\
        \ a bill-to customer record.  You may not link two customers\r\nof the same\
        \ kind together.\n\n### Security Policies\n\n* This API requires one of the\
        \ following user roles: AccountAdmin, AccountOperator, AccountUser, CompanyAdmin,\
        \ CompanyUser, CSPTester, SSTAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n\
        * This API depends on the following active services:*Required* (all):  AvaTaxPro.\n"
      operationId: LinkShipToCustomersToBillCustomer
      parameters:
      - name: companyId
        in: path
        description: The unique ID number of the company defining customers.
        required: true
        schema:
          type: integer
          format: int32
      - name: code
        in: path
        description: The code of the bill-to customer to link.
        required: true
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        description: A list of information about ship-to customers to link to this
          bill-to customer.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/LinkCustomersModel'
          application/json:
            schema:
              $ref: '#/components/schemas/LinkCustomersModel'
          text/json:
            schema:
              $ref: '#/components/schemas/LinkCustomersModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/LinkCustomersModel'
        required: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
  /api/v2/companies/{companyId}/datasources:
    get:
      tags:
      - DataSources
      summary: Retrieve all datasources for this company
      description: |
        Gets multiple datasource objects for a given company.

        ### Security Policies

        * This API requires one of the following user roles: AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, Compliance Root User, ComplianceAdmin, ComplianceUser, CSPAdmin, CSPTester, FirmAdmin, FirmUser, ProStoresOperator, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser, TreasuryAdmin, TreasuryUser.
        * This API depends on the following active services:*Required* (all):  AvaTaxPro, BasicReturns.
      operationId: ListDataSources
      parameters:
      - name: companyId
        in: path
        description: The id of the company you wish to retrieve the datasources.
        required: true
        schema:
          type: integer
          format: int32
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br
          />*Not filterable:* isEnabled, isSynced, isAuthorized, name, externalState
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSourceModelFetchResult'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
    post:
      tags:
      - DataSources
      summary: Create and store new datasources for the respective companies.
      description: |
        Create one or more datasource objects.

        ### Security Policies

        * This API requires one of the following user roles: AccountAdmin, CompanyAdmin, CSPTester, FirmAdmin, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin.
        * This API depends on the following active services:*Required* (all):  AvaTaxPro, BasicReturns.
      operationId: CreateDataSources
      parameters:
      - name: companyId
        in: path
        description: The id of the company you which to create the datasources
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/DataSourceModel'
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/DataSourceModel'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/DataSourceModel'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/DataSourceModel'
        required: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DataSourceModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
  /api/v2/companies/{companyId}/datasources/{id}:
    get:
      tags:
      - DataSources
      summary: Get data source by data source id
      description: |
        Retrieve the data source by its unique ID number.

        ### Security Policies

        * This API requires one of the following user roles: AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, Compliance Root User, ComplianceAdmin, ComplianceUser, CSPAdmin, CSPTester, FirmAdmin, FirmUser, ProStoresOperator, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser, TreasuryAdmin, TreasuryUser.
        * This API depends on the following active services:*Required* (all):  AvaTaxPro, BasicReturns.
      operationId: GetDataSourceById
      parameters:
      - name: companyId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: data source id
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSourceModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
    put:
      tags:
      - DataSources
      summary: Update a datasource identified by id for a company
      description: |
        Updates a datasource for a company.

        ### Security Policies

        * This API requires one of the following user roles: AccountAdmin, CompanyAdmin, CSPTester, FirmAdmin, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin.
        * This API depends on the following active services:*Required* (all):  AvaTaxPro, BasicReturns.
      operationId: UpdateDataSource
      parameters:
      - name: companyId
        in: path
        description: The id of the company the datasource belongs to.
        required: true
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: The id of the datasource you wish to delete.
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DataSourceModel'
          application/json:
            schema:
              $ref: '#/components/schemas/DataSourceModel'
          text/json:
            schema:
              $ref: '#/components/schemas/DataSourceModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DataSourceModel'
        required: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSourceModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
    delete:
      tags:
      - DataSources
      summary: Delete a datasource by datasource id for a company.
      description: |
        Marks the existing datasource for a company as deleted.

        ### Security Policies

        * This API requires one of the following user roles: AccountAdmin, CompanyAdmin, CSPTester, FirmAdmin, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin.
        * This API depends on the following active services:*Required* (all):  AvaTaxPro, BasicReturns.
      operationId: DeleteDataSource
      parameters:
      - name: companyId
        in: path
        description: The id of the company the datasource belongs to.
        required: true
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: The id of the datasource you wish to delete.
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorDetail'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/datasources:
    get:
      tags:
      - DataSources
      summary: Retrieve all datasources
      description: "Get multiple datasource objects across all companies.\r\n    \
        \        \r\nSearch for specific objects using the criteria in the `$filter`\
        \ parameter; full documentation is available on [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/)\
        \ .\r\nPaginate your results using the `$top`, `$skip`, and `$orderby` parameters.\n\
        \n### Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, Compliance\
        \ Root User, ComplianceAdmin, ComplianceUser, CSPAdmin, CSPTester, FirmAdmin,\
        \ FirmUser, ProStoresOperator, Registrar, SiteAdmin, SSTAdmin, SystemAdmin,\
        \ TechnicalSupportAdmin, TechnicalSupportUser, TreasuryAdmin, TreasuryUser.\n\
        * This API depends on the following active services:*Required* (all):  AvaTaxPro,\
        \ BasicReturns.\n"
      operationId: QueryDataSources
      parameters:
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br
          />*Not filterable:* isEnabled, isSynced, isAuthorized, name, externalState
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSourceModelFetchResult'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/definitions/avafileforms:
    get:
      tags:
      - Definitions
      summary: Retrieve the full list of the AvaFile Forms available
      description: "This API is deprecated.\r\n            \r\nPlease use the ListTaxForms\
        \ API.\r\n            \r\nReturns the full list of Avalara-supported AvaFile\
        \ Forms\r\nThis API is intended to be useful to identify all the different\
        \ AvaFile Forms"
      operationId: ListAvaFileForms
      parameters:
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br
          />*Not filterable:* outletTypeId
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvaFileFormModelFetchResult'
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/definitions/certificateattributes:
    get:
      tags:
      - Definitions
      summary: List certificate attributes used by a company
      description: "List the certificate attributes defined by a company either specified\
        \ by the user or the user's default company.\r\n            \r\nA certificate\
        \ may have multiple attributes that control its behavior.  You may apply or\
        \ remove attributes to a\r\ncertificate at any time.\r\n            \r\nIf\
        \ you see the 'CertCaptureNotConfiguredError', please use CheckProvision and\
        \ RequestProvision endpoints to\r\ncheck and provision account."
      operationId: ListCertificateAttributes
      parameters:
      - name: companyid
        in: query
        description: Id of the company the user wish to fetch the certificates' attributes
          from. If not specified the API will use user's default company.
        schema:
          type: integer
          format: int32
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateAttributeModelFetchResult'
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/definitions/certificateexemptreasons:
    get:
      tags:
      - Definitions
      summary: List the certificate exempt reasons defined by a company
      description: "List the certificate exempt reasons defined by a company.\r\n\
        \            \r\nAn exemption reason defines why a certificate allows a customer\
        \ to be exempt\r\nfor purposes of tax calculation.\r\n            \r\nIf you\
        \ see the 'CertCaptureNotConfiguredError', please use CheckProvision and RequestProvision\
        \ endpoints to\r\ncheck and provision account."
      operationId: ListCertificateExemptReasons
      parameters:
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExemptionReasonModelFetchResult'
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/definitions/certificateexposurezones:
    get:
      tags:
      - Definitions
      summary: List certificate exposure zones used by a company
      description: "List the certificate exposure zones defined by a company.\r\n\
        \            \r\nAn exposure zone is a location where a certificate can be\
        \ valid.  Exposure zones may indicate a taxing\r\nauthority or other legal\
        \ entity to which a certificate may apply.\r\n            \r\nIf you see the\
        \ 'CertCaptureNotConfiguredError', please use CheckProvision and RequestProvision\
        \ endpoints to\r\ncheck and provision account."
      operationId: ListCertificateExposureZones
      parameters:
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br
          />*Not filterable:* id, companyId, name, tag, description, created, modified,
          region, country
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExposureZoneModelFetchResult'
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/definitions/classification/parametersusage:
    get:
      tags:
      - Definitions
      summary: Retrieve the full list of Avalara-supported usage of extra parameters
        for classification of a item.
      description: "Returns the full list of Avalara-supported usage of extra parameters\
        \ for item classification.\r\nThe list of parameters is available for use\
        \ with Item Classification.\r\nSome parameters are only available for use\
        \ if you have subscribed to certain features of AvaTax."
      operationId: ListClassificationParametersUsage
      parameters:
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br
          />*Not filterable:* values
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClassificationParameterUsageMapModelFetchResult'
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/definitions/communications/transactiontypes:
    get:
      tags:
      - Definitions
      summary: Retrieve the full list of communications transactiontypes
      description: "Returns full list of communications transaction types which\r\n\
        are accepted in communication tax calculation requests."
      operationId: ListCommunicationsTransactionTypes
      parameters:
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommunicationsTransactionTypeModelFetchResult'
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/definitions/communications/transactiontypes/{id}/servicetypes:
    get:
      tags:
      - Definitions
      summary: Retrieve the full list of communications service types
      description: Returns full list of service types for a given transaction type
        ID.
      operationId: ListCommunicationsServiceTypes
      parameters:
      - name: id
        in: path
        description: The transaction type ID to examine
        required: true
        schema:
          type: integer
          format: int32
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br
          />*Not filterable:* requiredParameters
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommunicationsTSPairModelFetchResult'
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/definitions/communications/tspairs:
    get:
      tags:
      - Definitions
      summary: Retrieve the full list of communications transaction/service type pairs
      description: "Returns full list of communications transaction/service type pairs\
        \ which\r\nare accepted in communication tax calculation requests."
      operationId: ListCommunicationsTSPairs
      parameters:
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br
          />*Not filterable:* requiredParameters
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommunicationsTSPairModelFetchResult'
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/definitions/countries:
    get:
      tags:
      - Definitions
      summary: List all ISO 3166 countries
      description: "Returns a list of all ISO 3166 country codes, and their US English\
        \ friendly names.\r\nThis API is intended to be useful when presenting a dropdown\
        \ box in your website to allow customers to select a country for\r\na shipping\
        \ address."
      operationId: ListCountries
      parameters:
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br
          />*Not filterable:* alpha3Code, isEuropeanUnion, localizedNames, addressesRequireRegion
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IsoCountryModelFetchResult'
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/definitions/countries/{country}/ratetypes:
    get:
      tags:
      - Definitions
      summary: Retrieve the full list of rate types for each country
      description: "Returns the full list of Avalara-supported rate type file types\r\
        \nThis API is intended to be useful to identify all the different rate types."
      operationId: ListRateTypesByCountry
      parameters:
      - name: country
        in: path
        description: The country to examine for rate types
        required: true
        schema:
          type: string
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateTypeModelFetchResult'
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/definitions/countries/{country}/regions:
    get:
      tags:
      - Definitions
      summary: List all ISO 3166 regions for a country
      description: "Returns a list of all ISO 3166 region codes for a specific country\
        \ code, and their US English friendly names.\r\nThis API is intended to be\
        \ useful when presenting a dropdown box in your website to allow customers\
        \ to select a region\r\nwithin the country for a shipping addresses."
      operationId: ListRegionsByCountry
      parameters:
      - name: country
        in: path
        description: The country of which you want to fetch ISO 3166 regions
        required: true
        schema:
          type: string
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br
          />*Not filterable:* localizedNames
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IsoRegionModelFetchResult'
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/definitions/countries/{country}/taxtypes/{taxTypeId}/taxsubtypes/{taxSubTypeId}/ratetypes:
    get:
      tags:
      - Definitions
      summary: Retrieve the list of rate types by country, TaxType and by TaxSubType
      description: "Returns the list of Avalara-supported rate type file types\r\n\
        This API is intended to be useful to identify all the different rate types."
      operationId: ListRateTypesByCountryTaxTypeTaxSubType
      parameters:
      - name: country
        in: path
        description: The country to examine for rate types
        required: true
        schema:
          type: string
      - name: taxTypeId
        in: path
        description: The taxType for the country to examine for rate types
        required: true
        schema:
          type: string
      - name: taxSubTypeId
        in: path
        description: The taxSubType for the country and taxType to examine for rate
          types
        required: true
        schema:
          type: string
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br
          />*Not filterable:* id, rateType, description
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateTypesModelFetchResult'
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/definitions/coverletters:
    get:
      tags:
      - Definitions
      summary: List certificate exposure zones used by a company
      description: "List available cover letters that can be used when sending invitation\
        \ to use CertExpress to upload certificates.\r\n            \r\nThe CoverLetter\
        \ model represents a message sent along with an invitation to use CertExpress\
        \ to\r\nupload certificates.  An invitation allows customers to use CertExpress\
        \ to upload their exemption\r\ncertificates directly; this cover letter explains\
        \ why the invitation was sent.\r\n            \r\nIf you see the 'CertCaptureNotConfiguredError',\
        \ please use CheckProvision and RequestProvision endpoints to\r\ncheck and\
        \ provision account."
      operationId: ListCoverLetters
      parameters:
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br
          />*Not filterable:* id, companyId, subject, description, createdDate, modifiedDate,
          pageCount, templateFilename, version
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoverLetterModelFetchResult'
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/definitions/crossborder/{country}/{hsCode}:
    get:
      tags:
      - Definitions
      summary: Lists the next level of HS Codes given a destination country and HS
        Code prefix.
      description: "Retrieves a list of HS Codes that are the children of the prefix\
        \ for the given destination country, if\r\nadditional children are available.\r\
        \n            \r\nHS Code is interchangeable with \"tariff code\" and definitions\
        \ are generally unique to a destination country.\r\nAn HS Code describes an\
        \ item and its eligibility/rate for tariffs. HS Codes are organized by\r\n\
        Section/Chapter/Heading/Subheading/Classification.\r\n            \r\nThis\
        \ API is intended to be useful to identify the correct HS Code to use for\
        \ your item.\n\n### Security Policies\n\n* This API depends on the following\
        \ active services:*Required* (all):  AvaTaxGlobal.\n"
      operationId: ListCrossBorderCodes
      parameters:
      - name: country
        in: path
        description: The name or code of the destination country.
        required: true
        schema:
          type: string
      - name: hsCode
        in: path
        description: The Section or partial HS Code for which you would like to view
          the next level of HS Code detail, if more detail is available.
        required: true
        schema:
          type: string
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br
          />*Not filterable:* hsCodeSource, system, destinationCountry, isDecisionNode,
          zeroPaddingCount, isSystemDefined, isTaxable, effDate, endDate, hsCodeSourceLength
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HsCodeModelFetchResult'
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/definitions/crossborder/{country}/{hsCode}/hierarchy:
    get:
      tags:
      - Definitions
      summary: Lists all parents of an HS Code.
      description: "Retrieves the specified HS code and all of its parents, reflecting\
        \ all sections, chapters, headings, and subheadings\r\n            \r\na list\
        \ of HS Codes that are the parents and information branches of the HS Code\
        \ for the given\r\ndestination country, if lower detail is available.\r\n\
        \            \r\nThis API will include information branches if applicable.\
        \ These do not have HS Codes and cannot be referenced,\r\nbut can contain\
        \ information relevant to deciding the correct HS Code.\r\n            \r\n\
        This API is intended to be useful to review the descriptive hierarchy of an\
        \ HS Code, which can be particularly helpful\r\nwhen HS Codes can have multiple\
        \ levels of generic descriptions.\n\n### Security Policies\n\n* This API depends\
        \ on the following active services:*Required* (all):  AvaTaxGlobal.\n"
      operationId: GetCrossBorderCode
      parameters:
      - name: country
        in: path
        description: The name or code of the destination country.
        required: true
        schema:
          type: string
      - name: hsCode
        in: path
        description: The partial or full HS Code for which you would like to view
          all of the parents.
        required: true
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HsCodeModelFetchResult'
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/definitions/crossborder/sections:
    get:
      tags:
      - Definitions
      summary: List top level HS Code Sections.
      description: "Returns the full list of top level HS Code Sections. Sections\
        \ are the broadest level of detail for\r\nclassifying tariff codes and the\
        \ items to which they apply. HS Codes are organized\r\nby Section/Chapter/Heading/Subheading/Classification.\r\
        \n            \r\nThis API is intended to be useful to identify the top level\
        \ Sections for\r\nfurther LandedCost HS Code lookups.\n\n### Security Policies\n\
        \n* This API depends on the following active services:*Required* (all):  AvaTaxGlobal.\n"
      operationId: ListCrossBorderSections
      parameters:
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HsCodeModelFetchResult'
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/definitions/currencies:
    get:
      tags:
      - Definitions
      summary: List all ISO 4217 currencies supported by AvaTax.
      description: "Lists all ISO 4217 currencies supported by AvaTax.\r\n       \
        \     \r\nThis API produces a list of currency codes that can be used when\
        \ calling AvaTax.  The values from this API can be used to fill out the\r\n\
        `currencyCode` field in a `CreateTransactionModel`."
      operationId: ListCurrencies
      parameters:
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrencyModelFetchResult'
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/definitions/entityusecodes:
    get:
      tags:
      - Definitions
      summary: Retrieve the full list of Avalara-supported entity use codes
      description: "Returns the full list of Avalara-supported entity use codes.\r\
        \nEntity/Use Codes are definitions of the entity who is purchasing something,\
        \ or the purpose for which the transaction\r\nis occurring.  This information\
        \ is generally used to determine taxability of the product.\r\nIn order to\
        \ facilitate correct reporting of your taxes, you are encouraged to select\
        \ the proper entity use codes for\r\nall transactions that are exempt."
      operationId: ListEntityUseCodes
      parameters:
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br
          />*Not filterable:* validCountries
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityUseCodeModelFetchResult'
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/definitions/filingcalendars/loginverifiers:
    get:
      tags:
      - Definitions
      summary: List all forms where logins can be verified automatically
      description: "List all forms where logins can be verified automatically.\r\n\
        This API is intended to be useful to identify whether the user should be allowed\r\
        \nto automatically verify their login and password."
      operationId: ListLoginVerifiers
      parameters:
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br
          />*Not filterable:* taxFormCodes, scraperType, expectedResponseTime, requiredFilingCalendarDataFields
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SkyscraperStatusModelFetchResult'
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/definitions/filingcalendars/loginverifiers/{form}:
    get:
      tags:
      - Definitions
      summary: Test whether a form supports online login verification
      description: "This API is intended to be useful to identify whether the user\
        \ should be allowed\r\nto automatically verify their login and password. This\
        \ API will provide a result only if the form supports automatic online login\
        \ verification."
      operationId: GetLoginVerifierByForm
      parameters:
      - name: form
        in: path
        description: The name of the form you would like to verify. This is the tax
          form code
        required: true
        schema:
          type: string
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br
          />*Not filterable:* taxFormCodes, scraperType, expectedResponseTime, requiredFilingCalendarDataFields
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SkyscraperStatusModelFetchResult'
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/definitions/filingfrequencies:
    get:
      tags:
      - Definitions
      summary: Retrieve the full list of Avalara-supported filing frequencies.
      description: "Returns the full list of Avalara-supported filing frequencies.\r\
        \nThis API is intended to be useful to identify all the different filing frequencies\
        \ that can be used in notices."
      operationId: ListFilingFrequencies
      parameters:
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilingFrequencyModelFetchResult'
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/definitions/jurisdictions:
    get:
      tags:
      - Definitions
      summary: List jurisdictions based on the filter provided
      description: "Returns a list of all Avalara-supported taxing jurisdictions.\r\
        \n            \r\nThis API allows you to examine all Avalara-supported jurisdictions.\
        \ You can filter your search by supplying\r\nSQL-like query for fetching only\
        \ the ones you concerned about. For example: effectiveDate > '2016-01-01'\r\
        \n            \r\nThe rate, salesRate, and useRate fields are not available\
        \ on the JurisdictionModels returned by this API."
      operationId: ListJurisdictions
      parameters:
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br
          />*Not filterable:* rate, salesRate, signatureCode, useRate
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JurisdictionModelFetchResult'
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/definitions/jurisdictions/countries/{country}/regions/{region}/taxtypes/{taxTypeId}/taxsubtypes/{taxSubTypeId}:
    get:
      tags:
      - Definitions
      summary: List jurisdictions based on the TaxType, TaxSubType and RateType provided
      description: "Returns a list of all Avalara-supported taxing jurisdictions filtered\
        \ by TaxType, TaxSubType and RateType.\r\n            \r\nThis API allows\
        \ you to examine all Avalara-supported jurisdictions. You can filter your\
        \ search by supplying\r\nSQL-like query for fetching only the ones you concerned\
        \ about. For example: effectiveDate > '2016-01-01'\r\n            \r\nThe\
        \ jurisdictionType, effectiveDate, and endDate are filterable fields available\
        \ on the JurisdictionRateTypeTaxTypeMappingModels returned by this API."
      operationId: ListJurisdictionsByRateTypeTaxTypeMapping
      parameters:
      - name: country
        in: path
        description: The country for which you want to retrieve the jurisdiction information
        required: true
        schema:
          type: string
      - name: region
        in: path
        description: The region for which you want to retrieve the jurisdiction information
        required: true
        schema:
          type: string
      - name: taxTypeId
        in: path
        description: The taxtype for which you want to retrieve the jurisdiction information
        required: true
        schema:
          type: string
      - name: taxSubTypeId
        in: path
        description: The taxsubtype for which you want to retrieve the jurisdiction
          information
        required: true
        schema:
          type: string
      - name: rateTypeId
        in: query
        description: The ratetype for which you want to retrieve the jurisdiction
          information
        required: true
        schema:
          type: string
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br
          />*Not filterable:* id, country, state, jurisdictionCode, longName, taxTypeId,
          taxSubTypeId, taxTypeGroupId, rateTypeId
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JurisdictionRateTypeTaxTypeMappingModelFetchResult'
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/definitions/jurisdictionsnearaddress:
    get:
      tags:
      - Definitions
      summary: List jurisdictions near a specific address
      description: "Returns a list of all Avalara-supported taxing jurisdictions that\
        \ apply to this address.\r\n            \r\nThis API allows you to identify\
        \ which jurisdictions are nearby a specific address according to the best\
        \ available geocoding information.\r\nIt is intended to allow you to create\
        \ a \"Jurisdiction Override\", which allows an address to be configured as\
        \ belonging to a nearby\r\njurisdiction in AvaTax.\r\n            \r\nThe\
        \ results of this API call can be passed to the `CreateJurisdictionOverride`\
        \ API call."
      operationId: ListJurisdictionsByAddress
      parameters:
      - name: line1
        in: query
        description: The first address line portion of this address.
        schema:
          type: string
      - name: line2
        in: query
        description: The second address line portion of this address.
        schema:
          type: string
      - name: line3
        in: query
        description: The third address line portion of this address.
        schema:
          type: string
      - name: city
        in: query
        description: The city portion of this address.
        schema:
          type: string
      - name: region
        in: query
        description: The region, state, or province code portion of this address.
        schema:
          maxLength: 3
          minLength: 0
          type: string
      - name: postalCode
        in: query
        description: The postal code or zip code portion of this address.
        schema:
          type: string
      - name: country
        in: query
        description: The two-character ISO-3166 code of the country portion of this
          address.
        required: true
        schema:
          maxLength: 2
          minLength: 0
          type: string
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br
          />*Not filterable:* country, Jurisdictions
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JurisdictionOverrideModelFetchResult'
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/definitions/listallmarketplacelocations:
    get:
      tags:
      - Definitions
      summary: List all market place locations.
      description: List all market place locations.
      operationId: ListAllMarketplaceLocations
      parameters:
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketplaceModelFetchResult'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/definitions/locationquestions:
    get:
      tags:
      - Definitions
      summary: Retrieve the list of questions that are required for a tax location
      description: "Returns the list of additional questions you must answer when\
        \ declaring a location in certain taxing jurisdictions.\r\nSome tax jurisdictions\
        \ require that you register or provide additional information to configure\
        \ each physical place where\r\nyour company does business.\r\nThis information\
        \ is not usually required in order to calculate tax correctly, but is almost\
        \ always required to file your tax correctly.\r\nYou can call this API call\
        \ for any address and obtain information about what questions must be answered\
        \ in order to properly\r\nfile tax in that location."
      operationId: ListLocationQuestionsByAddress
      parameters:
      - name: line1
        in: query
        description: The first line of this location's address.
        schema:
          type: string
      - name: line2
        in: query
        description: The second line of this location's address.
        schema:
          type: string
      - name: line3
        in: query
        description: The third line of this location's address.
        schema:
          type: string
      - name: city
        in: query
        description: The city part of this location's address.
        schema:
          type: string
      - name: region
        in: query
        description: The region, state, or province part of this location's address.
        schema:
          type: string
      - name: postalCode
        in: query
        description: The postal code of this location's address.
        schema:
          type: string
      - name: country
        in: query
        description: The country part of this location's address.
        schema:
          type: string
      - name: latitude
        in: query
        description: Optionally identify the location via latitude/longitude instead
          of via address.
        schema:
          type: number
          format: double
      - name: longitude
        in: query
        description: Optionally identify the location via latitude/longitude instead
          of via address.
        schema:
          type: number
          format: double
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationQuestionModelFetchResult'
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/definitions/marketplacelocations:
    get:
      tags:
      - Definitions
      summary: Retrieve the list of locations for a marketplace.
      description: Retrieves the list of suggested locations for a marketplace.
      operationId: ListMarketplaceLocations
      parameters:
      - name: marketplaceId
        in: query
        description: MarketplaceId of a marketplace
        required: true
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketplaceLocationModelFetchResult'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/definitions/nexus:
    get:
      tags:
      - Definitions
      summary: Retrieve the full list of Avalara-supported nexus for all countries
        and regions.
      description: "Returns the full list of all Avalara-supported nexus for all countries\
        \ and regions.\r\n            \r\nThis API is intended to be useful if your\
        \ user interface needs to display a selectable list of nexus."
      operationId: ListNexus
      parameters:
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br
          />*Not filterable:* streamlinedSalesTax, isSSTActive, taxTypeGroup, taxAuthorityId,
          taxName, parameters, taxableNexus
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NexusModelFetchResult'
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/definitions/nexus/{country}:
    get:
      tags:
      - Definitions
      summary: Retrieve the full list of Avalara-supported nexus for a country.
      description: "Returns all Avalara-supported nexus for the specified country.\r\
        \n            \r\nThis API is intended to be useful if your user interface\
        \ needs to display a selectable list of nexus filtered by country."
      operationId: ListNexusByCountry
      parameters:
      - name: country
        in: path
        description: The country in which you want to fetch the system nexus
        required: true
        schema:
          type: string
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br
          />*Not filterable:* streamlinedSalesTax, isSSTActive, taxTypeGroup, taxAuthorityId,
          taxName, parameters, taxableNexus
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NexusModelFetchResult'
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/definitions/nexus/{country}/{region}:
    get:
      tags:
      - Definitions
      summary: Retrieve the full list of Avalara-supported nexus for a country and
        region.
      description: "Returns all Avalara-supported nexus for the specified country\
        \ and region.\r\n            \r\nThis API is intended to be useful if your\
        \ user interface needs to display a selectable list of nexus filtered by country\
        \ and region."
      operationId: ListNexusByCountryAndRegion
      parameters:
      - name: country
        in: path
        description: The two-character ISO-3166 code for the country.
        required: true
        schema:
          type: string
      - name: region
        in: path
        description: The two or three character region code for the region.
        required: true
        schema:
          type: string
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br
          />*Not filterable:* streamlinedSalesTax, isSSTActive, taxTypeGroup, taxAuthorityId,
          taxName, parameters, taxableNexus
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NexusModelFetchResult'
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/definitions/nexus/byaddress:
    get:
      tags:
      - Definitions
      summary: List all nexus that apply to a specific address.
      description: "Returns a list of all Avalara-supported taxing jurisdictions that\
        \ apply to this address.\r\nThis API allows you to identify which tax authorities\
        \ apply to a physical location, salesperson address, or point of sale.\r\n\
        In general, it is usually expected that a company will declare nexus in all\
        \ the jurisdictions that apply to each physical address\r\nwhere the company\
        \ does business.\r\nThe results of this API call can be passed to the 'Create\
        \ Nexus' API call to declare nexus for this address."
      operationId: ListNexusByAddress
      parameters:
      - name: line1
        in: query
        description: The first address line portion of this address.
        schema:
          type: string
      - name: line2
        in: query
        description: The first address line portion of this address.
        schema:
          type: string
      - name: line3
        in: query
        description: The first address line portion of this address.
        schema:
          type: string
      - name: city
        in: query
        description: The city portion of this address.
        schema:
          type: string
      - name: region
        in: query
        description: "Name or ISO 3166 code identifying the region portion of the\
          \ address. This field supports many different\
          \ region identifiers: * Two and three character ISO 3166\
          \ region codes. \ Fully spelled out names of the region\
          \ in ISO supported languages. Common alternative spellings\
          \ for many regions. For a full list of all\
          \ supported codes and names, please see the Definitions API `ListRegions`."
        required: true
        schema:
          type: string
      - name: postalCode
        in: query
        description: The postal code or zip code portion of this address.
        schema:
          type: string
      - name: country
        in: query
        description: "Name or ISO 3166 code identifying the country portion of this\
          \ address. This field supports many different\
          \ country identifiers: Two character ISO 3166 codes. Three character ISO 3166 codes. Fully\
          \ spelled out names of the country in ISO supported languages. Common alternative spellings for many countries. For a full list of all supported codes and names, please\
          \ see the Definitions API `ListCountries`."
        required: true
        schema:
          type: string
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br
          />*Not filterable:* streamlinedSalesTax, isSSTActive, taxTypeGroup, taxAuthorityId,
          taxName, parameters, taxableNexus
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NexusModelFetchResult'
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/definitions/nexus/byform/{formCode}:
    get:
      tags:
      - Definitions
      summary: List nexus related to a tax form
      description: "Retrieves a list of nexus related to a tax form.\r\n         \
        \   \r\nThe concept of `Nexus` indicates a place where your company has sufficient\
        \ physical presence and is obligated\r\nto collect and remit transaction-based\
        \ taxes.\r\n            \r\nWhen defining companies in AvaTax, you must declare\
        \ nexus for your company in order to correctly calculate tax\r\nin all jurisdictions\
        \ affected by your transactions.\r\n            \r\nThis API is intended to\
        \ provide useful information when examining a tax form.  If you are about\
        \ to begin filing\r\na tax form, you may want to know whether you have declared\
        \ nexus in all the jurisdictions related to that tax\r\nform in order to better\
        \ understand how the form will be filled out.\n\n### Security Policies\n\n\
        * This API requires one of the following user roles: AccountAdmin, AccountUser,\
        \ CompanyAdmin, CompanyUser, Compliance Root User, ComplianceAdmin, ComplianceUser,\
        \ CSPAdmin, CSPTester, FirmAdmin, FirmUser, SiteAdmin, SSTAdmin, SystemAdmin,\
        \ TechnicalSupportAdmin, TechnicalSupportUser.\n"
      operationId: ListNexusByFormCode
      parameters:
      - name: formCode
        in: path
        description: The form code that we are looking up the nexus for
        required: true
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NexusByTaxFormModel'
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/definitions/nexus/bytaxtypegroup/{taxTypeGroup}:
    get:
      tags:
      - Definitions
      summary: Retrieve the full list of Avalara-supported nexus for a tax type group.
      description: "Returns all Avalara-supported nexus for the specified specified\
        \ tax type group.\r\n            \r\nThis API is intended to be useful if\
        \ your user interface needs to display a selectable list of nexus filtered\
        \ by tax type group."
      operationId: ListNexusByTaxTypeGroup
      parameters:
      - name: taxTypeGroup
        in: path
        description: The tax type group to fetch the supporting system nexus for.
        required: true
        schema:
          type: string
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br
          />*Not filterable:* streamlinedSalesTax, isSSTActive, taxTypeGroup, taxAuthorityId,
          taxName, parameters, taxableNexus
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NexusModelFetchResult'
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/definitions/nexustaxtypegroups:
    get:
      tags:
      - Definitions
      summary: Retrieve the full list of nexus tax type groups
      description: "Returns the full list of Avalara-supported nexus tax type groups\r\
        \nThis API is intended to be useful to identify all the different tax sub-types."
      operationId: ListNexusTaxTypeGroups
      parameters:
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br
          />*Not filterable:* subscriptionTypeId, subscriptionDescription, tabName,
          showColumn
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NexusTaxTypeGroupModelFetchResult'
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/definitions/noticecustomerfundingoptions:
    get:
      tags:
      - Definitions
      summary: Retrieve the full list of Avalara-supported tax notice customer funding
        options.
      description: "Returns the full list of Avalara-supported tax notice customer\
        \ funding options.\r\nThis API is intended to be useful to identify all the\
        \ different notice customer funding options that can be used in notices."
      operationId: ListNoticeCustomerFundingOptions
      parameters:
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br
          />*Not filterable:* activeFlag, sortOrder
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoticeCustomerFundingOptionModelFetchResult'
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/definitions/noticecustomertypes:
    get:
      tags:
      - Definitions
      summary: Retrieve the full list of Avalara-supported tax notice customer types.
      description: "Returns the full list of Avalara-supported tax notice customer\
        \ types.\r\nThis API is intended to be useful to identify all the different\
        \ notice customer types."
      operationId: ListNoticeCustomerTypes
      parameters:
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br
          />*Not filterable:* activeFlag, sortOrder
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoticeCustomerTypeModelFetchResult'
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/definitions/noticefilingtypes:
    get:
      tags:
      - Definitions
      summary: Retrieve the full list of Avalara-supported tax notice filing types.
      description: "Returns the full list of Avalara-supported tax notice filing types.\r\
        \nThis API is intended to be useful to identify all the different notice filing\
        \ types that can be used in notices."
      operationId: ListNoticeFilingtypes
      parameters:
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br
          />*Not filterable:* description, activeFlag, sortOrder
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoticeFilingTypeModelFetchResult'
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/definitions/noticepriorities:
    get:
      tags:
      - Definitions
      summary: Retrieve the full list of Avalara-supported tax notice priorities.
      description: "Returns the full list of Avalara-supported tax notice priorities.\r\
        \nThis API is intended to be useful to identify all the different notice priorities\
        \ that can be used in notices."
      operationId: ListNoticePriorities
      parameters:
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br
          />*Not filterable:* activeFlag, sortOrder
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoticePriorityModelFetchResult'
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/definitions/noticereasons:
    get:
      tags:
      - Definitions
      summary: Retrieve the full list of Avalara-supported tax notice reasons.
      description: "Returns the full list of Avalara-supported tax notice reasons.\r\
        \nThis API is intended to be useful to identify all the different tax notice\
        \ reasons."
      operationId: ListNoticeReasons
      parameters:
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br
          />*Not filterable:* description, activeFlag, sortOrder
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoticeReasonModelFetchResult'
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/definitions/noticeresponsibilities:
    get:
      tags:
      - Definitions
      summary: Retrieve the full list of Avalara-supported tax notice responsibility
        ids
      description: "Returns the full list of Avalara-supported tax notice responsibility\
        \ ids\r\nThis API is intended to be useful to identify all the different tax\
        \ notice responsibilities."
      operationId: ListNoticeResponsibilities
      parameters:
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br
          />*Not filterable:* sortOrder
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoticeResponsibilityModelFetchResult'
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/definitions/noticerootcauses:
    get:
      tags:
      - Definitions
      summary: Retrieve the full list of Avalara-supported tax notice root causes
      description: "Returns the full list of Avalara-supported tax notice root causes\r\
        \nThis API is intended to be useful to identify all the different tax notice\
        \ root causes."
      operationId: ListNoticeRootCauses
      parameters:
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br
          />*Not filterable:* sortOrder
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoticeRootCauseModelFetchResult'
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/definitions/noticestatuses:
    get:
      tags:
      - Definitions
      summary: Retrieve the full list of Avalara-supported tax notice statuses.
      description: "Returns the full list of Avalara-supported tax notice statuses.\r\
        \nThis API is intended to be useful to identify all the different tax notice\
        \ statuses."
      operationId: ListNoticeStatuses
      parameters:
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br
          />*Not filterable:* isOpen, sortOrder
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoticeStatusModelFetchResult'
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/definitions/noticetypes:
    get:
      tags:
      - Definitions
      summary: Retrieve the full list of Avalara-supported tax notice types.
      description: "Returns the full list of Avalara-supported tax notice types.\r\
        \nThis API is intended to be useful to identify all the different notice types\
        \ that can be used in notices."
      operationId: ListNoticeTypes
      parameters:
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br
          />*Not filterable:* activeFlag, sortOrder
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoticeTypeModelFetchResult'
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/definitions/parameters:
    get:
      tags:
      - Definitions
      summary: Retrieve the full list of Avalara-supported extra parameters for creating
        transactions.
      description: "Returns the full list of Avalara-supported extra parameters for\
        \ the 'Create Transaction' API call.\r\nThis list of parameters is available\
        \ for use when configuring your transaction.\r\nSome parameters are only available\
        \ for use if you have subscribed to certain features of AvaTax."
      operationId: ListParameters
      parameters:
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br
          />*Not filterable:* serviceTypes, regularExpression, values
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParameterModelFetchResult'
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/definitions/parameters/byitem/{companyCode}/{itemCode}:
    get:
      tags:
      - Definitions
      summary: Retrieve the parameters by companyCode and itemCode.
      description: "Returns the list of parameters based on the company's service\
        \ types and the item code.\r\nIgnores nexus if a service type is configured\
        \ in the 'IgnoreNexusForServiceTypes' configuration section.\r\nIgnores nexus\
        \ for the AvaAlcohol service type.\r\n            \r\nNOTE: If your company\
        \ code or item code contains any of these characters /, +, ? or a space, please\
        \ use the following encoding before making a request:\r\n* Replace '/' with\
        \ '\\_-ava2f-\\_'  For example: 'Company/Code' becomes 'Company_-ava2f-_Code'\r\
        \n* Replace '+' with '\\_-ava2b-\\_'  For example: 'Company+Code' becomes\
        \ 'Company_-ava2b-_Code'\r\n* Replace '?' with '\\_-ava3f-\\_'  For example:\
        \ 'Company?Code' becomes 'Company_-ava3f-_Code'\r\n* Replace '%' with '\\\
        _-ava25-\\_'  For example: 'Company%Code' becomes 'Company_-ava25-_Code'\r\
        \n* Replace '#' with '\\_-ava23-\\_'  For example: 'Company#Code' becomes\
        \ 'Company_-ava23-_Code'\n\n### Security Policies\n\n* This API requires one\
        \ of the following user roles: AccountAdmin, AccountUser, CompanyAdmin, CompanyUser,\
        \ CSPAdmin, CSPTester, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin,\
        \ TechnicalSupportUser.\n"
      operationId: ListParametersByItem
      parameters:
      - name: companyCode
        in: path
        description: Company code.
        required: true
        schema:
          type: string
      - name: itemCode
        in: path
        description: Item code.
        required: true
        schema:
          type: string
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br
          />*Not filterable:* serviceTypes, regularExpression, values
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParameterModelFetchResult'
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/definitions/parametersusage:
    get:
      tags:
      - Definitions
      summary: Retrieve the full list of Avalara-supported usage of extra parameters
        for creating transactions.
      description: "Returns the full list of Avalara-supported usage of extra parameters\
        \ for the 'Create Transaction' API call.\r\nThis list of parameters is available\
        \ for use when configuring your transaction.\r\nSome parameters are only available\
        \ for use if you have subscribed to certain features of AvaTax."
      operationId: ListParametersUsage
      parameters:
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br
          />*Not filterable:* values
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParameterUsageModelFetchResult'
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/definitions/permissions:
    get:
      tags:
      - Definitions
      summary: Retrieve the full list of Avalara-supported permissions
      description: "Returns the full list of Avalara-supported permission types.\r\
        \nThis API is intended to be useful to identify the capabilities of a particular\
        \ user logon."
      operationId: ListPermissions
      parameters:
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StringFetchResult'
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/definitions/postalcodes:
    get:
      tags:
      - Definitions
      summary: Retrieve the full list of Avalara-supported postal codes.
      description: Retrieves the list of Avalara-supported postal codes.
      operationId: ListPostalCodes
      parameters:
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostalCodeModelFetchResult'
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/definitions/preferredprograms:
    get:
      tags:
      - Definitions
      summary: List all customs duty programs recognized by AvaTax
      description: "List all preferred customs duty programs recognized by AvaTax.\r\
        \n            \r\nA customs duty program is an optional program you can use\
        \ to obtain favorable treatment from customs and duty agents.\r\nAn example\
        \ of a preferred program is NAFTA, which provides preferential rates for products\
        \ being shipped from neighboring\r\ncountries.\r\n            \r\nTo select\
        \ a preferred program for calculating customs and duty rates, call this API\
        \ to find the appropriate code for your\r\npreferred program.  Next, set the\
        \ parameter `AvaTax.LC.PreferredProgram` in your `CreateTransaction` call\
        \ to the code of\r\nthe program."
      operationId: ListPreferredPrograms
      parameters:
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br
          />*Not filterable:* effectiveDate, endDate
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreferredProgramModelFetchResult'
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/definitions/productclassificationsystems:
    get:
      tags:
      - Definitions
      summary: List all available product classification systems.
      description: "List all available product classification systems.\r\n       \
        \     \r\nTax authorities use product classification systems as a way to identify\
        \ products and associate them with a tax rate.\r\nMore than one tax authority\
        \ might use the same product classification system, but they might charge\
        \ different tax rates for products."
      operationId: ListProductClassificationSystems
      parameters:
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br
          />*Not filterable:* countries
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: $countryCode
        in: query
        description: If not null, return all records with this code.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductClassificationSystemModelFetchResult'
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/definitions/productclassificationsystems/bycompany/{companyCode}:
    get:
      tags:
      - Definitions
      summary: List all product classification systems available to a company based
        on its nexus.
      description: "Lists all product classification systems available to a company\
        \ based on its nexus.\r\n            \r\nTax authorities use product classification\
        \ systems as a way to identify products and associate them with a tax rate.\r\
        \nMore than one tax authority might use the same product classification system,\
        \ but they might charge different tax rates for products.\r\n            \r\
        \n            \r\nNOTE: If your company code contains any of these characters\
        \ /, +, ? or a space, please use the following encoding before making a request:\r\
        \n* Replace '/' with '\\_-ava2f-\\_'  For example: 'Company/Code' becomes\
        \ 'Company_-ava2f-_Code'\r\n* Replace '+' with '\\_-ava2b-\\_'  For example:\
        \ 'Company+Code' becomes 'Company_-ava2b-_Code'\r\n* Replace '?' with '\\\
        _-ava3f-\\_'  For example: 'Company?Code' becomes 'Company_-ava3f-_Code'\r\
        \n* Replace '%' with '\\_-ava25-\\_'  For example: 'Company%Code' becomes\
        \ 'Company_-ava25-_Code'\r\n* Replace '#' with '\\_-ava23-\\_'  For example:\
        \ 'Company#Code' becomes 'Company_-ava23-_Code'"
      operationId: ListProductClassificationSystemsByCompany
      parameters:
      - name: companyCode
        in: path
        description: The company code.
        required: true
        schema:
          type: string
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br
          />*Not filterable:* countries
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: $countryCode
        in: query
        description: If not null, return all records with this code.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductClassificationSystemModelFetchResult'
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/definitions/regions:
    get:
      tags:
      - Definitions
      summary: List all ISO 3166 regions
      description: "Returns a list of all ISO 3166 region codes and their US English\
        \ friendly names.\r\nThis API is intended to be useful when presenting a dropdown\
        \ box in your website to allow customers to select a region\r\nwithin the\
        \ country for a shipping addresses."
      operationId: ListRegions
      parameters:
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br
          />*Not filterable:* localizedNames
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IsoRegionModelFetchResult'
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/definitions/resourcefiletypes:
    get:
      tags:
      - Definitions
      summary: Retrieve the full list of Avalara-supported resource file types
      description: "Returns the full list of Avalara-supported resource file types\r\
        \nThis API is intended to be useful to identify all the different resource\
        \ file types."
      operationId: ListResourceFileTypes
      parameters:
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceFileTypeModelFetchResult'
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/definitions/returns/parametersusage:
    get:
      tags:
      - Definitions
      summary: Retrieve the full list of Avalara-supported usage of parameters used
        for returns.
      description: "Returns the full list of Avalara-supported usage of extra parameters\
        \ for the returns.\r\nThis list of parameters is available for use with Returns.\r\
        \nSome parameters are only available for use if you have subscribed to certain\
        \ features of AvaTax."
      operationId: ListReturnsParametersUsage
      parameters:
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br
          />*Not filterable:* values
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReturnsParameterUsageModelFetchResult'
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/definitions/securityroles:
    get:
      tags:
      - Definitions
      summary: Retrieve the full list of Avalara-supported permissions
      description: "Returns the full list of Avalara-supported permission types.\r\
        \nThis API is intended to be useful when designing a user interface for selecting\
        \ the security role of a user account.\r\nSome security roles are restricted\
        \ for Avalara internal use."
      operationId: ListSecurityRoles
      parameters:
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityRoleModelFetchResult'
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/definitions/subscriptiontypes:
    get:
      tags:
      - Definitions
      summary: Retrieve the full list of Avalara-supported subscription types
      description: "Returns the full list of Avalara-supported subscription types.\r\
        \nThis API is intended to be useful for identifying which features you have\
        \ added to your account.\r\nYou may always contact Avalara's sales department\
        \ for information on available products or services.\r\nYou cannot change\
        \ your subscriptions directly through the API."
      operationId: ListSubscriptionTypes
      parameters:
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionTypeModelFetchResult'
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/definitions/tags:
    get:
      tags:
      - Definitions
      summary: Retrieve the list all tags supported by avalara
      description: Retrieves the list of suggested locations for a marketplace.
      operationId: ListTags
      parameters:
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsModelFetchResult'
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/definitions/taxauthorities:
    get:
      tags:
      - Definitions
      summary: Retrieve the full list of Avalara-supported tax authorities.
      description: "Returns the full list of Avalara-supported tax authorities.\r\n\
        This API is intended to be useful to identify all the different authorities\
        \ that receive tax."
      operationId: ListTaxAuthorities
      parameters:
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaxAuthorityModelFetchResult'
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/definitions/taxauthorityforms:
    get:
      tags:
      - Definitions
      summary: Retrieve the full list of Avalara-supported forms for each tax authority.
      description: "Returns the full list of Avalara-supported forms for each tax\
        \ authority.\r\nThis list represents tax forms that Avalara recognizes.\r\n\
        Customers who subscribe to Avalara Managed Returns Service can request these\
        \ forms to be filed automatically\r\nbased on the customer's AvaTax data."
      operationId: ListTaxAuthorityForms
      parameters:
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaxAuthorityFormModelFetchResult'
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/definitions/taxauthoritytypes:
    get:
      tags:
      - Definitions
      summary: Retrieve the full list of Avalara-supported tax authority types.
      description: "Returns the full list of Avalara-supported tax authority types.\r\
        \nThis API is intended to be useful to identify all the different authority\
        \ types."
      operationId: ListTaxAuthorityTypes
      parameters:
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaxAuthorityTypeModelFetchResult'
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/definitions/taxcodes:
    get:
      tags:
      - Definitions
      summary: Retrieve the full list of Avalara-supported tax codes.
      description: "Retrieves the list of Avalara-supported system tax codes.\r\n\
        A 'TaxCode' represents a uniquely identified type of product, good, or service.\r\
        \nAvalara supports correct tax rates and taxability rules for all TaxCodes\
        \ in all supported jurisdictions.\r\nIf you identify your products by tax\
        \ code in your 'Create Transacion' API calls, Avalara will correctly calculate\
        \ tax rates and\r\ntaxability rules for this product in all supported jurisdictions.\n\
        \n### Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, CSPAdmin, CSPTester,\
        \ SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n"
      operationId: ListTaxCodes
      parameters:
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaxCodeModelFetchResult'
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/definitions/taxcodetypes:
    get:
      tags:
      - Definitions
      summary: Retrieve the full list of Avalara-supported tax code types.
      description: "Returns the full list of recognized tax code types.\r\nA 'Tax\
        \ Code Type' represents a broad category of tax codes, and is less detailed\
        \ than a single TaxCode.\r\nThis API is intended to be useful for broadly\
        \ searching for tax codes by tax code type."
      operationId: ListTaxCodeTypes
      parameters:
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaxCodeTypesModel'
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/definitions/taxforms:
    get:
      tags:
      - Definitions
      summary: Retrieve the full list of the Tax Forms available
      description: "Returns the full list of Avalara-supported Tax Forms\r\nThis API\
        \ is intended to be useful to identify all the different Tax Forms"
      operationId: ListTaxForms
      parameters:
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormMasterModelFetchResult'
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/definitions/taxsubtypes:
    get:
      tags:
      - Definitions
      summary: Retrieve the full list of tax sub types
      description: "Returns the full list of Avalara-supported tax sub-types\r\nThis\
        \ API is intended to be useful to identify all the different tax sub-types."
      operationId: ListTaxSubTypes
      parameters:
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaxSubTypeModelFetchResult'
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/definitions/taxsubtypes/{jurisdictionCode}/{region}:
    get:
      tags:
      - Definitions
      summary: Retrieve the full list of tax sub types by jurisdiction code and region
      description: "Returns the full list of Avalara-supported tax sub-types by jurisdiction\
        \ and region\r\nThis API is intended to be useful to identify all the different\
        \ tax sub-types."
      operationId: ListTaxSubTypesByJurisdictionAndRegion
      parameters:
      - name: jurisdictionCode
        in: path
        description: The jurisdiction code of the tax sub type.
        required: true
        schema:
          type: string
      - name: region
        in: path
        description: The region of the tax sub type.
        required: true
        schema:
          type: string
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaxSubTypeModelFetchResult'
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/definitions/taxsubtypes/countries/{country}/taxtypes/{taxTypeId}:
    get:
      tags:
      - Definitions
      summary: Retrieve the full list of tax sub types by Country and TaxType
      description: "Returns the full list of Avalara-supported tax sub-types\r\nThis\
        \ API is intended to be useful to identify all the different tax sub-types\
        \ for given country and TaxType."
      operationId: ListTaxSubTypesByCountryAndTaxType
      parameters:
      - name: country
        in: path
        description: The country to examine for taxsubtype
        required: true
        schema:
          type: string
      - name: taxTypeId
        in: path
        description: The taxType for the country to examine for taxsubtype
        required: true
        schema:
          type: string
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaxSubTypeModelFetchResult'
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/definitions/taxtypegroups:
    get:
      tags:
      - Definitions
      summary: Retrieve the full list of tax type groups
      description: "Returns the full list of Avalara-supported tax type groups\r\n\
        This API is intended to be useful to identify all the different tax type groups."
      operationId: ListTaxTypeGroups
      parameters:
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br
          />*Not filterable:* subscriptionTypeId, subscriptionDescription, tabName,
          showColumn, displaySequence
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaxTypeGroupModelFetchResult'
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/definitions/taxtypes/countries/{country}:
    get:
      tags:
      - Definitions
      summary: Retrieve the list of applicable TaxTypes
      description: Retrieves the list of applicable TaxTypes based on Nexus of the
        company.
      operationId: ListTaxTypesByNexusAndCountry
      parameters:
      - name: country
        in: path
        description: The country for which you want to retrieve the unitofbasis information
        required: true
        schema:
          type: string
      - name: companyId
        in: query
        description: Your companyId to retrieve the applicable taxtypes
        required: true
        schema:
          type: integer
          format: int32
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaxTypeModelFetchResult'
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/definitions/unitofbasis/countries/{country}/taxtypes/{taxTypeId}/taxsubtypes/{taxSubTypeId}:
    get:
      tags:
      - Definitions
      summary: Retrieve the list of applicable UnitOfBasis
      description: Retrieves the list of applicable UnitOfBasis
      operationId: ListUnitOfBasisByCountryAndTaxTypeAndTaxSubTypeAndRateType
      parameters:
      - name: country
        in: path
        description: The country for which you want to retrieve the unitofbasis information
        required: true
        schema:
          type: string
      - name: taxTypeId
        in: path
        description: The taxtype for which you want to retrieve the unitofbasis information
        required: true
        schema:
          type: string
      - name: taxSubTypeId
        in: path
        description: The taxsubtype for which you want to retrieve the unitofbasis
          information
        required: true
        schema:
          type: string
      - name: rateTypeId
        in: query
        description: The ratetype for which you want to retrieve the unitofbasis information
        required: true
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitOfBasisModelFetchResult'
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/definitions/unitofmeasurements:
    get:
      tags:
      - Definitions
      summary: List all defined units of measurement
      description: "List all units of measurement systems defined by Avalara.\r\n\
        \            \r\nA unit of measurement system is a method of measuring a quantity,\
        \ such as distance, mass, or others."
      operationId: ListUnitOfMeasurement
      parameters:
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br
          />*Not filterable:* id
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UomModelFetchResult'
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/companies/{companyId}/distancethresholds:
    get:
      tags:
      - DistanceThresholds
      summary: Retrieve all DistanceThresholds for this company.
      description: "Lists all DistanceThreshold objects that belong to this company.\r\
        \n            \r\nA company-distance-threshold model indicates the distance\
        \ between a company\r\nand the taxing borders of various countries.  Distance\
        \ thresholds are necessary\r\nto correctly calculate some value-added taxes.\n\
        \n### Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, CSPAdmin, CSPTester,\
        \ SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser,\
        \ TreasuryAdmin, TreasuryUser.\n"
      operationId: ListDistanceThresholds
      parameters:
      - name: companyId
        in: path
        description: The ID of the company whose DistanceThreshold objects you wish
          to list.
        required: true
        schema:
          type: integer
          format: int32
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).
        schema:
          type: string
      - name: $include
        in: query
        description: A comma separated list of additional data to retrieve.
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyDistanceThresholdModelFetchResult'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
    post:
      tags:
      - DistanceThresholds
      summary: Create one or more DistanceThreshold objects
      description: "Create one or more DistanceThreshold objects for this company.\r\
        \n            \r\nA company-distance-threshold model indicates the distance\
        \ between a company\r\nand the taxing borders of various countries.  Distance\
        \ thresholds are necessary\r\nto correctly calculate some value-added taxes.\n\
        \n### Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, CompanyAdmin, CSPAdmin, CSPTester, SiteAdmin, SSTAdmin, SystemAdmin,\
        \ TechnicalSupportAdmin.\n"
      operationId: CreateDistanceThreshold
      parameters:
      - name: companyId
        in: path
        description: The unique ID number of the company that owns this DistanceThreshold
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        description: The DistanceThreshold object or objects you wish to create.
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CompanyDistanceThresholdModel'
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CompanyDistanceThresholdModel'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CompanyDistanceThresholdModel'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CompanyDistanceThresholdModel'
        required: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyDistanceThresholdModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
  /api/v2/companies/{companyId}/distancethresholds/{id}:
    get:
      tags:
      - DistanceThresholds
      summary: Retrieve a single DistanceThreshold
      description: "Retrieves a single DistanceThreshold object defined by this URL.\r\
        \n            \r\nA company-distance-threshold model indicates the distance\
        \ between a company\r\nand the taxing borders of various countries.  Distance\
        \ thresholds are necessary\r\nto correctly calculate some value-added taxes.\n\
        \n### Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, CSPAdmin, CSPTester,\
        \ SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser,\
        \ TreasuryAdmin, TreasuryUser.\n"
      operationId: GetDistanceThreshold
      parameters:
      - name: companyId
        in: path
        description: The ID of the company that owns this DistanceThreshold object
        required: true
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: The unique ID number referring to this DistanceThreshold object
        required: true
        schema:
          type: integer
          format: int64
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyDistanceThresholdModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
    put:
      tags:
      - DistanceThresholds
      summary: Update a DistanceThreshold object
      description: "Replace the existing DistanceThreshold object at this URL with\
        \ an updated object.\r\n            \r\nA company-distance-threshold model\
        \ indicates the distance between a company\r\nand the taxing borders of various\
        \ countries.  Distance thresholds are necessary\r\nto correctly calculate\
        \ some value-added taxes.\r\n            \r\nAll data from the existing object\
        \ will be replaced with data in the object you PUT.\r\nTo set a field's value\
        \ to null, you may either set its value to null or omit that field from the\
        \ object you post.\n\n### Security Policies\n\n* This API requires one of\
        \ the following user roles: AccountAdmin, CompanyAdmin, CSPAdmin, CSPTester,\
        \ SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin.\n"
      operationId: UpdateDistanceThreshold
      parameters:
      - name: companyId
        in: path
        description: The unique ID number of the company that owns this DistanceThreshold
          object.
        required: true
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: The unique ID number of the DistanceThreshold object to replace.
        required: true
        schema:
          type: integer
          format: int64
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        description: The new DistanceThreshold object to store.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CompanyDistanceThresholdModel'
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyDistanceThresholdModel'
          text/json:
            schema:
              $ref: '#/components/schemas/CompanyDistanceThresholdModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CompanyDistanceThresholdModel'
        required: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyDistanceThresholdModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
    delete:
      tags:
      - DistanceThresholds
      summary: Delete a single DistanceThreshold object
      description: "Marks the DistanceThreshold object identified by this URL as deleted.\r\
        \n            \r\nA company-distance-threshold model indicates the distance\
        \ between a company\r\nand the taxing borders of various countries.  Distance\
        \ thresholds are necessary\r\nto correctly calculate some value-added taxes.\n\
        \n### Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, CompanyAdmin, CSPAdmin, CSPTester, SiteAdmin, SSTAdmin, SystemAdmin,\
        \ TechnicalSupportAdmin.\n"
      operationId: DeleteDistanceThreshold
      parameters:
      - name: companyId
        in: path
        description: The unique ID number of the company that owns this DistanceThreshold
        required: true
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: The unique ID number of the DistanceThreshold object you wish
          to delete.
        required: true
        schema:
          type: integer
          format: int64
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorDetail'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/distancethresholds:
    get:
      tags:
      - DistanceThresholds
      summary: Retrieve all DistanceThreshold objects
      description: "Lists all DistanceThreshold objects that belong to this account.\r\
        \n            \r\nA company-distance-threshold model indicates the distance\
        \ between a company\r\nand the taxing borders of various countries.  Distance\
        \ thresholds are necessary\r\nto correctly calculate some value-added taxes.\r\
        \n            \r\nSearch for specific objects using the criteria in the `$filter`\
        \ parameter; full documentation is available on [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/)\
        \ .\r\nPaginate your results using the `$top`, `$skip`, and `$orderby` parameters.\n\
        \n### Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, CSPAdmin, CSPTester,\
        \ SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser,\
        \ TreasuryAdmin, TreasuryUser.\n"
      operationId: QueryDistanceThresholds
      parameters:
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).
        schema:
          type: string
      - name: $include
        in: query
        description: A comma separated list of additional data to retrieve.
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyDistanceThresholdModelFetchResult'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/companies/{companyId}/ecommercetokens:
    put:
      tags:
      - ECommerceToken
      summary: Refresh an eCommerce token.
      description: "Refresh an eCommerce token.\r\n            \r\nCertCapture eCommerce\
        \ tokens expire after one hour. This API is used to refresh an eCommerce token\
        \ that is about to expire. This API can only be used with active tokens. If\
        \ your token has expired, you must generate a new one.\n\n### Security Policies\n\
        \n* This API requires one of the following user roles: AccountAdmin, AccountOperator,\
        \ AccountUser, CompanyAdmin, CompanyUser, Compliance Root User, ComplianceAdmin,\
        \ ComplianceUser, CSPAdmin, CSPTester, FirmAdmin, FirmUser, ProStoresOperator,\
        \ Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser,\
        \ TreasuryAdmin, TreasuryUser.\n"
      operationId: RefreshECommerceToken
      parameters:
      - name: companyId
        in: path
        description: The company ID that the refreshed certificate belongs to.
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/RefreshECommerceTokenInputModel'
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshECommerceTokenInputModel'
          text/json:
            schema:
              $ref: '#/components/schemas/RefreshECommerceTokenInputModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/RefreshECommerceTokenInputModel'
        required: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ECommerceTokenOutputModelFetchResult'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        500:
          description: Server Error
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
    post:
      tags:
      - ECommerceToken
      summary: Create a new eCommerce token.
      description: "Creates a new eCommerce token.\r\n            \r\nThis API is\
        \ used to create a new eCommerce token. An eCommerce token is required in\
        \ order to launch the CertCapture eCommerce plugin. Create a token for each\
        \ of your CertCapture customers.\n\n### Security Policies\n\n* This API requires\
        \ one of the following user roles: AccountAdmin, AccountOperator, AccountUser,\
        \ CompanyAdmin, CompanyUser, Compliance Root User, ComplianceAdmin, ComplianceUser,\
        \ CSPAdmin, CSPTester, FirmAdmin, FirmUser, ProStoresOperator, Registrar,\
        \ SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser,\
        \ TreasuryAdmin, TreasuryUser.\n"
      operationId: CreateECommerceToken
      parameters:
      - name: companyId
        in: path
        description: The company ID that will be issued this certificate.
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CreateECommerceTokenInputModel'
          application/json:
            schema:
              $ref: '#/components/schemas/CreateECommerceTokenInputModel'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateECommerceTokenInputModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateECommerceTokenInputModel'
        required: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ECommerceTokenOutputModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        500:
          description: Server Error
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
  /api/v2/companies/{companyId}/filingcalendars/{filingCalendarId}/setting/{companyReturnSettingId}:
    delete:
      tags:
      - FilingCalendars
      summary: Delete a company return setting
      description: |
        This API is available by invitation only and only available for users with Compliance access

        ### Security Policies

        * This API requires openId bearer token for authentication
        * This API requires one of the following user roles: AccountAdmin, CompanyAdmin, Compliance Root User, ComplianceAdmin, ComplianceUser, CSPTester, FirmAdmin, FirmUser, SSTAdmin, TechnicalSupportAdmin, TechnicalSupportUser, TreasuryAdmin, TreasuryUser.
      operationId: DeleteCompanyReturnSettings
      parameters:
      - name: companyId
        in: path
        description: The unique ID of the company
        required: true
        schema:
          type: integer
          format: int32
      - name: filingCalendarId
        in: path
        description: The unique ID of the filing calendar that will remove setting
        required: true
        schema:
          type: integer
          format: int32
      - name: companyReturnSettingId
        in: path
        description: The unique ID of the company return setting that will be deleted
          from the filing calendar
        required: true
        schema:
          type: integer
          format: int64
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyReturnSettingModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/companies/{companyId}/filingcalendars/edit/cycleSafeOptions:
    post:
      tags:
      - FilingCalendars
      summary: Add or Edit options
      description: "Returns a list of options for adding tax forms for the company\
        \ and tax form code specified.\r\nReturns edit options when modifying a filing\
        \ calendar.\r\nThis API is available by invitation only.\n\n### Security Policies\n\
        \n* This API requires openId bearer token for authentication\n* This API depends\
        \ on the following active services:*Returns* (at least one of):  Mrs, MRSComplianceManager,\
        \ AvaTaxCsp.*Firm Managed* (for accounts managed by a firm):  ARA, ARAManaged.\n"
      operationId: CycleSafeOptions
      parameters:
      - name: companyId
        in: path
        description: The unique ID of the company that owns the filing calendar object
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        description: Cycle Safe Options Request
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CycleSafeEditRequestModel'
          application/json:
            schema:
              $ref: '#/components/schemas/CycleSafeEditRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/CycleSafeEditRequestModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CycleSafeEditRequestModel'
        required: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CycleSafeOptionResultModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
  /api/v2/companies/{companyId}/filingcalendars/Legacy:
    get:
      tags:
      - FilingCalendars
      summary: Retrieve all legacy filing calendars for this company
      description: |
        This API is available by invitation only.

        ### Security Policies

        * This API requires one of the following user roles: AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, Compliance Root User, ComplianceAdmin, ComplianceUser, CSPAdmin, CSPTester, FirmAdmin, FirmUser, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser, TreasuryAdmin, TreasuryUser.
        * This API depends on the following active services:*Returns* (at least one of):  Mrs, MRSComplianceManager, AvaTaxCsp.*Firm Managed* (for accounts managed by a firm):  ARA, ARAManaged.
      operationId: LegacyFilingCalendars
      parameters:
      - name: companyId
        in: path
        description: The ID of the company that owns these batches
        required: true
        schema:
          type: integer
          format: int32
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br
          />*Not filterable:* taxTypes, taxAuthorityId, taxAuthorityName, taxAuthorityType,
          settings
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: returnCountry
        in: query
        description: A comma separated list of countries
        schema:
          type: string
      - name: returnRegion
        in: query
        description: A comma separated list of regions
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilingCalendarModelFetchResult'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/companies/{companyId}/filings/accrual/{filingReturnId}:
    get:
      tags:
      - Filings
      summary: Retrieve a filing containing the return and all its accrual returns.
      description: |2


        ### Security Policies

        * This API requires openId bearer token for authentication
        * This API requires one of the following user roles: AccountAdmin, CompanyAdmin, Compliance Root User, ComplianceAdmin, ComplianceUser, CSPTester, FirmAdmin, FirmUser, SSTAdmin, TechnicalSupportAdmin, TechnicalSupportUser, TreasuryAdmin, TreasuryUser.
      operationId: GetAccrualFilings
      parameters:
      - name: companyId
        in: path
        description: The ID of the company that owns these returns
        required: true
        schema:
          type: integer
          format: int32
      - name: filingReturnId
        in: path
        description: The ID of the filing return
        required: true
        schema:
          type: integer
          format: int64
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiTaxFilingModelFetchResult'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/companies/{companyId}/filings/returns/filed:
    get:
      tags:
      - Filings
      summary: Retrieve a list of filed returns for the specified company in the year
        and month of a given filing period.
      description: |2


        ### Security Policies

        * This API requires openId bearer token for authentication
        * This API requires one of the following user roles: AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, Compliance Root User, ComplianceAdmin, ComplianceUser, CSPAdmin, CSPTester, FirmAdmin, FirmUser, ProStoresOperator, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser, TreasuryAdmin, TreasuryUser.
        * This API is available by invitation only.*Exempt security roles*:  ComplianceRootUser, ComplianceAdmin, ComplianceUser, TechnicalSupportAdmin, TechnicalSupportUser, CompanyUser, AccountUser, CompanyAdmin, AccountAdmin.
        * This API depends on the following active services:*Returns* (at least one of):  Mrs, MRSComplianceManager, AvaTaxCsp.*Firm Managed* (for accounts managed by a firm):  ARA, ARAManaged.
      operationId: GetFiledReturns
      parameters:
      - name: companyId
        in: path
        description: The ID of the company that owns these batches
        required: true
        schema:
          type: integer
          format: int32
      - name: endPeriodMonth
        in: query
        description: The month of the period you are trying to retrieve
        schema:
          type: integer
          format: int32
      - name: endPeriodYear
        in: query
        description: The year of the period you are trying to retrieve
        schema:
          type: integer
          format: int32
      - name: frequency
        in: query
        description: The frequency of the return you are trying to retrieve
        schema:
          type: string
          enum:
          - Monthly
          - Quarterly
          - SemiAnnually
          - Annually
          - Bimonthly
          - Occasional
          - InverseQuarterly
          - Weekly
          x-enum-metadata:
            name: FilingFrequencyId
            values:
            - name: Monthly
              value: 1
            - name: Quarterly
              value: 2
            - name: SemiAnnually
              value: 3
            - name: Annually
              value: 4
            - name: Bimonthly
              value: 5
            - name: Occasional
              value: 6
            - name: InverseQuarterly
              value: 7
            - name: Weekly
              value: 8
        x-enum-metadata:
          name: FilingFrequencyId
          values:
          - name: Monthly
            value: 1
          - name: Quarterly
            value: 2
          - name: SemiAnnually
            value: 3
          - name: Annually
            value: 4
          - name: Bimonthly
            value: 5
          - name: Occasional
            value: 6
          - name: InverseQuarterly
            value: 7
          - name: Weekly
            value: 8
      - name: status
        in: query
        description: The status of the return(s) you are trying to retrieve
        schema:
          type: string
          enum:
          - PendingApproval
          - Dirty
          - ApprovedToFile
          - PendingFiling
          - PendingFilingOnBehalf
          - Filed
          - FiledOnBehalf
          - ReturnAccepted
          - ReturnAcceptedOnBehalf
          - PaymentRemitted
          - Voided
          - PendingReturn
          - PendingReturnOnBehalf
          - DoNotFile
          - ReturnRejected
          - ReturnRejectedOnBehalf
          - ApprovedToFileOnBehalf
          x-enum-metadata:
            name: FilingStatusId
            values:
            - name: PendingApproval
              value: 0
            - name: Dirty
              value: 1
            - name: ApprovedToFile
              value: 2
            - name: PendingFiling
              value: 3
            - name: PendingFilingOnBehalf
              value: 4
            - name: Filed
              value: 5
            - name: FiledOnBehalf
              value: 6
            - name: ReturnAccepted
              value: 7
            - name: ReturnAcceptedOnBehalf
              value: 8
            - name: PaymentRemitted
              value: 9
            - name: Voided
              value: 10
            - name: PendingReturn
              value: 11
            - name: PendingReturnOnBehalf
              value: 12
            - name: DoNotFile
              value: 13
            - name: ReturnRejected
              value: 14
            - name: ReturnRejectedOnBehalf
              value: 15
            - name: ApprovedToFileOnBehalf
              value: 16
        x-enum-metadata:
          name: FilingStatusId
          values:
          - name: PendingApproval
            value: 0
          - name: Dirty
            value: 1
          - name: ApprovedToFile
            value: 2
          - name: PendingFiling
            value: 3
          - name: PendingFilingOnBehalf
            value: 4
          - name: Filed
            value: 5
          - name: FiledOnBehalf
            value: 6
          - name: ReturnAccepted
            value: 7
          - name: ReturnAcceptedOnBehalf
            value: 8
          - name: PaymentRemitted
            value: 9
          - name: Voided
            value: 10
          - name: PendingReturn
            value: 11
          - name: PendingReturnOnBehalf
            value: 12
          - name: DoNotFile
            value: 13
          - name: ReturnRejected
            value: 14
          - name: ReturnRejectedOnBehalf
            value: 15
          - name: ApprovedToFileOnBehalf
            value: 16
      - name: country
        in: query
        description: The country of the return(s) you are trying to retrieve
        schema:
          type: string
      - name: region
        in: query
        description: The region of the return(s) you are trying to retrieve
        schema:
          type: string
      - name: filingCalendarId
        in: query
        description: The filing calendar id of the return you are trying to retrieve
        schema:
          type: integer
          format: int64
      - name: taxformCode
        in: query
        description: The unique tax form code of the form.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FiledReturnModelFetchResult'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/firmclientlinkages:
    get:
      tags:
      - FirmClientLinkages
      summary: List client linkages for a firm or client
      description: |
        This API enables the firm or account users to request the associated linkages to the account.

        ### Security Policies

        * This API requires one of the following user roles: AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, Compliance Root User, ComplianceAdmin, ComplianceUser, CSPAdmin, CSPTester, FirmAdmin, FirmUser, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser, TreasuryAdmin, TreasuryUser.
      operationId: ListFirmClientLinkage
      parameters:
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br
          />*Not filterable:* firmAccountName, clientAccountName
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirmClientLinkageOutputModelFetchResult'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
    post:
      tags:
      - FirmClientLinkages
      summary: Links a firm account with the client account
      description: |
        This API enables the firm admins/firm users to request the linkage of a firm account and a client account.

        ### Security Policies

        * This API requires one of the following user roles: FirmAdmin, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin.
      operationId: CreateFirmClientLinkage
      parameters:
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        description: FirmClientLinkageInputModel
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FirmClientLinkageInputModel'
          application/json:
            schema:
              $ref: '#/components/schemas/FirmClientLinkageInputModel'
          text/json:
            schema:
              $ref: '#/components/schemas/FirmClientLinkageInputModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FirmClientLinkageInputModel'
        required: false
      responses:
        201:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirmClientLinkageOutputModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
  /api/v2/firmclientlinkages/{id}:
    get:
      tags:
      - FirmClientLinkages
      summary: Get linkage between a firm and client by id
      description: |
        This API enables the firm admins/firm users to request the linkage of a firm account and a client account.

        ### Security Policies

        * This API requires one of the following user roles: AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, Compliance Root User, ComplianceAdmin, ComplianceUser, CSPAdmin, CSPTester, FirmAdmin, FirmUser, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser, TreasuryAdmin, TreasuryUser.
      operationId: GetFirmClientLinkage
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirmClientLinkageOutputModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
    delete:
      tags:
      - FirmClientLinkages
      summary: Delete a linkage
      description: |
        This API marks a linkage between a firm and client as deleted.

        ### Security Policies

        * This API requires one of the following user roles: FirmAdmin, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin.
      operationId: DeleteFirmClientLinkage
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorDetail'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/firmclientlinkages/{id}/approve:
    post:
      tags:
      - FirmClientLinkages
      summary: Approves linkage to a firm for a client account
      description: |
        This API enables the account admin of a client account to approve linkage request by a firm.

        ### Security Policies

        * This API requires one of the following user roles: AccountAdmin, FirmAdmin, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin.
      operationId: ApproveFirmClientLinkage
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirmClientLinkageOutputModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/firmclientlinkages/{id}/reject:
    post:
      tags:
      - FirmClientLinkages
      summary: Rejects linkage to a firm for a client account
      description: |
        This API enables the account admin of a client account to reject linkage request by a firm.

        ### Security Policies

        * This API requires one of the following user roles: AccountAdmin, FirmAdmin, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin.
      operationId: RejectFirmClientLinkage
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirmClientLinkageOutputModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/firmclientlinkages/{id}/reset:
    post:
      tags:
      - FirmClientLinkages
      summary: Reset linkage status between a client and firm back to requested
      description: |
        This API enables the firm admin of a client account to reset a previously created linkage request by a firm.

        ### Security Policies

        * This API requires one of the following user roles: FirmAdmin, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin.
      operationId: ResetFirmClientLinkage
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirmClientLinkageOutputModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/firmclientlinkages/{id}/revoke:
    post:
      tags:
      - FirmClientLinkages
      summary: Revokes previously approved linkage to a firm for a client account
      description: |
        This API enables the account admin of a client account to revoke a previously approved linkage request by a firm.

        ### Security Policies

        * This API requires one of the following user roles: AccountAdmin, FirmAdmin, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin.
      operationId: RevokeFirmClientLinkage
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirmClientLinkageOutputModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/firmclientlinkages/createandlinkclient:
    post:
      tags:
      - FirmClientLinkages
      summary: Request a new FirmClient account and create an approved linkage to
        it
      description: "This API is for use by Firms only.\r\n            \r\nAvalara\
        \ allows firms to manage returns for clients without the clients needing to\
        \ use AvaTax service.\r\nFirms can create accounts of FirmClient for customers\
        \ they are managing using this API.\r\n            \r\nCalling this API creates\
        \ an account with the specified product subscriptions, but without a new user\
        \ for account.\r\nAccount is then linked to the Firm so they can managed their\
        \ returns.\r\nYou should call this API when a customer does not have an AvaTax\
        \ account and is to be managed only by the firm.\r\n            \r\nThe created\
        \ account will be created in `Active` status but there will be no user or\
        \ license key associated with account.\n\n### Security Policies\n\n* This\
        \ API requires one of the following user roles: FirmAdmin, Registrar, SiteAdmin,\
        \ SystemAdmin.\n"
      operationId: CreateAndLinkNewFirmClientAccount
      parameters:
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        description: Information about the account you wish to create.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/NewFirmClientAccountRequestModel'
          application/json:
            schema:
              $ref: '#/components/schemas/NewFirmClientAccountRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/NewFirmClientAccountRequestModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/NewFirmClientAccountRequestModel'
        required: false
      responses:
        201:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirmClientLinkageOutputModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
  /api/v2/accounts/freetrials/request:
    post:
      tags:
      - Free
      summary: FREE API - Request a free trial of AvaTax
      description: "Call this API to obtain a free AvaTax account.\r\n           \
        \ \r\nThis API is free to use.  No authentication credentials are required\
        \ to call this API. You must read and\r\naccept [Avalara's terms and conditions](https://www1.avalara.com/us/en/legal/terms.html)\
        \ for the account to be\r\ncreated.\r\n            \r\nIf all conditions are\
        \ met, this API will grant a free trial version of AvaTax.  For a list of\
        \ functionality\r\navailable in the free trial and its limitations, please\
        \ see the [AvaTax Developer Website Free Trial page](https://developer.avalara.com/avatax/signup/).\r\
        \n            \r\nAfter your free trial concludes, you will still be able\
        \ to use the [Free AvaTax API Suite](https://developer.avalara.com/api-reference/avatax/rest/v2/methods/Free/).\n\
        \n### Security Policies\n\n* This API may be called without providing authentication\
        \ credentials.\n"
      operationId: RequestFreeTrial
      requestBody:
        description: Required information to provision a free trial account.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FreeTrialRequestModel'
          application/json:
            schema:
              $ref: '#/components/schemas/FreeTrialRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/FreeTrialRequestModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FreeTrialRequestModel'
        required: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewAccountModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
      x-codegen-request-body-name: body
  /api/v2/fundingrequests/{id}:
    get:
      tags:
      - FundingRequests
      summary: Retrieve status about a funding setup request
      description: "This API is available by invitation only.\r\nCompanies that use\
        \ the Avalara Managed Returns or the SST Certified Service Provider services\
        \ are\r\nrequired to setup their funding configuration before Avalara can\
        \ begin filing tax returns on their\r\nbehalf.\r\nFunding configuration for\
        \ each company is set up by submitting a funding setup request, which can\r\
        \nbe sent either via email or via an embedded HTML widget.\r\nWhen the funding\
        \ configuration is submitted to Avalara, it will be reviewed by treasury team\
        \ members\r\nbefore approval.\r\nThis API checks the status on an existing\
        \ funding request.\r\nThis API requires a subscription to Avalara Managed\
        \ Returns or SST Certified Service Provider.\n\n### Security Policies\n\n\
        * This API requires one of the following user roles: AccountAdmin, CompanyAdmin,\
        \ CSPTester, FirmAdmin, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin.\n\
        * This API depends on the following active services:*Returns* (at least one\
        \ of):  Mrs, MRSComplianceManager, AvaTaxCsp.*Firm Managed* (for accounts\
        \ managed by a firm):  ARA, ARAManaged.\n"
      operationId: FundingRequestStatus
      parameters:
      - name: id
        in: path
        description: The unique ID number of this funding request
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FundingStatusModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/fundingrequests/{id}/widget:
    get:
      tags:
      - FundingRequests
      summary: Request the javascript for a funding setup widget
      description: "This API is available by invitation only.\r\nCompanies that use\
        \ the Avalara Managed Returns or the SST Certified Service Provider services\
        \ are\r\nrequired to setup their funding configuration before Avalara can\
        \ begin filing tax returns on their\r\nbehalf.\r\nFunding configuration for\
        \ each company is set up by submitting a funding setup request, which can\r\
        \nbe sent either via email or via an embedded HTML widget.\r\nWhen the funding\
        \ configuration is submitted to Avalara, it will be reviewed by treasury team\
        \ members\r\nbefore approval.\r\nThis API returns back the actual javascript\
        \ code to insert into your application to render the\r\nJavaScript funding\
        \ setup widget inline.\r\nUse the 'methodReturn.javaScript' return value to\
        \ insert this widget into your HTML page.\r\nThis API requires a subscription\
        \ to Avalara Managed Returns or SST Certified Service Provider.\n\n### Security\
        \ Policies\n\n* This API requires one of the following user roles: AccountAdmin,\
        \ AccountOperator, AccountUser, CompanyAdmin, CompanyUser, Compliance Root\
        \ User, ComplianceAdmin, ComplianceUser, CSPAdmin, CSPTester, FirmAdmin, FirmUser,\
        \ ProStoresOperator, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin,\
        \ TechnicalSupportUser, TreasuryAdmin, TreasuryUser.\n* This API depends on\
        \ the following active services:*Returns* (at least one of):  Mrs, MRSComplianceManager,\
        \ AvaTaxCsp.*Firm Managed* (for accounts managed by a firm):  ARA, ARAManaged.\n"
      operationId: ActivateFundingRequest
      parameters:
      - name: id
        in: path
        description: The unique ID number of this funding request
        required: true
        schema:
          type: integer
          format: int64
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FundingStatusModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/companies/{companyId}/items:
    get:
      tags:
      - Items
      summary: Retrieve items for this company
      description: "List all items defined for the current company.\r\n          \
        \  \r\nItems are a way of separating your tax calculation process from your\
        \ tax configuration details.  If you choose, you\r\ncan provide `itemCode`\
        \ values for each `CreateTransaction()` API call rather than specifying tax\
        \ codes, parameters, descriptions,\r\nand other data fields.  AvaTax will\
        \ automatically look up each `itemCode` and apply the correct tax codes and\
        \ parameters\r\nfrom the item table instead.  This allows your CreateTransaction\
        \ call to be as simple as possible, and your tax compliance\r\nteam can manage\
        \ your item catalog and adjust the tax behavior of items without having to\
        \ modify your software.\r\n            \r\nSearch for specific objects using\
        \ the criteria in the `$filter` parameter; full documentation is available\
        \ on [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/)\
        \ .\r\n            \r\nPaginate your results using the `$top`, `$skip`, and\
        \ `$orderby` parameters.\r\n            \r\nYou may specify Tag Name in the\
        \ `tagName` query parameter if you want to filter items on the basis of tagName\r\
        \n\r\nYou may specify one or more of the following values in the `$include`\
        \ parameter to fetch additional nested data, using commas to separate multiple\
        \ values:\r\n            \r\n* Parameters\r\n* Classifications\r\n* Tags\n\
        \n### Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, CSPAdmin, CSPTester,\
        \ SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n"
      operationId: ListItemsByCompany
      parameters:
      - name: companyId
        in: path
        description: The ID of the company that defined these items
        required: true
        schema:
          type: integer
          format: int32
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br
          />*Not filterable:* taxCode, classifications, parameters, tags
        schema:
          type: string
      - name: $include
        in: query
        description: A comma separated list of additional data to retrieve.
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: tagName
        in: query
        description: Tag Name on the basis of which you want to filter Items
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemModelFetchResult'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
    post:
      tags:
      - Items
      summary: Create a new item
      description: "Creates one or more new item objects attached to this company.\r\
        \n            \r\nItems are a way of separating your tax calculation process\
        \ from your tax configuration details.  If you choose, you\r\ncan provide\
        \ `itemCode` values for each `CreateTransaction()` API call rather than specifying\
        \ tax codes, parameters, descriptions,\r\nand other data fields.  AvaTax will\
        \ automatically look up each `itemCode` and apply the correct tax codes and\
        \ parameters\r\nfrom the item table instead.  This allows your CreateTransaction\
        \ call to be as simple as possible, and your tax compliance\r\nteam can manage\
        \ your item catalog and adjust the tax behavior of items without having to\
        \ modify your software.\r\n            \r\nThe tax code takes precedence over\
        \ the tax code id if both are provided.\n\n### Security Policies\n\n* This\
        \ API requires one of the following user roles: AccountAdmin, CompanyAdmin,\
        \ CSPTester, SSTAdmin, TechnicalSupportAdmin.\n"
      operationId: CreateItems
      parameters:
      - name: companyId
        in: path
        description: The ID of the company that owns this item.
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        description: The item you wish to create.
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ItemModel'
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ItemModel'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ItemModel'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ItemModel'
        required: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ItemModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
  /api/v2/companies/{companyId}/items/{id}:
    get:
      tags:
      - Items
      summary: Retrieve a single item
      description: "Get the `Item` object identified by this URL.\r\n            \r\
        \nItems are a way of separating your tax calculation process from your tax\
        \ configuration details.  If you choose, you\r\ncan provide `itemCode` values\
        \ for each `CreateTransaction()` API call rather than specifying tax codes,\
        \ parameters, descriptions,\r\nand other data fields.  AvaTax will automatically\
        \ look up each `itemCode` and apply the correct tax codes and parameters\r\
        \nfrom the item table instead.  This allows your CreateTransaction call to\
        \ be as simple as possible, and your tax compliance\r\nteam can manage your\
        \ item catalog and adjust the tax behavior of items without having to modify\
        \ your software.\n\n### Security Policies\n\n* This API requires one of the\
        \ following user roles: AccountAdmin, AccountUser, CompanyAdmin, CompanyUser,\
        \ CSPAdmin, CSPTester, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin,\
        \ TechnicalSupportUser.\n"
      operationId: GetItem
      parameters:
      - name: companyId
        in: path
        description: The ID of the company that owns this item object
        required: true
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: The primary key of this item
        required: true
        schema:
          type: integer
          format: int64
      - name: $include
        in: query
        description: A comma separated list of additional data to retrieve.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
    put:
      tags:
      - Items
      summary: Update a single item
      description: "Replace the existing `Item` object at this URL with an updated\
        \ object.\r\n            \r\nItems are a way of separating your tax calculation\
        \ process from your tax configuration details.  If you choose, you\r\ncan\
        \ provide `itemCode` values for each `CreateTransaction()` API call rather\
        \ than specifying tax codes, parameters, descriptions,\r\nand other data fields.\
        \  AvaTax will automatically look up each `itemCode` and apply the correct\
        \ tax codes and parameters\r\nfrom the item table instead.  This allows your\
        \ CreateTransaction call to be as simple as possible, and your tax compliance\r\
        \nteam can manage your item catalog and adjust the tax behavior of items without\
        \ having to modify your software.\r\n            \r\nAll data from the existing\
        \ object will be replaced with data in the object you PUT.  To set a field's\
        \ value to null,\r\nyou may either set its value to null or omit that field\
        \ from the object you post.\r\n            \r\nThe tax code takes precedence\
        \ over the tax code id if both are provided.\n\n### Security Policies\n\n\
        * This API requires one of the following user roles: AccountAdmin, CompanyAdmin,\
        \ CSPTester, SSTAdmin, TechnicalSupportAdmin.\n"
      operationId: UpdateItem
      parameters:
      - name: companyId
        in: path
        description: The ID of the company that this item belongs to.
        required: true
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: The ID of the item you wish to update
        required: true
        schema:
          type: integer
          format: int64
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        description: The item object you wish to update.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ItemModel'
          application/json:
            schema:
              $ref: '#/components/schemas/ItemModel'
          text/json:
            schema:
              $ref: '#/components/schemas/ItemModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ItemModel'
        required: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
    delete:
      tags:
      - Items
      summary: Delete a single item
      description: "Deletes the item object at this URL.\r\n            \r\nItems\
        \ are a way of separating your tax calculation process from your tax configuration\
        \ details.  If you choose, you\r\ncan provide `itemCode` values for each `CreateTransaction()`\
        \ API call rather than specifying tax codes, parameters, descriptions,\r\n\
        and other data fields.  AvaTax will automatically look up each `itemCode`\
        \ and apply the correct tax codes and parameters\r\nfrom the item table instead.\
        \  This allows your CreateTransaction call to be as simple as possible, and\
        \ your tax compliance\r\nteam can manage your item catalog and adjust the\
        \ tax behavior of items without having to modify your software.\r\n      \
        \      \r\nDeleting an item will also delete the parameters and classifications\
        \ associated with that item.\n\n### Security Policies\n\n* This API requires\
        \ one of the following user roles: AccountAdmin, CompanyAdmin, CSPTester,\
        \ SSTAdmin, TechnicalSupportAdmin.\n"
      operationId: DeleteItem
      parameters:
      - name: companyId
        in: path
        description: The ID of the company that owns this item.
        required: true
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: The ID of the item you wish to delete.
        required: true
        schema:
          type: integer
          format: int64
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorDetail'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/companies/{companyId}/items/{itemId}/classifications:
    get:
      tags:
      - Items
      summary: Retrieve classifications for an item.
      description: "List classifications for an item.\r\n            \r\nA classification\
        \ is the code for a product in a particular tax system. Classifications enable\
        \ an item to be used in multiple tax systems which may have different tax\
        \ rates for a product.\r\n            \r\nWhen an item is used in a transaction,\
        \ the applicable classification will be used to determine the appropriate\
        \ tax rate.\r\n            \r\nSearch for specific objects using the criteria\
        \ in the `$filter` classification; full documentation is available on [Filtering\
        \ in REST](http://developer.avalara.com/avatax/filtering-in-rest/) .\r\nPaginate\
        \ your results using the `$top`, `$skip`, and `$orderby` classifications.\n\
        \n### Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, CSPAdmin, CSPTester,\
        \ SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n"
      operationId: ListItemClassifications
      parameters:
      - name: companyId
        in: path
        description: The company id.
        required: true
        schema:
          type: integer
          format: int32
      - name: itemId
        in: path
        description: The item id.
        required: true
        schema:
          type: integer
          format: int64
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br
          />*Not filterable:* productCode, systemCode
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemClassificationOutputModelFetchResult'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
    post:
      tags:
      - Items
      summary: Add classifications to an item.
      description: "Add classifications to an item.\r\n            \r\nA classification\
        \ is the code for a product in a particular tax system. Classifications enable\
        \ an item to be used in multiple tax systems which may have different tax\
        \ rates for a product.\r\n            \r\nWhen an item is used in a transaction,\
        \ the applicable classification will be used to determine the appropriate\
        \ tax rate.\r\n            \r\nAn item may only have one classification per\
        \ tax system.\n\n### Security Policies\n\n* This API requires one of the following\
        \ user roles: AccountAdmin, CompanyAdmin, CSPTester, SSTAdmin, TechnicalSupportAdmin.\n"
      operationId: CreateItemClassifications
      parameters:
      - name: companyId
        in: path
        description: The company id.
        required: true
        schema:
          type: integer
          format: int32
      - name: itemId
        in: path
        description: The item id.
        required: true
        schema:
          type: integer
          format: int64
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        description: The item classifications you wish to create.
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ItemClassificationInputModel'
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ItemClassificationInputModel'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ItemClassificationInputModel'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ItemClassificationInputModel'
        required: false
      responses:
        201:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ItemClassificationOutputModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
    delete:
      tags:
      - Items
      summary: Delete all classifications for an item
      description: "Delete all the classifications for a given item.\r\n         \
        \   \r\nA classification is the code for a product in a particular tax system.\
        \ Classifications enable an item to be used in multiple tax systems which\
        \ may have different tax rates for a product.\r\n            \r\nWhen an item\
        \ is used in a transaction, the applicable classification will be used to\
        \ determine the appropriate tax rate.\n\n### Security Policies\n\n* This API\
        \ requires one of the following user roles: AccountAdmin, CompanyAdmin, CSPTester,\
        \ SSTAdmin, TechnicalSupportAdmin.\n"
      operationId: BatchDeleteItemClassifications
      parameters:
      - name: companyId
        in: path
        description: The ID of the company that owns this item.
        required: true
        schema:
          type: integer
          format: int32
      - name: itemId
        in: path
        description: The ID of the item you wish to delete the classifications.
        required: true
        schema:
          type: integer
          format: int64
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorDetail'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/companies/{companyId}/items/{itemId}/classifications/{id}:
    get:
      tags:
      - Items
      summary: Retrieve a single item classification.
      description: "Retrieve a single item classification.\r\n            \r\nA classification\
        \ is the code for a product in a particular tax system. Classifications enable\
        \ an item to be used in multiple tax systems which may have different tax\
        \ rates for a product.\r\n            \r\nWhen an item is used in a transaction,\
        \ the applicable classification will be used to determine the appropriate\
        \ tax rate.\n\n### Security Policies\n\n* This API requires one of the following\
        \ user roles: AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, CSPAdmin,\
        \ CSPTester, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n"
      operationId: GetItemClassification
      parameters:
      - name: companyId
        in: path
        description: The company id.
        required: true
        schema:
          type: integer
          format: int32
      - name: itemId
        in: path
        description: The item id.
        required: true
        schema:
          type: integer
          format: int64
      - name: id
        in: path
        description: The item classification id.
        required: true
        schema:
          type: integer
          format: int64
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemClassificationOutputModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
    put:
      tags:
      - Items
      summary: Update an item classification.
      description: "Update an item classification.\r\n            \r\nA classification\
        \ is the code for a product in a particular tax system. Classifications enable\
        \ an item to be used in multiple tax systems which may have different tax\
        \ rates for a product.\r\n            \r\nWhen an item is used in a transaction,\
        \ the applicable classification will be used to determine the appropriate\
        \ tax rate.\r\n            \r\nAn item may only have one classification per\
        \ tax system.\n\n### Security Policies\n\n* This API requires one of the following\
        \ user roles: AccountAdmin, CompanyAdmin, CSPTester, SSTAdmin, TechnicalSupportAdmin.\n"
      operationId: UpdateItemClassification
      parameters:
      - name: companyId
        in: path
        description: The company id.
        required: true
        schema:
          type: integer
          format: int32
      - name: itemId
        in: path
        description: The item id.
        required: true
        schema:
          type: integer
          format: int64
      - name: id
        in: path
        description: The item classification id.
        required: true
        schema:
          type: integer
          format: int64
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        description: The item object you wish to update.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ItemClassificationInputModel'
          application/json:
            schema:
              $ref: '#/components/schemas/ItemClassificationInputModel'
          text/json:
            schema:
              $ref: '#/components/schemas/ItemClassificationInputModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ItemClassificationInputModel'
        required: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemClassificationOutputModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
    delete:
      tags:
      - Items
      summary: Delete a single item classification.
      description: "Delete a single item classification.\r\n            \r\nA classification\
        \ is the code for a product in a particular tax system. Classifications enable\
        \ an item to be used in multiple tax systems which may have different tax\
        \ rates for a product.\r\n            \r\nWhen an item is used in a transaction,\
        \ the applicable classification will be used to determine the appropriate\
        \ tax rate.\n\n### Security Policies\n\n* This API requires one of the following\
        \ user roles: AccountAdmin, CompanyAdmin, CSPTester, SSTAdmin, TechnicalSupportAdmin.\n"
      operationId: DeleteItemClassification
      parameters:
      - name: companyId
        in: path
        description: The company id.
        required: true
        schema:
          type: integer
          format: int32
      - name: itemId
        in: path
        description: The item id.
        required: true
        schema:
          type: integer
          format: int64
      - name: id
        in: path
        description: The item classification id.
        required: true
        schema:
          type: integer
          format: int64
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorDetail'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/companies/{companyId}/items/{itemId}/parameters:
    get:
      tags:
      - Items
      summary: Retrieve parameters for an item
      description: "List parameters for an item.\r\n            \r\nSome items can\
        \ be taxed differently depending on the properties of that item, such as the\
        \ item grade or by a particular measurement of that item. In AvaTax, these\
        \ tax-affecting properties are called \"parameters\".\r\n            \r\n\
        A parameter added to an item will be used by default in tax calculation but\
        \ will not show on the transaction line referencing the item .\r\n       \
        \     \r\nA parameter specified on a transaction line will override an item\
        \ parameter if they share the same parameter name.\r\n            \r\nSearch\
        \ for specific objects using the criteria in the `$filter` parameter; full\
        \ documentation is available on [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/)\
        \ .\r\nPaginate your results using the `$top`, `$skip`, and `$orderby` parameters.\n\
        \n### Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, CSPAdmin, CSPTester,\
        \ SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n"
      operationId: ListItemParameters
      parameters:
      - name: companyId
        in: path
        description: The company id
        required: true
        schema:
          type: integer
          format: int32
      - name: itemId
        in: path
        description: The item id
        required: true
        schema:
          type: integer
          format: int64
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br
          />*Not filterable:* name, unit, isNeededForCalculation, isNeededForReturns,
          isNeededForClassification
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemParameterModelFetchResult'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
    post:
      tags:
      - Items
      summary: Add parameters to an item.
      description: "Add parameters to an item.\r\n            \r\nSome items can be\
        \ taxed differently depending on the properties of that item, such as the\
        \ item grade or by a particular measurement of that item. In AvaTax, these\
        \ tax-affecting properties are called \"parameters\".\r\n            \r\n\
        A parameter added to an item will be used by default in tax calculation but\
        \ will not show on the transaction line referencing the item .\r\n       \
        \     \r\nA parameter specified on a transaction line will override an item\
        \ parameter if they share the same parameter name.\r\n            \r\nTo see\
        \ available parameters for this item, call `/api/v2/definitions/parameters?$filter=attributeType\
        \ eq Product`\r\n            \r\nSome parameters are only available for use\
        \ if you have subscribed to specific AvaTax services. To see which parameters\
        \ you are able to use, add the query parameter \"$showSubscribed=true\" to\
        \ the parameter definition call above.\n\n### Security Policies\n\n* This\
        \ API requires one of the following user roles: AccountAdmin, CompanyAdmin,\
        \ CSPTester, SSTAdmin, TechnicalSupportAdmin.\n"
      operationId: CreateItemParameters
      parameters:
      - name: companyId
        in: path
        description: The ID of the company that owns this item parameter.
        required: true
        schema:
          type: integer
          format: int32
      - name: itemId
        in: path
        description: The item id.
        required: true
        schema:
          type: integer
          format: int64
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        description: The item parameters you wish to create.
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ItemParameterModel'
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ItemParameterModel'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ItemParameterModel'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ItemParameterModel'
        required: false
      responses:
        201:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ItemParameterModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
    delete:
      tags:
      - Items
      summary: Delete all parameters for an item
      description: "Delete all the parameters for a given item.\r\n            \r\n\
        Some items can be taxed differently depending on the properties of that item,\
        \ such as the item grade or by a particular measurement of that item. In AvaTax,\
        \ these tax-affecting properties are called \"parameters\".\r\n          \
        \  \r\nA parameter added to an item will be used by default in tax calculation\
        \ but will not show on the transaction line referencing the item .\r\n   \
        \         \r\nA parameter specified on a transaction line will override an\
        \ item parameter if they share the same parameter name.\n\n### Security Policies\n\
        \n* This API requires one of the following user roles: AccountAdmin, CompanyAdmin,\
        \ CSPTester, SSTAdmin, TechnicalSupportAdmin.\n"
      operationId: BatchDeleteItemParameters
      parameters:
      - name: companyId
        in: path
        description: The ID of the company that owns this item.
        required: true
        schema:
          type: integer
          format: int32
      - name: itemId
        in: path
        description: The ID of the item you wish to delete the parameters.
        required: true
        schema:
          type: integer
          format: int64
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorDetail'
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/companies/{companyId}/items/{itemId}/parameters/{id}:
    get:
      tags:
      - Items
      summary: Retrieve a single item parameter
      description: "Retrieve a single item parameter.\r\n            \r\nSome items\
        \ can be taxed differently depending on the properties of that item, such\
        \ as the item grade or by a particular measurement of that item. In AvaTax,\
        \ these tax-affecting properties are called \"parameters\".\r\n          \
        \  \r\nA parameter added to an item will be used by default in tax calculation\
        \ but will not show on the transaction line referencing the item .\r\n   \
        \         \r\nA parameter specified on a transaction line will override an\
        \ item parameter if they share the same parameter name.\n\n### Security Policies\n\
        \n* This API requires one of the following user roles: AccountAdmin, AccountUser,\
        \ CompanyAdmin, CompanyUser, CSPAdmin, CSPTester, SiteAdmin, SSTAdmin, SystemAdmin,\
        \ TechnicalSupportAdmin, TechnicalSupportUser.\n"
      operationId: GetItemParameter
      parameters:
      - name: companyId
        in: path
        description: The company id
        required: true
        schema:
          type: integer
          format: int32
      - name: itemId
        in: path
        description: The item id
        required: true
        schema:
          type: integer
          format: int64
      - name: id
        in: path
        description: The parameter id
        required: true
        schema:
          type: integer
          format: int64
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemParameterModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
    put:
      tags:
      - Items
      summary: Update an item parameter
      description: "Update an item parameter.\r\n            \r\nSome items can be\
        \ taxed differently depending on the properties of that item, such as the\
        \ item grade or by a particular measurement of that item. In AvaTax, these\
        \ tax-affecting properties are called \"parameters\".\r\n            \r\n\
        A parameter added to an item will be used by default in tax calculation but\
        \ will not show on the transaction line referencing the item .\r\n       \
        \     \r\nA parameter specified on a transaction line will override an item\
        \ parameter if they share the same parameter name.\n\n### Security Policies\n\
        \n* This API requires one of the following user roles: AccountAdmin, CompanyAdmin,\
        \ CSPTester, SSTAdmin, TechnicalSupportAdmin.\n"
      operationId: UpdateItemParameter
      parameters:
      - name: companyId
        in: path
        description: The company id.
        required: true
        schema:
          type: integer
          format: int32
      - name: itemId
        in: path
        description: The item id
        required: true
        schema:
          type: integer
          format: int64
      - name: id
        in: path
        description: The item parameter id
        required: true
        schema:
          type: integer
          format: int64
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        description: The item object you wish to update.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ItemParameterModel'
          application/json:
            schema:
              $ref: '#/components/schemas/ItemParameterModel'
          text/json:
            schema:
              $ref: '#/components/schemas/ItemParameterModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ItemParameterModel'
        required: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemParameterModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
    delete:
      tags:
      - Items
      summary: Delete a single item parameter
      description: "Delete a single item parameter.\r\n            \r\nSome items\
        \ can be taxed differently depending on the properties of that item, such\
        \ as the item grade or by a particular measurement of that item. In AvaTax,\
        \ these tax-affecting properties are called \"parameters\".\r\n          \
        \  \r\nA parameter added to an item will be used by default in tax calculation\
        \ but will not show on the transaction line referencing the item .\r\n   \
        \         \r\nA parameter specified on a transaction line will override an\
        \ item parameter if they share the same parameter name.\n\n### Security Policies\n\
        \n* This API requires one of the following user roles: AccountAdmin, CompanyAdmin,\
        \ CSPTester, SSTAdmin, TechnicalSupportAdmin.\n"
      operationId: DeleteItemParameter
      parameters:
      - name: companyId
        in: path
        description: The company id
        required: true
        schema:
          type: integer
          format: int32
      - name: itemId
        in: path
        description: The item id
        required: true
        schema:
          type: integer
          format: int64
      - name: id
        in: path
        description: The parameter id
        required: true
        schema:
          type: integer
          format: int64
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorDetail'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/companies/{companyId}/items/{itemId}/tags:
    get:
      tags:
      - Items
      summary: Retrieve tags for an item
      description: "Get the `Tag` objects of an Item identified by this URL.\r\n \
        \           \r\nItem tags puts multiple labels for an item. So that item can\
        \ be easily grouped by these tags.\n\n### Security Policies\n\n* This API\
        \ requires one of the following user roles: AccountAdmin, AccountUser, CompanyAdmin,\
        \ CompanyUser, CSPAdmin, CSPTester, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin,\
        \ TechnicalSupportUser.\n"
      operationId: GetItemTags
      parameters:
      - name: companyId
        in: path
        description: The ID of the company that defined these items
        required: true
        schema:
          type: integer
          format: int32
      - name: itemId
        in: path
        description: The ID of the item as defined by the company that owns this tag.
        required: true
        schema:
          type: integer
          format: int64
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br
          />*Not filterable:* tagName
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemTagDetailModelFetchResult'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
    post:
      tags:
      - Items
      summary: Create tags for a item
      description: "Creates one or more new `Tag` objects attached to this Item.\r\
        \n            \r\nItem tags puts multiple labels for an item. So that item\
        \ can be easily grouped by these tags.\n\n### Security Policies\n\n* This\
        \ API requires one of the following user roles: AccountAdmin, CompanyAdmin,\
        \ CSPTester, SSTAdmin, TechnicalSupportAdmin.\n"
      operationId: CreateItemTags
      parameters:
      - name: companyId
        in: path
        description: The ID of the company that defined these items
        required: true
        schema:
          type: integer
          format: int32
      - name: itemId
        in: path
        description: The ID of the item as defined by the company that owns this tag.
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        description: Tags you wish to associate with the Item
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ItemTagDetailModel'
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ItemTagDetailModel'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ItemTagDetailModel'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ItemTagDetailModel'
        required: false
      responses:
        201:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ItemTagDetailModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
    delete:
      tags:
      - Items
      summary: Delete all item tags
      description: "Deletes all `Tags` objects of an Item at this URL.\r\n       \
        \     \r\nItem tags puts multiple labels for an item. So that item can be\
        \ easily grouped by these tags.\n\n### Security Policies\n\n* This API requires\
        \ one of the following user roles: AccountAdmin, CompanyAdmin, CSPTester,\
        \ SSTAdmin, TechnicalSupportAdmin.\n"
      operationId: DeleteItemTags
      parameters:
      - name: companyId
        in: path
        description: The ID of the company that defined these items.
        required: true
        schema:
          type: integer
          format: int32
      - name: itemId
        in: path
        description: The ID of the item as defined by the company that owns this tag.
        required: true
        schema:
          type: integer
          format: int64
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorDetail'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/companies/{companyId}/items/{itemId}/tags/{itemTagDetailId}:
    delete:
      tags:
      - Items
      summary: Delete item tag by id
      description: "Deletes the `Tag` object of an Item at this URL.\r\n         \
        \   \r\nItem tags puts multiple labels for an item. So that item can be easily\
        \ grouped by these tags.\n\n### Security Policies\n\n* This API requires one\
        \ of the following user roles: AccountAdmin, CompanyAdmin, CSPTester, SSTAdmin,\
        \ TechnicalSupportAdmin.\n"
      operationId: DeleteItemTag
      parameters:
      - name: companyId
        in: path
        description: The ID of the company that defined these items
        required: true
        schema:
          type: integer
          format: int32
      - name: itemId
        in: path
        description: The ID of the item as defined by the company that owns this tag.
        required: true
        schema:
          type: integer
          format: int64
      - name: itemTagDetailId
        in: path
        description: The ID of the item tag detail you wish to delete.
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorDetail'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/companies/{companyId}/items/bytags/{tag}:
    get:
      tags:
      - Items
      summary: Retrieve all items associated with given tag
      description: "Get multiple item objects associated with given tag.\r\n     \
        \       \r\nItems are a way of separating your tax calculation process from\
        \ your tax configuration details.  If you choose, you\r\ncan provide `itemCode`\
        \ values for each `CreateTransaction()` API call rather than specifying tax\
        \ codes, parameters, descriptions,\r\nand other data fields.  AvaTax will\
        \ automatically look up each `itemCode` and apply the correct tax codes and\
        \ parameters\r\nfrom the item table instead.  This allows your CreateTransaction\
        \ call to be as simple as possible, and your tax compliance\r\nteam can manage\
        \ your item catalog and adjust the tax behavior of items without having to\
        \ modify your software.\r\n            \r\nSearch for specific objects using\
        \ the criteria in the `$filter` parameter; full documentation is available\
        \ on [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/)\
        \ .\r\n            \r\nPaginate your results using the `$top`, `$skip`, and\
        \ `$orderby` parameters.\n\n### Security Policies\n\n* This API requires one\
        \ of the following user roles: AccountAdmin, AccountUser, CompanyAdmin, CompanyUser,\
        \ CSPAdmin, CSPTester, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin,\
        \ TechnicalSupportUser.\n"
      operationId: QueryItemsByTag
      parameters:
      - name: companyId
        in: path
        description: The ID of the company that defined these items.
        required: true
        schema:
          type: integer
          format: int32
      - name: tag
        in: path
        description: The master tag to be associated with item.
        required: true
        schema:
          type: string
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br
          />*Not filterable:* taxCode, classifications, parameters, tags
        schema:
          type: string
      - name: $include
        in: query
        description: A comma separated list of additional data to retrieve.
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemModelFetchResult'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/companies/{companyId}/items/sync:
    post:
      tags:
      - Items
      summary: Sync items from a product catalog
      description: "Syncs a list of items with AvaTax without waiting for them to\
        \ be created. It is ideal for syncing large product catalogs\r\nwith AvaTax.\r\
        \n            \r\nAny invalid or duplicate items will be ignored. To diagnose\
        \ why an item is not created, use the normal create transaction API to receive\
        \ validation information.\r\n            \r\nThis API is currently limited\
        \ to 1000 items per call (the limit is subject to change).\r\n           \
        \ \r\nItems are a way of separating your tax calculation process from your\
        \ tax configuration details.  If you choose, you\r\ncan provide `itemCode`\
        \ values for each `CreateTransaction()` API call rather than specifying tax\
        \ codes, parameters, descriptions,\r\nand other data fields.  AvaTax will\
        \ automatically look up each `itemCode` and apply the correct tax codes and\
        \ parameters\r\nfrom the item table instead.  This allows your CreateTransaction\
        \ call to be as simple as possible, and your tax compliance\r\nteam can manage\
        \ your item catalog and adjust the tax behavior of items without having to\
        \ modify your software.\n\n### Security Policies\n\n* This API requires one\
        \ of the following user roles: AccountAdmin, CompanyAdmin, CSPTester, SSTAdmin,\
        \ TechnicalSupportAdmin.\n"
      operationId: SyncItems
      parameters:
      - name: companyId
        in: path
        description: The ID of the company that owns this item.
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        description: The request object.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/SyncItemsRequestModel'
          application/json:
            schema:
              $ref: '#/components/schemas/SyncItemsRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/SyncItemsRequestModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SyncItemsRequestModel'
        required: false
      responses:
        202:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyncItemsResponseModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
  /api/v2/companies/{companyId}/items/upload:
    post:
      tags:
      - Items
      summary: Bulk upload items from a product catalog
      description: "Create/Update one or more item objects attached to this company.\r\
        \n            \r\nItems are a way of separating your tax calculation process\
        \ from your tax configuration details.  If you choose, you\r\ncan provide\
        \ `itemCode` values for each `CreateTransaction()` API call rather than specifying\
        \ tax codes, parameters, descriptions,\r\nand other data fields.  AvaTax will\
        \ automatically look up each `itemCode` and apply the correct tax codes and\
        \ parameters\r\nfrom the item table instead.  This allows your CreateTransaction\
        \ call to be as simple as possible, and your tax compliance\r\nteam can manage\
        \ your item catalog and adjust the tax behavior of items without having to\
        \ modify your software.\r\n            \r\nThe tax code takes precedence over\
        \ the tax code id if both are provided.\n\n### Security Policies\n\n* This\
        \ API requires one of the following user roles: AccountAdmin, CompanyAdmin,\
        \ CSPTester, SSTAdmin, TechnicalSupportAdmin.\n"
      operationId: BulkUploadItems
      parameters:
      - name: companyId
        in: path
        description: The ID of the company that owns this items.
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        description: The items you wish to upload.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ItemBulkUploadInputModel'
          application/json:
            schema:
              $ref: '#/components/schemas/ItemBulkUploadInputModel'
          text/json:
            schema:
              $ref: '#/components/schemas/ItemBulkUploadInputModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ItemBulkUploadInputModel'
        required: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemBulkUploadOutputModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
  /api/v2/items:
    get:
      tags:
      - Items
      summary: Retrieve all items
      description: "Get multiple item objects across all companies.\r\n          \
        \  \r\nItems are a way of separating your tax calculation process from your\
        \ tax configuration details.  If you choose, you\r\ncan provide `itemCode`\
        \ values for each `CreateTransaction()` API call rather than specifying tax\
        \ codes, parameters, descriptions,\r\nand other data fields.  AvaTax will\
        \ automatically look up each `itemCode` and apply the correct tax codes and\
        \ parameters\r\nfrom the item table instead.  This allows your CreateTransaction\
        \ call to be as simple as possible, and your tax compliance\r\nteam can manage\
        \ your item catalog and adjust the tax behavior of items without having to\
        \ modify your software.\r\n            \r\nSearch for specific objects using\
        \ the criteria in the `$filter` parameter; full documentation is available\
        \ on [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/)\
        \ .\r\n            \r\nPaginate your results using the `$top`, `$skip`, and\
        \ `$orderby` parameters.\n\n### Security Policies\n\n* This API requires one\
        \ of the following user roles: AccountAdmin, AccountUser, CompanyAdmin, CompanyUser,\
        \ CSPAdmin, CSPTester, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin,\
        \ TechnicalSupportUser.\n"
      operationId: QueryItems
      parameters:
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br
          />*Not filterable:* taxCode, classifications, parameters, tags
        schema:
          type: string
      - name: $include
        in: query
        description: A comma separated list of additional data to retrieve.
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemModelFetchResult'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/accounts/{accountId}/jurisdictionoverrides:
    get:
      tags:
      - JurisdictionOverrides
      summary: Retrieve overrides for this account
      description: "List all jurisdiction override objects defined for this account.\r\
        \n            \r\nA Jurisdiction Override is a configuration setting that\
        \ allows you to select the taxing\r\njurisdiction for a specific address.\
        \  If you encounter an address that is on the boundary\r\nbetween two different\
        \ jurisdictions, you can choose to set up a jurisdiction override\r\nto switch\
        \ this address to use different taxing jurisdictions.\r\n            \r\n\
        Search for specific objects using the criteria in the `$filter` parameter;\
        \ full documentation is available on [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/)\
        \ .\r\nPaginate your results using the `$top`, `$skip`, and `$orderby` parameters.\n\
        \n### Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, CSPAdmin, CSPTester,\
        \ SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n"
      operationId: ListJurisdictionOverridesByAccount
      parameters:
      - name: accountId
        in: path
        description: The ID of the account that owns this override
        required: true
        schema:
          type: integer
          format: int32
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br
          />*Not filterable:* country, Jurisdictions
        schema:
          type: string
      - name: $include
        in: query
        description: A comma separated list of additional data to retrieve.
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JurisdictionOverrideModelFetchResult'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
    post:
      tags:
      - JurisdictionOverrides
      summary: Create one or more overrides
      description: "Creates one or more jurisdiction override objects for this account.\r\
        \n            \r\nA Jurisdiction Override is a configuration setting that\
        \ allows you to select the taxing\r\njurisdiction for a specific address.\
        \  If you encounter an address that is on the boundary\r\nbetween two different\
        \ jurisdictions, you can choose to set up a jurisdiction override\r\nto switch\
        \ this address to use different taxing jurisdictions.\n\n### Security Policies\n\
        \n* This API requires one of the following user roles: AccountAdmin, CSPTester,\
        \ SSTAdmin, TechnicalSupportAdmin.\n"
      operationId: CreateJurisdictionOverrides
      parameters:
      - name: accountId
        in: path
        description: The ID of the account that owns this override
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        description: The jurisdiction override objects to create
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/JurisdictionOverrideModel'
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/JurisdictionOverrideModel'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/JurisdictionOverrideModel'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/JurisdictionOverrideModel'
        required: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JurisdictionOverrideModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
  /api/v2/accounts/{accountId}/jurisdictionoverrides/{id}:
    get:
      tags:
      - JurisdictionOverrides
      summary: Retrieve a single override
      description: "Get the item object identified by this URL.\r\n            \r\n\
        A Jurisdiction Override is a configuration setting that allows you to select\
        \ the taxing\r\njurisdiction for a specific address.  If you encounter an\
        \ address that is on the boundary\r\nbetween two different jurisdictions,\
        \ you can choose to set up a jurisdiction override\r\nto switch this address\
        \ to use different taxing jurisdictions.\n\n### Security Policies\n\n* This\
        \ API requires one of the following user roles: AccountAdmin, AccountUser,\
        \ CompanyAdmin, CompanyUser, CSPAdmin, CSPTester, SiteAdmin, SSTAdmin, SystemAdmin,\
        \ TechnicalSupportAdmin, TechnicalSupportUser.\n"
      operationId: GetJurisdictionOverride
      parameters:
      - name: accountId
        in: path
        description: The ID of the account that owns this override
        required: true
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: The primary key of this override
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JurisdictionOverrideModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
    put:
      tags:
      - JurisdictionOverrides
      summary: Update a single jurisdictionoverride
      description: |
        Replace the existing jurisdictionoverride object at this URL with an updated object.

        ### Security Policies

        * This API requires one of the following user roles: AccountAdmin, CSPTester, SSTAdmin, TechnicalSupportAdmin.
      operationId: UpdateJurisdictionOverride
      parameters:
      - name: accountId
        in: path
        description: The ID of the account that this jurisdictionoverride belongs
          to.
        required: true
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: The ID of the jurisdictionoverride you wish to update
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        description: The jurisdictionoverride object you wish to update.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/JurisdictionOverrideModel'
          application/json:
            schema:
              $ref: '#/components/schemas/JurisdictionOverrideModel'
          text/json:
            schema:
              $ref: '#/components/schemas/JurisdictionOverrideModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/JurisdictionOverrideModel'
        required: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JurisdictionOverrideModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
    delete:
      tags:
      - JurisdictionOverrides
      summary: Delete a single override
      description: |
        Marks the item object at this URL as deleted.

        ### Security Policies

        * This API requires one of the following user roles: AccountAdmin, CSPTester, SSTAdmin, TechnicalSupportAdmin.
      operationId: DeleteJurisdictionOverride
      parameters:
      - name: accountId
        in: path
        description: The ID of the account that owns this override
        required: true
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: The ID of the override you wish to delete
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorDetail'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/jurisdictionoverrides:
    get:
      tags:
      - JurisdictionOverrides
      summary: Retrieve all overrides
      description: "Get multiple jurisdiction override objects across all companies.\r\
        \n            \r\nA Jurisdiction Override is a configuration setting that\
        \ allows you to select the taxing\r\njurisdiction for a specific address.\
        \  If you encounter an address that is on the boundary\r\nbetween two different\
        \ jurisdictions, you can choose to set up a jurisdiction override\r\nto switch\
        \ this address to use different taxing jurisdictions.\r\n            \r\n\
        Search for specific objects using the criteria in the `$filter` parameter;\
        \ full documentation is available on [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/)\
        \ .\r\nPaginate your results using the `$top`, `$skip`, and `$orderby` parameters.\n\
        \n### Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, CSPAdmin, CSPTester,\
        \ SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n"
      operationId: QueryJurisdictionOverrides
      parameters:
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br
          />*Not filterable:* country, Jurisdictions
        schema:
          type: string
      - name: $include
        in: query
        description: A comma separated list of additional data to retrieve.
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JurisdictionOverrideModelFetchResult'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/companies/{companyId}/locations:
    get:
      tags:
      - Locations
      summary: Retrieve locations for this company
      description: "List all location objects defined for this company.\r\nAn 'Location'\
        \ represents a physical address where a company does business.\r\nMany taxing\
        \ authorities require that you define a list of all locations where your company\
        \ does business.\r\nThese locations may require additional custom configuration\
        \ or tax registration with these authorities.\r\nFor more information on metadata\
        \ requirements, see the '/api/v2/definitions/locationquestions' API.\r\n \
        \           \r\nSearch for specific objects using the criteria in the `$filter`\
        \ parameter; full documentation is available on [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/)\
        \ .\r\nPaginate your results using the `$top`, `$skip`, and `$orderby` parameters.\r\
        \nYou may specify one or more of the following values in the `$include` parameter\
        \ to fetch additional nested data, using commas to separate multiple values:\r\
        \n            \r\n* LocationSettings\r\n* parameters\n\n### Security Policies\n\
        \n* This API requires one of the following user roles: AccountAdmin, AccountUser,\
        \ CompanyAdmin, CompanyUser, CSPAdmin, CSPTester, FirmAdmin, FirmUser, SiteAdmin,\
        \ SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser, TreasuryAdmin,\
        \ TreasuryUser.\n"
      operationId: ListLocationsByCompany
      parameters:
      - name: companyId
        in: path
        description: The ID of the company that owns these locations
        required: true
        schema:
          type: integer
          format: int32
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br
          />*Not filterable:* isMarketplaceOutsideUsa, settings, parameters
        schema:
          type: string
      - name: $include
        in: query
        description: A comma separated list of additional data to retrieve.
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationModelFetchResult'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
    post:
      tags:
      - Locations
      summary: Create a new location
      description: |
        Create one or more new location objects attached to this company.

        ### Security Policies

        * This API requires one of the following user roles: AccountAdmin, CompanyAdmin, CSPAdmin, CSPTester, FirmAdmin, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin.
      operationId: CreateLocations
      parameters:
      - name: companyId
        in: path
        description: The ID of the company that owns this location.
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        description: The location you wish to create.
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/LocationModel'
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/LocationModel'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/LocationModel'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/LocationModel'
        required: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LocationModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
  /api/v2/companies/{companyId}/locations/{id}:
    get:
      tags:
      - Locations
      summary: Retrieve a single location
      description: "Get the location object identified by this URL.\r\nAn 'Location'\
        \ represents a physical address where a company does business.\r\nMany taxing\
        \ authorities require that you define a list of all locations where your company\
        \ does business.\r\nThese locations may require additional custom configuration\
        \ or tax registration with these authorities.\r\nFor more information on metadata\
        \ requirements, see the '/api/v2/definitions/locationquestions' API.\r\n \
        \           \r\nYou may specify one or more of the following values in the\
        \ `$include` parameter to fetch additional nested data, using commas to separate\
        \ multiple values:\r\n            \r\n* LocationSettings\r\n* parameters\n\
        \n### Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, CSPAdmin, CSPTester,\
        \ FirmAdmin, FirmUser, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin,\
        \ TechnicalSupportUser, TreasuryAdmin, TreasuryUser.\n"
      operationId: GetLocation
      parameters:
      - name: companyId
        in: path
        description: The ID of the company that owns this location
        required: true
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: The primary key of this location
        required: true
        schema:
          type: integer
          format: int32
      - name: $include
        in: query
        description: A comma separated list of additional data to retrieve.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
    put:
      tags:
      - Locations
      summary: Update a single location
      description: "Replace the existing location object at this URL with an updated\
        \ object.\r\nAll data from the existing object will be replaced with data\
        \ in the object you PUT.\r\nTo set a field's value to null, you may either\
        \ set its value to null or omit that field from the object you post.\n\n###\
        \ Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, CompanyAdmin, CSPAdmin, CSPTester, FirmAdmin, SiteAdmin, SSTAdmin,\
        \ SystemAdmin, TechnicalSupportAdmin.\n"
      operationId: UpdateLocation
      parameters:
      - name: companyId
        in: path
        description: The ID of the company that this location belongs to.
        required: true
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: The ID of the location you wish to update
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        description: The location you wish to update.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/LocationModel'
          application/json:
            schema:
              $ref: '#/components/schemas/LocationModel'
          text/json:
            schema:
              $ref: '#/components/schemas/LocationModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/LocationModel'
        required: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
    delete:
      tags:
      - Locations
      summary: Delete a single location
      description: |
        Mark the location object at this URL as deleted.

        ### Security Policies

        * This API requires one of the following user roles: AccountAdmin, CompanyAdmin, CSPAdmin, CSPTester, FirmAdmin, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin.
      operationId: DeleteLocation
      parameters:
      - name: companyId
        in: path
        description: The ID of the company that owns this location.
        required: true
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: The ID of the location you wish to delete.
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorDetail'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/companies/{companyId}/locations/{id}/validate:
    get:
      tags:
      - Locations
      summary: Validate the location against local requirements
      description: "Returns validation information for this location.\r\nThis API\
        \ call is intended to compare this location against the currently known taxing\
        \ authority rules and regulations,\r\nand provide information about what additional\
        \ work is required to completely setup this location.\n\n### Security Policies\n\
        \n* This API requires one of the following user roles: AccountAdmin, AccountUser,\
        \ CompanyAdmin, CompanyUser, CSPAdmin, CSPTester, FirmAdmin, FirmUser, SiteAdmin,\
        \ SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser, TreasuryAdmin,\
        \ TreasuryUser.\n"
      operationId: ValidateLocation
      parameters:
      - name: companyId
        in: path
        description: The ID of the company that owns this location
        required: true
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: The primary key of this location
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationValidationModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/companies/{companyId}/locations/{locationId}/parameters:
    get:
      tags:
      - Locations
      summary: Retrieve parameters for a location
      description: "List parameters for a location.\r\n            \r\nSome locations\
        \ can be taxed differently depending on the properties of that location. In\
        \ AvaTax, these tax-affecting properties are called \"parameters\".\r\n  \
        \          \r\nA parameter added to a location will be used by default in\
        \ tax calculation but will not show on the transaction line referencing the\
        \ location.\r\n            \r\nA parameter specified on a transaction line\
        \ will override a location parameter if they share the same parameter name.\r\
        \n            \r\nSearch for specific objects using the criteria in the `$filter`\
        \ parameter; full documentation is available on [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/)\
        \ .\r\nPaginate your results using the `$top`, `$skip`, and `$orderby` parameters.\n\
        \n### Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, CSPAdmin, CSPTester,\
        \ FirmAdmin, FirmUser, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin,\
        \ TechnicalSupportUser, TreasuryAdmin, TreasuryUser.\n"
      operationId: ListLocationParameters
      parameters:
      - name: companyId
        in: path
        description: The company id
        required: true
        schema:
          type: integer
          format: int32
      - name: locationId
        in: path
        description: The ID of the location
        required: true
        schema:
          type: integer
          format: int32
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br
          />*Not filterable:* name, unit
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationParameterModelFetchResult'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
    post:
      tags:
      - Locations
      summary: Add parameters to a location.
      description: "Add parameters to a location.\r\n            \r\nSome locations\
        \ can be taxed differently depending on the properties of that location. In\
        \ AvaTax, these tax-affecting properties are called \"parameters\".\r\n  \
        \          \r\nA parameter added to a location will be used by default in\
        \ tax calculation but will not show on the transaction line referencing the\
        \ location.\r\n            \r\nA parameter specified on a transaction line\
        \ will override a location parameter if they share the same parameter name.\r\
        \n            \r\nTo see available parameters for this location, call `/api/v2/definitions/parameters?$filter=attributeType\
        \ eq Company`\r\n            \r\nSome parameters are only available for use\
        \ if you have subscribed to specific AvaTax services. To see which parameters\
        \ you are able to use, add the query parameter \"$showSubscribed=true\" to\
        \ the parameter definition call above.\n\n### Security Policies\n\n* This\
        \ API requires one of the following user roles: AccountAdmin, CompanyAdmin,\
        \ CSPAdmin, CSPTester, FirmAdmin, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin.\n"
      operationId: CreateLocationParameters
      parameters:
      - name: companyId
        in: path
        description: The ID of the company that owns this location parameter.
        required: true
        schema:
          type: integer
          format: int32
      - name: locationId
        in: path
        description: The location id.
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        description: The location parameters you wish to create.
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/LocationParameterModel'
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/LocationParameterModel'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/LocationParameterModel'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/LocationParameterModel'
        required: false
      responses:
        201:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LocationParameterModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
  /api/v2/companies/{companyId}/locations/{locationId}/parameters/{id}:
    get:
      tags:
      - Locations
      summary: Retrieve a single company location parameter
      description: "Retrieve a single location parameter.\r\n            \r\nSome\
        \ locations can be taxed differently depending on the properties of that location.\
        \ In AvaTax, these tax-affecting properties are called \"parameters\".\r\n\
        \            \r\nA parameter added to a location will be used by default in\
        \ tax calculation but will not show on the transaction line referencing the\
        \ location.\r\n            \r\nA parameter specified on a transaction line\
        \ will override a location parameter if they share the same parameter name.\n\
        \n### Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, CSPAdmin, CSPTester,\
        \ FirmAdmin, FirmUser, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin,\
        \ TechnicalSupportUser, TreasuryAdmin, TreasuryUser.\n"
      operationId: GetLocationParameter
      parameters:
      - name: companyId
        in: path
        description: The company id
        required: true
        schema:
          type: integer
          format: int32
      - name: locationId
        in: path
        description: The location id
        required: true
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: The parameter id
        required: true
        schema:
          type: integer
          format: int64
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationParameterModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
    put:
      tags:
      - Locations
      summary: Update a location parameter
      description: "Update a location parameter.\r\n            \r\nSome locations\
        \ can be taxed differently depending on the properties of that location. In\
        \ AvaTax, these tax-affecting properties are called \"parameters\".\r\n  \
        \          \r\nA parameter added to a location will be used by default in\
        \ tax calculation but will not show on the transaction line referencing the\
        \ location.\r\n            \r\nA parameter specified on a transaction line\
        \ will override a location parameter if they share the same parameter name.\n\
        \n### Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, CompanyAdmin, CSPAdmin, CSPTester, FirmAdmin, SiteAdmin, SSTAdmin,\
        \ SystemAdmin, TechnicalSupportAdmin.\n"
      operationId: UpdateLocationParameter
      parameters:
      - name: companyId
        in: path
        description: The company id.
        required: true
        schema:
          type: integer
          format: int32
      - name: locationId
        in: path
        description: The location id
        required: true
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: The location parameter id
        required: true
        schema:
          type: integer
          format: int64
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        description: The location parameter object you wish to update.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/LocationParameterModel'
          application/json:
            schema:
              $ref: '#/components/schemas/LocationParameterModel'
          text/json:
            schema:
              $ref: '#/components/schemas/LocationParameterModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/LocationParameterModel'
        required: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationParameterModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
    delete:
      tags:
      - Locations
      summary: Delete a single location parameter
      description: "Delete a single location parameter.\r\n            \r\nSome locations\
        \ can be taxed differently depending on the properties of that location. In\
        \ AvaTax, these tax-affecting properties are called \"parameters\".\r\n  \
        \          \r\nA parameter added to a location will be used by default in\
        \ tax calculation but will not show on the transaction line referencing the\
        \ location.\r\n            \r\nA parameter specified on a transaction line\
        \ will override a location parameter if they share the same parameter name.\n\
        \n### Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, CompanyAdmin, CSPAdmin, CSPTester, FirmAdmin, SiteAdmin, SSTAdmin,\
        \ SystemAdmin, TechnicalSupportAdmin.\n"
      operationId: DeleteLocationParameter
      parameters:
      - name: companyId
        in: path
        description: The company id
        required: true
        schema:
          type: integer
          format: int32
      - name: locationId
        in: path
        description: The location id
        required: true
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: The parameter id
        required: true
        schema:
          type: integer
          format: int64
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorDetail'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/locations:
    get:
      tags:
      - Locations
      summary: Retrieve all locations
      description: "Get multiple location objects across all companies.\r\nAn 'Location'\
        \ represents a physical address where a company does business.\r\nMany taxing\
        \ authorities require that you define a list of all locations where your company\
        \ does business.\r\nThese locations may require additional custom configuration\
        \ or tax registration with these authorities.\r\nFor more information on metadata\
        \ requirements, see the '/api/v2/definitions/locationquestions' API.\r\n \
        \           \r\nSearch for specific objects using the criteria in the `$filter`\
        \ parameter; full documentation is available on [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/)\
        \ .\r\nPaginate your results using the `$top`, `$skip`, and `$orderby` parameters.\r\
        \n            \r\nYou may specify one or more of the following values in the\
        \ `$include` parameter to fetch additional nested data, using commas to separate\
        \ multiple values:\r\n            \r\n* LocationSettings\r\n* parameters\n\
        \n### Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, CSPAdmin, CSPTester,\
        \ FirmAdmin, FirmUser, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin,\
        \ TechnicalSupportUser, TreasuryAdmin, TreasuryUser.\n"
      operationId: QueryLocations
      parameters:
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br
          />*Not filterable:* isMarketplaceOutsideUsa, settings, parameters
        schema:
          type: string
      - name: $include
        in: query
        description: A comma separated list of additional data to retrieve.  You may
          specify `LocationSettings` to retrieve location settings.
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationModelFetchResult'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/transactions/multidocument:
    get:
      tags:
      - MultiDocument
      summary: Retrieve all MultiDocument transactions
      description: "List all MultiDocument transactions within this account.\r\n \
        \           \r\nThis endpoint is limited to returning 1,000 MultiDocument\
        \ transactions at a time.  To retrieve more than 1,000 MultiDocument\r\ntransactions,\
        \ please use the pagination features of the API.\r\n            \r\nA transaction\
        \ represents a unique potentially taxable action that your company has recorded,\
        \ and transactions include actions like\r\nsales, purchases, inventory transfer,\
        \ and returns (also called refunds).\r\n            \r\nSearch for specific\
        \ objects using the criteria in the `$filter` parameter; full documentation\
        \ is available on [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/)\
        \ .\r\nPaginate your results using the `$top`, `$skip`, and `$orderby` parameters.\r\
        \n            \r\nYou may specify one or more of the following values in the\
        \ `$include` parameter to fetch additional nested data, using commas to separate\
        \ multiple values:\r\n            \r\n* Lines\r\n* Details (implies lines)\r\
        \n* Summary (implies details)\r\n* Addresses\r\n* SummaryOnly (omit lines\
        \ and details - reduces API response size)\r\n* LinesOnly (omit details -\
        \ reduces API response size)\r\n            \r\nNOTE: If your companyCode\
        \ or transactionCode contains any of these characters /, +, ? or a space please\
        \ use the following encoding before making a request:\r\n* Replace '/' with\
        \ '\\_-ava2f-\\_'  For example: document/Code becomes document_-ava2f-_Code\r\
        \n* Replace '+' with '\\_-ava2b-\\_'  For example: document+Code becomes document_-ava2b-_Code\r\
        \n* Replace '?' with '\\_-ava3f-\\_'  For example: document?Code becomes document_-ava3f-_Code\r\
        \n* Replace '%' with '\\_-ava25-\\_'  For example: document%Code becomes document_-ava25-_Code\r\
        \n* Replace '#' with '\\_-ava23-\\_'  For example: document#Code becomes document_-ava23-_Code\r\
        \n* Replace ' ' with '%20'  For example: document Code becomes document%20Code\n\
        \n### Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, CSPAdmin, CSPTester,\
        \ ProStoresOperator, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin,\
        \ TechnicalSupportUser.\n* This API depends on the following active services:*Required*\
        \ (all):  AvaTaxPro.\n"
      operationId: ListMultiDocumentTransactions
      parameters:
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br
          />*Not filterable:* documents
        schema:
          type: string
      - name: $include
        in: query
        description: Specifies objects to include in the response after transaction
          is created
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiDocumentModelFetchResult'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
    post:
      tags:
      - MultiDocument
      summary: Create a new MultiDocument transaction
      description: "Records a new MultiDocument transaction in AvaTax.\r\n       \
        \     \r\nA traditional transaction requires exactly two parties: a seller\
        \ and a buyer.  MultiDocument transactions can\r\ninvolve a marketplace of\
        \ vendors, each of which contributes some portion of the final transaction.\
        \  Within\r\na MultiDocument transaction, each individual buyer and seller\
        \ pair are matched up and converted to a separate\r\ndocument.  This separation\
        \ of documents allows each seller to file their taxes separately.\r\n    \
        \        \r\nThis API will report an error if you attempt to create a transaction\
        \ when one already exists with the specified `code`.\r\nIf you would like\
        \ the API to automatically update the transaction when it already exists,\
        \ please set the `allowAdjust`\r\nvalue to `true`.\r\n            \r\nTo generate\
        \ a refund for a transaction, use the `RefundTransaction` API.\r\n       \
        \     \r\nThe field `type` identifies the kind of transaction - for example,\
        \ a sale, purchase, or refund.  If you do not specify\r\na `type` value, you\
        \ will receive an estimate of type `SalesOrder`, which will not be recorded.\r\
        \n            \r\nThe origin and destination locations for a transaction must\
        \ be identified by either address or geocode.  For address-based transactions,\
        \ please\r\nprovide addresses in the fields `line`, `city`, `region`, `country`\
        \ and `postalCode`.  For geocode-based transactions, please provide the geocode\r\
        \ninformation in the fields `latitude` and `longitude`.  If either `latitude`\
        \ or `longitude` or both are null, the transaction will be calculated\r\n\
        using the best available address location information.\r\n            \r\n\
        You may specify one or more of the following values in the `$include` parameter\
        \ to fetch additional nested data, using commas to separate multiple values:\r\
        \n            \r\n* Lines\r\n* Details (implies lines)\r\n* Summary (implies\
        \ details)\r\n* Addresses\r\n* SummaryOnly (omit lines and details - reduces\
        \ API response size)\r\n* LinesOnly (omit details - reduces API response size)\r\
        \n* ForceTimeout - Simulates a timeout.  This adds a 30 second delay and error\
        \ to your API call.  This can be used to test your code to ensure it can respond\
        \ correctly in the case of a dropped connection.\r\n            \r\nIf you\
        \ omit the `$include` parameter, the API will assume you want `Summary,Addresses`.\r\
        \n            \r\nNOTE: If your companyCode or transactionCode contains any\
        \ of these characters /, +, ? or a space please use the following encoding\
        \ before making a request:\r\n* Replace '/' with '\\_-ava2f-\\_'  For example:\
        \ document/Code becomes document_-ava2f-_Code\r\n* Replace '+' with '\\_-ava2b-\\\
        _'  For example: document+Code becomes document_-ava2b-_Code\r\n* Replace\
        \ '?' with '\\_-ava3f-\\_'  For example: document?Code becomes document_-ava3f-_Code\r\
        \n* Replace '%' with '\\_-ava25-\\_'  For example: document%Code becomes document_-ava25-_Code\r\
        \n* Replace '#' with '\\_-ava23-\\_'  For example: document#Code becomes document_-ava23-_Code\r\
        \n* Replace ' ' with '%20'  For example: document Code becomes document%20Code\n\
        \n### Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, CSPTester,\
        \ SSTAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n* This API depends\
        \ on the following active services:*Required* (all):  AvaTaxPro.\n"
      operationId: CreateMultiDocumentTransaction
      parameters:
      - name: $include
        in: query
        description: Specifies objects to include in the response after transaction
          is created
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        description: the multi document transaction model
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CreateMultiDocumentModel'
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMultiDocumentModel'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateMultiDocumentModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateMultiDocumentModel'
        required: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiDocumentModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
  /api/v2/transactions/multidocument/{code}/type/{type}:
    get:
      tags:
      - MultiDocument
      summary: Retrieve a MultiDocument transaction
      description: "Get the current MultiDocument transaction identified by this URL.\r\
        \n            \r\nIf this transaction was adjusted, the return value of this\
        \ API will be the current transaction with this code.\r\n            \r\n\
        You may specify one or more of the following values in the `$include` parameter\
        \ to fetch additional nested data, using commas to separate multiple values:\r\
        \n            \r\n* Lines\r\n* Details (implies lines)\r\n* Summary (implies\
        \ details)\r\n* Addresses\r\n* SummaryOnly (omit lines and details - reduces\
        \ API response size)\r\n* LinesOnly (omit details - reduces API response size)\r\
        \n            \r\nNOTE: If your companyCode or transactionCode contains any\
        \ of these characters /, +, ? or a space please use the following encoding\
        \ before making a request:\r\n* Replace '/' with '\\_-ava2f-\\_'  For example:\
        \ document/Code becomes document_-ava2f-_Code\r\n* Replace '+' with '\\_-ava2b-\\\
        _'  For example: document+Code becomes document_-ava2b-_Code\r\n* Replace\
        \ '?' with '\\_-ava3f-\\_'  For example: document?Code becomes document_-ava3f-_Code\r\
        \n* Replace '%' with '\\_-ava25-\\_'  For example: document%Code becomes document_-ava25-_Code\r\
        \n* Replace '#' with '\\_-ava23-\\_'  For example: document#Code becomes document_-ava23-_Code\r\
        \n* Replace ' ' with '%20'  For example: document Code becomes document%20Code\n\
        \n### Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, CSPAdmin, CSPTester,\
        \ ProStoresOperator, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin,\
        \ TechnicalSupportUser.\n* This API depends on the following active services:*Required*\
        \ (all):  AvaTaxPro.\n"
      operationId: GetMultiDocumentTransactionByCodeAndType
      parameters:
      - name: code
        in: path
        description: The multidocument code to retrieve
        required: true
        schema:
          type: string
      - name: type
        in: path
        description: The transaction type to retrieve
        required: true
        schema:
          type: string
          enum:
          - SalesOrder
          - SalesInvoice
          - PurchaseOrder
          - PurchaseInvoice
          - ReturnOrder
          - ReturnInvoice
          - InventoryTransferOrder
          - InventoryTransferInvoice
          - ReverseChargeOrder
          - ReverseChargeInvoice
          - CustomsInvoice
          - CustomsOrder
          - Any
          x-enum-metadata:
            name: DocumentType
            values:
            - name: SalesOrder
              value: 0
            - name: SalesInvoice
              value: 1
            - name: PurchaseOrder
              value: 2
            - name: PurchaseInvoice
              value: 3
            - name: ReturnOrder
              value: 4
            - name: ReturnInvoice
              value: 5
            - name: InventoryTransferOrder
              value: 6
            - name: InventoryTransferInvoice
              value: 7
            - name: ReverseChargeOrder
              value: 8
            - name: ReverseChargeInvoice
              value: 9
            - name: CustomsInvoice
              value: 10
            - name: CustomsOrder
              value: 11
            - name: Any
              value: -1
        x-enum-metadata:
          name: DocumentType
          values:
          - name: SalesOrder
            value: 0
          - name: SalesInvoice
            value: 1
          - name: PurchaseOrder
            value: 2
          - name: PurchaseInvoice
            value: 3
          - name: ReturnOrder
            value: 4
          - name: ReturnInvoice
            value: 5
          - name: InventoryTransferOrder
            value: 6
          - name: InventoryTransferInvoice
            value: 7
          - name: ReverseChargeOrder
            value: 8
          - name: ReverseChargeInvoice
            value: 9
          - name: CustomsInvoice
            value: 10
          - name: CustomsOrder
            value: 11
          - name: Any
            value: -1
      - name: $include
        in: query
        description: Specifies objects to include in the response after transaction
          is created
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiDocumentModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/transactions/multidocument/{code}/type/{type}/adjust:
    post:
      tags:
      - MultiDocument
      summary: Adjust a MultiDocument transaction
      description: "Adjusts the current MultiDocument transaction uniquely identified\
        \ by this URL.\r\n            \r\nA transaction represents a unique potentially\
        \ taxable action that your company has recorded, and transactions include\
        \ actions like\r\nsales, purchases, inventory transfer, and returns (also\
        \ called refunds).\r\n            \r\nWhen you adjust a transaction, that\
        \ transaction's status is recorded as `Adjusted`.\r\n            \r\nBoth\
        \ the revisions will be available for retrieval based on their code and ID\
        \ numbers. Only transactions in Committed status can be reported on a tax\
        \ filing by Avalara's Managed Returns Service.\r\n            \r\nTransactions\
        \ that have been previously reported to a tax authority by Avalara Managed\
        \ Returns are considered locked and are no longer available for adjustments.\r\
        \n            \r\nNOTE: If your companyCode or transactionCode contains any\
        \ of these characters /, +, ? or a space please use the following encoding\
        \ before making a request:\r\n* Replace '/' with '\\_-ava2f-\\_'  For example:\
        \ document/Code becomes document_-ava2f-_Code\r\n* Replace '+' with '\\_-ava2b-\\\
        _'  For example: document+Code becomes document_-ava2b-_Code\r\n* Replace\
        \ '?' with '\\_-ava3f-\\_'  For example: document?Code becomes document_-ava3f-_Code\r\
        \n* Replace '%' with '\\_-ava25-\\_'  For example: document%Code becomes document_-ava25-_Code\r\
        \n* Replace '#' with '\\_-ava23-\\_'  For example: document#Code becomes document_-ava23-_Code\r\
        \n* Replace ' ' with '%20'  For example: document Code becomes document%20Code\n\
        \n### Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, AccountOperator, CompanyAdmin, CSPTester, SSTAdmin, TechnicalSupportAdmin,\
        \ TechnicalSupportUser.\n* This API depends on the following active services:*Required*\
        \ (all):  AvaTaxPro.\n"
      operationId: AdjustMultiDocumentTransaction
      parameters:
      - name: code
        in: path
        description: The transaction code for this MultiDocument transaction
        required: true
        schema:
          type: string
      - name: type
        in: path
        description: The transaction type for this MultiDocument transaction
        required: true
        schema:
          type: string
          enum:
          - SalesOrder
          - SalesInvoice
          - PurchaseOrder
          - PurchaseInvoice
          - ReturnOrder
          - ReturnInvoice
          - InventoryTransferOrder
          - InventoryTransferInvoice
          - ReverseChargeOrder
          - ReverseChargeInvoice
          - CustomsInvoice
          - CustomsOrder
          - Any
          x-enum-metadata:
            name: DocumentType
            values:
            - name: SalesOrder
              value: 0
            - name: SalesInvoice
              value: 1
            - name: PurchaseOrder
              value: 2
            - name: PurchaseInvoice
              value: 3
            - name: ReturnOrder
              value: 4
            - name: ReturnInvoice
              value: 5
            - name: InventoryTransferOrder
              value: 6
            - name: InventoryTransferInvoice
              value: 7
            - name: ReverseChargeOrder
              value: 8
            - name: ReverseChargeInvoice
              value: 9
            - name: CustomsInvoice
              value: 10
            - name: CustomsOrder
              value: 11
            - name: Any
              value: -1
        x-enum-metadata:
          name: DocumentType
          values:
          - name: SalesOrder
            value: 0
          - name: SalesInvoice
            value: 1
          - name: PurchaseOrder
            value: 2
          - name: PurchaseInvoice
            value: 3
          - name: ReturnOrder
            value: 4
          - name: ReturnInvoice
            value: 5
          - name: InventoryTransferOrder
            value: 6
          - name: InventoryTransferInvoice
            value: 7
          - name: ReverseChargeOrder
            value: 8
          - name: ReverseChargeInvoice
            value: 9
          - name: CustomsInvoice
            value: 10
          - name: CustomsOrder
            value: 11
          - name: Any
            value: -1
      - name: include
        in: query
        description: Specifies objects to include in this fetch call
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        description: The adjust request you wish to execute
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AdjustMultiDocumentModel'
          application/json:
            schema:
              $ref: '#/components/schemas/AdjustMultiDocumentModel'
          text/json:
            schema:
              $ref: '#/components/schemas/AdjustMultiDocumentModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AdjustMultiDocumentModel'
        required: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiDocumentModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
  /api/v2/transactions/multidocument/{code}/type/{type}/audit:
    get:
      tags:
      - MultiDocument
      summary: Get audit information about a MultiDocument transaction
      description: "Retrieve audit information about a MultiDocument transaction stored\
        \ in AvaTax.\r\n            \r\nThe audit API retrieves audit information\
        \ related to a specific MultiDocument transaction.  This audit\r\ninformation\
        \ includes the following:\r\n            \r\n* The `code` of the MultiDocument\
        \ transaction\r\n* The `type` of the MultiDocument transaction\r\n* The server\
        \ timestamp representing the exact server time when the transaction was created\r\
        \n* The server duration - how long it took to process this transaction\r\n\
        * Whether exact API call details were logged\r\n* A reconstructed API call\
        \ showing what the original create call looked like\r\n            \r\nA transaction\
        \ represents a unique potentially taxable action that your company has recorded,\
        \ and transactions include actions like\r\nsales, purchases, inventory transfer,\
        \ and returns (also called refunds).\r\n            \r\nNOTE: If your companyCode\
        \ or transactionCode contains any of these characters /, +, ? or a space please\
        \ use the following encoding before making a request:\r\n* Replace '/' with\
        \ '\\_-ava2f-\\_'  For example: document/Code becomes document_-ava2f-_Code\r\
        \n* Replace '+' with '\\_-ava2b-\\_'  For example: document+Code becomes document_-ava2b-_Code\r\
        \n* Replace '?' with '\\_-ava3f-\\_'  For example: document?Code becomes document_-ava3f-_Code\r\
        \n* Replace '%' with '\\_-ava25-\\_'  For example: document%Code becomes document_-ava25-_Code\r\
        \n* Replace '#' with '\\_-ava23-\\_'  For example: document#Code becomes document_-ava23-_Code\r\
        \n* Replace ' ' with '%20'  For example: document Code becomes document%20Code\n\
        \n### Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, CSPAdmin, CSPTester,\
        \ ProStoresOperator, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin,\
        \ TechnicalSupportUser.\n* This API depends on the following active services:*Required*\
        \ (all):  AvaTaxPro.\n"
      operationId: AuditMultiDocumentTransaction
      parameters:
      - name: code
        in: path
        description: The transaction code for this MultiDocument transaction
        required: true
        schema:
          type: string
      - name: type
        in: path
        description: The transaction type for this MultiDocument transaction
        required: true
        schema:
          type: string
          enum:
          - SalesOrder
          - SalesInvoice
          - PurchaseOrder
          - PurchaseInvoice
          - ReturnOrder
          - ReturnInvoice
          - InventoryTransferOrder
          - InventoryTransferInvoice
          - ReverseChargeOrder
          - ReverseChargeInvoice
          - CustomsInvoice
          - CustomsOrder
          - Any
          x-enum-metadata:
            name: DocumentType
            values:
            - name: SalesOrder
              value: 0
            - name: SalesInvoice
              value: 1
            - name: PurchaseOrder
              value: 2
            - name: PurchaseInvoice
              value: 3
            - name: ReturnOrder
              value: 4
            - name: ReturnInvoice
              value: 5
            - name: InventoryTransferOrder
              value: 6
            - name: InventoryTransferInvoice
              value: 7
            - name: ReverseChargeOrder
              value: 8
            - name: ReverseChargeInvoice
              value: 9
            - name: CustomsInvoice
              value: 10
            - name: CustomsOrder
              value: 11
            - name: Any
              value: -1
        x-enum-metadata:
          name: DocumentType
          values:
          - name: SalesOrder
            value: 0
          - name: SalesInvoice
            value: 1
          - name: PurchaseOrder
            value: 2
          - name: PurchaseInvoice
            value: 3
          - name: ReturnOrder
            value: 4
          - name: ReturnInvoice
            value: 5
          - name: InventoryTransferOrder
            value: 6
          - name: InventoryTransferInvoice
            value: 7
          - name: ReverseChargeOrder
            value: 8
          - name: ReverseChargeInvoice
            value: 9
          - name: CustomsInvoice
            value: 10
          - name: CustomsOrder
            value: 11
          - name: Any
            value: -1
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditMultiDocumentModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/transactions/multidocument/{code}/type/{type}/refund:
    post:
      tags:
      - MultiDocument
      summary: Create a refund for a MultiDocument transaction
      description: "Create a refund for a MultiDocument transaction.\r\n         \
        \   \r\nA traditional transaction requires exactly two parties: a seller and\
        \ a buyer.  MultiDocument transactions can\r\ninvolve a marketplace of vendors,\
        \ each of which contributes some portion of the final transaction.  Within\r\
        \na MultiDocument transaction, each individual buyer and seller pair are matched\
        \ up and converted to a separate\r\ndocument.  This separation of documents\
        \ allows each seller to file their taxes separately.\r\n            \r\nThe\
        \ `RefundTransaction` API allows you to quickly and easily create a `ReturnInvoice`\
        \ representing a refund\r\nfor a previously created `SalesInvoice` transaction.\
        \  You can choose to create a full or partial refund, and\r\nspecify individual\
        \ line items from the original sale for refund.\r\n            \r\nThe `RefundTransaction`\
        \ API ensures that the tax amount you refund to the customer exactly matches\
        \ the tax that\r\nwas calculated during the original transaction, regardless\
        \ of any changes to your company's configuration, rules,\r\nnexus, or any\
        \ other setting.\r\n            \r\nThis API is intended to be a shortcut\
        \ to allow you to quickly and accurately generate a refund for the following\r\
        \ncommon refund scenarios:\r\n            \r\n* A full refund of a previous\
        \ sale\r\n* Refunding the tax that was charged on a previous sale, when the\
        \ customer provides an exemption certificate after the purchase\r\n* Refunding\
        \ one or more items (lines) from a previous sale\r\n* Granting a customer\
        \ a percentage refund of a previous sale\r\n            \r\nFor more complex\
        \ scenarios than the ones above, please use `CreateTransaction` with document\
        \ type `ReturnInvoice` to\r\ncreate a custom refund transaction.\r\n     \
        \       \r\nYou may specify one or more of the following values in the `$include`\
        \ parameter to fetch additional nested data, using commas to separate multiple\
        \ values:\r\n            \r\n* Lines\r\n* Details (implies lines)\r\n* Summary\
        \ (implies details)\r\n* Addresses\r\n* SummaryOnly (omit lines and details\
        \ - reduces API response size)\r\n* LinesOnly (omit details - reduces API\
        \ response size)\r\n            \r\nIf you omit the `$include` parameter,\
        \ the API will assume you want `Summary,Addresses`.\r\n\r\nNOTE: If your companyCode\
        \ or transactionCode contains any of these characters /, +, ? or a space please\
        \ use the following encoding before making a request:\r\n* Replace '/' with\
        \ '\\_-ava2f-\\_'  For example: document/Code becomes document_-ava2f-_Code\r\
        \n* Replace '+' with '\\_-ava2b-\\_'  For example: document+Code becomes document_-ava2b-_Code\r\
        \n* Replace '?' with '\\_-ava3f-\\_'  For example: document?Code becomes document_-ava3f-_Code\r\
        \n* Replace '%' with '\\_-ava25-\\_'  For example: document%Code becomes document_-ava25-_Code\r\
        \n* Replace '#' with '\\_-ava23-\\_'  For example: document#Code becomes document_-ava23-_Code\r\
        \n* Replace ' ' with '%20'  For example: document Code becomes document%20Code\n\
        \n### Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, CSPTester,\
        \ SSTAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n* This API depends\
        \ on the following active services:*Required* (all):  AvaTaxPro.\n"
      operationId: RefundMultiDocumentTransaction
      parameters:
      - name: code
        in: path
        description: The code of this MultiDocument transaction
        required: true
        schema:
          type: string
      - name: type
        in: path
        description: The type of this MultiDocument transaction
        required: true
        schema:
          type: string
          enum:
          - SalesOrder
          - SalesInvoice
          - PurchaseOrder
          - PurchaseInvoice
          - ReturnOrder
          - ReturnInvoice
          - InventoryTransferOrder
          - InventoryTransferInvoice
          - ReverseChargeOrder
          - ReverseChargeInvoice
          - CustomsInvoice
          - CustomsOrder
          - Any
          x-enum-metadata:
            name: DocumentType
            values:
            - name: SalesOrder
              value: 0
            - name: SalesInvoice
              value: 1
            - name: PurchaseOrder
              value: 2
            - name: PurchaseInvoice
              value: 3
            - name: ReturnOrder
              value: 4
            - name: ReturnInvoice
              value: 5
            - name: InventoryTransferOrder
              value: 6
            - name: InventoryTransferInvoice
              value: 7
            - name: ReverseChargeOrder
              value: 8
            - name: ReverseChargeInvoice
              value: 9
            - name: CustomsInvoice
              value: 10
            - name: CustomsOrder
              value: 11
            - name: Any
              value: -1
        x-enum-metadata:
          name: DocumentType
          values:
          - name: SalesOrder
            value: 0
          - name: SalesInvoice
            value: 1
          - name: PurchaseOrder
            value: 2
          - name: PurchaseInvoice
            value: 3
          - name: ReturnOrder
            value: 4
          - name: ReturnInvoice
            value: 5
          - name: InventoryTransferOrder
            value: 6
          - name: InventoryTransferInvoice
            value: 7
          - name: ReverseChargeOrder
            value: 8
          - name: ReverseChargeInvoice
            value: 9
          - name: CustomsInvoice
            value: 10
          - name: CustomsOrder
            value: 11
          - name: Any
            value: -1
      - name: $include
        in: query
        description: Specifies objects to include in the response after transaction
          is created
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        description: Information about the refund to create
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/RefundTransactionModel'
          application/json:
            schema:
              $ref: '#/components/schemas/RefundTransactionModel'
          text/json:
            schema:
              $ref: '#/components/schemas/RefundTransactionModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/RefundTransactionModel'
        required: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiDocumentModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
  /api/v2/transactions/multidocument/{code}/type/{type}/void:
    post:
      tags:
      - MultiDocument
      summary: Void a MultiDocument transaction
      description: "Voids the current transaction uniquely identified by this URL.\r\
        \n            \r\nA transaction represents a unique potentially taxable action\
        \ that your company has recorded, and transactions include actions like\r\n\
        sales, purchases, inventory transfer, and returns (also called refunds).\r\
        \n            \r\nWhen you void a transaction, that transaction's status is\
        \ recorded as `DocVoided`.\r\n            \r\nTransactions that have been\
        \ previously reported to a tax authority by Avalara Managed Returns Service\
        \ are considered `locked`,\r\nand they are no longer available to be voided.\r\
        \n            \r\nNOTE: If your companyCode or transactionCode contains any\
        \ of these characters /, +, ? or a space please use the following encoding\
        \ before making a request:\r\n* Replace '/' with '\\_-ava2f-\\_'  For example:\
        \ document/Code becomes document_-ava2f-_Code\r\n* Replace '+' with '\\_-ava2b-\\\
        _'  For example: document+Code becomes document_-ava2b-_Code\r\n* Replace\
        \ '?' with '\\_-ava3f-\\_'  For example: document?Code becomes document_-ava3f-_Code\r\
        \n* Replace '%' with '\\_-ava25-\\_'  For example: document%Code becomes document_-ava25-_Code\r\
        \n* Replace '#' with '\\_-ava23-\\_'  For example: document#Code becomes document_-ava23-_Code\r\
        \n* Replace ' ' with '%20'  For example: document Code becomes document%20Code\n\
        \n### Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, AccountOperator, CompanyAdmin, CSPTester, ProStoresOperator,\
        \ SSTAdmin, TechnicalSupportAdmin.\n* This API depends on the following active\
        \ services:*Required* (all):  AvaTaxPro.\n"
      operationId: VoidMultiDocumentTransaction
      parameters:
      - name: code
        in: path
        description: The transaction code for this MultiDocument transaction
        required: true
        schema:
          type: string
      - name: type
        in: path
        description: The transaction type for this MultiDocument transaction
        required: true
        schema:
          type: string
          enum:
          - SalesOrder
          - SalesInvoice
          - PurchaseOrder
          - PurchaseInvoice
          - ReturnOrder
          - ReturnInvoice
          - InventoryTransferOrder
          - InventoryTransferInvoice
          - ReverseChargeOrder
          - ReverseChargeInvoice
          - CustomsInvoice
          - CustomsOrder
          - Any
          x-enum-metadata:
            name: DocumentType
            values:
            - name: SalesOrder
              value: 0
            - name: SalesInvoice
              value: 1
            - name: PurchaseOrder
              value: 2
            - name: PurchaseInvoice
              value: 3
            - name: ReturnOrder
              value: 4
            - name: ReturnInvoice
              value: 5
            - name: InventoryTransferOrder
              value: 6
            - name: InventoryTransferInvoice
              value: 7
            - name: ReverseChargeOrder
              value: 8
            - name: ReverseChargeInvoice
              value: 9
            - name: CustomsInvoice
              value: 10
            - name: CustomsOrder
              value: 11
            - name: Any
              value: -1
        x-enum-metadata:
          name: DocumentType
          values:
          - name: SalesOrder
            value: 0
          - name: SalesInvoice
            value: 1
          - name: PurchaseOrder
            value: 2
          - name: PurchaseInvoice
            value: 3
          - name: ReturnOrder
            value: 4
          - name: ReturnInvoice
            value: 5
          - name: InventoryTransferOrder
            value: 6
          - name: InventoryTransferInvoice
            value: 7
          - name: ReverseChargeOrder
            value: 8
          - name: ReverseChargeInvoice
            value: 9
          - name: CustomsInvoice
            value: 10
          - name: CustomsOrder
            value: 11
          - name: Any
            value: -1
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        description: The void request you wish to execute
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/VoidTransactionModel'
          application/json:
            schema:
              $ref: '#/components/schemas/VoidTransactionModel'
          text/json:
            schema:
              $ref: '#/components/schemas/VoidTransactionModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/VoidTransactionModel'
        required: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiDocumentModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
  /api/v2/transactions/multidocument/{id}:
    get:
      tags:
      - MultiDocument
      summary: Retrieve a MultiDocument transaction by ID
      description: "Get the unique MultiDocument transaction identified by this URL.\r\
        \n            \r\nA traditional transaction requires exactly two parties:\
        \ a seller and a buyer.  MultiDocument transactions can\r\ninvolve a marketplace\
        \ of vendors, each of which contributes some portion of the final transaction.\
        \  Within\r\na MultiDocument transaction, each individual buyer and seller\
        \ pair are matched up and converted to a separate\r\ndocument.  This separation\
        \ of documents allows each seller to file their taxes separately.\r\n    \
        \        \r\nThis endpoint retrieves the exact transaction identified by this\
        \ ID number even if that transaction was later adjusted\r\nby using the `AdjustTransaction`\
        \ endpoint.\r\n            \r\nA transaction represents a unique potentially\
        \ taxable action that your company has recorded, and transactions include\
        \ actions like\r\nsales, purchases, inventory transfer, and returns (also\
        \ called refunds).\r\n            \r\nYou may specify one or more of the following\
        \ values in the `$include` parameter to fetch additional nested data, using\
        \ commas to separate multiple values:\r\n            \r\n* Lines\r\n* Details\
        \ (implies lines)\r\n* Summary (implies details)\r\n* Addresses\r\n* SummaryOnly\
        \ (omit lines and details - reduces API response size)\r\n* LinesOnly (omit\
        \ details - reduces API response size)\r\n            \r\nNOTE: If your companyCode\
        \ or transactionCode contains any of these characters /, +, ? or a space please\
        \ use the following encoding before making a request:\r\n* Replace '/' with\
        \ '\\_-ava2f-\\_'  For example: document/Code becomes document_-ava2f-_Code\r\
        \n* Replace '+' with '\\_-ava2b-\\_'  For example: document+Code becomes document_-ava2b-_Code\r\
        \n* Replace '?' with '\\_-ava3f-\\_'  For example: document?Code becomes document_-ava3f-_Code\r\
        \n* Replace '%' with '\\_-ava25-\\_'  For example: document%Code becomes document_-ava25-_Code\r\
        \n* Replace '#' with '\\_-ava23-\\_'  For example: document#Code becomes document_-ava23-_Code\r\
        \n* Replace ' ' with '%20'  For example: document Code becomes document%20Code\n\
        \n### Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, CSPAdmin, CSPTester,\
        \ ProStoresOperator, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin,\
        \ TechnicalSupportUser.\n* This API depends on the following active services:*Required*\
        \ (all):  AvaTaxPro.\n"
      operationId: GetMultiDocumentTransactionById
      parameters:
      - name: id
        in: path
        description: The unique ID number of the MultiDocument transaction to retrieve
        required: true
        schema:
          type: integer
          format: int64
      - name: $include
        in: query
        description: Specifies objects to include in the response after transaction
          is created
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiDocumentModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/transactions/multidocument/commit:
    post:
      tags:
      - MultiDocument
      summary: Commit a MultiDocument transaction
      description: "Marks a list of transactions by changing its status to `Committed`.\r\
        \n            \r\nTransactions that are committed are available to be reported\
        \ to a tax authority by Avalara Managed Returns.\r\n            \r\nA transaction\
        \ represents a unique potentially taxable action that your company has recorded,\
        \ and transactions include actions like\r\nsales, purchases, inventory transfer,\
        \ and returns (also called refunds).\r\n            \r\nAny changes made to\
        \ a committed transaction will generate a transaction history.\r\n\r\nNOTE:\
        \ If your companyCode or transactionCode contains any of these characters\
        \ /, +, ? or a space please use the following encoding before making a request:\r\
        \n* Replace '/' with '\\_-ava2f-\\_'  For example: document/Code becomes document_-ava2f-_Code\r\
        \n* Replace '+' with '\\_-ava2b-\\_'  For example: document+Code becomes document_-ava2b-_Code\r\
        \n* Replace '?' with '\\_-ava3f-\\_'  For example: document?Code becomes document_-ava3f-_Code\r\
        \n* Replace '%' with '\\_-ava25-\\_'  For example: document%Code becomes document_-ava25-_Code\r\
        \n* Replace '#' with '\\_-ava23-\\_'  For example: document#Code becomes document_-ava23-_Code\r\
        \n* Replace ' ' with '%20'  For example: document Code becomes document%20Code\n\
        \n### Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, CSPTester,\
        \ ProStoresOperator, SSTAdmin, TechnicalSupportAdmin.\n* This API depends\
        \ on the following active services:*Required* (all):  AvaTaxPro.\n"
      operationId: CommitMultiDocumentTransaction
      parameters:
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        description: The commit request you wish to execute
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CommitMultiDocumentModel'
          application/json:
            schema:
              $ref: '#/components/schemas/CommitMultiDocumentModel'
          text/json:
            schema:
              $ref: '#/components/schemas/CommitMultiDocumentModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CommitMultiDocumentModel'
        required: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiDocumentModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
  /api/v2/transactions/multidocument/verify:
    post:
      tags:
      - MultiDocument
      summary: Verify a MultiDocument transaction
      description: "Verifies that the MultiDocument transaction uniquely identified\
        \ by this URL matches certain expected values.\r\n            \r\nIf the transaction\
        \ does not match these expected values, this API will return an error code\
        \ indicating which value did not match.\r\n            \r\nA transaction represents\
        \ a unique potentially taxable action that your company has recorded, and\
        \ transactions include actions like\r\nsales, purchases, inventory transfer,\
        \ and returns (also called refunds).\r\n            \r\nNOTE: If your companyCode\
        \ or transactionCode contains any of these characters /, +, ? or a space please\
        \ use the following encoding before making a request:\r\n* Replace '/' with\
        \ '\\_-ava2f-\\_'  For example: document/Code becomes document_-ava2f-_Code\r\
        \n* Replace '+' with '\\_-ava2b-\\_'  For example: document+Code becomes document_-ava2b-_Code\r\
        \n* Replace '?' with '\\_-ava3f-\\_'  For example: document?Code becomes document_-ava3f-_Code\r\
        \n* Replace '%' with '\\_-ava25-\\_'  For example: document%Code becomes document_-ava25-_Code\r\
        \n* Replace '#' with '\\_-ava23-\\_'  For example: document#Code becomes document_-ava23-_Code\r\
        \n* Replace ' ' with '%20'  For example: document Code becomes document%20Code\n\
        \n### Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, CSPAdmin, CSPTester,\
        \ ProStoresOperator, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin,\
        \ TechnicalSupportUser.\n* This API depends on the following active services:*Required*\
        \ (all):  AvaTaxPro.\n"
      operationId: VerifyMultiDocumentTransaction
      parameters:
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        description: Information from your accounting system to verify against this
          MultiDocument transaction as it is stored in AvaTax
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/VerifyMultiDocumentModel'
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyMultiDocumentModel'
          text/json:
            schema:
              $ref: '#/components/schemas/VerifyMultiDocumentModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/VerifyMultiDocumentModel'
        required: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiDocumentModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
  /api/v2/companies/{companyId}/nexus:
    get:
      tags:
      - Nexus
      summary: Retrieve nexus for this company
      description: "List all nexus objects defined for this company.\r\n         \
        \   \r\nThe concept of Nexus indicates a place where your company is legally\
        \ obligated to collect and remit transactional\r\ntaxes.  The legal requirements\
        \ for nexus may vary per country and per jurisdiction; please seek advice\
        \ from your\r\naccountant or lawyer prior to declaring nexus.\r\n        \
        \    \r\nSearch for specific objects using the criteria in the `$filter` parameter;\
        \ full documentation is available on [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/)\
        \ .\r\nPaginate your results using the `$top`, `$skip`, and `$orderby` parameters.\r\
        \nYou may specify one or more of the following values in the '$include' parameter\
        \ to fetch additional nested data, using commas to separate multiple values:\r\
        \n            \r\n * Parameters\n\n### Security Policies\n\n* This API requires\
        \ one of the following user roles: AccountAdmin, AccountUser, CompanyAdmin,\
        \ CompanyUser, Compliance Root User, ComplianceAdmin, ComplianceUser, CSPAdmin,\
        \ CSPTester, FirmAdmin, FirmUser, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin,\
        \ TechnicalSupportUser.\n"
      operationId: ListNexusByCompany
      parameters:
      - name: companyId
        in: path
        description: The ID of the company that owns these nexus objects
        required: true
        schema:
          type: integer
          format: int32
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br
          />*Not filterable:* streamlinedSalesTax, isSSTActive, taxTypeGroup, taxAuthorityId,
          taxName, parameters, taxableNexus
        schema:
          type: string
      - name: $include
        in: query
        description: A comma separated list of additional data to retrieve.
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NexusModelFetchResult'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
    post:
      tags:
      - Nexus
      summary: Create a new nexus
      description: "Creates one or more new nexus declarations attached to this company.\r\
        \n            \r\nThe concept of Nexus indicates a place where your company\
        \ is legally obligated to collect and remit transactional\r\ntaxes.  The legal\
        \ requirements for nexus may vary per country and per jurisdiction; please\
        \ seek advice from your\r\naccountant or lawyer prior to declaring nexus.\r\
        \n            \r\nTo create a nexus declaration for your company, you must\
        \ first call the Definitions API `ListNexus` to obtain a\r\nlist of Avalara-defined\
        \ nexus.  Once you have determined which nexus you wish to declare, you should\
        \ customize\r\nonly the user-selectable fields in this object.\r\n       \
        \     \r\nThe user selectable fields for the nexus object are `companyId`,\
        \ `effectiveDate`, `endDate`, `localNexusTypeId`,\r\n`taxId`, `nexusTypeId`,\
        \ `hasPermanentEstablishment`, and `isSellerImporterOfRecord`.\r\n       \
        \     \r\nWhen calling `CreateNexus` or `UpdateNexus`, all values in your\
        \ nexus object except for the user-selectable fields\r\nmust match an Avalara-defined\
        \ system nexus object.  You can retrieve a list of Avalara-defined system\
        \ nexus objects\r\nby calling `ListNexus`.  If any data does not match, AvaTax\
        \ may not recognize your nexus declaration.\r\n            \r\nPlease note\
        \ that nexus changes may not take effect immediately and you should plan to\
        \ update your nexus settings in advance\r\nof calculating tax for a location.\n\
        \n### Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, CompanyAdmin, CSPTester, SSTAdmin, TechnicalSupportAdmin.\n"
      operationId: CreateNexus
      parameters:
      - name: companyId
        in: path
        description: The ID of the company that owns this nexus.
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        description: The nexus you wish to create.
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/NexusModel'
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/NexusModel'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/NexusModel'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/NexusModel'
        required: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NexusModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
  /api/v2/companies/{companyId}/nexus/{id}:
    get:
      tags:
      - Nexus
      summary: Retrieve a single nexus
      description: "Get the nexus object identified by this URL.\r\n            \r\
        \nThe concept of Nexus indicates a place where your company is legally obligated\
        \ to collect and remit transactional\r\ntaxes.  The legal requirements for\
        \ nexus may vary per country and per jurisdiction; please seek advice from\
        \ your\r\naccountant or lawyer prior to declaring nexus.\r\nYou may specify\
        \ one or more of the following values in the '$include' parameter to fetch\
        \ additional nested data, using commas to separate multiple values:\r\n  \
        \          \r\n * Parameters\n\n### Security Policies\n\n* This API requires\
        \ one of the following user roles: AccountAdmin, AccountUser, CompanyAdmin,\
        \ CompanyUser, Compliance Root User, ComplianceAdmin, ComplianceUser, CSPAdmin,\
        \ CSPTester, FirmAdmin, FirmUser, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin,\
        \ TechnicalSupportUser.\n"
      operationId: GetNexus
      parameters:
      - name: companyId
        in: path
        description: The ID of the company that owns this nexus object
        required: true
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: The primary key of this nexus
        required: true
        schema:
          type: integer
          format: int32
      - name: $include
        in: query
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NexusModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
    put:
      tags:
      - Nexus
      summary: Update a single nexus
      description: "Replace the existing nexus declaration object at this URL with\
        \ an updated object.\r\n            \r\nThe concept of Nexus indicates a place\
        \ where your company is legally obligated to collect and remit transactional\r\
        \ntaxes.  The legal requirements for nexus may vary per country and per jurisdiction;\
        \ please seek advice from your\r\naccountant or lawyer prior to declaring\
        \ nexus.\r\n            \r\nTo create a nexus declaration for your company,\
        \ you must first call the Definitions API `ListNexus` to obtain a\r\nlist\
        \ of Avalara-defined nexus.  Once you have determined which nexus you wish\
        \ to declare, you should customize\r\nonly the user-selectable fields in this\
        \ object.\r\n            \r\nThe user selectable fields for the nexus object\
        \ are `companyId`, `effectiveDate`, `endDate`, `localNexusTypeId`,\r\n`taxId`,\
        \ `nexusTypeId`, `hasPermanentEstablishment`, and `isSellerImporterOfRecord`.\r\
        \n            \r\nWhen calling `CreateNexus` or `UpdateNexus`, all values\
        \ in your nexus object except for the user-selectable fields\r\nmust match\
        \ an Avalara-defined system nexus object.  You can retrieve a list of Avalara-defined\
        \ system nexus objects\r\nby calling `ListNexus`.  If any data does not match,\
        \ AvaTax may not recognize your nexus declaration.\r\n            \r\nPlease\
        \ note that nexus changes may not take effect immediately and you should plan\
        \ to update your nexus settings in advance\r\nof calculating tax for a location.\n\
        \n### Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, CompanyAdmin, CSPTester, SSTAdmin, TechnicalSupportAdmin.\n"
      operationId: UpdateNexus
      parameters:
      - name: companyId
        in: path
        description: The ID of the company that this nexus belongs to.
        required: true
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: The ID of the nexus you wish to update
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        description: The nexus object you wish to update.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/NexusModel'
          application/json:
            schema:
              $ref: '#/components/schemas/NexusModel'
          text/json:
            schema:
              $ref: '#/components/schemas/NexusModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/NexusModel'
        required: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NexusModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
    delete:
      tags:
      - Nexus
      summary: Delete a single nexus
      description: "Marks the existing nexus object at this URL as deleted.\r\n  \
        \          \r\nThe concept of Nexus indicates a place where your company is\
        \ legally obligated to collect and remit transactional\r\ntaxes.  The legal\
        \ requirements for nexus may vary per country and per jurisdiction; please\
        \ seek advice from your\r\naccountant or lawyer prior to declaring nexus.\r\
        \n            \r\nPlease note that nexus changes may not take effect immediately\
        \ and you should plan to update your nexus settings in advance\r\nof calculating\
        \ tax for a location.\n\n### Security Policies\n\n* This API requires one\
        \ of the following user roles: AccountAdmin, CompanyAdmin, CSPTester, SSTAdmin,\
        \ TechnicalSupportAdmin.\n"
      operationId: DeleteNexus
      parameters:
      - name: companyId
        in: path
        description: The ID of the company that owns this nexus.
        required: true
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: The ID of the nexus you wish to delete.
        required: true
        schema:
          type: integer
          format: int32
      - name: cascadeDelete
        in: query
        description: If true, deletes all the child nexus if they exist along with
          parent nexus
        schema:
          type: boolean
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorDetail'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/companies/{companyId}/nexus/{nexusId}/parameters:
    get:
      tags:
      - Nexus
      summary: Retrieve parameters for a nexus
      description: "List parameters for a nexus.\r\nSome tax calculation and reporting\
        \ are different depending on the properties of the nexus, such as isRemoteSeller.\
        \ In AvaTax, these tax-affecting properties are called \"parameters\".\r\n\
        \            \r\nA parameter added to an nexus will be used by default in\
        \ tax calculation but will not show on the transaction line referencing the\
        \ nexus.\r\n            \r\nA parameter specified on a transaction line will\
        \ override an nexus parameter if they share the same parameter name. \r\n\
        \            \r\nSearch for specific objects using the criteria in the `$filter`\
        \ parameter; full documentation is available on [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/)\
        \ .\r\nPaginate your results using the `$top`, `$skip`, and `$orderby` parameters.\n\
        \n### Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, Compliance Root User,\
        \ ComplianceAdmin, ComplianceUser, CSPAdmin, CSPTester, FirmAdmin, FirmUser,\
        \ SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n"
      operationId: ListNexusParameters
      parameters:
      - name: companyId
        in: path
        description: The company id
        required: true
        schema:
          type: integer
          format: int32
      - name: nexusId
        in: path
        description: The nexus id
        required: true
        schema:
          type: integer
          format: int32
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br
          />*Not filterable:* name, unit
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NexusParameterDetailModelFetchResult'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
    post:
      tags:
      - Nexus
      summary: Add parameters to a nexus.
      description: "Add parameters to the nexus.\r\nSome tax calculation and reporting\
        \ are different depending on the properties of the nexus, such as isRemoteSeller.\
        \ In AvaTax, these tax-affecting properties are called \"parameters\".\r\n\
        \            \r\nA parameter added to an nexus will be used by default in\
        \ tax calculation but will not show on the transaction line referencing the\
        \ nexus.\r\n            \r\nA parameter specified on a transaction line will\
        \ override an nexus parameter if they share the same parameter name.\r\n \
        \           \r\nTo see available parameters for this item, call `/api/v2/definitions/parameters?$filter=attributeType\
        \ eq Nexus`\r\n            \r\nSome parameters are only available for use\
        \ if you have subscribed to specific AvaTax services. To see which parameters\
        \ you are able to use, add the query parameter \"$showSubscribed=true\" to\
        \ the parameter definition call above.\n\n### Security Policies\n\n* This\
        \ API requires one of the following user roles: AccountAdmin, CompanyAdmin,\
        \ CSPTester, SSTAdmin, TechnicalSupportAdmin.\n"
      operationId: CreateNexusParameters
      parameters:
      - name: companyId
        in: path
        description: The ID of the company that owns this nexus parameter.
        required: true
        schema:
          type: integer
          format: int32
      - name: nexusId
        in: path
        description: The nexus id.
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        description: The nexus parameters you wish to create.
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/NexusParameterDetailModel'
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/NexusParameterDetailModel'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/NexusParameterDetailModel'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/NexusParameterDetailModel'
        required: false
      responses:
        201:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NexusParameterDetailModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
    delete:
      tags:
      - Nexus
      summary: Delete all parameters for an nexus
      description: "Delete all the parameters for a given nexus.\r\nSome tax calculation\
        \ and reporting are different depending on the properties of the nexus, such\
        \ as isRemoteSeller. In AvaTax, these tax-affecting properties are called\
        \ \"parameters\".\r\n            \r\nA parameter added to an nexus will be\
        \ used by default in tax calculation but will not show on the transaction\
        \ line referencing the nexus.\r\n            \r\nA parameter specified on\
        \ a transaction line will override an nexus parameter if they share the same\
        \ parameter name.\n\n### Security Policies\n\n* This API requires one of the\
        \ following user roles: AccountAdmin, CompanyAdmin, CSPTester, SSTAdmin, TechnicalSupportAdmin.\n"
      operationId: DeleteNexusParameters
      parameters:
      - name: companyId
        in: path
        description: The ID of the company that owns this nexus.
        required: true
        schema:
          type: integer
          format: int32
      - name: nexusId
        in: path
        description: The ID of the nexus you wish to delete the parameters.
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorDetail'
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/companies/{companyId}/nexus/{nexusId}/parameters/{id}:
    get:
      tags:
      - Nexus
      summary: Retrieve a single nexus parameter
      description: "Retrieve a single nexus parameter.\r\nSome tax calculation and\
        \ reporting are different depending on the properties of the nexus, such as\
        \ isRemoteSeller.In AvaTax, these tax-affecting properties are called \"parameters\"\
        .\r\n            \r\nA parameter added to an nexus will be used by default\
        \ in tax calculation but will not show on the transaction line referencing\
        \ the nexus.\r\n            \r\nA parameter specified on a transaction line\
        \ will override an nexus parameter if they share the same parameter name.\n\
        \n### Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, Compliance Root User,\
        \ ComplianceAdmin, ComplianceUser, CSPAdmin, CSPTester, FirmAdmin, FirmUser,\
        \ SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n"
      operationId: GetNexusParameter
      parameters:
      - name: companyId
        in: path
        description: The company id
        required: true
        schema:
          type: integer
          format: int32
      - name: nexusId
        in: path
        description: The nexus id
        required: true
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: The parameter id
        required: true
        schema:
          type: integer
          format: int64
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NexusParameterDetailModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
    put:
      tags:
      - Nexus
      summary: Update an nexus parameter
      description: "Update an nexus parameter.\r\n            \r\nSome tax calculation\
        \ and reporting are different depending on the properties of the nexus, such\
        \ as isRemoteSeller. In AvaTax, these tax-affecting properties are called\
        \ \"parameters\".\r\n            \r\nA parameter added to a nexus will be\
        \ used in tax calculation based on the locationcode and parameter value the\
        \ transaction state line might have lines added.\r\n            \r\nA parameter\
        \ specified on a transaction line will override an item parameter if they\
        \ share the same parameter name.????? I dont know about this?\n\n### Security\
        \ Policies\n\n* This API requires one of the following user roles: AccountAdmin,\
        \ CompanyAdmin, CSPTester, SSTAdmin, TechnicalSupportAdmin.\n"
      operationId: UpdateNexusParameter
      parameters:
      - name: companyId
        in: path
        description: The company id.
        required: true
        schema:
          type: integer
          format: int32
      - name: nexusId
        in: path
        description: The nexus id
        required: true
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: The nexus parameter id
        required: true
        schema:
          type: integer
          format: int64
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        description: The nexus object you wish to update.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/NexusParameterDetailModel'
          application/json:
            schema:
              $ref: '#/components/schemas/NexusParameterDetailModel'
          text/json:
            schema:
              $ref: '#/components/schemas/NexusParameterDetailModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/NexusParameterDetailModel'
        required: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NexusParameterDetailModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
    delete:
      tags:
      - Nexus
      summary: Delete a single nexus parameter
      description: "Delete a single nexus parameter.\r\nSome tax calculation and reporting\
        \ are different depending on the properties of the nexus, such as isRemoteSeller.\
        \ In AvaTax, these tax-affecting properties are called \"parameters\".\r\n\
        \            \r\nA parameter added to an nexus will be used by default in\
        \ tax calculation but will not show on the transaction line referencing the\
        \ nexus.\r\n            \r\nA parameter specified on a transaction line will\
        \ override an nexus parameter if they share the same parameter name.\n\n###\
        \ Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, CompanyAdmin, CSPTester, SSTAdmin, TechnicalSupportAdmin.\n"
      operationId: DeleteNexusParameter
      parameters:
      - name: companyId
        in: path
        description: The company id
        required: true
        schema:
          type: integer
          format: int32
      - name: nexusId
        in: path
        description: The nexus id
        required: true
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: The parameter id
        required: true
        schema:
          type: integer
          format: int64
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorDetail'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/companies/{companyId}/nexus/byaddress:
    post:
      tags:
      - Nexus
      summary: Creates nexus for a list of addresses.
      description: "This call is intended to simplify adding all applicable nexus\
        \ to a company, for an address or addresses. Calling this\r\nAPI declares\
        \ nexus for this company, for the list of addresses provided,\r\nfor the date\
        \ range provided. You may also use this API to extend effective date on an\
        \ already-declared nexus.\r\n            \r\nThe concept of Nexus indicates\
        \ a place where your company is legally obligated to collect and remit transactional\r\
        \ntaxes.  The legal requirements for nexus may vary per country and per jurisdiction;\
        \ please seek advice from your\r\naccountant or lawyer prior to declaring\
        \ nexus.\r\n            \r\nNote that not all fields within a nexus can be\
        \ updated; Avalara publishes a list of all defined nexus at the\r\n'/api/v2/definitions/nexus'\
        \ endpoint.\r\n            \r\nYou may only define nexus matching the official\
        \ list of declared nexus.\r\n            \r\nPlease note that nexus changes\
        \ may not take effect immediately and you should plan to update your nexus\
        \ settings in advance\r\nof calculating tax for a location.\n\n### Security\
        \ Policies\n\n* This API requires one of the following user roles: AccountAdmin,\
        \ CompanyAdmin, CSPTester, SSTAdmin, TechnicalSupportAdmin.\n"
      operationId: DeclareNexusByAddress
      parameters:
      - name: companyId
        in: path
        description: The ID of the company that will own this nexus.
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        description: The nexus you wish to create.
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/DeclareNexusByAddressModel'
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/DeclareNexusByAddressModel'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/DeclareNexusByAddressModel'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/DeclareNexusByAddressModel'
        required: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NexusByAddressModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
  /api/v2/companies/{companyId}/nexus/byform/{formCode}:
    get:
      tags:
      - Nexus
      summary: List company nexus related to a tax form
      description: "Retrieves a list of nexus related to a tax form.\r\n         \
        \   \r\nThe concept of Nexus indicates a place where your company is legally\
        \ obligated to collect and remit transactional\r\ntaxes.  The legal requirements\
        \ for nexus may vary per country and per jurisdiction; please seek advice\
        \ from your\r\naccountant or lawyer prior to declaring nexus.\r\n        \
        \    \r\nThis API is intended to provide useful information when examining\
        \ a tax form.  If you are about to begin filing\r\na tax form, you may want\
        \ to know whether you have declared nexus in all the jurisdictions related\
        \ to that tax\r\nform in order to better understand how the form will be filled\
        \ out.\r\nYou may specify one or more of the following values in the '$include'\
        \ parameter to fetch additional nested data, using commas to separate multiple\
        \ values:\r\n            \r\n * Parameters\n\n### Security Policies\n\n* This\
        \ API requires one of the following user roles: AccountAdmin, AccountUser,\
        \ CompanyAdmin, CompanyUser, Compliance Root User, ComplianceAdmin, ComplianceUser,\
        \ CSPAdmin, CSPTester, FirmAdmin, FirmUser, SiteAdmin, SSTAdmin, SystemAdmin,\
        \ TechnicalSupportAdmin, TechnicalSupportUser.\n"
      operationId: GetNexusByFormCode
      parameters:
      - name: companyId
        in: path
        description: The ID of the company that owns this nexus object
        required: true
        schema:
          type: integer
          format: int32
      - name: formCode
        in: path
        description: The form code that we are looking up the nexus for
        required: true
        schema:
          type: string
      - name: $include
        in: query
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NexusByTaxFormModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/companies/{companyId}/nexus/byTaxTypeGroup/{taxTypeGroup}:
    get:
      tags:
      - Nexus
      summary: Retrieve nexus for this company By TaxTypeGroup
      description: "List all nexus objects defined for this company filtered by TaxTypeGroup.\r\
        \n            \r\nThe concept of Nexus indicates a place where your company\
        \ is legally obligated to collect and remit transactional\r\ntaxes.  The legal\
        \ requirements for nexus may vary per country and per jurisdiction; please\
        \ seek advice from your\r\naccountant or lawyer prior to declaring nexus.\r\
        \n            \r\nSearch for specific objects using the criteria in the `$filter`\
        \ parameter; full documentation is available on [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/)\
        \ .\r\nPaginate your results using the `$top`, `$skip`, and `$orderby` parameters.\r\
        \nYou may specify one or more of the following values in the '$include' parameter\
        \ to fetch additional nested data, using commas to separate multiple values:\r\
        \n            \r\n * Parameters\n\n### Security Policies\n\n* This API requires\
        \ one of the following user roles: AccountAdmin, AccountUser, CompanyAdmin,\
        \ CompanyUser, Compliance Root User, ComplianceAdmin, ComplianceUser, CSPAdmin,\
        \ CSPTester, FirmAdmin, FirmUser, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin,\
        \ TechnicalSupportUser.\n"
      operationId: ListNexusByCompanyAndTaxTypeGroup
      parameters:
      - name: companyId
        in: path
        description: The ID of the company that owns these nexus objects
        required: true
        schema:
          type: integer
          format: int32
      - name: taxTypeGroup
        in: path
        description: Name of TaxTypeGroup to filter by
        required: true
        schema:
          type: string
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br
          />*Not filterable:* streamlinedSalesTax, isSSTActive, taxTypeGroup, taxAuthorityId,
          taxName, parameters, taxableNexus
        schema:
          type: string
      - name: $include
        in: query
        description: A comma separated list of additional data to retrieve.
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NexusModelFetchResult'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/nexus:
    get:
      tags:
      - Nexus
      summary: Retrieve all nexus
      description: "Get multiple nexus objects across all companies.\r\n         \
        \   \r\nThe concept of Nexus indicates a place where your company is legally\
        \ obligated to collect and remit transactional\r\ntaxes.  The legal requirements\
        \ for nexus may vary per country and per jurisdiction; please seek advice\
        \ from your\r\naccountant or lawyer prior to declaring nexus.\r\n        \
        \    \r\nSearch for specific objects using the criteria in the `$filter` parameter;\
        \ full documentation is available on [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/)\
        \ .\r\nPaginate your results using the `$top`, `$skip`, and `$orderby` parameters.\r\
        \nYou may specify one or more of the following values in the '$include' parameter\
        \ to fetch additional nested data, using commas to separate multiple values:\r\
        \n            \r\n * Parameters\n\n### Security Policies\n\n* This API requires\
        \ one of the following user roles: AccountAdmin, AccountUser, CompanyAdmin,\
        \ CompanyUser, Compliance Root User, ComplianceAdmin, ComplianceUser, CSPAdmin,\
        \ CSPTester, FirmAdmin, FirmUser, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin,\
        \ TechnicalSupportUser.\n"
      operationId: QueryNexus
      parameters:
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br
          />*Not filterable:* streamlinedSalesTax, isSSTActive, taxTypeGroup, taxAuthorityId,
          taxName, parameters, taxableNexus
        schema:
          type: string
      - name: $include
        in: query
        description: A comma separated list of additional data to retrieve.
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NexusModelFetchResult'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/notices/responsibilities:
    post:
      tags:
      - Notices
      summary: Creates a new tax notice responsibility type.
      description: |
        This API is available by invitation only and only available for users with Compliance admin access.

        ### Security Policies

        * This API requires one of the following user roles: AccountAdmin, CompanyAdmin, Compliance Root User, ComplianceAdmin, ComplianceUser, CSPTester, FirmAdmin, FirmUser, SSTAdmin, TechnicalSupportAdmin, TechnicalSupportUser, TreasuryAdmin, TreasuryUser.
        * This API depends on the following active services:*Returns* (at least one of):  Mrs, MRSComplianceManager, AvaTaxCsp.*Firm Managed* (for accounts managed by a firm):  ARA, ARAManaged.
      operationId: CreateNoticeResponsibilityType
      parameters:
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        description: The responsibility type to create
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CreateNoticeResponsibilityTypeModel'
          application/json:
            schema:
              $ref: '#/components/schemas/CreateNoticeResponsibilityTypeModel'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateNoticeResponsibilityTypeModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateNoticeResponsibilityTypeModel'
        required: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoticeResponsibilityModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
  /api/v2/notices/responsibilities/{responsibilityId}:
    delete:
      tags:
      - Notices
      summary: Delete a tax notice responsibility type.
      description: |
        This API is available by invitation only and only available for users with Compliance admin access.

        ### Security Policies

        * This API requires one of the following user roles: AccountAdmin, CompanyAdmin, Compliance Root User, ComplianceAdmin, ComplianceUser, CSPTester, FirmAdmin, FirmUser, SSTAdmin, TechnicalSupportAdmin, TechnicalSupportUser, TreasuryAdmin, TreasuryUser.
      operationId: DeleteNoticeResponsibilityType
      parameters:
      - name: responsibilityId
        in: path
        description: The unique ID of the responsibility type
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorDetail'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/notices/rootcauses:
    post:
      tags:
      - Notices
      summary: Creates a new tax notice root cause type.
      description: |
        This API is available by invitation only and only available for users with Compliance admin access.

        ### Security Policies

        * This API requires one of the following user roles: AccountAdmin, CompanyAdmin, Compliance Root User, ComplianceAdmin, ComplianceUser, CSPTester, FirmAdmin, FirmUser, SSTAdmin, TechnicalSupportAdmin, TechnicalSupportUser, TreasuryAdmin, TreasuryUser.
        * This API depends on the following active services:*Returns* (at least one of):  Mrs, MRSComplianceManager, AvaTaxCsp.*Firm Managed* (for accounts managed by a firm):  ARA, ARAManaged.
      operationId: CreateNoticeRootCauseType
      parameters:
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        description: The root cause type to create
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CreateNoticeRootCauseTypeModel'
          application/json:
            schema:
              $ref: '#/components/schemas/CreateNoticeRootCauseTypeModel'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateNoticeRootCauseTypeModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateNoticeRootCauseTypeModel'
        required: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoticeRootCauseModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
  /api/v2/notices/rootcauses/{rootCauseId}:
    delete:
      tags:
      - Notices
      summary: Delete a tax notice root cause type.
      description: |
        This API is available by invitation only and only available for users with Compliance admin access.

        ### Security Policies

        * This API requires one of the following user roles: AccountAdmin, CompanyAdmin, Compliance Root User, ComplianceAdmin, ComplianceUser, CSPTester, FirmAdmin, FirmUser, SSTAdmin, TechnicalSupportAdmin, TechnicalSupportUser, TreasuryAdmin, TreasuryUser.
      operationId: DeleteNoticeRootCauseType
      parameters:
      - name: rootCauseId
        in: path
        description: The unique ID of the root cause type
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorDetail'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/notifications:
    get:
      tags:
      - Notifications
      summary: List all notifications.
      description: "List all notifications.\r\n            \r\nA notification is a\
        \ message from Avalara that may have relevance to your business.  You may\
        \ want\r\nto regularly review notifications and then dismiss them when you\
        \ are certain that you have addressed\r\nany relevant concerns raised by this\
        \ notification.\r\n            \r\nAn example of a notification would be a\
        \ message about new software, or a change to AvaTax that may\r\naffect you,\
        \ or a potential issue with your company's tax profile.\r\n            \r\n\
        You may search for specific objects using the criteria in the `$filter` parameter;\
        \ full documentation is available on [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/)\
        \ .\r\nPaginate your results using the `$top`, `$skip`, and `$orderby` parameters.\n\
        \n### Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, Compliance\
        \ Root User, ComplianceAdmin, ComplianceUser, CSPAdmin, CSPTester, FirmAdmin,\
        \ FirmUser, ProStoresOperator, Registrar, SiteAdmin, SSTAdmin, SystemAdmin,\
        \ TechnicalSupportAdmin, TechnicalSupportUser, TreasuryAdmin, TreasuryUser.\n"
      operationId: ListNotifications
      parameters:
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationModelFetchResult'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
    post:
      tags:
      - Registrar
      summary: Create new notifications.
      description: "This API is available by invitation only.\r\n            \r\n\
        Create a single notification.\r\n            \r\nA notification is a message\
        \ from Avalara that may have relevance to your business.  You may want\r\n\
        to regularly review notifications and then dismiss them when you are certain\
        \ that you have addressed\r\nany relevant concerns raised by this notification.\r\
        \n            \r\nA Global notification is a message which is directed to\
        \ all the accounts and is set to expire within\r\na certain time and cannot\
        \ be dismissed by the user. Make accountId and companyId null to create a\
        \ global notification.\r\n            \r\nAn example of a notification would\
        \ be a message about new software, or a change to AvaTax that may\r\naffect\
        \ you, or a potential issue with your company's tax profile.\n\n### Security\
        \ Policies\n\n* This API requires one of the following user roles: FirmAdmin,\
        \ Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin.\n* This\
        \ API is available by invitation only.  To request access to this feature,\
        \ please speak to a business development manager and request access to [NotificationsAPI:Create].\n"
      operationId: CreateNotifications
      parameters:
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        description: The notifications you wish to create.
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/NotificationModel'
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/NotificationModel'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/NotificationModel'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/NotificationModel'
        required: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NotificationModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
  /api/v2/notifications/{id}:
    get:
      tags:
      - Notifications
      summary: Retrieve a single notification.
      description: "Retrieve a single notification by its unique ID number.\r\n  \
        \          \r\nA notification is a message from Avalara that may have relevance\
        \ to your business.  You may want\r\nto regularly review notifications and\
        \ then dismiss them when you are certain that you have addressed\r\nany relevant\
        \ concerns raised by this notification.\r\n            \r\nAn example of a\
        \ notification would be a message about new software, or a change to AvaTax\
        \ that may\r\naffect you, or a potential issue with your company's tax profile.\n\
        \n### Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, Compliance\
        \ Root User, ComplianceAdmin, ComplianceUser, CSPAdmin, CSPTester, FirmAdmin,\
        \ FirmUser, ProStoresOperator, Registrar, SiteAdmin, SSTAdmin, SystemAdmin,\
        \ TechnicalSupportAdmin, TechnicalSupportUser, TreasuryAdmin, TreasuryUser.\n"
      operationId: GetNotification
      parameters:
      - name: id
        in: path
        description: The id of the notification to retrieve.
        required: true
        schema:
          type: integer
          format: int64
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
    put:
      tags:
      - Registrar
      summary: Update a single notification.
      description: "This API is available by invitation only.\r\n            \r\n\
        Replaces the notification identified by this URL with a new notification.\r\
        \n            \r\nA notification is a message from Avalara that may have relevance\
        \ to your business.  You may want\r\nto regularly review notifications and\
        \ then dismiss them when you are certain that you have addressed\r\nany relevant\
        \ concerns raised by this notification.\r\n            \r\nAn example of a\
        \ notification would be a message about new software, or a change to AvaTax\
        \ that may\r\naffect you, or a potential issue with your company's tax profile.\n\
        \n### Security Policies\n\n* This API requires one of the following user roles:\
        \ FirmAdmin, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin.\n\
        * This API is available by invitation only.  To request access to this feature,\
        \ please speak to a business development manager and request access to [NotificationsAPI:Create].\n"
      operationId: UpdateNotification
      parameters:
      - name: id
        in: path
        description: The id of the notification you wish to update.
        required: true
        schema:
          type: integer
          format: int64
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        description: The notification object you wish to update.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/NotificationModel'
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationModel'
          text/json:
            schema:
              $ref: '#/components/schemas/NotificationModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/NotificationModel'
        required: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
    delete:
      tags:
      - Registrar
      summary: Delete a single notification.
      description: "This API is available by invitation only.\r\n            \r\n\
        Delete the existing notification identified by this URL.\r\n            \r\
        \nA notification is a message from Avalara that may have relevance to your\
        \ business.  You may want\r\nto regularly review notifications and then dismiss\
        \ them when you are certain that you have addressed\r\nany relevant concerns\
        \ raised by this notification.\r\n            \r\nAn example of a notification\
        \ would be a message about new software, or a change to AvaTax that may\r\n\
        affect you, or a potential issue with your company's tax profile.\n\n### Security\
        \ Policies\n\n* This API requires one of the following user roles: FirmAdmin,\
        \ Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin.\n* This\
        \ API is available by invitation only.  To request access to this feature,\
        \ please speak to a business development manager and request access to [NotificationsAPI:Create].\n"
      operationId: DeleteNotification
      parameters:
      - name: id
        in: path
        description: The id of the notification you wish to delete.
        required: true
        schema:
          type: integer
          format: int64
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorDetail'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/notifications/{id}/dismiss:
    put:
      tags:
      - Notifications
      summary: Mark a single notification as dismissed.
      description: "Marks the notification identified by this URL as dismissed.\r\n\
        \            \r\nA notification is a message from Avalara that may have relevance\
        \ to your business.  You may want\r\nto regularly review notifications and\
        \ then dismiss them when you are certain that you have addressed\r\nany relevant\
        \ concerns raised by this notification.\r\n            \r\nAn example of a\
        \ notification would be a message about new software, or a change to AvaTax\
        \ that may\r\naffect you, or a potential issue with your company's tax profile.\r\
        \n            \r\nWhen you dismiss a notification, the notification will track\
        \ the user and time when it was\r\ndismissed.  You can then later review which\
        \ employees of your company dismissed notifications to\r\ndetermine if they\
        \ were resolved appropriately.\r\n            \r\nA Global notification with\
        \ null accountId and companyId cannot be dismissed and will expire within\
        \ a given time span.\n\n### Security Policies\n\n* This API requires one of\
        \ the following user roles: AccountAdmin, AccountUser, CompanyAdmin, CompanyUser,\
        \ Compliance Root User, ComplianceAdmin, ComplianceUser, CSPAdmin, CSPTester,\
        \ FirmAdmin, FirmUser, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin,\
        \ TechnicalSupportUser, TreasuryAdmin, TreasuryUser.\n"
      operationId: DismissNotification
      parameters:
      - name: id
        in: path
        description: The id of the notification you wish to mark as dismissed.
        required: true
        schema:
          type: integer
          format: int64
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/accounts/{id}/entitlements/{offer}:
    post:
      tags:
      - Provisioning
      summary: Request a new entitilement to an existing customer
      description: "This API is for use by partner provisioning services customers\
        \ only. This will allow the partners to allow\r\nthe add new entitlement to\
        \ an existing customer\n\n### Security Policies\n\n* This API requires one\
        \ of the following user roles: AccountAdmin, CompanyAdmin, CSPTester, FirmAdmin,\
        \ Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin.\n* This\
        \ API is available by invitation only.\n* This API is available by invitation\
        \ only.  To request access to this feature, please speak to a business development\
        \ manager and request access to [Provisioning:RequestNewAccount].\n"
      operationId: RequestNewEntitlement
      parameters:
      - name: id
        in: path
        description: The avatax account id of the customer
        required: true
        schema:
          type: integer
          format: int32
      - name: offer
        in: path
        description: The offer to be added to an already existing customer
        required: true
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OfferModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/accounts/request:
    post:
      tags:
      - Provisioning
      summary: Request a new Avalara account
      description: "This API is for use by partner provisioning services customers\
        \ only.\r\n            \r\nAvalara invites select partners to refer new customers\
        \ to the AvaTax service using the onboarding features\r\nof AvaTax.  These\
        \ partners can create accounts for new customers using this API.\r\n     \
        \       \r\nCalling this API creates an account with the specified product\
        \ subscriptions, but does not configure billing.\r\nThe customer will receive\
        \ information from Avalara about how to configure billing for their account.\r\
        \nYou should call this API when a customer has requested to begin using Avalara\
        \ services.\r\n            \r\nIf the newly created account owner wishes,\
        \ they can confirm that they have read and agree to the Avalara\r\nterms and\
        \ conditions.  If they do so, they can receive a license key as part of this\
        \ API and their\r\nAPI will be created in `Active` status.  If the customer\
        \ has not yet read and accepted these terms and\r\nconditions, the account\
        \ will be created in `New` status and they can receive a license key by logging\r\
        \nonto the AvaTax website and reviewing terms and conditions online.\n\n###\
        \ Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, CompanyAdmin, CSPTester, FirmAdmin, Registrar, SiteAdmin,\
        \ SSTAdmin, SystemAdmin, TechnicalSupportAdmin.\n* This API is available by\
        \ invitation only.\n* This API is available by invitation only.  To request\
        \ access to this feature, please speak to a business development manager and\
        \ request access to [Provisioning:RequestNewAccount].\n"
      operationId: RequestNewAccount
      parameters:
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        description: Information about the account you wish to create and the selected
          product offerings.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/NewAccountRequestModel'
          application/json:
            schema:
              $ref: '#/components/schemas/NewAccountRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/NewAccountRequestModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/NewAccountRequestModel'
        required: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewAccountModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
  /api/v2/accounts/ListAccountsByTssWriteMode/{writeMode}:
    get:
      tags:
      - Registrar
      summary: Retrieve List of Accounts by Account Migration Status
      description: |2


        ### Security Policies

        * This API requires one of the following user roles: FirmAdmin, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin.
      operationId: ListAccountsByTssWriteMode
      parameters:
      - name: writeMode
        in: path
        required: true
        schema:
          type: string
          enum:
          - BothWithoutRollbackReadFromSql
          - BothWithRollbackReadFromTss
          - SQLOnly
          - TSSOnly
          - ReadOnly
          x-enum-metadata:
            name: TssAccountMigrationId
            values:
            - name: BothWithoutRollbackReadFromSql
              value: 0
            - name: BothWithRollbackReadFromTss
              value: 1
            - name: SQLOnly
              value: 2
            - name: TSSOnly
              value: 3
            - name: ReadOnly
              value: 4
        x-enum-metadata:
          name: TssAccountMigrationId
          values:
          - name: BothWithoutRollbackReadFromSql
            value: 0
          - name: BothWithRollbackReadFromTss
            value: 1
          - name: SQLOnly
            value: 2
          - name: TSSOnly
            value: 3
          - name: ReadOnly
            value: 4
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountMigrationStatusModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/passwords/{userId}/reset:
    post:
      tags:
      - Registrar
      summary: Reset a user's password programmatically
      description: "# For Registrar Use Only\r\nThis API is for use by Avalara Registrar\
        \ administrative users only.\r\n            \r\nAllows a system admin to reset\
        \ the password for a specific user via the API.\r\nThis API is only available\
        \ for Avalara Registrar Admins, and can be used to reset the password of any\r\
        \nuser based on internal Avalara business processes.\n\n### Security Policies\n\
        \n* This API requires one of the following user roles: AccountAdmin, AccountUser,\
        \ CompanyAdmin, CompanyUser, Compliance Root User, ComplianceAdmin, ComplianceUser,\
        \ CSPTester, FirmAdmin, FirmUser, Registrar, SiteAdmin, SSTAdmin, SystemAdmin,\
        \ TechnicalSupportAdmin, TechnicalSupportUser, TreasuryAdmin, TreasuryUser.\n\
        * This API is available to Avalara system-level (registrar-level) users only.\n"
      operationId: ResetPassword
      parameters:
      - name: userId
        in: path
        description: The unique ID of the user whose password will be changed
        required: true
        schema:
          type: integer
          format: int32
      - name: unmigrateFromAi
        in: query
        description: If user's password was migrated to AI, undo this.
        schema:
          type: boolean
          default: false
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        description: The new password for this user
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/SetPasswordModel'
          application/json:
            schema:
              $ref: '#/components/schemas/SetPasswordModel'
          text/json:
            schema:
              $ref: '#/components/schemas/SetPasswordModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SetPasswordModel'
        required: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: string
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
  /api/v2/companies/{companyId}/reports/exportdocumentline/initiate:
    post:
      tags:
      - Reports
      summary: Initiate an ExportDocumentLine report task
      description: "Begins running an `ExportDocumentLine` report task and returns\
        \ the identity of the report.\r\n            \r\nReports are run as asynchronous\
        \ report tasks on the server.  When complete, the report file will be available\
        \ for download\r\nfor up to 30 days after completion.  To run an asynchronous\
        \ report, you should follow these steps:\r\n            \r\n* Begin a report\
        \ by calling the report's Initiate API.  There is a separate initiate API\
        \ call for each report type.\r\n* In the result of the Initiate API, you receive\
        \ back a report's `id` value.\r\n* Check the status of a report by calling\
        \ `GetReport` and passing in the report's `id` value.\r\n* When a report's\
        \ status is `Completed`, call `DownloadReport` to retrieve the file.\r\n \
        \           \r\nThe `ExportDocumentLine` report produces information about\
        \ invoice lines recorded within your account.\r\n            \r\nTo split\
        \ large reports into multiple smaller partitions, use the numberOfPartitions\
        \ and partition properties on ExportDocumentLineModel.\r\n            \r\n\
        Example - split a report into three partitions\r\n            \r\n* Follow\
        \ the steps above with numberOfPartitions = 3 and partition = 0\r\n* Follow\
        \ the steps above with numberOfPartitions = 3 and partition = 1\r\n* Follow\
        \ the steps above with numberOfPartitions = 3 and partition = 2\r\n* Once\
        \ all three reports are downloaded merge the files on the client side.\n\n\
        ### Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, CSPTester,\
        \ SSTAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n"
      operationId: InitiateExportDocumentLineReport
      parameters:
      - name: companyId
        in: path
        description: The unique ID number of the company to report on.
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        description: Options that may be configured to customize the report.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ExportDocumentLineModel'
          application/json:
            schema:
              $ref: '#/components/schemas/ExportDocumentLineModel'
          text/json:
            schema:
              $ref: '#/components/schemas/ExportDocumentLineModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ExportDocumentLineModel'
        required: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReportModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
  /api/v2/reports:
    get:
      tags:
      - Reports
      summary: List all report tasks for account
      description: "List all report tasks for your account.\r\n            \r\nReports\
        \ are run as asynchronous report tasks on the server.  When complete, the\
        \ report file will be available for download\r\nfor up to 30 days after completion.\
        \  To run an asynchronous report, you should follow these steps:\r\n     \
        \       \r\n* Begin a report by calling the report's Initiate API.  There\
        \ is a separate initiate API call for each report type.\r\n* In the result\
        \ of the Initiate API, you receive back a report's `id` value.\r\n* Check\
        \ the status of a report by calling `GetReport` and passing in the report's\
        \ `id` value.\r\n* When a report's status is `Completed`, call `DownloadReport`\
        \ to retrieve the file.\r\n            \r\nThis API call returns information\
        \ about all report types across your entire account.\n\n### Security Policies\n\
        \n* This API requires one of the following user roles: AccountAdmin, AccountUser,\
        \ CompanyAdmin, CompanyUser, CSPAdmin, CSPTester, ProStoresOperator, SiteAdmin,\
        \ SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n"
      operationId: ListReports
      parameters:
      - name: companyId
        in: query
        description: The id of the company for which to get reports.
        schema:
          type: integer
          format: int32
      - name: pageKey
        in: query
        description: Provide a page key to retrieve the next page of results.
        schema:
          type: string
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
          default: 25
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportModelFetchResult'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/reports/{id}:
    get:
      tags:
      - Reports
      summary: Retrieve a single report
      description: "Retrieve a single report by its unique ID number.\r\n        \
        \    \r\nReports are run as asynchronous report tasks on the server.  When\
        \ complete, the report file will be available for download\r\nfor up to 30\
        \ days after completion.  To run an asynchronous report, you should follow\
        \ these steps:\r\n            \r\n* Begin a report by calling the report's\
        \ Initiate API.  There is a separate initiate API call for each report type.\r\
        \n* In the result of the Initiate API, you receive back a report's `id` value.\r\
        \n* Check the status of a report by calling `GetReport` and passing in the\
        \ report's `id` value.\r\n* When a report's status is `Completed`, call `DownloadReport`\
        \ to retrieve the file.\r\n            \r\nThis API call returns information\
        \ about any report type."
      operationId: GetReport
      parameters:
      - name: id
        in: path
        description: The unique ID number of the report to retrieve
        required: true
        schema:
          type: integer
          format: int64
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/reports/{id}/attachment:
    get:
      tags:
      - Reports
      summary: Download a report
      description: "This API downloads the file associated with a report.\r\n    \
        \        \r\nIf the report is not yet complete, you will receive a `ReportNotFinished`\
        \ error.  To check if a report is complete,\r\nuse the `GetReport` API.\r\n\
        \            \r\nReports are run as asynchronous report tasks on the server.\
        \  When complete, the report file will be available for download\r\nfor up\
        \ to 30 days after completion.  To run an asynchronous report, you should\
        \ follow these steps:\r\n            \r\n* Begin a report by calling the report's\
        \ Initiate API.  There is a separate initiate API call for each report type.\r\
        \n* In the result of the Initiate API, you receive back a report's `id` value.\r\
        \n* Check the status of a report by calling `GetReport` and passing in the\
        \ report's `id` value.\r\n* When a report's status is `Completed`, call `DownloadReport`\
        \ to retrieve the file.\r\n            \r\n* We throttle this API. You can\
        \ only call this API up to 5 times in a minute.\n\n### Security Policies\n\
        \n* This API requires one of the following user roles: AccountAdmin, AccountUser,\
        \ CompanyAdmin, CompanyUser, CSPAdmin, CSPTester, ProStoresOperator, SiteAdmin,\
        \ SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n"
      operationId: DownloadReport
      parameters:
      - name: id
        in: path
        description: The unique ID number of this report
        required: true
        schema:
          type: integer
          format: int64
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: string
                format: binary
            application/octet-stream:
              schema:
                type: string
                format: binary
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/companies/{companyId}/settings:
    get:
      tags:
      - Settings
      summary: Retrieve all settings for this company
      description: "List all setting objects attached to this company.\r\n       \
        \     \r\nThe company settings system is a metadata system that you can use\
        \ to store extra information\r\nabout a company.  Your integration or connector\
        \ could use this data storage to keep track of\r\npreference information,\
        \ reminders, or any other storage that would need to persist even if\r\nthe\
        \ customer uninstalls your application.\r\n            \r\nA setting can refer\
        \ to any type of data you need to remember about this company object.\r\n\
        When creating this object, you may define your own `set`, `name`, and `value`\
        \ parameters.\r\nTo define your own values, please choose a `set` name that\
        \ begins with `X-` to indicate an extension.\r\n            \r\nSearch for\
        \ specific objects using the criteria in the `$filter` parameter; full documentation\
        \ is available on [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/)\
        \ .\r\nPaginate your results using the `$top`, `$skip`, and `$orderby` parameters.\n\
        \n### Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, Compliance Root User,\
        \ ComplianceAdmin, ComplianceUser, CSPAdmin, CSPTester, FirmAdmin, FirmUser,\
        \ ProStoresOperator, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin,\
        \ TechnicalSupportUser.\n"
      operationId: ListSettingsByCompany
      parameters:
      - name: companyId
        in: path
        description: The ID of the company that owns these settings
        required: true
        schema:
          type: integer
          format: int32
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br
          />*Not filterable:* modifiedDate, ModifiedUserId
        schema:
          type: string
      - name: $include
        in: query
        description: A comma separated list of additional data to retrieve.
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SettingModelFetchResult'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
    post:
      tags:
      - Settings
      summary: Create a new setting
      description: "Create one or more new setting objects attached to this company.\r\
        \n            \r\nThe company settings system is a metadata system that you\
        \ can use to store extra information\r\nabout a company.  Your integration\
        \ or connector could use this data storage to keep track of\r\npreference\
        \ information, reminders, or any other storage that would need to persist\
        \ even if\r\nthe customer uninstalls your application.\r\n            \r\n\
        A setting can refer to any type of data you need to remember about this company\
        \ object.\r\nWhen creating this object, you may define your own `set`, `name`,\
        \ and `value` parameters.\r\nTo define your own values, please choose a `set`\
        \ name that begins with `X-` to indicate an extension.\r\n            \r\n\
        Use Set = Transactions, Name = TaxCodePrioritization/HSCodePrioritization\
        \ and Value = Transaction/ItemMaster for prioritizing which TaxCodes/HsCodes\
        \ should be used for calculating taxes.\r\n            \r\nExample: To prioritize\
        \ TaxCodes passed in a Transaction over values stored with Items when calculating\
        \ tax, use\r\nSet = Transactions, Name = TaxCodePrioritization, Value = Transaction\n\
        \n### Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, CompanyAdmin, CSPTester, ProStoresOperator, Registrar, SiteAdmin,\
        \ SSTAdmin, SystemAdmin, TechnicalSupportAdmin.\n"
      operationId: CreateSettings
      parameters:
      - name: companyId
        in: path
        description: The ID of the company that owns this setting.
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        description: The setting you wish to create.
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SettingModel'
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SettingModel'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SettingModel'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SettingModel'
        required: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SettingModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
  /api/v2/companies/{companyId}/settings/{id}:
    get:
      tags:
      - Settings
      summary: Retrieve a single setting
      description: "Get a single setting object by its unique ID.\r\n            \r\
        \nThe company settings system is a metadata system that you can use to store\
        \ extra information\r\nabout a company.  Your integration or connector could\
        \ use this data storage to keep track of\r\npreference information, reminders,\
        \ or any other storage that would need to persist even if\r\nthe customer\
        \ uninstalls your application.\r\n            \r\nA setting can refer to any\
        \ type of data you need to remember about this company object.\r\nWhen creating\
        \ this object, you may define your own `set`, `name`, and `value` parameters.\r\
        \nTo define your own values, please choose a `set` name that begins with `X-`\
        \ to indicate an extension.\n\n### Security Policies\n\n* This API requires\
        \ one of the following user roles: AccountAdmin, AccountUser, CompanyAdmin,\
        \ CompanyUser, Compliance Root User, ComplianceAdmin, ComplianceUser, CSPAdmin,\
        \ CSPTester, FirmAdmin, FirmUser, ProStoresOperator, SiteAdmin, SSTAdmin,\
        \ SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n"
      operationId: GetSetting
      parameters:
      - name: companyId
        in: path
        description: The ID of the company that owns this setting
        required: true
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: The primary key of this setting
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SettingModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
    put:
      tags:
      - Settings
      summary: Update a single setting
      description: "Replace the existing setting object at this URL with an updated\
        \ object.\r\n            \r\nThe company settings system is a metadata system\
        \ that you can use to store extra information\r\nabout a company.  Your integration\
        \ or connector could use this data storage to keep track of\r\npreference\
        \ information, reminders, or any other storage that would need to persist\
        \ even if\r\nthe customer uninstalls your application.\r\n            \r\n\
        A setting can refer to any type of data you need to remember about this company\
        \ object.\r\nWhen creating this object, you may define your own `set`, `name`,\
        \ and `value` parameters.\r\nTo define your own values, please choose a `set`\
        \ name that begins with `X-` to indicate an extension.\r\n            \r\n\
        All data from the existing object will be replaced with data in the object\
        \ you `PUT`.\r\n            \r\nTo set a field's value to `null`, you may\
        \ either set its value to `null` or omit that field from the object when calling\
        \ update.\n\n### Security Policies\n\n* This API requires one of the following\
        \ user roles: AccountAdmin, CompanyAdmin, CSPTester, ProStoresOperator, Registrar,\
        \ SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin.\n"
      operationId: UpdateSetting
      parameters:
      - name: companyId
        in: path
        description: The ID of the company that this setting belongs to.
        required: true
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: The ID of the setting you wish to update
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        description: The setting you wish to update.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/SettingModel'
          application/json:
            schema:
              $ref: '#/components/schemas/SettingModel'
          text/json:
            schema:
              $ref: '#/components/schemas/SettingModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SettingModel'
        required: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SettingModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
    delete:
      tags:
      - Settings
      summary: Delete a single setting
      description: "Mark the setting object at this URL as deleted.\r\n          \
        \  \r\nThe company settings system is a metadata system that you can use to\
        \ store extra information\r\nabout a company.  Your integration or connector\
        \ could use this data storage to keep track of\r\npreference information,\
        \ reminders, or any other storage that would need to persist even if\r\nthe\
        \ customer uninstalls your application.\r\n            \r\nA setting can refer\
        \ to any type of data you need to remember about this company object.\r\n\
        When creating this object, you may define your own `set`, `name`, and `value`\
        \ parameters.\r\nTo define your own values, please choose a `set` name that\
        \ begins with `X-` to indicate an extension.\n\n### Security Policies\n\n\
        * This API requires one of the following user roles: AccountAdmin, CompanyAdmin,\
        \ CSPTester, FirmAdmin, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin.\n"
      operationId: DeleteSetting
      parameters:
      - name: companyId
        in: path
        description: The ID of the company that owns this setting.
        required: true
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: The ID of the setting you wish to delete.
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorDetail'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/settings:
    get:
      tags:
      - Settings
      summary: Retrieve all settings
      description: "Get multiple setting objects across all companies.\r\n       \
        \     \r\nThe company settings system is a metadata system that you can use\
        \ to store extra information\r\nabout a company.  Your integration or connector\
        \ could use this data storage to keep track of\r\npreference information,\
        \ reminders, or any other storage that would need to persist even if\r\nthe\
        \ customer uninstalls your application.\r\n            \r\nA setting can refer\
        \ to any type of data you need to remember about this company object.\r\n\
        When creating this object, you may define your own `set`, `name`, and `value`\
        \ parameters.\r\nTo define your own values, please choose a `set` name that\
        \ begins with `X-` to indicate an extension.\r\n            \r\nSearch for\
        \ specific objects using the criteria in the `$filter` parameter; full documentation\
        \ is available on [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/)\
        \ .\r\nPaginate your results using the `$top`, `$skip`, and `$orderby` parameters.\n\
        \n### Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, Compliance Root User,\
        \ ComplianceAdmin, ComplianceUser, CSPAdmin, CSPTester, FirmAdmin, FirmUser,\
        \ ProStoresOperator, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin,\
        \ TechnicalSupportUser.\n"
      operationId: QuerySettings
      parameters:
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br
          />*Not filterable:* modifiedDate, ModifiedUserId
        schema:
          type: string
      - name: $include
        in: query
        description: A comma separated list of additional data to retrieve.
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SettingModelFetchResult'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/accounts/{accountId}/subscriptions:
    get:
      tags:
      - Subscriptions
      summary: Retrieve subscriptions for this account
      description: "List all subscription objects attached to this account.\r\nA 'subscription'\
        \ indicates a licensed subscription to a named Avalara service.\r\nTo request\
        \ or remove subscriptions, please contact Avalara sales or your customer account\
        \ manager.\r\n            \r\nSearch for specific objects using the criteria\
        \ in the `$filter` parameter; full documentation is available on [Filtering\
        \ in REST](http://developer.avalara.com/avatax/filtering-in-rest/) .\r\nPaginate\
        \ your results using the `$top`, `$skip`, and `$orderby` parameters.\n\n###\
        \ Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, Compliance Root User,\
        \ ComplianceAdmin, ComplianceUser, CSPAdmin, CSPTester, FirmAdmin, FirmUser,\
        \ Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser,\
        \ TreasuryAdmin, TreasuryUser.\n"
      operationId: ListSubscriptionsByAccount
      parameters:
      - name: accountId
        in: path
        description: The ID of the account that owns these subscriptions
        required: true
        schema:
          type: integer
          format: int32
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br
          />*Not filterable:* subscriptionDescription
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionModelFetchResult'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
    post:
      tags:
      - Registrar
      summary: Create a new subscription
      description: "This API is for use by Avalara Registrar administrative users\
        \ only.\r\n            \r\nCreate one or more new subscription objects attached\
        \ to this account.\r\nA 'subscription' indicates a licensed subscription to\
        \ a named Avalara service.\r\nTo request or remove subscriptions, please contact\
        \ Avalara sales or your customer account manager.\n\n### Security Policies\n\
        \n* This API requires one of the following user roles: Registrar, SiteAdmin,\
        \ SSTAdmin, SystemAdmin, TechnicalSupportAdmin.\n"
      operationId: CreateSubscriptions
      parameters:
      - name: accountId
        in: path
        description: The ID of the account that owns this subscription.
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        description: The subscription you wish to create.
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SubscriptionModel'
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SubscriptionModel'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SubscriptionModel'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SubscriptionModel'
        required: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SubscriptionModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
  /api/v2/accounts/{accountId}/subscriptions/{id}:
    get:
      tags:
      - Subscriptions
      summary: Retrieve a single subscription
      description: "Get the subscription object identified by this URL.\r\nA 'subscription'\
        \ indicates a licensed subscription to a named Avalara service.\r\nTo request\
        \ or remove subscriptions, please contact Avalara sales or your customer account\
        \ manager.\n\n### Security Policies\n\n* This API requires one of the following\
        \ user roles: AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, Compliance\
        \ Root User, ComplianceAdmin, ComplianceUser, CSPAdmin, CSPTester, FirmAdmin,\
        \ FirmUser, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin,\
        \ TechnicalSupportUser, TreasuryAdmin, TreasuryUser.\n"
      operationId: GetSubscription
      parameters:
      - name: accountId
        in: path
        description: The ID of the account that owns this subscription
        required: true
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: The primary key of this subscription
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
    put:
      tags:
      - Registrar
      summary: Update a single subscription
      description: "# For Registrar Use Only\r\nThis API is for use by Avalara Registrar\
        \ administrative users only.\r\n            \r\nReplace the existing subscription\
        \ object at this URL with an updated object.\r\nA 'subscription' indicates\
        \ a licensed subscription to a named Avalara service.\r\nTo request or remove\
        \ subscriptions, please contact Avalara sales or your customer account manager.\r\
        \nAll data from the existing object will be replaced with data in the object\
        \ you PUT.\r\nTo set a field's value to null, you may either set its value\
        \ to null or omit that field from the object you post.\n\n### Security Policies\n\
        \n* This API requires one of the following user roles: Registrar, SiteAdmin,\
        \ SSTAdmin, SystemAdmin, TechnicalSupportAdmin.\n"
      operationId: UpdateSubscription
      parameters:
      - name: accountId
        in: path
        description: The ID of the account that this subscription belongs to.
        required: true
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: The ID of the subscription you wish to update
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        description: The subscription you wish to update.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/SubscriptionModel'
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionModel'
          text/json:
            schema:
              $ref: '#/components/schemas/SubscriptionModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SubscriptionModel'
        required: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
    delete:
      tags:
      - Registrar
      summary: Delete a single subscription
      description: "# For Registrar Use Only\r\nThis API is for use by Avalara Registrar\
        \ administrative users only.\r\n            \r\nMark the existing account\
        \ identified by this URL as deleted.\n\n### Security Policies\n\n* This API\
        \ requires one of the following user roles: Registrar, SiteAdmin, SSTAdmin,\
        \ SystemAdmin, TechnicalSupportAdmin.\n"
      operationId: DeleteSubscription
      parameters:
      - name: accountId
        in: path
        description: The ID of the account that owns this subscription.
        required: true
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: The ID of the subscription you wish to delete.
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorDetail'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/subscriptions:
    get:
      tags:
      - Subscriptions
      summary: Retrieve all subscriptions
      description: "Get multiple subscription objects across all accounts.\r\nA 'subscription'\
        \ indicates a licensed subscription to a named Avalara service.\r\nTo request\
        \ or remove subscriptions, please contact Avalara sales or your customer account\
        \ manager.\r\n            \r\nSearch for specific objects using the criteria\
        \ in the `$filter` parameter; full documentation is available on [Filtering\
        \ in REST](http://developer.avalara.com/avatax/filtering-in-rest/) .\r\nPaginate\
        \ your results using the `$top`, `$skip`, and `$orderby` parameters.\n\n###\
        \ Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, Compliance Root User,\
        \ ComplianceAdmin, ComplianceUser, CSPAdmin, CSPTester, FirmAdmin, FirmUser,\
        \ Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser,\
        \ TreasuryAdmin, TreasuryUser.\n"
      operationId: QuerySubscriptions
      parameters:
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br
          />*Not filterable:* subscriptionDescription
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionModelFetchResult'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/companies/{companyId}/taxcodes:
    get:
      tags:
      - TaxCodes
      summary: Retrieve tax codes for this company
      description: "List all taxcode objects attached to this company.\r\nA 'TaxCode'\
        \ represents a uniquely identified type of product, good, or service.\r\n\
        Avalara supports correct tax rates and taxability rules for all TaxCodes in\
        \ all supported jurisdictions.\r\nIf you identify your products by tax code\
        \ in your 'Create Transacion' API calls, Avalara will correctly calculate\
        \ tax rates and\r\ntaxability rules for this product in all supported jurisdictions.\r\
        \n            \r\nSearch for specific objects using the criteria in the `$filter`\
        \ parameter; full documentation is available on [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/)\
        \ .\r\nPaginate your results using the `$top`, `$skip`, and `$orderby` parameters.\n\
        \n### Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, CSPAdmin, CSPTester,\
        \ SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n"
      operationId: ListTaxCodesByCompany
      parameters:
      - name: companyId
        in: path
        description: The ID of the company that owns these tax codes
        required: true
        schema:
          type: integer
          format: int32
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).
        schema:
          type: string
      - name: $include
        in: query
        description: A comma separated list of additional data to retrieve.
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaxCodeModelFetchResult'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
    post:
      tags:
      - TaxCodes
      summary: Create a new tax code
      description: "Create one or more new taxcode objects attached to this company.\r\
        \nA 'TaxCode' represents a uniquely identified type of product, good, or service.\r\
        \nAvalara supports correct tax rates and taxability rules for all TaxCodes\
        \ in all supported jurisdictions.\r\nIf you identify your products by tax\
        \ code in your 'Create Transacion' API calls, Avalara will correctly calculate\
        \ tax rates and\r\ntaxability rules for this product in all supported jurisdictions.\n\
        \n### Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, CompanyAdmin, CSPTester, SSTAdmin, TechnicalSupportAdmin.\n"
      operationId: CreateTaxCodes
      parameters:
      - name: companyId
        in: path
        description: The ID of the company that owns this tax code.
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        description: The tax code you wish to create.
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/TaxCodeModel'
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/TaxCodeModel'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/TaxCodeModel'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/TaxCodeModel'
        required: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaxCodeModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
  /api/v2/companies/{companyId}/taxcodes/{id}:
    get:
      tags:
      - TaxCodes
      summary: Retrieve a single tax code
      description: "Get the taxcode object identified by this URL.\r\nA 'TaxCode'\
        \ represents a uniquely identified type of product, good, or service.\r\n\
        Avalara supports correct tax rates and taxability rules for all TaxCodes in\
        \ all supported jurisdictions.\r\nIf you identify your products by tax code\
        \ in your 'Create Transacion' API calls, Avalara will correctly calculate\
        \ tax rates and\r\ntaxability rules for this product in all supported jurisdictions.\n\
        \n### Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, CSPAdmin, CSPTester,\
        \ SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n"
      operationId: GetTaxCode
      parameters:
      - name: companyId
        in: path
        description: The ID of the company that owns this tax code
        required: true
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: The primary key of this tax code
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaxCodeModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
    put:
      tags:
      - TaxCodes
      summary: Update a single tax code
      description: "Replace the existing taxcode object at this URL with an updated\
        \ object.\r\nA 'TaxCode' represents a uniquely identified type of product,\
        \ good, or service.\r\nAvalara supports correct tax rates and taxability rules\
        \ for all TaxCodes in all supported jurisdictions.\r\nIf you identify your\
        \ products by tax code in your 'Create Transacion' API calls, Avalara will\
        \ correctly calculate tax rates and\r\ntaxability rules for this product in\
        \ all supported jurisdictions.\r\nAll data from the existing object will be\
        \ replaced with data in the object you PUT.\r\nTo set a field's value to null,\
        \ you may either set its value to null or omit that field from the object\
        \ you post.\n\n### Security Policies\n\n* This API requires one of the following\
        \ user roles: AccountAdmin, CompanyAdmin, CSPTester, SSTAdmin, TechnicalSupportAdmin.\n"
      operationId: UpdateTaxCode
      parameters:
      - name: companyId
        in: path
        description: The ID of the company that this tax code belongs to.
        required: true
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: The ID of the tax code you wish to update
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        description: The tax code you wish to update.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/TaxCodeModel'
          application/json:
            schema:
              $ref: '#/components/schemas/TaxCodeModel'
          text/json:
            schema:
              $ref: '#/components/schemas/TaxCodeModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/TaxCodeModel'
        required: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaxCodeModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
    delete:
      tags:
      - TaxCodes
      summary: Delete a single tax code
      description: |
        Marks the existing TaxCode object at this URL as deleted.

        ### Security Policies

        * This API requires one of the following user roles: AccountAdmin, CompanyAdmin, CSPTester, SSTAdmin, TechnicalSupportAdmin.
      operationId: DeleteTaxCode
      parameters:
      - name: companyId
        in: path
        description: The ID of the company that owns this tax code.
        required: true
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: The ID of the tax code you wish to delete.
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorDetail'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/taxcodes:
    get:
      tags:
      - TaxCodes
      summary: Retrieve all tax codes
      description: "Get multiple taxcode objects across all companies.\r\nA 'TaxCode'\
        \ represents a uniquely identified type of product, good, or service.\r\n\
        Avalara supports correct tax rates and taxability rules for all TaxCodes in\
        \ all supported jurisdictions.\r\nIf you identify your products by tax code\
        \ in your 'Create Transacion' API calls, Avalara will correctly calculate\
        \ tax rates and\r\ntaxability rules for this product in all supported jurisdictions.\r\
        \n            \r\nSearch for specific objects using the criteria in the `$filter`\
        \ parameter; full documentation is available on [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/)\
        \ .\r\nPaginate your results using the `$top`, `$skip`, and `$orderby` parameters.\n\
        \n### Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, CSPAdmin, CSPTester,\
        \ SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n"
      operationId: QueryTaxCodes
      parameters:
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).
        schema:
          type: string
      - name: $include
        in: query
        description: A comma separated list of additional data to retrieve.
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaxCodeModelFetchResult'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/companies/{companyId}/locations/{id}/pointofsaledata:
    get:
      tags:
      - TaxContent
      summary: Build a tax content file for a single location
      description: "Builds a tax content file containing information useful for a\
        \ retail point-of-sale solution.\r\n            \r\nSince tax rates may change\
        \ based on decisions made by a variety of tax authorities, we recommend\r\n\
        that users of this tax content API download new data every day.  Many tax\
        \ authorities may finalize\r\ndecisions on tax changes at unexpected times\
        \ and may make changes in response to legal issues or\r\ngovernmental priorities.\
        \  Any tax content downloaded for future time periods is subject to change\r\
        \nif tax rates or tax laws change.\r\n            \r\nA TaxContent file contains\
        \ a matrix of the taxes that would be charged when you sell any of your\r\n\
        Items at any of your Locations.  To create items, use `CreateItems()`.  To\
        \ create locations, use\r\n`CreateLocations()`.  The file is built by looking\
        \ up the tax profile for your location and your\r\nitem and calculating taxes\
        \ for each in turn.  To include a custom `TaxCode` in this tax content\r\n\
        file, first create the custom tax code using `CreateTaxCodes()` to create\
        \ the custom tax code,\r\nthen use `CreateItems()` to create an item that\
        \ uses the custom tax code.\r\n            \r\nThis data file can be customized\
        \ for specific partner devices and usage conditions.\r\n            \r\nThe\
        \ result of this API is the file you requested in the format you requested\
        \ using the `responseType` field.\r\n            \r\nThis API builds the file\
        \ on demand, and is limited to files with no more than 7500 scenarios.  To\
        \ build a tax content\r\nfile for a multiple locations in a single file, please\
        \ use `BuildTaxContentFile`.\r\n            \r\nNOTE: This API does not work\
        \ for Tennessee tax holiday scenarios.\n\n### Security Policies\n\n* This\
        \ API requires one of the following user roles: AccountAdmin, AccountOperator,\
        \ AccountUser, CompanyAdmin, CompanyUser, Compliance Root User, ComplianceAdmin,\
        \ ComplianceUser, CSPAdmin, CSPTester, FirmAdmin, FirmUser, ProStoresOperator,\
        \ Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser,\
        \ TreasuryAdmin, TreasuryUser.\n* This API depends on the following active\
        \ services:*Required* (all):  AvaTaxPro.\n"
      operationId: BuildTaxContentFileForLocation
      parameters:
      - name: companyId
        in: path
        description: The ID number of the company that owns this location.
        required: true
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: The ID number of the location to retrieve point-of-sale data.
        required: true
        schema:
          type: integer
          format: int32
      - name: date
        in: query
        description: The date for which point-of-sale data would be calculated (today
          by default)
        schema:
          type: string
          format: date-time
      - name: format
        in: query
        description: The format of the file (JSON by default)
        schema:
          type: string
          enum:
          - Json
          - Csv
          - Xml
          x-enum-metadata:
            name: PointOfSaleFileType
            values:
            - name: Json
              value: 0
            - name: Csv
              value: 1
            - name: Xml
              value: 2
        x-enum-metadata:
          name: PointOfSaleFileType
          values:
          - name: Json
            value: 0
          - name: Csv
            value: 1
          - name: Xml
            value: 2
      - name: partnerId
        in: query
        description: If specified, requests a custom partner-formatted version of
          the file.
        schema:
          type: string
          enum:
          - DMA
          - AX7
          x-enum-metadata:
            name: PointOfSalePartnerId
            values:
            - name: DMA
              value: 1
            - name: AX7
              value: 2
        x-enum-metadata:
          name: PointOfSalePartnerId
          values:
          - name: DMA
            value: 1
          - name: AX7
            value: 2
      - name: includeJurisCodes
        in: query
        description: When true, the file will include jurisdiction codes in the result.
        schema:
          type: boolean
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: string
                format: binary
            application/octet-stream:
              schema:
                type: string
                format: binary
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/pointofsaledata/build:
    post:
      tags:
      - TaxContent
      summary: Build a multi-location tax content file
      description: "Builds a tax content file containing information useful for a\
        \ retail point-of-sale solution.\r\n            \r\nSince tax rates may change\
        \ based on decisions made by a variety of tax authorities, we recommend\r\n\
        that users of this tax content API download new data every day.  Many tax\
        \ authorities may finalize\r\ndecisions on tax changes at unexpected times\
        \ and may make changes in response to legal issues or\r\ngovernmental priorities.\
        \  Any tax content downloaded for future time periods is subject to change\r\
        \nif tax rates or tax laws change.\r\n            \r\nA TaxContent file contains\
        \ a matrix of the taxes that would be charged when you sell any of your\r\n\
        Items at any of your Locations.  To create items, use `CreateItems()`.  To\
        \ create locations, use\r\n`CreateLocations()`.  The file is built by looking\
        \ up the tax profile for your location and your\r\nitem and calculating taxes\
        \ for each in turn.  To include a custom `TaxCode` in this tax content\r\n\
        file, first create the custom tax code using `CreateTaxCodes()` to create\
        \ the custom tax code,\r\nthen use `CreateItems()` to create an item that\
        \ uses the custom tax code.\r\n            \r\nThis data file can be customized\
        \ for specific partner devices and usage conditions.\r\n            \r\nThe\
        \ result of this API is the file you requested in the format you requested\
        \ using the `responseType` field.\r\n            \r\nThis API builds the file\
        \ on demand, and is limited to files with no more than 7500 scenarios.  To\
        \ build a tax content\r\nfile for a single location at a time, please use\
        \ `BuildTaxContentFileForLocation`.\r\n            \r\nNOTE: This API does\
        \ not work for Tennessee tax holiday scenarios.\n\n### Security Policies\n\
        \n* This API requires one of the following user roles: AccountAdmin, AccountOperator,\
        \ AccountUser, CompanyAdmin, CompanyUser, Compliance Root User, ComplianceAdmin,\
        \ ComplianceUser, CSPAdmin, CSPTester, FirmAdmin, FirmUser, ProStoresOperator,\
        \ Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser,\
        \ TreasuryAdmin, TreasuryUser.\n* This API depends on the following active\
        \ services:*Required* (all):  AvaTaxPro.\n"
      operationId: BuildTaxContentFile
      parameters:
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        description: Parameters about the desired file format and report format, specifying
          which company, locations and TaxCodes to include.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/PointOfSaleDataRequestModel'
          application/json:
            schema:
              $ref: '#/components/schemas/PointOfSaleDataRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/PointOfSaleDataRequestModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/PointOfSaleDataRequestModel'
        required: false
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: string
                format: binary
            application/octet-stream:
              schema:
                type: string
                format: binary
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
  /api/v2/taxrates/byaddress:
    get:
      tags:
      - TaxContent
      summary: Sales tax rates for a specified address
      description: "Usage of this API is subject to rate limits.  Users who exceed\
        \ the rate limit will receive HTTP\r\nresponse code 429 - `Too Many Requests`.\r\
        \n            \r\nThis API assumes that you are selling general tangible personal\
        \ property at a retail point-of-sale\r\nlocation in the United States only.\r\
        \n            \r\nFor more powerful tax calculation, please consider upgrading\
        \ to the `CreateTransaction` API,\r\nwhich supports features including, but\
        \ not limited to:\r\n            \r\n* Nexus declarations\r\n* Taxability\
        \ based on product/service type\r\n* Sourcing rules affecting origin/destination\
        \ states\r\n* Customers who are exempt from certain taxes\r\n* States that\
        \ have dollar value thresholds for tax amounts\r\n* Refunds for products purchased\
        \ on a different date\r\n* Detailed jurisdiction names and state assigned\
        \ codes\r\n* And more!\r\n            \r\nPlease see [Estimating Tax with\
        \ REST v2](http://developer.avalara.com/blog/2016/11/04/estimating-tax-with-rest-v2/)\r\
        \nfor information on how to upgrade to the full AvaTax CreateTransaction API."
      operationId: TaxRatesByAddress
      parameters:
      - name: line1
        in: query
        description: The street address of the location.
        required: true
        schema:
          type: string
      - name: line2
        in: query
        description: The street address of the location.
        schema:
          type: string
      - name: line3
        in: query
        description: The street address of the location.
        schema:
          type: string
      - name: city
        in: query
        description: The city name of the location.
        schema:
          type: string
      - name: region
        in: query
        description: "Name or ISO 3166 code identifying the region within the country. This field supports many different region identifiers: Two and three character ISO 3166 region codes. Fully spelled out\
          \ names of the region in ISO supported languages. Common alternative\
          \ spellings for many regions. For a full list of all supported\
          \ codes and names, please see the Definitions API `ListRegions`."
        required: true
        schema:
          type: string
      - name: postalCode
        in: query
        description: The postal code of the location.
        required: true
        schema:
          type: string
      - name: country
        in: query
        description: "Name or ISO 3166 code identifying the country. This field supports many different country identifiers: Two\
          \ character ISO 3166 codes. Three character ISO 3166 codes. Fully\
          \ spelled out names of the country in ISO supported languages. Common\
          \ alternative spellings for many countries. For a full\
          \ list of all supported codes and names, please see the Definitions API\
          \ `ListCountries`."
        required: true
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaxRateModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/taxrates/bypostalcode:
    get:
      tags:
      - TaxContent
      summary: Sales tax rates for a specified country and postal code. This API is
        only available for US postal codes.
      description: "This API is only available for a US postal codes.\r\n        \
        \    \r\nUsage of this API is subject to rate limits.  Users who exceed the\
        \ rate limit will receive HTTP\r\nresponse code 429 - `Too Many Requests`.\r\
        \n            \r\nThis API assumes that you are selling general tangible personal\
        \ property at a retail point-of-sale\r\nlocation in the United States only.\r\
        \n            \r\nFor more powerful tax calculation, please consider upgrading\
        \ to the `CreateTransaction` API,\r\nwhich supports features including, but\
        \ not limited to:\r\n            \r\n* Nexus declarations\r\n* Taxability\
        \ based on product/service type\r\n* Sourcing rules affecting origin/destination\
        \ states\r\n* Customers who are exempt from certain taxes\r\n* States that\
        \ have dollar value thresholds for tax amounts\r\n* Refunds for products purchased\
        \ on a different date\r\n* Detailed jurisdiction names and state assigned\
        \ codes\r\n* And more!\r\n            \r\nPlease see [Estimating Tax with\
        \ REST v2](http://developer.avalara.com/blog/2016/11/04/estimating-tax-with-rest-v2/)\r\
        \nfor information on how to upgrade to the full AvaTax CreateTransaction API."
      operationId: TaxRatesByPostalCode
      parameters:
      - name: country
        in: query
        description: "Name or ISO 3166 code identifying the country. This field supports many different country identifiers: Two\
          \ character ISO 3166 codes. Three character ISO 3166 codes. Fully\
          \ spelled out names of the country in ISO supported languages. Common\
          \ alternative spellings for many countries. For a full\
          \ list of all supported codes and names, please see the Definitions API\
          \ `ListCountries`."
        required: true
        schema:
          type: string
      - name: postalCode
        in: query
        description: The postal code of the location.
        required: true
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaxRateModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/taxratesbyzipcode/download/{date}:
    get:
      tags:
      - TaxContent
      summary: Download a file listing tax rates by postal code
      description: "Download a CSV file containing all five digit postal codes in\
        \ the United States and their sales\r\nand use tax rates for tangible personal\
        \ property.\r\n            \r\nSince tax rates may change based on decisions\
        \ made by a variety of tax authorities, we recommend\r\nthat users of this\
        \ tax content API download new data every day.  Many tax authorities may finalize\r\
        \ndecisions on tax changes at unexpected times and may make changes in response\
        \ to legal issues or\r\ngovernmental priorities.  Any tax content downloaded\
        \ for future time periods is subject to change\r\nif tax rates or tax laws\
        \ change.\r\n            \r\nThis rates file is intended to be used as a default\
        \ for tax calculation when your software cannot\r\ncall the `CreateTransaction`\
        \ API call.  When using this file, your software will be unable to\r\nhandle\
        \ complex tax rules such as:\r\n            \r\n* Zip+4 - This tax file contains\
        \ five digit zip codes only.\r\n* Different product types - This tax file\
        \ contains tangible personal property tax rates only.\r\n* Mixed sourcing\
        \ - This tax file cannot be used to resolve origin-based taxes.\r\n* Threshold-based\
        \ taxes - This tax file does not contain information about thresholds.\r\n\
        \            \r\nIf you use this file to provide default tax rates, please\
        \ ensure that your software calls `CreateTransaction`\r\nto reconcile the\
        \ actual transaction and determine the difference between the estimated general\
        \ tax\r\nrate and the final transaction tax.\r\n            \r\nThe file provided\
        \ by this API is in CSV format with the following columns:\r\n           \
        \ \r\n* ZIP_CODE - The five digit zip code for this record.\r\n* STATE_ABBREV\
        \ - A valid two character US state abbreviation for this record.  Zip codes\
        \ may span multiple states.\r\n* COUNTY_NAME - A valid county name for this\
        \ record.  Zip codes may span multiple counties.\r\n* CITY_NAME - A valid\
        \ city name for this record.  Zip codes may span multiple cities.\r\n* STATE_SALES_TAX\
        \ - The state component of the sales tax rate.\r\n* STATE_USE_TAX - The state\
        \ component of the use tax rate.\r\n* COUNTY_SALES_TAX - The county component\
        \ of the sales tax rate.\r\n* COUNTY_USE_TAX - The county component of the\
        \ use tax rate.\r\n* CITY_SALES_TAX - The city component of the sales tax\
        \ rate.\r\n* CITY_USE_TAX - The city component of the use tax rate.\r\n* TOTAL_SALES_TAX\
        \ - The total tax rate for sales tax for this postal code.  This value may\
        \ not equal the sum of the state/county/city due to special tax jurisdiction\
        \ rules.\r\n* TOTAL_USE_TAX - The total tax rate for use tax for this postal\
        \ code.  This value may not equal the sum of the state/county/city due to\
        \ special tax jurisdiction rules.\r\n* TAX_SHIPPING_ALONE - This column contains\
        \ 'Y' if shipping is taxable.\r\n* TAX_SHIPPING_AND_HANDLING_TOGETHER - This\
        \ column contains 'Y' if shipping and handling are taxable when sent together.\r\
        \n            \r\nFor more detailed tax content, please use the `BuildTaxContentFile`\
        \ API which allows usage of exact items and exact locations.\n\n### Security\
        \ Policies\n\n* This API requires one of the following user roles: AccountAdmin,\
        \ AccountOperator, AccountUser, CompanyAdmin, CompanyUser, Compliance Root\
        \ User, ComplianceAdmin, ComplianceUser, CSPAdmin, CSPTester, FirmAdmin, FirmUser,\
        \ ProStoresOperator, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin,\
        \ TechnicalSupportUser, TreasuryAdmin, TreasuryUser.\n"
      operationId: DownloadTaxRatesByZipCode
      parameters:
      - name: date
        in: path
        description: 'The date for which point-of-sale data would be calculated (today
          by default). Example input: 2016-12-31'
        required: true
        schema:
          type: string
          format: date-time
      - name: region
        in: query
        description: A two character region code which limits results to a specific
          region.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: string
                format: binary
            application/octet-stream:
              schema:
                type: string
                format: binary
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/companies/{companyId}/taxrules:
    get:
      tags:
      - TaxRules
      summary: Retrieve tax rules for this company
      description: "List all taxrule objects attached to this company.\r\n       \
        \     \r\nA tax rule represents a rule that changes the default AvaTax behavior\
        \ for a product or jurisdiction.  Custom tax rules\r\ncan be used to change\
        \ the taxability of an item, to change the tax base of an item, or to change\
        \ the tax rate\r\ncharged when selling an item.  Tax rules can also change\
        \ tax behavior depending on the `entityUseCode` value submitted\r\nwith the\
        \ transaction.\r\n            \r\nYou can create custom tax rules to customize\
        \ the behavior of AvaTax to match specific rules that are custom to your\r\
        \nbusiness.  If you have obtained a ruling from a tax auditor that requires\
        \ custom tax calculations, you can use\r\ncustom tax rules to redefine the\
        \ behavior for your company or item.\r\n            \r\nPlease use custom\
        \ tax rules carefully and ensure that these tax rules match the behavior agreed\
        \ upon with your\r\nauditor, legal representative, and accounting team.\r\n\
        \            \r\nSearch for specific objects using the criteria in the `$filter`\
        \ parameter; full documentation is available on [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/)\
        \ .\r\nPaginate your results using the `$top`, `$skip`, and `$orderby` parameters.\n\
        \n### Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, CSPAdmin, CSPTester,\
        \ SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n"
      operationId: ListTaxRules
      parameters:
      - name: companyId
        in: path
        description: The ID of the company that owns these tax rules
        required: true
        schema:
          type: integer
          format: int32
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br
          />*Not filterable:* taxCode, taxTypeCode, taxRuleProductDetail, rateTypeCode,
          taxTypeGroup, taxSubType, unitOfBasis
        schema:
          type: string
      - name: $include
        in: query
        description: A comma separated list of additional data to retrieve.
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaxRuleModelFetchResult'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
    post:
      tags:
      - TaxRules
      summary: Create a new tax rule
      description: "Create one or more custom tax rules attached to this company.\r\
        \n            \r\nA tax rule represents a rule that changes the default AvaTax\
        \ behavior for a product or jurisdiction.  Custom tax rules\r\ncan be used\
        \ to change the taxability of an item, to change the tax base of an item,\
        \ or to change the tax rate\r\ncharged when selling an item.  Tax rules can\
        \ also change tax behavior depending on the `entityUseCode` value submitted\r\
        \nwith the transaction.\r\n            \r\nYou can create custom tax rules\
        \ to customize the behavior of AvaTax to match specific rules that are custom\
        \ to your\r\nbusiness.  If you have obtained a ruling from a tax auditor that\
        \ requires custom tax calculations, you can use\r\ncustom tax rules to redefine\
        \ the behavior for your company or item.\r\n            \r\nPlease use custom\
        \ tax rules carefully and ensure that these tax rules match the behavior agreed\
        \ upon with your\r\nauditor, legal representative, and accounting team.\n\n\
        ### Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, CompanyAdmin, CSPTester, SSTAdmin, TechnicalSupportAdmin.\n"
      operationId: CreateTaxRules
      parameters:
      - name: companyId
        in: path
        description: The ID of the company that owns this tax rule.
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        description: The tax rule you wish to create.
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/TaxRuleModel'
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/TaxRuleModel'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/TaxRuleModel'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/TaxRuleModel'
        required: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaxRuleModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
  /api/v2/companies/{companyId}/taxrules/{id}:
    get:
      tags:
      - TaxRules
      summary: Retrieve a single tax rule
      description: "Get the taxrule object identified by this URL.\r\n           \
        \ \r\nA tax rule represents a rule that changes the default AvaTax behavior\
        \ for a product or jurisdiction.  Custom tax rules\r\ncan be used to change\
        \ the taxability of an item, to change the tax base of an item, or to change\
        \ the tax rate\r\ncharged when selling an item.  Tax rules can also change\
        \ tax behavior depending on the `entityUseCode` value submitted\r\nwith the\
        \ transaction.\r\n            \r\nYou can create custom tax rules to customize\
        \ the behavior of AvaTax to match specific rules that are custom to your\r\
        \nbusiness.  If you have obtained a ruling from a tax auditor that requires\
        \ custom tax calculations, you can use\r\ncustom tax rules to redefine the\
        \ behavior for your company or item.\r\n            \r\nPlease use custom\
        \ tax rules carefully and ensure that these tax rules match the behavior agreed\
        \ upon with your\r\nauditor, legal representative, and accounting team.\n\n\
        ### Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, CSPAdmin, CSPTester,\
        \ SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n"
      operationId: GetTaxRule
      parameters:
      - name: companyId
        in: path
        description: The ID of the company that owns this tax rule
        required: true
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: The primary key of this tax rule
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaxRuleModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
    put:
      tags:
      - TaxRules
      summary: Update a single tax rule
      description: "Replace the existing custom tax rule object at this URL with an\
        \ updated object.\r\n            \r\nA tax rule represents a rule that changes\
        \ the default AvaTax behavior for a product or jurisdiction.  Custom tax rules\r\
        \ncan be used to change the taxability of an item, to change the tax base\
        \ of an item, or to change the tax rate\r\ncharged when selling an item. \
        \ Tax rules can also change tax behavior depending on the `entityUseCode`\
        \ value submitted\r\nwith the transaction.\r\n            \r\nYou can create\
        \ custom tax rules to customize the behavior of AvaTax to match specific rules\
        \ that are custom to your\r\nbusiness.  If you have obtained a ruling from\
        \ a tax auditor that requires custom tax calculations, you can use\r\ncustom\
        \ tax rules to redefine the behavior for your company or item.\r\n       \
        \     \r\nPlease use custom tax rules carefully and ensure that these tax\
        \ rules match the behavior agreed upon with your\r\nauditor, legal representative,\
        \ and accounting team.\n\n### Security Policies\n\n* This API requires one\
        \ of the following user roles: AccountAdmin, CompanyAdmin, CSPTester, SSTAdmin,\
        \ TechnicalSupportAdmin.\n"
      operationId: UpdateTaxRule
      parameters:
      - name: companyId
        in: path
        description: The ID of the company that this tax rule belongs to.
        required: true
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: The ID of the tax rule you wish to update
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        description: The tax rule you wish to update.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/TaxRuleModel'
          application/json:
            schema:
              $ref: '#/components/schemas/TaxRuleModel'
          text/json:
            schema:
              $ref: '#/components/schemas/TaxRuleModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/TaxRuleModel'
        required: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaxRuleModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
    delete:
      tags:
      - TaxRules
      summary: Delete a single tax rule
      description: "Mark the custom tax rule identified by this URL as deleted.\r\n\
        \            \r\nA tax rule represents a rule that changes the default AvaTax\
        \ behavior for a product or jurisdiction.  Custom tax rules\r\ncan be used\
        \ to change the taxability of an item, to change the tax base of an item,\
        \ or to change the tax rate\r\ncharged when selling an item.  Tax rules can\
        \ also change tax behavior depending on the `entityUseCode` value submitted\r\
        \nwith the transaction.\r\n            \r\nYou can create custom tax rules\
        \ to customize the behavior of AvaTax to match specific rules that are custom\
        \ to your\r\nbusiness.  If you have obtained a ruling from a tax auditor that\
        \ requires custom tax calculations, you can use\r\ncustom tax rules to redefine\
        \ the behavior for your company or item.\r\n            \r\nPlease use custom\
        \ tax rules carefully and ensure that these tax rules match the behavior agreed\
        \ upon with your\r\nauditor, legal representative, and accounting team.\n\n\
        ### Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, CompanyAdmin, CSPTester, SSTAdmin, TechnicalSupportAdmin.\n"
      operationId: DeleteTaxRule
      parameters:
      - name: companyId
        in: path
        description: The ID of the company that owns this tax rule.
        required: true
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: The ID of the tax rule you wish to delete.
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorDetail'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/taxrules:
    get:
      tags:
      - TaxRules
      summary: Retrieve all tax rules
      description: "Get multiple taxrule objects across all companies.\r\n       \
        \     \r\nA tax rule represents a rule that changes the default AvaTax behavior\
        \ for a product or jurisdiction.  Custom tax rules\r\ncan be used to change\
        \ the taxability of an item, to change the tax base of an item, or to change\
        \ the tax rate\r\ncharged when selling an item.  Tax rules can also change\
        \ tax behavior depending on the `entityUseCode` value submitted\r\nwith the\
        \ transaction.\r\n            \r\nYou can create custom tax rules to customize\
        \ the behavior of AvaTax to match specific rules that are custom to your\r\
        \nbusiness.  If you have obtained a ruling from a tax auditor that requires\
        \ custom tax calculations, you can use\r\ncustom tax rules to redefine the\
        \ behavior for your company or item.\r\n            \r\nPlease use custom\
        \ tax rules carefully and ensure that these tax rules match the behavior agreed\
        \ upon with your\r\nauditor, legal representative, and accounting team.\r\n\
        \            \r\nSearch for specific objects using the criteria in the `$filter`\
        \ parameter; full documentation is available on [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/)\
        \ .\r\nPaginate your results using the `$top`, `$skip`, and `$orderby` parameters.\n\
        \n### Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, CSPAdmin, CSPTester,\
        \ SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n"
      operationId: QueryTaxRules
      parameters:
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br
          />*Not filterable:* taxCode, taxTypeCode, taxRuleProductDetail, rateTypeCode,
          taxTypeGroup, taxSubType, unitOfBasis
        schema:
          type: string
      - name: $include
        in: query
        description: A comma separated list of additional data to retrieve.
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaxRuleModelFetchResult'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/companies/{companyCode}/transactions:
    get:
      tags:
      - Transactions
      summary: Retrieve all transactions
      description: "List all transactions attached to this company.\r\n          \
        \  \r\nThis endpoint is limited to returning 1,000 transactions at a time\
        \ maximum.\r\n            \r\nWhen listing transactions, you must specify\
        \ a `date` range filter.  If you do not specify a `$filter` that includes\
        \ a `date` field\r\ncriteria, the query will default to looking at only those\
        \ transactions with `date` in the past 30 days.\r\n            \r\nA transaction\
        \ represents a unique potentially taxable action that your company has recorded,\
        \ and transactions include actions like\r\nsales, purchases, inventory transfer,\
        \ and returns (also called refunds).\r\n            \r\nSearch for specific\
        \ objects using the criteria in the `$filter` parameter; full documentation\
        \ is available on [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/)\
        \ .\r\nPaginate your results using the `$top`, `$skip`, and `$orderby` parameters.\r\
        \n            \r\nYou may specify one or more of the following values in the\
        \ `$include` parameter to fetch additional nested data, using commas to separate\
        \ multiple values:\r\n            \r\n* Lines\r\n* Details (implies lines)\r\
        \n* Summary (implies details)\r\n* Addresses\r\n* SummaryOnly (omit lines\
        \ and details - reduces API response size)\r\n* LinesOnly (omit details -\
        \ reduces API response size)\r\n            \r\nNOTE: If your companyCode\
        \ or transactionCode contains any of these characters /, +, ? or a space please\
        \ use the following encoding before making a request:\r\n* Replace '/' with\
        \ '\\_-ava2f-\\_'  For example: document/Code becomes document_-ava2f-_Code\r\
        \n* Replace '+' with '\\_-ava2b-\\_'  For example: document+Code becomes document_-ava2b-_Code\r\
        \n* Replace '?' with '\\_-ava3f-\\_'  For example: document?Code becomes document_-ava3f-_Code\r\
        \n* Replace '%' with '\\_-ava25-\\_'  For example: document%Code becomes document_-ava25-_Code\r\
        \n* Replace '#' with '\\_-ava23-\\_'  For example: document#Code becomes document_-ava23-_Code\r\
        \n* Replace ' ' with '%20'  For example: document Code becomes document%20Code\n\
        \n### Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, CSPAdmin, CSPTester,\
        \ ProStoresOperator, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin,\
        \ TechnicalSupportUser.\n* This API depends on the following active services:*Required*\
        \ (all):  AvaTaxPro, BasicReturns.\n"
      operationId: ListTransactionsByCompany
      parameters:
      - name: companyCode
        in: path
        description: The company code of the company that recorded this transaction
        required: true
        schema:
          type: string
      - name: dataSourceId
        in: query
        description: Optionally filter transactions to those from a specific data
          source.
        schema:
          type: integer
          format: int32
      - name: $include
        in: query
        description: Specifies objects to include in this fetch call
        schema:
          type: string
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br
          />*Not filterable:* exchangeRateCurrencyCode, totalDiscount, lines, addresses,
          locationTypes, summary, taxDetailsByTaxType, parameters, userDefinedFields,
          messages, invoiceMessages, isFakeTransaction, deliveryTerms
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionModelFetchResult'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/companies/{companyCode}/transactions/{transactionCode}:
    get:
      tags:
      - Transactions
      summary: Retrieve a single transaction by code
      description: "Get the current transaction identified by this company code, transaction\
        \ code, and document type.\r\n            \r\nA transaction is uniquely identified\
        \ by `companyCode`, `code` (often called Transaction Code), and `documentType`.\r\
        \n            \r\nFor compatibility purposes, when this API finds multiple\
        \ transactions with the same transaction code, and if you have not specified\r\
        \nthe `type` parameter to this API, it will default to selecting the `SalesInvoices`\
        \ transaction. To change this behavior, use the\r\noptional `documentType`\
        \ parameter to specify the specific document type you wish to find.\r\n  \
        \          \r\nIf this transaction was adjusted, the return value of this\
        \ API will be the current transaction with this code.\r\n            \r\n\
        You may specify one or more of the following values in the `$include` parameter\
        \ to fetch additional nested data, using commas to separate multiple values:\r\
        \n            \r\n* Lines\r\n* Details (implies lines)\r\n* Summary (implies\
        \ details)\r\n* Addresses\r\n* SummaryOnly (omit lines and details - reduces\
        \ API response size)\r\n* LinesOnly (omit details - reduces API response size)\r\
        \n            \r\nNOTE: If your companyCode or transactionCode contains any\
        \ of these characters /, +, ? or a space please use the following encoding\
        \ before making a request:\r\n* Replace '/' with '\\_-ava2f-\\_'  For example:\
        \ document/Code becomes document_-ava2f-_Code\r\n* Replace '+' with '\\_-ava2b-\\\
        _'  For example: document+Code becomes document_-ava2b-_Code\r\n* Replace\
        \ '?' with '\\_-ava3f-\\_'  For example: document?Code becomes document_-ava3f-_Code\r\
        \n* Replace '%' with '\\_-ava25-\\_'  For example: document%Code becomes document_-ava25-_Code\r\
        \n* Replace '#' with '\\_-ava23-\\_'  For example: document#Code becomes document_-ava23-_Code\r\
        \n* Replace ' ' with '%20'  For example: document Code becomes document%20Code\n\
        \n### Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, CSPAdmin, CSPTester,\
        \ ProStoresOperator, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin,\
        \ TechnicalSupportUser.\n* This API depends on the following active services:*Required*\
        \ (all):  AvaTaxPro, BasicReturns.\n"
      operationId: GetTransactionByCode
      parameters:
      - name: companyCode
        in: path
        description: The company code of the company that recorded this transaction
        required: true
        schema:
          type: string
      - name: transactionCode
        in: path
        description: The transaction code to retrieve
        required: true
        schema:
          type: string
      - name: documentType
        in: query
        description: '(Optional): The document type of the transaction to retrieve'
        schema:
          type: string
          enum:
          - SalesOrder
          - SalesInvoice
          - PurchaseOrder
          - PurchaseInvoice
          - ReturnOrder
          - ReturnInvoice
          - InventoryTransferOrder
          - InventoryTransferInvoice
          - ReverseChargeOrder
          - ReverseChargeInvoice
          - CustomsInvoice
          - CustomsOrder
          - Any
          x-enum-metadata:
            name: DocumentType
            values:
            - name: SalesOrder
              value: 0
            - name: SalesInvoice
              value: 1
            - name: PurchaseOrder
              value: 2
            - name: PurchaseInvoice
              value: 3
            - name: ReturnOrder
              value: 4
            - name: ReturnInvoice
              value: 5
            - name: InventoryTransferOrder
              value: 6
            - name: InventoryTransferInvoice
              value: 7
            - name: ReverseChargeOrder
              value: 8
            - name: ReverseChargeInvoice
              value: 9
            - name: CustomsInvoice
              value: 10
            - name: CustomsOrder
              value: 11
            - name: Any
              value: -1
        x-enum-metadata:
          name: DocumentType
          values:
          - name: SalesOrder
            value: 0
          - name: SalesInvoice
            value: 1
          - name: PurchaseOrder
            value: 2
          - name: PurchaseInvoice
            value: 3
          - name: ReturnOrder
            value: 4
          - name: ReturnInvoice
            value: 5
          - name: InventoryTransferOrder
            value: 6
          - name: InventoryTransferInvoice
            value: 7
          - name: ReverseChargeOrder
            value: 8
          - name: ReverseChargeInvoice
            value: 9
          - name: CustomsInvoice
            value: 10
          - name: CustomsOrder
            value: 11
          - name: Any
            value: -1
      - name: $include
        in: query
        description: Specifies objects to include in this fetch call
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/companies/{companyCode}/transactions/{transactionCode}/adjust:
    post:
      tags:
      - Transactions
      summary: Correct a previously created transaction
      description: "Replaces the current transaction uniquely identified by this URL\
        \ with a new transaction.\r\n            \r\nA transaction represents a unique\
        \ potentially taxable action that your company has recorded, and transactions\
        \ include actions like\r\nsales, purchases, inventory transfer, and returns\
        \ (also called refunds).\r\n            \r\nWhen you adjust a committed transaction,\
        \ the original transaction will be updated with the status code `Adjusted`,\
        \ and\r\nboth revisions will be available for retrieval based on their code\
        \ and ID numbers.\r\nOnly transactions in `Committed` status are reported\
        \ by Avalara Managed Returns.\r\n            \r\nTransactions that have been\
        \ previously reported to a tax authority by Avalara Managed Returns are considered\
        \ `locked` and are\r\nno longer available for adjustments.\r\n           \
        \ \r\nYou may specify one or more of the following values in the `$include`\
        \ parameter to fetch additional nested data, using commas to separate multiple\
        \ values:\r\n            \r\n* Lines\r\n* Details (implies lines)\r\n* Summary\
        \ (implies details)\r\n* Addresses\r\n* SummaryOnly (omit lines and details\
        \ - reduces API response size)\r\n* LinesOnly (omit details - reduces API\
        \ response size)\r\n* TaxDetailsByTaxType - Includes the aggregated tax, exempt\
        \ tax, taxable and non-taxable for each tax type returned in the transaction\
        \ summary.\r\n            \r\nNOTE: If your companyCode or transactionCode\
        \ contains any of these characters /, +, ? or a space please use the following\
        \ encoding before making a request:\r\n* Replace '/' with '\\_-ava2f-\\_'\
        \  For example: document/Code becomes document_-ava2f-_Code\r\n* Replace '+'\
        \ with '\\_-ava2b-\\_'  For example: document+Code becomes document_-ava2b-_Code\r\
        \n* Replace '?' with '\\_-ava3f-\\_'  For example: document?Code becomes document_-ava3f-_Code\r\
        \n* Replace '%' with '\\_-ava25-\\_'  For example: document%Code becomes document_-ava25-_Code\r\
        \n* Replace '#' with '\\_-ava23-\\_'  For example: document#Code becomes document_-ava23-_Code\r\
        \n* Replace ' ' with '%20'  For example: document Code becomes document%20Code\n\
        \n### Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, AccountOperator, CompanyAdmin, CSPTester, SSTAdmin, TechnicalSupportAdmin,\
        \ TechnicalSupportUser.\n* This API depends on the following active services:*Required*\
        \ (all):  AvaTaxPro, BasicReturns.\n"
      operationId: AdjustTransaction
      parameters:
      - name: companyCode
        in: path
        description: The company code of the company that recorded this transaction
        required: true
        schema:
          type: string
      - name: transactionCode
        in: path
        description: The transaction code to adjust
        required: true
        schema:
          type: string
      - name: documentType
        in: query
        description: '(Optional): The document type of the transaction to adjust.'
        schema:
          type: string
          enum:
          - SalesOrder
          - SalesInvoice
          - PurchaseOrder
          - PurchaseInvoice
          - ReturnOrder
          - ReturnInvoice
          - InventoryTransferOrder
          - InventoryTransferInvoice
          - ReverseChargeOrder
          - ReverseChargeInvoice
          - CustomsInvoice
          - CustomsOrder
          - Any
          x-enum-metadata:
            name: DocumentType
            values:
            - name: SalesOrder
              value: 0
            - name: SalesInvoice
              value: 1
            - name: PurchaseOrder
              value: 2
            - name: PurchaseInvoice
              value: 3
            - name: ReturnOrder
              value: 4
            - name: ReturnInvoice
              value: 5
            - name: InventoryTransferOrder
              value: 6
            - name: InventoryTransferInvoice
              value: 7
            - name: ReverseChargeOrder
              value: 8
            - name: ReverseChargeInvoice
              value: 9
            - name: CustomsInvoice
              value: 10
            - name: CustomsOrder
              value: 11
            - name: Any
              value: -1
        x-enum-metadata:
          name: DocumentType
          values:
          - name: SalesOrder
            value: 0
          - name: SalesInvoice
            value: 1
          - name: PurchaseOrder
            value: 2
          - name: PurchaseInvoice
            value: 3
          - name: ReturnOrder
            value: 4
          - name: ReturnInvoice
            value: 5
          - name: InventoryTransferOrder
            value: 6
          - name: InventoryTransferInvoice
            value: 7
          - name: ReverseChargeOrder
            value: 8
          - name: ReverseChargeInvoice
            value: 9
          - name: CustomsInvoice
            value: 10
          - name: CustomsOrder
            value: 11
          - name: Any
            value: -1
      - name: $include
        in: query
        description: Specifies objects to include in this fetch call
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        description: The adjustment you wish to make
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AdjustTransactionModel'
          application/json:
            schema:
              $ref: '#/components/schemas/AdjustTransactionModel'
          text/json:
            schema:
              $ref: '#/components/schemas/AdjustTransactionModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AdjustTransactionModel'
        required: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
  /api/v2/companies/{companyCode}/transactions/{transactionCode}/audit:
    get:
      tags:
      - Transactions
      summary: Get audit information about a transaction
      description: "Retrieve audit information about a transaction stored in AvaTax.\r\
        \n            \r\nThe `AuditTransaction` API retrieves audit information related\
        \ to a specific transaction.  This audit\r\ninformation includes the following:\r\
        \n            \r\n* The `CompanyId` of the company that created the transaction\r\
        \n* The server timestamp representing the exact server time when the transaction\
        \ was created\r\n* The server duration - how long it took to process this\
        \ transaction\r\n* Whether exact API call details were logged\r\n* A reconstructed\
        \ API call showing what the original CreateTransaction call looked like\r\n\
        \            \r\nThis API can be used to examine information about a previously\
        \ created transaction.\r\n            \r\nA transaction represents a unique\
        \ potentially taxable action that your company has recorded, and transactions\
        \ include actions like\r\nsales, purchases, inventory transfer, and returns\
        \ (also called refunds).\r\n            \r\nNOTE: If your companyCode or transactionCode\
        \ contains any of these characters /, +, ? or a space please use the following\
        \ encoding before making a request:\r\n* Replace '/' with '\\_-ava2f-\\_'\
        \  For example: document/Code becomes document_-ava2f-_Code\r\n* Replace '+'\
        \ with '\\_-ava2b-\\_'  For example: document+Code becomes document_-ava2b-_Code\r\
        \n* Replace '?' with '\\_-ava3f-\\_'  For example: document?Code becomes document_-ava3f-_Code\r\
        \n* Replace '%' with '\\_-ava25-\\_'  For example: document%Code becomes document_-ava25-_Code\r\
        \n* Replace '#' with '\\_-ava23-\\_'  For example: document#Code becomes document_-ava23-_Code\r\
        \n* Replace ' ' with '%20'  For example: document Code becomes document%20Code\n\
        \n### Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, CSPAdmin, CSPTester,\
        \ ProStoresOperator, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin,\
        \ TechnicalSupportUser.\n* This API depends on the following active services:*Required*\
        \ (all):  AvaTaxPro, BasicReturns.\n"
      operationId: AuditTransaction
      parameters:
      - name: companyCode
        in: path
        description: The code identifying the company that owns this transaction
        required: true
        schema:
          type: string
      - name: transactionCode
        in: path
        description: The code identifying the transaction
        required: true
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTransactionModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/companies/{companyCode}/transactions/{transactionCode}/changecode:
    post:
      tags:
      - Transactions
      summary: Change a transaction's code
      description: "Renames a transaction uniquely identified by this URL by changing\
        \ its `code` value.\r\n            \r\nThis API is available as long as the\
        \ transaction is in `saved` or `posted` status.  When a transaction\r\nis\
        \ `committed`, it can be modified by using the [AdjustTransaction](https://developer.avalara.com/api-reference/avatax/rest/v2/methods/Transactions/AdjustTransaction/)\
        \ method.\r\n            \r\nAfter this API call succeeds, the transaction\
        \ will have a new URL matching its new `code`.\r\n            \r\nIf you have\
        \ more than one document with the same `code`, specify the `documentType`\
        \ parameter to choose between them.\r\n            \r\nA transaction represents\
        \ a unique potentially taxable action that your company has recorded, and\
        \ transactions include actions like\r\nsales, purchases, inventory transfer,\
        \ and returns (also called refunds).\r\n            \r\nYou may specify one\
        \ or more of the following values in the `$include` parameter to fetch additional\
        \ nested data, using commas to separate multiple values:\r\n            \r\
        \n* Lines\r\n* Details (implies lines)\r\n* Summary (implies details)\r\n\
        * Addresses\r\n* SummaryOnly (omit lines and details - reduces API response\
        \ size)\r\n* LinesOnly (omit details - reduces API response size)\r\n* TaxDetailsByTaxType\
        \ - Includes the aggregated tax, exempt tax, taxable and non-taxable for each\
        \ tax type returned in the transaction summary.\r\n            \r\nNOTE: If\
        \ your companyCode or transactionCode contains any of these characters /,\
        \ +, ? or a space please use the following encoding before making a request:\r\
        \n* Replace '/' with '\\_-ava2f-\\_'  For example: document/Code becomes document_-ava2f-_Code\r\
        \n* Replace '+' with '\\_-ava2b-\\_'  For example: document+Code becomes document_-ava2b-_Code\r\
        \n* Replace '?' with '\\_-ava3f-\\_'  For example: document?Code becomes document_-ava3f-_Code\r\
        \n* Replace '%' with '\\_-ava25-\\_'  For example: document%Code becomes document_-ava25-_Code\r\
        \n* Replace '#' with '\\_-ava23-\\_'  For example: document#Code becomes document_-ava23-_Code\r\
        \n* Replace ' ' with '%20'  For example: document Code becomes document%20Code\n\
        \n### Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, CSPTester,\
        \ ProStoresOperator, SSTAdmin, TechnicalSupportAdmin.\n* This API depends\
        \ on the following active services:*Required* (all):  AvaTaxPro, BasicReturns.\n"
      operationId: ChangeTransactionCode
      parameters:
      - name: companyCode
        in: path
        description: The company code of the company that recorded this transaction
        required: true
        schema:
          type: string
      - name: transactionCode
        in: path
        description: The transaction code to change
        required: true
        schema:
          type: string
      - name: documentType
        in: query
        description: '(Optional): The document type of the transaction to change document
          code. If not provided, the default is SalesInvoice.'
        schema:
          type: string
          enum:
          - SalesOrder
          - SalesInvoice
          - PurchaseOrder
          - PurchaseInvoice
          - ReturnOrder
          - ReturnInvoice
          - InventoryTransferOrder
          - InventoryTransferInvoice
          - ReverseChargeOrder
          - ReverseChargeInvoice
          - CustomsInvoice
          - CustomsOrder
          - Any
          x-enum-metadata:
            name: DocumentType
            values:
            - name: SalesOrder
              value: 0
            - name: SalesInvoice
              value: 1
            - name: PurchaseOrder
              value: 2
            - name: PurchaseInvoice
              value: 3
            - name: ReturnOrder
              value: 4
            - name: ReturnInvoice
              value: 5
            - name: InventoryTransferOrder
              value: 6
            - name: InventoryTransferInvoice
              value: 7
            - name: ReverseChargeOrder
              value: 8
            - name: ReverseChargeInvoice
              value: 9
            - name: CustomsInvoice
              value: 10
            - name: CustomsOrder
              value: 11
            - name: Any
              value: -1
        x-enum-metadata:
          name: DocumentType
          values:
          - name: SalesOrder
            value: 0
          - name: SalesInvoice
            value: 1
          - name: PurchaseOrder
            value: 2
          - name: PurchaseInvoice
            value: 3
          - name: ReturnOrder
            value: 4
          - name: ReturnInvoice
            value: 5
          - name: InventoryTransferOrder
            value: 6
          - name: InventoryTransferInvoice
            value: 7
          - name: ReverseChargeOrder
            value: 8
          - name: ReverseChargeInvoice
            value: 9
          - name: CustomsInvoice
            value: 10
          - name: CustomsOrder
            value: 11
          - name: Any
            value: -1
      - name: $include
        in: query
        description: Specifies objects to include in this fetch call
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        description: The code change request you wish to execute
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ChangeTransactionCodeModel'
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeTransactionCodeModel'
          text/json:
            schema:
              $ref: '#/components/schemas/ChangeTransactionCodeModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ChangeTransactionCodeModel'
        required: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
  /api/v2/companies/{companyCode}/transactions/{transactionCode}/commit:
    post:
      tags:
      - Transactions
      summary: Commit a transaction for reporting
      description: "Marks a transaction by changing its status to `Committed`.\r\n\
        \            \r\nTransactions that are committed are available to be reported\
        \ to a tax authority by Avalara Managed Returns.\r\n            \r\nA transaction\
        \ represents a unique potentially taxable action that your company has recorded,\
        \ and transactions include actions like\r\nsales, purchases, inventory transfer,\
        \ and returns (also called refunds).\r\n            \r\nIf you have more than\
        \ one document with the same `code`, specify the `documentType` parameter\
        \ to choose between them.\r\n            \r\nAny changes made to a committed\
        \ transaction will generate a transaction history.\r\n            \r\nYou\
        \ may specify one or more of the following values in the `$include` parameter\
        \ to fetch additional nested data, using commas to separate multiple values:\r\
        \n            \r\n* Lines\r\n* Details (implies lines)\r\n* Summary (implies\
        \ details)\r\n* Addresses\r\n* SummaryOnly (omit lines and details - reduces\
        \ API response size)\r\n* LinesOnly (omit details - reduces API response size)\r\
        \n* TaxDetailsByTaxType - Includes the aggregated tax, exempt tax, taxable\
        \ and non-taxable for each tax type returned in the transaction summary.\r\
        \n            \r\nNOTE: If your companyCode or transactionCode contains any\
        \ of these characters /, +, ? or a space please use the following encoding\
        \ before making a request:\r\n* Replace '/' with '\\_-ava2f-\\_'  For example:\
        \ document/Code becomes document_-ava2f-_Code\r\n* Replace '+' with '\\_-ava2b-\\\
        _'  For example: document+Code becomes document_-ava2b-_Code\r\n* Replace\
        \ '?' with '\\_-ava3f-\\_'  For example: document?Code becomes document_-ava3f-_Code\r\
        \n* Replace '%' with '\\_-ava25-\\_'  For example: document%Code becomes document_-ava25-_Code\r\
        \n* Replace '#' with '\\_-ava23-\\_'  For example: document#Code becomes document_-ava23-_Code\r\
        \n* Replace ' ' with '%20'  For example: document Code becomes document%20Code\n\
        \n### Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, CSPTester,\
        \ ProStoresOperator, SSTAdmin, TechnicalSupportAdmin.\n"
      operationId: CommitTransaction
      parameters:
      - name: companyCode
        in: path
        description: The company code of the company that recorded this transaction
        required: true
        schema:
          type: string
      - name: transactionCode
        in: path
        description: The transaction code to commit
        required: true
        schema:
          type: string
      - name: documentType
        in: query
        description: '(Optional): The document type of the transaction to commit.
          If not provided, the default is SalesInvoice.'
        schema:
          type: string
          enum:
          - SalesOrder
          - SalesInvoice
          - PurchaseOrder
          - PurchaseInvoice
          - ReturnOrder
          - ReturnInvoice
          - InventoryTransferOrder
          - InventoryTransferInvoice
          - ReverseChargeOrder
          - ReverseChargeInvoice
          - CustomsInvoice
          - CustomsOrder
          - Any
          x-enum-metadata:
            name: DocumentType
            values:
            - name: SalesOrder
              value: 0
            - name: SalesInvoice
              value: 1
            - name: PurchaseOrder
              value: 2
            - name: PurchaseInvoice
              value: 3
            - name: ReturnOrder
              value: 4
            - name: ReturnInvoice
              value: 5
            - name: InventoryTransferOrder
              value: 6
            - name: InventoryTransferInvoice
              value: 7
            - name: ReverseChargeOrder
              value: 8
            - name: ReverseChargeInvoice
              value: 9
            - name: CustomsInvoice
              value: 10
            - name: CustomsOrder
              value: 11
            - name: Any
              value: -1
        x-enum-metadata:
          name: DocumentType
          values:
          - name: SalesOrder
            value: 0
          - name: SalesInvoice
            value: 1
          - name: PurchaseOrder
            value: 2
          - name: PurchaseInvoice
            value: 3
          - name: ReturnOrder
            value: 4
          - name: ReturnInvoice
            value: 5
          - name: InventoryTransferOrder
            value: 6
          - name: InventoryTransferInvoice
            value: 7
          - name: ReverseChargeOrder
            value: 8
          - name: ReverseChargeInvoice
            value: 9
          - name: CustomsInvoice
            value: 10
          - name: CustomsOrder
            value: 11
          - name: Any
            value: -1
      - name: $include
        in: query
        description: Specifies objects to include in this fetch call
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        description: The commit request you wish to execute
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CommitTransactionModel'
          application/json:
            schema:
              $ref: '#/components/schemas/CommitTransactionModel'
          text/json:
            schema:
              $ref: '#/components/schemas/CommitTransactionModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CommitTransactionModel'
        required: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
  /api/v2/companies/{companyCode}/transactions/{transactionCode}/lock:
    post:
      tags:
      - Transactions
      summary: Lock a single transaction
      description: "Lock a transaction uniquely identified by this URL.\r\n      \
        \      \r\nThis API is mainly used for connector developers to simulate what\
        \ happens when the Returns product locks a document.\r\nAfter this API call\
        \ succeeds, the document will be locked and can't be voided or adjusted.\r\
        \n            \r\nThis API is only available to customers in Sandbox with\
        \ AvaTaxPro subscription.  On production servers, this API is available by\
        \ invitation only.\r\n            \r\nIf you have more than one document with\
        \ the same `code`, specify the `documentType` parameter to choose between\
        \ them.\r\n            \r\nA transaction represents a unique potentially taxable\
        \ action that your company has recorded, and transactions include actions\
        \ like\r\nsales, purchases, inventory transfer, and returns (also called refunds).\r\
        \n            \r\nYou may specify one or more of the following values in the\
        \ `$include` parameter to fetch additional nested data, using commas to separate\
        \ multiple values:\r\n            \r\n* Lines\r\n* Details (implies lines)\r\
        \n* Summary (implies details)\r\n* Addresses\r\n* SummaryOnly (omit lines\
        \ and details - reduces API response size)\r\n* LinesOnly (omit details -\
        \ reduces API response size)\r\n* TaxDetailsByTaxType - Includes the aggregated\
        \ tax, exempt tax, taxable and non-taxable for each tax type returned in the\
        \ transaction summary.\r\n            \r\nNOTE: If your companyCode or transactionCode\
        \ contains any of these characters /, +, ? or a space please use the following\
        \ encoding before making a request:\r\n* Replace '/' with '\\_-ava2f-\\_'\
        \  For example: document/Code becomes document_-ava2f-_Code\r\n* Replace '+'\
        \ with '\\_-ava2b-\\_'  For example: document+Code becomes document_-ava2b-_Code\r\
        \n* Replace '?' with '\\_-ava3f-\\_'  For example: document?Code becomes document_-ava3f-_Code\r\
        \n* Replace '%' with '\\_-ava25-\\_'  For example: document%Code becomes document_-ava25-_Code\r\
        \n* Replace '#' with '\\_-ava23-\\_'  For example: document#Code becomes document_-ava23-_Code\r\
        \n* Replace ' ' with '%20'  For example: document Code becomes document%20Code\n\
        \n### Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, CSPTester,\
        \ SSTAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n* This API depends\
        \ on the following active services:*Returns* (at least one of):  Mrs, MRSComplianceManager,\
        \ AvaTaxCsp.*Firm Managed* (for accounts managed by a firm):  ARA, ARAManaged.\n"
      operationId: LockTransaction
      parameters:
      - name: companyCode
        in: path
        description: The company code of the company that recorded this transaction
        required: true
        schema:
          type: string
      - name: transactionCode
        in: path
        description: The transaction code to lock
        required: true
        schema:
          type: string
      - name: documentType
        in: query
        description: '(Optional): The document type of the transaction to lock. If
          not provided, the default is SalesInvoice.'
        schema:
          type: string
          enum:
          - SalesOrder
          - SalesInvoice
          - PurchaseOrder
          - PurchaseInvoice
          - ReturnOrder
          - ReturnInvoice
          - InventoryTransferOrder
          - InventoryTransferInvoice
          - ReverseChargeOrder
          - ReverseChargeInvoice
          - CustomsInvoice
          - CustomsOrder
          - Any
          x-enum-metadata:
            name: DocumentType
            values:
            - name: SalesOrder
              value: 0
            - name: SalesInvoice
              value: 1
            - name: PurchaseOrder
              value: 2
            - name: PurchaseInvoice
              value: 3
            - name: ReturnOrder
              value: 4
            - name: ReturnInvoice
              value: 5
            - name: InventoryTransferOrder
              value: 6
            - name: InventoryTransferInvoice
              value: 7
            - name: ReverseChargeOrder
              value: 8
            - name: ReverseChargeInvoice
              value: 9
            - name: CustomsInvoice
              value: 10
            - name: CustomsOrder
              value: 11
            - name: Any
              value: -1
        x-enum-metadata:
          name: DocumentType
          values:
          - name: SalesOrder
            value: 0
          - name: SalesInvoice
            value: 1
          - name: PurchaseOrder
            value: 2
          - name: PurchaseInvoice
            value: 3
          - name: ReturnOrder
            value: 4
          - name: ReturnInvoice
            value: 5
          - name: InventoryTransferOrder
            value: 6
          - name: InventoryTransferInvoice
            value: 7
          - name: ReverseChargeOrder
            value: 8
          - name: ReverseChargeInvoice
            value: 9
          - name: CustomsInvoice
            value: 10
          - name: CustomsOrder
            value: 11
          - name: Any
            value: -1
      - name: $include
        in: query
        description: Specifies objects to include in this fetch call
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        description: The lock request you wish to execute
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/LockTransactionModel'
          application/json:
            schema:
              $ref: '#/components/schemas/LockTransactionModel'
          text/json:
            schema:
              $ref: '#/components/schemas/LockTransactionModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/LockTransactionModel'
        required: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
  /api/v2/companies/{companyCode}/transactions/{transactionCode}/refund:
    post:
      tags:
      - Transactions
      summary: Create a refund for a transaction
      description: "Create a refund for a transaction.\r\n            \r\nThe `RefundTransaction`\
        \ API allows you to quickly and easily create a `ReturnInvoice` representing\
        \ a refund\r\nfor a previously created `SalesInvoice` transaction.  You can\
        \ choose to create a full or partial refund, and\r\nspecify individual line\
        \ items from the original sale for refund.\r\n            \r\nThe `RefundTransaction`\
        \ API ensures that the tax amount you refund to the customer exactly matches\
        \ the tax that\r\nwas calculated during the original transaction, regardless\
        \ of any changes to your company's configuration, rules,\r\nnexus, or any\
        \ other setting.\r\n            \r\nThis API is intended to be a shortcut\
        \ to allow you to quickly and accurately generate a refund for the following\r\
        \ncommon refund scenarios:\r\n            \r\n* A full refund of a previous\
        \ sale\r\n* Refunding the tax that was charged on a previous sale, when the\
        \ customer provides an exemption certificate after the purchase\r\n* Refunding\
        \ one or more items (lines) from a previous sale\r\n* Granting a customer\
        \ a percentage refund of a previous sale\r\n            \r\nFor more complex\
        \ scenarios than the ones above, please use `CreateTransaction` with document\
        \ type `ReturnInvoice` to\r\ncreate a custom refund transaction.\r\n     \
        \       \r\nYou may specify one or more of the following values in the `$include`\
        \ parameter to fetch additional nested data, using commas to separate multiple\
        \ values:\r\n            \r\n* Lines\r\n* Details (implies lines)\r\n* Summary\
        \ (implies details)\r\n* Addresses\r\n* SummaryOnly (omit lines and details\
        \ - reduces API response size)\r\n* LinesOnly (omit details - reduces API\
        \ response size)\r\n* TaxDetailsByTaxType - Includes the aggregated tax, exempt\
        \ tax, taxable and non-taxable for each tax type returned in the transaction\
        \ summary.\r\nIf you omit the `$include` parameter, the API will assume you\
        \ want `Summary,Addresses`.\r\n            \r\nNOTE: If your companyCode or\
        \ transactionCode contains any of these characters /, +, ? or a space please\
        \ use the following encoding before making a request:\r\n* Replace '/' with\
        \ '\\_-ava2f-\\_'  For example: document/Code becomes document_-ava2f-_Code\r\
        \n* Replace '+' with '\\_-ava2b-\\_'  For example: document+Code becomes document_-ava2b-_Code\r\
        \n* Replace '?' with '\\_-ava3f-\\_'  For example: document?Code becomes document_-ava3f-_Code\r\
        \n* Replace '%' with '\\_-ava25-\\_'  For example: document%Code becomes document_-ava25-_Code\r\
        \n* Replace '#' with '\\_-ava23-\\_'  For example: document#Code becomes document_-ava23-_Code\r\
        \n* Replace ' ' with '%20'  For example: document Code becomes document%20Code\n\
        \n### Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, CSPTester,\
        \ SSTAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n* This API depends\
        \ on the following active services:*Required* (all):  AvaTaxPro, BasicReturns.\n"
      operationId: RefundTransaction
      parameters:
      - name: companyCode
        in: path
        description: The code of the company that made the original sale
        required: true
        schema:
          type: string
      - name: transactionCode
        in: path
        description: The transaction code of the original sale
        required: true
        schema:
          type: string
      - name: $include
        in: query
        description: Specifies objects to include in the response after transaction
          is created
        schema:
          type: string
      - name: documentType
        in: query
        description: '(Optional): The document type of the transaction to refund.
          If not provided, the default is SalesInvoice.'
        schema:
          type: string
          enum:
          - SalesOrder
          - SalesInvoice
          - PurchaseOrder
          - PurchaseInvoice
          - ReturnOrder
          - ReturnInvoice
          - InventoryTransferOrder
          - InventoryTransferInvoice
          - ReverseChargeOrder
          - ReverseChargeInvoice
          - CustomsInvoice
          - CustomsOrder
          - Any
          x-enum-metadata:
            name: DocumentType
            values:
            - name: SalesOrder
              value: 0
            - name: SalesInvoice
              value: 1
            - name: PurchaseOrder
              value: 2
            - name: PurchaseInvoice
              value: 3
            - name: ReturnOrder
              value: 4
            - name: ReturnInvoice
              value: 5
            - name: InventoryTransferOrder
              value: 6
            - name: InventoryTransferInvoice
              value: 7
            - name: ReverseChargeOrder
              value: 8
            - name: ReverseChargeInvoice
              value: 9
            - name: CustomsInvoice
              value: 10
            - name: CustomsOrder
              value: 11
            - name: Any
              value: -1
        x-enum-metadata:
          name: DocumentType
          values:
          - name: SalesOrder
            value: 0
          - name: SalesInvoice
            value: 1
          - name: PurchaseOrder
            value: 2
          - name: PurchaseInvoice
            value: 3
          - name: ReturnOrder
            value: 4
          - name: ReturnInvoice
            value: 5
          - name: InventoryTransferOrder
            value: 6
          - name: InventoryTransferInvoice
            value: 7
          - name: ReverseChargeOrder
            value: 8
          - name: ReverseChargeInvoice
            value: 9
          - name: CustomsInvoice
            value: 10
          - name: CustomsOrder
            value: 11
          - name: Any
            value: -1
      - name: useTaxDateOverride
        in: query
        description: '(Optional): If set to true, processes refund using taxDateOverride
          rather than taxAmountOverride (Note: taxAmountOverride is not allowed for
          SST states).'
        schema:
          type: boolean
          default: false
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        description: Information about the refund to create
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/RefundTransactionModel'
          application/json:
            schema:
              $ref: '#/components/schemas/RefundTransactionModel'
          text/json:
            schema:
              $ref: '#/components/schemas/RefundTransactionModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/RefundTransactionModel'
        required: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
  /api/v2/companies/{companyCode}/transactions/{transactionCode}/settle:
    post:
      tags:
      - Transactions
      summary: Perform multiple actions on a transaction
      description: "Performs one or more actions against the current transaction uniquely\
        \ identified by this URL.\r\n            \r\nThe `SettleTransaction` API call\
        \ can perform the work of `ChangeCode`, `VerifyTransaction`, and `CommitTransaction`.\r\
        \n            \r\nA transaction represents a unique potentially taxable action\
        \ that your company has recorded, and transactions include actions like\r\n\
        sales, purchases, inventory transfer, and returns (also called refunds).\r\
        \n            \r\nIf you have more than one document with the same `code`,\
        \ specify the `documentType` parameter to choose between them.\r\n       \
        \     \r\nThis API is available for users who want to execute more than one\
        \ action at a time.\r\n            \r\nYou may specify one or more of the\
        \ following values in the `$include` parameter to fetch additional nested\
        \ data, using commas to separate multiple values:\r\n            \r\n* Lines\r\
        \n* Details (implies lines)\r\n* Summary (implies details)\r\n* Addresses\r\
        \n* SummaryOnly (omit lines and details - reduces API response size)\r\n*\
        \ LinesOnly (omit details - reduces API response size)\r\n* TaxDetailsByTaxType\
        \ - Includes the aggregated tax, exempt tax, taxable and non-taxable for each\
        \ tax type returned in the transaction summary.\r\n            \r\nNOTE: If\
        \ your companyCode or transactionCode contains any of these characters /,\
        \ +, ? or a space please use the following encoding before making a request:\r\
        \n* Replace '/' with '\\_-ava2f-\\_'  For example: document/Code becomes document_-ava2f-_Code\r\
        \n* Replace '+' with '\\_-ava2b-\\_'  For example: document+Code becomes document_-ava2b-_Code\r\
        \n* Replace '?' with '\\_-ava3f-\\_'  For example: document?Code becomes document_-ava3f-_Code\r\
        \n* Replace '%' with '\\_-ava25-\\_'  For example: document%Code becomes document_-ava25-_Code\r\
        \n* Replace '#' with '\\_-ava23-\\_'  For example: document#Code becomes document_-ava23-_Code\r\
        \n* Replace ' ' with '%20'  For example: document Code becomes document%20Code\n\
        \n### Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, CSPTester,\
        \ ProStoresOperator, SSTAdmin, TechnicalSupportAdmin.\n"
      operationId: SettleTransaction
      parameters:
      - name: companyCode
        in: path
        description: The company code of the company that recorded this transaction
        required: true
        schema:
          type: string
      - name: transactionCode
        in: path
        description: The transaction code to settle
        required: true
        schema:
          type: string
      - name: documentType
        in: query
        description: '(Optional): The document type of the transaction to settle.
          If not provided, the default is SalesInvoice.'
        schema:
          type: string
          enum:
          - SalesOrder
          - SalesInvoice
          - PurchaseOrder
          - PurchaseInvoice
          - ReturnOrder
          - ReturnInvoice
          - InventoryTransferOrder
          - InventoryTransferInvoice
          - ReverseChargeOrder
          - ReverseChargeInvoice
          - CustomsInvoice
          - CustomsOrder
          - Any
          x-enum-metadata:
            name: DocumentType
            values:
            - name: SalesOrder
              value: 0
            - name: SalesInvoice
              value: 1
            - name: PurchaseOrder
              value: 2
            - name: PurchaseInvoice
              value: 3
            - name: ReturnOrder
              value: 4
            - name: ReturnInvoice
              value: 5
            - name: InventoryTransferOrder
              value: 6
            - name: InventoryTransferInvoice
              value: 7
            - name: ReverseChargeOrder
              value: 8
            - name: ReverseChargeInvoice
              value: 9
            - name: CustomsInvoice
              value: 10
            - name: CustomsOrder
              value: 11
            - name: Any
              value: -1
        x-enum-metadata:
          name: DocumentType
          values:
          - name: SalesOrder
            value: 0
          - name: SalesInvoice
            value: 1
          - name: PurchaseOrder
            value: 2
          - name: PurchaseInvoice
            value: 3
          - name: ReturnOrder
            value: 4
          - name: ReturnInvoice
            value: 5
          - name: InventoryTransferOrder
            value: 6
          - name: InventoryTransferInvoice
            value: 7
          - name: ReverseChargeOrder
            value: 8
          - name: ReverseChargeInvoice
            value: 9
          - name: CustomsInvoice
            value: 10
          - name: CustomsOrder
            value: 11
          - name: Any
            value: -1
      - name: $include
        in: query
        description: Specifies objects to include in this fetch call
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        description: The data from an external system to reconcile against AvaTax
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/SettleTransactionModel'
          application/json:
            schema:
              $ref: '#/components/schemas/SettleTransactionModel'
          text/json:
            schema:
              $ref: '#/components/schemas/SettleTransactionModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SettleTransactionModel'
        required: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
  /api/v2/companies/{companyCode}/transactions/{transactionCode}/types/{documentType}:
    get:
      tags:
      - Transactions
      summary: Retrieve a single transaction by code
      description: "DEPRECATED: Please use the `GetTransactionByCode` API instead.\r\
        \n            \r\nNOTE: If your companyCode or transactionCode contains any\
        \ of these characters /, +, ? or a space please use the following encoding\
        \ before making a request:\r\n* Replace '/' with '\\_-ava2f-\\_'  For example:\
        \ document/Code becomes document_-ava2f-_Code\r\n* Replace '+' with '\\_-ava2b-\\\
        _'  For example: document+Code becomes document_-ava2b-_Code\r\n* Replace\
        \ '?' with '\\_-ava3f-\\_'  For example: document?Code becomes document_-ava3f-_Code\r\
        \n* Replace '%' with '\\_-ava25-\\_'  For example: document%Code becomes document_-ava25-_Code\r\
        \n* Replace '#' with '\\_-ava23-\\_'  For example: document#Code becomes document_-ava23-_Code\r\
        \n* Replace ' ' with '%20'  For example: document Code becomes document%20Code\n\
        \n### Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, CSPAdmin, CSPTester,\
        \ ProStoresOperator, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin,\
        \ TechnicalSupportUser.\n* This API depends on the following active services:*Required*\
        \ (all):  AvaTaxPro, BasicReturns.\n"
      operationId: GetTransactionByCodeAndType
      parameters:
      - name: companyCode
        in: path
        description: The company code of the company that recorded this transaction
        required: true
        schema:
          type: string
      - name: transactionCode
        in: path
        description: The transaction code to retrieve
        required: true
        schema:
          type: string
      - name: documentType
        in: path
        description: The transaction type to retrieve
        required: true
        schema:
          type: string
          enum:
          - SalesOrder
          - SalesInvoice
          - PurchaseOrder
          - PurchaseInvoice
          - ReturnOrder
          - ReturnInvoice
          - InventoryTransferOrder
          - InventoryTransferInvoice
          - ReverseChargeOrder
          - ReverseChargeInvoice
          - CustomsInvoice
          - CustomsOrder
          - Any
          x-enum-metadata:
            name: DocumentType
            values:
            - name: SalesOrder
              value: 0
            - name: SalesInvoice
              value: 1
            - name: PurchaseOrder
              value: 2
            - name: PurchaseInvoice
              value: 3
            - name: ReturnOrder
              value: 4
            - name: ReturnInvoice
              value: 5
            - name: InventoryTransferOrder
              value: 6
            - name: InventoryTransferInvoice
              value: 7
            - name: ReverseChargeOrder
              value: 8
            - name: ReverseChargeInvoice
              value: 9
            - name: CustomsInvoice
              value: 10
            - name: CustomsOrder
              value: 11
            - name: Any
              value: -1
        x-enum-metadata:
          name: DocumentType
          values:
          - name: SalesOrder
            value: 0
          - name: SalesInvoice
            value: 1
          - name: PurchaseOrder
            value: 2
          - name: PurchaseInvoice
            value: 3
          - name: ReturnOrder
            value: 4
          - name: ReturnInvoice
            value: 5
          - name: InventoryTransferOrder
            value: 6
          - name: InventoryTransferInvoice
            value: 7
          - name: ReverseChargeOrder
            value: 8
          - name: ReverseChargeInvoice
            value: 9
          - name: CustomsInvoice
            value: 10
          - name: CustomsOrder
            value: 11
          - name: Any
            value: -1
      - name: $include
        in: query
        description: Specifies objects to include in this fetch call
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/companies/{companyCode}/transactions/{transactionCode}/types/{documentType}/audit:
    get:
      tags:
      - Transactions
      summary: Get audit information about a transaction
      description: "Retrieve audit information about a transaction stored in AvaTax.\r\
        \n            \r\nThe `AuditTransaction` API retrieves audit information related\
        \ to a specific transaction.  This audit\r\ninformation includes the following:\r\
        \n            \r\n* The `CompanyId` of the company that created the transaction\r\
        \n* The server timestamp representing the exact server time when the transaction\
        \ was created\r\n* The server duration - how long it took to process this\
        \ transaction\r\n* Whether exact API call details were logged\r\n* A reconstructed\
        \ API call showing what the original CreateTransaction call looked like\r\n\
        \            \r\nThis API can be used to examine information about a previously\
        \ created transaction.\r\n            \r\nA transaction represents a unique\
        \ potentially taxable action that your company has recorded, and transactions\
        \ include actions like\r\nsales, purchases, inventory transfer, and returns\
        \ (also called refunds).\r\n            \r\nNOTE: If your companyCode or transactionCode\
        \ contains any of these characters /, +, ? or a space please use the following\
        \ encoding before making a request:\r\n* Replace '/' with '\\_-ava2f-\\_'\
        \  For example: document/Code becomes document_-ava2f-_Code\r\n* Replace '+'\
        \ with '\\_-ava2b-\\_'  For example: document+Code becomes document_-ava2b-_Code\r\
        \n* Replace '?' with '\\_-ava3f-\\_'  For example: document?Code becomes document_-ava3f-_Code\r\
        \n* Replace '%' with '\\_-ava25-\\_'  For example: document%Code becomes document_-ava25-_Code\r\
        \n* Replace '#' with '\\_-ava23-\\_'  For example: document#Code becomes document_-ava23-_Code\r\
        \n* Replace ' ' with '%20'  For example: document Code becomes document%20Code\n\
        \n### Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, CSPAdmin, CSPTester,\
        \ ProStoresOperator, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin,\
        \ TechnicalSupportUser.\n* This API depends on the following active services:*Required*\
        \ (all):  AvaTaxPro, BasicReturns.\n"
      operationId: AuditTransactionWithType
      parameters:
      - name: companyCode
        in: path
        description: The code identifying the company that owns this transaction
        required: true
        schema:
          type: string
      - name: transactionCode
        in: path
        description: The code identifying the transaction
        required: true
        schema:
          type: string
      - name: documentType
        in: path
        description: The document type of the original transaction
        required: true
        schema:
          type: string
          enum:
          - SalesOrder
          - SalesInvoice
          - PurchaseOrder
          - PurchaseInvoice
          - ReturnOrder
          - ReturnInvoice
          - InventoryTransferOrder
          - InventoryTransferInvoice
          - ReverseChargeOrder
          - ReverseChargeInvoice
          - CustomsInvoice
          - CustomsOrder
          - Any
          x-enum-metadata:
            name: DocumentType
            values:
            - name: SalesOrder
              value: 0
            - name: SalesInvoice
              value: 1
            - name: PurchaseOrder
              value: 2
            - name: PurchaseInvoice
              value: 3
            - name: ReturnOrder
              value: 4
            - name: ReturnInvoice
              value: 5
            - name: InventoryTransferOrder
              value: 6
            - name: InventoryTransferInvoice
              value: 7
            - name: ReverseChargeOrder
              value: 8
            - name: ReverseChargeInvoice
              value: 9
            - name: CustomsInvoice
              value: 10
            - name: CustomsOrder
              value: 11
            - name: Any
              value: -1
        x-enum-metadata:
          name: DocumentType
          values:
          - name: SalesOrder
            value: 0
          - name: SalesInvoice
            value: 1
          - name: PurchaseOrder
            value: 2
          - name: PurchaseInvoice
            value: 3
          - name: ReturnOrder
            value: 4
          - name: ReturnInvoice
            value: 5
          - name: InventoryTransferOrder
            value: 6
          - name: InventoryTransferInvoice
            value: 7
          - name: ReverseChargeOrder
            value: 8
          - name: ReverseChargeInvoice
            value: 9
          - name: CustomsInvoice
            value: 10
          - name: CustomsOrder
            value: 11
          - name: Any
            value: -1
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTransactionModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/companies/{companyCode}/transactions/{transactionCode}/uncommit:
    post:
      tags:
      - Transactions
      summary: Uncommit a transaction for reporting
      description: "Adjusts a transaction by changing it to an uncommitted status.\r\
        \n            \r\nTransactions that have been previously reported to a tax\
        \ authority by Avalara Managed Returns are considered `locked` and are\r\n\
        no longer available to be uncommitted.\r\n            \r\nYou may specify\
        \ one or more of the following values in the `$include` parameter to fetch\
        \ additional nested data, using commas to separate multiple values:\r\n  \
        \          \r\n* Lines\r\n* Details (implies lines)\r\n* Summary (implies\
        \ details)\r\n* Addresses\r\n* SummaryOnly (omit lines and details - reduces\
        \ API response size)\r\n* LinesOnly (omit details - reduces API response size)\r\
        \n* TaxDetailsByTaxType - Includes the aggregated tax, exempt tax, taxable\
        \ and non-taxable for each tax type returned in the transaction summary.\r\
        \n            \r\nNOTE: If your companyCode or transactionCode contains any\
        \ of these characters /, +, ? or a space please use the following encoding\
        \ before making a request:\r\n* Replace '/' with '\\_-ava2f-\\_'  For example:\
        \ document/Code becomes document_-ava2f-_Code\r\n* Replace '+' with '\\_-ava2b-\\\
        _'  For example: document+Code becomes document_-ava2b-_Code\r\n* Replace\
        \ '?' with '\\_-ava3f-\\_'  For example: document?Code becomes document_-ava3f-_Code\r\
        \n* Replace '%' with '\\_-ava25-\\_'  For example: document%Code becomes document_-ava25-_Code\r\
        \n* Replace '#' with '\\_-ava23-\\_'  For example: document#Code becomes document_-ava23-_Code\r\
        \n* Replace ' ' with '%20'  For example: document Code becomes document%20Code\n\
        \n### Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, AccountOperator, CompanyAdmin, CSPTester, SSTAdmin, TechnicalSupportAdmin,\
        \ TechnicalSupportUser.\n* This API depends on the following active services:*Required*\
        \ (all):  AvaTaxPro, BasicReturns.\n"
      operationId: UncommitTransaction
      parameters:
      - name: companyCode
        in: path
        description: The company code of the company that recorded this transaction
        required: true
        schema:
          type: string
      - name: transactionCode
        in: path
        description: The transaction code to Uncommit
        required: true
        schema:
          type: string
      - name: documentType
        in: query
        description: '(Optional): The document type of the transaction to Uncommit.
          If not provided, the default is SalesInvoice.'
        schema:
          type: string
          enum:
          - SalesOrder
          - SalesInvoice
          - PurchaseOrder
          - PurchaseInvoice
          - ReturnOrder
          - ReturnInvoice
          - InventoryTransferOrder
          - InventoryTransferInvoice
          - ReverseChargeOrder
          - ReverseChargeInvoice
          - CustomsInvoice
          - CustomsOrder
          - Any
          x-enum-metadata:
            name: DocumentType
            values:
            - name: SalesOrder
              value: 0
            - name: SalesInvoice
              value: 1
            - name: PurchaseOrder
              value: 2
            - name: PurchaseInvoice
              value: 3
            - name: ReturnOrder
              value: 4
            - name: ReturnInvoice
              value: 5
            - name: InventoryTransferOrder
              value: 6
            - name: InventoryTransferInvoice
              value: 7
            - name: ReverseChargeOrder
              value: 8
            - name: ReverseChargeInvoice
              value: 9
            - name: CustomsInvoice
              value: 10
            - name: CustomsOrder
              value: 11
            - name: Any
              value: -1
        x-enum-metadata:
          name: DocumentType
          values:
          - name: SalesOrder
            value: 0
          - name: SalesInvoice
            value: 1
          - name: PurchaseOrder
            value: 2
          - name: PurchaseInvoice
            value: 3
          - name: ReturnOrder
            value: 4
          - name: ReturnInvoice
            value: 5
          - name: InventoryTransferOrder
            value: 6
          - name: InventoryTransferInvoice
            value: 7
          - name: ReverseChargeOrder
            value: 8
          - name: ReverseChargeInvoice
            value: 9
          - name: CustomsInvoice
            value: 10
          - name: CustomsOrder
            value: 11
          - name: Any
            value: -1
      - name: $include
        in: query
        description: Specifies objects to include in this fetch call
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/companies/{companyCode}/transactions/{transactionCode}/unvoid:
    post:
      tags:
      - Transactions
      summary: Unvoids a transaction
      description: "Unvoids a voided transaction\r\n            \r\nYou may specify\
        \ one or more of the following values in the `$include` parameter to fetch\
        \ additional nested data, using commas to separate multiple values:\r\n  \
        \          \r\n* Lines\r\n* Details (implies lines)\r\n* Summary (implies\
        \ details)\r\n* Addresses\r\n* SummaryOnly (omit lines and details - reduces\
        \ API response size)\r\n* LinesOnly (omit details - reduces API response size)\r\
        \n* TaxDetailsByTaxType - Includes the aggregated tax, exempt tax, taxable\
        \ and non-taxable for each tax type returned in the transaction summary.\r\
        \n            \r\nNOTE: If your companyCode or transactionCode contains any\
        \ of these characters /, +, ? or a space please use the following encoding\
        \ before making a request:\r\n* Replace '/' with '\\_-ava2f-\\_'  For example:\
        \ document/Code becomes document_-ava2f-_Code\r\n* Replace '+' with '\\_-ava2b-\\\
        _'  For example: document+Code becomes document_-ava2b-_Code\r\n* Replace\
        \ '?' with '\\_-ava3f-\\_'  For example: document?Code becomes document_-ava3f-_Code\r\
        \n* Replace '%' with '\\_-ava25-\\_'  For example: document%Code becomes document_-ava25-_Code\r\
        \n* Replace '#' with '\\_-ava23-\\_'  For example: document#Code becomes document_-ava23-_Code\r\
        \n* Replace ' ' with '%20'  For example: document Code becomes document%20Code\n\
        \n### Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, AccountOperator, CompanyAdmin, CSPTester, SSTAdmin, TechnicalSupportAdmin,\
        \ TechnicalSupportUser.\n* This API depends on the following active services:*Required*\
        \ (all):  AvaTaxPro, BasicReturns.\n"
      operationId: UnvoidTransaction
      parameters:
      - name: companyCode
        in: path
        description: The company code of the company that recorded this transaction
        required: true
        schema:
          type: string
      - name: transactionCode
        in: path
        description: The transaction code to commit
        required: true
        schema:
          type: string
      - name: documentType
        in: query
        description: '(Optional): The document type of the transaction to commit.
          If not provided, the default is SalesInvoice.'
        schema:
          type: string
          enum:
          - SalesOrder
          - SalesInvoice
          - PurchaseOrder
          - PurchaseInvoice
          - ReturnOrder
          - ReturnInvoice
          - InventoryTransferOrder
          - InventoryTransferInvoice
          - ReverseChargeOrder
          - ReverseChargeInvoice
          - CustomsInvoice
          - CustomsOrder
          - Any
          x-enum-metadata:
            name: DocumentType
            values:
            - name: SalesOrder
              value: 0
            - name: SalesInvoice
              value: 1
            - name: PurchaseOrder
              value: 2
            - name: PurchaseInvoice
              value: 3
            - name: ReturnOrder
              value: 4
            - name: ReturnInvoice
              value: 5
            - name: InventoryTransferOrder
              value: 6
            - name: InventoryTransferInvoice
              value: 7
            - name: ReverseChargeOrder
              value: 8
            - name: ReverseChargeInvoice
              value: 9
            - name: CustomsInvoice
              value: 10
            - name: CustomsOrder
              value: 11
            - name: Any
              value: -1
        x-enum-metadata:
          name: DocumentType
          values:
          - name: SalesOrder
            value: 0
          - name: SalesInvoice
            value: 1
          - name: PurchaseOrder
            value: 2
          - name: PurchaseInvoice
            value: 3
          - name: ReturnOrder
            value: 4
          - name: ReturnInvoice
            value: 5
          - name: InventoryTransferOrder
            value: 6
          - name: InventoryTransferInvoice
            value: 7
          - name: ReverseChargeOrder
            value: 8
          - name: ReverseChargeInvoice
            value: 9
          - name: CustomsInvoice
            value: 10
          - name: CustomsOrder
            value: 11
          - name: Any
            value: -1
      - name: $include
        in: query
        description: Specifies objects to include in this fetch call
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/companies/{companyCode}/transactions/{transactionCode}/verify:
    post:
      tags:
      - Transactions
      summary: Verify a transaction
      description: "Verifies that the transaction uniquely identified by this URL\
        \ matches certain expected values.\r\n            \r\nIf the transaction does\
        \ not match these expected values, this API will return an error code indicating\
        \ which value did not match.\r\n            \r\nIf you have more than one\
        \ document with the same `code`, specify the `documentType` parameter to choose\
        \ between them.\r\n            \r\nA transaction represents a unique potentially\
        \ taxable action that your company has recorded, and transactions include\
        \ actions like\r\nsales, purchases, inventory transfer, and returns (also\
        \ called refunds).\r\n            \r\nYou may specify one or more of the following\
        \ values in the `$include` parameter to fetch additional nested data, using\
        \ commas to separate multiple values:\r\n            \r\n* Lines\r\n* Details\
        \ (implies lines)\r\n* Summary (implies details)\r\n* Addresses\r\n* SummaryOnly\
        \ (omit lines and details - reduces API response size)\r\n* LinesOnly (omit\
        \ details - reduces API response size)\r\n* TaxDetailsByTaxType - Includes\
        \ the aggregated tax, exempt tax, taxable and non-taxable for each tax type\
        \ returned in the transaction summary.\r\n            \r\nNOTE: If your companyCode\
        \ or transactionCode contains any of these characters /, +, ? or a space please\
        \ use the following encoding before making a request:\r\n* Replace '/' with\
        \ '\\_-ava2f-\\_'  For example: document/Code becomes document_-ava2f-_Code\r\
        \n* Replace '+' with '\\_-ava2b-\\_'  For example: document+Code becomes document_-ava2b-_Code\r\
        \n* Replace '?' with '\\_-ava3f-\\_'  For example: document?Code becomes document_-ava3f-_Code\r\
        \n* Replace '%' with '\\_-ava25-\\_'  For example: document%Code becomes document_-ava25-_Code\r\
        \n* Replace '#' with '\\_-ava23-\\_'  For example: document#Code becomes document_-ava23-_Code\r\
        \n* Replace ' ' with '%20'  For example: document Code becomes document%20Code\n\
        \n### Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, CSPTester,\
        \ ProStoresOperator, SSTAdmin, TechnicalSupportAdmin.\n* This API depends\
        \ on the following active services:*Required* (all):  AvaTaxPro, BasicReturns.\n"
      operationId: VerifyTransaction
      parameters:
      - name: companyCode
        in: path
        description: The company code of the company that recorded this transaction
        required: true
        schema:
          type: string
      - name: transactionCode
        in: path
        description: The transaction code to settle
        required: true
        schema:
          type: string
      - name: documentType
        in: query
        description: '(Optional): The document type of the transaction to verify.
          If not provided, the default is SalesInvoice.'
        schema:
          type: string
          enum:
          - SalesOrder
          - SalesInvoice
          - PurchaseOrder
          - PurchaseInvoice
          - ReturnOrder
          - ReturnInvoice
          - InventoryTransferOrder
          - InventoryTransferInvoice
          - ReverseChargeOrder
          - ReverseChargeInvoice
          - CustomsInvoice
          - CustomsOrder
          - Any
          x-enum-metadata:
            name: DocumentType
            values:
            - name: SalesOrder
              value: 0
            - name: SalesInvoice
              value: 1
            - name: PurchaseOrder
              value: 2
            - name: PurchaseInvoice
              value: 3
            - name: ReturnOrder
              value: 4
            - name: ReturnInvoice
              value: 5
            - name: InventoryTransferOrder
              value: 6
            - name: InventoryTransferInvoice
              value: 7
            - name: ReverseChargeOrder
              value: 8
            - name: ReverseChargeInvoice
              value: 9
            - name: CustomsInvoice
              value: 10
            - name: CustomsOrder
              value: 11
            - name: Any
              value: -1
        x-enum-metadata:
          name: DocumentType
          values:
          - name: SalesOrder
            value: 0
          - name: SalesInvoice
            value: 1
          - name: PurchaseOrder
            value: 2
          - name: PurchaseInvoice
            value: 3
          - name: ReturnOrder
            value: 4
          - name: ReturnInvoice
            value: 5
          - name: InventoryTransferOrder
            value: 6
          - name: InventoryTransferInvoice
            value: 7
          - name: ReverseChargeOrder
            value: 8
          - name: ReverseChargeInvoice
            value: 9
          - name: CustomsInvoice
            value: 10
          - name: CustomsOrder
            value: 11
          - name: Any
            value: -1
      - name: $include
        in: query
        description: Specifies objects to include in this fetch call
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        description: The data from an external system to reconcile against AvaTax
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/VerifyTransactionModel'
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyTransactionModel'
          text/json:
            schema:
              $ref: '#/components/schemas/VerifyTransactionModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/VerifyTransactionModel'
        required: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
  /api/v2/companies/{companyCode}/transactions/{transactionCode}/void:
    post:
      tags:
      - Transactions
      summary: Void a transaction
      description: "Voids the current transaction uniquely identified by this URL.\r\
        \n            \r\nA transaction represents a unique potentially taxable action\
        \ that your company has recorded, and transactions include actions like\r\n\
        sales, purchases, inventory transfer, and returns (also called refunds).\r\
        \n            \r\nWhen you void a transaction, that transaction's status is\
        \ recorded as `DocVoided`.\r\n            \r\nIf you have more than one document\
        \ with the same `code`, specify the `documentType` parameter to choose between\
        \ them.\r\n            \r\nTransactions that have been previously reported\
        \ to a tax authority by Avalara Managed Returns are no longer available to\
        \ be voided.\r\n            \r\nYou may specify one or more of the following\
        \ values in the `$include` parameter to fetch additional nested data, using\
        \ commas to separate multiple values:\r\n            \r\n* Lines\r\n* Details\
        \ (implies lines)\r\n* Summary (implies details)\r\n* Addresses\r\n* SummaryOnly\
        \ (omit lines and details - reduces API response size)\r\n* LinesOnly (omit\
        \ details - reduces API response size)\r\n* TaxDetailsByTaxType - Includes\
        \ the aggregated tax, exempt tax, taxable and non-taxable for each tax type\
        \ returned in the transaction summary.\r\n            \r\nNOTE: If your companyCode\
        \ or transactionCode contains any of these characters /, +, ? or a space please\
        \ use the following encoding before making a request:\r\n* Replace '/' with\
        \ '\\_-ava2f-\\_'  For example: document/Code becomes document_-ava2f-_Code\r\
        \n* Replace '+' with '\\_-ava2b-\\_'  For example: document+Code becomes document_-ava2b-_Code\r\
        \n* Replace '?' with '\\_-ava3f-\\_'  For example: document?Code becomes document_-ava3f-_Code\r\
        \n* Replace '%' with '\\_-ava25-\\_'  For example: document%Code becomes document_-ava25-_Code\r\
        \n* Replace '#' with '\\_-ava23-\\_'  For example: document#Code becomes document_-ava23-_Code\r\
        \n* Replace ' ' with '%20'  For example: document Code becomes document%20Code\n\
        \n### Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, AccountOperator, CompanyAdmin, CSPTester, ProStoresOperator,\
        \ SSTAdmin, TechnicalSupportAdmin.\n* This API depends on the following active\
        \ services:*Required* (all):  AvaTaxPro, BasicReturns.\n"
      operationId: VoidTransaction
      parameters:
      - name: companyCode
        in: path
        description: The company code of the company that recorded this transaction
        required: true
        schema:
          type: string
      - name: transactionCode
        in: path
        description: The transaction code to void
        required: true
        schema:
          type: string
      - name: documentType
        in: query
        description: '(Optional): The document type of the transaction to void. If
          not provided, the default is SalesInvoice.'
        schema:
          type: string
          enum:
          - SalesOrder
          - SalesInvoice
          - PurchaseOrder
          - PurchaseInvoice
          - ReturnOrder
          - ReturnInvoice
          - InventoryTransferOrder
          - InventoryTransferInvoice
          - ReverseChargeOrder
          - ReverseChargeInvoice
          - CustomsInvoice
          - CustomsOrder
          - Any
          x-enum-metadata:
            name: DocumentType
            values:
            - name: SalesOrder
              value: 0
            - name: SalesInvoice
              value: 1
            - name: PurchaseOrder
              value: 2
            - name: PurchaseInvoice
              value: 3
            - name: ReturnOrder
              value: 4
            - name: ReturnInvoice
              value: 5
            - name: InventoryTransferOrder
              value: 6
            - name: InventoryTransferInvoice
              value: 7
            - name: ReverseChargeOrder
              value: 8
            - name: ReverseChargeInvoice
              value: 9
            - name: CustomsInvoice
              value: 10
            - name: CustomsOrder
              value: 11
            - name: Any
              value: -1
        x-enum-metadata:
          name: DocumentType
          values:
          - name: SalesOrder
            value: 0
          - name: SalesInvoice
            value: 1
          - name: PurchaseOrder
            value: 2
          - name: PurchaseInvoice
            value: 3
          - name: ReturnOrder
            value: 4
          - name: ReturnInvoice
            value: 5
          - name: InventoryTransferOrder
            value: 6
          - name: InventoryTransferInvoice
            value: 7
          - name: ReverseChargeOrder
            value: 8
          - name: ReverseChargeInvoice
            value: 9
          - name: CustomsInvoice
            value: 10
          - name: CustomsOrder
            value: 11
          - name: Any
            value: -1
      - name: $include
        in: query
        description: Specifies objects to include in this fetch call
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        description: The void request you wish to execute. To void a transaction the
          code must be set to 'DocVoided'
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/VoidTransactionModel'
          application/json:
            schema:
              $ref: '#/components/schemas/VoidTransactionModel'
          text/json:
            schema:
              $ref: '#/components/schemas/VoidTransactionModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/VoidTransactionModel'
        required: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
  /api/v2/companies/transactions/lines/add:
    post:
      tags:
      - Transactions
      summary: Add lines to an existing unlocked transaction
      description: " Add lines to an existing unlocked transaction.\r\n          \
        \  \r\n The `AddLines` API allows you to add additional transaction lines\
        \ to existing transaction, so that customer will\r\n be able to append multiple\
        \ calls together and form an extremely large transaction. If customer does\
        \ not specify line number\r\n in the lines to be added, a new random Guid\
        \ string will be generated for line number. If customer are not satisfied\
        \ with\r\n the line number for the transaction lines, they can turn on the\
        \ renumber switch to have REST v2 automatically renumber all\r\n transaction\
        \ lines for them, in this case, the line number becomes: \"1\", \"2\", \"\
        3\", ...\r\n            \r\n A transaction represents a unique potentially\
        \ taxable action that your company has recorded, and transactions include\
        \ actions like\r\n sales, purchases, inventory transfer, and returns (also\
        \ called refunds).\r\n You may specify one or more of the following values\
        \ in the `$include` parameter to fetch additional nested data, using commas\
        \ to separate multiple values:\r\n            \r\n * Lines\r\n * Details (implies\
        \ lines)\r\n * Summary (implies details)\r\n * Addresses\r\n* SummaryOnly\
        \ (omit lines and details - reduces API response size)\r\n* LinesOnly (omit\
        \ details - reduces API response size)\r\n            \r\n If you omit the\
        \ `$include` parameter, the API will assume you want `Summary,Addresses`.\n\
        \n### Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, AccountOperator, CompanyAdmin, CSPTester, SSTAdmin, TechnicalSupportAdmin,\
        \ TechnicalSupportUser.\n* This API depends on the following active services:*Required*\
        \ (all):  AvaTaxPro, BasicReturns.\n"
      operationId: AddLines
      parameters:
      - name: $include
        in: query
        description: Specifies objects to include in the response after transaction
          is created
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        description: information about the transaction and lines to be added
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AddTransactionLineModel'
          application/json:
            schema:
              $ref: '#/components/schemas/AddTransactionLineModel'
          text/json:
            schema:
              $ref: '#/components/schemas/AddTransactionLineModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AddTransactionLineModel'
        required: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
  /api/v2/companies/transactions/lines/delete:
    post:
      tags:
      - Transactions
      summary: Remove lines from an existing unlocked transaction
      description: " Remove lines to an existing unlocked transaction.\r\n       \
        \     \r\n The `DeleteLines` API allows you to remove transaction lines from\
        \ existing unlocked transaction, so that customer will\r\n be able to delete\
        \ transaction lines and adjust original transaction the way they like\r\n\
        \            \r\n A transaction represents a unique potentially taxable action\
        \ that your company has recorded, and transactions include actions like\r\n\
        \ sales, purchases, inventory transfer, and returns (also called refunds).\r\
        \n You may specify one or more of the following values in the `$include` parameter\
        \ to fetch additional nested data, using commas to separate multiple values:\r\
        \n            \r\n * Lines\r\n * Details (implies lines)\r\n * Summary (implies\
        \ details)\r\n * Addresses\r\n* SummaryOnly (omit lines and details - reduces\
        \ API response size)\r\n* LinesOnly (omit details - reduces API response size)\r\
        \n            \r\n If you omit the `$include` parameter, the API will assume\
        \ you want `Summary,Addresses`.\n\n### Security Policies\n\n* This API requires\
        \ one of the following user roles: AccountAdmin, AccountOperator, CompanyAdmin,\
        \ CSPTester, SSTAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n* This\
        \ API depends on the following active services:*Required* (all):  AvaTaxPro,\
        \ BasicReturns.\n"
      operationId: DeleteLines
      parameters:
      - name: $include
        in: query
        description: Specifies objects to include in the response after transaction
          is created
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        description: information about the transaction and lines to be removed
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/RemoveTransactionLineModel'
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveTransactionLineModel'
          text/json:
            schema:
              $ref: '#/components/schemas/RemoveTransactionLineModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/RemoveTransactionLineModel'
        required: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
  /api/v2/transactions/{id}:
    get:
      tags:
      - Transactions
      summary: Retrieve a single transaction by ID
      description: "Get the unique transaction identified by this URL.\r\n       \
        \     \r\nThis endpoint retrieves the exact transaction identified by this\
        \ ID number even if that transaction was later adjusted\r\nby using the `AdjustTransaction`\
        \ endpoint.\r\n            \r\nA transaction represents a unique potentially\
        \ taxable action that your company has recorded, and transactions include\
        \ actions like\r\nsales, purchases, inventory transfer, and returns (also\
        \ called refunds).\r\n            \r\nYou may specify one or more of the following\
        \ values in the `$include` parameter to fetch additional nested data, using\
        \ commas to separate multiple values:\r\n            \r\n* Lines\r\n* Details\
        \ (implies lines)\r\n* Summary (implies details)\r\n* Addresses\r\n* SummaryOnly\
        \ (omit lines and details - reduces API response size)\r\n* LinesOnly (omit\
        \ details - reduces API response size)\r\n* TaxDetailsByTaxType - Includes\
        \ the aggregated tax, exempt tax, taxable and non-taxable for each tax type\
        \ returned in the transaction summary.\n\n### Security Policies\n\n* This\
        \ API requires one of the following user roles: AccountAdmin, AccountUser,\
        \ CompanyAdmin, CompanyUser, CSPAdmin, CSPTester, ProStoresOperator, SiteAdmin,\
        \ SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n* This\
        \ API depends on the following active services:*Required* (all):  AvaTaxPro,\
        \ BasicReturns.\n"
      operationId: GetTransactionById
      parameters:
      - name: id
        in: path
        description: The unique ID number of the transaction to retrieve
        required: true
        schema:
          type: integer
          format: int64
      - name: $include
        in: query
        description: Specifies objects to include in this fetch call
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/transactions/create:
    post:
      tags:
      - Transactions
      summary: Create a new transaction
      description: "Records a new transaction in AvaTax.\r\n            \r\nA transaction\
        \ represents a unique potentially taxable action that your company has recorded,\
        \ and transactions include actions like\r\nsales, purchases, inventory transfer,\
        \ and returns (also called refunds).\r\n            \r\nThe `CreateTransaction`\
        \ endpoint uses the tax profile of your company to identify the correct tax\
        \ rules\r\nand rates to apply to all line items in this transaction.  The\
        \ end result will be the total tax calculated by AvaTax based on your\r\n\
        company's configuration and the data provided in this API call.\r\n      \
        \      \r\nThe `CreateTransaction` API will report an error if a committed\
        \ transaction already exists with the same `code`.  To\r\navoid this error,\
        \ use the `CreateOrAdjustTransaction` API - it will create the transaction\
        \ if it does not exist, or\r\nupdate it if it does exist.\r\n            \r\
        \nTo generate a refund for a transaction, use the `RefundTransaction` API.\r\
        \n            \r\nThe field `type` identifies the kind of transaction - for\
        \ example, a sale, purchase, or refund.  If you do not specify\r\na `type`\
        \ value, you will receive an estimate of type `SalesOrder`, which will not\
        \ be recorded.\r\n            \r\nThe origin and destination locations for\
        \ a transaction must be identified by either address or geocode.  For address-based\
        \ transactions, please\r\nprovide addresses in the fields `line`, `city`,\
        \ `region`, `country` and `postalCode`.  For geocode-based transactions, please\
        \ provide the geocode\r\ninformation in the fields `latitude` and `longitude`.\
        \  If either `latitude` or `longitude` or both are null, the transaction will\
        \ be calculated\r\nusing the best available address location information.\r\
        \n            \r\nYou may specify one or more of the following values in the\
        \ `$include` parameter to fetch additional nested data, using commas to separate\
        \ multiple values:\r\n            \r\n* Lines\r\n* Details (implies lines)\r\
        \n* Summary (implies details)\r\n* Addresses\r\n* SummaryOnly (omit lines\
        \ and details - reduces API response size)\r\n* LinesOnly (omit details -\
        \ reduces API response size)\r\n* ForceTimeout - Simulates a timeout.  This\
        \ adds a 30 second delay and error to your API call.  This can be used to\
        \ test your code to ensure it can respond correctly in the case of a dropped\
        \ connection.\r\n* TaxDetailsByTaxType - Includes the aggregated tax, exempt\
        \ tax, taxable and non-taxable for each tax type returned in the transaction\
        \ summary.\r\n            \r\nIf you omit the `$include` parameter, the API\
        \ will assume you want `Summary,Addresses`.\r\n            \r\nNOTE: Avoid\
        \ using the following strings in your transaction codes as they are encoding\
        \ strings and will be interpreted differently:\r\n* \\_-ava2f-\\_\r\n* \\\
        _-ava2b-\\_\r\n* \\_-ava3f-\\_\n\n### Security Policies\n\n* This API requires\
        \ one of the following user roles: AccountAdmin, AccountOperator, AccountUser,\
        \ CompanyAdmin, CompanyUser, CSPTester, SSTAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n\
        * This API depends on the following active services:*Required* (all):  AvaTaxPro,\
        \ BasicReturns.\n"
      operationId: CreateTransaction
      parameters:
      - name: $include
        in: query
        description: Specifies objects to include in the response after transaction
          is created
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        description: The transaction you wish to create
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CreateTransactionModel'
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTransactionModel'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateTransactionModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateTransactionModel'
        required: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
  /api/v2/transactions/createoradjust:
    post:
      tags:
      - Transactions
      summary: Create or adjust a transaction
      description: "Records a new transaction or adjust an existing transaction in\
        \ AvaTax.\r\n            \r\nThe `CreateOrAdjustTransaction` endpoint is used\
        \ to create a new transaction or update an existing one.  This API\r\ncan\
        \ help you create an idempotent service that creates transactions\r\nIf there\
        \ exists a transaction identified by code, the original transaction will be\
        \ adjusted by using the meta data\r\nin the input transaction.\r\n       \
        \     \r\nThe `CreateOrAdjustTransaction` API cannot modify any transaction\
        \ that has been reported to a tax authority using\r\nthe Avalara Managed Returns\
        \ Service or any other tax filing service.  If you call this API to attempt\
        \ to modify\r\na transaction that has been reported on a tax filing, you will\
        \ receive the error `CannotModifyLockedTransaction`.\r\n            \r\nTo\
        \ generate a refund for a transaction, use the `RefundTransaction` API.\r\n\
        \            \r\nIf you don't specify the field `type` in your request, you\
        \ will get an estimate of type `SalesOrder`, which will not be recorded in\
        \ the database.\r\n            \r\nA transaction represents a unique potentially\
        \ taxable action that your company has recorded, and transactions include\
        \ actions like\r\nsales, purchases, inventory transfer, and returns (also\
        \ called refunds).\r\nYou may specify one or more of the following values\
        \ in the `$include` parameter to fetch additional nested data, using commas\
        \ to separate multiple values:\r\n            \r\n* Lines\r\n* Details (implies\
        \ lines)\r\n* Summary (implies details)\r\n* Addresses\r\n* SummaryOnly (omit\
        \ lines and details - reduces API response size)\r\n* LinesOnly (omit details\
        \ - reduces API response size)\r\n* ForceTimeout - Simulates a timeout.  This\
        \ adds a 30 second delay and error to your API call.  This can be used to\
        \ test your code to ensure it can respond correctly in the case of a dropped\
        \ connection.\r\n            \r\nIf you omit the `$include` parameter, the\
        \ API will assume you want `Summary,Addresses`.\r\n            \r\nNOTE: Avoid\
        \ using the following strings in your transaction codes as they are encoding\
        \ strings and will be interpreted differently:\r\n* \\_-ava2f-\\_\r\n* \\\
        _-ava2b-\\_\r\n* \\_-ava3f-\\_\n\n### Security Policies\n\n* This API requires\
        \ one of the following user roles: AccountAdmin, AccountOperator, AccountUser,\
        \ CompanyAdmin, CompanyUser, CSPTester, SSTAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n\
        * This API depends on the following active services:*Required* (all):  AvaTaxPro,\
        \ BasicReturns.\n"
      operationId: CreateOrAdjustTransaction
      parameters:
      - name: $include
        in: query
        description: Specifies objects to include in the response after transaction
          is created
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        description: The transaction you wish to create or adjust
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CreateOrAdjustTransactionModel'
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrAdjustTransactionModel'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateOrAdjustTransactionModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateOrAdjustTransactionModel'
        required: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
  /api/v2/transactions/lock:
    post:
      tags:
      - Transactions
      summary: Lock a set of documents
      description: "This API is available by invitation only.\r\n            \r\n\
        Lock a set of transactions uniquely identified by DocumentIds provided. This\
        \ API allows locking multiple documents at once.\r\nAfter this API call succeeds,\
        \ documents will be locked and can't be voided.\r\n            \r\nA transaction\
        \ represents a unique potentially taxable action that your company has recorded,\
        \ and transactions include actions like\r\nsales, purchases, inventory transfer,\
        \ and returns (also called refunds).\n\n### Security Policies\n\n* This API\
        \ requires the user role Compliance Root User.\n* This API depends on the\
        \ following active services:*Returns* (at least one of):  Mrs, MRSComplianceManager,\
        \ AvaTaxCsp.*Firm Managed* (for accounts managed by a firm):  ARA, ARAManaged.\n"
      operationId: BulkLockTransaction
      parameters:
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        description: bulk lock request
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/BulkLockTransactionModel'
          application/json:
            schema:
              $ref: '#/components/schemas/BulkLockTransactionModel'
          text/json:
            schema:
              $ref: '#/components/schemas/BulkLockTransactionModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/BulkLockTransactionModel'
        required: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkLockTransactionResult'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
  /api/v2/companies/{companyId}/upcs:
    get:
      tags:
      - Upcs
      summary: Retrieve UPCs for this company
      description: "List all UPC objects attached to this company.\r\nA UPC represents\
        \ a single UPC code in your catalog and matches this product to the tax code\
        \ identified by this UPC.\r\n            \r\nSearch for specific objects using\
        \ the criteria in the `$filter` parameter; full documentation is available\
        \ on [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/)\
        \ .\r\nPaginate your results using the `$top`, `$skip`, and `$orderby` parameters.\n\
        \n### Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, CSPAdmin, CSPTester,\
        \ SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n\
        * This API depends on the following active services:*Required* (all):  AvaUpc.\n"
      operationId: ListUPCsByCompany
      parameters:
      - name: companyId
        in: path
        description: The ID of the company that owns these UPCs
        required: true
        schema:
          type: integer
          format: int32
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).
        schema:
          type: string
      - name: $include
        in: query
        description: A comma separated list of additional data to retrieve.
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UPCModelFetchResult'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
    post:
      tags:
      - Upcs
      summary: Create a new UPC
      description: "Create one or more new UPC objects attached to this company.\r\
        \nA UPC represents a single UPC code in your catalog and matches this product\
        \ to the tax code identified by this UPC.\n\n### Security Policies\n\n* This\
        \ API requires one of the following user roles: AccountAdmin, CompanyAdmin,\
        \ CSPTester, SSTAdmin, TechnicalSupportAdmin.\n* This API depends on the following\
        \ active services:*Required* (all):  AvaUpc.\n"
      operationId: CreateUPCs
      parameters:
      - name: companyId
        in: path
        description: The ID of the company that owns this UPC.
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        description: The UPC you wish to create.
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/UPCModel'
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/UPCModel'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/UPCModel'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/UPCModel'
        required: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UPCModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
  /api/v2/companies/{companyId}/upcs/{id}:
    get:
      tags:
      - Upcs
      summary: Retrieve a single UPC
      description: "Get the UPC object identified by this URL.\r\nA UPC represents\
        \ a single UPC code in your catalog and matches this product to the tax code\
        \ identified by this UPC.\n\n### Security Policies\n\n* This API requires\
        \ one of the following user roles: AccountAdmin, AccountUser, CompanyAdmin,\
        \ CompanyUser, CSPAdmin, CSPTester, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin,\
        \ TechnicalSupportUser.\n* This API depends on the following active services:*Required*\
        \ (all):  AvaUpc.\n"
      operationId: GetUPC
      parameters:
      - name: companyId
        in: path
        description: The ID of the company that owns this UPC
        required: true
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: The primary key of this UPC
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UPCModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
    put:
      tags:
      - Upcs
      summary: Update a single UPC
      description: "Replace the existing UPC object at this URL with an updated object.\r\
        \nA UPC represents a single UPC code in your catalog and matches this product\
        \ to the tax code identified by this UPC.\r\nAll data from the existing object\
        \ will be replaced with data in the object you PUT.\r\nTo set a field's value\
        \ to null, you may either set its value to null or omit that field from the\
        \ object you post.\n\n### Security Policies\n\n* This API requires one of\
        \ the following user roles: AccountAdmin, CompanyAdmin, CSPTester, SSTAdmin,\
        \ TechnicalSupportAdmin.\n* This API depends on the following active services:*Required*\
        \ (all):  AvaUpc.\n"
      operationId: UpdateUPC
      parameters:
      - name: companyId
        in: path
        description: The ID of the company that this UPC belongs to.
        required: true
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: The ID of the UPC you wish to update
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        description: The UPC you wish to update.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UPCModel'
          application/json:
            schema:
              $ref: '#/components/schemas/UPCModel'
          text/json:
            schema:
              $ref: '#/components/schemas/UPCModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UPCModel'
        required: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UPCModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
    delete:
      tags:
      - Upcs
      summary: Delete a single UPC
      description: |
        Marks the UPC object identified by this URL as deleted.

        ### Security Policies

        * This API requires one of the following user roles: AccountAdmin, CompanyAdmin, CSPTester, SSTAdmin, TechnicalSupportAdmin.
        * This API depends on the following active services:*Required* (all):  AvaUpc.
      operationId: DeleteUPC
      parameters:
      - name: companyId
        in: path
        description: The ID of the company that owns this UPC.
        required: true
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: The ID of the UPC you wish to delete.
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorDetail'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/upcs:
    get:
      tags:
      - Upcs
      summary: Retrieve all UPCs
      description: "Get multiple UPC objects across all companies.\r\nA UPC represents\
        \ a single UPC code in your catalog and matches this product to the tax code\
        \ identified by this UPC.\r\n            \r\nSearch for specific objects using\
        \ the criteria in the `$filter` parameter; full documentation is available\
        \ on [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/)\
        \ .\r\nPaginate your results using the `$top`, `$skip`, and `$orderby` parameters.\n\
        \n### Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, CSPAdmin, CSPTester,\
        \ SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser.\n\
        * This API depends on the following active services:*Required* (all):  AvaUpc.\n"
      operationId: QueryUPCs
      parameters:
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).
        schema:
          type: string
      - name: $include
        in: query
        description: A comma separated list of additional data to retrieve.
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UPCModelFetchResult'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/companies/{companyId}/userdefinedfields:
    get:
      tags:
      - UserDefinedFields
      description: |2


        ### Security Policies

        * This API requires one of the following user roles: AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, Compliance Root User, ComplianceAdmin, ComplianceUser, CSPAdmin, CSPTester, FirmAdmin, FirmUser, ProStoresOperator, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser, TreasuryAdmin, TreasuryUser.
        * This API depends on the following active services:*Required* (all):  AvaTaxPro, BasicReturns.
      operationId: ListUserDefinedFieldsByCompanyId
      parameters:
      - name: companyId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: udfType
        in: query
        description: Document or Line level UDF
        schema:
          type: string
          default: Document
          enum:
          - Document
          - Line
          x-enum-metadata:
            name: UserDefinedFieldType
            values:
            - name: Document
              value: 1
            - name: Line
              value: 2
        x-enum-metadata:
          name: UserDefinedFieldType
          values:
          - name: Document
            value: 1
          - name: Line
            value: 2
      - name: allowDefaults
        in: query
        description: If true this will add defaulted UDFs to the list that are not
          named yet
        schema:
          type: boolean
          default: true
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyUserDefinedFieldModelFetchResult'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
    post:
      tags:
      - UserDefinedFields
      summary: Update a User Defined Field identified by id for a company
      description: |
        Updates a User Defined Field for a company.

        ### Security Policies

        * This API requires one of the following user roles: AccountAdmin, CompanyAdmin, CSPTester, FirmAdmin, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin.
        * This API depends on the following active services:*Required* (all):  AvaTaxPro, BasicReturns.
      operationId: UpdateUserDefinedField
      parameters:
      - name: companyId
        in: path
        description: The id of the company the user defined field belongs to.
        required: true
        schema:
          type: integer
          format: int32
      - name: id
        in: query
        schema:
          type: integer
          format: int64
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CompanyUserDefinedFieldModel'
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyUserDefinedFieldModel'
          text/json:
            schema:
              $ref: '#/components/schemas/CompanyUserDefinedFieldModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CompanyUserDefinedFieldModel'
        required: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyUserDefinedFieldModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
  /api/v2/companies/{companyId}/userdefinedfields/{id}:
    delete:
      tags:
      - UserDefinedFields
      summary: Delete a User Defined Field by User Defined Field id for a company.
      description: |
        Marks the existing user defined field for a company as deleted.

        ### Security Policies

        * This API requires one of the following user roles: AccountAdmin, CompanyAdmin, CSPTester, FirmAdmin, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin.
        * This API depends on the following active services:*Required* (all):  AvaTaxPro, BasicReturns.
      operationId: DeleteUserDefinedField
      parameters:
      - name: companyId
        in: path
        description: The id of the company the User Defined Field belongs to.
        required: true
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: The id of the User Defined Field you wish to delete.
        required: true
        schema:
          type: integer
          format: int64
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorDetail'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/accounts/{accountId}/users:
    get:
      tags:
      - Users
      summary: Retrieve users for this account
      description: "List all user objects attached to this account.\r\nA user represents\
        \ one person with access privileges to make API calls and work with a specific\
        \ account.\r\n            \r\nWhen an API is called using a legacy AvaTax\
        \ License Key, the API log entry is recorded as being performed by a special\
        \ user attached to that license key.\r\nBy default, this API will not return\
        \ a listing of license key users.  Users with registrar-level security may\
        \ call this API to list license key users.\r\n            \r\nSearch for specific\
        \ objects using the criteria in the `$filter` parameter; full documentation\
        \ is available on [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/)\
        \ .\r\nPaginate your results using the `$top`, `$skip`, and `$orderby` parameters.\r\
        \n            \r\nYou may specify one or more of the following values in the\
        \ `$include` parameter to fetch additional nested data, using commas to separate\
        \ multiple values:\r\n            \r\n* FetchDeleted\n\n### Security Policies\n\
        \n* This API requires one of the following user roles: AccountAdmin, AccountOperator,\
        \ AccountUser, CompanyAdmin, CompanyUser, Compliance Root User, ComplianceAdmin,\
        \ ComplianceUser, CSPAdmin, CSPTester, FirmAdmin, FirmUser, ProStoresOperator,\
        \ Registrar, SiteAdmin, SSTAdmin, SystemAdmin, SystemOperator, TechnicalSupportAdmin,\
        \ TechnicalSupportUser, TreasuryAdmin, TreasuryUser.\n"
      operationId: ListUsersByAccount
      parameters:
      - name: accountId
        in: path
        description: The accountID of the user you wish to list.
        required: true
        schema:
          type: integer
          format: int32
      - name: $include
        in: query
        description: Optional fetch commands.
        schema:
          type: string
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br
          />*Not filterable:* SuppressNewUserEmail
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserModelFetchResult'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
    post:
      tags:
      - Users
      summary: Create new users
      description: "Create one or more new user objects attached to this account.\r\
        \n            \r\nA user represents one person with access privileges to make\
        \ API calls and work with a specific account.\r\n            \r\nUsers who\
        \ are account administrators or company users are permitted to create user\
        \ records to invite\r\nadditional team members to work with AvaTax.\r\n  \
        \          \r\nA newly created user will receive an email inviting them to\
        \ create their password.  This means that you\r\nmust provide a valid email\
        \ address for all user accounts created.\n\n### Security Policies\n\n* This\
        \ API requires one of the following user roles: AccountAdmin, AccountUser,\
        \ CompanyAdmin, CompanyUser, Compliance Root User, ComplianceAdmin, ComplianceUser,\
        \ CSPTester, FirmAdmin, FirmUser, Registrar, SiteAdmin, SSTAdmin, SystemAdmin,\
        \ TechnicalSupportAdmin, TechnicalSupportUser, TreasuryAdmin, TreasuryUser.\n"
      operationId: CreateUsers
      parameters:
      - name: accountId
        in: path
        description: The unique ID number of the account where these users will be
          created.
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        description: The user or array of users you wish to create.
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/UserModel'
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/UserModel'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/UserModel'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/UserModel'
        required: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
  /api/v2/accounts/{accountId}/users/{id}:
    get:
      tags:
      - Users
      summary: Retrieve a single user
      description: "Get the user object identified by this URL.\r\nA user represents\
        \ one person with access privileges to make API calls and work with a specific\
        \ account.\r\n            \r\n You may specify one or more of the following\
        \ values in the `$include` parameter to fetch additional nested data, using\
        \ commas to separate multiple values:\r\n            \r\n* FetchDeleted\n\n\
        ### Security Policies\n\n* This API requires one of the following user roles:\
        \ AccountAdmin, AccountOperator, AccountUser, CompanyAdmin, CompanyUser, Compliance\
        \ Root User, ComplianceAdmin, ComplianceUser, CSPAdmin, CSPTester, FirmAdmin,\
        \ FirmUser, ProStoresOperator, Registrar, SiteAdmin, SSTAdmin, SystemAdmin,\
        \ SystemOperator, TechnicalSupportAdmin, TechnicalSupportUser, TreasuryAdmin,\
        \ TreasuryUser.\n"
      operationId: GetUser
      parameters:
      - name: id
        in: path
        description: The ID of the user to retrieve.
        required: true
        schema:
          type: integer
          format: int32
      - name: accountId
        in: path
        description: The accountID of the user you wish to get.
        required: true
        schema:
          type: integer
          format: int32
      - name: $include
        in: query
        description: Optional fetch commands.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
    put:
      tags:
      - Users
      summary: Update a single user
      description: "Replace the existing user object at this URL with an updated object.\r\
        \nA user represents one person with access privileges to make API calls and\
        \ work with a specific account.\r\nAll data from the existing object will\
        \ be replaced with data in the object you PUT.\r\nTo set a field's value to\
        \ null, you may either set its value to null or omit that field from the object\
        \ you post.\n\n### Security Policies\n\n* This API requires one of the following\
        \ user roles: AccountAdmin, AccountUser, CompanyAdmin, CompanyUser, Compliance\
        \ Root User, ComplianceAdmin, ComplianceUser, CSPTester, FirmAdmin, FirmUser,\
        \ Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin, TechnicalSupportUser,\
        \ TreasuryAdmin, TreasuryUser.\n"
      operationId: UpdateUser
      parameters:
      - name: id
        in: path
        description: The ID of the user you wish to update.
        required: true
        schema:
          type: integer
          format: int32
      - name: accountId
        in: path
        description: The accountID of the user you wish to update.
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        description: The user object you wish to update.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UserModel'
          application/json:
            schema:
              $ref: '#/components/schemas/UserModel'
          text/json:
            schema:
              $ref: '#/components/schemas/UserModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UserModel'
        required: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
    delete:
      tags:
      - Users
      summary: Delete a single user
      description: "Mark the user object identified by this URL as deleted.\r\n  \
        \          \r\nThis API is available for use by account and company administrators\
        \ only.\r\n            \r\nAccount and company administrators may only delete\
        \ users within the appropriate organizations\r\nthey control.\n\n### Security\
        \ Policies\n\n* This API requires one of the following user roles: AccountAdmin,\
        \ CompanyAdmin, Compliance Root User, CSPTester, Registrar, SiteAdmin, SSTAdmin,\
        \ SystemAdmin, TechnicalSupportAdmin, TreasuryAdmin.\n"
      operationId: DeleteUser
      parameters:
      - name: id
        in: path
        description: The ID of the user you wish to delete.
        required: true
        schema:
          type: integer
          format: int32
      - name: accountId
        in: path
        description: The accountID of the user you wish to delete.
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorDetail'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/accounts/{accountId}/users/{id}/entitlements:
    get:
      tags:
      - Users
      summary: Retrieve all entitlements for a single user
      description: "Return a list of all entitlements to which this user has rights\
        \ to access.\r\nEntitlements are a list of specified API calls the user is\
        \ permitted to make, a list of identifier numbers for companies the user is\r\
        \nallowed to use, and an access level identifier that indicates what types\
        \ of access roles the user is allowed to use.\r\nThis API call is intended\
        \ to provide a validation endpoint to determine, before making an API call,\
        \ whether this call is likely to succeed.\r\nFor example, if user 567 within\
        \ account 999 is attempting to create a new child company underneath company\
        \ 12345, you could preview the user's\r\nentitlements and predict whether\
        \ this call would succeed:\r\n            \r\n* Retrieve entitlements by calling\
        \ '/api/v2/accounts/999/users/567/entitlements' .  If the call fails, you\
        \ do not have accurate\r\n    credentials for this user.\r\n* If the 'accessLevel'\
        \ field within entitlements is 'None', the call will fail.\r\n* If the 'accessLevel'\
        \ field within entitlements is 'SingleCompany' or 'SingleAccount', the call\
        \ will fail if the companies\r\n    table does not contain the ID number 12345.\r\
        \n* If the 'permissions' array within entitlements does not contain 'AccountSvc.CompanySave',\
        \ the call will fail.\r\n            \r\nFor a full list of defined permissions,\
        \ please use '/api/v2/definitions/permissions' .\n\n### Security Policies\n\
        \n* This API requires one of the following user roles: AccountAdmin, AccountOperator,\
        \ AccountUser, CompanyAdmin, CompanyUser, Compliance Root User, ComplianceAdmin,\
        \ ComplianceUser, CSPAdmin, CSPTester, FirmAdmin, FirmUser, ProStoresOperator,\
        \ Registrar, SiteAdmin, SSTAdmin, SystemAdmin, SystemOperator, TechnicalSupportAdmin,\
        \ TechnicalSupportUser, TreasuryAdmin, TreasuryUser.\n"
      operationId: GetUserEntitlements
      parameters:
      - name: id
        in: path
        description: The ID of the user to retrieve.
        required: true
        schema:
          type: integer
          format: int32
      - name: accountId
        in: path
        description: The accountID of the user you wish to get.
        required: true
        schema:
          type: integer
          format: int32
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserEntitlementModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/passwords:
    put:
      tags:
      - Users
      summary: Change Password
      description: "Allows a user to change their password via an API call.\r\n  \
        \          \r\nThis API allows an authenticated user to change their password\
        \ via an API call.  This feature is only available\r\nfor accounts that do\
        \ not use SAML integrated password validation.\r\n            \r\nThis API\
        \ only allows the currently authenticated user to change their password; it\
        \ cannot be used to apply to a\r\ndifferent user than the one authenticating\
        \ the current API call.\n\n### Security Policies\n\n* This API requires one\
        \ of the following user roles: AccountAdmin, AccountUser, CompanyAdmin, CompanyUser,\
        \ Compliance Root User, ComplianceAdmin, ComplianceUser, CSPTester, FirmAdmin,\
        \ FirmUser, Registrar, SiteAdmin, SSTAdmin, SystemAdmin, TechnicalSupportAdmin,\
        \ TechnicalSupportUser, TreasuryAdmin, TreasuryUser.\n"
      operationId: ChangePassword
      parameters:
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      requestBody:
        description: An object containing your current password and the new password.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/PasswordChangeModel'
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordChangeModel'
          text/json:
            schema:
              $ref: '#/components/schemas/PasswordChangeModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/PasswordChangeModel'
        required: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: string
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
      x-codegen-request-body-name: body
  /api/v2/users:
    get:
      tags:
      - Users
      summary: Retrieve all users
      description: "Get multiple user objects across all accounts.\r\n           \
        \ \r\nA user represents one person or set of credentials with access privileges\
        \ to make API calls and work with a specific account.  A user can be authenticated\r\
        \nvia either username / password authentication, an OpenID / OAuth Bearer\
        \ Token, or a legacy AvaTax License Key.\r\n            \r\nWhen an API is\
        \ called using a legacy AvaTax License Key, the API log entry is recorded\
        \ as being performed by a special user attached to that license key.\r\nBy\
        \ default, this API will not return a listing of license key users.  Users\
        \ with registrar-level security may call this API to list license key users.\r\
        \n            \r\nSearch for specific objects using the criteria in the `$filter`\
        \ parameter; full documentation is available on [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/)\
        \ .\r\nPaginate your results using the `$top`, `$skip`, and `$orderby` parameters.\r\
        \n            \r\nYou may specify one or more of the following values in the\
        \ `$include` parameter to fetch additional nested data, using commas to separate\
        \ multiple values:\r\n            \r\n* FetchDeleted\n\n### Security Policies\n\
        \n* This API requires one of the following user roles: AccountAdmin, AccountOperator,\
        \ AccountUser, CompanyAdmin, CompanyUser, Compliance Root User, ComplianceAdmin,\
        \ ComplianceUser, CSPAdmin, CSPTester, FirmAdmin, FirmUser, ProStoresOperator,\
        \ Registrar, SiteAdmin, SSTAdmin, SystemAdmin, SystemOperator, TechnicalSupportAdmin,\
        \ TechnicalSupportUser, TreasuryAdmin, TreasuryUser.\n"
      operationId: QueryUsers
      parameters:
      - name: $include
        in: query
        description: Optional fetch commands.
        schema:
          type: string
      - name: $filter
        in: query
        description: A filter statement to identify specific records to retrieve.  For
          more information on filtering, see [Filtering in REST](http://developer.avalara.com/avatax/filtering-in-rest/).<br
          />*Not filterable:* SuppressNewUserEmail
        schema:
          type: string
      - name: $top
        in: query
        description: If nonzero, return no more than this number of results.  Used
          with `$skip` to provide pagination for large datasets.  Unless otherwise
          specified, the maximum number of records that can be returned from an API
          call is 1,000 records.
        schema:
          type: integer
          format: int32
      - name: $skip
        in: query
        description: If nonzero, skip this number of results before returning data.  Used
          with `$top` to provide pagination for large datasets.
        schema:
          type: integer
          format: int32
      - name: $orderBy
        in: query
        description: A comma separated list of sort statements in the format `(fieldname)
          [ASC|DESC]`, for example `id ASC`.
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserModelFetchResult'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/utilities/ping:
    get:
      tags:
      - Utilities
      summary: Tests connectivity and version of the service
      description: "Check connectivity to AvaTax and return information about the\
        \ AvaTax API server.\r\n            \r\nThis API is intended to help you verify\
        \ that your connection is working.  This API will always succeed and will\r\
        \nnever return a error.  It provides basic information about the server you\
        \ connect to:\r\n            \r\n* `version` - The version number of the AvaTax\
        \ API server that responded to your request.  The AvaTax API version number\
        \ is updated once per month during Avalara's update process.\r\n* `authenticated`\
        \ - A boolean flag indicating whether or not you sent valid credentials with\
        \ your API request.\r\n* `authenticationType` - If you provided valid credentials\
        \ to the API, this field will tell you whether you used Bearer, Username,\
        \ or LicenseKey authentication.\r\n* `authenticatedUserName` - If you provided\
        \ valid credentials to the API, this field will tell you the username of the\
        \ currently logged in user.\r\n* `authenticatedUserId` - If you provided valid\
        \ credentials to the API, this field will tell you the user ID of the currently\
        \ logged in user.\r\n* `authenticatedAccountId` - If you provided valid credentials\
        \ to the API, this field will contain the account ID of the currently logged\
        \ in user.\r\n            \r\nThis API helps diagnose connectivity problems\
        \ between your application and AvaTax; you may call this API even\r\nif you\
        \ do not have verified connection credentials.  If this API fails, either\
        \ your computer is not connected to\r\nthe internet, or there is a routing\
        \ problem between your office and Avalara, or the Avalara server is not available.\r\
        \nFor more information on the uptime of AvaTax, please see [Avalara's AvaTax\
        \ Status Page](https://status.avalara.com/).\n\n### Security Policies\n\n\
        * This API may be called without providing authentication credentials.\n"
      operationId: Ping
      parameters:
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PingResultModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/utilities/subscriptions:
    get:
      tags:
      - Utilities
      summary: List all services to which the current user is subscribed
      description: "Returns the list of all subscriptions enabled for the currently\
        \ logged in user.\r\n            \r\nThis API will return an error if it is\
        \ called with invalid authentication credentials.\r\n            \r\nThis\
        \ API is intended to help you determine whether you have the necessary subscription\
        \ to use certain API calls\r\nwithin AvaTax.  You can examine the subscriptions\
        \ returned from this API call to look for a particular product\r\nor subscription\
        \ to provide useful information to the current user as to whether they are\
        \ entitled to use\r\nspecific features of AvaTax."
      operationId: ListMySubscriptions
      parameters:
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionModelFetchResult'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
  /api/v2/utilities/subscriptions/{serviceTypeId}:
    get:
      tags:
      - Utilities
      summary: Checks if the current user is subscribed to a specific service
      description: "Returns a subscription object for the current account, or 404\
        \ Not Found if this subscription is not enabled for this account.\r\n    \
        \        \r\nThis API will return an error if it is called with invalid authentication\
        \ credentials.\r\n            \r\nThis API is intended to help you determine\
        \ whether you have the necessary subscription to use certain API calls\r\n\
        within AvaTax.  You can examine the subscriptions returned from this API call\
        \ to look for a particular product\r\nor subscription to provide useful information\
        \ to the current user as to whether they are entitled to use\r\nspecific features\
        \ of AvaTax."
      operationId: GetMySubscription
      parameters:
      - name: serviceTypeId
        in: path
        description: The service to check
        required: true
        schema:
          type: string
      - name: X-Avalara-Client
        in: header
        description: Identifies the software you are using to call this API.  For
          more information on the client header, see [Client Headers](https://developer.avalara.com/avatax/client-headers/)
          .
        schema:
          type: string
          default: Swagger UI; 21.12.0; Custom; 1.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionModel'
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      security:
      - UserSecurity: []
        OauthSecurity: []
components:
  schemas:
    SubscriptionModel:
      type: object
      properties:
        id:
          type: integer
          description: The unique ID number of this subscription.
          format: int32
          readOnly: true
          example: 12345
        accountId:
          type: integer
          description: The unique ID number of the account this subscription belongs
            to.
          format: int32
          readOnly: true
          example: 123456789
        subscriptionTypeId:
          type: integer
          description: The unique ID number of the service that the account is subscribed
            to. If this is provided, subscription description is ignored.
          format: int32
          example: 2
        subscriptionDescription:
          maxLength: 25
          minLength: 0
          type: string
          description: "A friendly description of the service that the account is\
            \ subscribed to. You can either provide the subscription type Id or this\
            \ but not both. If\r\nsubscription type Id is provided, then this information\
            \ is ignored and this field will be updated with the information from\
            \ subscription type id."
          example: AvaTaxPro
        effectiveDate:
          type: string
          description: The date when the subscription began.
          format: date
        endDate:
          type: string
          description: If the subscription has ended or will end, this date indicates
            when the subscription ends.
          format: date
        createdDate:
          type: string
          description: The date when this record was created.
          format: date-time
          readOnly: true
        createdUserId:
          type: integer
          description: The User ID of the user who created this record.
          format: int32
          readOnly: true
        modifiedDate:
          type: string
          description: The date/time when this record was last modified.
          format: date-time
          readOnly: true
        modifiedUserId:
          type: integer
          description: The user ID of the user who last modified this record.
          format: int32
          readOnly: true
      description: Represents a service that this account has subscribed to.
      example:
        id: 12345
        accountId: 123456789
        subscriptionTypeId: 2
        subscriptionDescription: AvaTaxPro
        effectiveDate: 2015-01-01
    UserModel:
      required:
      - accountId
      - email
      - firstName
      - id
      - lastName
      - securityRoleId
      - userName
      type: object
      properties:
        id:
          type: integer
          description: The unique ID number of this user.
          format: int32
          example: 12345
        accountId:
          type: integer
          description: The unique ID number of the account to which this user belongs.
          format: int32
          example: 123456789
        companyId:
          type: integer
          description: If this user is locked to one company (and its children), this
            is the unique ID number of the company to which this user belongs.
          format: int32
          example: 123456
        userName:
          maxLength: 50
          minLength: 5
          type: string
          description: The username which is used to log on to the AvaTax website,
            or to authenticate against API calls.
          example: bobExample
        firstName:
          maxLength: 50
          minLength: 0
          type: string
          description: The first or given name of the user.
          example: Bob
        lastName:
          maxLength: 50
          minLength: 0
          type: string
          description: The last or family name of the user.
          example: Example
        email:
          maxLength: 50
          minLength: 0
          type: string
          description: The email address to be used to contact this user.  If the
            user has forgotten a password, an email can be sent to this email address
            with information on how to reset this password.
          example: bob@example.org
        postalCode:
          maxLength: 10
          minLength: 0
          type: string
          description: The postal code in which this user resides.
          example: "98110"
        securityRoleId:
          type: string
          description: The security level for this user.
          example: NoAccess
          enum:
          - NoAccess
          - SiteAdmin
          - AccountOperator
          - AccountAdmin
          - AccountUser
          - SystemAdmin
          - Registrar
          - CSPTester
          - CSPAdmin
          - SystemOperator
          - TechnicalSupportUser
          - TechnicalSupportAdmin
          - TreasuryUser
          - TreasuryAdmin
          - ComplianceUser
          - ComplianceAdmin
          - ProStoresOperator
          - CompanyUser
          - CompanyAdmin
          - ComplianceTempUser
          - ComplianceRootUser
          - ComplianceOperator
          - SSTAdmin
          - FirmUser
          - FirmAdmin
          x-enum-metadata:
            name: SecurityRoleId
            values:
            - name: NoAccess
              value: 0
            - name: SiteAdmin
              value: 1
            - name: AccountOperator
              value: 2
            - name: AccountAdmin
              value: 3
            - name: AccountUser
              value: 4
            - name: SystemAdmin
              value: 5
            - name: Registrar
              value: 6
            - name: CSPTester
              value: 7
            - name: CSPAdmin
              value: 8
            - name: SystemOperator
              value: 9
            - name: TechnicalSupportUser
              value: 10
            - name: TechnicalSupportAdmin
              value: 11
            - name: TreasuryUser
              value: 12
            - name: TreasuryAdmin
              value: 13
            - name: ComplianceUser
              value: 14
            - name: ComplianceAdmin
              value: 15
            - name: ProStoresOperator
              value: 16
            - name: CompanyUser
              value: 17
            - name: CompanyAdmin
              value: 18
            - name: ComplianceTempUser
              value: 19
            - name: ComplianceRootUser
              value: 20
            - name: ComplianceOperator
              value: 21
            - name: SSTAdmin
              value: 22
            - name: FirmUser
              value: 23
            - name: FirmAdmin
              value: 24
        passwordStatus:
          type: string
          description: The status of the user's password. For a new user created,
            this is always going to be `UserMustChange`
          example: UserCannotChange
          enum:
          - UserCannotChange
          - UserCanChange
          - UserMustChange
          x-enum-metadata:
            name: PasswordStatusId
            values:
            - name: UserCannotChange
              value: 0
            - name: UserCanChange
              value: 1
            - name: UserMustChange
              value: 2
        isActive:
          type: boolean
          description: True if this user is currently active.
          example: true
        createdDate:
          type: string
          description: The date when this record was created.
          format: date-time
          readOnly: true
        modifiedDate:
          type: string
          description: The date/time when this record was last modified.
          format: date-time
          readOnly: true
        subjectId:
          maxLength: 32
          minLength: 0
          type: string
          description: Matches the subjectId of corresponding user record in AI.
        suppressNewUserEmail:
          type: boolean
          description: Suppress new user email
      description: An account user who is permitted to use AvaTax.
      example:
        id: 12345
        accountId: 123456789
        companyId: 123456
        userName: bobExample
        firstName: Bob
        lastName: Example
        email: bob@example.org
        postalCode: "98110"
        securityRoleId: AccountUser
        passwordStatus: UserCanChange
        isActive: true
        suppressNewUserEmail: false
    AccountModel:
      required:
      - id
      - name
      type: object
      properties:
        id:
          type: integer
          description: The unique ID number assigned to this account.
          format: int32
          example: 12345
        crmid:
          maxLength: 100
          minLength: 0
          type: string
          description: For system registrar use only.
        name:
          maxLength: 50
          minLength: 0
          type: string
          description: The name of this account.
          example: Test Account
        effectiveDate:
          type: string
          description: The earliest date on which this account may be used.
          format: date-time
          example: 2022-01-10T00:00:00Z
        endDate:
          type: string
          description: If this account has been closed, this is the last date the
            account was open.
          format: date-time
        accountStatusId:
          type: string
          description: The current status of this account.
          example: Inactive
          enum:
          - Inactive
          - Active
          - Test
          - New
          x-enum-metadata:
            name: AccountStatusId
            values:
            - name: Inactive
              value: 0
            - name: Active
              value: 1
            - name: Test
              value: 2
            - name: New
              value: 3
        accountTypeId:
          type: string
          description: The type of this account.
          example: Regular
          enum:
          - Regular
          - Firm
          - FirmClient
          x-enum-metadata:
            name: AccountTypeId
            values:
            - name: Regular
              value: 1
            - name: Firm
              value: 2
            - name: FirmClient
              value: 3
        createdDate:
          type: string
          description: The date when this record was created.
          format: date-time
          readOnly: true
        createdUserId:
          type: integer
          description: The User ID of the user who created this record.
          format: int32
          readOnly: true
        modifiedDate:
          type: string
          description: The date/time when this record was last modified.
          format: date-time
          readOnly: true
        modifiedUserId:
          type: integer
          description: The user ID of the user who last modified this record.
          format: int32
          readOnly: true
        subscriptions:
          type: array
          description: 'Optional: A list of subscriptions granted to this account.  To
            fetch this list, add the query string "?$include=Subscriptions" to your
            URL.'
          items:
            $ref: '#/components/schemas/SubscriptionModel'
        users:
          type: array
          description: 'Optional: A list of all the users belonging to this account.  To
            fetch this list, add the query string "?$include=Users" to your URL.'
          items:
            $ref: '#/components/schemas/UserModel'
        isSamlEnabled:
          type: boolean
          description: Is Saml based authentication used by this account for user
            to login via AI.
          example: false
      description: An AvaTax account.
      example:
        id: 12345
        name: Test Account
        effectiveDate: 2022-01-10T00:00:00+00:00
        accountStatusId: Test
        accountTypeId: Regular
        isSamlEnabled: false
    ErrorDetail:
      type: object
      properties:
        code:
          type: string
          example: ServerConfiguration
          enum:
          - ServerConfiguration
          - AccountInvalidException
          - CompanyInvalidException
          - EntityNotFoundError
          - ValueRequiredError
          - RangeError
          - RangeCompareError
          - RangeSetError
          - TaxpayerNumberRequired
          - EntityLimitExceeded
          - CommonPassword
          - WeakPassword
          - StringLengthError
          - MaxStringLengthError
          - EmailValidationError
          - EmailMissingError
          - InvalidQueryField
          - InvalidQueryValue
          - SyntaxError
          - TooManyParametersError
          - UnterminatedValueError
          - DeleteUserSelfError
          - OldPasswordInvalid
          - CannotChangePassword
          - ReadOnly
          - DateFormatError
          - NoDefaultCompany
          - AccountTypeNotSupported
          - InvalidAuthenticationType
          - AuthenticationException
          - AuthorizationException
          - ValidationException
          - InactiveUserError
          - AuthenticationIncomplete
          - BasicAuthIncorrect
          - IdentityServerError
          - BearerTokenInvalid
          - ModelRequiredException
          - AccountExpiredException
          - BearerTokenNotSupported
          - InvalidSecurityRole
          - InvalidRegistrarAction
          - RemoteServerError
          - NoFilterCriteriaException
          - OpenClauseException
          - JsonFormatError
          - InvalidDecimalValue
          - PermissionRequired
          - UnhandledException
          - InactiveAccount
          - LinkageNotAllowed
          - LinkageStatusUpdateNotSupported
          - ReportingCompanyMustHaveContactsError
          - CompanyProfileNotSet
          - CannotAssignUserToCompany
          - MustAssignUserToCompany
          - InvalidTaxTypeMapping
          - ModelStateInvalid
          - DateRangeError
          - InvalidDateRangeError
          - RuleMustHaveTaxCode
          - RuleTypeRestricted
          - AllJurisRuleLimits
          - InvalidCompanyLocationSetting
          - InvalidAdjustmentType
          - DeleteInformation
          - DisableAuthenticationForSamlBasedAccounts
          - DisableResetPasswordForSamlBasedAccounts
          - OutOfRange
          - UnspecifiedTimeZone
          - CannotCreateDeletedObjects
          - CannotModifyDeletedObjects
          - ReturnNameNotFound
          - InvalidAddressTypeAndCategory
          - DefaultCompanyLocation
          - InvalidCountry
          - InvalidCountryRegion
          - BrazilValidationError
          - BrazilExemptValidationError
          - BrazilPisCofinsError
          - JurisdictionNotFoundError
          - MedicalExciseError
          - RateDependsTaxabilityError
          - InvalidRateTypeCode
          - RateTypeNotSupported
          - CannotUpdateNestedObjects
          - UPCCodeInvalidChars
          - UPCCodeInvalidLength
          - IncorrectPathError
          - InvalidJurisdictionType
          - MustConfirmResetLicenseKey
          - DuplicateCompanyCode
          - TINFormatError
          - DuplicateNexusError
          - UnknownNexusError
          - ParentNexusNotFound
          - InvalidTaxCodeType
          - CannotActivateCompany
          - DuplicateEntityProperty
          - ReportingEntityError
          - InvalidReturnOperationError
          - CannotDeleteCompany
          - CountryOverridesNotAvailable
          - JurisdictionOverrideMismatch
          - DuplicateSystemTaxCode
          - SSTOverridesNotAvailable
          - NexusDateMismatch
          - NexusParentDateMismatch
          - BearerTokenParseUserIdError
          - RetrieveUserError
          - InvalidConfigurationSetting
          - InvalidConfigurationValue
          - InvalidEnumValue
          - TaxCodeAssociatedTaxRule
          - CannotSwitchAccountId
          - RequestIncomplete
          - AccountNotNew
          - PasswordLengthInvalid
          - InvalidPageKey
          - InvalidEcmsOverrideCode
          - AccountDoesNotExist
          - InvalidTaxType
          - IncorrectFieldValue
          - LeadingOrTrailingException
          - NotEnoughAddressesInfo
          - ReportNotInitiated
          - FailedToBuildReport
          - ReportNotFinished
          - FailedToDownloadReport
          - MalformedFilterException
          - ExpectedConjunctionError
          - CriteriaNotSupportedError
          - CompanyAccountAndParentAccountMismatch
          - InvalidFileContentType
          - RequestTooLarge
          - EcmsDisabled
          - UnknownConjunctionError
          - NoLinesDiscounted
          - FailedToDelete
          - CircularCompanyHierarchies
          - DuplicateEntry
          - DuplicateFieldNameInOrderBy
          - CannotAdjustDocumentType
          - UserNoAccess
          - InvalidEntry
          - TransactionAlreadyCancelled
          - QueryParameterOutOfRange
          - BatchSalesAuditMustBeZippedError
          - BatchZipMustContainOneFileError
          - BatchInvalidFileTypeError
          - BatchCannotSaveBatchFile
          - BatchCannotGetBatchFile
          - BatchCannotDeleteBatchFile
          - BatchMustContainOneFile
          - MissingBatchFileContent
          - BatchCannotBeDeletedWhileProcessing
          - InternalServerError
          - PointOfSaleFileSize
          - PointOfSaleSetup
          - InvalidInputDate
          - GetTaxError
          - AddressConflictException
          - DocumentCodeConflict
          - MissingAddress
          - InvalidParameterValue
          - FetchLimit
          - InvalidAddress
          - AddressLocationNotFound
          - MissingLine
          - InvalidAddressTextCase
          - DocumentNotCommitted
          - InvalidDocumentTypesToFetch
          - TimeoutRequested
          - InvalidPostalCode
          - InvalidSubscriptionDescription
          - InvalidSubscriptionTypeId
          - CannotChangeFilingStatus
          - FEINFormatError
          - ServerUnreachable
          - SubscriptionRequired
          - AccountExists
          - InvitationOnly
          - AccountNotWhitelisted
          - FreeTrialNotAvailable
          - AccountExistsDifferentEmail
          - AvalaraIdentityApiError
          - InvalidIPAddress
          - OfferCodeAlreadyApplied
          - AccountAlreadyExists
          - LicenseKeyNameAlreadyExistsForAccount
          - UserAlreadyExist
          - UserNotFound
          - UserManagementException
          - RefundTypeAndPercentageMismatch
          - InvalidDocumentTypeForRefund
          - RefundTypeAndLineMismatch
          - RefundLinesRequired
          - InvalidRefundType
          - RefundPercentageForTaxOnly
          - LineNoOutOfRange
          - RefundPercentageOutOfRange
          - RefundPercentageMissing
          - MustUseCreateTransaction
          - MustAcceptTermsAndConditions
          - FilingCalendarCannotBeDeleted
          - InvalidEffectiveDate
          - NonOutletForm
          - OverlappingFilingCalendar
          - FilingCalendarCannotBeEdited
          - CannotModifyLockedTransaction
          - LineAlreadyExists
          - LineDoesNotExist
          - LinesNotSpecified
          - LineDetailsDoesNotExist
          - CannotCreateTransactionWithDeletedDataSource
          - ShipToRegionRequiredWithDataSource
          - InvalidBusinessType
          - CannotModifyExemptCert
          - CertificatesError
          - MissingRequiredFields
          - CertificatesNotSetup
          - ConflictingExposureZone
          - MissingFieldToCreateExposureZone
          - MissingExemptReason
          - InvalidExemptReason
          - InvalidExemptionOperation
          - ConflictingFields
          - InvalidPdfOrImageFile
          - InvalidCoverLetterTitle
          - AccountNotProvisioned
          - InvalidRequestContentType
          - ExemptionPaginationLimits
          - ExemptionSortLimits
          - CustomerCantBeBothShipToAndBillTo
          - BillToCustomerExpected
          - ShipToCustomerExpected
          - EcmsSstCertsRequired
          - TransactionNotCancelled
          - TooManyTransactions
          - OnlyTaxDateOverrideIsAllowed
          - TransactionAlreadyExists
          - DateMismatch
          - InvalidDocumentStatusForVerify
          - TotalAmountMismatch
          - TotalTaxMismatch
          - InvalidDocumentType
          - MultiDocumentPartiallyLocked
          - TransactionIsCommitted
          - InvalidDocumentStatus
          - CommsConfigClientIdMissing
          - CommsConfigClientIdBadValue
          - AccountInNewStatusException
          - WorksheetException
          - InvalidAccountOverride
          - AccountOverrideNotAuthorized
          - FieldNotQueryableError
          - UsernameRequired
          - InvalidAuditMessage
          - FieldNotOrderableError
          - CannotDeleteParentBeforeChildNexus
          - NexusChildDateMismatch
          - RemoteValidationError
          - CannotModifySstNexus
          - InvalidLocalNexusTypeId
          - AdvancedRuleRequestRuleError
          - AdvancedRuleResponseRuleError
          - AdvancedRuleError
          - TaxRuleRequiresNexus
          - UPCCodeNotUnique
          - TaxCodeAssociatedWithItemCodeNotFound
          - DuplicateSystemForItem
          - CannotDismissGlobalNotification
          - CannotUpdateAccountTypeId
          - TaxpayerNumberIsRequired
          - RequestLimitExceeded
          - ConcurrentRequestLimitExceeded
          - InvalidDocumentTypeForInspect
          - ServiceNotReady
          - UpdateLocationRemittanceMismatchTypeAndCategory
          - UpdateLocationRemittanceCheckExistingEffectiveDateError
          - UpdateLocationRemittanceCheckExistingEndDateError
          - ErrorCountLimitExceededError
          - RateLimitExceededError
          - TaxCodeAndTaxCodeIdMissing
          - NexusAlreadyExists
          - InvalidAddressTypeAndMarketPlaceOusideUsaFlag
          - InvalidSettingSet
          - InvalidSettingName
          - InvalidSettingValue
          - TooManyUserDefinedFields
          - DuplicateUserDefinedFieldsFound
          - InvalidNameForUserDefinedField
          - UnsupportedFileFormat
          - UnsupportedOutputFileType
          - TaxProfileNotProvided
          - InvalidTaxProfile
          - CompanyTaxProfileEntryRequired
          - ErrorReadingTaxProfileEntry
          - TraceDataNotAvailable
          - InvalidParameterUnitMeasurementType
          - ParameterUnitRequired
          - InvalidParameterValueDataType
          - InvalidParameterAttributeType
          - SubscriptionRequiredForParameter
          - InvalidAccountType
          - InvalidFirmSubscriptions
          - GenericTaxCodeForItem
          - CannotCertifyCompany
          - NoVoidedDocuments
          - InadequateCommittedDocuments
          - DocumentCodeIsGuid
          - CustomerVendorCodeIsGuid
          - InadequateDocumentLineCount
          - SameDocumentDescription
          - NoExemptionNoOrCustomerUsageType
          - InadequateUniqueAddresses
          - ItemCodesAreAllSame
          - TaxCodesAreAllSame
          - LocationCodeNotUsed
          - RepeatedLinesInDocument
          - TaxDateOverrideAndNegativeLineAmount
          - AllUSDCurrencyCodes
          - NoVATBuyerId
          - AllUSCountryCodes
          - NoDocumentsToTest
          - NoShippingCharge
          - FailedToUpdateCompanyLocation
          - CompanyLocationDateRangeOverlap
          - FieldLengthError
          - InputContainsBlacklistedCharacters
          - CannotCreateNestedObjects
          - UserSubjectIdNotUpdated
          - BatchTransactionTypeError
          - BatchTransactionLineLimitExceeded
          - BatchCompanyIdAndCompanyCodeMismatch
          - BatchCannotBeCancelledStatusError
          - BatchCannotBeCancelledFormatError
          - InvalidParameterDataType
          - TagDoesNotExist
          - ObjectDeleted
          - AssociatedObjectsDeleted
          - CannotDownloadReport
          - InvalidUnitOfBasis
          - NotApplicableUnitOfBasis
          - InvalidRateTypeTaxTypeMapping
          - InvalidTaxTypeGroup
          - InvalidTaxSubType
          - InvalidProductTypeId
          - InvalidTaxRuleType
          - InvalidHsCode
          - NotApplicableTaxType
          - InvalidTaxTypeCode
          x-enum-metadata:
            name: ErrorCodeId
            values:
            - name: ServerConfiguration
              value: 1
            - name: AccountInvalidException
              value: 2
            - name: CompanyInvalidException
              value: 3
            - name: EntityNotFoundError
              value: 4
            - name: ValueRequiredError
              value: 5
            - name: RangeError
              value: 6
            - name: RangeCompareError
              value: 7
            - name: RangeSetError
              value: 8
            - name: TaxpayerNumberRequired
              value: 9
            - name: EntityLimitExceeded
              value: 10
            - name: CommonPassword
              value: 11
            - name: WeakPassword
              value: 12
            - name: StringLengthError
              value: 13
            - name: MaxStringLengthError
              value: 14
            - name: EmailValidationError
              value: 15
            - name: EmailMissingError
              value: 16
            - name: InvalidQueryField
              value: 17
            - name: InvalidQueryValue
              value: 18
            - name: SyntaxError
              value: 19
            - name: TooManyParametersError
              value: 20
            - name: UnterminatedValueError
              value: 21
            - name: DeleteUserSelfError
              value: 22
            - name: OldPasswordInvalid
              value: 23
            - name: CannotChangePassword
              value: 24
            - name: ReadOnly
              value: 25
            - name: DateFormatError
              value: 26
            - name: NoDefaultCompany
              value: 27
            - name: AccountTypeNotSupported
              value: 28
            - name: InvalidAuthenticationType
              value: 29
            - name: AuthenticationException
              value: 30
            - name: AuthorizationException
              value: 31
            - name: ValidationException
              value: 32
            - name: InactiveUserError
              value: 33
            - name: AuthenticationIncomplete
              value: 34
            - name: BasicAuthIncorrect
              value: 35
            - name: IdentityServerError
              value: 36
            - name: BearerTokenInvalid
              value: 37
            - name: ModelRequiredException
              value: 38
            - name: AccountExpiredException
              value: 39
            - name: BearerTokenNotSupported
              value: 41
            - name: InvalidSecurityRole
              value: 42
            - name: InvalidRegistrarAction
              value: 43
            - name: RemoteServerError
              value: 44
            - name: NoFilterCriteriaException
              value: 45
            - name: OpenClauseException
              value: 46
            - name: JsonFormatError
              value: 47
            - name: InvalidDecimalValue
              value: 48
            - name: PermissionRequired
              value: 49
            - name: UnhandledException
              value: 50
            - name: InactiveAccount
              value: 51
            - name: LinkageNotAllowed
              value: 52
            - name: LinkageStatusUpdateNotSupported
              value: 53
            - name: ReportingCompanyMustHaveContactsError
              value: 60
            - name: CompanyProfileNotSet
              value: 61
            - name: CannotAssignUserToCompany
              value: 62
            - name: MustAssignUserToCompany
              value: 63
            - name: InvalidTaxTypeMapping
              value: 64
            - name: ModelStateInvalid
              value: 70
            - name: DateRangeError
              value: 80
            - name: InvalidDateRangeError
              value: 81
            - name: RuleMustHaveTaxCode
              value: 82
            - name: RuleTypeRestricted
              value: 83
            - name: AllJurisRuleLimits
              value: 84
            - name: InvalidCompanyLocationSetting
              value: 85
            - name: InvalidAdjustmentType
              value: 99
            - name: DeleteInformation
              value: 100
            - name: DisableAuthenticationForSamlBasedAccounts
              value: 101
            - name: DisableResetPasswordForSamlBasedAccounts
              value: 102
            - name: OutOfRange
              value: 118
            - name: UnspecifiedTimeZone
              value: 119
            - name: CannotCreateDeletedObjects
              value: 120
            - name: CannotModifyDeletedObjects
              value: 121
            - name: ReturnNameNotFound
              value: 122
            - name: InvalidAddressTypeAndCategory
              value: 123
            - name: DefaultCompanyLocation
              value: 124
            - name: InvalidCountry
              value: 125
            - name: InvalidCountryRegion
              value: 126
            - name: BrazilValidationError
              value: 127
            - name: BrazilExemptValidationError
              value: 128
            - name: BrazilPisCofinsError
              value: 129
            - name: JurisdictionNotFoundError
              value: 130
            - name: MedicalExciseError
              value: 131
            - name: RateDependsTaxabilityError
              value: 132
            - name: InvalidRateTypeCode
              value: 134
            - name: RateTypeNotSupported
              value: 135
            - name: CannotUpdateNestedObjects
              value: 136
            - name: UPCCodeInvalidChars
              value: 137
            - name: UPCCodeInvalidLength
              value: 138
            - name: IncorrectPathError
              value: 139
            - name: InvalidJurisdictionType
              value: 140
            - name: MustConfirmResetLicenseKey
              value: 141
            - name: DuplicateCompanyCode
              value: 142
            - name: TINFormatError
              value: 143
            - name: DuplicateNexusError
              value: 144
            - name: UnknownNexusError
              value: 145
            - name: ParentNexusNotFound
              value: 146
            - name: InvalidTaxCodeType
              value: 147
            - name: CannotActivateCompany
              value: 148
            - name: DuplicateEntityProperty
              value: 149
            - name: ReportingEntityError
              value: 150
            - name: InvalidReturnOperationError
              value: 151
            - name: CannotDeleteCompany
              value: 152
            - name: CountryOverridesNotAvailable
              value: 153
            - name: JurisdictionOverrideMismatch
              value: 154
            - name: DuplicateSystemTaxCode
              value: 155
            - name: SSTOverridesNotAvailable
              value: 156
            - name: NexusDateMismatch
              value: 157
            - name: NexusParentDateMismatch
              value: 159
            - name: BearerTokenParseUserIdError
              value: 160
            - name: RetrieveUserError
              value: 161
            - name: InvalidConfigurationSetting
              value: 162
            - name: InvalidConfigurationValue
              value: 163
            - name: InvalidEnumValue
              value: 164
            - name: TaxCodeAssociatedTaxRule
              value: 165
            - name: CannotSwitchAccountId
              value: 166
            - name: RequestIncomplete
              value: 167
            - name: AccountNotNew
              value: 168
            - name: PasswordLengthInvalid
              value: 169
            - name: InvalidPageKey
              value: 170
            - name: InvalidEcmsOverrideCode
              value: 171
            - name: AccountDoesNotExist
              value: 172
            - name: InvalidTaxType
              value: 173
            - name: IncorrectFieldValue
              value: 174
            - name: LeadingOrTrailingException
              value: 175
            - name: NotEnoughAddressesInfo
              value: 176
            - name: ReportNotInitiated
              value: 177
            - name: FailedToBuildReport
              value: 178
            - name: ReportNotFinished
              value: 179
            - name: FailedToDownloadReport
              value: 181
            - name: MalformedFilterException
              value: 182
            - name: ExpectedConjunctionError
              value: 183
            - name: CriteriaNotSupportedError
              value: 184
            - name: CompanyAccountAndParentAccountMismatch
              value: 185
            - name: InvalidFileContentType
              value: 186
            - name: RequestTooLarge
              value: 187
            - name: EcmsDisabled
              value: 188
            - name: UnknownConjunctionError
              value: 189
            - name: NoLinesDiscounted
              value: 190
            - name: FailedToDelete
              value: 191
            - name: CircularCompanyHierarchies
              value: 192
            - name: DuplicateEntry
              value: 193
            - name: DuplicateFieldNameInOrderBy
              value: 194
            - name: CannotAdjustDocumentType
              value: 195
            - name: UserNoAccess
              value: 196
            - name: InvalidEntry
              value: 197
            - name: TransactionAlreadyCancelled
              value: 198
            - name: QueryParameterOutOfRange
              value: 199
            - name: BatchSalesAuditMustBeZippedError
              value: 200
            - name: BatchZipMustContainOneFileError
              value: 201
            - name: BatchInvalidFileTypeError
              value: 202
            - name: BatchCannotSaveBatchFile
              value: 203
            - name: BatchCannotGetBatchFile
              value: 204
            - name: BatchCannotDeleteBatchFile
              value: 205
            - name: BatchMustContainOneFile
              value: 206
            - name: MissingBatchFileContent
              value: 207
            - name: BatchCannotBeDeletedWhileProcessing
              value: 208
            - name: InternalServerError
              value: 209
            - name: PointOfSaleFileSize
              value: 250
            - name: PointOfSaleSetup
              value: 251
            - name: InvalidInputDate
              value: 252
            - name: GetTaxError
              value: 300
            - name: AddressConflictException
              value: 301
            - name: DocumentCodeConflict
              value: 303
            - name: MissingAddress
              value: 304
            - name: InvalidParameterValue
              value: 306
            - name: FetchLimit
              value: 308
            - name: InvalidAddress
              value: 309
            - name: AddressLocationNotFound
              value: 310
            - name: MissingLine
              value: 311
            - name: InvalidAddressTextCase
              value: 312
            - name: DocumentNotCommitted
              value: 313
            - name: InvalidDocumentTypesToFetch
              value: 315
            - name: TimeoutRequested
              value: 316
            - name: InvalidPostalCode
              value: 317
            - name: InvalidSubscriptionDescription
              value: 318
            - name: InvalidSubscriptionTypeId
              value: 319
            - name: CannotChangeFilingStatus
              value: 401
            - name: FEINFormatError
              value: 402
            - name: ServerUnreachable
              value: 500
            - name: SubscriptionRequired
              value: 600
            - name: AccountExists
              value: 601
            - name: InvitationOnly
              value: 602
            - name: AccountNotWhitelisted
              value: 603
            - name: FreeTrialNotAvailable
              value: 606
            - name: AccountExistsDifferentEmail
              value: 607
            - name: AvalaraIdentityApiError
              value: 608
            - name: InvalidIPAddress
              value: 609
            - name: OfferCodeAlreadyApplied
              value: 610
            - name: AccountAlreadyExists
              value: 611
            - name: LicenseKeyNameAlreadyExistsForAccount
              value: 612
            - name: UserAlreadyExist
              value: 613
            - name: UserNotFound
              value: 614
            - name: UserManagementException
              value: 615
            - name: RefundTypeAndPercentageMismatch
              value: 701
            - name: InvalidDocumentTypeForRefund
              value: 702
            - name: RefundTypeAndLineMismatch
              value: 703
            - name: RefundLinesRequired
              value: 704
            - name: InvalidRefundType
              value: 705
            - name: RefundPercentageForTaxOnly
              value: 706
            - name: LineNoOutOfRange
              value: 707
            - name: RefundPercentageOutOfRange
              value: 708
            - name: RefundPercentageMissing
              value: 709
            - name: MustUseCreateTransaction
              value: 800
            - name: MustAcceptTermsAndConditions
              value: 801
            - name: FilingCalendarCannotBeDeleted
              value: 900
            - name: InvalidEffectiveDate
              value: 901
            - name: NonOutletForm
              value: 902
            - name: OverlappingFilingCalendar
              value: 903
            - name: FilingCalendarCannotBeEdited
              value: 904
            - name: CannotModifyLockedTransaction
              value: 1100
            - name: LineAlreadyExists
              value: 1101
            - name: LineDoesNotExist
              value: 1102
            - name: LinesNotSpecified
              value: 1103
            - name: LineDetailsDoesNotExist
              value: 1104
            - name: CannotCreateTransactionWithDeletedDataSource
              value: 1105
            - name: ShipToRegionRequiredWithDataSource
              value: 1106
            - name: InvalidBusinessType
              value: 1200
            - name: CannotModifyExemptCert
              value: 1201
            - name: CertificatesError
              value: 1203
            - name: MissingRequiredFields
              value: 1204
            - name: CertificatesNotSetup
              value: 1205
            - name: ConflictingExposureZone
              value: 1208
            - name: MissingFieldToCreateExposureZone
              value: 1209
            - name: MissingExemptReason
              value: 1210
            - name: InvalidExemptReason
              value: 1211
            - name: InvalidExemptionOperation
              value: 1212
            - name: ConflictingFields
              value: 1213
            - name: InvalidPdfOrImageFile
              value: 1214
            - name: InvalidCoverLetterTitle
              value: 1215
            - name: AccountNotProvisioned
              value: 1216
            - name: InvalidRequestContentType
              value: 1217
            - name: ExemptionPaginationLimits
              value: 1218
            - name: ExemptionSortLimits
              value: 1219
            - name: CustomerCantBeBothShipToAndBillTo
              value: 1220
            - name: BillToCustomerExpected
              value: 1221
            - name: ShipToCustomerExpected
              value: 1222
            - name: EcmsSstCertsRequired
              value: 1223
            - name: TransactionNotCancelled
              value: 1300
            - name: TooManyTransactions
              value: 1301
            - name: OnlyTaxDateOverrideIsAllowed
              value: 1302
            - name: TransactionAlreadyExists
              value: 1303
            - name: DateMismatch
              value: 1305
            - name: InvalidDocumentStatusForVerify
              value: 1306
            - name: TotalAmountMismatch
              value: 1307
            - name: TotalTaxMismatch
              value: 1308
            - name: InvalidDocumentType
              value: 1310
            - name: MultiDocumentPartiallyLocked
              value: 1312
            - name: TransactionIsCommitted
              value: 1313
            - name: InvalidDocumentStatus
              value: 1314
            - name: CommsConfigClientIdMissing
              value: 1400
            - name: CommsConfigClientIdBadValue
              value: 1401
            - name: AccountInNewStatusException
              value: 1404
            - name: WorksheetException
              value: 1405
            - name: InvalidAccountOverride
              value: 1406
            - name: AccountOverrideNotAuthorized
              value: 1407
            - name: FieldNotQueryableError
              value: 1408
            - name: UsernameRequired
              value: 1409
            - name: InvalidAuditMessage
              value: 1410
            - name: FieldNotOrderableError
              value: 1411
            - name: CannotDeleteParentBeforeChildNexus
              value: 1500
            - name: NexusChildDateMismatch
              value: 1501
            - name: RemoteValidationError
              value: 1502
            - name: CannotModifySstNexus
              value: 1503
            - name: InvalidLocalNexusTypeId
              value: 1504
            - name: AdvancedRuleRequestRuleError
              value: 1602
            - name: AdvancedRuleResponseRuleError
              value: 1603
            - name: AdvancedRuleError
              value: 1605
            - name: TaxRuleRequiresNexus
              value: 1701
            - name: UPCCodeNotUnique
              value: 1702
            - name: TaxCodeAssociatedWithItemCodeNotFound
              value: 1704
            - name: DuplicateSystemForItem
              value: 1705
            - name: CannotDismissGlobalNotification
              value: 1706
            - name: CannotUpdateAccountTypeId
              value: 1713
            - name: TaxpayerNumberIsRequired
              value: 1714
            - name: RequestLimitExceeded
              value: 1715
            - name: ConcurrentRequestLimitExceeded
              value: 1716
            - name: InvalidDocumentTypeForInspect
              value: 1717
            - name: ServiceNotReady
              value: 1718
            - name: UpdateLocationRemittanceMismatchTypeAndCategory
              value: 1719
            - name: UpdateLocationRemittanceCheckExistingEffectiveDateError
              value: 1720
            - name: UpdateLocationRemittanceCheckExistingEndDateError
              value: 1721
            - name: ErrorCountLimitExceededError
              value: 1722
            - name: RateLimitExceededError
              value: 1723
            - name: TaxCodeAndTaxCodeIdMissing
              value: 1724
            - name: NexusAlreadyExists
              value: 1725
            - name: InvalidAddressTypeAndMarketPlaceOusideUsaFlag
              value: 1726
            - name: InvalidSettingSet
              value: 1727
            - name: InvalidSettingName
              value: 1728
            - name: InvalidSettingValue
              value: 1729
            - name: TooManyUserDefinedFields
              value: 1730
            - name: DuplicateUserDefinedFieldsFound
              value: 1731
            - name: InvalidNameForUserDefinedField
              value: 1732
            - name: UnsupportedFileFormat
              value: 1800
            - name: UnsupportedOutputFileType
              value: 1801
            - name: TaxProfileNotProvided
              value: 1900
            - name: InvalidTaxProfile
              value: 1901
            - name: CompanyTaxProfileEntryRequired
              value: 1902
            - name: ErrorReadingTaxProfileEntry
              value: 1903
            - name: TraceDataNotAvailable
              value: 2000
            - name: InvalidParameterUnitMeasurementType
              value: 2100
            - name: ParameterUnitRequired
              value: 2101
            - name: InvalidParameterValueDataType
              value: 2102
            - name: InvalidParameterAttributeType
              value: 2103
            - name: SubscriptionRequiredForParameter
              value: 2104
            - name: InvalidAccountType
              value: 2105
            - name: InvalidFirmSubscriptions
              value: 2106
            - name: GenericTaxCodeForItem
              value: 2200
            - name: CannotCertifyCompany
              value: 2201
            - name: NoVoidedDocuments
              value: 2202
            - name: InadequateCommittedDocuments
              value: 2203
            - name: DocumentCodeIsGuid
              value: 2204
            - name: CustomerVendorCodeIsGuid
              value: 2205
            - name: InadequateDocumentLineCount
              value: 2206
            - name: SameDocumentDescription
              value: 2207
            - name: NoExemptionNoOrCustomerUsageType
              value: 2208
            - name: InadequateUniqueAddresses
              value: 2209
            - name: ItemCodesAreAllSame
              value: 2210
            - name: TaxCodesAreAllSame
              value: 2211
            - name: LocationCodeNotUsed
              value: 2212
            - name: RepeatedLinesInDocument
              value: 2213
            - name: TaxDateOverrideAndNegativeLineAmount
              value: 2214
            - name: AllUSDCurrencyCodes
              value: 2215
            - name: NoVATBuyerId
              value: 2216
            - name: AllUSCountryCodes
              value: 2217
            - name: NoDocumentsToTest
              value: 2218
            - name: NoShippingCharge
              value: 2219
            - name: FailedToUpdateCompanyLocation
              value: 2314
            - name: CompanyLocationDateRangeOverlap
              value: 2315
            - name: FieldLengthError
              value: 2400
            - name: InputContainsBlacklistedCharacters
              value: 2401
            - name: CannotCreateNestedObjects
              value: 2402
            - name: UserSubjectIdNotUpdated
              value: 2500
            - name: BatchTransactionTypeError
              value: 2501
            - name: BatchTransactionLineLimitExceeded
              value: 2502
            - name: BatchCompanyIdAndCompanyCodeMismatch
              value: 2503
            - name: BatchCannotBeCancelledStatusError
              value: 2504
            - name: BatchCannotBeCancelledFormatError
              value: 2505
            - name: InvalidParameterDataType
              value: 2600
            - name: TagDoesNotExist
              value: 2620
            - name: ObjectDeleted
              value: 2660
            - name: AssociatedObjectsDeleted
              value: 2661
            - name: CannotDownloadReport
              value: 2700
            - name: InvalidUnitOfBasis
              value: 2800
            - name: NotApplicableUnitOfBasis
              value: 2801
            - name: InvalidRateTypeTaxTypeMapping
              value: 2802
            - name: InvalidTaxTypeGroup
              value: 2803
            - name: InvalidTaxSubType
              value: 2804
            - name: InvalidProductTypeId
              value: 2805
            - name: InvalidTaxRuleType
              value: 2806
            - name: InvalidHsCode
              value: 2807
            - name: NotApplicableTaxType
              value: 2808
            - name: InvalidTaxTypeCode
              value: 2809
        number:
          type: integer
          format: int32
          example: 142
        message:
          type: string
          example: The entity was marked as deleted.
        description:
          type: string
          example: Object successfully marked as deleted.
        faultCode:
          type: string
          example: Client
        faultSubCode:
          type: string
        helpLink:
          type: string
          readOnly: true
          example: http://developer.avalara.com/avatax/errors/DeleteInformation
        refersTo:
          type: string
        severity:
          type: string
          example: Success
          enum:
          - Success
          - Warning
          - Error
          - Exception
          x-enum-metadata:
            name: SeverityLevel
            values:
            - name: Success
              value: 0
            - name: Warning
              value: 1
            - name: Error
              value: 2
            - name: Exception
              value: 3
      example:
        code: DeleteInformation
        number: 142
        message: The entity was marked as deleted.
        description: Object successfully marked as deleted.
        faultCode: Client
        helpLink: http://developer.avalara.com/avatax/errors/DeleteInformation
        severity: Success
    AccountModelFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/AccountModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    AccountMigrationStatusModel:
      required:
      - accountId
      type: object
      properties:
        accountId:
          type: integer
          description: The unique ID number assigned to this account.
          format: int32
          example: 12345
        accountName:
          type: string
          description: The name of this account.
          example: Test Account
        modifiedDate:
          type: string
          description: The date/time when this record was last modified.
          format: date-time
        modifiedUserId:
          type: integer
          description: The user ID of the user who last modified this record.
          format: int32
        accountMigrationStatusId:
          type: integer
          description: The Tss Read Write Mode.
          format: int32
          example: 0
      description: An AvaTax account.
      example:
        accountId: 12345
        accountName: Test Account
        accountMigrationStatusId: 0
    CompanyAddress:
      required:
      - country
      - line
      - postalCode
      type: object
      properties:
        line:
          maxLength: 100
          minLength: 0
          type: string
          description: Address Line1
          example: 2000 Main Street
        city:
          maxLength: 50
          minLength: 0
          type: string
          description: City
          example: Irvine
        region:
          type: string
          description: "Name or ISO 3166 code identifying the region within the country.\r\
            \n            \r\nThis field supports many different region identifiers:\r\
            \n * Two and three character ISO 3166 region codes\r\n * Fully spelled\
            \ out names of the region in ISO supported languages\r\n * Common alternative\
            \ spellings for many regions\r\n            \r\nFor a full list of all\
            \ supported codes and names, please see the Definitions API `ListRegions`."
          example: CA
        country:
          type: string
          description: "Name or ISO 3166 code identifying the country.\r\n       \
            \     \r\nThis field supports many different country identifiers:\r\n\
            \ * Two character ISO 3166 codes\r\n * Three character ISO 3166 codes\r\
            \n * Fully spelled out names of the country in ISO supported languages\r\
            \n * Common alternative spellings for many countries\r\n            \r\
            \nFor a full list of all supported codes and names, please see the Definitions\
            \ API `ListCountries`."
          example: US
        postalCode:
          maxLength: 10
          minLength: 0
          type: string
          description: Postal Code
          example: "92614"
      description: Company Address Information
      example:
        line: 2000 Main Street
        city: Irvine
        region: CA
        country: US
        postalCode: "92614"
    NewAccountRequestModel:
      required:
      - accountName
      - companyAddress
      - email
      - firstName
      - lastName
      - offer
      type: object
      properties:
        offer:
          type: string
          description: "The offer code provided to you by your Avalara business development\
            \ contact.\r\n            \r\nThis code controls what services and rates\
            \ the customer will be provisioned with upon creation.\r\n           \
            \ \r\nIf you do not know your offer code, please contact your Avalara\
            \ business development representative."
          example: DeveloperDotAvalaraFreeTrial
        connectorId:
          type: string
          description: The id associated with the connector
          example: a0n4000000ChMwPAAV
        campaign:
          type: string
          description: "If your Avalara business development representative requests,\
            \ please provide the campaign ID associated with your\r\nsignup process.\
            \  This campaign identifier helps Avalara match users to the context in\
            \ which they learned about the product\r\nto help improve the accuracy\
            \ of our messaging.\r\n            \r\nThe `campaign` field must be either\
            \ null or a value provided to you by an Avalara business development representative.\r\
            \nIf you provide an unexpected value in this field, your API call will\
            \ fail."
          example: 70140000000TsVb
        leadSource:
          type: string
          description: "If your Avalara business development representative requests,\
            \ please provide the lead source value associated with your\r\nsignup\
            \ process.  This lead source identifier helps Avalara match users to the\
            \ context in which they learned about the product\r\nto help improve the\
            \ accuracy of our messaging.\r\n            \r\nThe `leadSource` field\
            \ must be either null or a value provided to you by an Avalara business\
            \ development representative.\r\nIf you provide an unexpected value in\
            \ this field, your API call will fail."
          example: Direct Visitor
        effectiveDate:
          type: string
          description: "The date on which the account should take effect.  If null,\
            \ defaults to today.\r\n            \r\nYou should leave this value `null`\
            \ unless specifically requested by your Avalara business development manager."
          format: date-time
        endDate:
          type: string
          description: "The date on which the account should expire.\r\n         \
            \   \r\nYou should leave this value `null` unless specifically requested\
            \ by your Avalara business development manager."
          format: date-time
        accountName:
          maxLength: 50
          minLength: 0
          type: string
          description: The name of the account to create
          example: BizTech Company Inc.
        website:
          maxLength: 255
          minLength: 0
          type: string
          description: "Website of the new customer whose account is being created.\r\
            \n            \r\nIt is strongly recommended to provide the customer's\
            \ website URL, as this will help our support representatives better\r\n\
            assist customers."
          example: https://biztech.com
        paymentMethodId:
          type: string
          description: "Payment Method to be associated with the account.\r\n    \
            \        \r\nThis is strictly to be used internally unless your Avalara\
            \ business development manager specifically asks you to provide this value\r\
            \nwhile attempting to create an account."
          example: 701abc-def
        firstName:
          maxLength: 50
          minLength: 0
          type: string
          description: First name of the primary contact person for this account
          example: Bob
        lastName:
          maxLength: 50
          minLength: 0
          type: string
          description: Last name of the primary contact person for this account
          example: Example
        title:
          maxLength: 50
          minLength: 0
          type: string
          description: Title of the primary contact person for this account
        phoneNumber:
          maxLength: 50
          minLength: 0
          type: string
          description: Phone number of the primary contact person for this account
        email:
          maxLength: 50
          minLength: 0
          type: string
          description: Email of the primary contact person for this account
          example: bob@example.org
        username:
          maxLength: 50
          minLength: 0
          type: string
          description: "The username to be associated with the user created.\r\nIf\
            \ this is not provided, email address will be used as the username."
          example: bob
        userPassword:
          type: string
          description: "If instructed by your Avalara business development manager,\
            \ set this value to a temporary password to permit the user to continue\
            \ their onboarding process.\r\n            \r\nIf this value is null,\
            \ a temporary password is generated by the system and emailed to the user.\r\
            \n            \r\nThe user will then be asked to choose a permanent password\
            \ when they first log on to the AvaTax website."
        welcomeEmail:
          type: string
          description: "This option controls what type of a welcome email is sent\
            \ when the account is created.\r\n            \r\n* `Normal` - A standard\
            \ welcome email will be sent.\r\n* `Suppressed` - No email will be sent.\r\
            \n* `Custom` - If your Avalara business development representative provides\
            \ you with a customized welcome email for your customers, please select\
            \ this option."
          example: Normal
        companyAddress:
          $ref: '#/components/schemas/CompanyAddress'
        companyCode:
          maxLength: 50
          minLength: 0
          type: string
          description: "Company code to be assigned to the company created for this\
            \ account.\r\n            \r\nIf no company code is provided, this will\
            \ be defaulted to \"DEFAULT\" company code."
        properties:
          type: array
          description: Properties of the primary contact person for this account
          items:
            type: string
        acceptAvalaraTermsAndConditions:
          type: boolean
          description: "Set this to true if and only if the owner of the newly created\
            \ account accepts Avalara's terms and conditions for your account.\r\n\
            \            \r\nReading and accepting Avalara's terms and conditions\
            \ is necessary in order for the account to receive a license key."
          example: true
        haveReadAvalaraTermsAndConditions:
          type: boolean
          description: "Set this to true if and only if the owner of the newly created\
            \ account has fully read Avalara's terms and conditions for your account.\r\
            \n            \r\nReading and accepting Avalara's terms and conditions\
            \ is necessary in order for the account to receive a license key."
          example: true
        marketingContext:
          type: object
          additionalProperties:
            type: string
          description: A dynamic key-value pair for the marketing context information
          example:
            campaignId: 70140000000TsVb
            leadSource: Direct Visitor
        accountType:
          type: string
          description: Type of the account to be created. Regular, Firm or FirmClient
          example: Regular
          enum:
          - Regular
          - Firm
          - FirmClient
          x-enum-metadata:
            name: AccountTypeId
            values:
            - name: Regular
              value: 1
            - name: Firm
              value: 2
            - name: FirmClient
              value: 3
        taxPayerIdNumber:
          maxLength: 11
          minLength: 0
          type: string
          description: "United States Taxpayer ID number, usually your Employer Identification\
            \ Number if you are a business or your\r\nSocial Security Number if you\
            \ are an individual.\r\nThis value is required if the address provided\
            \ is inside the US and if you subscribed to the Avalara Managed Returns\
            \ or SST Certified Service Provider service. Otherwise it is optional."
      description: "Represents a request for a new account with Avalara for a new\
        \ subscriber.\r\nContains information about the account requested and the\
        \ rate plan selected."
      example:
        offer: DeveloperDotAvalaraFreeTrial
        connectorId: a0n4000000ChMwPAAV
        campaign: 70140000000TsVb
        leadSource: Direct Visitor
        accountName: BizTech Company Inc.
        website: https://biztech.com
        paymentMethodId: 701abc-def
        firstName: Bob
        lastName: Example
        email: bob@example.org
        username: bob
        welcomeEmail: Normal
        companyAddress:
          line: 100 Ravine Ln
          region: WA
          country: US
          postalCode: "98010"
        acceptAvalaraTermsAndConditions: true
        haveReadAvalaraTermsAndConditions: true
        marketingContext:
          campaignId: 70140000000TsVb
          leadSource: Direct Visitor
        accountType: Regular
    NewAccountModel:
      type: object
      properties:
        accountId:
          type: integer
          description: This is the ID number of the account that was created
          format: int32
          example: 123456789
        accountDetailsEmailedTo:
          type: string
          description: This is the email address to which credentials were mailed
          example: bob@example.org
        createdDate:
          type: string
          description: The date and time when this account was created
          format: date-time
        emailedDate:
          type: string
          description: The date and time when account information was emailed to the
            user
          format: date-time
        limitations:
          type: string
          description: If this account includes any limitations, specify them here
        licenseKey:
          type: string
          description: The license key of the account that was created
        paymentUrl:
          type: string
          description: The payment url where the payment method can be set up
      description: Represents information about a newly created account
      example:
        accountId: 123456789
        accountDetailsEmailedTo: bob@example.org
        createdDate: 0001-01-01T00:00:00
        emailedDate: 0001-01-01T00:00:00
    OfferModel:
      type: object
      properties:
        id:
          type: string
          description: Id of the transaction
          example: "1234567989"
        offerMessage:
          type: string
          description: Message indicating what action took place
          example: The offer abc has been added to the account 123456789 at 2018-07-08
      description: Gets the response for the offer request
      example:
        id: "1234567989"
        offerMessage: The offer abc has been added to the account 123456789 at 2018-07-08
    FreeTrialRequestModel:
      required:
      - acceptAvalaraTermsAndConditions
      - company
      - companyAddress
      - email
      - firstName
      - haveReadAvalaraTermsAndConditions
      - lastName
      - phone
      type: object
      properties:
        firstName:
          maxLength: 50
          minLength: 0
          type: string
          description: The first or given name of the user requesting a free trial.
          example: Bob
        lastName:
          maxLength: 50
          minLength: 0
          type: string
          description: The last or family name of the user requesting a free trial.
          example: McExample
        email:
          maxLength: 50
          minLength: 0
          type: string
          description: The email address of the user requesting a free trial.
          example: bob@example.org
        company:
          type: string
          description: "The company or organizational name for this free trial.  If\
            \ this account is for personal use, it is acceptable\r\nto use your full\
            \ name here."
          example: Bob's Artisan Pottery
        phone:
          type: string
          description: The phone number of the person requesting the free trial.
          example: +1 (714) 555-1212
        campaign:
          type: string
          description: Campaign identifier for Notification purpose
          example: 70140000000TsVb
        companyAddress:
          $ref: '#/components/schemas/CompanyAddress'
        website:
          maxLength: 50
          minLength: 0
          type: string
          description: Website of the company or user requesting a free trial
          example: www.bobartisanpottery.com
        haveReadAvalaraTermsAndConditions:
          type: boolean
          description: Read Avalara's terms and conditions is necessary for a free
            trial account
          example: true
        acceptAvalaraTermsAndConditions:
          type: boolean
          description: Accept Avalara's terms and conditions is necessary for a free
            trial
          example: true
      description: "Represents a request for a free trial account for AvaTax.\r\n\
        Free trial accounts are only available on the Sandbox environment."
      example:
        firstName: Bob
        lastName: McExample
        email: bob@example.org
        company: Bob's Artisan Pottery
        phone: +1 (714) 555-1212
        campaign: 70140000000TsVb
        companyAddress:
          line: 100 Ravine Ln
          region: WA
          country: US
          postalCode: "98010"
        website: www.bobartisanpottery.com
        haveReadAvalaraTermsAndConditions: true
        acceptAvalaraTermsAndConditions: true
    ResetLicenseKeyModel:
      required:
      - accountId
      - confirmResetLicenseKey
      type: object
      properties:
        accountId:
          type: integer
          description: The primary key of the account ID to reset
          format: int32
          example: 123456789
        confirmResetLicenseKey:
          type: boolean
          description: "Set this value to true to reset the license key for this account.\r\
            \nThis license key reset function will only work when called using the\
            \ credentials of the account administrator of this account."
          example: true
      description: Represents a license key reset request.
      example:
        accountId: 123456789
        confirmResetLicenseKey: true
    LicenseKeyModel:
      type: object
      properties:
        accountId:
          type: integer
          description: The primary key of the account
          format: int32
          example: 123456789
        privateLicenseKey:
          type: string
          description: "This is your private license key.  You must record this license\
            \ key for safekeeping.\r\nIf you lose this key, you must contact the ResetLicenseKey\
            \ API in order to request a new one.\r\nEach account can only have one\
            \ license key at a time."
          example: 742A02AA463CDE741E932EC365360CA3CF378BD9
        httpRequestHeader:
          type: string
          description: "If your software allows you to specify the HTTP Authorization\
            \ header directly, this is the header string you\r\nshould use when contacting\
            \ Avalara to make API calls with this license key."
          example: Basic MTIzNDU2Nzg5Ojc0MkEwMkFBNDYzQ0RFNzQxRTkzMkVDMzY1MzYwQ0EzQ0YzNzhCRDk=
      description: Represents a license key for this account.
      example:
        accountId: 123456789
        privateLicenseKey: 742A02AA463CDE741E932EC365360CA3CF378BD9
        httpRequestHeader: Basic MTIzNDU2Nzg5Ojc0MkEwMkFBNDYzQ0RFNzQxRTkzMkVDMzY1MzYwQ0EzQ0YzNzhCRDk=
    AccountLicenseKeyModel:
      required:
      - accountId
      - name
      type: object
      properties:
        name:
          maxLength: 30
          minLength: 0
          type: string
          description: The unique name for license key per account
          example: ABCDEFGHIJK
        accountId:
          type: integer
          description: AccountId for required license key
          format: int32
          example: 123456789
        createdDate:
          type: string
          description: The date when this record was created.
          format: date-time
          readOnly: true
          example: 2022-01-10T00:00:00Z
        createdUserId:
          type: integer
          description: The user id for the user who created this record.
          format: int32
          readOnly: true
          example: 1
        modifiedDate:
          type: string
          description: The date/time when this record was last modified.
          format: date-time
          readOnly: true
          example: 2022-01-10T00:00:00Z
        modifiedUserId:
          type: integer
          description: The user id of user who last modified this record.
          format: int32
          readOnly: true
          example: 1
      description: An account user who is permitted to use AvaTax.
      example:
        name: ABCDEFGHIJK
        accountId: 123456789
        createdDate: 2022-01-10T00:00:00+00:00
        createdUserId: 1
        modifiedDate: 2022-01-10T00:00:00+00:00
        modifiedUserId: 1
    ActivateAccountModel:
      type: object
      properties:
        acceptAvalaraTermsAndConditions:
          type: boolean
          description: Set this to true if and only if you accept Avalara's terms
            and conditions for your account.
          example: true
        haveReadAvalaraTermsAndConditions:
          type: boolean
          description: Set this to true if and only if you have fully read Avalara's
            terms and conditions for your account.
          example: true
      description: Represents a request to activate an account by reading and accepting
        its terms and conditions.
      example:
        acceptAvalaraTermsAndConditions: true
        haveReadAvalaraTermsAndConditions: true
    AccountConfigurationModel:
      required:
      - category
      - name
      type: object
      properties:
        accountId:
          type: integer
          description: The unique ID number of the account to which this setting applies
          format: int32
          readOnly: true
          example: 0
        category:
          maxLength: 25
          minLength: 0
          type: string
          description: The category of the configuration setting.  Avalara-defined
            categories include `AddressServiceConfig` and `TaxServiceConfig`.  Customer-defined
            categories begin with `X-`.
          example: TaxServiceConfig
        name:
          maxLength: 50
          minLength: 0
          type: string
          description: The name of the configuration setting
          example: MaxLines
        value:
          maxLength: 200
          minLength: 0
          type: string
          description: The current value of the configuration setting
          example: "1000"
        createdDate:
          type: string
          description: The date when this record was created.
          format: date-time
          readOnly: true
        createdUserId:
          type: integer
          description: The User ID of the user who created this record.
          format: int32
          readOnly: true
        modifiedDate:
          type: string
          description: The date/time when this record was last modified.
          format: date-time
          readOnly: true
        modifiedUserId:
          type: integer
          description: The user ID of the user who last modified this record.
          format: int32
          readOnly: true
      description: Represents one configuration setting for this account
      example:
        accountId: 0
        category: TaxServiceConfig
        name: MaxLines
        value: "1000"
    AuditEvent:
      type: object
      properties:
        auditEventId:
          type: integer
          format: int64
        transactionId:
          type: integer
          format: int64
        auditEventLevelId:
          type: integer
          format: int32
        eventTimestamp:
          type: string
          format: date-time
        source:
          type: string
        summary:
          type: string
        details:
          type: string
    AuditModel:
      type: object
      properties:
        transactionId:
          type: integer
          description: A unique ID number referring to this individual API call.
          format: int64
        accountId:
          type: integer
          description: The unique ID number of the account to which the user belongs.
          format: int32
        userId:
          type: integer
          description: The unique ID number of the user that performed this API call.
          format: int32
        ipAddress:
          type: string
          description: "The origin IP address from which AvaTax received this API\
            \ call.  If you use a proxy layer or other\r\ngateway, this IP address\
            \ may be the address of the gateway.  This information is not guaranteed\r\
            \nto be accurate and may change based on network conditions between your\
            \ site and AvaTax."
        machineName:
          type: string
          description: "If your API call specified a `MachineName` in the [Client\
            \ Profile Headers](https://developer.avalara.com/avatax/client-headers/),\
            \ this\r\nvariable will contain its value.  This information is self-reported\
            \ by the client and is not guaranteed to be present."
        clientName:
          type: string
          description: "If your API call specified a `ClientName` in the [Client Profile\
            \ Headers](https://developer.avalara.com/avatax/client-headers/), this\r\
            \nvariable will contain its value.  This information is self-reported\
            \ by the client and is not guaranteed to be present."
        clientVersion:
          type: string
          description: "If your API call specified a `ClientVersion` in the [Client\
            \ Profile Headers](https://developer.avalara.com/avatax/client-headers/),\
            \ this\r\nvariable will contain its value.  This information is self-reported\
            \ by the client and is not guaranteed to be present."
        adapterName:
          type: string
          description: "If your API call specified a `AdapterName` in the [Client\
            \ Profile Headers](https://developer.avalara.com/avatax/client-headers/),\
            \ this\r\nvariable will contain its value.  This information is self-reported\
            \ by the client and is not guaranteed to be present."
        adapterVersion:
          type: string
          description: "If your API call specified a `AdapterVersion` in the [Client\
            \ Profile Headers](https://developer.avalara.com/avatax/client-headers/),\
            \ this\r\nvariable will contain its value.  This information is self-reported\
            \ by the client and is not guaranteed to be present."
        serverName:
          type: string
          description: The server name of the AvaTax server that responded to this
            API call.
        serverVersion:
          type: string
          description: The software version number of the currently deployed AvaTax
            API software on the server that responded to this API call.
        referenceId:
          type: integer
          description: "A context-dependent reference ID for this API call.  This\
            \ reference ID is not guaranteed to contain a specific value\r\nand may\
            \ be used differently by various API calls."
          format: int64
        severityLevelId:
          type: integer
          description: "If the API contained a specific type of error code, this value\
            \ would contain the unique ID number of the severity level\r\nof the response\
            \ returned to the client."
          format: int32
        serverTimestamp:
          type: string
          description: The server timestamp, in UTC, of the time when the server received
            this API call.
          format: date-time
        serverDuration:
          type: integer
          description: The number of milliseconds that the AvaTax server took to respond
            to this API call.
          format: int32
        serviceName:
          type: string
          description: The service name of the AvaTax API service that responded to
            this API call.
        operation:
          type: string
          description: The operation name of this API call.
        referenceCode:
          type: string
          description: "A context-dependent reference code for this API call.  This\
            \ reference code is not guaranteed to contain a specific value\r\nand\
            \ may be used differently by various API calls."
        errorMessage:
          type: string
          description: "If this API call reported an error, this contains the name\
            \ of the error that was returned.  You can look up more\r\ninformation\
            \ about AvaTax error messages on the [AvaTax REST Error Page](https://developer.avalara.com/avatax/errors/)."
        auditMessage:
          type: string
          description: Reserved for Avalara internal usage.
        loadBalancerDuration:
          type: integer
          description: Reserved for Avalara internal usage.
          format: int32
        recordCount:
          type: integer
          description: If this API call returned an array of information, this value
            contains the number of records returned.
          format: int32
        referenceAuthorization:
          type: string
          description: Reserved for Avalara internal usage.
        isQueued:
          type: boolean
          description: Reserved for Avalara internal usage.
        databaseCallCount:
          type: integer
          description: "If this API call included requests made to any of the AvaTax\
            \ data layers, this contains the number of requests that were traced.\r\
            \n            \r\nPlease note that not all data layers support this measurement."
          format: int32
        databaseCallDuration:
          type: string
          description: "If this API call included requests made to any of the AvaTax\
            \ data layers, this contains the total duration time measured for all\
            \ the requests.\r\n            \r\nPlease note that not all data layers\
            \ support this measurement."
        remoteCallDuration:
          type: string
          description: If this API call included interoperation with other Avalara
            services, this contains the amount of time taken by those services.
        events:
          type: array
          description: Reserved for Avalara internal usage.
          items:
            $ref: '#/components/schemas/AuditEvent'
        requestUrl:
          type: string
          description: The original request URL as provided by the client.
        requestBody:
          type: string
          description: "If this request was an HTTP request that included a body such\
            \ as a POST or a PUT, this will contain the request body sent by the client.\r\
            \n            \r\nThis request body is represented as a string, exactly\
            \ as it was received from the client.  Regardless of whether the request\
            \ was JSON,\r\nBase64 encoded bytes, or a CSV file, this contains the\
            \ exact contents of the request body."
        responseStatus:
          type: integer
          description: The HTTP response code that was sent by the server.
          format: int32
        responseBody:
          type: string
          description: "The entire response body sent from the AvaTax server to the\
            \ client.  This value is returned as a string regardless of whether the\
            \ results\r\nwere JSON-formatted text, CSV files, or raw strings."
        remoteCalls:
          type: array
          description: Reserved for Avalara internal usage.
          items:
            $ref: '#/components/schemas/AuditModel'
      description: "Provides detailed information about an API call.\r\n         \
        \   \r\nThe information on this record was captured by AvaTax when your API\
        \ call was made.  If you are unsure why you\r\nreceived an error, you can\
        \ fetch these audit objects and examine the `RequestUrl`, `RequestBody`, and\
        \ `ErrorMessage`\r\nfields to determine root cause for the error."
      example:
        transactionId: 123
        accountId: 123
        userId: 123
        ipAddress: 123.0.0.123
        machineName: AV-T1234-56789
        clientName: Swagger UI
        clientVersion: 12.3.0
        adapterVersion: "1.0"
        serverName: AV-T1234-56789
        serverVersion: 12.3.0.0
        referenceId: 0
        severityLevelId: 0
        serverTimestamp: 2022-01-10T15:49:24.2020997Z
        serverDuration: 12345
        serviceName: AccountSvcJson
        operation: QueryCompanies
        referenceCode: /api/v2/companies
        errorMessage: ""
        loadBalancerDuration: 0
        recordCount: 32309
        referenceAuthorization: ""
        isQueued: false
        databaseCallCount: 1
        databaseCallDuration: 00:00:00
        remoteCallDuration: 00:00:00
        requestUrl: /api/v2/companies
        responseStatus: 200
        responseBody: "{\r\n  \"@recordsetCount\": 0,\r\n  \"value\": [],\r\n  \"\
          @nextLink\": \"/api/v2/companies?%24top=10&%24skip=10\"\r\n}"
    AuditModelFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/AuditModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    AddressValidationInfo:
      type: object
      properties:
        line1:
          maxLength: 50
          minLength: 0
          type: string
          description: First line of the street address
          example: 2000 Main Street
        textCase:
          type: string
          description: Specify the text case for the validated address result.  If
            not specified, will return uppercase.
          example: Upper
          enum:
          - Upper
          - Mixed
          x-enum-metadata:
            name: TextCase
            values:
            - name: Upper
              value: 0
            - name: Mixed
              value: 1
        line2:
          maxLength: 100
          minLength: 0
          type: string
          description: Second line of the street address
        line3:
          maxLength: 100
          minLength: 0
          type: string
          description: Third line of the street address
        city:
          maxLength: 50
          minLength: 0
          type: string
          description: City component of the address
          example: Irvine
        region:
          type: string
          description: "Name or ISO 3166 code identifying the region within the country.\r\
            \n            \r\nThis field supports many different region identifiers:\r\
            \n * Two and three character ISO 3166 region codes\r\n * Fully spelled\
            \ out names of the region in ISO supported languages\r\n * Common alternative\
            \ spellings for many regions\r\n            \r\nFor a full list of all\
            \ supported codes and names, please see the Definitions API `ListRegions`."
          example: CA
        country:
          type: string
          description: "Name or ISO 3166 code identifying the country.\r\n       \
            \     \r\nThis field supports many different country identifiers:\r\n\
            \ * Two character ISO 3166 codes\r\n * Three character ISO 3166 codes\r\
            \n * Fully spelled out names of the country in ISO supported languages\r\
            \n * Common alternative spellings for many countries\r\n            \r\
            \nFor a full list of all supported codes and names, please see the Definitions\
            \ API `ListCountries`."
          example: US
        postalCode:
          maxLength: 11
          minLength: 0
          type: string
          description: Postal Code / Zip Code component of the address.
          example: "92614"
        latitude:
          type: number
          description: Geospatial latitude measurement, in Decimal Degrees floating
            point format.
          format: double
        longitude:
          type: number
          description: Geospatial longitude measurement, in Decimal Degrees floating
            point format.
          format: double
      description: TextCase info for input address
      example:
        line1: 2000 Main Street
        textCase: Upper
        city: Irvine
        region: CA
        country: US
        postalCode: "92614"
    AddressInfo:
      type: object
      properties:
        line1:
          type: string
          description: First line of the street address
          example: 2000 Main Street
        line2:
          maxLength: 100
          minLength: 0
          type: string
          description: Second line of the street address
        line3:
          maxLength: 100
          minLength: 0
          type: string
          description: Third line of the street address
        city:
          maxLength: 50
          minLength: 0
          type: string
          description: City component of the address
          example: Irvine
        region:
          type: string
          description: "Name or ISO 3166 code identifying the region within the country.\r\
            \n            \r\nThis field supports many different region identifiers:\r\
            \n * Two and three character ISO 3166 region codes\r\n * Fully spelled\
            \ out names of the region in ISO supported languages\r\n * Common alternative\
            \ spellings for many regions\r\n            \r\nFor a full list of all\
            \ supported codes and names, please see the Definitions API `ListRegions`."
          example: CA
        country:
          type: string
          description: "Name or ISO 3166 code identifying the country.\r\n       \
            \     \r\nThis field supports many different country identifiers:\r\n\
            \ * Two character ISO 3166 codes\r\n * Three character ISO 3166 codes\r\
            \n * Fully spelled out names of the country in ISO supported languages\r\
            \n * Common alternative spellings for many countries\r\n            \r\
            \nFor a full list of all supported codes and names, please see the Definitions\
            \ API `ListCountries`."
          example: US
        postalCode:
          maxLength: 11
          minLength: 0
          type: string
          description: Postal Code / Zip Code component of the address.
          example: "92614"
        latitude:
          type: number
          description: Geospatial latitude measurement, in Decimal Degrees floating
            point format.
          format: double
        longitude:
          type: number
          description: Geospatial longitude measurement, in Decimal Degrees floating
            point format.
          format: double
      description: Represents a base address element.
      example:
        line1: 2000 Main Street
        city: Irvine
        region: CA
        country: US
        postalCode: "92614"
    ValidatedAddressInfo:
      type: object
      properties:
        addressType:
          type: string
          description: "Address type code. One of:\r\n* Firm or company address\r\n\
            * General Delivery address\r\n* High-rise or business complex\r\n* PO\
            \ Box address\r\n* Rural route address\r\n* Street or residential address"
          example: S
        line1:
          maxLength: 50
          minLength: 0
          type: string
          description: First line of the street address
          example: 2000 Main Street
        line2:
          maxLength: 100
          minLength: 0
          type: string
          description: Second line of the street address
        line3:
          maxLength: 100
          minLength: 0
          type: string
          description: Third line of the street address
        city:
          maxLength: 50
          minLength: 0
          type: string
          description: City component of the address
          example: Irvine
        region:
          type: string
          description: "Name or ISO 3166 code identifying the region within the country.\r\
            \n            \r\nThis field supports many different region identifiers:\r\
            \n * Two and three character ISO 3166 region codes\r\n * Fully spelled\
            \ out names of the region in ISO supported languages\r\n * Common alternative\
            \ spellings for many regions\r\n            \r\nFor a full list of all\
            \ supported codes and names, please see the Definitions API `ListRegions`."
          example: CA
        country:
          type: string
          description: "Name or ISO 3166 code identifying the country.\r\n       \
            \     \r\nThis field supports many different country identifiers:\r\n\
            \ * Two character ISO 3166 codes\r\n * Three character ISO 3166 codes\r\
            \n * Fully spelled out names of the country in ISO supported languages\r\
            \n * Common alternative spellings for many countries\r\n            \r\
            \nFor a full list of all supported codes and names, please see the Definitions\
            \ API `ListCountries`."
          example: US
        postalCode:
          maxLength: 11
          minLength: 0
          type: string
          description: Postal Code / Zip Code component of the address.
          example: "92614"
        latitude:
          type: number
          description: Geospatial latitude measurement, in Decimal Degrees floating
            point format.
          format: double
        longitude:
          type: number
          description: Geospatial longitude measurement, in Decimal Degrees floating
            point format.
          format: double
      description: Represents a validated address
      example:
        addressType: S
        line1: 2000 Main Street
        city: Irvine
        region: CA
        country: US
        postalCode: "92614"
    CoordinateInfo:
      type: object
      properties:
        latitude:
          type: number
          description: Latitude
          format: double
          example: 33.684884
        longitude:
          type: number
          description: Longitude
          format: double
          example: -117.851321
      description: Coordinate Info
      example:
        latitude: 33.684884
        longitude: -117.851321
    TaxAuthorityInfo:
      required:
      - jurisdictionName
      type: object
      properties:
        avalaraId:
          type: string
          description: A unique ID number assigned by Avalara to this tax authority.
          example: AGAM
        jurisdictionName:
          maxLength: 128
          minLength: 0
          type: string
          description: The friendly jurisdiction name for this tax authority.
          example: CALIFORNIA
        jurisdictionType:
          type: string
          description: The type of jurisdiction referenced by this tax authority.
          example: Country
          enum:
          - Country
          - State
          - County
          - City
          - Special
          x-enum-metadata:
            name: JurisdictionType
            values:
            - name: Country
              value: 0
            - name: State
              value: 1
            - name: County
              value: 2
            - name: City
              value: 3
            - name: Special
              value: 4
        signatureCode:
          maxLength: 4
          minLength: 0
          type: string
          description: An Avalara-assigned signature code for this tax authority.
          example: AGAM
      description: Information about a tax authority relevant for an address.
      example:
        avalaraId: AGAM
        jurisdictionName: CALIFORNIA
        jurisdictionType: State
        signatureCode: AGAM
    AvaTaxMessage:
      type: object
      properties:
        summary:
          type: string
          description: A brief summary of what this message tells us
          example: Using JAAS
        details:
          type: string
          description: Detailed information that explains what the summary provided
          example: 'Address: 123 Main Street, Irvine, CA 92615 US, TaxRegion:2127863,
            Latitude: 33.657808, Longitude: -117.968489'
        refersTo:
          type: string
          description: Information about what object in your request this message
            refers to
          example: 'Addresses[0] - TaxDate: 2017-09-21 00:00:00Z'
        severity:
          type: string
          description: A category that indicates how severely this message affects
            the results
          example: Success
        source:
          type: string
          description: The name of the code or service that generated this message
          example: Avalara.AvaTax.Services.Tax.Steps
      description: Informational or warning messages returned by AvaTax with a transaction
      example:
        summary: Using JAAS
        details: 'Address: 123 Main Street, Irvine, CA 92615 US, TaxRegion:2127863,
          Latitude: 33.657808, Longitude: -117.968489'
        refersTo: 'Addresses[0] - TaxDate: 2017-09-21 00:00:00Z'
        severity: Success
        source: Avalara.AvaTax.Services.Tax.Steps
    AddressResolutionModel:
      type: object
      properties:
        address:
          $ref: '#/components/schemas/AddressInfo'
        validatedAddresses:
          type: array
          description: The validated address or addresses
          items:
            $ref: '#/components/schemas/ValidatedAddressInfo'
        coordinates:
          $ref: '#/components/schemas/CoordinateInfo'
        resolutionQuality:
          type: string
          description: The resolution quality of the geospatial coordinates
          example: NotCoded
          enum:
          - NotCoded
          - External
          - CountryCentroid
          - RegionCentroid
          - PartialCentroid
          - PostalCentroidGood
          - PostalCentroidBetter
          - PostalCentroidBest
          - Intersection
          - Interpolated
          - Rooftop
          - Constant
          x-enum-metadata:
            name: ResolutionQuality
            values:
            - name: NotCoded
              value: 0
            - name: External
              value: 1
            - name: CountryCentroid
              value: 2
            - name: RegionCentroid
              value: 3
            - name: PartialCentroid
              value: 4
            - name: PostalCentroidGood
              value: 5
            - name: PostalCentroidBetter
              value: 6
            - name: PostalCentroidBest
              value: 7
            - name: Intersection
              value: 8
            - name: Interpolated
              value: 9
            - name: Rooftop
              value: 10
            - name: Constant
              value: 11
        taxAuthorities:
          type: array
          description: List of informational and warning messages regarding this address
          example:
          - avalaraId: AGAM
            jurisdictionName: CALIFORNIA
            jurisdictionType: State
            signatureCode: AGAM
          items:
            $ref: '#/components/schemas/TaxAuthorityInfo'
        messages:
          type: array
          description: List of informational and warning messages regarding this address
          example:
          - summary: The address is not deliverable.
            details: The physical location exists but there are no homes on this street.
              One reason might be railroad tracks or rivers running alongside this
              street, as they would prevent construction of homes in this location.
            refersTo: address
            severity: Error
            source: Avalara.AvaTax.Services.Address
          items:
            $ref: '#/components/schemas/AvaTaxMessage'
      description: Address Resolution Model
      example:
        address:
          line1: 2000 Main Street
          city: Irvine
          region: CA
          country: US
          postalCode: "92614"
        coordinates:
          latitude: 33.684884
          longitude: -117.851321
        resolutionQuality: Intersection
        taxAuthorities:
        - avalaraId: AGAM
          jurisdictionName: CALIFORNIA
          jurisdictionType: State
          signatureCode: AGAM
        messages:
        - summary: The address is not deliverable.
          details: The physical location exists but there are no homes on this street.
            One reason might be railroad tracks or rivers running alongside this street,
            as they would prevent construction of homes in this location.
          refersTo: address
          severity: Error
          source: Avalara.AvaTax.Services.Address
    AdvancedRuleFullDetailsModel:
      required:
      - name
      - script
      type: object
      properties:
        script:
          type: string
          description: The code script for the rule
        customerDataValidatorScript:
          type: string
          description: Script run for validating customer data
        isApproved:
          type: boolean
          description: Has the rule been approved
          example: false
        createdBy:
          type: string
          description: Creator of the rule
        createdOn:
          type: string
          description: When the rule was created
        modifiedBy:
          type: string
          description: Last updater of the rule
        modifiedOn:
          type: string
          description: When the rule was last updated
        approvedBy:
          type: string
          description: Approver of the rule
        isSystemRule:
          type: boolean
          description: Is this a system rule as opposed to customer-facing
          example: false
        isVisibleInCUP:
          type: boolean
          description: Is the rule displayed in the CUP UI
          example: false
        isTest:
          type: boolean
          description: Is this a rule created for testing
          example: true
        customerDataSchema:
          type: string
          description: The JSON schema for customer data if it is required for the
            rule
        version:
          type: integer
          description: The version of the rule
          format: int32
          example: 0
        accountsVisibleFor:
          type: array
          description: Account Ids the rule is visible for in CUP, when IsVisibleInCUP
            = false
          items:
            type: integer
            format: int32
        ruleId:
          type: string
          description: Unique identifier for a rule
          example: 0199a75514764429a7d7a58c2c801bda
        name:
          type: string
          description: Rule name
          example: Generic replace rule
        description:
          type: string
          description: Description of the rule
          example: This is just an example
        arEntitlementRequired:
          type: boolean
          description: Advance Rules limited availability
          example: false
        executionPosition:
          type: string
          description: Execution position. Both, Before or After
      description: Model for Advanced Rules when full details are requested
      example:
        isApproved: false
        isSystemRule: false
        isVisibleInCUP: false
        isTest: true
        version: 0
        ruleId: 0199a75514764429a7d7a58c2c801bda
        name: Generic replace rule
        description: This is just an example
        arEntitlementRequired: false
    AdvancedRuleFullDetailsModelFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/AdvancedRuleFullDetailsModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    AdvancedRuleCustomerDataSchemaModel:
      type: object
      properties:
        ruleId:
          type: string
          description: Unique identifier for the rule
          example: 3331956d1af643b88011cbcbbd7f8139
        customerDataSchema:
          type: string
          description: Customer data schema
      description: Model for retrieving customer data schema
      example:
        ruleId: 3331956d1af643b88011cbcbbd7f8139
    ContactModel:
      required:
      - contactCode
      type: object
      properties:
        id:
          type: integer
          description: The unique ID number of this contact.
          format: int32
          readOnly: true
          example: 56789
        companyId:
          type: integer
          description: The unique ID number of the company to which this contact belongs.
          format: int32
          readOnly: true
          example: 12345
        contactCode:
          maxLength: 25
          minLength: 0
          type: string
          description: A unique code for this contact.
          example: TestContact43658e2d08b344
        firstName:
          maxLength: 50
          minLength: 0
          type: string
          description: The first or given name of this contact.
          example: Bob
        middleName:
          maxLength: 50
          minLength: 0
          type: string
          description: The middle name of this contact.
        lastName:
          maxLength: 50
          minLength: 0
          type: string
          description: The last or family name of this contact.
          example: McExample
        title:
          maxLength: 50
          minLength: 0
          type: string
          description: Professional title of this contact.
          example: Owner
        line1:
          maxLength: 50
          minLength: 0
          type: string
          description: The first line of the postal mailing address of this contact.
          example: 2000 Main Street
        line2:
          maxLength: 50
          minLength: 0
          type: string
          description: The second line of the postal mailing address of this contact.
        line3:
          maxLength: 50
          minLength: 0
          type: string
          description: The third line of the postal mailing address of this contact.
        city:
          maxLength: 50
          minLength: 0
          type: string
          description: The city of the postal mailing address of this contact.
          example: Irvine
        region:
          type: string
          description: "Name or ISO 3166 code identifying the region within the country.\r\
            \n            \r\nThis field supports many different region identifiers:\r\
            \n * Two and three character ISO 3166 region codes\r\n * Fully spelled\
            \ out names of the region in ISO supported languages\r\n * Common alternative\
            \ spellings for many regions\r\n            \r\nFor a full list of all\
            \ supported codes and names, please see the Definitions API `ListRegions`."
          example: CA
        postalCode:
          maxLength: 10
          minLength: 0
          type: string
          description: The postal code or zip code of the postal mailing address of
            this contact.
          example: "92614"
        country:
          type: string
          description: "Name or ISO 3166 code identifying the country.\r\n       \
            \     \r\nThis field supports many different country identifiers:\r\n\
            \ * Two character ISO 3166 codes\r\n * Three character ISO 3166 codes\r\
            \n * Fully spelled out names of the country in ISO supported languages\r\
            \n * Common alternative spellings for many countries\r\n            \r\
            \nFor a full list of all supported codes and names, please see the Definitions\
            \ API `ListCountries`."
          example: US
        email:
          maxLength: 50
          minLength: 0
          type: string
          description: The email address of this contact.
          example: bob@example.org
        phone:
          maxLength: 25
          minLength: 0
          type: string
          description: The main phone number for this contact.
          example: 714 555-1212
        mobile:
          maxLength: 25
          minLength: 0
          type: string
          description: The mobile phone number for this contact.
        fax:
          maxLength: 25
          minLength: 0
          type: string
          description: The facsimile phone number for this contact.
        createdDate:
          type: string
          description: The date when this record was created.
          format: date-time
          readOnly: true
        createdUserId:
          type: integer
          description: The User ID of the user who created this record.
          format: int32
          readOnly: true
        modifiedDate:
          type: string
          description: The date/time when this record was last modified.
          format: date-time
          readOnly: true
        modifiedUserId:
          type: integer
          description: The user ID of the user who last modified this record.
          format: int32
          readOnly: true
      description: A contact person for a company.
      example:
        id: 56789
        companyId: 12345
        contactCode: TestContact43658e2d08b344
        firstName: Bob
        lastName: McExample
        title: Owner
        line1: 2000 Main Street
        city: Irvine
        region: CA
        postalCode: "92614"
        country: US
        email: bob@example.org
        phone: 714 555-1212
    ClassificationModel:
      required:
      - productCode
      type: object
      properties:
        productCode:
          maxLength: 25
          minLength: 0
          type: string
          description: The product code of an item in a given system.
          example: "9011900000"
        systemCode:
          maxLength: 25
          minLength: 0
          type: string
          description: The system code in which the product belongs.
          example: TARIC
      description: Represents a classification for a given item.
      example:
        productCode: "9011900000"
        systemCode: TARIC
    ItemParameterModel:
      required:
      - name
      - value
      type: object
      properties:
        id:
          type: integer
          description: The id of the parameter.
          format: int64
          readOnly: true
          example: 0
        name:
          type: string
          description: The parameter's name.
          example: ScreenSize
        value:
          type: string
          description: The value for the parameter.
          example: "24"
        unit:
          type: string
          description: The unit of measurement code for the parameter.
          example: inch
        itemId:
          type: integer
          description: The item id
          format: int64
        isNeededForCalculation:
          type: boolean
          description: This field identifies if parameter is needed for calculation
          readOnly: true
        isNeededForReturns:
          type: boolean
          description: This field identifies if parameter is needed for returns
          readOnly: true
        isNeededForClassification:
          type: boolean
          description: This field identifies if parameter is needed for classification
          readOnly: true
      description: Represents a parameter associated with an item.
      example:
        id: 0
        name: ScreenSize
        value: "24"
        unit: inch
    ItemTagDetailModel:
      required:
      - tagName
      type: object
      properties:
        itemTagDetailId:
          type: integer
          description: The unique ID number of the item-tag relation.
          format: int32
          readOnly: true
          example: 51
        tagId:
          type: integer
          description: The unique tag Id for the tags.
          format: int32
          readOnly: true
        tagName:
          type: string
          description: The tag name.
          example: CLASSIFICATION_INITIATIONERROR
        itemId:
          type: integer
          description: The unique ID number of this item.
          format: int64
          example: 151284220
        companyId:
          type: integer
          description: The unique ID number of the company that owns this item.
          format: int32
          example: 8010687
        createdDate:
          type: string
          description: The date when this record was created.
          format: date-time
          readOnly: true
      description: Represents a tag for an item in your company's product catalog.
      example:
        itemTagDetailId: 51
        tagName: CLASSIFICATION_INITIATIONERROR
        itemId: 151284220
        companyId: 8010687
        createdDate: 0001-01-01T00:00:00
    ItemModel:
      required:
      - description
      - id
      - itemCode
      type: object
      properties:
        id:
          type: integer
          description: The unique ID number of this item.
          format: int64
          example: 56789
        companyId:
          type: integer
          description: The unique ID number of the company that owns this item.
          format: int32
          readOnly: true
          example: 12345
        itemCode:
          maxLength: 50
          minLength: 0
          type: string
          description: A unique code representing this item.
          example: CERMUG
        taxCodeId:
          type: integer
          description: "DEPRECATED - Date: 11/13/2018, Version: 18.12, Message: For\
            \ identifying an `Item` with `Avalara TaxCode`, please call the [CreateItemClassification\
            \ API] with your ItemCode and the Avalara TaxCode.\r\nThe unique ID number\
            \ of the tax code that is applied when selling this item.\r\nWhen creating\
            \ or updating an item, you can either specify the Tax Code ID number or\
            \ the Tax Code string; you do not need to specify both values."
          format: int32
          x-property-deprecation-info:
            date: 11/13/2018
            version: "18.12"
            message: For identifying an `Item` with `Avalara TaxCode`, please call
              the [CreateItemClassification API] with your ItemCode and the Avalara
              TaxCode.
        taxCode:
          maxLength: 25
          minLength: 0
          type: string
          description: "DEPRECATED - Date: 11/13/2018, Version: 18.12, Message: For\
            \ identifying an `Item` with `Avalara TaxCode`, please call the [CreateItemClassification\
            \ API] with your ItemCode and the Avalara TaxCode.\r\nThe unique code\
            \ string of the Tax Code that is applied when selling this item.\r\nWhen\
            \ creating or updating an item, you can either specify the Tax Code ID\
            \ number or the Tax Code string; you do not need to specify both values."
          example: P0000000
          x-property-deprecation-info:
            date: 11/13/2018
            version: "18.12"
            message: For identifying an `Item` with `Avalara TaxCode`, please call
              the [CreateItemClassification API] with your ItemCode and the Avalara
              TaxCode.
        description:
          maxLength: 255
          minLength: 0
          type: string
          description: A friendly description of this item in your product catalog.
          example: Ceramic Mug
        itemGroup:
          maxLength: 50
          minLength: 0
          type: string
          description: A way to group similar items.
          example: Mugs
        category:
          maxLength: 4000
          minLength: 0
          type: string
          description: A category of product
          example: Home > Kitchen > Mugs
        createdDate:
          type: string
          description: The date when this record was created.
          format: date-time
          readOnly: true
        createdUserId:
          type: integer
          description: The User ID of the user who created this record.
          format: int32
          readOnly: true
        modifiedDate:
          type: string
          description: The date/time when this record was last modified.
          format: date-time
          readOnly: true
        modifiedUserId:
          type: integer
          description: The user ID of the user who last modified this record.
          format: int32
          readOnly: true
        classifications:
          type: array
          description: "List of classifications that belong to this item.\r\nA single\
            \ classification consits of a productCode and a systemCode for a particular\
            \ item."
          example:
          - productCode: "9011900000"
            systemCode: TARIC
          items:
            $ref: '#/components/schemas/ClassificationModel'
        parameters:
          type: array
          description: List of item parameters.
          items:
            $ref: '#/components/schemas/ItemParameterModel'
        tags:
          type: array
          description: List of item tags.
          items:
            $ref: '#/components/schemas/ItemTagDetailModel'
      description: Represents an item in your company's product catalog.
      example:
        id: 56789
        companyId: 12345
        itemCode: CERMUG
        taxCode: P0000000
        description: Ceramic Mug
        itemGroup: Mugs
        category: Home > Kitchen > Mugs
        classifications:
        - productCode: "9011900000"
          systemCode: TARIC
    LocationSettingModel:
      type: object
      properties:
        questionId:
          type: integer
          description: The unique ID number of the location question answered.
          format: int32
          example: 17
        questionName:
          type: string
          description: The name of the question
        value:
          maxLength: 50
          minLength: 0
          type: string
          description: The answer the user provided.
          example: abcdefghij
      description: Represents the answer to one local jurisdiction question for a
        location.
      example:
        questionId: 17
        value: abcdefghij
    LocationParameterModel:
      required:
      - name
      - value
      type: object
      properties:
        id:
          type: integer
          description: The ID number of the parameter.
          format: int64
          example: 0
        name:
          type: string
          description: The parameter's name.
          example: NumberOfUnitsForRent
        unit:
          type: string
          description: The parameter's value.
          example: Count
        value:
          type: string
          description: The value of the parameter.
          example: "10"
        locationId:
          type: integer
          description: The ID of the company location the parameter associated with.
          format: int32
          readOnly: true
          example: 12345
      description: The parameter associated with a company location.
      example:
        id: 0
        name: NumberOfUnitsForRent
        unit: Count
        value: "10"
        locationId: 12345
    LocationModel:
      required:
      - addressCategoryId
      - addressTypeId
      - country
      - id
      - line1
      - locationCode
      - postalCode
      type: object
      properties:
        id:
          type: integer
          description: The unique ID number of this location.
          format: int32
          example: 56789
        companyId:
          type: integer
          description: The unique ID number of the company that operates at this location.
          format: int32
          readOnly: true
          example: 12345
        locationCode:
          maxLength: 50
          minLength: 0
          type: string
          description: A code that identifies this location.  Must be unique within
            your company.
          example: DEFAULT
        description:
          maxLength: 255
          minLength: 0
          type: string
          description: A friendly name for this location.
          example: Bob's Artisan Pottery
        addressTypeId:
          type: string
          description: Indicates whether this location is a physical place of business
            or a temporary salesperson location.
          example: Location
          enum:
          - Location
          - Salesperson
          - Marketplace
          x-enum-metadata:
            name: AddressTypeId
            values:
            - name: Location
              value: 1
            - name: Salesperson
              value: 2
            - name: Marketplace
              value: 3
        addressCategoryId:
          type: string
          description: Indicates the type of place of business represented by this
            location.
          example: Storefront
          enum:
          - Storefront
          - MainOffice
          - Warehouse
          - Salesperson
          - Other
          - SellerRemitsTax
          - MarketplaceRemitsTax
          - NonPhysical
          x-enum-metadata:
            name: AddressCategoryId
            values:
            - name: Storefront
              value: 1
            - name: MainOffice
              value: 2
            - name: Warehouse
              value: 3
            - name: Salesperson
              value: 4
            - name: Other
              value: 5
            - name: SellerRemitsTax
              value: 6
            - name: MarketplaceRemitsTax
              value: 7
            - name: NonPhysical
              value: 8
        isMarketplaceOutsideUsa:
          type: boolean
          description: Indicates whether the Marketplace is outside or in USA
          example: false
        line1:
          maxLength: 50
          minLength: 0
          type: string
          description: The first line of the physical address of this location.
          example: 2000 Main Street
        line2:
          maxLength: 50
          minLength: 0
          type: string
          description: The second line of the physical address of this location.
        line3:
          maxLength: 50
          minLength: 0
          type: string
          description: The third line of the physical address of this location.
        city:
          maxLength: 50
          minLength: 0
          type: string
          description: The city of the physical address of this location.
          example: Irvine
        county:
          maxLength: 50
          minLength: 0
          type: string
          description: The county name of the physical address of this location.  Not
            required.
          example: Orange
        region:
          type: string
          description: "Name or ISO 3166 code identifying the region within the country\
            \ of the physical address of this location.\r\n            \r\nThis field\
            \ supports many different region identifiers:\r\n * Two and three character\
            \ ISO 3166 region codes\r\n * Fully spelled out names of the region in\
            \ ISO supported languages\r\n * Common alternative spellings for many\
            \ regions\r\n            \r\nFor a full list of all supported codes and\
            \ names, please see the Definitions API `ListRegions`."
          example: CA
        postalCode:
          maxLength: 10
          minLength: 0
          type: string
          description: The postal code or zip code of the physical address of this
            location.
          example: "92614"
        country:
          type: string
          description: "Name or ISO 3166 code identifying the country of the physical\
            \ address of this location.\r\n            \r\nThis field supports many\
            \ different country identifiers:\r\n * Two character ISO 3166 codes\r\n\
            \ * Three character ISO 3166 codes\r\n * Fully spelled out names of the\
            \ country in ISO supported languages\r\n * Common alternative spellings\
            \ for many countries\r\n            \r\nFor a full list of all supported\
            \ codes and names, please see the Definitions API `ListCountries`."
          example: US
        isDefault:
          type: boolean
          description: Set this flag to true to indicate that this is the default
            location for this company.
          example: true
        isRegistered:
          type: boolean
          description: Set this flag to true to indicate that this location has been
            registered with a tax authority.
          example: true
        dbaName:
          maxLength: 100
          minLength: 0
          type: string
          description: If this location has a different business name from its legal
            entity name, specify the "Doing Business As" name for this location.
          example: Bob's Artisan Pottery
        outletName:
          maxLength: 100
          minLength: 0
          type: string
          description: A friendly name for this location.
          example: Main Office
        effectiveDate:
          type: string
          description: The date when this location was opened for business, or null
            if not known.
          format: date
        endDate:
          type: string
          description: If this place of business has closed, the date when this location
            closed business.
          format: date
        lastTransactionDate:
          type: string
          description: The most recent date when a transaction was processed for this
            location.  Set by AvaTax.
          format: date-time
          readOnly: true
        registeredDate:
          type: string
          description: The date when this location was registered with a tax authority.  Not
            required.
          format: date-time
        createdDate:
          type: string
          description: The date when this record was created.
          format: date-time
          readOnly: true
        createdUserId:
          type: integer
          description: The User ID of the user who created this record.
          format: int32
          readOnly: true
        modifiedDate:
          type: string
          description: The date/time when this record was last modified.
          format: date-time
          readOnly: true
        modifiedUserId:
          type: integer
          description: The user ID of the user who last modified this record.
          format: int32
          readOnly: true
        settings:
          type: array
          description: "Extra information required by certain jurisdictions for filing.\r\
            \nFor a list of settings recognized by Avalara, query the endpoint \"\
            /api/v2/definitions/locationquestions\".\r\nTo determine the list of settings\
            \ required for this location, query the endpoint \"/api/v2/companies/(id)/locations/(id)/validate\"\
            ."
          example:
          - questionId: 17
            value: abcdefghij
          items:
            $ref: '#/components/schemas/LocationSettingModel'
        parameters:
          type: array
          description: List of location parameters.
          readOnly: true
          items:
            $ref: '#/components/schemas/LocationParameterModel'
      description: "A location where this company does business.\r\nSome jurisdictions\
        \ may require you to list all locations where your company does business."
      example:
        id: 56789
        companyId: 12345
        locationCode: DEFAULT
        description: Bob's Artisan Pottery
        addressTypeId: Location
        addressCategoryId: MainOffice
        isMarketplaceOutsideUsa: false
        line1: 2000 Main Street
        city: Irvine
        county: Orange
        region: CA
        postalCode: "92614"
        country: US
        isDefault: true
        isRegistered: true
        dbaName: Bob's Artisan Pottery
        outletName: Main Office
        registeredDate: 2015-01-01T00:00:00
        settings:
        - questionId: 17
          value: abcdefghij
    NexusParameterDetailModel:
      required:
      - name
      - value
      type: object
      properties:
        id:
          type: integer
          description: The id of the parameter.
          format: int64
          readOnly: true
          example: 0
        name:
          type: string
          description: The parameter's name.
          example: IsRemoteSeller
        value:
          type: string
          description: The value for the parameter.
          example: "true"
        unit:
          type: string
          description: The unit of measurement code for the parameter.
        nexusId:
          type: integer
          description: The nexus id
          format: int32
      description: Represents a parameter associated with a nexus.
      example:
        id: 0
        name: IsRemoteSeller
        value: "true"
    NexusModel:
      required:
      - country
      - jurisCode
      - jurisName
      - region
      type: object
      properties:
        id:
          type: integer
          description: "The unique ID number of this declaration of nexus.\r\n   \
            \         \r\nThis field is defined automatically when you declare nexus.\
            \  You do not need to provide a value for this field."
          format: int32
          readOnly: true
          example: 0
        companyId:
          type: integer
          description: "The unique ID number of the company that declared nexus.\r\
            \n            \r\nThis field is user-selectable and should be provided\
            \ when creating or updating a nexus object."
          format: int32
          example: 0
        country:
          type: string
          description: "Name or ISO 3166 code identifying the country in which this\
            \ company declared nexus.\r\n            \r\nThis field is defined by\
            \ Avalara.  All Avalara-defined fields must match an Avalara-defined nexus\
            \ object found by calling `ListNexus`."
          example: US
        region:
          type: string
          description: "Name or ISO 3166 code identifying the region within the country.\r\
            \n            \r\nThis field is defined by Avalara.  All Avalara-defined\
            \ fields must match an Avalara-defined nexus object found by calling `ListNexus`."
          example: CA
        jurisTypeId:
          type: string
          description: "DEPRECATED - Date: 12/20/2017, Version: 18.1, Message: Please\
            \ use jurisdictionTypeId instead.\r\nThe jurisdiction type of the jurisdiction\
            \ in which this company declared nexus."
          example: STA
          enum:
          - STA
          - CTY
          - CIT
          - STJ
          - CNT
          x-property-deprecation-info:
            date: 12/20/2017
            version: "18.1"
            message: Please use jurisdictionTypeId instead.
          x-enum-metadata:
            name: JurisTypeId
            values:
            - name: STA
              value: 1
            - name: CTY
              value: 2
            - name: CIT
              value: 3
            - name: STJ
              value: 4
            - name: CNT
              value: 5
        jurisdictionTypeId:
          type: string
          description: "The type of the jurisdiction in which this company declared\
            \ nexus.\r\n            \r\nThis field is defined by Avalara.  All Avalara-defined\
            \ fields must match an Avalara-defined nexus object found by calling `ListNexus`."
          example: Country
          enum:
          - Country
          - State
          - County
          - City
          - Special
          x-enum-metadata:
            name: JurisdictionType
            values:
            - name: Country
              value: 0
            - name: State
              value: 1
            - name: County
              value: 2
            - name: City
              value: 3
            - name: Special
              value: 4
        jurisCode:
          maxLength: 10
          minLength: 0
          type: string
          description: "The code identifying the jurisdiction in which this company\
            \ declared nexus.\r\n            \r\nThis field is defined by Avalara.\
            \  All Avalara-defined fields must match an Avalara-defined nexus object\
            \ found by calling `ListNexus`."
          example: "06"
        jurisName:
          maxLength: 200
          minLength: 0
          type: string
          description: "The common name of the jurisdiction in which this company\
            \ declared nexus.\r\n            \r\nThis field is defined by Avalara.\
            \  All Avalara-defined fields must match an Avalara-defined nexus object\
            \ found by calling `ListNexus`."
          example: CALIFORNIA
        effectiveDate:
          type: string
          description: "The date when this nexus began.  If not known, set to null.\r\
            \n            \r\nThis field is user-selectable and should be provided\
            \ when creating or updating a nexus object."
          format: date
        endDate:
          type: string
          description: "If this nexus will end or has ended on a specific date, set\
            \ this to the date when this nexus ends.\r\n            \r\nThis field\
            \ is user-selectable and should be provided when creating or updating\
            \ a nexus object."
          format: date
        shortName:
          maxLength: 15
          minLength: 0
          type: string
          description: "The short name of the jurisdiction.\r\n            \r\nThis\
            \ field is defined by Avalara.  All Avalara-defined fields must match\
            \ an Avalara-defined nexus object found by calling `ListNexus`."
          readOnly: true
          example: CALIFORNIA
        signatureCode:
          maxLength: 4
          minLength: 0
          type: string
          description: "The signature code of the boundary region as defined by Avalara.\r\
            \n            \r\nThis field is defined by Avalara.  All Avalara-defined\
            \ fields must match an Avalara-defined nexus object found by calling `ListNexus`."
          readOnly: true
          example: ""
        stateAssignedNo:
          maxLength: 50
          minLength: 0
          type: string
          description: "The state assigned number of this jurisdiction.\r\n      \
            \      \r\nThis field is defined by Avalara.  All Avalara-defined fields\
            \ must match an Avalara-defined nexus object found by calling `ListNexus`."
          readOnly: true
          example: ""
        nexusTypeId:
          type: string
          description: "The type of nexus that this company is declaring.\r\n    \
            \        \r\nIf you are voluntarily declaring nexus in a jurisdiction,\
            \ you should select `SalesOrSellersUseTax` for your\r\nnexus type option.\
            \  This option allows you to calculate tax correctly whether you are selling\
            \ in-state or\r\nshipping from an out-of-state location.\r\n         \
            \   \r\nIf you are legally obligated to declare nexus due to physical\
            \ presence or other sufficient nexus, you\r\nshould select `SalesTax`.\
            \  This indicates that, as a legal requirement, your company must always\
            \ collect\r\nand remit full sales tax in this jurisdiction.\r\n      \
            \      \r\nIf you are participating in the Streamlined Sales Tax program,\
            \ your SST administrator will select nexus\r\nsettings for you in all\
            \ SST jurisdictions.  Do not select any SST options by yourself.\r\n \
            \           \r\nThis field is user-selectable and should be provided when\
            \ creating or updating a nexus object."
          example: None
          enum:
          - None
          - SalesOrSellersUseTax
          - SalesTax
          - SSTVolunteer
          - SSTNonVolunteer
          x-enum-metadata:
            name: NexusTypeId
            values:
            - name: None
              value: 0
            - name: SalesOrSellersUseTax
              value: 1
            - name: SalesTax
              value: 2
            - name: SSTVolunteer
              value: 3
            - name: SSTNonVolunteer
              value: 4
        sourcing:
          type: string
          description: "Indicates whether this nexus is defined as origin or destination\
            \ nexus.\r\n            \r\nThis field is defined by Avalara.  All Avalara-defined\
            \ fields must match an Avalara-defined nexus object found by calling `ListNexus`."
          example: Mixed
          enum:
          - Mixed
          - Destination
          - Origin
          x-enum-metadata:
            name: Sourcing
            values:
            - name: Mixed
              value: 42
            - name: Destination
              value: 68
            - name: Origin
              value: 79
        hasLocalNexus:
          type: boolean
          description: "True if you are also declaring local nexus within this jurisdiction.\r\
            \nMany U.S. states have options for declaring nexus in local jurisdictions\
            \ as well as within the state.\r\n            \r\nThis field is defined\
            \ by Avalara.  All Avalara-defined fields must match an Avalara-defined\
            \ nexus object found by calling `ListNexus`."
          example: false
        localNexusTypeId:
          type: string
          description: "If you are declaring local nexus within this jurisdiction,\
            \ this indicates whether you are declaring only\r\na specified list of\
            \ local jurisdictions, all state-administered local jurisdictions, or\
            \ all local jurisdictions.\r\n            \r\nThis field is user-selectable\
            \ and should be provided when creating or updating a nexus object."
          example: Selected
          enum:
          - Selected
          - StateAdministered
          - All
          x-enum-metadata:
            name: LocalNexusTypeId
            values:
            - name: Selected
              value: 0
            - name: StateAdministered
              value: 1
            - name: All
              value: 2
        hasPermanentEstablishment:
          type: boolean
          description: "Set this value to true if your company has a permanent establishment\
            \ within this jurisdiction.\r\n            \r\nThis field is user-selectable\
            \ and should be provided when creating or updating a nexus object."
          example: true
        taxId:
          maxLength: 25
          minLength: 0
          type: string
          description: "Optional - the tax identification number under which you declared\
            \ nexus.\r\n            \r\nThis field is user-selectable and should be\
            \ provided when creating or updating a nexus object."
        streamlinedSalesTax:
          type: boolean
          description: "DEPRECATED - Date: 4/29/2017, Version: 19.4, Message: Please\
            \ use isSSTActive instead.\r\nFor the United States, this flag indicates\
            \ whether this particular nexus falls within a U.S. State that participates\r\
            \nin the Streamlined Sales Tax program.  For countries other than the\
            \ US, this flag is null.\r\n            \r\nThis field is defined by Avalara.\
            \  All Avalara-defined fields must match an Avalara-defined nexus object\
            \ found by calling `ListNexus`."
          readOnly: true
          example: false
          x-property-deprecation-info:
            date: 4/29/2017
            version: "19.4"
            message: Please use isSSTActive instead.
        isSSTActive:
          type: boolean
          description: "For the United States, this flag indicates whether this particular\
            \ nexus falls within a U.S. State that participates\r\nin the Streamlined\
            \ Sales Tax program and if the account associated with the Nexus has an\
            \ active AvaTaxCsp subscription.\r\nFor countries other than the US, this\
            \ flag is null.\r\n            \r\nThis field is defined by Avalara. \
            \ All Avalara-defined fields must match an Avalara-defined nexus object\
            \ found by calling `ListNexus`."
          readOnly: true
          example: false
        createdDate:
          type: string
          description: "The date when this record was created.\r\n            \r\n\
            This field is defined automatically when you declare nexus.  You do not\
            \ need to provide a value for this field."
          format: date-time
          readOnly: true
        createdUserId:
          type: integer
          description: "The User ID of the user who created this record.\r\n     \
            \       \r\nThis field is defined automatically when you declare nexus.\
            \  You do not need to provide a value for this field."
          format: int32
          readOnly: true
          example: 0
        modifiedDate:
          type: string
          description: "The date/time when this record was last modified.\r\n    \
            \        \r\nThis field is defined automatically when you declare nexus.\
            \  You do not need to provide a value for this field."
          format: date-time
          readOnly: true
        modifiedUserId:
          type: integer
          description: "The user ID of the user who last modified this record.\r\n\
            \            \r\nThis field is defined automatically when you declare\
            \ nexus.  You do not need to provide a value for this field."
          format: int32
          readOnly: true
          example: 0
        taxTypeGroup:
          type: string
          description: "The type group of nexus that this company is declaring\r\n\
            Use [ListTaxTypeGroups](https://developer.avalara.com/api-reference/avatax/rest/v2/methods/Definitions/ListTaxTypeGroups/)\
            \ API for a list of nexus tax type groups.\r\n            \r\nThis field\
            \ is defined by Avalara.  All Avalara-defined fields must match an Avalara-defined\
            \ nexus object found by calling `ListNexus`.\r\nNOTE: This optional field\
            \ will trigger nexus subtype lookup when populated. When using make sure\
            \ TaxTypeGroup matches corresponding NexusTaxTypeGroup"
          example: EWaste
        nexusTaxTypeGroup:
          type: string
          description: "The type of nexus that this company is declaring.Replaces\
            \ NexusTypeId.\r\nUse [ListNexusTaxTypeGroups](https://developer.avalara.com/api-reference/avatax/rest/v2/methods/Definitions/ListNexusTaxTypeGroups/)\
            \ API for a list of nexus tax type groups.\r\n            \r\nThis field\
            \ is defined by Avalara.  All Avalara-defined fields must match an Avalara-defined\
            \ nexus object found by calling `ListNexus`."
          example: SalesAndUse
        taxAuthorityId:
          type: integer
          description: "A unique ID number of the tax authority that is associated\
            \ with this nexus.\r\n            \r\nThis field is defined by Avalara.\
            \  All Avalara-defined fields must match an Avalara-defined nexus object\
            \ found by calling `ListNexus`."
          format: int64
        isSellerImporterOfRecord:
          type: boolean
          description: "For nexus declarations at the country level, specifies whether\
            \ this company is considered the importer of record in this nexus region.\r\
            \n            \r\nSome taxes only apply if the seller is the importer\
            \ of record for a product.  In cases where companies are working together\
            \ to\r\nship products, there may be mutual agreement as to which company\
            \ is the entity designated as importer of record.  The importer\r\nof\
            \ record will then be the company designated to pay taxes marked as being\
            \ obligated to the importer of record.\r\n            \r\nSet this value\
            \ to `true` to consider your company as the importer of record and collect\
            \ these taxes.  Leave this value as false\r\nor null and taxes will be\
            \ calculated as if your company is not the importer of record.\r\n   \
            \         \r\nThis value may also be set during each transaction API call.\
            \  See `CreateTransaction()` for more information.\r\n            \r\n\
            This field is user-selectable and should be provided when creating or\
            \ updating a nexus object."
          example: false
        taxName:
          type: string
          description: "A description of corresponding tax type applied to the nexus.\r\
            \n            \r\nWhen a custom nexus is created, it'll have to be matched\
            \ to a system nexus to be validated successfully. The matched system nexus\
            \ has a\r\nfield to describe the tax type applied to it, that field will\
            \ be copied over to the nexus that is being created.\r\n            \r\
            \nThis field is defined by Avalara. Its main purpose is to give a simple\
            \ description of the tax type associated with the nexus so\r\nusers have\
            \ a better understanding of the nexus when it is displayed."
          readOnly: true
          example: Tire Fee
        parameters:
          type: array
          description: List of nexus parameters.
          readOnly: true
          items:
            $ref: '#/components/schemas/NexusParameterDetailModel'
        taxableNexus:
          type: boolean
          description: Shows if system nexus records are associated with tax collection
          readOnly: true
          example: true
      description: "Represents a declaration of nexus within a particular taxing jurisdiction.\r\
        \n            \r\nTo create a nexus declaration for your company, you must\
        \ first call the Definitions API `ListNexus` to obtain a\r\nlist of Avalara-defined\
        \ nexus.  Once you have determined which nexus you wish to declare, you should\
        \ customize\r\nonly the user-selectable fields in this object.\r\n       \
        \     \r\nThe user selectable fields for the nexus object are `companyId`,\
        \ `effectiveDate`, `endDate`, `localNexusTypeId`,\r\n`taxId`, `nexusTypeId`,\
        \ `hasPermanentEstablishment`, and `isSellerImporterOfRecord`.\r\n       \
        \     \r\nWhen calling `CreateNexus` or `UpdateNexus`, all values in your\
        \ nexus object except for the user-selectable fields\r\nmust match an Avalara-defined\
        \ system nexus object.  You can retrieve a list of Avalara-defined system\
        \ nexus objects\r\nby calling `ListNexus`.  If any data does not match, AvaTax\
        \ may not recognize your nexus declaration."
      example:
        id: 0
        companyId: 0
        country: US
        region: CA
        jurisTypeId: STA
        jurisdictionTypeId: State
        jurisCode: "06"
        jurisName: CALIFORNIA
        effectiveDate: 2017-04-01
        shortName: CALIFORNIA
        signatureCode: ""
        stateAssignedNo: ""
        nexusTypeId: SalesOrSellersUseTax
        sourcing: Destination
        hasLocalNexus: false
        hasPermanentEstablishment: true
        streamlinedSalesTax: false
        isSSTActive: false
        createdDate: 2017-06-30T05:14:06.003
        createdUserId: 0
        modifiedDate: 2021-12-06T09:14:53.693
        modifiedUserId: 0
        taxTypeGroup: EWaste
        nexusTaxTypeGroup: SalesAndUse
        isSellerImporterOfRecord: false
        taxName: Tire Fee
        taxableNexus: true
    SettingModel:
      required:
      - id
      - name
      - set
      type: object
      properties:
        id:
          type: integer
          description: The unique ID number of this setting.
          format: int32
          example: 56789
        companyId:
          type: integer
          description: The unique ID number of the company this setting refers to.
          format: int32
          readOnly: true
          example: 12345
        set:
          maxLength: 25
          minLength: 0
          type: string
          description: "A user-defined \"set\" containing this setting.\r\n      \
            \      \r\nAvalara defines some sets that cannot be changed.  To create\
            \ your own set, choose a set\r\nname that begins with `X-` to indicate\
            \ that this is an extension value.\r\n            \r\nWe recommend that\
            \ you choose a set name that clearly identifies your application, and\
            \ then\r\nstore data within name/value pairs within that set.  For example,\
            \ if you were creating an\r\napplication called MyApp, you might choose\
            \ to create a set named `X-MyCompany-MyApp`."
          example: ItemsToRemember
        name:
          maxLength: 50
          minLength: 0
          type: string
          description: A user-defined "name" for this name-value pair.
          example: Texas
        value:
          maxLength: 200
          minLength: 0
          type: string
          description: The value of this name-value pair.
          example: Alamo
        modifiedDate:
          type: string
          description: The value when the entry was last modified.
          format: date-time
          readOnly: true
        modifiedUserId:
          type: integer
          description: The value identifying who last modified the entry.
          format: int32
      description: "This object is used to keep track of custom information about\
        \ a company.\r\n            \r\nThe company settings system is a metadata\
        \ system that you can use to store extra information\r\nabout a company. \
        \ Your integration or connector could use this data storage to keep track\
        \ of\r\npreference information, reminders, or any other storage that would\
        \ need to persist even if\r\nthe customer uninstalls your application.\r\n\
        \            \r\nA setting can refer to any type of data you need to remember\
        \ about this company object.\r\nWhen creating this object, you may define\
        \ your own `set`, `name`, and `value` parameters.\r\nTo define your own values,\
        \ please choose a `set` name that begins with `X-` to indicate an extension."
      example:
        id: 56789
        companyId: 12345
        set: ItemsToRemember
        name: Texas
        value: Alamo
    TaxCodeModel:
      required:
      - taxCode
      - taxCodeTypeId
      type: object
      properties:
        id:
          type: integer
          description: The unique ID number of this tax code.
          format: int32
          readOnly: true
          example: 56789
        companyId:
          type: integer
          description: The unique ID number of the company that owns this tax code.
          format: int32
          readOnly: true
          example: 12345
        taxCode:
          maxLength: 25
          minLength: 0
          type: string
          description: A code string that identifies this tax code.
          example: PS081282
        taxCodeTypeId:
          maxLength: 2
          minLength: 0
          type: string
          description: The type of this tax code.
          example: P
        description:
          maxLength: 255
          minLength: 0
          type: string
          description: A friendly description of this tax code.
          example: Yarn
        parentTaxCode:
          maxLength: 25
          minLength: 0
          type: string
          description: If this tax code is a subset of a different tax code, this
            identifies the parent code.
          example: PS080100
        isPhysical:
          type: boolean
          description: True if this tax code type refers to a physical object.  Read
            only field.
          readOnly: true
          example: true
        goodsServiceCode:
          type: integer
          description: The Avalara Goods and Service Code represented by this tax
            code.
          format: int64
          example: 0
        entityUseCode:
          maxLength: 40
          minLength: 0
          type: string
          description: The Avalara Entity Use Code represented by this tax code.
          example: ""
        isActive:
          type: boolean
          description: True if this tax code is active and can be used in transactions.
          example: true
        isSSTCertified:
          type: boolean
          description: "True if this tax code has been certified by the Streamlined\
            \ Sales Tax governing board.\r\nBy default, you should leave this value\
            \ empty."
          example: false
        createdDate:
          type: string
          description: The date when this record was created.
          format: date-time
          readOnly: true
        createdUserId:
          type: integer
          description: The User ID of the user who created this record.
          format: int32
          readOnly: true
        modifiedDate:
          type: string
          description: The date/time when this record was last modified.
          format: date-time
          readOnly: true
        modifiedUserId:
          type: integer
          description: The user ID of the user who last modified this record.
          format: int32
          readOnly: true
      description: "Represents a tax code that can be applied to items on a transaction.\r\
        \nA tax code can have specific rules for specific jurisdictions that change\
        \ the tax calculation behavior."
      example:
        id: 56789
        companyId: 12345
        taxCode: PS081282
        taxCodeTypeId: P
        description: Yarn
        parentTaxCode: PS080100
        isPhysical: true
        goodsServiceCode: 0
        entityUseCode: ""
        isActive: true
        isSSTCertified: false
    TaxRuleProductDetailModel:
      type: object
      properties:
        taxRuleProductDetailId:
          type: integer
          description: The unique ID number of this Tax rule product detail.
          format: int32
          example: 1
        taxRuleId:
          type: integer
          description: TaxRule Id of TaxRule Product Detail entry
          format: int32
          example: 123
        productCode:
          type: string
          description: Product Code value
          example: "220720"
        effectiveDate:
          type: string
          description: The first date at which this product detail applies.  If `null`,
            this product detail will apply to all dates prior to the end date.
          format: date-time
          example: 2022-01-10T00:00:00Z
        endDate:
          type: string
          description: The last date for which this product detail applies.  If `null`,
            this product detail will apply to all dates after the effective date.
          format: date-time
          example: 2023-01-10T00:00:00Z
        systemId:
          type: integer
          description: Represents the system Id the detail is applicable for.
          format: int32
          example: 28
      description: "Represents a tax rule product detail that changes the behavior\
        \ of Avalara's tax engine for certain tax rules.\r\n            \r\nAvalara\
        \ supports a two types of tax product detail.  For information about tax rule\
        \ Product Types\r\nHSCode and TaxCode\r\n            \r\nBecause different\
        \ types of tax rules have different behavior, some fields may change their\
        \ behavior based on\r\nthe type of tax rule selected.  Please read the documentation\
        \ for each field carefully and ensure that\r\nthe value you send is appropriate\
        \ for the type of tax rule."
      example:
        taxRuleProductDetailId: 1
        taxRuleId: 123
        productCode: "220720"
        effectiveDate: 2022-01-10T00:00:00+00:00
        endDate: 2023-01-10T00:00:00+00:00
        systemId: 28
    TaxRuleModel:
      required:
      - country
      - id
      - jurisCode
      - taxRuleTypeId
      type: object
      properties:
        id:
          type: integer
          description: The unique ID number of this tax rule.
          format: int32
          example: 56789
        companyId:
          type: integer
          description: The unique ID number of the company that owns this tax rule.
          format: int32
          example: 12345
        taxCodeId:
          type: integer
          description: "For rules that apply to a specific tax code only, this specifies\
            \ which tax code is affected by this rule.\r\n            \r\nYou can\
            \ choose to specify a tax code either by passing its unique ID number\
            \ in the `taxCodeId` field or\r\nby passing its alphanumeric code in the\
            \ `taxCode` field.  To search for the appropriate tax code for your\r\n\
            custom rule, use the `ListTaxCodes` API.\r\n            \r\nThe `RateOverrideRule`,\
            \ `BaseRule`, and `ExemptEntityRule` rule types can be applied to all\
            \ tax codes.  To\r\nmake a rule that applies to all tax codes, leave both\
            \ fields blank.\r\n            \r\nThe `ProductTaxabilityRule` rule must\
            \ be associated with a tax code.  If you attempt to create a product taxability\
            \ rule\r\nwithout a tax code, you will get an error message."
          format: int32
        taxCode:
          maxLength: 25
          minLength: 0
          type: string
          description: "For rules that apply to a specific tax code only, this specifies\
            \ which tax code is affected by this rule.\r\n            \r\nYou can\
            \ choose to specify a tax code either by passing its unique ID number\
            \ in the `taxCodeId` field or\r\nby passing its alphanumeric code in the\
            \ `taxCode` field.  To search for the appropriate tax code for your\r\n\
            custom rule, use the `ListTaxCodes` API.\r\n            \r\nThe `RateOverrideRule`,\
            \ `BaseRule`, and `ExemptEntityRule` rule types can be applied to all\
            \ tax codes.  To\r\nmake a rule that applies to all tax codes, leave both\
            \ fields blank.\r\n            \r\nThe `ProductTaxabilityRule` rule must\
            \ be associated with a tax code.  If you attempt to create a product taxability\
            \ rule\r\nwithout a tax code, you will get an error message."
          example: FR020800
        stateFIPS:
          maxLength: 2
          minLength: 0
          type: string
          description: "For U.S. tax rules, this is the state's Federal Information\
            \ Processing Standard (FIPS) code.\r\n            \r\nThis field is required\
            \ for rules that apply to specific jurisdictions in the United States.\
            \  It is not required\r\nif you set the `isAllJuris` flag to true."
          example: "04"
        jurisName:
          maxLength: 200
          minLength: 0
          type: string
          description: "The name of the jurisdiction to which this tax rule applies.\r\
            \n            \r\nCustom tax rules can apply to a specific jurisdiction\
            \ or to all jurisdictions.  To select a jurisdiction, use the\r\n[ListJurisdictions\
            \ API](https://developer.avalara.com/api-reference/avatax/rest/v2/methods/Definitions/ListJurisdictions/)\r\
            \nor the [ListJurisdictionsByAddress API](https://developer.avalara.com/api-reference/avatax/rest/v2/methods/Definitions/ListJurisdictionsByAddress/).\r\
            \nTo set a rule that applies to all jurisdictions of a specific type,\
            \ see `isAllJuris`.\r\n            \r\nOnce you have determined which\
            \ jurisdiction you wish to assign to the tax rule, you should fill in\
            \ the `jurisName`, `jurisCode`, and\r\n`jurisdictionTypeId` fields using\
            \ the information you retrieved from the API above."
          example: MARICOPA
        jurisCode:
          maxLength: 10
          minLength: 0
          type: string
          description: "The code of the jurisdiction to which this tax rule applies.\r\
            \n            \r\nCustom tax rules can apply to a specific jurisdiction\
            \ or to all jurisdictions.  To select a jurisdiction, use the\r\n[ListJurisdictions\
            \ API](https://developer.avalara.com/api-reference/avatax/rest/v2/methods/Definitions/ListJurisdictions/)\r\
            \nor the [ListJurisdictionsByAddress API](https://developer.avalara.com/api-reference/avatax/rest/v2/methods/Definitions/ListJurisdictionsByAddress/).\r\
            \n            \r\nOnce you have determined which jurisdiction you wish\
            \ to assign to the tax rule, you should fill in the `jurisName`, `jurisCode`,\
            \ and\r\n`jurisdictionTypeId` fields using the information you retrieved\
            \ from the API above."
          example: "013"
        jurisTypeId:
          type: string
          description: "DEPRECATED - Date: 12/20/2017, Version: 18.1, Message: Please\
            \ use `jurisdictionTypeId` instead.\r\n"
          example: STA
          enum:
          - STA
          - CTY
          - CIT
          - STJ
          - CNT
          x-property-deprecation-info:
            date: 12/20/2017
            version: "18.1"
            message: Please use `jurisdictionTypeId` instead.
          x-enum-metadata:
            name: JurisTypeId
            values:
            - name: STA
              value: 1
            - name: CTY
              value: 2
            - name: CIT
              value: 3
            - name: STJ
              value: 4
            - name: CNT
              value: 5
        jurisdictionTypeId:
          type: string
          description: "The type of the jurisdiction to which this tax rule applies.\r\
            \n            \r\nCustom tax rules can apply to a specific jurisdiction\
            \ or to all jurisdictions.  To select a jurisdiction, use the\r\n[ListJurisdictions\
            \ API](https://developer.avalara.com/api-reference/avatax/rest/v2/methods/Definitions/ListJurisdictions/)\r\
            \nor the [ListJurisdictionsByAddress API](https://developer.avalara.com/api-reference/avatax/rest/v2/methods/Definitions/ListJurisdictionsByAddress/).\r\
            \n            \r\nOnce you have determined which jurisdiction you wish\
            \ to assign to the tax rule, you should fill in the `jurisName`, `jurisCode`,\
            \ and\r\n`jurisdictionTypeId` fields using the information you retrieved\
            \ from the API above.\r\n            \r\nTo make a custom tax rule for\
            \ US or Canada that applies to all jurisdictions of a specific type, see\
            \ the `isAllJuris`\r\nfield for more information."
          example: Country
          enum:
          - Country
          - State
          - County
          - City
          - Special
          x-enum-metadata:
            name: JurisdictionType
            values:
            - name: Country
              value: 0
            - name: State
              value: 1
            - name: County
              value: 2
            - name: City
              value: 3
            - name: Special
              value: 4
        customerUsageType:
          maxLength: 25
          minLength: 0
          type: string
          description: "DEPRECATED - Date: 10/16/2017, Version: 17.11, Message: Please\
            \ use `entityUseCode` instead.\r\n"
          x-property-deprecation-info:
            date: 10/16/2017
            version: "17.11"
            message: Please use `entityUseCode` instead.
        entityUseCode:
          maxLength: 25
          minLength: 0
          type: string
          description: "The entity use code to which this rule applies.\r\n      \
            \      \r\nYou can create custom `entityUseCode` values with specific\
            \ behavior using this API, or you can change\r\nthe behavior of Avalara's\
            \ system-defined entity use codes.\r\n            \r\nFor a full list\
            \ of Avalara-defined entity use codes, see the [ListEntityUseCodes API](https://developer.avalara.com/api-reference/avatax/rest/v2/methods/Definitions/ListEntityUseCodes/)."
        taxTypeId:
          type: string
          description: "DEPRECATED - Date: 09/30/2021, Version: 21.9.0, Message: Please\
            \ use `taxTypeCode` instead.\r\nSome tax type groups contain multiple\
            \ different types of tax.  To create a rule that affects only one\r\n\
            type of tax within a tax type group, set this value to the code matching\
            \ the specific tax type within\r\nthat group.  The custom tax rule will\
            \ then only apply to taxes calculated for that specific type.\r\n    \
            \        \r\nFor rules that affect all tax types, use the value `A` to\
            \ match `All` tax types within that group."
          example: E
          enum:
          - E
          - Lodging
          - Bottle
          - RentToOwn
          - BikeTax
          - LandedCost
          - CheckoutBag
          - Alcohol
          - Amusement
          - Hospitality
          - RentalLeasing
          - GrossReceipts
          - Mattress
          - Lumber
          - Paint
          - Tires
          - EI
          - All
          - BothSalesAndUseTax
          - ConsumerUseTax
          - ConsumersUseAndSellersUseTax
          - ConsumerUseAndSalesTax
          - Fee
          - VATInputTax
          - LightBulbs
          - Meals
          - VATNonrecoverableInputTax
          - VATOutputTax
          - PIF
          - Rental
          - SalesTax
          - UseTax
          - EWaste
          - Batteries
          x-property-deprecation-info:
            date: 09/30/2021
            version: 21.9.0
            message: Please use `taxTypeCode` instead.
          x-enum-metadata:
            name: MatchingTaxType
            values:
            - name: E
              value: 5
            - name: Lodging
              value: 6
            - name: Bottle
              value: 7
            - name: RentToOwn
              value: 8
            - name: BikeTax
              value: 11
            - name: LandedCost
              value: 12
            - name: CheckoutBag
              value: 13
            - name: Alcohol
              value: 17
            - name: Amusement
              value: 20
            - name: Hospitality
              value: 21
            - name: RentalLeasing
              value: 23
            - name: GrossReceipts
              value: 24
            - name: Mattress
              value: 25
            - name: Lumber
              value: 27
            - name: Paint
              value: 28
            - name: Tires
              value: 29
            - name: EI
              value: 30
            - name: All
              value: 65
            - name: BothSalesAndUseTax
              value: 66
            - name: ConsumerUseTax
              value: 67
            - name: ConsumersUseAndSellersUseTax
              value: 68
            - name: ConsumerUseAndSalesTax
              value: 69
            - name: Fee
              value: 70
            - name: VATInputTax
              value: 73
            - name: LightBulbs
              value: 76
            - name: Meals
              value: 77
            - name: VATNonrecoverableInputTax
              value: 78
            - name: VATOutputTax
              value: 79
            - name: PIF
              value: 80
            - name: Rental
              value: 82
            - name: SalesTax
              value: 83
            - name: UseTax
              value: 85
            - name: EWaste
              value: 87
            - name: Batteries
              value: 90
        taxTypeCode:
          type: string
          description: Indicates the code of the tax type that applies to this rule.
            Use /api/v2/definitions/taxtypes endpoint to retrieve the list of tax
            types applicable for your company.
          example: ALL
        taxRuleProductDetail:
          type: array
          description: TaxRule Product Detail indicates the HSCode(s) to which the
            tax rule applies.
          items:
            $ref: '#/components/schemas/TaxRuleProductDetailModel'
        rateTypeId:
          type: string
          description: "DEPRECATED - Date: 8/27/2018, Version: 18.9, Message: Please\
            \ use `rateTypeCode`, `taxTypeGroup` and `subTaxType` instead.\r\n"
          example: ReducedA
          enum:
          - ReducedA
          - ReducedB
          - Food
          - General
          - IncreasedStandard
          - LinenRental
          - Medical
          - Construction
          - Parking
          - SuperReduced
          - ReducedR
          - Standard
          - Leasing
          - LeasingLow
          - Services
          - Zero
          x-property-deprecation-info:
            date: 8/27/2018
            version: "18.9"
            message: Please use `rateTypeCode`, `taxTypeGroup` and `subTaxType` instead.
          x-enum-metadata:
            name: RateType
            values:
            - name: ReducedA
              value: 65
            - name: ReducedB
              value: 66
            - name: Food
              value: 70
            - name: General
              value: 71
            - name: IncreasedStandard
              value: 73
            - name: LinenRental
              value: 76
            - name: Medical
              value: 77
            - name: Construction
              value: 78
            - name: Parking
              value: 80
            - name: SuperReduced
              value: 81
            - name: ReducedR
              value: 82
            - name: Standard
              value: 83
            - name: Leasing
              value: 84
            - name: LeasingLow
              value: 85
            - name: Services
              value: 88
            - name: Zero
              value: 90
        rateTypeCode:
          type: string
          description: "Indicates the code of the rate type that applies to this rule.\
            \  Use [ListRateTypesByCountry](https://developer.avalara.com/api-reference/avatax/rest/v2/methods/Definitions/ListRateTypesByCountry/)\
            \ API for a full list of rate type codes.\r\n            \r\nIf you specify\
            \ a value in the rateTypeCode field, this rule will cause tax lines that\
            \ are affected by the rule\r\nto change to a different rate type code."
        taxRuleTypeId:
          type: string
          description: "This type value determines the behavior of the tax rule.\r\
            \n            \r\nYou can specify that this rule controls the product's\
            \ taxability or exempt / nontaxable status, the product's rate\r\n(for\
            \ example, if you have been granted an official ruling for your product's\
            \ rate that differs from the official rate),\r\nor other types of behavior."
          example: RateRule
          enum:
          - RateRule
          - RateOverrideRule
          - BaseRule
          - ExemptEntityRule
          - ProductTaxabilityRule
          - NexusRule
          - RateCapRule
          - TaxOverrideRule
          - FeeRule
          - OtherRule
          x-enum-metadata:
            name: TaxRuleTypeId
            values:
            - name: RateRule
              value: 0
            - name: RateOverrideRule
              value: 1
            - name: BaseRule
              value: 2
            - name: ExemptEntityRule
              value: 3
            - name: ProductTaxabilityRule
              value: 4
            - name: NexusRule
              value: 5
            - name: RateCapRule
              value: 6
            - name: TaxOverrideRule
              value: 7
            - name: FeeRule
              value: 8
            - name: OtherRule
              value: 100
        isAllJuris:
          type: boolean
          description: "Allows you to make tax rules apply to lower jurisdictions.\
            \  This feature is only available in the United States and Canada.\r\n\
            \            \r\n* In the United States, this value can be used for rules\
            \ written at the `State` jurisdictional level.  If set to `true`, this\
            \ rule will at the state level, county level, city level, and special\
            \ jurisdiction level.\r\n* In Canada, this value can be used for rules\
            \ written at the `Country` or `State` jurisdictional levels.  If set to\
            \ `true`, this rule will at all lower jurisdictional levels.\r\n     \
            \       \r\nFor any other use case, this value must be `false`."
          example: false
        value:
          type: number
          description: "This field has different behavior based on the type of the\
            \ tax rule.\r\n            \r\n* For a product taxability rule, this value\
            \ is either 1 or 0, indicating taxable or non-taxable.\r\n* For a rate\
            \ override rule, this value is the corrected rate stored as a decimal,\
            \ for example, a rate of 5% would be stored as 0.05 decimal.  If you use\
            \ the special value of 1.0, only the cap and threshold values will be\
            \ applied and the rate will be left alone."
          format: double
          example: 0.0
        cap:
          type: number
          description: "The maximum cap for the price of this item according to this\
            \ rule.  Any amount above this cap will not be subject to this rule.\r\
            \n            \r\nFor example, if you must pay 5% of a product's value\
            \ up to a maximum value of $1000, you would set the `cap` to `1000.00`\
            \ and the `value` to `0.05`."
          format: double
          example: 0.0
        threshold:
          type: number
          description: "The per-unit threshold that must be met before this rule applies.\r\
            \n            \r\nFor example, if your product is nontaxable unless it\
            \ is above $100 per product, you would set the `threshold` value to `100`.\
            \  In this case, the rate\r\nfor the rule would apply to the entire amount\
            \ above $100.\r\n            \r\nYou can also create rules that make the\
            \ entire product taxable if it exceeds a threshold, but is nontaxable\r\
            \nif it is below the threshold.  To choose this, set the `options` field\
            \ to the value `TaxAll`."
          format: double
          example: 0.0
        options:
          maxLength: 100
          minLength: 0
          type: string
          description: "Supports custom options for your tax rule.\r\n           \
            \ \r\nSupported options include:\r\n* `TaxAll` - This value indicates\
            \ that the entire amount of the line becomes taxable when the line amount\
            \ exceeds the `threshold`."
        effectiveDate:
          type: string
          description: The first date at which this rule applies.  If `null`, this
            rule will apply to all dates prior to the end date.
          format: date
        endDate:
          type: string
          description: The last date for which this rule applies.  If `null`, this
            rule will apply to all dates after the effective date.
          format: date
        description:
          maxLength: 255
          minLength: 0
          type: string
          description: A friendly name for this tax rule.
          example: Freight
        countyFIPS:
          maxLength: 3
          minLength: 0
          type: string
          description: "For U.S. tax rules, this is the county's Federal Information\
            \ Processing Standard (FIPS) code.\r\n            \r\nThis field is required\
            \ for rules that apply to specific jurisdictions in the United States.\
            \  It is not required\r\nif you set the `isAllJuris` flag to true."
          example: "013"
        isSTPro:
          type: boolean
          description: "DEPRECATED - Date: 8/27/2018, Version: 18.9, Message: This\
            \ field is no longer required.\r\n"
          x-property-deprecation-info:
            date: 8/27/2018
            version: "18.9"
            message: This field is no longer required.
        country:
          type: string
          description: "Name or ISO 3166 code identifying the country where this rule\
            \ will apply.\r\n            \r\nThis field supports many different country\
            \ identifiers:\r\n * Two character ISO 3166 codes\r\n * Three character\
            \ ISO 3166 codes\r\n * Fully spelled out names of the country in ISO supported\
            \ languages\r\n * Common alternative spellings for many countries\r\n\
            \            \r\nFor a full list of all supported codes and names, please\
            \ see the Definitions API `ListCountries`."
          example: US
        region:
          type: string
          description: "Name or ISO 3166 code identifying the region where this rule\
            \ will apply.\r\n            \r\nThis field supports many different region\
            \ identifiers:\r\n * Two and three character ISO 3166 region codes\r\n\
            \ * Fully spelled out names of the region in ISO supported languages\r\
            \n * Common alternative spellings for many regions\r\n            \r\n\
            For a full list of all supported codes and names, please see the Definitions\
            \ API `ListRegions`.\r\nNOTE: Region is required for US and not required\
            \ for non-US countries because the user may be either creating a Country-level\
            \ or Region-level rule."
          example: AZ
        sourcing:
          type: string
          description: The sourcing types to which this rule applies.
          example: Mixed
          enum:
          - Mixed
          - Destination
          - Origin
          x-enum-metadata:
            name: Sourcing
            values:
            - name: Mixed
              value: 42
            - name: Destination
              value: 68
            - name: Origin
              value: 79
        taxTypeGroup:
          type: string
          description: "This field has different behavior based on the type of rule.\r\
            \n            \r\n* For a product taxability rule, if the rule applies\
            \ to an item, this value will override the tax type group of the original\
            \ product.\r\n* For other rules, this value determines what tax type groups\
            \ will be affected by the rule.\r\n            \r\nRefer to `ListTaxTypeGroups`\
            \ for a list of tax type groups supported by AvaTax."
          example: SalesAndUse
        taxSubType:
          type: string
          description: "This field has different behavior based on the type of rule.\r\
            \n            \r\n* For a product taxability rule, if the rule applies\
            \ to an item, this value will override the tax sub type of the original\
            \ product.\r\n* For other rules, this value determines what tax sub types\
            \ will be affected by the rule.\r\n            \r\nRefer to `ListTaxSubtypes`\
            \ for a list of tax sub types supported by AvaTax."
          example: ALL
        nonPassthroughExpression:
          maxLength: 500
          minLength: 0
          type: string
          description: Reserved for Avalara internal usage.  Leave this field null.
        currencyCode:
          maxLength: 3
          minLength: 0
          type: string
          description: "The currency code to use for this rule.\r\n            \r\n\
            For a list of currencies supported by AvaTax, use the [ListCurrencies\
            \ API](https://developer.avalara.com/api-reference/avatax/rest/v2/methods/Definitions/ListCurrencies/)."
        preferredProgramId:
          type: integer
          description: Reserved for Avalara internal usage.  Leave this field null.
          format: int32
        uomId:
          type: integer
          description: "For tax rules that are calculated using units of measurement,\
            \ this indicates the unit of measurement type\r\nused to calculate the\
            \ amounts for this rule.\r\n            \r\nFor a list of units of measurement,\
            \ use the [ListUnitsOfMeasurement API](https://developer.avalara.com/api-reference/avatax/rest/v2/methods/Definitions/ListUnitOfMeasurement/)."
          format: int32
        createdDate:
          type: string
          description: The date when this record was created.
          format: date-time
          readOnly: true
        createdUserId:
          type: integer
          description: The User ID of the user who created this record.
          format: int32
          readOnly: true
        modifiedDate:
          type: string
          description: The date/time when this record was last modified.
          format: date-time
          readOnly: true
        modifiedUserId:
          type: integer
          description: The user ID of the user who last modified this record.
          format: int32
          readOnly: true
        unitOfBasis:
          type: string
          description: The UnitOfBasis for the TaxRule
      description: "Represents a tax rule that changes the behavior of Avalara's tax\
        \ engine for certain products and/or entity use codes\r\nin certain jurisdictions.\r\
        \n            \r\nAvalara supports a few different types of tax rules.  For\
        \ information about tax rule types, see\r\n[TaxRuleTypeId](https://developer.avalara.com/api-reference/avatax/rest/v2/models/enums/TaxRuleTypeId/)\r\
        \n            \r\nBecause different types of tax rules have different behavior,\
        \ some fields may change their behavior based on\r\nthe type of tax rule selected.\
        \  Please read the documentation for each field carefully and ensure that\r\
        \nthe value you send is appropriate for the type of tax rule."
      example:
        id: 56789
        companyId: 12345
        taxCode: FR020800
        stateFIPS: "04"
        jurisName: MARICOPA
        jurisCode: "013"
        jurisTypeId: 0
        jurisdictionTypeId: County
        taxTypeId: BothSalesAndUseTax
        taxTypeCode: ALL
        taxRuleTypeId: ProductTaxabilityRule
        isAllJuris: false
        value: 0
        cap: 0
        threshold: 0
        effectiveDate: 2022-01-10
        description: Freight
        countyFIPS: "013"
        country: US
        region: AZ
        taxTypeGroup: SalesAndUse
        taxSubType: ALL
    UPCModel:
      required:
      - description
      - upc
      type: object
      properties:
        id:
          type: integer
          description: The unique ID number for this UPC.
          format: int32
          readOnly: true
          example: 123456789
        companyId:
          type: integer
          description: The unique ID number of the company to which this UPC belongs.
          format: int32
          readOnly: true
          example: 1234567
        upc:
          maxLength: 18
          minLength: 12
          type: string
          description: The 12-14 character Universal Product Code, European Article
            Number, or Global Trade Identification Number.
          example: "023032550992"
        legacyTaxCode:
          maxLength: 50
          minLength: 0
          type: string
          description: Legacy Tax Code applied to any product sold with this UPC.
          example: PS081282
        description:
          maxLength: 255
          minLength: 0
          type: string
          description: Description of the product to which this UPC applies.
          example: Yarn
        effectiveDate:
          type: string
          description: If this UPC became effective on a certain date, this contains
            the first date on which the UPC was effective.
          format: date
        endDate:
          type: string
          description: If this UPC expired or will expire on a certain date, this
            contains the last date on which the UPC was effective.
          format: date
        usage:
          type: integer
          description: A usage identifier for this UPC code.
          format: int32
        isSystem:
          type: integer
          description: A flag indicating whether this UPC code is attached to the
            AvaTax system or to a company.
          format: int32
        createdDate:
          type: string
          description: The date when this record was created.
          format: date-time
          readOnly: true
        createdUserId:
          type: integer
          description: The User ID of the user who created this record.
          format: int32
          readOnly: true
        modifiedDate:
          type: string
          description: The date/time when this record was last modified.
          format: date-time
          readOnly: true
        modifiedUserId:
          type: integer
          description: The user ID of the user who last modified this record.
          format: int32
          readOnly: true
      description: One Universal Product Code object as defined for your company.
      example:
        id: 123456789
        companyId: 1234567
        upc: "023032550992"
        legacyTaxCode: PS081282
        description: Yarn
    EcmsDetailTaxCodeModel:
      type: object
      properties:
        exemptCertDetailTaxCodeId:
          type: integer
          description: Id of the exempt certificate detail tax code
          format: int32
          example: 4316
        exemptCertDetailId:
          type: integer
          description: exempt certificate detail id
          format: int32
          example: 1235
        taxCodeId:
          type: integer
          description: tax code id
          format: int32
          example: 0
      description: ""
      example:
        exemptCertDetailTaxCodeId: 4316
        exemptCertDetailId: 1235
        taxCodeId: 0
    EcmsDetailModel:
      required:
      - country
      - exemptCertDetailId
      - exemptCertId
      - region
      - stateFips
      type: object
      properties:
        exemptCertDetailId:
          type: integer
          description: Unique, system-assigned identifier of a ExemptCertDetail record.
          format: int32
          example: 1235
        exemptCertId:
          type: integer
          description: The calc_id associated with a certificate in CertCapture.
          format: int32
          example: 1111
        stateFips:
          maxLength: 2
          minLength: 0
          type: string
          description: State FIPS
          example: AAA
        region:
          type: string
          description: "Name or ISO 3166 code identifying the region within the country.\r\
            \n            \r\nThis field supports many different region identifiers:\r\
            \n * Two and three character ISO 3166 region codes\r\n * Fully spelled\
            \ out names of the region in ISO supported languages\r\n * Common alternative\
            \ spellings for many regions\r\n            \r\nFor a full list of all\
            \ supported codes and names, please see the Definitions API `ListRegions`."
          example: WA
        idNo:
          maxLength: 100
          minLength: 0
          type: string
          description: The customer Tax Id Number (tax_number) associated with a certificate.
            This is same as exemptionNo in Transactions.
        country:
          type: string
          description: "Name or ISO 3166 code identifying the country.\r\n       \
            \     \r\nThis field supports many different country identifiers:\r\n\
            \ * Two character ISO 3166 codes\r\n * Three character ISO 3166 codes\r\
            \n * Fully spelled out names of the country in ISO supported languages\r\
            \n * Common alternative spellings for many countries\r\n            \r\
            \nFor a full list of all supported codes and names, please see the Definitions\
            \ API `ListCountries`."
          example: US
        endDate:
          type: string
          description: End date of this exempt certificate
          format: date-time
          example: 2022-01-10T00:00:00Z
        idType:
          maxLength: 50
          minLength: 0
          type: string
          description: "The type of idNo (tax_number) associated with a certificate.\r\
            \nExample: Driver's Licence Number, Permit Number."
          example: TIN
        isTaxCodeListExclusionList:
          type: integer
          description: Is the tax code list an exculsion list?
          format: int32
          example: 0
        taxCodes:
          type: array
          description: 'optional: list of tax code associated with this exempt certificate
            detail'
          items:
            $ref: '#/components/schemas/EcmsDetailTaxCodeModel'
      description: Represents an ECMS record, used internally by AvaTax to track information
        about exemptions.
      example:
        exemptCertDetailId: 1235
        exemptCertId: 1111
        stateFips: AAA
        region: WA
        country: US
        endDate: 2022-01-10T00:00:00+00:00
        idType: TIN
        isTaxCodeListExclusionList: 0
    EcmsModel:
      required:
      - businessTypeId
      - companyId
      - country
      - countryIssued
      - customerCode
      - exemptCertId
      - exemptCertStatusId
      - exemptCertTypeId
      - region
      - regionsApplicable
      type: object
      properties:
        exemptCertId:
          type: integer
          description: The calc_id associated with a certificate in CertCapture.
          format: int32
          example: 123
        companyId:
          type: integer
          description: Company ID
          format: int32
          example: 456
        customerCode:
          maxLength: 50
          minLength: 0
          type: string
          description: Customer code
          example: ABA
        customerName:
          maxLength: 100
          minLength: 0
          type: string
          description: Customer name
        address1:
          maxLength: 50
          minLength: 0
          type: string
          description: Address line 1
        address2:
          maxLength: 50
          minLength: 0
          type: string
          description: Address line 2
        address3:
          maxLength: 50
          minLength: 0
          type: string
          description: Address line 3
        city:
          maxLength: 50
          minLength: 0
          type: string
          description: City
        region:
          type: string
          description: "Name or ISO 3166 code identifying the region within the country.\r\
            \n            \r\nThis field supports many different region identifiers:\r\
            \n * Two and three character ISO 3166 region codes\r\n * Fully spelled\
            \ out names of the region in ISO supported languages\r\n * Common alternative\
            \ spellings for many regions\r\n            \r\nFor a full list of all\
            \ supported codes and names, please see the Definitions API `ListRegions`."
          example: CA
        postalCode:
          maxLength: 10
          minLength: 0
          type: string
          description: Postal code / zip code
        country:
          type: string
          description: "Name or ISO 3166 code identifying the country.\r\n       \
            \     \r\nThis field supports many different country identifiers:\r\n\
            \ * Two character ISO 3166 codes\r\n * Three character ISO 3166 codes\r\
            \n * Fully spelled out names of the country in ISO supported languages\r\
            \n * Common alternative spellings for many countries\r\n            \r\
            \nFor a full list of all supported codes and names, please see the Definitions\
            \ API `ListCountries`."
          example: US
        exemptCertTypeId:
          type: string
          description: 'The type of exemption certificate. Permitted values are: Blanket
            and Single.'
          example: Blanket
          enum:
          - Blanket
          - SingleUse
          x-enum-metadata:
            name: ExemptCertTypeId
            values:
            - name: Blanket
              value: 0
            - name: SingleUse
              value: 1
        documentRefNo:
          maxLength: 50
          minLength: 0
          type: string
          description: Document Reference Number, in the case of single-use exemption
            certificates, the DocumentCode or PurchaseOrderNo to which the certificate
            should apply.
        businessTypeId:
          type: integer
          description: Business type the customer belongs to.
          format: int32
          example: 2
        businessTypeOtherDescription:
          maxLength: 255
          minLength: 0
          type: string
          description: Other description for this business type
        exemptReasonId:
          maxLength: 1
          minLength: 0
          type: string
          description: "Exempt reason associated with the certificate, coded by CustomerUsageType.\r\
            \nExample: A - Federal Government."
          example: A
        exemptReasonOtherDescription:
          maxLength: 255
          minLength: 0
          type: string
          description: Other description for exempt reason i.e. Populated on if exemptReasonId
            is 'L' - Other.
          example: test
        effectiveDate:
          type: string
          description: Effective date for this exempt certificate
          format: date-time
        regionsApplicable:
          maxLength: 200
          minLength: 0
          type: string
          description: "A list of applicable regions for this exempt certificate.\r\
            \n            \r\nTo list more than one applicable region, separate the\
            \ list of region codes with commas."
          example: CA
        exemptCertStatusId:
          type: string
          description: Status for this exempt certificate
          example: Inactive
          enum:
          - Inactive
          - Active
          - Expired
          - Revoked
          x-enum-metadata:
            name: ExemptCertStatusId
            values:
            - name: Inactive
              value: 0
            - name: Active
              value: 1
            - name: Expired
              value: 2
            - name: Revoked
              value: 3
        createdDate:
          type: string
          description: Date when this exempt certificate was created
          format: date-time
        lastTransactionDate:
          type: string
          description: Date when last transaction with this exempt certificate happened
          format: date-time
          readOnly: true
        expiryDate:
          type: string
          description: When this exempt certificate will expire
          format: date-time
        createdUserId:
          type: integer
          description: User that creates the certificate
          format: int32
          example: 0
        modifiedDate:
          type: string
          description: Date when this exempt certificate was modified
          format: date-time
        modifiedUserId:
          type: integer
          description: Who modified this exempt certificate
          format: int32
          example: 0
        countryIssued:
          type: string
          description: "Name or ISO 3166 code identifying the country that issued\
            \ this ECMS certificate.\r\n            \r\nThis field supports many different\
            \ country identifiers:\r\n * Two character ISO 3166 codes\r\n * Three\
            \ character ISO 3166 codes\r\n * Fully spelled out names of the country\
            \ in ISO supported languages\r\n * Common alternative spellings for many\
            \ countries\r\n            \r\nFor a full list of all supported codes\
            \ and names, please see the Definitions API `ListCountries`."
        avaCertId:
          maxLength: 10
          minLength: 0
          type: string
          description: "If the certificate record was synced from an AvaTax Certs\
            \ account(as opposed to being entered in ECMS directly),\r\nthe unique\
            \ AvaTax Certs identifier for the certificate record. Usually same as\
            \ the Id of a Certificate."
        exemptCertReviewStatusId:
          type: string
          description: Review status for this exempt certificate
          example: Pending
          enum:
          - Pending
          - Accepted
          - Rejected
          x-enum-metadata:
            name: ExemptCertReviewStatusId
            values:
            - name: Pending
              value: 0
            - name: Accepted
              value: 1
            - name: Rejected
              value: 2
        details:
          type: array
          description: Exempt Cert details
          items:
            $ref: '#/components/schemas/EcmsDetailModel'
      description: Exempt certificate
      example:
        exemptCertId: 123
        companyId: 456
        customerCode: ABA
        region: CA
        country: US
        exemptCertTypeId: SingleUse
        businessTypeId: 2
        exemptReasonId: A
        exemptReasonOtherDescription: test
        regionsApplicable: CA
        exemptCertStatusId: Active
        createdUserId: 0
        modifiedDate: 0001-01-01T00:00:00
        modifiedUserId: 0
        exemptCertReviewStatusId: Pending
    CompanyParameterDetailModel:
      required:
      - name
      - value
      type: object
      properties:
        id:
          type: integer
          description: Identifier for company parameter
          format: int64
          readOnly: true
          example: 0
        companyId:
          type: integer
          description: CompanyId associated with the parameter
          format: int32
          example: 0
        name:
          type: string
          description: The parameter's name
          example: IsPrimaryAddress
        value:
          type: string
          description: The value of the parameter
          example: "true"
        unit:
          type: string
          description: The unit of measurement code for the parameter
      description: Represents a parameter associated with a company.
      example:
        id: 0
        companyId: 0
        name: IsPrimaryAddress
        value: "true"
    CustomerSupplierModel:
      required:
      - customerCode
      type: object
      properties:
        id:
          type: integer
          description: Identifier for company parameter
          format: int64
          readOnly: true
          example: 0
        companyId:
          type: integer
          description: CompanyId associated with the parameter
          format: int32
          example: 0
        customerCode:
          type: string
          description: CustomerCode
      description: Represents a parameter associated with a company.
      example:
        id: 0
        companyId: 0
        customerCode: Magento
    CompanyModel:
      required:
      - accountId
      - defaultCountry
      - id
      - name
      type: object
      properties:
        id:
          type: integer
          description: The unique ID number of this company.
          format: int32
          example: 12345
        accountId:
          type: integer
          description: The unique ID number of the account this company belongs to.
          format: int32
          example: 123456789
        parentCompanyId:
          type: integer
          description: If this company is fully owned by another company, this is
            the unique identity of the parent company.
          format: int32
        sstPid:
          maxLength: 9
          minLength: 0
          type: string
          description: If this company files Streamlined Sales Tax, this is the PID
            of this company as defined by the Streamlined Sales Tax governing board.
        companyCode:
          maxLength: 25
          minLength: 0
          type: string
          description: A unique code that references this company within your account.
          example: DEFAULT
        name:
          maxLength: 50
          minLength: 0
          type: string
          description: The name of this company, as shown to customers.
          example: Default Company
        isDefault:
          type: boolean
          description: This flag is true if this company is the default company for
            this account.  Only one company may be set as the default.
          example: false
        defaultLocationId:
          type: integer
          description: If set, this is the unique ID number of the default location
            for this company.
          format: int32
        isActive:
          type: boolean
          description: This flag indicates whether tax activity can occur for this
            company.  Set this flag to true to permit the company to process transactions.
          example: true
        taxpayerIdNumber:
          maxLength: 11
          minLength: 0
          type: string
          description: "For United States companies, this field contains your Taxpayer\
            \ Identification Number.\r\nThis is a nine digit number that is usually\
            \ called an EIN for an Employer Identification Number if this company\
            \ is a corporation,\r\nor SSN for a Social Security Number if this company\
            \ is a person.\r\nThis value is required if the address provided is inside\
            \ the US and if you subscribed to the Avalara Managed Returns or SST Certified\
            \ Service Provider service. Otherwise it is optional."
          example: "123456789"
        isFein:
          type: boolean
          description: Set this field to true if the taxPayerIdNumber is a FEIN.
        hasProfile:
          type: boolean
          description: "Set this flag to true to give this company its own unique\
            \ tax profile.\r\nIf this flag is true, this company will have its own\
            \ Nexus, TaxRule, TaxCode, and Item definitions.\r\nIf this flag is false,\
            \ this company will inherit all profile values from its parent."
          example: true
        isReportingEntity:
          type: boolean
          description: "Set this flag to true if this company must file its own tax\
            \ returns.\r\nFor users who have Returns enabled, this flag turns on monthly\
            \ Worksheet generation for the company."
          example: false
        sstEffectiveDate:
          type: string
          description: If this company participates in Streamlined Sales Tax, this
            is the date when the company joined the SST program.
          format: date
        defaultCountry:
          maxLength: 2
          minLength: 2
          type: string
          description: The two character ISO-3166 country code of the default country
            for this company.
          example: US
        baseCurrencyCode:
          maxLength: 3
          minLength: 0
          type: string
          description: This is the three character ISO-4217 currency code of the default
            currency used by this company.
          example: USD
        roundingLevelId:
          type: string
          description: Indicates whether this company prefers to round amounts at
            the document level or line level.
          example: Line
          enum:
          - Line
          - Document
          x-enum-metadata:
            name: RoundingLevelId
            values:
            - name: Line
              value: 0
            - name: Document
              value: 1
        warningsEnabled:
          type: boolean
          description: Set this value to true to receive warnings in API calls via
            SOAP.
        isTest:
          type: boolean
          description: "Set this flag to true to indicate that this company is a test\
            \ company.\r\nIf you have Returns enabled, Test companies will not file\
            \ tax returns and can be used for validation purposes."
          example: true
        taxDependencyLevelId:
          type: string
          description: Used to apply tax detail dependency at a jurisdiction level.
          example: Document
          enum:
          - Document
          - State
          - TaxRegion
          - Address
          x-enum-metadata:
            name: TaxDependencyLevelId
            values:
            - name: Document
              value: 0
            - name: State
              value: 1
            - name: TaxRegion
              value: 2
            - name: Address
              value: 3
        inProgress:
          type: boolean
          description: "Set this value to true to indicate that you are still working\
            \ to finish configuring this company.\r\nWhile this value is true, no\
            \ tax reporting will occur and the company will not be usable for transactions."
          example: false
        businessIdentificationNo:
          maxLength: 25
          minLength: 0
          type: string
          description: Business Identification No
        createdDate:
          type: string
          description: The date when this record was created.
          format: date-time
          readOnly: true
        createdUserId:
          type: integer
          description: The User ID of the user who created this record.
          format: int32
          readOnly: true
        modifiedDate:
          type: string
          description: The date/time when this record was last modified.
          format: date-time
          readOnly: true
        modifiedUserId:
          type: integer
          description: The user ID of the user who last modified this record.
          format: int32
          readOnly: true
        contacts:
          type: array
          description: "Optional: A list of contacts defined for this company.  To\
            \ fetch this list, add the query string `?$include=Contacts` to your URL.\r\
            \n            \r\nWhen calling `CreateCompany`, you may provide a list\
            \ of objects in this element and they will be created alongside the company.\r\
            \nThe `UpdateCompany` API does not permit updating nested objects."
          items:
            $ref: '#/components/schemas/ContactModel'
        items:
          type: array
          description: "Optional: A list of items defined for this company.  To fetch\
            \ this list, add the query string `?$include=Items` to your URL.\r\n \
            \           \r\nWhen calling `CreateCompany`, you may provide a list of\
            \ objects in this element and they will be created alongside the company.\r\
            \nThe `UpdateCompany` API does not permit updating nested objects."
          items:
            $ref: '#/components/schemas/ItemModel'
        locations:
          type: array
          description: "Optional: A list of locations defined for this company.  To\
            \ fetch this list, add the query string `?$include=Locations` to your\
            \ URL.\r\n            \r\nWhen calling `CreateCompany`, you may provide\
            \ a list of objects in this element and they will be created alongside\
            \ the company.\r\nThe `UpdateCompany` API does not permit updating nested\
            \ objects."
          items:
            $ref: '#/components/schemas/LocationModel'
        nexus:
          type: array
          description: "Optional: A list of nexus defined for this company.  To fetch\
            \ this list, add the query string `?$include=Nexus` to your URL.\r\n \
            \           \r\nWhen calling `CreateCompany`, you may provide a list of\
            \ objects in this element and they will be created alongside the company.\r\
            \nThe `UpdateCompany` API does not permit updating nested objects."
          items:
            $ref: '#/components/schemas/NexusModel'
        settings:
          type: array
          description: "Optional: A list of settings defined for this company.  To\
            \ fetch this list, add the query string `?$include=Settings` to your URL.\r\
            \n            \r\nWhen calling `CreateCompany`, you may provide a list\
            \ of objects in this element and they will be created alongside the company.\r\
            \nThe `UpdateCompany` API does not permit updating nested objects."
          items:
            $ref: '#/components/schemas/SettingModel'
        taxCodes:
          type: array
          description: "Optional: A list of tax codes defined for this company.  To\
            \ fetch this list, add the query string `?$include=TaxCodes` to your URL.\r\
            \n            \r\nWhen calling `CreateCompany`, you may provide a list\
            \ of objects in this element and they will be created alongside the company.\r\
            \nThe `UpdateCompany` API does not permit updating nested objects."
          items:
            $ref: '#/components/schemas/TaxCodeModel'
        taxRules:
          type: array
          description: "Optional: A list of tax rules defined for this company.  To\
            \ fetch this list, add the query string `?$include=TaxRules` to your URL.\r\
            \n            \r\nWhen calling `CreateCompany`, you may provide a list\
            \ of objects in this element and they will be created alongside the company.\r\
            \nThe `UpdateCompany` API does not permit updating nested objects."
          items:
            $ref: '#/components/schemas/TaxRuleModel'
        upcs:
          type: array
          description: "Optional: A list of UPCs defined for this company.  To fetch\
            \ this list, add the query string `?$include=UPCs` to your URL.\r\n  \
            \          \r\nWhen calling `CreateCompany`, you may provide a list of\
            \ objects in this element and they will be created alongside the company.\r\
            \nThe `UpdateCompany` API does not permit updating nested objects."
          items:
            $ref: '#/components/schemas/UPCModel'
        nonReportingChildCompanies:
          type: array
          description: 'Optional: A list of non reporting child companies associated
            with this company.  To fetch this list, add the query string `?$include=NonReportingChildren`
            to your URL.'
          readOnly: true
          items:
            $ref: '#/components/schemas/CompanyModel'
        exemptCerts:
          type: array
          description: "DEPRECATED - Date: 9/15/2017, Version: 17.10, Message: Please\
            \ use the `ListCertificates` API.\r\n"
          readOnly: true
          items:
            $ref: '#/components/schemas/EcmsModel'
          x-property-deprecation-info:
            date: 9/15/2017
            version: "17.10"
            message: Please use the `ListCertificates` API.
        mossId:
          maxLength: 25
          minLength: 0
          type: string
          description: The unique identifier of the mini-one-stop-shop used for Value
            Added Tax (VAT) processing.
        mossCountry:
          maxLength: 2
          minLength: 0
          type: string
          description: The country code of the mini-one-stop-shop used for Value Added
            Tax (VAT) processing.
        parameters:
          type: array
          description: The parameters of a company
          readOnly: true
          items:
            $ref: '#/components/schemas/CompanyParameterDetailModel'
        supplierandcustomers:
          type: array
          description: The customers and suppliers of a company
          readOnly: true
          items:
            $ref: '#/components/schemas/CustomerSupplierModel'
      description: A company or business entity.
      example:
        id: 12345
        accountId: 123456789
        companyCode: DEFAULT
        name: Default Company
        isDefault: false
        isActive: true
        taxpayerIdNumber: "123456789"
        isFein: false
        hasProfile: true
        isReportingEntity: false
        defaultCountry: US
        baseCurrencyCode: USD
        roundingLevelId: Line
        isTest: true
        taxDependencyLevelId: Document
        inProgress: false
    CompanyModelFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/CompanyModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    ApproveAdvancedRuleModel:
      type: object
      properties:
        isApproved:
          type: boolean
          description: Should the rule be approved
          example: true
      description: Model for changing the approved status of an advanced rule
      example:
        isApproved: true
    AdvancedRuleVisibilityModel:
      type: object
      properties:
        isVisible:
          type: boolean
          description: Should the rule be visible or not visible
        accountId:
          type: integer
          description: The account Id for which the rule is to be visible/not visible
          format: int32
      description: Model for toggling visibility of an advanced rule for an account
      example:
        isVisible: true
        accountId: 0
    AdvancedRuleModel:
      required:
      - name
      type: object
      properties:
        ruleId:
          type: string
          description: Unique identifier for a rule
          example: 5ea22e4c91c14f41b04aef1d40351b6d
        name:
          type: string
          description: Rule name
          example: Generic replace rule
        description:
          type: string
          description: Description of the rule
          example: Replaces a target value on the transaction with a replacement value
        arEntitlementRequired:
          type: boolean
          description: Advance Rules limited availability
          example: false
        executionPosition:
          type: string
          description: Execution position. Both, Before or After
      description: A generic global advanced rule encapsulating a script
      example:
        ruleId: 5ea22e4c91c14f41b04aef1d40351b6d
        name: Generic replace rule
        description: Replaces a target value on the transaction with a replacement
          value
        arEntitlementRequired: false
    AdvancedRuleExecutionModel:
      required:
      - name
      - ruleId
      type: object
      properties:
        ruleExecutionId:
          type: string
          description: Rule execution unique identifier
          readOnly: true
          example: 55a895f09c4f419895ac73e0b6465f14
        name:
          type: string
          description: Name of rule execution
        startDate:
          type: string
          description: Date rule execution starts
          format: date-time
          example: 2022-01-10T00:00:00Z
        endDate:
          type: string
          description: Date rule execution ends
          format: date-time
        enabled:
          type: boolean
          description: Is rule execution enabled
          example: true
        continueOnError:
          type: boolean
          description: Should we keep running if we hit an exception
          example: false
        ruleId:
          type: string
          description: Unique identifier of rule to execute
          example: 177b3899a2da426b8fa0bd2676768059
        rule:
          $ref: '#/components/schemas/AdvancedRuleModel'
        customerData:
          type: string
          description: Json data used for rule execution
        customerDataId:
          type: string
          description: Unique identifier of customer data used in rule execution
          readOnly: true
          example: 67aff6545e324788ae1c9146beadd037
      description: Model representing an execution of an advanced rule for a company
      example:
        ruleExecutionId: 55a895f09c4f419895ac73e0b6465f14
        startDate: 2022-01-10T00:00:00Z
        endDate: 9999-12-31T00:00:00
        enabled: true
        continueOnError: false
        ruleId: 177b3899a2da426b8fa0bd2676768059
        rule:
          ruleId: 1d23b1b436a34a4bb83a1418a3a555ef
          name: Generic replace rule
          description: Replaces a target value on the transaction with a replacement
            value
          arEntitlementRequired: false
        customerDataId: 67aff6545e324788ae1c9146beadd037
    AdvancedRuleExecutionModelFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/AdvancedRuleExecutionModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    AdvancedRuleExecutionOrderModel:
      required:
      - ruleExecutionIds
      type: object
      properties:
        ruleExecutionIds:
          type: array
          description: The rule execution Ids in the desired order
          example:
          - 06d902a27e934a1a8b04fbf460eed1e1
          - f92b2b9a6b714de5b126c20bcb5aef14
          items:
            type: string
      description: Model for updating rule execution order
      example:
        ruleExecutionIds:
        - 06d902a27e934a1a8b04fbf460eed1e1
        - f92b2b9a6b714de5b126c20bcb5aef14
    StringFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            type: string
        '@nextLink':
          type: string
        pageKey:
          type: string
    AdvancedRuleLookupFileModel:
      required:
      - content
      - fileExtension
      - name
      type: object
      properties:
        lookupFileId:
          type: string
          description: LookupFile unique identifier
        id:
          type: string
          description: CompanyLookupFile unique identifier
          readOnly: true
        name:
          maxLength: 100
          minLength: 0
          type: string
          description: Name of lookup file
          example: sampleLookupFile
        content:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          description: Content of the lookup file.
          format: byte
          example: SWQsTWF0ZXJpYWxHcm91cCxUYXhDb2RlIA0KMSw0MjM0NSxTQzE1MDMwNg0KMiw0MjM0NixTQzE1MDMwNg0KMywxMTExMSxQMDAwMDAwMA0KNCw0NDQ0NCxEQzAxMDAwMA0KNSw5MDk5OSxTUDE0MDAwMA==
        fileExtension:
          maxLength: 10
          minLength: 0
          type: string
          description: File extension (e.g. CSV).
          example: .csv
        isTest:
          type: boolean
          description: Is this a lookup file created for testing
          example: false
        inUse:
          type: boolean
          description: Is this a lookup file in use for any rule
        version:
          type: integer
          description: Lookup file version
          format: int32
        createdDate:
          type: string
          description: Lookup file CreatedDate
        modifiedDate:
          type: string
          description: Lookup file ModifiedDate
      description: Model representing a lookup file for a company
      example:
        name: sampleLookupFile
        content: SWQsTWF0ZXJpYWxHcm91cCxUYXhDb2RlIA0KMSw0MjM0NSxTQzE1MDMwNg0KMiw0MjM0NixTQzE1MDMwNg0KMywxMTExMSxQMDAwMDAwMA0KNCw0NDQ0NCxEQzAxMDAwMA0KNSw5MDk5OSxTUDE0MDAwMA==
        fileExtension: .csv
        isTest: false
    AdvancedRuleLookupFileModelFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/AdvancedRuleLookupFileModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    AvaFileFormModel:
      type: object
      properties:
        id:
          type: integer
          description: Unique Id of the form
          format: int32
          example: 2415
        returnName:
          type: string
          description: Name of the file being returned
          example: CABOE401A2
        formName:
          type: string
          description: Name of the submitted form
          example: CA BOE 401 A2
        description:
          type: string
          description: A description of the submitted form
          example: State, Local, and District Sales and Use Tax Return
        effDate:
          type: string
          description: The date this form starts to take effect
          format: date-time
        endDate:
          type: string
          description: The date the form finishes to take effect
          format: date-time
        region:
          type: string
          description: State/Province/Region where the form is submitted for
          example: CA
        country:
          type: string
          description: The country this form is submitted for
          example: US
        formTypeId:
          type: string
          description: The type of the form being submitted
          example: SalesAndUse
          enum:
          - SalesAndUse
          - Sales
          - SellersUse
          - Lodging
          - SalesAndLodging
          - ConsumerUse
          - ResortAndRental
          - TouristAndRental
          - Prepayment
          - PrepaymentAllowed
          x-enum-metadata:
            name: FormTypeId
            values:
            - name: SalesAndUse
              value: 0
            - name: Sales
              value: 1
            - name: SellersUse
              value: 2
            - name: Lodging
              value: 3
            - name: SalesAndLodging
              value: 4
            - name: ConsumerUse
              value: 5
            - name: ResortAndRental
              value: 6
            - name: TouristAndRental
              value: 7
            - name: Prepayment
              value: 8
            - name: PrepaymentAllowed
              value: 9
        filingOptionTypeId:
          type: string
          description: The type of Filing option
          example: Paper
          enum:
          - Paper
          - OptionalEfile
          - MandatoryEfile
          x-enum-metadata:
            name: FilingOptionTypeId
            values:
            - name: Paper
              value: 0
            - name: OptionalEfile
              value: 1
            - name: MandatoryEfile
              value: 2
        dueDateTypeId:
          type: string
          description: The type of the due date
          example: ByDay
          enum:
          - ByDay
          - ByLastDay
          - BySecondLastDay
          x-enum-metadata:
            name: DueDateTypeId
            values:
            - name: ByDay
              value: 0
            - name: ByLastDay
              value: 1
            - name: BySecondLastDay
              value: 2
        dueDay:
          type: integer
          description: Due date
          format: int32
          example: 20
        efileDueDateTypeId:
          type: string
          description: The type of E-file due date.
          example: ByDay
          enum:
          - ByDay
          - ByLastDay
          - BySecondLastDay
          x-enum-metadata:
            name: DueDateTypeId
            values:
            - name: ByDay
              value: 0
            - name: ByLastDay
              value: 1
            - name: BySecondLastDay
              value: 2
        efileDueDay:
          type: integer
          description: The date by when the E-filing should be submitted
          format: int32
          example: 20
        efileDueTime:
          type: string
          description: The time of day by when the E-filing should be submitted
          format: date-time
        hasVendorDiscount:
          type: boolean
          description: Whether the customer has discount
          example: false
        roundingTypeId:
          type: string
          description: The way system does the rounding
          example: None
          enum:
          - None
          - Nearest
          - Up
          - Down
          x-enum-metadata:
            name: RoundingTypeId
            values:
            - name: None
              value: 0
            - name: Nearest
              value: 1
            - name: Up
              value: 2
            - name: Down
              value: 3
        outletTypeId:
          type: string
          description: The outlet type of the form
          example: None
          enum:
          - None
          - Schedule
          - Duplicate
          - Consolidated
          x-enum-metadata:
            name: OutletTypeId
            values:
            - name: None
              value: 0
            - name: Schedule
              value: 1
            - name: Duplicate
              value: 2
            - name: Consolidated
              value: 3
      description: Represents information about a tax form known to Avalara
      example:
        id: 2415
        returnName: CABOE401A2
        formName: CA BOE 401 A2
        description: State, Local, and District Sales and Use Tax Return
        effDate: 2005-04-01T00:00:00
        endDate: 9999-12-31T00:00:00
        region: CA
        country: US
        formTypeId: SalesAndUse
        filingOptionTypeId: Paper
        dueDateTypeId: ByDay
        dueDay: 20
        efileDueDateTypeId: ByDay
        efileDueDay: 20
        efileDueTime: 1900-01-01T00:00:00
        hasVendorDiscount: false
        roundingTypeId: None
    AvaFileFormModelFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/AvaFileFormModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    BatchFileModel:
      required:
      - content
      type: object
      properties:
        id:
          type: integer
          description: The unique ID number assigned to this batch file.
          format: int32
          readOnly: true
        batchId:
          type: integer
          description: The unique ID number of the batch that this file belongs to.
          format: int32
          readOnly: true
        name:
          maxLength: 50
          minLength: 0
          type: string
          description: Logical Name of file (e.g. "Input" or "Error").
          example: samplebatch.csv
        content:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          description: Content of the batch file.
          format: byte
          example: UHJvY2Vzc0NvZGUsRG9jQ29kZSxEb2NUeXBlLERvY0RhdGUsQ29tcGFueUNvZGUsQ3VzdG9tZXJDb2RlLEVudGl0eVVzZUNvZGUsTGluZU5vLFRheENvZGUsVGF4RGF0ZSxJdGVtQ29kZSxEZXNjcmlwdGlvbixRdHksQW1vdW50LERpc2NvdW50LFJlZjEsUmVmMixFeGVtcHRpb25ObyxSZXZBY2N0LERlc3RBZGRyZXNzLERlc3RDaXR5LERlc3RSZWdpb24sRGVzdFBvc3RhbENvZGUsRGVzdENvdW50cnksT3JpZ0FkZHJlc3MsT3JpZ0NpdHksT3JpZ1JlZ2lvbixPcmlnUG9zdGFsQ29kZSxPcmlnQ291bnRyeSxMb2NhdGlvbkNvZGUsU2FsZXNQZXJzb25Db2RlLFB1cmNoYXNlT3JkZXJObyxDdXJyZW5jeUNvZGUsRXhjaGFuZ2VSYXRlLEV4Y2hhbmdlUmF0ZUVmZkRhdGUsUGF5bWVudERhdGUsVGF4SW5jbHVkZWQsRGVzdFRheFJlZ2lvbixPcmlnVGF4UmVnaW9uLFRheGFibGUsVGF4VHlwZSxUb3RhbFRheCxDb3VudHJ5TmFtZSxDb3VudHJ5Q29kZSxDb3VudHJ5UmF0ZSxDb3VudHJ5VGF4LFN0YXRlTmFtZSxTdGF0ZUNvZGUsU3RhdGVSYXRlLFN0YXRlVGF4LENvdW50eU5hbWUsQ291bnR5Q29kZSxDb3VudHlSYXRlLENvdW50eVRheCxDaXR5TmFtZSxDaXR5Q29kZSxDaXR5UmF0ZSxDaXR5VGF4LE90aGVyMU5hbWUsT3RoZXIxQ29kZSxPdGhlcjFSYXRlLE90aGVyMVRheCxPdGhlcjJOYW1lLE90aGVyMkNvZGUsT3RoZXIyUmF0ZSxPdGhlcjJUYXgsT3RoZXIzTmFtZSxPdGhlcjNDb2RlLE90aGVyM1JhdGUsT3RoZXIzVGF4LE90aGVyNE5hbWUsT3RoZXI0Q29kZSxPdGhlcjRSYXRlLE90aGVyNFRheCxSZWZlcmVuY2VDb2RlLEJ1eWVyc1ZBVE5vLElzU2VsbGVySW1wb3J0ZXJPZlJlY29yZCxCUkJ1eWVyVHlwZSxCUkJ1eWVyX0lzRXhlbXB0T3JDYW5ub3RXSF9JUlJGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX1BJU1JGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX0NPRklOU1JGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX0NTTExSRixCUkJ1eWVyX0lzRXhlbXB0X1BJUyxCUkJ1eWVyX0lzRXhlbXB0X0NPRklOUyxCUkJ1eWVyX0lzRXhlbXB0X0NTTEwsSGVhZGVyX0Rlc2NyaXB0aW9uLEVtYWlsDQozLDlhYzI4MGMzLTNhNTUtNGEzNS1iZWQyLWE4M2RiNTNiMDUxZSwxLDEvMS8yMDE0LERFRkFVTFQsQ3VzdDEsLDEsLCwsLCwxMDAwLCwsLCwsMjM1IEUgNDJuZCBTdCAsTmV3IFlvcmssTlksMTAwMTctNTcwMyAgLFVTLDkwMCBXaW5zbG93IFdheSxCYWluYnJpZGdlIElzbGFuZCxXQSw5ODExMCxVUywsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwNCg==
        contentLength:
          type: integer
          description: Size of content, in bytes.
          format: int32
          readOnly: true
          example: 0
        contentType:
          maxLength: 100
          minLength: 0
          type: string
          description: Content mime type (e.g. text/csv).  This is used for HTTP downloading.
          example: text/csv
        fileExtension:
          maxLength: 10
          minLength: 0
          type: string
          description: File extension (e.g. CSV).
          example: .csv
        filePath:
          type: string
          description: Path to the file - name/S3 key
          example: samplebatch.csv
        errorCount:
          type: integer
          description: Number of errors that occurred when processing this file.
          format: int32
      description: Represents one file in a batch upload.
      example:
        name: samplebatch.csv
        content: UHJvY2Vzc0NvZGUsRG9jQ29kZSxEb2NUeXBlLERvY0RhdGUsQ29tcGFueUNvZGUsQ3VzdG9tZXJDb2RlLEVudGl0eVVzZUNvZGUsTGluZU5vLFRheENvZGUsVGF4RGF0ZSxJdGVtQ29kZSxEZXNjcmlwdGlvbixRdHksQW1vdW50LERpc2NvdW50LFJlZjEsUmVmMixFeGVtcHRpb25ObyxSZXZBY2N0LERlc3RBZGRyZXNzLERlc3RDaXR5LERlc3RSZWdpb24sRGVzdFBvc3RhbENvZGUsRGVzdENvdW50cnksT3JpZ0FkZHJlc3MsT3JpZ0NpdHksT3JpZ1JlZ2lvbixPcmlnUG9zdGFsQ29kZSxPcmlnQ291bnRyeSxMb2NhdGlvbkNvZGUsU2FsZXNQZXJzb25Db2RlLFB1cmNoYXNlT3JkZXJObyxDdXJyZW5jeUNvZGUsRXhjaGFuZ2VSYXRlLEV4Y2hhbmdlUmF0ZUVmZkRhdGUsUGF5bWVudERhdGUsVGF4SW5jbHVkZWQsRGVzdFRheFJlZ2lvbixPcmlnVGF4UmVnaW9uLFRheGFibGUsVGF4VHlwZSxUb3RhbFRheCxDb3VudHJ5TmFtZSxDb3VudHJ5Q29kZSxDb3VudHJ5UmF0ZSxDb3VudHJ5VGF4LFN0YXRlTmFtZSxTdGF0ZUNvZGUsU3RhdGVSYXRlLFN0YXRlVGF4LENvdW50eU5hbWUsQ291bnR5Q29kZSxDb3VudHlSYXRlLENvdW50eVRheCxDaXR5TmFtZSxDaXR5Q29kZSxDaXR5UmF0ZSxDaXR5VGF4LE90aGVyMU5hbWUsT3RoZXIxQ29kZSxPdGhlcjFSYXRlLE90aGVyMVRheCxPdGhlcjJOYW1lLE90aGVyMkNvZGUsT3RoZXIyUmF0ZSxPdGhlcjJUYXgsT3RoZXIzTmFtZSxPdGhlcjNDb2RlLE90aGVyM1JhdGUsT3RoZXIzVGF4LE90aGVyNE5hbWUsT3RoZXI0Q29kZSxPdGhlcjRSYXRlLE90aGVyNFRheCxSZWZlcmVuY2VDb2RlLEJ1eWVyc1ZBVE5vLElzU2VsbGVySW1wb3J0ZXJPZlJlY29yZCxCUkJ1eWVyVHlwZSxCUkJ1eWVyX0lzRXhlbXB0T3JDYW5ub3RXSF9JUlJGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX1BJU1JGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX0NPRklOU1JGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX0NTTExSRixCUkJ1eWVyX0lzRXhlbXB0X1BJUyxCUkJ1eWVyX0lzRXhlbXB0X0NPRklOUyxCUkJ1eWVyX0lzRXhlbXB0X0NTTEwsSGVhZGVyX0Rlc2NyaXB0aW9uLEVtYWlsDQozLDlhYzI4MGMzLTNhNTUtNGEzNS1iZWQyLWE4M2RiNTNiMDUxZSwxLDEvMS8yMDE0LERFRkFVTFQsQ3VzdDEsLDEsLCwsLCwxMDAwLCwsLCwsMjM1IEUgNDJuZCBTdCAsTmV3IFlvcmssTlksMTAwMTctNTcwMyAgLFVTLDkwMCBXaW5zbG93IFdheSxCYWluYnJpZGdlIElzbGFuZCxXQSw5ODExMCxVUywsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwNCg==
        contentLength: 0
        contentType: text/csv
        fileExtension: .csv
        filePath: samplebatch.csv
    BatchModel:
      required:
      - name
      - type
      type: object
      properties:
        type:
          type: string
          description: The type of this batch.
          example: AvaCertUpdate
          enum:
          - AvaCertUpdate
          - AvaCertUpdateAll
          - BatchMaintenance
          - CompanyLocationImport
          - DocumentImport
          - ExemptCertImport
          - ItemImport
          - SalesAuditExport
          - SstpTestDeckImport
          - TaxRuleImport
          - TransactionImport
          - UPCBulkImport
          - UPCValidationImport
          - CustomerSupplierImport
          x-enum-metadata:
            name: BatchType
            values:
            - name: AvaCertUpdate
              value: 0
            - name: AvaCertUpdateAll
              value: 1
            - name: BatchMaintenance
              value: 2
            - name: CompanyLocationImport
              value: 3
            - name: DocumentImport
              value: 4
            - name: ExemptCertImport
              value: 5
            - name: ItemImport
              value: 6
            - name: SalesAuditExport
              value: 7
            - name: SstpTestDeckImport
              value: 8
            - name: TaxRuleImport
              value: 9
            - name: TransactionImport
              value: 10
            - name: UPCBulkImport
              value: 11
            - name: UPCValidationImport
              value: 12
            - name: CustomerSupplierImport
              value: 13
        batchAgent:
          maxLength: 50
          minLength: 0
          type: string
          description: The agent used to create this batch
          example: manual
        options:
          maxLength: 200
          minLength: 0
          type: string
          description: Any optional flags provided for this batch
        id:
          type: integer
          description: The unique ID number of this batch.
          format: int32
          readOnly: true
        name:
          maxLength: 194
          minLength: 0
          type: string
          description: The user-friendly readable name for this batch.
          example: TestBatch
        accountId:
          type: integer
          description: The Account ID number of the account that owns this batch.
          format: int32
        companyId:
          type: integer
          description: The Company ID number of the company that owns this batch.
          format: int32
        status:
          type: string
          description: This batch's current processing status
          readOnly: true
          example: Waiting
          enum:
          - Waiting
          - SystemErrors
          - Cancelled
          - Completed
          - Creating
          - Deleted
          - Errors
          - Paused
          - Processing
          - Cancelling
          x-enum-metadata:
            name: BatchStatus
            values:
            - name: Waiting
              value: 0
            - name: SystemErrors
              value: 1
            - name: Cancelled
              value: 2
            - name: Completed
              value: 3
            - name: Creating
              value: 4
            - name: Deleted
              value: 5
            - name: Errors
              value: 6
            - name: Paused
              value: 7
            - name: Processing
              value: 8
            - name: Cancelling
              value: 9
        startedDate:
          type: string
          description: The date/time when this batch started processing
          format: date-time
          readOnly: true
        recordCount:
          type: integer
          description: The number of records in this batch; determined by the server
          format: int32
          readOnly: true
        currentRecord:
          type: integer
          description: The current record being processed
          format: int32
          readOnly: true
        completedDate:
          type: string
          description: The date/time when this batch was completely processed
          format: date-time
          readOnly: true
        createdDate:
          type: string
          description: The date when this record was created.
          format: date-time
          readOnly: true
        createdUserId:
          type: integer
          description: The User ID of the user who created this record.
          format: int32
          readOnly: true
        modifiedDate:
          type: string
          description: The date/time when this record was last modified.
          format: date-time
          readOnly: true
        modifiedUserId:
          type: integer
          description: The user ID of the user who last modified this record.
          format: int32
          readOnly: true
        files:
          type: array
          description: The list of files contained in this batch.
          example:
          - name: samplebatch.csv
            content: UHJvY2Vzc0NvZGUsRG9jQ29kZSxEb2NUeXBlLERvY0RhdGUsQ29tcGFueUNvZGUsQ3VzdG9tZXJDb2RlLEVudGl0eVVzZUNvZGUsTGluZU5vLFRheENvZGUsVGF4RGF0ZSxJdGVtQ29kZSxEZXNjcmlwdGlvbixRdHksQW1vdW50LERpc2NvdW50LFJlZjEsUmVmMixFeGVtcHRpb25ObyxSZXZBY2N0LERlc3RBZGRyZXNzLERlc3RDaXR5LERlc3RSZWdpb24sRGVzdFBvc3RhbENvZGUsRGVzdENvdW50cnksT3JpZ0FkZHJlc3MsT3JpZ0NpdHksT3JpZ1JlZ2lvbixPcmlnUG9zdGFsQ29kZSxPcmlnQ291bnRyeSxMb2NhdGlvbkNvZGUsU2FsZXNQZXJzb25Db2RlLFB1cmNoYXNlT3JkZXJObyxDdXJyZW5jeUNvZGUsRXhjaGFuZ2VSYXRlLEV4Y2hhbmdlUmF0ZUVmZkRhdGUsUGF5bWVudERhdGUsVGF4SW5jbHVkZWQsRGVzdFRheFJlZ2lvbixPcmlnVGF4UmVnaW9uLFRheGFibGUsVGF4VHlwZSxUb3RhbFRheCxDb3VudHJ5TmFtZSxDb3VudHJ5Q29kZSxDb3VudHJ5UmF0ZSxDb3VudHJ5VGF4LFN0YXRlTmFtZSxTdGF0ZUNvZGUsU3RhdGVSYXRlLFN0YXRlVGF4LENvdW50eU5hbWUsQ291bnR5Q29kZSxDb3VudHlSYXRlLENvdW50eVRheCxDaXR5TmFtZSxDaXR5Q29kZSxDaXR5UmF0ZSxDaXR5VGF4LE90aGVyMU5hbWUsT3RoZXIxQ29kZSxPdGhlcjFSYXRlLE90aGVyMVRheCxPdGhlcjJOYW1lLE90aGVyMkNvZGUsT3RoZXIyUmF0ZSxPdGhlcjJUYXgsT3RoZXIzTmFtZSxPdGhlcjNDb2RlLE90aGVyM1JhdGUsT3RoZXIzVGF4LE90aGVyNE5hbWUsT3RoZXI0Q29kZSxPdGhlcjRSYXRlLE90aGVyNFRheCxSZWZlcmVuY2VDb2RlLEJ1eWVyc1ZBVE5vLElzU2VsbGVySW1wb3J0ZXJPZlJlY29yZCxCUkJ1eWVyVHlwZSxCUkJ1eWVyX0lzRXhlbXB0T3JDYW5ub3RXSF9JUlJGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX1BJU1JGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX0NPRklOU1JGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX0NTTExSRixCUkJ1eWVyX0lzRXhlbXB0X1BJUyxCUkJ1eWVyX0lzRXhlbXB0X0NPRklOUyxCUkJ1eWVyX0lzRXhlbXB0X0NTTEwsSGVhZGVyX0Rlc2NyaXB0aW9uLEVtYWlsDQozLDlhYzI4MGMzLTNhNTUtNGEzNS1iZWQyLWE4M2RiNTNiMDUxZSwxLDEvMS8yMDE0LERFRkFVTFQsQ3VzdDEsLDEsLCwsLCwxMDAwLCwsLCwsMjM1IEUgNDJuZCBTdCAsTmV3IFlvcmssTlksMTAwMTctNTcwMyAgLFVTLDkwMCBXaW5zbG93IFdheSxCYWluYnJpZGdlIElzbGFuZCxXQSw5ODExMCxVUywsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwNCg==
            contentLength: 0
            contentType: text/csv
            fileExtension: .csv
            filePath: samplebatch.csv
          items:
            $ref: '#/components/schemas/BatchFileModel'
      description: Represents a batch of uploaded documents.
      example:
        type: TransactionImport
        batchAgent: manual
        name: TestBatch
        files:
        - name: samplebatch.csv
          content: UHJvY2Vzc0NvZGUsRG9jQ29kZSxEb2NUeXBlLERvY0RhdGUsQ29tcGFueUNvZGUsQ3VzdG9tZXJDb2RlLEVudGl0eVVzZUNvZGUsTGluZU5vLFRheENvZGUsVGF4RGF0ZSxJdGVtQ29kZSxEZXNjcmlwdGlvbixRdHksQW1vdW50LERpc2NvdW50LFJlZjEsUmVmMixFeGVtcHRpb25ObyxSZXZBY2N0LERlc3RBZGRyZXNzLERlc3RDaXR5LERlc3RSZWdpb24sRGVzdFBvc3RhbENvZGUsRGVzdENvdW50cnksT3JpZ0FkZHJlc3MsT3JpZ0NpdHksT3JpZ1JlZ2lvbixPcmlnUG9zdGFsQ29kZSxPcmlnQ291bnRyeSxMb2NhdGlvbkNvZGUsU2FsZXNQZXJzb25Db2RlLFB1cmNoYXNlT3JkZXJObyxDdXJyZW5jeUNvZGUsRXhjaGFuZ2VSYXRlLEV4Y2hhbmdlUmF0ZUVmZkRhdGUsUGF5bWVudERhdGUsVGF4SW5jbHVkZWQsRGVzdFRheFJlZ2lvbixPcmlnVGF4UmVnaW9uLFRheGFibGUsVGF4VHlwZSxUb3RhbFRheCxDb3VudHJ5TmFtZSxDb3VudHJ5Q29kZSxDb3VudHJ5UmF0ZSxDb3VudHJ5VGF4LFN0YXRlTmFtZSxTdGF0ZUNvZGUsU3RhdGVSYXRlLFN0YXRlVGF4LENvdW50eU5hbWUsQ291bnR5Q29kZSxDb3VudHlSYXRlLENvdW50eVRheCxDaXR5TmFtZSxDaXR5Q29kZSxDaXR5UmF0ZSxDaXR5VGF4LE90aGVyMU5hbWUsT3RoZXIxQ29kZSxPdGhlcjFSYXRlLE90aGVyMVRheCxPdGhlcjJOYW1lLE90aGVyMkNvZGUsT3RoZXIyUmF0ZSxPdGhlcjJUYXgsT3RoZXIzTmFtZSxPdGhlcjNDb2RlLE90aGVyM1JhdGUsT3RoZXIzVGF4LE90aGVyNE5hbWUsT3RoZXI0Q29kZSxPdGhlcjRSYXRlLE90aGVyNFRheCxSZWZlcmVuY2VDb2RlLEJ1eWVyc1ZBVE5vLElzU2VsbGVySW1wb3J0ZXJPZlJlY29yZCxCUkJ1eWVyVHlwZSxCUkJ1eWVyX0lzRXhlbXB0T3JDYW5ub3RXSF9JUlJGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX1BJU1JGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX0NPRklOU1JGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX0NTTExSRixCUkJ1eWVyX0lzRXhlbXB0X1BJUyxCUkJ1eWVyX0lzRXhlbXB0X0NPRklOUyxCUkJ1eWVyX0lzRXhlbXB0X0NTTEwsSGVhZGVyX0Rlc2NyaXB0aW9uLEVtYWlsDQozLDlhYzI4MGMzLTNhNTUtNGEzNS1iZWQyLWE4M2RiNTNiMDUxZSwxLDEvMS8yMDE0LERFRkFVTFQsQ3VzdDEsLDEsLCwsLCwxMDAwLCwsLCwsMjM1IEUgNDJuZCBTdCAsTmV3IFlvcmssTlksMTAwMTctNTcwMyAgLFVTLDkwMCBXaW5zbG93IFdheSxCYWluYnJpZGdlIElzbGFuZCxXQSw5ODExMCxVUywsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwNCg==
          contentLength: 0
          contentType: text/csv
          fileExtension: .csv
          filePath: samplebatch.csv
    BatchModelFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/BatchModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    AddressLocationInfo:
      type: object
      properties:
        locationCode:
          type: string
          description: "If you wish to use the address of an existing location for\
            \ this company, specify the address here.\r\nOtherwise, leave this value\
            \ empty.\r\n            \r\nThe `locationCode` field on this object allows\
            \ you to quickly use the address of an existing `locationModel` object\
            \ instead\r\nof having to retype the address completely.\r\n         \
            \   \r\nThis field does not affect the behavior of transactions that must\
            \ be filed on location-based tax returns.  To specify how a\r\ntransaction\
            \ will be reported on location-based tax returns, please see the `reportingLocationCode`\
            \ field\r\non the [CreateTransactionModel](https://developer.avalara.com/api-reference/avatax/rest/v2/models/CreateTransactionModel/)\
            \ element."
        line1:
          maxLength: 100
          minLength: 0
          type: string
          description: First line of the street address
          example: 2000 Main Street
        line2:
          maxLength: 100
          minLength: 0
          type: string
          description: Second line of the street address
        line3:
          maxLength: 100
          minLength: 0
          type: string
          description: Third line of the street address
        city:
          maxLength: 50
          minLength: 0
          type: string
          description: City component of the address
          example: Irvine
        region:
          type: string
          description: "Name or ISO 3166 code identifying the region within the country.\r\
            \n            \r\nThis field supports many different region identifiers:\r\
            \n * Two and three character ISO 3166 region codes\r\n * Fully spelled\
            \ out names of the region in ISO supported languages\r\n * Common alternative\
            \ spellings for many regions\r\n            \r\nFor a full list of all\
            \ supported codes and names, please see the Definitions API `ListRegions`."
          example: CA
        country:
          type: string
          description: "Name or ISO 3166 code identifying the country.\r\n       \
            \     \r\nThis field supports many different country identifiers:\r\n\
            \ * Two character ISO 3166 codes\r\n * Three character ISO 3166 codes\r\
            \n * Fully spelled out names of the country in ISO supported languages\r\
            \n * Common alternative spellings for many countries\r\n            \r\
            \nFor a full list of all supported codes and names, please see the Definitions\
            \ API `ListCountries`."
          example: US
        postalCode:
          maxLength: 11
          minLength: 0
          type: string
          description: Postal Code / Zip Code component of the address.
          example: "92614"
        latitude:
          type: number
          description: Geospatial latitude measurement, in Decimal Degrees floating
            point format.
          format: double
        longitude:
          type: number
          description: Geospatial longitude measurement, in Decimal Degrees floating
            point format.
          format: double
      description: Represents an address to resolve.
      example:
        line1: 2000 Main Street
        city: Irvine
        region: CA
        country: US
        postalCode: "92614"
    AddressesModel:
      type: object
      properties:
        singleLocation:
          $ref: '#/components/schemas/AddressLocationInfo'
        shipFrom:
          $ref: '#/components/schemas/AddressLocationInfo'
        shipTo:
          $ref: '#/components/schemas/AddressLocationInfo'
        pointOfOrderOrigin:
          $ref: '#/components/schemas/AddressLocationInfo'
        pointOfOrderAcceptance:
          $ref: '#/components/schemas/AddressLocationInfo'
        goodsPlaceOrServiceRendered:
          $ref: '#/components/schemas/AddressLocationInfo'
        import:
          $ref: '#/components/schemas/AddressLocationInfo'
        billTo:
          $ref: '#/components/schemas/AddressLocationInfo'
      description: "Information about all the addresses involved in this transaction.\r\
        \n            \r\nFor a physical in-person transaction at a retail point-of-sale\
        \ location, please specify only one address using\r\nthe `singleLocation`\
        \ field.\r\n            \r\nFor a transaction that was shipped, delivered,\
        \ or provided from an origin location such as a warehouse to\r\na destination\
        \ location such as a customer, please specify the `shipFrom` and `shipTo`\
        \ addresses.\r\n            \r\nIn the United States, some jurisdictions recognize\
        \ the address types `pointOfOrderOrigin` and `pointOfOrderAcceptance`.\r\n\
        These address types affect the sourcing models of some transactions.\r\n \
        \           \r\nIf latitude and longitude information is provided for any\
        \ of these addresses along with line, city, region, country and postal code\
        \ information,\r\nwe will be using only latitude and longitude and will discard\
        \ line, city, region, country and postal code information for the transaction.\r\
        \nPlease ensure that you have the correct latitude/longitude information for\
        \ the addresses prior to using the API.\r\nIf you provide either latitude\
        \ or longitude information but not both, we will be using the line, city,\
        \ region, country and postal code information for the addresses."
      example:
        shipFrom:
          line1: 2000 Main Street
          city: Irvine
          region: CA
          country: US
          postalCode: "92614"
        shipTo:
          line1: 1100 2nd Ave
          city: Seattle
          region: WA
          country: US
          postalCode: "98101"
    TransactionLineTaxAmountByTaxTypeModel:
      type: object
      properties:
        taxTypeId:
          type: string
          description: The name of the TaxType.
        taxAmount:
          type: number
          description: The value of the TaxOverrideAmount.
          format: double
      description: Represents a transaction parameter.
      example:
        taxTypeId: ""
        taxAmount: 0
    TaxOverrideModel:
      type: object
      properties:
        type:
          type: string
          description: Identifies the type of tax override
          example: None
          enum:
          - None
          - TaxAmount
          - Exemption
          - TaxDate
          - AccruedTaxAmount
          - DeriveTaxable
          - OutOfHarbor
          - TaxAmountByTaxType
          x-enum-metadata:
            name: TaxOverrideType
            values:
            - name: None
              value: 0
            - name: TaxAmount
              value: 1
            - name: Exemption
              value: 2
            - name: TaxDate
              value: 3
            - name: AccruedTaxAmount
              value: 4
            - name: DeriveTaxable
              value: 5
            - name: OutOfHarbor
              value: 6
            - name: TaxAmountByTaxType
              value: 7
        taxAmount:
          type: number
          description: "Indicates a total override of the calculated tax on the document.\
            \  AvaTax will distribute\r\nthe override across all the lines.\r\n  \
            \          \r\nTax will be distributed on a best effort basis.  It may\
            \ not always be possible to override all taxes.  Please consult\r\nyour\
            \ account manager for information about overrides."
          format: double
          example: 6.25
        taxDate:
          type: string
          description: "The override tax date to use\r\n            \r\nThis is used\
            \ when the tax has been previously calculated\r\nas in the case of a layaway,\
            \ return or other reason indicated by the Reason element.\r\nIf the date\
            \ is not overridden, then it should be set to the same as the DocDate."
          format: date
        reason:
          type: string
          description: "This provides the reason for a tax override for audit purposes.\
            \  It is required for types 2-4.\r\n            \r\nTypical reasons include:\r\
            \n\"Return\"\r\n\"Layaway\""
          example: Precalculated Tax
        taxAmountByTaxTypes:
          type: array
          description: "Indicates a total override of the calculated tax on the line\
            \ with TaxType.\r\nAvaTax will distribute the override across all the\
            \ line details for that TaxType.\r\n            \r\nTaxAmountByTaxType\
            \ can be used only at the Line level."
          items:
            $ref: '#/components/schemas/TransactionLineTaxAmountByTaxTypeModel'
      description: Represents a tax override for a transaction
      example:
        type: TaxAmount
        taxAmount: 6.25
        taxDate: 2022-01-10
        reason: Precalculated Tax
    TransactionLineParameterModel:
      type: object
      properties:
        name:
          type: string
          description: The name of the parameter.
          example: ScreenSize
        value:
          type: string
          description: The value of the parameter.
          example: "22.0"
        unit:
          type: string
          description: The unit of measure of the parameter value.
          example: Inch
      description: Represents a transaction parameter.
      example:
        name: ScreenSize
        value: "22.0"
        unit: Inch
    TransactionLineUserDefinedFieldModel:
      type: object
      properties:
        name:
          type: string
          description: The name of the user defined field.
          example: UDF1
        value:
          type: string
          description: The value of the user defined field.
          example: "100"
      description: User Defined fields/Flex Fields at Transaction Line level.
      example:
        name: UDF1
        value: "100"
    LineItemModel:
      required:
      - amount
      type: object
      properties:
        number:
          maxLength: 50
          minLength: 0
          type: string
          description: The line number of this line within the document.  This can
            be any text that is useful to you, such as numeric line numbers, alphabetic
            line numbers, or other text.
          example: "1"
        quantity:
          type: number
          description: "Quantity of items in this line.  This quantity value should\
            \ always be a positive value representing the quantity of product that\
            \ changed hands, even when handling returns or refunds.\r\n          \
            \  \r\nIf not provided, or if set to zero, the quantity value is assumed\
            \ to be one (1)."
          format: double
          example: 1.0
        amount:
          type: number
          description: "Total amount for this line.  The amount represents the net\
            \ currency value that changed hands from the customer (represented by\
            \ the `customerCode` field) to the company (represented by the `companyCode`)\
            \ field.\r\n            \r\nFor sale transactions, this value must be\
            \ positive.  It indicates the amount of money paid by the customer to\
            \ the company.\r\n            \r\nFor refund or return transactions, this\
            \ value must be negative."
          format: double
          example: 100.0
        addresses:
          $ref: '#/components/schemas/AddressesModel'
        taxCode:
          maxLength: 25
          minLength: 0
          type: string
          description: "Tax Code - System or Custom Tax Code.\r\n            \r\n\
            You can use your own tax code mapping or standard Avalara tax codes. \
            \ For a full list of tax codes, see `ListTaxCodes`."
          example: PS081282
        customerUsageType:
          maxLength: 25
          minLength: 0
          type: string
          description: "DEPRECATED - Date: 10/16/2017, Version: 17.11, Message: Please\
            \ use `entityUseCode` instead.\r\n"
          x-property-deprecation-info:
            date: 10/16/2017
            version: "17.11"
            message: Please use `entityUseCode` instead.
        entityUseCode:
          maxLength: 25
          minLength: 0
          type: string
          description: "Entity Use Code - The client application customer or usage\
            \ type.  This field allows you to designate a type of usage that\r\nmay\
            \ make this transaction considered exempt by reason of exempt usage.\r\
            \n            \r\nFor a list of entity use codes, see the Definitions\
            \ API `ListEntityUseCodes`."
        itemCode:
          maxLength: 50
          minLength: 0
          type: string
          description: "Item Code (SKU).  If you provide an `itemCode` field, the\
            \ AvaTax API will look up the item you created with the `CreateItems`\
            \ API call\r\nand use all the information available about that item for\
            \ this transaction."
          example: Y0001
        exemptionCode:
          type: string
          description: "The customer Tax Id Number (tax_number) associated with a\
            \ certificate - Sales tax calculation requests first determine if there\
            \ is an applicable\r\nECMS entry available, and will utilize it for exemption\
            \ processing. If no applicable ECMS entry is available, the AvaTax service\r\
            \nwill determine if an Exemption Number field is populated or an Entity/Use\
            \ Code is included in the sales tax calculation request,\r\nand will perform\
            \ exemption processing using either of those two options.\r\nNote: This\
            \ is same as 'exemptNo' in TransactionModel."
        discounted:
          type: boolean
          description: "True if the document discount should be applied to this line.\
            \  If this value is false, or not provided, discounts will not be\r\n\
            applied to this line even if they are specified on the root `discount`\
            \ element."
        taxIncluded:
          type: boolean
          description: "Indicates whether the `amount` for this line already includes\
            \ tax.\r\n            \r\nIf this value is `true`, the final price of\
            \ this line including tax will equal the value in `amount`.\r\n      \
            \      \r\nIf this value is `null` or `false`, the final price will equal\
            \ `amount` plus whatever taxes apply to this line."
        revenueAccount:
          maxLength: 50
          minLength: 0
          type: string
          description: "Revenue Account (Customer Defined Field).\r\n            \r\
            \nThis field is available for you to use to provide whatever information\
            \ your implementation requires.  It does not affect tax calculation."
        ref1:
          maxLength: 250
          minLength: 0
          type: string
          description: "Ref1 (Customer Defined Field)\r\n            \r\nThis field\
            \ is available for you to use to provide whatever information your implementation\
            \ requires.  It does not affect tax calculation."
        ref2:
          maxLength: 250
          minLength: 0
          type: string
          description: "Ref2 (Customer Defined Field)\r\n            \r\nThis field\
            \ is available for you to use to provide whatever information your implementation\
            \ requires.  It does not affect tax calculation."
        description:
          maxLength: 2096
          minLength: 0
          type: string
          description: "Item description.\r\n            \r\nFor Streamlined Sales\
            \ Tax (SST) customers, this field is required if an unmapped `itemCode`\
            \ is used."
          example: Yarn
        businessIdentificationNo:
          maxLength: 25
          minLength: 0
          type: string
          description: "VAT business identification number for the customer for this\
            \ line item.  If you leave this field empty,\r\nthis line item will use\
            \ whatever business identification number you provided at the transaction\
            \ level.\r\n            \r\nIf you specify a VAT business identification\
            \ number for the customer in this transaction and you have also set up\r\
            \na business identification number for your company during company setup,\
            \ this transaction will be treated as a\r\nbusiness-to-business transaction\
            \ for VAT purposes and it will be calculated according to VAT tax rules."
        taxOverride:
          $ref: '#/components/schemas/TaxOverrideModel'
        parameters:
          type: array
          description: "Special parameters that apply to this line within this transaction.\r\
            \n            \r\nTo get a full list of available parameters, please use\
            \ the `ListParameters` API."
          items:
            $ref: '#/components/schemas/TransactionLineParameterModel'
        userDefinedFields:
          type: array
          description: Custom user fields/flex fields for this line.
          items:
            $ref: '#/components/schemas/TransactionLineUserDefinedFieldModel'
        hsCode:
          maxLength: 25
          minLength: 0
          type: string
          description: "The Item code for Custom Duty / Global Import tax determination\r\
            \nHarmonized Tariff System code for this transaction.\r\n            \r\
            \nFor a list of harmonized tariff codes, see the Definitions API for harmonized\
            \ tariff codes."
        merchantSellerId:
          type: integer
          description: "DEPRECATED - Date: 04/15/2021, Version: 21.4, Message: Please\
            \ use merchantSellerIdentifier instead.\r\nID of the merchant selling\
            \ on the Marketplace. This field must be populated by Marketplace."
          format: int64
          x-property-deprecation-info:
            date: 04/15/2021
            version: "21.4"
            message: Please use merchantSellerIdentifier instead.
        merchantSellerIdentifier:
          maxLength: 100
          minLength: 0
          type: string
          description: ID of the merchant selling on the Marketplace. This field must
            be populated by Marketplace.
        marketplaceLiabilityType:
          type: string
          description: This field will identify who is remitting Marketplace or Seller.
            This field must be populated by Marketplace.
          example: Marketplace
          enum:
          - Marketplace
          - Seller
          x-enum-metadata:
            name: MarketplaceLiabilityType
            values:
            - name: Marketplace
              value: 1
            - name: Seller
              value: 2
        originationDocumentId:
          maxLength: 50
          minLength: 0
          type: string
          description: The transaction's original ID in its origination system
        originationSite:
          maxLength: 60
          minLength: 0
          type: string
          description: Synonym of Marketplace Origination. Name of the Marketplace
            where the transaction originated from.
        category:
          maxLength: 4000
          minLength: 0
          type: string
          description: Product category breadcrumbs. This is the full path to the
            category where item is included. Categories should be separated by “ >
            “.  Multiple category paths per item are accepted. In this case, category
            paths should be separated by “;”.
        summary:
          maxLength: 4000
          minLength: 0
          type: string
          description: A long description of the product.
      description: Represents one line item in a transaction
      example:
        number: "1"
        quantity: 1
        amount: 100
        taxCode: PS081282
        itemCode: Y0001
        description: Yarn
    TransactionParameterModel:
      type: object
      properties:
        name:
          type: string
          description: The name of the parameter.
          example: ScreenSize
        value:
          type: string
          description: The value of the parameter.
          example: "22.0"
        unit:
          type: string
          description: The unit of measure of the parameter value.
          example: Inch
      description: Represents a transaction parameter.
      example:
        name: ScreenSize
        value: "22.0"
        unit: Inch
    TransactionUserDefinedFieldModel:
      type: object
      properties:
        name:
          type: string
          description: The name of the user defined field.
          example: UDF1
        value:
          type: string
          description: The value of the user defined field.
          example: "100"
      description: User Defined fields/Flex Fields at Transaction level.
      example:
        name: UDF1
        value: "100"
    CreateTransactionModel:
      required:
      - customerCode
      - date
      - lines
      type: object
      properties:
        code:
          maxLength: 50
          minLength: 0
          type: string
          description: "The internal reference code used by the client application.\
            \  This is used for operations such as\r\nGet, Adjust, Settle, and Void.\
            \  If you leave the transaction code blank, a GUID will be assigned to\
            \ each transaction."
        lines:
          type: array
          description: A list of line items that will appear on this transaction.
          example:
          - number: "1"
            quantity: 1
            amount: 100
            taxCode: PS081282
            itemCode: Y0001
            description: Yarn
          items:
            $ref: '#/components/schemas/LineItemModel'
        type:
          type: string
          description: "Specifies the type of document to create.  A document type\
            \ ending with `Invoice` is a permanent transaction\r\nthat will be recorded\
            \ in AvaTax.  A document type ending with `Order` is a temporary estimate\
            \ that will not\r\nbe preserved.\r\n            \r\nIf you omit this value,\
            \ the API will assume you want to create a `SalesOrder`."
          example: SalesOrder
          enum:
          - SalesOrder
          - SalesInvoice
          - PurchaseOrder
          - PurchaseInvoice
          - ReturnOrder
          - ReturnInvoice
          - InventoryTransferOrder
          - InventoryTransferInvoice
          - ReverseChargeOrder
          - ReverseChargeInvoice
          - CustomsInvoice
          - CustomsOrder
          - Any
          x-enum-metadata:
            name: DocumentType
            values:
            - name: SalesOrder
              value: 0
            - name: SalesInvoice
              value: 1
            - name: PurchaseOrder
              value: 2
            - name: PurchaseInvoice
              value: 3
            - name: ReturnOrder
              value: 4
            - name: ReturnInvoice
              value: 5
            - name: InventoryTransferOrder
              value: 6
            - name: InventoryTransferInvoice
              value: 7
            - name: ReverseChargeOrder
              value: 8
            - name: ReverseChargeInvoice
              value: 9
            - name: CustomsInvoice
              value: 10
            - name: CustomsOrder
              value: 11
            - name: Any
              value: -1
        companyCode:
          maxLength: 50
          minLength: 0
          type: string
          description: "Company Code - Specify the code of the company creating this\
            \ transaction here.  If you leave this value null,\r\nyour account's default\
            \ company will be used instead."
          example: DEFAULT
        date:
          type: string
          description: "Transaction Date - The date on the invoice, purchase order,\
            \ etc.\r\n            \r\nBy default, this date will be used to calculate\
            \ the tax rates for the transaction.  If you wish to use a\r\ndifferent\
            \ date to calculate tax rates, please specify a `taxOverride` of type\
            \ `taxDate`."
          format: date
        salespersonCode:
          maxLength: 25
          minLength: 0
          type: string
          description: Salesperson Code - The client application salesperson reference
            code.
        customerCode:
          maxLength: 50
          minLength: 0
          type: string
          description: "Customer Code - The client application customer reference\
            \ code.\r\nNote: This field is case sensitive. To have exemption certificates\
            \ apply, this value should\r\nbe the same as the one passed to create\
            \ a customer."
          example: ABC
        customerUsageType:
          maxLength: 25
          minLength: 0
          type: string
          description: "DEPRECATED - Date: 10/16/2017, Version: 17.11, Message: Please\
            \ use entityUseCode instead.\r\nCustomer Usage Type - The client application\
            \ customer or usage type."
          x-property-deprecation-info:
            date: 10/16/2017
            version: "17.11"
            message: Please use entityUseCode instead.
        entityUseCode:
          maxLength: 25
          minLength: 0
          type: string
          description: "Entity Use Code - The client application customer or usage\
            \ type.  For a list of\r\navailable usage types, use [ListEntityUseCodes](https://developer.avalara.com/api-reference/avatax/rest/v2/methods/Definitions/ListEntityUseCodes/)\
            \ API."
        discount:
          type: number
          description: "Discount - The discount amount to apply to the document. \
            \ This value will be applied only to lines\r\nthat have the `discounted`\
            \ flag set to true.  If no lines have `discounted` set to true, this discount\r\
            \ncannot be applied."
          format: double
        purchaseOrderNo:
          maxLength: 50
          minLength: 0
          type: string
          description: "Purchase Order Number for this document.\r\n            \r\
            \nThis is required for single use exemption certificates to match the\
            \ order and invoice with the certificate."
          example: 2022-01-10-001
        exemptionNo:
          maxLength: 25
          minLength: 0
          type: string
          description: "Exemption Number for this document.\r\n            \r\nIf\
            \ you specify an exemption number for this document, this document will\
            \ be considered exempt, and you\r\nmay be asked to provide proof of this\
            \ exemption certificate in the event that you are asked by an auditor\r\
            \nto verify your exemptions.\r\nNote: This is same as 'exemptNo' in TransactionModel."
        addresses:
          $ref: '#/components/schemas/AddressesModel'
        parameters:
          type: array
          description: "Special parameters for this transaction.\r\n            \r\
            \nTo get a full list of available parameters, please use the [ListParameters](https://developer.avalara.com/api-reference/avatax/rest/v2/methods/Definitions/ListParameters/)\
            \ endpoint."
          items:
            $ref: '#/components/schemas/TransactionParameterModel'
        userDefinedFields:
          type: array
          description: Custom user fields/flex fields for this transaction.
          items:
            $ref: '#/components/schemas/TransactionUserDefinedFieldModel'
        referenceCode:
          maxLength: 1024
          minLength: 0
          type: string
          description: "Customer-provided Reference Code with information about this\
            \ transaction.\r\n            \r\nThis field could be used to reference\
            \ the original document for a return invoice, or for any other\r\nreference\
            \ purpose."
        reportingLocationCode:
          maxLength: 50
          minLength: 0
          type: string
          description: "Sets the sale location code (Outlet ID) for reporting this\
            \ document to the tax authority.\r\n            \r\nThis value is used\
            \ by Avalara Managed Returns to group documents together by reporting\
            \ locations\r\nfor tax authorities that require location-based reporting."
        commit:
          type: boolean
          description: "Causes the document to be committed if true.  This option\
            \ is only applicable for invoice document\r\ntypes, not orders."
          example: true
        batchCode:
          maxLength: 25
          minLength: 0
          type: string
          description: BatchCode for batch operations.
        taxOverride:
          $ref: '#/components/schemas/TaxOverrideModel'
        currencyCode:
          maxLength: 3
          minLength: 0
          type: string
          description: The three-character ISO 4217 currency code for this transaction.
          example: USD
        serviceMode:
          type: string
          description: "Specifies whether the tax calculation is handled Local, Remote,\
            \ or Automatic (default).  This only\r\napplies when using an AvaLocal\
            \ server."
          example: Automatic
          enum:
          - Automatic
          - Local
          - Remote
          x-enum-metadata:
            name: ServiceMode
            values:
            - name: Automatic
              value: 0
            - name: Local
              value: 1
            - name: Remote
              value: 2
        exchangeRate:
          type: number
          description: "Currency exchange rate from this transaction to the company\
            \ base currency.\r\n            \r\nThis only needs to be set if the transaction\
            \ currency is different than the company base currency.\r\nIt defaults\
            \ to 1.0."
          format: double
        exchangeRateEffectiveDate:
          type: string
          description: Effective date of the exchange rate.
          format: date
        exchangeRateCurrencyCode:
          maxLength: 3
          minLength: 0
          type: string
          description: Optional three-character ISO 4217 reporting exchange rate currency
            code for this transaction. The default value is USD.
        posLaneCode:
          maxLength: 50
          minLength: 0
          type: string
          description: Sets the Point of Sale Lane Code sent by the User for this
            document.
        businessIdentificationNo:
          maxLength: 25
          minLength: 0
          type: string
          description: "VAT business identification number for the customer for this\
            \ transaction.  This number will be used for all lines\r\nin the transaction,\
            \ except for those lines where you have defined a different business identification\
            \ number.\r\n            \r\nIf you specify a VAT business identification\
            \ number for the customer in this transaction and you have also set up\r\
            \na business identification number for your company during company setup,\
            \ this transaction will be treated as a\r\nbusiness-to-business transaction\
            \ for VAT purposes and it will be calculated according to VAT tax rules."
        isSellerImporterOfRecord:
          type: boolean
          description: "Specifies if the transaction should have value-added and cross-border\
            \ taxes calculated with the seller as the importer of record.\r\n    \
            \        \r\nSome taxes only apply if the seller is the importer of record\
            \ for a product.  In cases where companies are working together to\r\n\
            ship products, there may be mutual agreement as to which company is the\
            \ entity designated as importer of record.  The importer\r\nof record\
            \ will then be the company designated to pay taxes marked as being obligated\
            \ to the importer of record.\r\n            \r\nSet this value to `true`\
            \ to consider your company as the importer of record and collect these\
            \ taxes.\r\n            \r\nThis value may also be set at the Nexus level.\
            \  See `NexusModel` for more information."
        description:
          maxLength: 2048
          minLength: 0
          type: string
          description: User-supplied description for this transaction.
          example: Yarn
        email:
          maxLength: 50
          minLength: 0
          type: string
          description: User-supplied email address relevant for this transaction.
        debugLevel:
          type: string
          description: If the user wishes to request additional debug information
            from this transaction, specify a level higher than `normal`.
          example: Normal
          enum:
          - Normal
          - Diagnostic
          x-enum-metadata:
            name: TaxDebugLevel
            values:
            - name: Normal
              value: 0
            - name: Diagnostic
              value: 1
        customerSupplierName:
          maxLength: 200
          minLength: 0
          type: string
          description: "The name of the supplier / exporter / seller.\r\nFor sales\
            \ doctype enter the name of your own company for which you are reporting.\r\
            \nFor purchases doctype enter the name of the supplier you have purchased\
            \ from."
        dataSourceId:
          type: integer
          description: "The Id of the datasource from which this transaction originated.\r\
            \nThis value will be overridden by the system to take the datasource Id\
            \ from the call header."
          format: int32
        deliveryTerms:
          type: string
          description: "The Delivery Terms is a field used in conjunction with Importer\
            \ of Record to influence whether AvaTax includes Import Duty and Tax values\
            \ in the transaction totals or not.\r\nDelivered at Place (DAP) and Delivered\
            \ Duty Paid (DDP) are two delivery terms that  indicate that Import Duty\
            \ and Tax should be included in the transaction total.\r\nThis field is\
            \ also used for reports.\r\nThis field is used for future feature support.\
            \ This field is not currently in use."
          example: DAP
          enum:
          - DAP
          - DDP
          x-enum-metadata:
            name: DeliveryTerms
            values:
            - name: DAP
              value: 1
            - name: DDP
              value: 2
      description: Create a transaction
      example:
        lines:
        - number: "1"
          quantity: 1
          amount: 100
          taxCode: PS081282
          itemCode: Y0001
          description: Yarn
        type: SalesInvoice
        companyCode: DEFAULT
        date: 2022-01-10
        customerCode: ABC
        purchaseOrderNo: 2022-01-10-001
        addresses:
          singleLocation:
            line1: 2000 Main Street
            city: Irvine
            region: CA
            country: US
            postalCode: "92614"
        commit: true
        currencyCode: USD
        description: Yarn
    BatchAdjustTransactionModel:
      required:
      - adjustmentReason
      - companyCode
      - newTransaction
      - transactionCode
      type: object
      properties:
        companyCode:
          maxLength: 50
          minLength: 0
          type: string
          description: Specifies the code of the company for this transaction.
        transactionCode:
          type: string
          description: Please specify the transaction code of the transacion to void.
        documentType:
          type: string
          description: Specifies the type of document to void.
          enum:
          - SalesOrder
          - SalesInvoice
          - PurchaseOrder
          - PurchaseInvoice
          - ReturnOrder
          - ReturnInvoice
          - InventoryTransferOrder
          - InventoryTransferInvoice
          - ReverseChargeOrder
          - ReverseChargeInvoice
          - CustomsInvoice
          - CustomsOrder
          - Any
        adjustmentReason:
          type: string
          description: A reason code indicating why this adjustment was made
          example: NotAdjusted
          enum:
          - NotAdjusted
          - SourcingIssue
          - ReconciledWithGeneralLedger
          - ExemptCertApplied
          - PriceAdjusted
          - ProductReturned
          - ProductExchanged
          - BadDebt
          - Other
          - Offline
          x-enum-metadata:
            name: AdjustmentReason
            values:
            - name: NotAdjusted
              value: 0
            - name: SourcingIssue
              value: 1
            - name: ReconciledWithGeneralLedger
              value: 2
            - name: ExemptCertApplied
              value: 3
            - name: PriceAdjusted
              value: 4
            - name: ProductReturned
              value: 5
            - name: ProductExchanged
              value: 6
            - name: BadDebt
              value: 7
            - name: Other
              value: 8
            - name: Offline
              value: 9
        adjustmentDescription:
          type: string
          description: "If the AdjustmentReason is \"Other\", specify the reason here.\r\
            \n            \r\nThis is required when the AdjustmentReason is 8 (Other)."
          example: Price drop before shipping
        newTransaction:
          $ref: '#/components/schemas/CreateTransactionModel'
      description: Replace an existing transaction recorded in AvaTax with a new one.
      example:
        companyCode: DEFAULT
        transactionCode: c9d1944d-a4f2-4fbd-a7a4-88534f7b3159
        documentType: SalesInvoice
        adjustmentReason: PriceAdjusted
        adjustmentDescription: Price drop before shipping
        newTransaction:
          lines:
          - number: "1"
            quantity: 1
            amount: 100
            taxCode: PS081282
            itemCode: Y0001
            description: Yarn
          type: SalesInvoice
          companyCode: DEFAULT
          date: 2022-01-10
          customerCode: ABC
          purchaseOrderNo: 2022-01-10-001
          addresses:
            singleLocation:
              line1: 2000 Main Street
              city: Irvine
              region: CA
              country: US
              postalCode: "92614"
          commit: true
          currencyCode: USD
          description: Yarn
    CreateOrAdjustTransactionModel:
      required:
      - createTransactionModel
      type: object
      properties:
        adjustmentReason:
          type: string
          description: A reason code indicating why this adjustment was made
          example: NotAdjusted
          enum:
          - NotAdjusted
          - SourcingIssue
          - ReconciledWithGeneralLedger
          - ExemptCertApplied
          - PriceAdjusted
          - ProductReturned
          - ProductExchanged
          - BadDebt
          - Other
          - Offline
          x-enum-metadata:
            name: AdjustmentReason
            values:
            - name: NotAdjusted
              value: 0
            - name: SourcingIssue
              value: 1
            - name: ReconciledWithGeneralLedger
              value: 2
            - name: ExemptCertApplied
              value: 3
            - name: PriceAdjusted
              value: 4
            - name: ProductReturned
              value: 5
            - name: ProductExchanged
              value: 6
            - name: BadDebt
              value: 7
            - name: Other
              value: 8
            - name: Offline
              value: 9
        adjustmentDescription:
          type: string
          description: "If the AdjustmentReason is \"Other\", specify the reason here.\r\
            \n            \r\nThis is required when the AdjustmentReason is 8 (Other)."
          example: Test Description
        createTransactionModel:
          $ref: '#/components/schemas/CreateTransactionModel'
      description: Create or adjust transaction model
      example:
        adjustmentReason: Other
        adjustmentDescription: Test Description
        createTransactionModel:
          lines:
          - number: "1"
            quantity: 1
            amount: 100
            taxCode: PS081282
            itemCode: Y0001
            description: Yarn
          type: SalesInvoice
          companyCode: DEFAULT
          date: 2022-01-10
          customerCode: ABC
          purchaseOrderNo: 2022-01-10-001
          addresses:
            singleLocation:
              line1: 2000 Main Street
              city: Irvine
              region: CA
              country: US
              postalCode: "92614"
          commit: true
          currencyCode: USD
          description: Yarn
    BatchVoidTransactionModel:
      required:
      - code
      - companyCode
      - transactionCode
      type: object
      properties:
        companyCode:
          maxLength: 50
          minLength: 0
          type: string
          description: Company Code - Specify the code of the company for this transaction.
        transactionCode:
          type: string
          description: Please specify the transaction code of the transacion to void.
        documentType:
          type: string
          description: Specifies the type of document to void.
          enum:
          - SalesOrder
          - SalesInvoice
          - PurchaseOrder
          - PurchaseInvoice
          - ReturnOrder
          - ReturnInvoice
          - InventoryTransferOrder
          - InventoryTransferInvoice
          - ReverseChargeOrder
          - ReverseChargeInvoice
          - CustomsInvoice
          - CustomsOrder
          - Any
        code:
          type: string
          description: "Please specify the reason for voiding or cancelling this transaction.\r\
            \nTo void the transaction, please specify the reason 'DocVoided'.\r\n\
            If you do not provide a reason, the void command will fail."
          example: Unspecified
          enum:
          - Unspecified
          - PostFailed
          - DocDeleted
          - DocVoided
          - AdjustmentCancelled
          x-enum-metadata:
            name: VoidReasonCode
            values:
            - name: Unspecified
              value: 0
            - name: PostFailed
              value: 1
            - name: DocDeleted
              value: 2
            - name: DocVoided
              value: 3
            - name: AdjustmentCancelled
              value: 4
      description: A request to void a previously created transaction.
      example:
        companyCode: DEFAULT
        transactionCode: 77b5085e-c39b-4464-a4c5-baf82f5f113b
        documentType: SalesInvoice
        code: DocVoided
    TransactionBatchItemModel:
      type: object
      properties:
        memo:
          maxLength: 50000
          minLength: 0
          type: string
          description: Represents a transaction memo.
        createTransactionModel:
          $ref: '#/components/schemas/CreateTransactionModel'
        adjustTransactionModel:
          $ref: '#/components/schemas/BatchAdjustTransactionModel'
        createOrAdjustTransactionModel:
          $ref: '#/components/schemas/CreateOrAdjustTransactionModel'
        voidTransactionModel:
          $ref: '#/components/schemas/BatchVoidTransactionModel'
      description: "Represents a transaction batch item.\r\nOnly one child transaction\
        \ model should contain data."
      example:
        createOrAdjustTransactionModel:
          adjustmentReason: Other
          adjustmentDescription: Test Description
          createTransactionModel:
            lines:
            - number: "1"
              quantity: 1
              amount: 100
              taxCode: PS081282
              itemCode: Y0001
              description: Yarn
            type: SalesInvoice
            companyCode: DEFAULT
            date: 2022-01-10
            customerCode: ABC
            purchaseOrderNo: 2022-01-10-001
            addresses:
              singleLocation:
                line1: 2000 Main Street
                city: Irvine
                region: CA
                country: US
                postalCode: "92614"
            commit: true
            currencyCode: USD
            description: Yarn
    CreateTransactionBatchRequestModel:
      required:
      - name
      - transactions
      type: object
      properties:
        name:
          maxLength: 194
          minLength: 0
          type: string
          description: The user-friendly readable name for this batch.
        transactions:
          type: array
          description: The list of transactions contained in this batch.
          items:
            $ref: '#/components/schemas/TransactionBatchItemModel'
      description: Represents a create transaction batch request model.
      example:
        name: TestBatch-637774265664875369
        transactions:
        - createTransactionModel:
            code: MyTransaction-637774265664873980
            lines:
            - number: "1"
              quantity: 1
              amount: 100
              taxCode: PS081282
              itemCode: Y0001
              description: Yarn
            type: SalesInvoice
            companyCode: DEFAULT
            date: 2022-01-10
            customerCode: ABC
            purchaseOrderNo: 2022-01-10-001
            addresses:
              singleLocation:
                line1: 2000 Main Street
                city: Irvine
                region: CA
                country: US
                postalCode: "92614"
            commit: true
            currencyCode: USD
            description: Yarn
        - adjustTransactionModel:
            companyCode: DEFAULT
            transactionCode: MyTransaction-637774265664873980
            documentType: SalesInvoice
            adjustmentReason: PriceAdjusted
            adjustmentDescription: Price drop before shipping
            newTransaction:
              code: MyTransaction-637774265664873980
              lines:
              - number: "1"
                quantity: 1
                amount: 90
                taxCode: PS081282
                itemCode: Y0001
                description: Yarn
              type: SalesInvoice
              companyCode: DEFAULT
              date: 2022-01-10
              customerCode: ABC
              purchaseOrderNo: 2022-01-10-001
              addresses:
                singleLocation:
                  line1: 2000 Main Street
                  city: Irvine
                  region: CA
                  country: US
                  postalCode: "92614"
              commit: true
              currencyCode: USD
              description: Yarn
        - createOrAdjustTransactionModel:
            adjustmentReason: Other
            adjustmentDescription: Test Description
            createTransactionModel:
              code: MyTransaction-637774265664873980
              lines:
              - number: "1"
                quantity: 1
                amount: 80
                taxCode: PS081282
                itemCode: Y0001
                description: Yarn
              type: SalesInvoice
              companyCode: DEFAULT
              date: 2022-01-10
              customerCode: ABC
              purchaseOrderNo: 2022-01-10-001
              addresses:
                singleLocation:
                  line1: 2000 Main Street
                  city: Irvine
                  region: CA
                  country: US
                  postalCode: "92614"
              commit: true
              currencyCode: USD
              description: Yarn
        - voidTransactionModel:
            companyCode: DEFAULT
            transactionCode: MyTransaction-637774265664873980
            documentType: SalesInvoice
            code: DocVoided
    CreateTransactionBatchResponseModel:
      required:
      - name
      type: object
      properties:
        id:
          type: integer
          description: The unique ID number of this batch.
          format: int32
          readOnly: true
        name:
          maxLength: 194
          minLength: 0
          type: string
          description: The user-friendly readable name for this batch.
          example: TestBatch
        accountId:
          type: integer
          description: The Account ID number of the account that owns this batch.
          format: int32
        companyId:
          type: integer
          description: The Company ID number of the company that owns this batch.
          format: int32
        status:
          type: string
          description: This batch's current processing status
          readOnly: true
          example: Waiting
          enum:
          - Waiting
          - SystemErrors
          - Cancelled
          - Completed
          - Creating
          - Deleted
          - Errors
          - Paused
          - Processing
          - Cancelling
          x-enum-metadata:
            name: BatchStatus
            values:
            - name: Waiting
              value: 0
            - name: SystemErrors
              value: 1
            - name: Cancelled
              value: 2
            - name: Completed
              value: 3
            - name: Creating
              value: 4
            - name: Deleted
              value: 5
            - name: Errors
              value: 6
            - name: Paused
              value: 7
            - name: Processing
              value: 8
            - name: Cancelling
              value: 9
        startedDate:
          type: string
          description: The date/time when this batch started processing
          format: date-time
          readOnly: true
        recordCount:
          type: integer
          description: The number of records in this batch; determined by the server
          format: int32
          readOnly: true
        currentRecord:
          type: integer
          description: The current record being processed
          format: int32
          readOnly: true
        completedDate:
          type: string
          description: The date/time when this batch was completely processed
          format: date-time
          readOnly: true
        createdDate:
          type: string
          description: The date when this record was created.
          format: date-time
          readOnly: true
        createdUserId:
          type: integer
          description: The User ID of the user who created this record.
          format: int32
          readOnly: true
        modifiedDate:
          type: string
          description: The date/time when this record was last modified.
          format: date-time
          readOnly: true
        modifiedUserId:
          type: integer
          description: The user ID of the user who last modified this record.
          format: int32
          readOnly: true
        files:
          type: array
          description: The list of files contained in this batch.
          example:
          - name: Input
            contentLength: 2393
            contentType: application/json
            fileExtension: JSON
            filePath: Input.json
          items:
            $ref: '#/components/schemas/BatchFileModel'
      description: Represents a create transaction batch response model.
      example:
        name: TestBatch
        files:
        - name: Input
          contentLength: 2393
          contentType: application/json
          fileExtension: JSON
          filePath: Input.json
    CreateCertExpressInvitationModel:
      type: object
      properties:
        recipient:
          type: string
          description: "If the value of `deliveryMethod` is set to `Email`, please\
            \ specify the email address of the recipient\r\nfor the request."
          example: bob@example.org
        coverLetterTitle:
          type: string
          description: "If this invitation is sent via email or download, please specify\
            \ the cover letter to use when building this\r\ninvitation.  For a list\
            \ of cover letters, please call `ListCoverLetters`."
          example: STANDARD_REQUEST
        exposureZones:
          type: array
          description: "You may optionally specify a list of exposure zones to request\
            \ in this CertExpress invitation.  If you list\r\nmore than one exposure\
            \ zone, the customer will be prompted to provide an exemption certificate\
            \ for each one.\r\nIf you do not provide a list of exposure zones, the\
            \ customer will be prompted to select an exposure zone.\r\n          \
            \  \r\nFor a list of available exposure zones, please call `ListCertificateExposureZones`."
          example:
          - 89
          items:
            type: integer
            format: int32
        exemptReasons:
          type: array
          description: "You may optionally specify a list of exemption reasons to\
            \ pre-populate in this CertExpress invitation.\r\nIf you list exemption\
            \ reasons, the customer will have part of their form already filled in\
            \ when they visit\r\nthe CertExpress website.\r\n            \r\nFor a\
            \ list of available exemption reasons, please call `ListCertificateExemptReasons`."
          example:
          - 70
          items:
            type: integer
            format: int32
        deliveryMethod:
          type: string
          description: "Specify the type of invitation.  CertExpress invitations can\
            \ be delivered via email, web link, or\r\nfacsimile.\r\n            \r\
            \n* If you specify `Email`, the invitation will be delivered via email.\
            \  Please ask the customer to ensure that\r\n* If you specify `Fax`, the\
            \ invitation will be sent via fax to the customer's fax number on file.\r\
            \n* If you specify `Download`, the invitation will be prepared as a web\
            \ link that you can display to the customer."
          example: Email
          enum:
          - Email
          - Fax
          - Download
          x-enum-metadata:
            name: CertificateRequestDeliveryMethod
            values:
            - name: Email
              value: 1
            - name: Fax
              value: 2
            - name: Download
              value: 3
      description: "Represents an invitation for a customer to use CertExpress to\
        \ self-report their own certificates.\r\nThis invitation is delivered by your\
        \ choice of method, or you can present a hyperlink to the user\r\ndirectly\
        \ in your connector.  Your customer will be redirected to https://app.certexpress.com/\
        \ where\r\nthey can follow a step-by-step guide to enter information about\
        \ their exemption certificates.  The\r\ncertificates entered will be recorded\
        \ and automatically linked to their customer record."
      example:
        recipient: bob@example.org
        coverLetterTitle: STANDARD_REQUEST
        exposureZones:
        - 89
        exemptReasons:
        - 70
        deliveryMethod: Download
    ExemptionReasonModel:
      type: object
      properties:
        id:
          type: integer
          description: A unique ID number representing this exemption reason.
          format: int32
        name:
          type: string
          description: A friendly name describing this exemption reason.
          example: EXPOSURE
      description: "An exemption reason defines why a certificate allows a customer\
        \ to be exempt\r\nfor purposes of tax calculation.  For a full list of defined\
        \ exemption reasons,\r\nplease call the `ListCertificateExemptionReasons`\
        \ API."
      example:
        name: EXPOSURE
    PoNumberModel:
      type: object
      properties:
        id:
          type: integer
          description: Unique ID number
          format: int32
          readOnly: true
          example: 1234
        poNumber:
          type: string
          description: Purchase order number.
          example: test
      description: Represents a purchase order number for a transaction
      example:
        id: 1234
        poNumber: test
    ExposureZoneModel:
      type: object
      properties:
        id:
          type: integer
          description: A unique ID number representing this exposure zone.
          format: int32
          readOnly: true
        companyId:
          type: integer
          description: The unique ID number of the AvaTax company that recorded this
            customer.
          format: int32
        name:
          type: string
          description: The short name of this exposure zone, suitable for use in a
            drop-down list.
          example: Washington
        tag:
          type: string
          description: A tag indicating
        description:
          type: string
          description: A more complete description of this exposure zone, suitable
            for use as a tooltip or help text.
        created:
          type: string
          description: The date when this record was created.
          format: date-time
        modified:
          type: string
          description: The date/time when this record was last modified.
          format: date-time
        region:
          type: string
          description: Two or three character ISO 3166 region, province, or state
            name of this exposure zone.
          readOnly: true
        country:
          type: string
          description: Two character ISO 3166 county code for the country component
            of this exposure zone.
          readOnly: true
      description: "Information about a physical area or zone in which a certificate\
        \ can apply.\r\nAn exposure zone for an exemption certificate will generally\
        \ be a tax authority such\r\nas a state, country, or local government entity."
      example:
        name: Washington
    CertificateAttributeModel:
      type: object
      properties:
        id:
          type: integer
          description: A unique ID number representing this certificate attribute.
          format: int32
          example: 0
        name:
          type: string
          description: A friendly readable name for this certificate attribute.
          example: DIRECT PAY
        description:
          type: string
          description: A full help text description of the certificate attribute.
        isSystemCode:
          type: boolean
          description: "This value is true if this is a system-defined certificate\
            \ attribute.  System-defined attributes\r\ncannot be modified or deleted\
            \ on the CertCapture website."
          example: false
      description: "A certificate attribute can be thought of as a feature or flag\
        \ that is applied to a certificate.\r\nA single certificate can be linked\
        \ to zero, one, or many certificate attributes.  The full list of\r\nattributes\
        \ can be obtained by calling the `ListCertificateAttributes` API."
      example:
        id: 0
        name: DIRECT PAY
        isSystemCode: false
    CertificateModel:
      required:
      - exemptionReason
      - expirationDate
      - exposureZone
      - signedDate
      type: object
      properties:
        id:
          type: integer
          description: Unique ID number of this certificate.
          format: int32
          example: 0
        companyId:
          type: integer
          description: The unique ID number of the AvaTax company that recorded this
            certificate.
          format: int32
        signedDate:
          type: string
          description: The date when this certificate was signed.
          format: date
        expirationDate:
          type: string
          description: Expiration date when this certificate will no longer be valid.
          format: date
        filename:
          type: string
          description: "File name for the image of this certificate.\r\n         \
            \   \r\nWhen creating a certificate, if you do not upload a PDF or JPG\
            \ image, you must specify the filename\r\nof the certificate as it is\
            \ tracked in your repository.\r\n            \r\nTo create a certificate,\
            \ you must provide one of the following fields: either a `filename`, a\
            \ `pdf` file,\r\nor an array of JPG `pages`.  The API will return an error\
            \ if you omit these fields or if you attempt to\r\nput values in more\
            \ than one of them."
          example: 75997b7d-0266-47af-a4e9-26708d6b4880
        documentExists:
          type: boolean
          description: This value is true if there exists scanned PDF copy of this
            certificate or the PDF version of the form that the customer filled via
            the CertCapture wizard on S3 bucket.
          readOnly: true
          example: false
        valid:
          type: boolean
          description: "True if this certificate is marked as valid.  A valid certificate\
            \ can be considered for exemption purposes.\r\nWhen a certificate is marked\
            \ invalid, it will no longer be considered when calculating exemption\
            \ for\r\na customer."
          example: true
        verified:
          type: boolean
          description: "This value is true if the certificate has gone through the\
            \ certificate validation process.\r\nFor more information on the certificate\
            \ validation process, please see the Avalara Help Center."
          readOnly: true
          example: false
        exemptPercentage:
          type: number
          description: "If this certificate provides exemption from transactional\
            \ taxes, what percentage of the transaction\r\nis considered exempt?\r\
            \n            \r\nFor a fully exempt certificate, this percentage should\
            \ be 100."
          format: double
          example: 0.0
        isSingleCertificate:
          type: boolean
          description: "This value is true if this certificate is a single (or standalone)\
            \ certificate.  This value is set\r\nduring the audit stage of the certificate\
            \ validation process."
          readOnly: true
          example: false
        exemptionNumber:
          type: string
          description: Indicates the tax number passed in for the certificate.
          example: Exempt-1234
        validatedExemptionReason:
          $ref: '#/components/schemas/ExemptionReasonModel'
        exemptionReason:
          $ref: '#/components/schemas/ExemptionReasonModel'
        status:
          type: string
          description: The status of the certificate
          readOnly: true
        createdDate:
          type: string
          description: The date/time when this record was created.
          format: date-time
          example: 2022-01-10T15:49:26.7262377Z
        modifiedDate:
          type: string
          description: The date/time when this record was last modified.
          format: date
        taxNumberType:
          type: string
          description: The tax number type for the certificate. For example, `FEIN`,
            `Social Security Number`, or `Employer Identification Number`.
          example: FEIN
        businessNumberType:
          type: string
          description: Description of business for the certificate. For example, `Retail
            trade`, `Professional services`, or `Construction`.
          example: Business Services
        pageCount:
          type: integer
          description: Number of pages contained within this certificate.
          format: int32
          readOnly: true
          example: 0
        customers:
          type: array
          description: "A list of customers to which this certificate applies.  You\
            \ can fetch this data by specifying\r\n`$include=customers` when calling\
            \ a certificate fetch API."
          example:
          - companyId: 0
            customerCode: 732f5170-f7b0-4e58-9d7c-f9916d2d2c1c
            alternateId: "987654321"
            name: Dr. Bob Example
            attnName: 'Attn: Receiving'
            line1: 645 Main Street
            city: Irvine
            postalCode: "92614"
            phoneNumber: (949) 555-1212
            faxNumber: 949.555.1213
            emailAddress: dr.bob.example@example.org
            contactName: Alice Smith
            lastTransaction: 2008-10-08T00:00:00
            country: US
            region: CA
            exposureZones:
            - name: Washington
          - companyId: 0
            customerCode: 6eaaa9cf-0bf5-46d4-a42d-6e70e503e35b
            alternateId: "987654321"
            name: Dr. Bob Example
            attnName: 'Attn: Receiving'
            line1: 645 Main Street
            city: Irvine
            postalCode: "92614"
            phoneNumber: (949) 555-1212
            faxNumber: 949.555.1213
            emailAddress: dr.bob.example@example.org
            contactName: Alice Smith
            lastTransaction: 2008-10-08T00:00:00
            country: US
            region: CA
            exposureZones:
            - name: Washington
          items:
            $ref: '#/components/schemas/CustomerModel'
        poNumbers:
          type: array
          description: "A list of purchase order numbers that are valid for use with\
            \ this certificate.\r\n            \r\nIf this certificate is applicable\
            \ for all purchase order numbers, this field will be empty.\r\n      \
            \      \r\nYou can fetch this data by specifying `$include=po_numbers`\
            \ when calling a certificate fetch API."
          items:
            $ref: '#/components/schemas/PoNumberModel'
        exposureZone:
          $ref: '#/components/schemas/ExposureZoneModel'
        attributes:
          type: array
          description: "A list of certificate attributes that apply to this certificate.\r\
            \n            \r\nYou can fetch this data by specifying `$include=attributes`\
            \ when calling a certificate fetch API."
          items:
            $ref: '#/components/schemas/CertificateAttributeModel'
        ecmsId:
          type: integer
          description: The unique ID number of current AvaTax Exemption Certificate
            that refers this certificate.
          format: int32
        ecmsStatus:
          type: string
          description: The status of current AvaTax Exemption Certificate  that refers
            to this certificate.
        pdf:
          type: string
          description: "This field is available for input only.  To retrieve the image\
            \ after creation, use the\r\n`DownloadCertificateImage` API.\r\n     \
            \       \r\nWhen creating a certificate, you may optionally provide a\
            \ PDF image in Base64 URLEncoded format.\r\nPDFs are automatically parsed\
            \ into individual page JPG images and can be retrieved back\r\nlater as\
            \ either the original PDF or the individual pages.\r\n            \r\n\
            To create a certificate, you must provide one of the following fields:\
            \ either a `filename`, a `pdf` file,\r\nor an array of JPG `pages`.  The\
            \ API will return an error if you omit these fields or if you attempt\
            \ to\r\nput values in more than one of them."
        pages:
          type: array
          description: "This field is available for input only.  To retrieve the image\
            \ after creation, use the\r\n`DownloadCertificateImage` API.\r\n     \
            \       \r\nWhen creating a certificate, you may optionally provide a\
            \ list of JPG images, one per page, in\r\nBase64 URLEncoded format.  These\
            \ JPG images are automatically combined into a single downloadable\r\n\
            PDF and can be retrieved back later as either the original JPG images\
            \ or the combined PDF.\r\n            \r\nTo create a certificate, you\
            \ must provide one of the following fields: either a `filename`, a `pdf`\
            \ file,\r\nor an array of JPG `pages`.  The API will return an error if\
            \ you omit these fields or if you attempt to\r\nput values in more than\
            \ one of them."
          items:
            type: string
      description: "A certificate is a document stored in either AvaTax Exemptions\
        \ or CertCapture.  The certificate document\r\ncan contain information about\
        \ a customer's eligibility for exemption from sales or use taxes based on\r\
        \ncriteria you specify when you store the certificate.  To view or manage\
        \ your certificates directly, please\r\nlog onto the administrative website\
        \ for the product you purchased."
      example:
        id: 0
        signedDate: 2016-02-01
        expirationDate: 2020-12-31
        filename: 75997b7d-0266-47af-a4e9-26708d6b4880
        documentExists: false
        valid: true
        verified: false
        exemptPercentage: 0
        isSingleCertificate: false
        exemptionNumber: Exempt-1234
        exemptionReason:
          name: RESALE
        createdDate: 2022-01-10T15:49:26.7262377Z
        modifiedDate: 2022-01-10
        taxNumberType: FEIN
        businessNumberType: Business Services
        pageCount: 0
        customers:
        - companyId: 0
          customerCode: 732f5170-f7b0-4e58-9d7c-f9916d2d2c1c
          alternateId: "987654321"
          name: Dr. Bob Example
          attnName: 'Attn: Receiving'
          line1: 645 Main Street
          city: Irvine
          postalCode: "92614"
          phoneNumber: (949) 555-1212
          faxNumber: 949.555.1213
          emailAddress: dr.bob.example@example.org
          contactName: Alice Smith
          lastTransaction: 2008-10-08T00:00:00
          country: US
          region: CA
          exposureZones:
          - name: Washington
        - companyId: 0
          customerCode: 6eaaa9cf-0bf5-46d4-a42d-6e70e503e35b
          alternateId: "987654321"
          name: Dr. Bob Example
          attnName: 'Attn: Receiving'
          line1: 645 Main Street
          city: Irvine
          postalCode: "92614"
          phoneNumber: (949) 555-1212
          faxNumber: 949.555.1213
          emailAddress: dr.bob.example@example.org
          contactName: Alice Smith
          lastTransaction: 2008-10-08T00:00:00
          country: US
          region: CA
          exposureZones:
          - name: Washington
        exposureZone:
          name: Washington
    CustomFieldModel:
      type: object
      properties:
        name:
          type: string
          description: The name of the custom field.
          example: Customer Type
        value:
          type: string
          description: The value of the custom field.
          example: my customer type
      description: "A custom field provides extra information about a customer or\
        \ certificate.\r\n            \r\nCustom fields are provided to permit you\
        \ to store additional information about an exemption certificate or customer.\
        \  They are available to\r\nsupport additional use cases beyond that supported\
        \ directly by Avalara's exemption certificate software.\r\n            \r\n\
        For more information about custom fields, see the [Avalara Help Center article\
        \ about custom fields](https://help.avalara.com/0021_Avalara_CertCapture/All_About_CertCapture/Edit_or_Remove_Details_about_Customers)."
      example:
        name: Customer Type
        value: my customer type
    CustomerAttributeModel:
      type: object
      properties:
        id:
          type: integer
          description: A unique ID number representing this attribute.
          format: int32
          example: 1
        name:
          type: string
          description: A friendly readable name for this attribute.
          example: ADDRESS CHANGE NEEDED
        description:
          type: string
          description: A full help text description of the attribute.
          example: Customer address change is needed.
        isSystemCode:
          type: boolean
          description: "This value is true if this is a system-defined attribute.\
            \  System-defined attributes\r\ncannot be modified or deleted on the CertCapture\
            \ website."
          example: false
        isNonDeliver:
          type: boolean
          description: A flag denotes that future exemption certificate request won't
            be mailed to the customer
          example: true
        isChangeable:
          type: boolean
          description: A flag denotes that this attribute can't be removed/added to
            a customer record
          example: true
      description: "A Customer's linked attribute denoting what features applied to\
        \ the customer. A customer can\r\nbe linked to multiple customer attributes\
        \ and vice versa."
      example:
        id: 1
        name: ADDRESS CHANGE NEEDED
        description: Customer address change is needed.
        isSystemCode: false
        isNonDeliver: true
        isChangeable: true
    CustomerModel:
      required:
      - city
      - companyId
      - country
      - customerCode
      - line1
      - name
      - postalCode
      - region
      type: object
      properties:
        id:
          type: integer
          description: Unique ID number of this customer.
          format: int32
          readOnly: true
        companyId:
          type: integer
          description: The unique ID number of the AvaTax company that recorded this
            customer.
          format: int32
          example: 0
        customerCode:
          type: string
          description: "The unique code identifying this customer.  Must be unique\
            \ within your company.\r\n            \r\nThis code should be used in\
            \ the `customerCode` field of any call that creates or adjusts a transaction\r\
            \nin order to ensure that all exemptions that apply to this customer are\
            \ correctly considered.\r\n            \r\nNote: This field is case sensitive."
          example: c0b1f964-3812-4bf7-8092-fff8ed04ab09
        alternateId:
          type: string
          description: "A customer-configurable alternate ID number for this customer.\
            \  You may set this value to match any\r\nother system that would like\
            \ to reference this customer record."
          example: "987654321"
        name:
          type: string
          description: A friendly name identifying this customer.
          example: Dr. Bob Example
        attnName:
          type: string
          description: "Indicates the \"Attn:\" component of the address for this\
            \ customer, if this customer requires mailings to be shipped\r\nto the\
            \ attention of a specific person or department name."
          example: 'Attn: Receiving'
        line1:
          type: string
          description: First line of the street address of this customer.
          example: 645 Main Street
        line2:
          type: string
          description: Second line of the street address of this customer.
        city:
          type: string
          description: City component of the street address of this customer.
          example: Irvine
        postalCode:
          type: string
          description: Postal Code / Zip Code component of the address of this customer.
          example: "92614"
        phoneNumber:
          type: string
          description: The main phone number for this customer.
          example: (949) 555-1212
        faxNumber:
          type: string
          description: The fax phone number for this customer, if any.
          example: 949.555.1213
        emailAddress:
          type: string
          description: The main email address for this customer.
          example: dr.bob.example@example.org
        contactName:
          type: string
          description: The name of the main contact person for this customer.
          example: Alice Smith
        lastTransaction:
          type: string
          description: Date when this customer last executed a transaction.
          format: date-time
          readOnly: true
        createdDate:
          type: string
          description: The date when this record was created.
          format: date-time
          readOnly: true
        modifiedDate:
          type: string
          description: The date/time when this record was last modified.
          format: date-time
          readOnly: true
        country:
          type: string
          description: "Name or ISO 3166 code identifying the country.\r\n       \
            \     \r\nThis field supports many different country identifiers:\r\n\
            \ * Two character ISO 3166 codes\r\n * Three character ISO 3166 codes\r\
            \n * Fully spelled out names of the country in ISO supported languages\r\
            \n * Common alternative spellings for many countries\r\n            \r\
            \nFor a full list of all supported codes and names, please see the Definitions\
            \ API `ListCountries`."
          example: US
        region:
          maxLength: 3
          minLength: 0
          type: string
          description: "ISO 3166 code identifying the region within the country.\r\
            \nTwo and three character ISO 3166 region codes.\r\n            \r\nFor\
            \ a full list of all supported codes, please see the Definitions API `ListRegions`."
          example: CA
        isBill:
          type: boolean
          description: True if this customer record is specifically used for bill-to
            purposes.
        isShip:
          type: boolean
          description: True if this customer record is specifically used for ship-to
            purposes.
        taxpayerIdNumber:
          type: string
          description: "For customers in the United States, this field is the federal\
            \ taxpayer ID number.  For businesses, this is\r\na Federal Employer Identification\
            \ Number.  For individuals, this will be a Social Security Number."
        certificates:
          type: array
          description: "A list of exemption certficates that apply to this customer.\
            \  You can fetch this data by specifying\r\n`$include=certificates` when\
            \ calling a customer fetch API."
          items:
            $ref: '#/components/schemas/CertificateModel'
        customFields:
          type: array
          description: "A list of custom fields defined on this customer.\r\n    \
            \        \r\nFor more information about custom fields, see the [Avalara\
            \ Help Center article about custom fields](https://help.avalara.com/0021_Avalara_CertCapture/All_About_CertCapture/Edit_or_Remove_Details_about_Customers)."
          items:
            $ref: '#/components/schemas/CustomFieldModel'
        exposureZones:
          type: array
          description: "A list of exposure zones where you do business with this customer.\r\
            \n            \r\nTo keep track of certificates that are needed for each\
            \ customer, set this value to a list of all exposure zones where you\r\
            \nsell products to this customer.  You can find a list of exposure zones\
            \ by calling `ListExposureZones`.\r\n            \r\nThis field is often\
            \ called \"Ship-To States\" or \"Ship-To Zones\", since it generally refers\
            \ to locations where you ship products\r\nwhen this customer makes a purchase.\r\
            \n            \r\nThis field is useful for audit purposes since it helps\
            \ you ensure you have the necessary certificates for each customer."
          example:
          - name: Washington
          items:
            $ref: '#/components/schemas/ExposureZoneModel'
        shipTos:
          type: array
          description: "A list of ship-to customer records that are connected to this\
            \ bill-to customer.\r\n            \r\nCustomer records represent businesses\
            \ or individuals who can provide exemption certificates.  Some customers\r\
            \nmay have certificates that are linked to their shipping address or their\
            \ billing address.  To group these\r\ncustomer records together, you may\
            \ link multiple bill-to and ship-to addresses together to represent a\
            \ single\r\nentity that has multiple different addresses of different\
            \ kinds."
          items:
            $ref: '#/components/schemas/CustomerModel'
        attributes:
          type: array
          description: "A list of attributes that apply to this customer.\r\n    \
            \        \r\nYou can fetch this data by specifying `$include=attributes`\
            \ when calling a customer fetch API."
          items:
            $ref: '#/components/schemas/CustomerAttributeModel'
      description: Represents a customer to whom you sell products and/or services.
      example:
        companyId: 0
        customerCode: c0b1f964-3812-4bf7-8092-fff8ed04ab09
        alternateId: "987654321"
        name: Dr. Bob Example
        attnName: 'Attn: Receiving'
        line1: 645 Main Street
        city: Irvine
        postalCode: "92614"
        phoneNumber: (949) 555-1212
        faxNumber: 949.555.1213
        emailAddress: dr.bob.example@example.org
        contactName: Alice Smith
        lastTransaction: 2008-10-08T00:00:00
        country: US
        region: CA
        exposureZones:
        - name: Washington
    CoverLetterModel:
      type: object
      properties:
        id:
          type: integer
          description: A unique ID number representing a cover letter sent with a
            CertExpress invitation.
          format: int32
          readOnly: true
        companyId:
          type: integer
          description: The unique ID number of the AvaTax company that received this
            certificate.
          format: int32
        title:
          type: string
          description: The title used when sending the cover letter.
          example: STANDARD_REQUEST
        subject:
          type: string
          description: The subject message used when sending the cover letter via
            email.
          example: Please submit your exemption certificate
        description:
          type: string
          description: A full description of the cover letter's contents and message.
          example: Please upload your certificate to CertCapture
        createdDate:
          type: string
          description: The date when this record was created.
          format: date-time
          readOnly: true
        modifiedDate:
          type: string
          description: The date/time when this record was last modified.
          format: date-time
          readOnly: true
        active:
          type: boolean
          description: Is this cover letter active
        pageCount:
          type: integer
          description: How many pages this cover letter encompasses
          format: int32
          readOnly: true
        templateFilename:
          type: string
          description: The file name of the cover letter template
        version:
          type: integer
          description: The version number of the template
          format: int32
          example: 0
      description: "The CoverLetter model represents a message sent along with an\
        \ invitation to use CertExpress to\r\nupload certificates.  An invitation\
        \ allows customers to use CertExpress to upload their exemption\r\ncertificates\
        \ directly; this cover letter explains why the invitation was sent."
      example:
        title: STANDARD_REQUEST
        subject: Please submit your exemption certificate
        description: Please upload your certificate to CertCapture
        createdDate: 0001-01-01T00:00:00
        modifiedDate: 0001-01-01T00:00:00
        version: 0
    CertExpressInvitationModel:
      type: object
      properties:
        id:
          type: integer
          description: A unique ID number representing this CertExpress invitation.
          format: int32
          readOnly: true
        companyId:
          type: integer
          description: The unique ID number of the AvaTax company that sent this invitation.
          format: int32
        recipient:
          type: string
          description: The email address to which this invitation was sent.  If this
            invitation was presented as a weblink, this value will be null.
        customerCode:
          type: string
          description: "The unique code of the customer that received this invitation.\r\
            \nNote: This field is case sensitive. To have exemption certificates apply,\
            \ this value should\r\nbe the same as the one passed to create a customer."
          example: ABC
        customer:
          $ref: '#/components/schemas/CustomerModel'
        coverLetter:
          $ref: '#/components/schemas/CoverLetterModel'
        emailStatus:
          type: string
          description: "The status of the emails associated with this invitation.\
            \  If this invitation was sent via email,\r\nthis value will change to\
            \ `Sent` when the email message has been sent."
          readOnly: true
        coverLettersOnly:
          type: boolean
          description: True if this invitation contained a cover letter only.
          readOnly: true
        exposureZones:
          type: array
          description: "When an invitation is sent, it contains a list of exposure\
            \ zones for which the customer is invited to upload\r\ntheir exemption\
            \ certificates.  This list contains the ID numbers of the exposure zones\
            \ identified.\r\n            \r\nFor a list of exposure zones, please\
            \ call `ListCertificateExposureZones`."
          items:
            type: integer
            format: int32
        exemptReasons:
          type: array
          description: "The list of exemption reasons identified by this CertExpress\
            \ invitation.\r\n            \r\nFor a list of reason codes, please call\
            \ `ListCertificateExemptReasons`."
          items:
            type: integer
            format: int32
        deliveryMethod:
          type: string
          description: Indicates the method that was used to deliver this CertExpress
            invitation.
          example: Email
          enum:
          - Email
          - Fax
          - Download
          x-enum-metadata:
            name: CertificateRequestDeliveryMethod
            values:
            - name: Email
              value: 1
            - name: Fax
              value: 2
            - name: Download
              value: 3
        message:
          type: string
          description: The custom message delivered with this invitation.
        date:
          type: string
          description: The date of the invitation.
          format: date-time
        requestLink:
          type: string
          description: "The web link (URL) that a customer can click on or visit to\
            \ begin using this CertExpress invitation.\r\n            \r\nThis value\
            \ is only usable if the status of this invitation is `Ready` and the request\
            \ was created with type `Download`.\r\nNOTE: This link usually takes a\
            \ few minutes to be available."
      description: "Represents an invitation for a customer to use CertExpress to\
        \ self-report their own certificates.\r\nThis invitation is delivered by your\
        \ choice of method, or you can present a hyperlink to the user\r\ndirectly\
        \ in your connector.  Your customer will be redirected to https://app.certexpress.com/\
        \ where\r\nthey can follow a step-by-step guide to enter information about\
        \ their exemption certificates.  The\r\ncertificates entered will be recorded\
        \ and automatically linked to their customer record."
      example:
        customerCode: ABC
    CertExpressInvitationStatusModel:
      type: object
      properties:
        status:
          type: string
          description: The status of the CertExpress invitation for this customer.  If
            this status says
          example: InProgress
          enum:
          - InProgress
          - Ready
          x-enum-metadata:
            name: CertExpressInvitationStatus
            values:
            - name: InProgress
              value: 0
            - name: Ready
              value: 1
        invitation:
          $ref: '#/components/schemas/CertExpressInvitationModel'
      description: Represent what is the current status of certificate request
      example:
        status: InProgress
        invitation:
          customerCode: ABC
    CertExpressInvitationModelFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/CertExpressInvitationModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    ProvisionStatusModel:
      type: object
      properties:
        status:
          type: string
          description: "The status of exemption certificate setup for this company.\r\
            \n            \r\nIf this value is `Finished`, this company will then\
            \ be able to use the Customers, Certificates, and\r\nCertExpressInvites\
            \ APIs within AvaTax."
          example: Provisioned
          enum:
          - Provisioned
          - InProgress
          - NotProvisioned
          x-enum-metadata:
            name: CertCaptureProvisionStatus
            values:
            - name: Provisioned
              value: 0
            - name: InProgress
              value: 1
            - name: NotProvisioned
              value: 2
        accountId:
          type: integer
          description: The accountId of the company represented by this status
          format: int32
          example: 12345
        companyId:
          type: integer
          description: The AvaTax company represented by this status
          format: int32
          example: 6789
      description: "Contains information about a company's exemption certificate status.\r\
        \n            \r\nThis model can be used to determine if your company is able\
        \ to use the Customers, Certificates, and\r\nCertExpressInvites APIs within\
        \ AvaTax."
      example:
        status: Provisioned
        accountId: 12345
        companyId: 6789
    CertificateModelFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/CertificateModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    LinkCustomersModel:
      type: object
      properties:
        customers:
          type: array
          description: An array of customerCodes that are exempted by this certificate
          example:
          - "123456789"
          items:
            type: string
      description: Represents a customer to whom you sell products and/or services.
      example:
        customers:
        - "123456789"
    CustomerModelFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/CustomerModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    CertificateAttributeModelFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/CertificateAttributeModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    MrsCompanyModel:
      type: object
      properties:
        companyId:
          type: integer
          description: The unique ID number of this company.
          format: int32
          example: 12345
        companyName:
          type: string
          description: The name of this company, as shown to customers.
          example: Default Company
        accountId:
          type: integer
          description: The unique ID number of the account this company belongs to.
          format: int32
          example: 123456789
        accountName:
          type: string
          description: The name of this account, as shown to customers.
          example: Default Account
        tin:
          type: string
          description: The taxpayer identification number for the company
        companyCode:
          type: string
          description: The company code for the company
        createdDate:
          type: string
          description: The date when this record was created.
          format: date-time
        createdUserId:
          type: integer
          description: The User ID of the user who created this record.
          format: int32
        modifiedDate:
          type: string
          description: The date/time when this record was last modified.
          format: date-time
        modifiedUserId:
          type: integer
          description: The user ID of the user who last modified this record.
          format: int32
      description: A company and account
      example:
        companyId: 12345
        companyName: Default Company
        accountId: 123456789
        accountName: Default Account
    MrsCompanyModelFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/MrsCompanyModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    CompanyInitializationModel:
      required:
      - city
      - country
      - email
      - firstName
      - lastName
      - line1
      - name
      - phoneNumber
      - postalCode
      - region
      type: object
      properties:
        name:
          maxLength: 50
          minLength: 0
          type: string
          description: Company Name
          example: Bob's Artisan Pottery
        companyCode:
          maxLength: 25
          minLength: 0
          type: string
          description: Company Code - used to distinguish between companies within
            your accounting system
          example: DEFAULT
        vatRegistrationId:
          maxLength: 25
          minLength: 0
          type: string
          description: Vat Registration Id - leave blank if not known.
        taxpayerIdNumber:
          maxLength: 11
          minLength: 0
          type: string
          description: "United States Taxpayer ID number, usually your Employer Identification\
            \ Number if you are a business or your\r\nSocial Security Number if you\
            \ are an individual.\r\nThis value is required if the address provided\
            \ is inside the US and if you subscribed to the Avalara Managed Returns\
            \ or SST Certified Service Provider service. Otherwise it is optional."
          example: 12-3456789
        isFein:
          type: boolean
          description: Set this field to true if the taxPayerIdNumber is a FEIN.
        line1:
          maxLength: 50
          minLength: 0
          type: string
          description: Address Line1
          example: 2000 Main Street
        line2:
          maxLength: 50
          minLength: 0
          type: string
          description: Line2
        line3:
          maxLength: 50
          minLength: 0
          type: string
          description: Line3
        city:
          maxLength: 50
          minLength: 0
          type: string
          description: City
          example: Irvine
        region:
          type: string
          description: "Name or ISO 3166 code identifying the region within the country.\r\
            \n            \r\nThis field supports many different region identifiers:\r\
            \n * Two and three character ISO 3166 region codes\r\n * Fully spelled\
            \ out names of the region in ISO supported languages\r\n * Common alternative\
            \ spellings for many regions\r\n            \r\nFor a full list of all\
            \ supported codes and names, please see the Definitions API `ListRegions`."
          example: CA
        postalCode:
          maxLength: 10
          minLength: 0
          type: string
          description: Postal Code
          example: "92614"
        country:
          type: string
          description: "Name or ISO 3166 code identifying the country.\r\n       \
            \     \r\nThis field supports many different country identifiers:\r\n\
            \ * Two character ISO 3166 codes\r\n * Three character ISO 3166 codes\r\
            \n * Fully spelled out names of the country in ISO supported languages\r\
            \n * Common alternative spellings for many countries\r\n            \r\
            \nFor a full list of all supported codes and names, please see the Definitions\
            \ API `ListCountries`."
          example: US
        firstName:
          maxLength: 50
          minLength: 0
          type: string
          description: First Name
          example: Bob
        lastName:
          maxLength: 50
          minLength: 0
          type: string
          description: Last Name
          example: Example
        title:
          maxLength: 50
          minLength: 0
          type: string
          description: Title
          example: Owner
        email:
          maxLength: 50
          minLength: 0
          type: string
          description: Email
          example: bob@example.org
        phoneNumber:
          maxLength: 25
          minLength: 0
          type: string
          description: Phone Number
          example: 714 555-2121
        mobileNumber:
          maxLength: 25
          minLength: 0
          type: string
          description: Mobile Number
          example: 714 555-1212
        faxNumber:
          maxLength: 25
          minLength: 0
          type: string
          description: Fax Number
        parentCompanyId:
          type: integer
          description: Parent Company ID
          format: int32
      description: Company Initialization Model
      example:
        name: Bob's Artisan Pottery
        companyCode: DEFAULT
        taxpayerIdNumber: 12-3456789
        isFein: false
        line1: 2000 Main Street
        city: Irvine
        region: CA
        postalCode: "92614"
        country: US
        firstName: Bob
        lastName: Example
        title: Owner
        email: bob@example.org
        phoneNumber: 714 555-2121
        mobileNumber: 714 555-1212
    FundingESignMethodReturn:
      type: object
      properties:
        method:
          type: string
          description: Method
        javaScriptReady:
          type: boolean
          description: JavaScriptReady
        javaScript:
          type: string
          description: The actual javascript to use to render this object
      description: Represents the current status of a funding ESign method
      example:
        method: ""
        javaScriptReady: false
    FundingStatusModel:
      type: object
      properties:
        requestId:
          type: integer
          description: The unique ID number of this funding request
          format: int64
        subledgerProfileID:
          type: integer
          description: SubledgerProfileID
          format: int32
        companyID:
          type: string
          description: CompanyID
        domain:
          type: string
          description: Domain
        recipient:
          type: string
          description: Recipient
        sender:
          type: string
          description: Sender
        documentKey:
          type: string
          description: DocumentKey
        documentType:
          type: string
          description: DocumentType
        documentName:
          type: string
          description: DocumentName
        methodReturn:
          $ref: '#/components/schemas/FundingESignMethodReturn'
        status:
          type: string
          description: Status
        errorMessage:
          type: string
          description: ErrorMessage
        lastPolled:
          type: string
          description: LastPolled
          format: date-time
        lastSigned:
          type: string
          description: LastSigned
          format: date-time
        lastActivated:
          type: string
          description: LastActivated
          format: date-time
        templateRequestId:
          type: integer
          description: TemplateRequestId
          format: int64
      description: Status of an Avalara Managed Returns funding configuration for
        a company
      example:
        requestId: 12345
        subledgerProfileID: 12345
        companyID: "123456"
        domain: AvaTax15
        recipient: bob@example.org
        sender: treasury@avalara.com
        documentKey: RTdIy3AAABLblqZhBCV9kul4F1qC -
        documentType: ACH
        documentName: New Customer - Avalara Returns Funding Power of Attorney
        methodReturn:
          javaScriptReady: false
        status: Expired
        lastPolled: 2016-01-01T20:16:17
        lastActivated: 2016-01-01T19:16:17
    FundingConfigurationModel:
      type: object
      properties:
        companyId:
          type: integer
          description: CompanyID
          format: int32
          example: 2793
        systemType:
          type: string
          description: Domain
          example: AvaTax15
        currency:
          type: string
          description: Recipient
          example: USD
        isFundingSetup:
          type: boolean
          description: Sender
          example: true
        fundingMethod:
          type: string
          description: DocumentKey
          example: ACH Pull
        lastUpdated:
          type: string
          description: LastPolled
          format: date-time
          example: 2022-01-10T15:49:27.2084663Z
      description: Status of an Avalara Managed Returns funding configuration for
        a company
      example:
        companyId: 2793
        systemType: AvaTax15
        currency: USD
        isFundingSetup: true
        fundingMethod: ACH Pull
        lastUpdated: 2022-01-10T15:49:27.2084663Z
    FundingInitiateModel:
      required:
      - fundingEmailRecipient
      type: object
      properties:
        requestEmail:
          type: boolean
          description: Set this value to true to request an email to the recipient
          example: true
        fundingEmailRecipient:
          type: string
          description: "If you have requested an email for funding setup, this is\
            \ the recipient who will receive an\r\nemail inviting them to setup funding\
            \ configuration for Avalara Managed Returns.  The recipient can\r\nthen\
            \ click on a link in the email and setup funding configuration for this\
            \ company."
          example: user@example.org
        requestWidget:
          type: boolean
          description: "Set this value to true to request an HTML-based funding widget\
            \ that can be embedded within an\r\nexisting user interface.  A user can\
            \ then interact with the HTML-based funding widget to set up\r\nfunding\
            \ information for the company."
      description: ""
      example:
        requestEmail: true
        fundingEmailRecipient: user@example.org
    CompanyConfigurationModel:
      required:
      - category
      - name
      type: object
      properties:
        companyId:
          type: integer
          description: The unique ID number of the account to which this setting applies
          format: int32
          readOnly: true
          example: 0
        category:
          maxLength: 25
          minLength: 0
          type: string
          description: The category of the configuration setting.  Avalara-defined
            categories include `AddressServiceConfig` and `TaxServiceConfig`.  Customer-defined
            categories begin with `X-`.
          example: AvaCertServiceConfig
        name:
          maxLength: 50
          minLength: 0
          type: string
          description: The name of the configuration setting
          example: AllowPending
        value:
          maxLength: 1000
          minLength: 0
          type: string
          description: The current value of the configuration setting
          example: "true"
        createdDate:
          type: string
          description: The date when this record was created.
          format: date-time
          readOnly: true
        createdUserId:
          type: integer
          description: The User ID of the user who created this record.
          format: int32
          readOnly: true
        modifiedDate:
          type: string
          description: The date/time when this record was last modified.
          format: date-time
          readOnly: true
        modifiedUserId:
          type: integer
          description: The user ID of the user who last modified this record.
          format: int32
          readOnly: true
      description: Represents one configuration setting for this company
      example:
        companyId: 0
        category: AvaCertServiceConfig
        name: AllowPending
        value: "true"
    FilingStatusChangeModel:
      type: object
      properties:
        requestedStatus:
          type: string
          description: Indicates the filing status you are requesting for this company
          example: NotConfiguredForCompliance
          enum:
          - NotConfiguredForCompliance
          - NotYetFiling
          - FilingRequested
          - FirstFiling
          - Active
          - NoReporting
          - Inactive
          x-enum-metadata:
            name: CompanyFilingStatus
            values:
            - name: NotConfiguredForCompliance
              value: 0
            - name: NotYetFiling
              value: 1
            - name: FilingRequested
              value: 2
            - name: FirstFiling
              value: 3
            - name: Active
              value: 4
            - name: NoReporting
              value: 5
            - name: Inactive
              value: 6
      description: Represents a change request for filing status for a company
      example:
        requestedStatus: FirstFiling
    CompanyParameterDetailModelFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/CompanyParameterDetailModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    CustomerSupplierModelFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/CustomerSupplierModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    CustomerSupplierCountryParamModel:
      required:
      - country
      type: object
      properties:
        id:
          type: integer
          description: Identifier for company parameter
          format: int64
          readOnly: true
          example: 0
        companyId:
          type: integer
          description: CompanyId associated with the parameter
          format: int32
          example: 0
        customerId:
          type: integer
          description: Identifier for company parameter
          format: int64
        customerCode:
          type: string
          description: ""
        country:
          type: string
          description: ""
        isEstablished:
          type: boolean
          description: ""
        businessIdentificationNo:
          maxLength: 25
          minLength: 0
          type: string
          description: ""
        isRegisteredThroughFiscalRep:
          type: boolean
          description: ""
      description: Represents a parameter associated with a company.
      example:
        id: 0
        companyId: 0
        customerId: 0
        isEstablished: true
        businessIdentificationNo: "123456789"
        isRegisteredThroughFiscalRep: false
    ComplianceTaxRateModel:
      type: object
      properties:
        id:
          type: integer
          description: The unique id of the rate.
          format: int32
          readOnly: true
          example: 1
        rate:
          type: number
          description: The tax rate.
          format: double
          readOnly: true
          example: 0.05
        jurisdictionId:
          type: integer
          description: The id of the jurisdiction.
          format: int32
          readOnly: true
          example: 1
        taxRegionId:
          type: integer
          description: The id of the tax region.
          format: int32
          readOnly: true
          example: 4574
        effectiveDate:
          type: string
          description: The date this rate is starts to take effect.
          format: date
          readOnly: true
        endDate:
          type: string
          description: The date this rate is no longer active.
          format: date
          readOnly: true
        rateTypeId:
          type: string
          description: The rate type.
          readOnly: true
          example: F
        taxTypeId:
          type: string
          description: The tax type.
          readOnly: true
          example: S
        taxName:
          type: string
          description: The name of the tax.
          readOnly: true
          example: AL STATE TAX
        unitOfBasisId:
          type: integer
          description: The unit of basis.
          format: int64
          readOnly: true
          example: 13
        rateTypeTaxTypeMappingId:
          type: integer
          description: The rate type tax type mapping id.
          format: int32
          readOnly: true
          example: 46
      description: The tax rate model.
      example:
        id: 1
        rate: 0.05
        jurisdictionId: 1
        taxRegionId: 4574
        effectiveDate: 1900-01-01
        endDate: 2011-04-30
        rateTypeId: F
        taxTypeId: S
        taxName: AL STATE TAX
        unitOfBasisId: 13
        rateTypeTaxTypeMappingId: 46
    DenormalizedJurisModel:
      type: object
      properties:
        effectiveDate:
          type: string
          description: The jurisdiction's effective date.
          format: date-time
        endDate:
          type: string
          description: The jurisdiction's end date.
          format: date-time
        jurisCode:
          type: string
          description: The jurisdiction's code.
          example: "20"
        jurisdictionId:
          type: integer
          description: The jurisdiction's id.
          format: int32
          example: 20
        jurisType:
          type: string
          description: The jurisdiction's type.
          example: Country
          enum:
          - Country
          - State
          - County
          - City
          - Special
          x-enum-metadata:
            name: JurisdictionType
            values:
            - name: Country
              value: 0
            - name: State
              value: 1
            - name: County
              value: 2
            - name: City
              value: 3
            - name: Special
              value: 4
        jurisName:
          type: string
          description: The jurisdiction's name.
          example: KANSAS
        stateAssignedCode:
          type: string
          description: The state assigned code.
        taxAuthorityId:
          type: integer
          description: The id of the tax authority.
          format: int32
          example: 280
        state:
          type: string
          description: "The jurisdiction's region.\r\nThis should exist on the TaxRegion,\
            \ but in practice often doesn't."
        country:
          type: string
          description: "The jurisdiction's country.\r\nThis should exist on the TaxRegion,\
            \ but in practice often doesn't."
        county:
          type: string
          description: "The jurisdiction's county.\r\nThis should exist on the TaxRegion,\
            \ but in practice often doesn't."
        city:
          type: string
          description: "The jurisdiction's city.\r\nThis should exist on the TaxRegion,\
            \ but in practice often doesn't."
        isAcm:
          type: boolean
          description: Is Acm flag
          example: true
        isSst:
          type: boolean
          description: Is Sst flag
          example: true
      description: Represents information about a single legal taxing jurisdiction
        within a specific Avalara tax region.
      example:
        effectiveDate: 1900-01-01T00:00:00
        endDate: 2013-11-30T00:00:00
        jurisCode: "20"
        jurisdictionId: 20
        jurisType: State
        jurisName: KANSAS
        taxAuthorityId: 280
        isAcm: true
        isSst: true
    TaxRegionModel:
      type: object
      properties:
        id:
          type: integer
          description: The id of the tax region.
          format: int32
          readOnly: true
          example: 120
        code:
          type: string
          description: The code of the tax region.
          readOnly: true
          example: "2000000000"
        name:
          type: string
          description: The name of the tax region.
          readOnly: true
          example: KANSAS
        county:
          type: string
          description: The name of the county.
          readOnly: true
        city:
          type: string
          description: The name of the city.
          readOnly: true
        region:
          type: string
          description: "Name or ISO 3166 code identifying the region within the country.\r\
            \n            \r\nThis field supports many different region identifiers:\r\
            \n * Two and three character ISO 3166 region codes\r\n * Fully spelled\
            \ out names of the region in ISO supported languages\r\n * Common alternative\
            \ spellings for many regions\r\n            \r\nFor a full list of all\
            \ supported codes and names, please see the Definitions API `ListRegions`."
          readOnly: true
          example: KS
        country:
          type: string
          description: "Name or ISO 3166 code identifying the country of this jurisdiction.\r\
            \n            \r\nThis field supports many different country identifiers:\r\
            \n * Two character ISO 3166 codes\r\n * Three character ISO 3166 codes\r\
            \n * Fully spelled out names of the country in ISO supported languages\r\
            \n * Common alternative spellings for many countries\r\n            \r\
            \nFor a full list of all supported codes and names, please see the Definitions\
            \ API `ListCountries`."
          readOnly: true
          example: US
        serCode:
          type: string
          description: The ser code.
          readOnly: true
        signatureCode:
          type: string
          description: The tax region signature code.
          readOnly: true
          example: AUIO
        effectiveDate:
          type: string
          description: The date this tax region starts to take effect.
          format: date
          readOnly: true
        endDate:
          type: string
          description: The date this tax region stops to take effect.
          format: date
          readOnly: true
        isAcm:
          type: boolean
          description: Is Acm flag.
          readOnly: true
          example: false
        isSst:
          type: boolean
          description: Is SST flag.
          readOnly: true
          example: false
        jurisdictions:
          type: array
          description: List of jurisdictions associated with this tax region.
          example:
          - effectiveDate: 1900-01-01T00:00:00
            endDate: 2013-11-30T00:00:00
            jurisCode: "20"
            jurisdictionId: 20
            jurisType: State
            jurisName: KANSAS
            taxAuthorityId: 280
            isAcm: true
            isSst: true
          items:
            $ref: '#/components/schemas/DenormalizedJurisModel'
      description: The tax region model.
      example:
        id: 120
        code: "2000000000"
        name: KANSAS
        region: KS
        country: US
        signatureCode: AUIO
        effectiveDate: 1900-01-01
        endDate: 2013-11-30
        isAcm: false
        isSst: false
        jurisdictions:
        - effectiveDate: 1900-01-01T00:00:00
          endDate: 2013-11-30T00:00:00
          jurisCode: "20"
          jurisdictionId: 20
          jurisType: State
          jurisName: KANSAS
          taxAuthorityId: 280
          isAcm: true
          isSst: true
    TaxRegionJurisdictionModel:
      type: object
      properties:
        jurisdictionId:
          type: integer
          description: The id of the jurisdiction.
          format: int32
          readOnly: true
          example: 1
        taxRegionId:
          type: integer
          description: The id of the tax region.
          format: int32
          readOnly: true
          example: 4556
        jurisdictionLevelId:
          type: integer
          description: The id of the jurisdiction level.
          format: int32
          readOnly: true
        rockName:
          type: string
          description: The rock name.
          readOnly: true
        reportLevel:
          type: integer
          description: The report level.
          format: int32
          readOnly: true
          example: 1
        stateAssignedCode:
          type: string
          description: The state assigned code.
          readOnly: true
        taxAuthorityId:
          type: integer
          description: The id of the tax authority.
          format: int32
          readOnly: true
          example: 271
        signatureCode:
          type: string
          description: The signature code.
          readOnly: true
          example: AAKB
        effectiveDate:
          type: string
          description: The date in which this tax region jurisdiction starts to take
            effect.
          format: date
          readOnly: true
        endDate:
          type: string
          description: The date in which this tax region jurisdiction stops to take
            effect.
          format: date
          readOnly: true
      description: The tax region jurisdiction model.
      example:
        jurisdictionId: 1
        taxRegionId: 4556
        reportLevel: 1
        taxAuthorityId: 271
        signatureCode: AAKB
        effectiveDate: 1900-01-01
        endDate: 2011-04-30
    ComplianceAggregatedTaxRateModel:
      type: object
      properties:
        rate:
          type: number
          description: The compontent rate.
          format: double
          readOnly: true
          example: 0.005
        stackRate:
          type: number
          description: The stack rate based on the aggregation method.
          format: double
          readOnly: true
          example: 0.005
        effectiveDate:
          type: string
          description: The date this rate is starts to take effect.
          format: date
          readOnly: true
        endDate:
          type: string
          description: The date this rate is no longer active.
          format: date
          readOnly: true
        taxTypeId:
          type: string
          description: The tax type of the rate.
          readOnly: true
          example: S
        rateTypeId:
          type: string
          description: The rate type of the rate.
          readOnly: true
          example: G
      description: A model for aggregated rates.
      example:
        rate: 0.005
        stackRate: 0.005
        effectiveDate: 1900-01-01
        endDate: 9999-12-21
        taxTypeId: S
        rateTypeId: G
    ComplianceJurisdictionModel:
      type: object
      properties:
        taxRegionId:
          type: integer
          description: The id of the tax region.
          format: int32
          readOnly: true
          example: 2062642
        stateAssignedCode:
          type: string
          description: The state assigned code for the jurisdiction.
          readOnly: true
          example: 001-0001-3 QUINCY
        jurisdictionTypeId:
          type: string
          description: The type of the jurisdiction, indicating whether it is a country,
            state/region, city, for example.
          readOnly: true
          example: CIT
        name:
          type: string
          description: The name of the jurisdiction.
          readOnly: true
          example: QUINCY
        county:
          type: string
          description: The name of the county.
          readOnly: true
          example: ADAMS
        city:
          type: string
          description: The name of the city.
          readOnly: true
          example: QUINCY
        region:
          type: string
          description: "Name or ISO 3166 code identifying the region within the country.\r\
            \n            \r\nThis field supports many different region identifiers:\r\
            \n * Two and three character ISO 3166 region codes\r\n * Fully spelled\
            \ out names of the region in ISO supported languages\r\n * Common alternative\
            \ spellings for many regions\r\n            \r\nFor a full list of all\
            \ supported codes and names, please see the Definitions API `ListRegions`."
          readOnly: true
          example: IL
        country:
          type: string
          description: "Name or ISO 3166 code identifying the country of this jurisdiction.\r\
            \n            \r\nThis field supports many different country identifiers:\r\
            \n * Two character ISO 3166 codes\r\n * Three character ISO 3166 codes\r\
            \n * Fully spelled out names of the country in ISO supported languages\r\
            \n * Common alternative spellings for many countries\r\n            \r\
            \nFor a full list of all supported codes and names, please see the Definitions\
            \ API `ListCountries`."
          readOnly: true
          example: US
        taxRegionName:
          type: string
          description: The name of the tax region.
          readOnly: true
        taxAuthorityId:
          type: integer
          description: The id of the tax authority.
          format: int32
          example: 275
        rates:
          type: array
          description: 'Optional: A list of rates for this jurisdiction. To fetch
            this list, add the query string `?$include=TaxRates` to your URL.'
          example:
          - rate: 0.005
            stackRate: 0.005
            effectiveDate: 1900-01-01
            endDate: 9999-12-21
            taxTypeId: S
            rateTypeId: G
          items:
            $ref: '#/components/schemas/ComplianceAggregatedTaxRateModel'
      description: Model for distinct jurisdictions.
      example:
        taxRegionId: 2062642
        stateAssignedCode: 001-0001-3 QUINCY
        jurisdictionTypeId: CIT
        name: QUINCY
        county: ADAMS
        city: QUINCY
        region: IL
        country: US
        taxAuthorityId: 275
        rates:
        - rate: 0.005
          stackRate: 0.005
          effectiveDate: 1900-01-01
          endDate: 9999-12-21
          taxTypeId: S
          rateTypeId: G
    ComplianceJurisdictionRateModel:
      type: object
      properties:
        jurisdictionId:
          type: integer
          description: The id of the jurisdiction.
          format: int32
          readOnly: true
          example: 1
        country:
          type: string
          description: "Name or ISO 3166 code identifying the country of this jurisdiction.\r\
            \n            \r\nThis field supports many different country identifiers:\r\
            \n * Two character ISO 3166 codes\r\n * Three character ISO 3166 codes\r\
            \n * Fully spelled out names of the country in ISO supported languages\r\
            \n * Common alternative spellings for many countries\r\n            \r\
            \nFor a full list of all supported codes and names, please see the Definitions\
            \ API `ListCountries`."
          readOnly: true
          example: US
        region:
          type: string
          description: "Name or ISO 3166 code identifying the region within the country.\r\
            \n            \r\nThis field supports many different region identifiers:\r\
            \n * Two and three character ISO 3166 region codes\r\n * Fully spelled\
            \ out names of the region in ISO supported languages\r\n * Common alternative\
            \ spellings for many regions\r\n            \r\nFor a full list of all\
            \ supported codes and names, please see the Definitions API `ListRegions`."
          readOnly: true
          example: AL
        name:
          type: string
          description: The name of the jurisdiction.
          readOnly: true
          example: ALABAMA
        jurisdictionTypeId:
          type: string
          description: The type of the jurisdiction, indicating whether it is a country,
            state/region, city, for example.
          readOnly: true
          example: CIT
        rate:
          type: number
          description: The compontent rate.
          format: double
          readOnly: true
          example: 0.005
        rateTypeId:
          type: string
          description: The rate type.
          readOnly: true
          example: G
        taxTypeId:
          type: string
          description: The tax type.
          readOnly: true
          example: S
        effectiveDate:
          type: string
          description: The date this rate is starts to take effect.
          format: date
          readOnly: true
        endDate:
          type: string
          description: The date this rate is no longer active.
          format: date
          readOnly: true
        stateAssignedCode:
          type: string
          description: The state assigned code.
          readOnly: true
          example: ALABAMA
        taxAuthorityId:
          type: integer
          description: The id of the tax authority.
          format: int32
          readOnly: true
          example: 271
      description: A flattened model for jurisdictions and rates.
      example:
        jurisdictionId: 1
        country: US
        region: AL
        name: ALABAMA
        jurisdictionTypeId: CIT
        rate: 0.005
        rateTypeId: G
        taxTypeId: S
        effectiveDate: 1900-01-01
        endDate: 9999-12-21
        stateAssignedCode: ALABAMA
        taxAuthorityId: 271
    ContactModelFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/ContactModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    LinkCertificatesModel:
      required:
      - certificates
      type: object
      properties:
        certificates:
          type: array
          description: An array of certificate ID numbers to link
          example:
          - 1
          - 3
          items:
            type: integer
            format: int32
      description: Represents a customer to whom you sell products and/or services.
      example:
        certificates:
        - 1
        - 3
    ExemptionStatusModel:
      type: object
      properties:
        status:
          type: string
          description: The exemption status of this customer in this country/region.
          example: Exempt
        certificate:
          $ref: '#/components/schemas/CertificateModel'
      description: Indicates the customer's exemption status in a specific country
        and region.
      example:
        status: Exempt
        certificate:
          id: 0
          signedDate: 2016-02-01
          expirationDate: 2020-12-31
          filename: 60b0968d-1f63-4e01-b3b2-5bedc9cbc064
          documentExists: false
          valid: true
          verified: false
          exemptPercentage: 0
          isSingleCertificate: false
          exemptionNumber: Exempt-1234
          exemptionReason:
            name: RESALE
          createdDate: 2022-01-10T15:49:28.1721842Z
          modifiedDate: 2022-01-10
          taxNumberType: FEIN
          businessNumberType: Business Services
          pageCount: 0
          customers:
          - companyId: 0
            customerCode: 42e84aea-c80b-4a35-900b-3d0b7fc63d27
            alternateId: "987654321"
            name: Dr. Bob Example
            attnName: 'Attn: Receiving'
            line1: 645 Main Street
            city: Irvine
            postalCode: "92614"
            phoneNumber: (949) 555-1212
            faxNumber: 949.555.1213
            emailAddress: dr.bob.example@example.org
            contactName: Alice Smith
            lastTransaction: 2008-10-08T00:00:00
            country: US
            region: CA
            exposureZones:
            - name: Washington
          - companyId: 0
            customerCode: 484e6339-3271-4581-839f-7f46e9f79533
            alternateId: "987654321"
            name: Dr. Bob Example
            attnName: 'Attn: Receiving'
            line1: 645 Main Street
            city: Irvine
            postalCode: "92614"
            phoneNumber: (949) 555-1212
            faxNumber: 949.555.1213
            emailAddress: dr.bob.example@example.org
            contactName: Alice Smith
            lastTransaction: 2008-10-08T00:00:00
            country: US
            region: CA
            exposureZones:
            - name: Washington
          exposureZone:
            name: Washington
    CustomerAttributeModelFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/CustomerAttributeModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    DataSourceModel:
      required:
      - companyId
      - source
      type: object
      properties:
        id:
          type: integer
          description: The id of the datasource.
          format: int32
          readOnly: true
          example: 1
        companyId:
          type: integer
          description: The id of the company to which the datasource belongs to.
          format: int32
          example: 12345
        source:
          type: string
          description: The extractor/connector id.
          example: Amazon v2 Extractor
        instance:
          type: string
          description: The unique ID number of this connection.
          readOnly: true
          example: 461b62b3-bef9-42b5-8169-c5171f3f1dc8
        isEnabled:
          type: boolean
          description: The connection using the connection_id is enabled. The customer
            is responsible to enable or disable.
          example: false
        isSynced:
          type: boolean
          description: If all the information has been transferred from the extractor
            to the database.
          example: false
        isAuthorized:
          type: boolean
          description: True if this data source is authorized.
          example: false
        lastSyncedDate:
          type: string
          description: The date when the information was last synched.
          format: date-time
        createdUserId:
          type: integer
          description: The User ID of the user who created this record.
          format: int32
          readOnly: true
          example: 123
        createdDate:
          type: string
          description: The date when this record was created.
          format: date-time
          readOnly: true
          example: 2022-01-10T00:00:00Z
        modifiedUserId:
          type: integer
          description: The user ID of the user who last modified this record.
          format: int32
          readOnly: true
          example: 12
        modifiedDate:
          type: string
          description: The date/time when this record was last modified.
          format: date-time
          readOnly: true
          example: 2022-01-10T00:00:00Z
        deletedDate:
          type: string
          description: The date when this record was deleted.
          format: date-time
          readOnly: true
        recalculate:
          type: boolean
          description: Specifies whether transactions created by this data source
            needs to re-calculate tax or not
        name:
          type: string
          description: Specifies the name of the extractor
          example: TestName
        externalState:
          type: string
          description: Specifies any implementation-specific information along with
            the DataSource.This field has no internal meaning in AvaTax and is purely
            for the convenience of the DataSource API user
          example: Test Path
      description: Data source object
      example:
        id: 1
        companyId: 12345
        source: Amazon v2 Extractor
        instance: 461b62b3-bef9-42b5-8169-c5171f3f1dc8
        isEnabled: false
        isSynced: false
        isAuthorized: false
        createdUserId: 123
        createdDate: 2022-01-10T00:00:00+00:00
        modifiedUserId: 12
        modifiedDate: 2022-01-10T00:00:00+00:00
        name: TestName
        externalState: Test Path
    DataSourceModelFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/DataSourceModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    NexusModelFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/NexusModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    NexusByTaxFormModel:
      type: object
      properties:
        formCode:
          type: string
          description: The code of the tax form that was requested
          example: UNKNOWNFORM
        companyId:
          type: integer
          description: The company ID of the company that was used to load the companyNexus
            array.  If this value is null, no company data was loaded.
          format: int32
          example: 12345
        nexusDefinitions:
          type: array
          description: A list of all Avalara-defined nexus that are relevant to this
            tax form
          example: []
          items:
            $ref: '#/components/schemas/NexusModel'
        companyNexus:
          type: array
          description: A list of all currently-defined company nexus that are related
            to this tax form
          example: []
          items:
            $ref: '#/components/schemas/NexusModel'
      description: Identifies all nexus that match a particular tax form
      example:
        formCode: UNKNOWNFORM
        companyId: 12345
        nexusDefinitions: []
        companyNexus: []
    TaxCodeModelFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/TaxCodeModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    TaxCodeTypesModel:
      type: object
      properties:
        types:
          type: object
          additionalProperties:
            type: string
          description: The list of Avalara-defined tax code types.
          example:
            D: Digital
            F: Freight
            O: Other
            P: Product
            S: Service
            U: Unknown
      description: "Information about Avalara-defined tax code types.\r\nThis list\
        \ is used when creating tax codes and tax rules."
      example:
        types:
          D: Digital
          F: Freight
          O: Other
          P: Product
          S: Service
          U: Unknown
    SubscriptionTypeModel:
      required:
      - description
      type: object
      properties:
        id:
          type: integer
          description: The unique ID number of this subscription type.
          format: int32
          readOnly: true
          example: 2
        description:
          maxLength: 255
          minLength: 0
          type: string
          description: The friendly name of the service this subscription type represents.
          example: AvaTaxPro
      description: Represents a service or a subscription type.
      example:
        id: 2
        description: AvaTaxPro
    SubscriptionTypeModelFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/SubscriptionTypeModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    SecurityRoleModel:
      type: object
      properties:
        id:
          type: integer
          description: The unique ID number of this security role.
          format: int32
          readOnly: true
          example: 3
        description:
          type: string
          description: A description of this security role
          readOnly: true
          example: AccountAdmin
      description: Represents a single security role.
      example:
        id: 3
        description: AccountAdmin
    SecurityRoleModelFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/SecurityRoleModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    TaxAuthorityModel:
      required:
      - id
      - name
      type: object
      properties:
        id:
          type: integer
          description: The unique ID number of this tax authority.
          format: int32
          example: 12345
        name:
          maxLength: 128
          minLength: 0
          type: string
          description: The friendly name of this tax authority.
          example: COLORADO
        taxAuthorityTypeId:
          type: integer
          description: The type of this tax authority.
          format: int32
          example: 45
        jurisdictionId:
          type: integer
          description: The unique ID number of the jurisdiction for this tax authority.
          format: int32
          example: 12345
      description: Tax Authority Model
      example:
        id: 12345
        name: COLORADO
        taxAuthorityTypeId: 45
        jurisdictionId: 12345
    TaxAuthorityModelFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/TaxAuthorityModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    TaxAuthorityFormModel:
      required:
      - formName
      - taxAuthorityId
      type: object
      properties:
        taxAuthorityId:
          type: integer
          description: The unique ID number of the tax authority.
          format: int32
          example: 69
        formName:
          maxLength: 50
          minLength: 0
          type: string
          description: The form name of the form for this tax authority.
          example: CABOE401A2
      description: Represents a form that can be filed with a tax authority.
      example:
        taxAuthorityId: 69
        formName: CABOE401A2
    TaxAuthorityFormModelFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/TaxAuthorityFormModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    ParameterUsageModel:
      type: object
      properties:
        id:
          type: integer
          description: The unique ID number of this property.
          format: int64
          example: 12345
        parameterId:
          type: integer
          description: The id of the parameter.
          format: int64
          example: 12345
        productCode:
          type: string
          description: Product code for the parameter usage item.
          example: PC080100
        country:
          type: string
          description: The country for the parameter usage item.
          example: US
        region:
          type: string
          description: The state for the parameter usage item.
          example: CA
        systemId:
          type: integer
          description: System Id for the parameter usage item
          format: int32
          example: 0
        taxTypeId:
          type: string
          description: tax type for the parameter usage item.
          example: EWaste
        attributeType:
          type: string
          description: The type of parameter as determined by its application, e.g.
            Product, Transaction, Calculated
          example: Product
        name:
          type: string
          description: The name of the property.  To use this property, add a field
            on the `parameters` object of a [CreateTransaction](https://developer.avalara.com/api-reference/avatax/rest/v2/methods/Transactions/CreateTransaction/)
            call.
          example: ScreenSize
        dataType:
          type: string
          description: The data type of the property.
          example: NumericMeasured
        helpText:
          type: string
          description: "Help text to be shown to the user when they are filling out\
            \ this parameter.  Help text may include HTML links to additional\r\n\
            content with more information about a parameter."
          example: A diagonal length measure of a rectangular screen along it's surface;
            indicative of it's total surface area.
        label:
          type: string
          description: Label that helps the user to identify a parameter
          example: Screen Size
        helpUrl:
          type: string
          description: A help url that provides more information about the parameter
        values:
          type: array
          description: If the parameter is of enumeration data type, then this list
            will be populated with all of the possible enumeration values.
          items:
            type: string
        measurementType:
          type: string
          description: The unit of measurement type of the parameter
          example: Length
      description: usage of system defined parameters.
      example:
        id: 12345
        parameterId: 12345
        productCode: PC080100
        country: US
        region: CA
        systemId: 0
        taxTypeId: EWaste
        attributeType: Product
        name: ScreenSize
        dataType: NumericMeasured
        helpText: A diagonal length measure of a rectangular screen along it's surface;
          indicative of it's total surface area.
        label: Screen Size
        measurementType: Length
    ParameterUsageModelFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/ParameterUsageModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    ClassificationParameterUsageMapModel:
      type: object
      properties:
        id:
          type: integer
          description: The unique ID number of this property.
          format: int64
          example: 12345
        parameterId:
          type: integer
          description: The id of the parameter.
          format: int64
          example: 12345
        taxTypeGroupId:
          type: string
          description: tax type group id for the classification parameter usage item.
          example: EWaste
        visibility:
          type: string
          description: This defines if the parameter is recommeded ,optional or mandatory
          example: Required
          enum:
          - Required
          - Recommended
          - Optional
          - Conditional
          x-enum-metadata:
            name: Visibility
            values:
            - name: Required
              value: 0
            - name: Recommended
              value: 1
            - name: Optional
              value: 2
            - name: Conditional
              value: 3
        attributeType:
          type: string
          description: The type of parameter as determined by its application, e.g.
            Product, Transaction, Calculated
          example: Product
        name:
          type: string
          description: The name of the property.  To use this property, add a field
            on the `parameters` object of a [CreateTransaction](https://developer.avalara.com/api-reference/avatax/rest/v2/methods/Transactions/CreateTransaction/)
            call.
          example: ScreenSize
        dataType:
          type: string
          description: The data type of the property.
          example: NumericMeasured
        helpText:
          type: string
          description: "Help text to be shown to the user when they are filling out\
            \ this parameter.  Help text may include HTML links to additional\r\n\
            content with more information about a parameter."
          example: A diagonal length measure of a rectangular screen along it's surface;
            indicative of it's total surface area.
        label:
          type: string
          description: Label that helps the user to identify a parameter
          example: Screen Size
        helpUrl:
          type: string
          description: A help url that provides more information about the parameter
        values:
          type: array
          description: If the parameter is of enumeration data type, then this list
            will be populated with all of the possible enumeration values.
          items:
            type: string
        measurementType:
          type: string
          description: The unit of measurement type of the parameter
          example: Length
      description: usage of system defined parameters.
      example:
        id: 12345
        parameterId: 12345
        taxTypeGroupId: EWaste
        visibility: Required
        attributeType: Product
        name: ScreenSize
        dataType: NumericMeasured
        helpText: A diagonal length measure of a rectangular screen along it's surface;
          indicative of it's total surface area.
        label: Screen Size
        measurementType: Length
    ClassificationParameterUsageMapModelFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/ClassificationParameterUsageMapModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    ReturnsParameterUsageModel:
      type: object
      properties:
        id:
          type: integer
          description: The unique ID number of this property.
          format: int32
          example: 12345
        parameterId:
          type: integer
          description: The id of the parameter.
          format: int64
          example: 12345
        productCode:
          type: string
          description: Product code for the return parameter usage item.
          example: PC080100
        taxTypeId:
          type: string
          description: tax type for the returns parameter usage item.
          example: LandedCost
        attributeType:
          type: string
          description: The type of parameter as determined by its application, e.g.
            Product, Transaction, Calculated
          example: Product
        name:
          type: string
          description: The name of the property.  To use this property, add a field
            on the `parameters` object of a [CreateTransaction](https://developer.avalara.com/api-reference/avatax/rest/v2/methods/Transactions/CreateTransaction/)
            call.
          example: ScreenSize
        dataType:
          type: string
          description: The data type of the property.
          example: NumericMeasured
        helpText:
          type: string
          description: "Help text to be shown to the user when they are filling out\
            \ this parameter.  Help text may include HTML links to additional\r\n\
            content with more information about a parameter."
          example: A diagonal length measure of a rectangular screen along it's surface;
            indicative of it's total surface area.
        label:
          type: string
          description: Label that helps the user to identify a parameter
          example: Screen Size
        helpUrl:
          type: string
          description: A help url that provides more information about the parameter
        values:
          type: array
          description: If the parameter is of enumeration data type, then this list
            will be populated with all of the possible enumeration values.
          items:
            type: string
        measurementType:
          type: string
          description: The unit of measurement type of the parameter
          example: Length
      description: usage of system defined parameters for returns.
      example:
        id: 12345
        parameterId: 12345
        productCode: PC080100
        taxTypeId: LandedCost
        attributeType: Product
        name: ScreenSize
        dataType: NumericMeasured
        helpText: A diagonal length measure of a rectangular screen along it's surface;
          indicative of it's total surface area.
        label: Screen Size
        measurementType: Length
    ReturnsParameterUsageModelFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/ReturnsParameterUsageModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    ParameterModel:
      type: object
      properties:
        id:
          type: integer
          description: The unique ID number of this property.
          format: int64
          example: 12345
        category:
          type: string
          description: "DEPRECATED - Date: 07/25/2018, Version: 18.7, Message: This\
            \ field is deprecated and will return null.\r\nThe category grouping of\
            \ this parameter.  When your user interface displays a large number of\
            \ parameters, they should\r\nbe grouped by their category value."
          example: Lodging
          x-property-deprecation-info:
            date: 07/25/2018
            version: "18.7"
            message: This field is deprecated and will return null.
        name:
          type: string
          description: The name of the property.  To use this property, add a field
            on the `parameters` object of a [CreateTransaction](https://developer.avalara.com/api-reference/avatax/rest/v2/methods/Transactions/CreateTransaction/)
            call.
          example: NumberOfNights
        dataType:
          type: string
          description: The data type of the property.
          example: NumericMeasured
        helpText:
          type: string
          description: "Help text to be shown to the user when they are filling out\
            \ this parameter.  Help text may include HTML links to additional\r\n\
            content with more information about a parameter."
          example: Please enter the number of nights the customer stayed in your lodging;
            whole numbers only.
        serviceTypes:
          type: array
          description: A list of service types to which this parameter applies.
          example:
          - AvaLodging
          items:
            type: string
        prompt:
          type: string
          description: "DEPRECATED - Date: 07/25/2018, Version: 18.7, Message: This\
            \ field is deprecated and will return null.\r\nThe prompt you should use\
            \ when displaying this parameter to a user.  For example, if your user\
            \ interface displays a\r\nparameter in a text box, this is the label you\
            \ should use to identify that text box."
          example: Lodging Number of Nights
          x-property-deprecation-info:
            date: 07/25/2018
            version: "18.7"
            message: This field is deprecated and will return null.
        regularExpression:
          type: string
          description: "DEPRECATED - Date: 07/25/2018, Version: 18.7, Message: This\
            \ field is deprecated and will return null.\r\nIf your user interface\
            \ permits client-side validation of parameters, this string is a regular\
            \ expression you can use\r\nto validate the user's data entry prior to\
            \ submitting a tax request."
          example: \d*
          x-property-deprecation-info:
            date: 07/25/2018
            version: "18.7"
            message: This field is deprecated and will return null.
        label:
          type: string
          description: Label that helps the user to identify a parameter
          example: lodging
        helpUrl:
          type: string
          description: A help url that provides more information about the parameter
          example: www.example.com/lodging
        attributeType:
          type: string
          description: The type of parameter as determined by its application, e.g.
            Product, Transaction, Calculated
        values:
          type: array
          description: If the parameter is of enumeration data type, then this list
            will be populated with all of the possible enumeration values.
          items:
            type: string
        measurementType:
          type: string
          description: The unit of measurement type of the parameter
        isNeededForCalculation:
          type: boolean
          description: This field identifies if parameter is needed for calculation
          example: true
        isNeededForReturns:
          type: boolean
          description: This field identifies if parameter is needed for returns
          example: false
        isNeededForClassification:
          type: boolean
          description: This field identifies if parameter is needed for classification
          example: false
      description: An extra property that can change the behavior of tax transactions.
      example:
        id: 12345
        category: Lodging
        name: NumberOfNights
        dataType: NumericMeasured
        helpText: Please enter the number of nights the customer stayed in your lodging;
          whole numbers only.
        serviceTypes:
        - AvaLodging
        prompt: Lodging Number of Nights
        regularExpression: \d*
        label: lodging
        helpUrl: www.example.com/lodging
        isNeededForCalculation: true
        isNeededForReturns: false
        isNeededForClassification: false
    ParameterModelFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/ParameterModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    LocationQuestionModel:
      required:
      - description
      - id
      - question
      type: object
      properties:
        id:
          type: integer
          description: The unique ID number of this location setting type
          format: int32
          example: 1
        question:
          type: string
          description: This is the prompt for this question
          example: State Assigned Code
        description:
          type: string
          description: "If additional information is available about the location\
            \ setting, this contains descriptive text to help\r\nyou identify the\
            \ correct value to provide in this setting."
          example: ""
        regularExpression:
          type: string
          description: If available, this regular expression will verify that the
            input from the user is in the expected format.
        exampleValue:
          type: string
          description: If available, this is an example value that you can demonstrate
            to the user to show what is expected.
        jurisdictionName:
          type: string
          description: Indicates which jurisdiction requires this question
        jurisdictionType:
          type: string
          description: Indicates which type of jurisdiction requires this question
          example: Country
          enum:
          - Country
          - State
          - County
          - City
          - Special
          x-enum-metadata:
            name: JurisdictionType
            values:
            - name: Country
              value: 0
            - name: State
              value: 1
            - name: County
              value: 2
            - name: City
              value: 3
            - name: Special
              value: 4
        jurisdictionCountry:
          type: string
          description: Indicates the country that this jurisdiction belongs to
        jurisdictionRegion:
          type: string
          description: Indicates the state, region, or province that this jurisdiction
            belongs to
        helpText:
          type: string
          description: Help and guidance for this specific question
        maxLength:
          type: integer
          description: Maximum length of the answer string
          format: int32
        required:
          type: boolean
          description: True if this question must be answered for this filing calendar
          example: false
        dataType:
          type: string
          description: Data type of the answer
        staticOptions:
          type: string
          description: ""
        unique:
          type: boolean
          description: ""
          example: false
      description: Information about questions that the local jurisdictions require
        for each location
      example:
        id: 1
        question: State Assigned Code
        description: ""
        jurisdictionType: Country
        required: false
        unique: false
    LocationQuestionModelFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/LocationQuestionModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    IsoLocalizedName:
      type: object
      properties:
        languageAlpha2Code:
          type: string
          description: "The two-character alphanumeric code identifying the language\
            \ in which this name is used.\r\n            \r\nNote that languageAlpha2Code\
            \ and language3AlphaCode refer to the same language."
          example: en
        languageAlpha3Code:
          type: string
          description: "The three-character alphanumeric code identifying the language\
            \ in which this name is used.\r\n            \r\nNote that languageAlpha2Code\
            \ and language3AlphaCode refer to the same language."
          example: eng
        name:
          type: string
          description: The name of this geographic entity as known in this language.
          example: United States
      description: "Represents a language-specific localized name of a particular\
        \ geographic entity such\r\nas a country or a region."
      example:
        languageAlpha2Code: en
        languageAlpha3Code: eng
        name: United States
    IsoCountryModel:
      type: object
      properties:
        code:
          type: string
          description: The two character ISO 3166 country code
          example: FR
        alpha3Code:
          type: string
          description: The three character ISO 3166 country code
        name:
          type: string
          description: "The full name of this country in uppercase.\r\n          \
            \  \r\nFor names in proper or formal case, or for names in other languages,\
            \ please examine the `localizedNames` element for an appropriate name."
          example: France
        isEuropeanUnion:
          type: boolean
          description: True if this country is a member of the European Union
          example: true
        localizedNames:
          type: array
          description: "A list of localized names in a variety of languages.\r\n \
            \           \r\nThis list is maintained by the International Standards\
            \ Organization."
          items:
            $ref: '#/components/schemas/IsoLocalizedName'
        addressesRequireRegion:
          type: boolean
          description: Whether or not this country requires a region in postal addresses.
          example: false
      description: Represents an ISO 3166 recognized country
      example:
        code: FR
        name: France
        isEuropeanUnion: true
        addressesRequireRegion: false
    IsoCountryModelFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/IsoCountryModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    IsoRegionModel:
      type: object
      properties:
        countryCode:
          type: string
          description: The two-character ISO 3166 country code this region belongs
            to
          example: US
        code:
          type: string
          description: The three character ISO 3166 region code
          example: CA
        name:
          type: string
          description: "The full name, using localized characters, for this region,\
            \ in uppercase.\r\n            \r\nFor names in proper or formal case,\
            \ or for names in other languages, please examine the `localizedNames`\
            \ element for an appropriate name."
          example: California
        classification:
          type: string
          description: The word in the local language that classifies what type of
            a region this represents
          example: State
        streamlinedSalesTax:
          type: boolean
          description: "For the United States, this flag indicates whether a U.S.\
            \ State participates in the Streamlined\r\nSales Tax program.  For countries\
            \ other than the US, this flag is null."
        localizedNames:
          type: array
          description: "A list of localized names in a variety of languages.\r\n \
            \           \r\nThis list is maintained by the International Standards\
            \ Organization."
          items:
            $ref: '#/components/schemas/IsoLocalizedName'
        isRegionTaxable:
          type: boolean
          description: Whether the region collects tax or not. This field will be
            populated for US country only and will be null for all the other countries.
      description: Represents a region, province, or state within a country
      example:
        countryCode: US
        code: CA
        name: California
        classification: State
    IsoRegionModelFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/IsoRegionModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    EntityUseCodeModel:
      type: object
      properties:
        code:
          type: string
          description: The Avalara-recognized entity use code for this definition
          example: A
        name:
          type: string
          description: The name of this entity use code
          example: FEDERAL GOV
        description:
          type: string
          description: Text describing the meaning of this use code
          example: ""
        validCountries:
          type: array
          description: A list of countries where this use code is valid
          example:
          - US
          items:
            type: string
      description: Represents a code describing the intended use for a product that
        may affect its taxability
      example:
        code: A
        name: FEDERAL GOV
        description: ""
        validCountries:
        - US
    EntityUseCodeModelFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/EntityUseCodeModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    PreferredProgramModel:
      type: object
      properties:
        id:
          type: integer
          description: The unique ID number representing this preferred program.
          format: int32
          example: 99
        code:
          type: string
          description: "A code that identifies this preferred program.  To select\
            \ this program, specify this code\r\nvalue in the `AvaTax.LC.PreferredProgram`\
            \ parameter."
          example: NAFTA
        originCountry:
          type: string
          description: The ISO 3166 country code for the origin permitted by this
            program
          example: US
        destinationCountry:
          type: string
          description: The ISO 3166 country code for the destination permitted by
            this program
          example: MX
        effectiveDate:
          type: string
          description: "The earliest date for which this preferred program can be\
            \ used in AvaTax.  If `null`, this preferred program\r\nis valid for all\
            \ dates earlier than `endDate`."
          format: date
        endDate:
          type: string
          description: "The latest date for which this preferred program can be used\
            \ in AvaTax.  If `null`, this preferred program\r\nis valid for all dates\
            \ later than `effectiveDate`."
          format: date
      description: "A preferred program is a customs and/or duty program that can\
        \ be used to handle cross-border transactions.\r\nCustomers who sign up for\
        \ a preferred program may obtain better terms for their customs and duty payments.\r\
        \n            \r\nTo indicate that your company has signed up for a preferred\
        \ program, specify the `code` value from this\r\nobject as the value for the\
        \ `AvaTax.LC.PreferredProgram` parameter in your transaction."
      example:
        id: 99
        code: NAFTA
        originCountry: US
        destinationCountry: MX
        effectiveDate: 2018-01-01
        endDate: 9999-12-31
    PreferredProgramModelFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/PreferredProgramModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    CurrencyModel:
      type: object
      properties:
        code:
          type: string
          description: The ISO 4217 currency code for this currency.
          example: AED
        description:
          type: string
          description: A friendly human-readable name representing this currency.
          example: UAE Dirham
        decimalDigits:
          type: integer
          description: The number of decimal digits to use when formatting a currency
            value for display.
          format: int32
          example: 2
      description: Represents an ISO 4217 currency code used for designating the currency
        of a transaction.
      example:
        code: AED
        description: UAE Dirham
        decimalDigits: 2
    CurrencyModelFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/CurrencyModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    ProductSystemCountryModel:
      type: object
      properties:
        systemCountryId:
          type: integer
          description: Its Integer SystemCountryId value for SystemCountry
          format: int32
          example: 1
        systemId:
          type: integer
          description: Its Integer SystemId value for SystemCountry
          format: int32
          example: 1
        country:
          type: string
          description: string value of country code for SystemCountry
          example: US
        effDate:
          type: string
          description: DateTime as EffDate for SystemCountry
          format: date-time
          example: 2022-01-10T00:00:00Z
        endDate:
          type: string
          description: DateTime as EffDate for SystemCountry
          format: date-time
      description: Represents a System Country.
      example:
        systemCountryId: 1
        systemId: 1
        country: US
        effDate: 2022-01-10T00:00:00+00:00
        endDate: 9999-12-31T00:00:00
    ProductClassificationSystemModel:
      type: object
      properties:
        systemId:
          type: integer
          description: Its Integer SystemId value for System
          format: int32
          example: 1
        systemCode:
          type: string
          description: The System code for this System.
          example: abc
        description:
          type: string
          description: A friendly human-readable name representing this System.
          example: xyz
        customsValue:
          type: string
          description: custom value set for the system
          example: pqr
        countries:
          type: array
          description: List of all countries that belong to the system including
          items:
            $ref: '#/components/schemas/ProductSystemCountryModel'
      description: Represents a product classification system.
      example:
        systemId: 1
        systemCode: abc
        description: xyz
        customsValue: pqr
    ProductClassificationSystemModelFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/ProductClassificationSystemModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    TaxAuthorityTypeModel:
      required:
      - description
      - id
      type: object
      properties:
        id:
          type: integer
          description: The unique ID number of this tax Authority customer type.
          format: int32
          example: 0
        description:
          type: string
          description: The description name of this tax authority type.
          example: County
        taxAuthorityGroup:
          type: string
          description: Tax Authority Group
          example: LocalCounty
      description: Tax Authority Type Model
      example:
        id: 0
        description: County
        taxAuthorityGroup: LocalCounty
    TaxAuthorityTypeModelFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/TaxAuthorityTypeModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    NoticeStatusModel:
      required:
      - description
      - id
      type: object
      properties:
        id:
          type: integer
          description: The unique ID number of this tax authority type.
          format: int32
          example: 12345
        description:
          type: string
          description: The description name of this tax authority type.
          example: City
        isOpen:
          type: boolean
          description: True if a tax notice in this status is considered 'open' and
            has more work expected to be done before it is closed.
          example: false
        sortOrder:
          type: integer
          description: If a list of status values is to be displayed in a dropdown,
            they should be displayed in this numeric order.
          format: int32
          example: 0
      description: Tax Notice Status Model
      example:
        id: 12345
        description: City
        isOpen: false
        sortOrder: 0
    NoticeStatusModelFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/NoticeStatusModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    NoticeCustomerTypeModel:
      required:
      - description
      - id
      type: object
      properties:
        id:
          type: integer
          description: The unique ID number of this tax notice customer type.
          format: int32
          example: 12345
        description:
          type: string
          description: The description name of this tax authority type.
          example: City
        activeFlag:
          type: boolean
          description: A flag if the type is active
          example: true
        sortOrder:
          type: integer
          description: sort order of the types
          format: int32
          example: 5
      description: Tax Authority Model
      example:
        id: 12345
        description: City
        activeFlag: true
        sortOrder: 5
    NoticeCustomerTypeModelFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/NoticeCustomerTypeModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    NoticeReasonModel:
      required:
      - description
      - id
      type: object
      properties:
        id:
          type: integer
          description: The unique ID number of this tax notice customer type.
          format: int32
          example: 1
        description:
          type: string
          description: The description name of this tax authority type.
          example: AvaTax Returns
        activeFlag:
          type: boolean
          description: A flag if the type is active
          example: true
        sortOrder:
          type: integer
          description: sort order of the types
          format: int32
          example: 5
      description: Tax Notice Reason Model
      example:
        id: 1
        description: AvaTax Returns
        activeFlag: true
        sortOrder: 5
    NoticeReasonModelFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/NoticeReasonModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    FilingFrequencyModel:
      required:
      - description
      - id
      type: object
      properties:
        id:
          type: integer
          description: The unique ID number of this filing frequency.
          format: int32
          example: 1
        description:
          type: string
          description: The description name of this filing frequency
          example: Monthly
      description: FilingFrequency Model
      example:
        id: 1
        description: Monthly
    FilingFrequencyModelFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/FilingFrequencyModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    NoticeFilingTypeModel:
      required:
      - description
      - id
      type: object
      properties:
        id:
          type: integer
          description: The unique ID number of this tax notice customer type.
          format: int32
          example: 1
        description:
          type: string
          description: The description name of this tax authority type.
          example: 'Electronic Return '
        activeFlag:
          type: boolean
          description: A flag if the type is active
          example: true
        sortOrder:
          type: integer
          description: sort order of the types
          format: int32
          example: 5
      description: Tax Notice FilingType Model
      example:
        id: 1
        description: 'Electronic Return '
        activeFlag: true
        sortOrder: 5
    NoticeFilingTypeModelFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/NoticeFilingTypeModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    NoticeTypeModel:
      required:
      - description
      - id
      type: object
      properties:
        id:
          type: integer
          description: The unique ID number of this tax notice customer type.
          format: int32
          example: 2
        description:
          type: string
          description: The description name of this tax authority type.
          example: Notices
        activeFlag:
          type: boolean
          description: A flag if the type is active
          example: true
        sortOrder:
          type: integer
          description: sort order of the types
          format: int32
          example: 10
      description: Tax Notice Type Model
      example:
        id: 2
        description: Notices
        activeFlag: true
        sortOrder: 10
    NoticeTypeModelFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/NoticeTypeModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    NoticeCustomerFundingOptionModel:
      required:
      - description
      - id
      type: object
      properties:
        id:
          type: integer
          description: The unique ID number of this tax notice customer FundingOption.
          format: int32
          example: 1
        description:
          type: string
          description: The description name of this tax authority FundingOption.
          example: Pull
        activeFlag:
          type: boolean
          description: A flag if the FundingOption is active
          example: true
        sortOrder:
          type: integer
          description: sort order of the FundingOptions
          format: int32
          example: 5
      description: Tax Authority Model
      example:
        id: 1
        description: Pull
        activeFlag: true
        sortOrder: 5
    NoticeCustomerFundingOptionModelFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/NoticeCustomerFundingOptionModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    NoticePriorityModel:
      required:
      - description
      - id
      type: object
      properties:
        id:
          type: integer
          description: The unique ID number of this tax notice customer Priority.
          format: int32
          example: 2
        description:
          type: string
          description: The description name of this tax authority Priority.
          example: High
        activeFlag:
          type: boolean
          description: A flag if the Priority is active
          example: true
        sortOrder:
          type: integer
          description: sort order of the Prioritys
          format: int32
          example: 10
      description: Tax Notice Priority Model
      example:
        id: 2
        description: High
        activeFlag: true
        sortOrder: 10
    NoticePriorityModelFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/NoticePriorityModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    NoticeResponsibilityModel:
      type: object
      properties:
        id:
          type: integer
          description: The unique ID number of this notice responsibility.
          format: int32
          example: 11
        description:
          type: string
          description: The description name of this notice responsibility
          example: Customer-Invalid login (Return filed manual)
        isActive:
          type: boolean
          description: Defines if the responsibility is active
          example: true
        sortOrder:
          type: integer
          description: The sort order of this responsibility
          format: int32
          example: 55
      description: NoticeResponsibility Model
      example:
        id: 11
        description: Customer-Invalid login (Return filed manual)
        isActive: true
        sortOrder: 55
    NoticeResponsibilityModelFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/NoticeResponsibilityModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    NoticeRootCauseModel:
      type: object
      properties:
        id:
          type: integer
          description: The unique ID number of this notice RootCause.
          format: int32
          example: 11
        description:
          type: string
          description: The description name of this notice RootCause
          example: Customer-Invalid login (Return filed manual)
        isActive:
          type: boolean
          description: Defines if the RootCause is active
          example: true
        sortOrder:
          type: integer
          description: The sort order of this RootCause
          format: int32
          example: 55
      description: NoticeRootCause Model
      example:
        id: 11
        description: Customer-Invalid login (Return filed manual)
        isActive: true
        sortOrder: 55
    NoticeRootCauseModelFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/NoticeRootCauseModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    requiredFilingCalendarDataFieldModel:
      type: object
      properties:
        name:
          type: string
          description: Region of the verification request
          example: RegistrationId
        description:
          type: string
          description: Username that we are using for verification
          example: Id Used for Registration
      description: Represents a verification request using Skyscraper for a company
      example:
        name: RegistrationId
        description: Id Used for Registration
    SkyscraperStatusModel:
      type: object
      properties:
        name:
          type: string
          description: The specific name of the returns available in skyscraper
          example: AL
        taxFormCodes:
          type: array
          description: The tax form codes available to file through skyscrper
          example:
          - USAL21009501
          items:
            type: string
        country:
          type: string
          description: The country of the returns
          example: US
        scraperType:
          type: string
          description: The Scraper type
          example: Login
          enum:
          - Login
          - CustomerDorData
          x-enum-metadata:
            name: ScraperType
            values:
            - name: Login
              value: 1
            - name: CustomerDorData
              value: 2
        isAvailable:
          type: boolean
          description: Indicates if the return is currently available
          example: true
        expectedResponseTime:
          type: string
          description: The expected response time of the call
          example: 00:30:00
        message:
          type: string
          description: Message on the returns
          example: Message
        requiredFilingCalendarDataFields:
          type: array
          description: A list of required fields to file
          example:
          - name: RegistrationId
            description: Id Used for Registration
          items:
            $ref: '#/components/schemas/requiredFilingCalendarDataFieldModel'
      description: Represents a list of statuses of returns available in skyscraper
      example:
        name: AL
        taxFormCodes:
        - USAL21009501
        country: US
        scraperType: Login
        isAvailable: true
        expectedResponseTime: 00:30:00
        message: Message
        requiredFilingCalendarDataFields:
        - name: RegistrationId
          description: Id Used for Registration
    SkyscraperStatusModelFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/SkyscraperStatusModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    JurisdictionModel:
      required:
      - code
      - name
      - signatureCode
      - type
      type: object
      properties:
        code:
          type: string
          description: The code that is used to identify this jurisdiction
          example: "53"
        name:
          type: string
          description: The name of this jurisdiction
          example: WASHINGTON
        type:
          type: string
          description: The type of the jurisdiction, indicating whether it is a country,
            state/region, city, for example.
          example: Country
          enum:
          - Country
          - State
          - County
          - City
          - Special
          x-enum-metadata:
            name: JurisdictionType
            values:
            - name: Country
              value: 0
            - name: State
              value: 1
            - name: County
              value: 2
            - name: City
              value: 3
            - name: Special
              value: 4
        rate:
          type: number
          description: The base rate of tax specific to this jurisdiction.
          format: double
          example: 0.06
        salesRate:
          type: number
          description: The "Sales" tax rate specific to this jurisdiction.
          format: double
          example: 0.06
        signatureCode:
          type: string
          description: The Avalara-supplied signature code for this jurisdiction.
          example: ""
        region:
          type: string
          description: "Name or ISO 3166 code identifying the region within the country.\r\
            \n            \r\nThis field supports many different region identifiers:\r\
            \n * Two and three character ISO 3166 region codes\r\n * Fully spelled\
            \ out names of the region in ISO supported languages\r\n * Common alternative\
            \ spellings for many regions\r\n            \r\nFor a full list of all\
            \ supported codes and names, please see the Definitions API `ListRegions`."
          example: WA
        useRate:
          type: number
          description: The "Seller's Use" tax rate specific to this jurisdiction.
          format: double
          example: 0.06
        city:
          type: string
          description: The city name of this jurisdiction
        county:
          type: string
          description: The county name of this jurisdiction
        country:
          type: string
          description: "Name or ISO 3166 code identifying the country of this jurisdiction.\r\
            \n            \r\nThis field supports many different country identifiers:\r\
            \n * Two character ISO 3166 codes\r\n * Three character ISO 3166 codes\r\
            \n * Fully spelled out names of the country in ISO supported languages\r\
            \n * Common alternative spellings for many countries\r\n            \r\
            \nFor a full list of all supported codes and names, please see the Definitions\
            \ API `ListCountries`."
        shortName:
          type: string
          description: A short name of the jurisidiction
        stateFips:
          type: string
          description: State FIPS code
        countyFips:
          type: string
          description: County FIPS code
        placeFips:
          type: string
          description: City FIPS code
        id:
          type: integer
          description: Unique AvaTax Id of this Jurisdiction
          format: int32
        effectiveDate:
          type: string
          description: The date this jurisdiction starts to take effect on tax calculations
          format: date-time
        endDate:
          type: string
          description: The date this jurisdiction stops to take effect on tax calculations
          format: date-time
      description: Represents information about a single legal taxing jurisdiction
      example:
        code: "53"
        name: WASHINGTON
        type: State
        rate: 0.06
        salesRate: 0.06
        signatureCode: ""
        region: WA
        useRate: 0.06
    JurisdictionOverrideModel:
      required:
      - description
      - jurisdictions
      - postalCode
      - region
      - taxRegionId
      type: object
      properties:
        id:
          type: integer
          description: The unique ID number of this override.
          format: int32
          readOnly: true
          example: 0
        accountId:
          type: integer
          description: The unique ID number assigned to this account.
          format: int32
          example: 0
        description:
          maxLength: 50
          minLength: 0
          type: string
          description: A description of why this jurisdiction override was created.
          example: a test JO
        line1:
          maxLength: 50
          minLength: 0
          type: string
          description: The street address of the physical location affected by this
            override.
          example: 5500 Irvine Center Dr
        city:
          maxLength: 50
          minLength: 0
          type: string
          description: The city address of the physical location affected by this
            override.
          example: Irvine
        region:
          type: string
          description: "Name or ISO 3166 code identifying the region within the country\
            \ to be affected by this override.\r\n            \r\nNote that only United\
            \ States addresses are affected by the jurisdiction override system.\r\
            \n            \r\nThis field supports many different region identifiers:\r\
            \n * Two and three character ISO 3166 region codes\r\n * Fully spelled\
            \ out names of the region in ISO supported languages\r\n * Common alternative\
            \ spellings for many regions\r\n            \r\nFor a full list of all\
            \ supported codes and names, please see the Definitions API `ListRegions`."
          example: CA
        country:
          type: string
          description: "The two character ISO-3166 country code of the country affected\
            \ by this override.\r\n            \r\nNote that only United States addresses\
            \ are affected by the jurisdiction override system."
          readOnly: true
          example: US
        postalCode:
          maxLength: 11
          minLength: 0
          type: string
          description: The postal code of the physical location affected by this override.
          example: "92618"
        effectiveDate:
          type: string
          description: The date when this override first takes effect.  Set this value
            to null to affect all dates up to the end date.
          format: date
        endDate:
          type: string
          description: The date when this override will cease to take effect.  Set
            this value to null to never expire.
          format: date
        createdDate:
          type: string
          description: The date when this record was created.
          format: date-time
          readOnly: true
        createdUserId:
          type: integer
          description: The User ID of the user who created this record.
          format: int32
          readOnly: true
          example: 0
        modifiedDate:
          type: string
          description: The date/time when this record was last modified.
          format: date-time
          readOnly: true
        modifiedUserId:
          type: integer
          description: The user ID of the user who last modified this record.
          format: int32
          readOnly: true
          example: 0
        jurisdictions:
          type: array
          description: A list of the tax jurisdictions that will be assigned to this
            overridden address.
          items:
            $ref: '#/components/schemas/JurisdictionModel'
        taxRegionId:
          type: integer
          description: The TaxRegionId of the new location affected by this jurisdiction
            override.
          format: int32
          example: 0
        boundaryLevel:
          type: string
          description: The boundary level of this override
          readOnly: true
          example: Address
          enum:
          - Address
          - Zip9
          - Zip5
          x-enum-metadata:
            name: BoundaryLevel
            values:
            - name: Address
              value: 0
            - name: Zip9
              value: 1
            - name: Zip5
              value: 2
        isDefault:
          type: boolean
          description: True if this is a default boundary
      description: "Represents an override of tax jurisdictions for a specific address.\r\
        \n            \r\nDuring the time period represented by EffDate through EndDate,\
        \ all tax decisions for addresses matching\r\nthis override object will be\
        \ assigned to the list of jurisdictions designated in this object."
      example:
        id: 0
        accountId: 0
        description: a test JO
        line1: 5500 Irvine Center Dr
        city: Irvine
        region: CA
        country: US
        postalCode: "92618"
        effectiveDate: 2006-08-01
        endDate: 2099-01-12
        jurisdictions:
        - code: "53"
          name: WASHINGTON
          type: State
          rate: 0.06
          salesRate: 0.06
          signatureCode: ""
          region: WA
          useRate: 0.06
        taxRegionId: 0
        boundaryLevel: Address
        isDefault: false
    JurisdictionOverrideModelFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/JurisdictionOverrideModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    JurisdictionModelFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/JurisdictionModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    JurisdictionRateTypeTaxTypeMappingModel:
      type: object
      properties:
        id:
          type: integer
          description: The unique ID number of this Jurisdiction RateType TaxType
            Mapping.
          format: int32
          example: 0
        country:
          type: string
          description: "Name or ISO 3166 code identifying the country of this jurisdiction.\r\
            \n            \r\nThis field supports many different country identifiers:\r\
            \n * Two character ISO 3166 codes\r\n * Three character ISO 3166 codes\r\
            \n * Fully spelled out names of the country in ISO supported languages\r\
            \n * Common alternative spellings for many countries\r\n            \r\
            \nFor a full list of all supported codes and names, please see the Definitions\
            \ API `ListCountries`."
          example: US
        state:
          type: string
          description: "Name or ISO 3166 code identifying the region of this jurisdiction.\r\
            \n            \r\nThis field supports many different region identifiers:\r\
            \n * Two and three character ISO 3166 region codes\r\n * Fully spelled\
            \ out names of the region in ISO supported languages\r\n * Common alternative\
            \ spellings for many regions\r\n            \r\nFor a full list of all\
            \ supported codes and names, please see the Definitions API `ListRegions`."
          example: AL
        jurisdictionType:
          type: string
          description: Jurisdiction TypeId
          example: STA
        jurisdictionCode:
          type: string
          description: Jurisdiction Code
          example: "01"
        longName:
          type: string
          description: Jurisdiction long name
          example: ALABAMA
        taxTypeId:
          type: string
          description: Tax Type to which this jurisdiction is applicable
          example: S
        taxSubTypeId:
          type: string
          description: Tax Type to which this jurisdiction is applicable
          example: S
        taxTypeGroupId:
          type: string
          description: Tax Type Group to which this jurisdiction is applicable
          example: SalesAndUse
        rateTypeId:
          type: string
          description: Rate Type to which this jurisdiction is applicable
          example: G
        effectiveDate:
          type: string
          description: The date this jurisdiction starts to take effect on tax calculations
          format: date-time
          example: 2022-01-10T15:49:29.8908553Z
        endDate:
          type: string
          description: The date this jurisdiction stops to take effect on tax calculations
          format: date-time
          example: 2023-01-10T15:49:29.8908921Z
      description: Represents a Jurisdiction with applicable TaxType, TaxSubType and
        RateType.
      example:
        id: 0
        country: US
        state: AL
        jurisdictionType: STA
        jurisdictionCode: "01"
        longName: ALABAMA
        taxTypeId: S
        taxSubTypeId: S
        taxTypeGroupId: SalesAndUse
        rateTypeId: G
        effectiveDate: 2022-01-10T15:49:29.8908553+00:00
        endDate: 2023-01-10T15:49:29.8908921+00:00
    JurisdictionRateTypeTaxTypeMappingModelFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/JurisdictionRateTypeTaxTypeMappingModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    ResourceFileTypeModel:
      type: object
      properties:
        resourceFileTypeId:
          type: integer
          description: The resource file type id
          format: int32
          example: 1
        name:
          type: string
          description: The name of the file type
          example: TaxNoticeAttachment
      description: Resource File Type Model
      example:
        resourceFileTypeId: 1
        name: TaxNoticeAttachment
    ResourceFileTypeModelFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/ResourceFileTypeModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    RateTypeModel:
      type: object
      properties:
        id:
          type: string
          description: The unique ID number of this rate type.
          readOnly: true
          example: "1"
        description:
          type: string
          description: Description of this rate type.
          readOnly: true
          example: test
        country:
          type: string
          description: Country code for this rate type
          readOnly: true
          example: US
      description: Rate type Model
      example:
        id: "1"
        description: test
        country: US
    RateTypeModelFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/RateTypeModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    RateTypesModel:
      type: object
      properties:
        id:
          type: integer
          description: The unique ID number of this rate type.
          format: int32
          example: 503
        rateType:
          type: string
          description: The name of this rateType
          example: Alcohol
        description:
          type: string
          description: The description of this rate type.
          example: Alcohol
      description: Rate types Model
      example:
        id: 503
        rateType: Alcohol
        description: Alcohol
    RateTypesModelFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/RateTypesModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    FormMasterModel:
      type: object
      properties:
        id:
          type: integer
          description: Unique ID number of this form master object
          format: int32
          example: 2415
        formTypeId:
          type: integer
          description: The type of the form being submitted
          format: int32
          example: 0
        taxFormCode:
          type: string
          description: Unique tax form code representing this tax form
        legacyReturnName:
          type: string
          description: Legacy return name as known in the AvaFileForm table
          example: CABOE401A2
        taxFormName:
          type: string
          description: Human readable form summary name
          example: CA BOE 401 A2
        description:
          type: string
          description: Description of this tax form
          example: State, Local, and District Sales and Use Tax Return
        isEffective:
          type: boolean
          description: True if this form is available for use
          example: true
        country:
          type: string
          description: ISO 3166 code of the country that issued this tax form
          example: US
        region:
          type: string
          description: The region within which this form was issued
          example: CA
        authorityName:
          type: string
          description: Tax authority that issued the form
        shortCode:
          type: string
          description: DEPRECATED
        dueDay:
          type: integer
          description: Day of the month when the form is due
          format: int32
          example: 20
        delinquentDay:
          type: integer
          description: Day of the month on which the form is considered delinquent.
            Almost always the same as DueDay
          format: int32
        fiscalYearStartMonth:
          type: integer
          description: Month of the year the state considers as the first fiscal month
          format: int32
        hasMultiFrequencies:
          type: boolean
          description: Can form support multi frequencies
          example: false
        isPOARequired:
          type: boolean
          description: Does this tax authority require a power of attorney in order
            to speak to Avalara
          example: false
        isRegistrationRequired:
          type: boolean
          description: True if this form requires that the customer register with
            the authority
          example: false
        hasMultiRegistrationMethods:
          type: boolean
          description: Unused
          example: false
        hasSchedules:
          type: boolean
          description: Unused
          example: false
        hasMultiFilingMethods:
          type: boolean
          description: Unused
          example: false
        hasMultiPayMethods:
          type: boolean
          description: Unused
          example: false
        isEFTRequired:
          type: boolean
          description: Unused
        isFilePayMethodLinked:
          type: boolean
          description: Unused
          example: false
        mailingReceivedRuleId:
          type: integer
          description: Unused
          format: int32
          example: 0
        proofOfMailingId:
          type: integer
          description: Unused
          format: int32
          example: 0
        isNegAmountAllowed:
          type: boolean
          description: True if you can report a negative amount in a single jurisdiction
            on the form
        allowNegativeOverallTax:
          type: boolean
          description: True if the form overall can go negative
          example: false
        isNettingRequired:
          type: boolean
          description: Unused
          example: false
        roundingMethodId:
          type: integer
          description: Unused
          format: int32
          example: 0
        vendorDiscountAnnualMax:
          type: number
          description: Total amount of discounts that can be received by a vendor
            each year
          format: double
          example: 0.0
        versionsRequireAuthorityApproval:
          type: boolean
          description: Unused
          example: false
        outletReportingMethodId:
          type: integer
          description: Type of outlet reporting for this form
          format: int32
          example: 0
        hasReportingCodes:
          type: boolean
          description: Unused
          example: false
        hasPrepayments:
          type: boolean
          description: Not sure if used
          example: false
        grossIncludesInterstateSales:
          type: boolean
          description: Unused
          example: false
        grossIncludesTax:
          type: string
          description: Unused
        hasEfileFee:
          type: boolean
          description: Unused
          example: false
        hasEpayFee:
          type: boolean
          description: Unused
          example: false
        hasDependencies:
          type: boolean
          description: Unused
          example: false
        requiredEfileTrigger:
          type: string
          description: Unused
        requiredEftTrigger:
          type: string
          description: Unused
        vendorDiscountEfile:
          type: boolean
          description: Unused
          example: false
        vendorDiscountPaper:
          type: boolean
          description: Unused
          example: false
        peerReviewed:
          type: string
          description: Unused
        peerReviewedId:
          type: string
          description: Unused
        peerReviewedDate:
          type: string
          description: Unused
        createdUserId:
          type: integer
          description: ID of the Avalara user who created the form
          format: int32
          example: 0
        createdDate:
          type: string
          description: Date when form was created
          format: date-time
        modifiedUserId:
          type: integer
          description: ID of the Avalara user who modified the form
          format: int32
          example: 0
        modifiedDate:
          type: string
          description: Date when form was modified
          format: date-time
        dorAddressMailTo:
          type: string
          description: Mailing address of the department of revenue
        dorAddress1:
          type: string
          description: Mailing address of the department of revenue
        dorAddress2:
          type: string
          description: Mailing address of the department of revenue
        dorAddressCity:
          type: string
          description: Mailing address of the department of revenue
        dorAddressRegion:
          type: string
          description: Mailing address of the department of revenue
        dorAddressPostalCode:
          type: string
          description: Mailing address of the department of revenue
        dorAddressCountry:
          type: string
          description: Mailing address of the department of revenue
        zeroAddressMailTo:
          type: string
          description: Mailing address to use when a zero dollar form is filed
        zeroAddress1:
          type: string
          description: Mailing address to use when a zero dollar form is filed
        zeroAddress2:
          type: string
          description: Mailing address to use when a zero dollar form is filed
        zeroAddressCity:
          type: string
          description: Mailing address to use when a zero dollar form is filed
        zeroAddressRegion:
          type: string
          description: Mailing address to use when a zero dollar form is filed
        zeroAddressPostalCode:
          type: string
          description: Mailing address to use when a zero dollar form is filed
        zeroAddressCountry:
          type: string
          description: Mailing address to use when a zero dollar form is filed
        amendedAddressMailTo:
          type: string
          description: Mailing address to use when filing an amended return
        amendedAddress1:
          type: string
          description: Mailing address to use when filing an amended return
        amendedAddress2:
          type: string
          description: Mailing address to use when filing an amended return
        amendedAddressCity:
          type: string
          description: Mailing address to use when filing an amended return
        amendedAddressRegion:
          type: string
          description: Mailing address to use when filing an amended return
        amendedAddressPostalCode:
          type: string
          description: Mailing address to use when filing an amended return
        amendedAddressCountry:
          type: string
          description: Mailing address to use when filing an amended return
        onlineBackFiling:
          type: boolean
          description: Unused
          example: false
        onlineAmendedReturns:
          type: boolean
          description: Unused
          example: false
        prepaymentFrequency:
          type: string
          description: --Need Further Clarification
        outletLocationIdentifiersRequired:
          type: boolean
          description: Unused
        listingSortOrder:
          type: string
          description: --Need Further Clarification
        dorWebsite:
          type: string
          description: Link to the state department of revenue website, if available
        fileForAllOutlets:
          type: boolean
          description: --Need Further Clarification
          example: false
        paperFormsDoNotHaveDiscounts:
          type: boolean
          description: --Need Further Clarification
          example: false
        stackAggregation:
          type: boolean
          description: Internal behavior
          example: false
        roundingPrecision:
          type: string
          description: --Need Further Clarification
        inconsistencyTolerance:
          type: string
          description: --Need Further Clarification
        effDate:
          type: string
          description: Date when this form became effective
          format: date-time
        endDate:
          type: string
          description: Date when this form expired
          format: date-time
        visibleToCustomers:
          type: boolean
          description: True if this form can be shown to customers
          example: false
        requiresOutletSetup:
          type: boolean
          description: True if this form requires that you set up outlets in the state
          example: false
        achCreditAllowed:
          type: boolean
          description: True if this state permits payment by ACH Credit
          example: false
        reportLevel:
          type: string
          description: Jurisdiction level of the state
        postOfficeValidated:
          type: boolean
          description: True if this form is verified filed via email
          example: false
        stackAggregationOption:
          type: string
          description: Internal Avalara flag
        sstBehavior:
          type: string
          description: Internal Avalara flag
        nonSstBehavior:
          type: string
          description: Internal Avalara flag
        dorPhoneNumber:
          type: string
          description: Phone number of the department of revenue
        averageCheckClearDays:
          type: string
          description: Unused
        filterZeroRatedLineDetails:
          type: boolean
          description: Unused
          example: false
        allowsBulkFilingAccounts:
          type: boolean
          description: Unused
          example: false
        bulkAccountInstructionLink:
          type: string
          description: Unused
        registrationIdFormat:
          type: string
          description: Unused
        thresholdTrigger:
          type: string
          description: Unused
        transactionSortingOption:
          type: string
          description: Unused
        contentReviewFrequencyId:
          type: integer
          description: Unused
          format: int32
        aliasForFormMasterId:
          type: string
          description: Unused
      description: Represents information about a tax form known to Avalara
      example:
        id: 2415
        formTypeId: 0
        legacyReturnName: CABOE401A2
        taxFormName: CA BOE 401 A2
        description: State, Local, and District Sales and Use Tax Return
        isEffective: true
        country: US
        region: CA
        dueDay: 20
        hasMultiFrequencies: false
        isPOARequired: false
        isRegistrationRequired: false
        hasMultiRegistrationMethods: false
        hasSchedules: false
        hasMultiFilingMethods: false
        hasMultiPayMethods: false
        isEFTRequired: false
        isFilePayMethodLinked: false
        mailingReceivedRuleId: 0
        proofOfMailingId: 0
        isNegAmountAllowed: false
        allowNegativeOverallTax: false
        isNettingRequired: false
        roundingMethodId: 0
        vendorDiscountAnnualMax: 0
        versionsRequireAuthorityApproval: false
        outletReportingMethodId: 0
        hasReportingCodes: false
        hasPrepayments: false
        grossIncludesInterstateSales: false
        hasEfileFee: false
        hasEpayFee: false
        hasDependencies: false
        vendorDiscountEfile: false
        vendorDiscountPaper: false
        createdUserId: 0
        createdDate: 0001-01-01T00:00:00
        modifiedUserId: 0
        modifiedDate: 0001-01-01T00:00:00
        onlineBackFiling: false
        onlineAmendedReturns: false
        fileForAllOutlets: false
        paperFormsDoNotHaveDiscounts: false
        stackAggregation: false
        effDate: 2005-04-01T00:00:00
        endDate: 9999-12-31T00:00:00
        visibleToCustomers: false
        requiresOutletSetup: false
        achCreditAllowed: false
        postOfficeValidated: false
        filterZeroRatedLineDetails: false
        allowsBulkFilingAccounts: false
    FormMasterModelFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/FormMasterModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    TaxTypeGroupModel:
      type: object
      properties:
        id:
          type: integer
          description: The unique ID number of this tax type group.
          format: int32
          example: 1
        taxTypeGroup:
          type: string
          description: The unique human readable Id of this tax type group.
          example: SalesAndUse
        description:
          type: string
          description: The description of this tax type group.
          example: Sales and Use
        subscriptionTypeId:
          type: integer
          description: If this tax type group requires a subscription, this contains
            the ID number of the subscription type required to use it.
          format: int32
        subscriptionDescription:
          type: string
          description: If this tax type group requires a subscription, this contains
            the friendly name of the subscription type required to use it.
        tabName:
          type: string
          description: The name of the tab in the AvaTax website corresponding to
            this tax type group.
        showColumn:
          type: boolean
          description: True if this tax type group is displayed in the user interface
            of the AvaTax website.
        displaySequence:
          type: integer
          description: The order this record is being returned in the response
          format: int32
          example: 0
      description: Represents a tax type group
      example:
        id: 1
        taxTypeGroup: SalesAndUse
        description: Sales and Use
        displaySequence: 0
    TaxTypeGroupModelFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/TaxTypeGroupModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    TaxSubTypeModel:
      required:
      - description
      - id
      - taxSubType
      - taxTypeGroup
      type: object
      properties:
        id:
          type: integer
          description: The unique ID number of this tax sub-type.
          format: int32
          example: 1
        taxSubType:
          type: string
          description: The unique human readable Id of this tax sub-type.
          example: '*'
        description:
          type: string
          description: The description of this tax sub-type.
          example: ALL
        taxTypeGroup:
          type: string
          description: The upper level group of tax types.
      description: Represents a tax subtype
      example:
        id: 1
        taxSubType: '*'
        description: ALL
    TaxSubTypeModelFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/TaxSubTypeModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    NexusTaxTypeGroupModel:
      type: object
      properties:
        id:
          type: integer
          description: The unique ID number of this nexus tax type group.
          format: int32
          example: 1
        nexusTaxTypeGroupId:
          type: string
          description: The unique human readable Id of this nexus tax type group.
          example: SalesAndUse
        description:
          type: string
          description: The description of this nexus tax type group.
          example: Sales and Use
        subscriptionTypeId:
          type: integer
          description: If this tax type group requires a subscription, this contains
            the ID number of the subscription type required to use it.
          format: int32
        subscriptionDescription:
          type: string
          description: If this tax type group requires a subscription, this contains
            the friendly name of the subscription type required to use it.
        tabName:
          type: string
          description: The name of the tab in the AvaTax website corresponding to
            this tax type group.
        showColumn:
          type: boolean
          description: True if this tax type group is displayed in the user interface
            of the AvaTax website.
      description: Represents a group of tax types
      example:
        id: 1
        nexusTaxTypeGroupId: SalesAndUse
        description: Sales and Use
    NexusTaxTypeGroupModelFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/NexusTaxTypeGroupModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    CommunicationsTSPairModel:
      required:
      - serviceTypeId
      - transactionTypeId
      type: object
      properties:
        transactionTypeId:
          type: integer
          description: The numeric Id of the transaction type.
          format: int32
          example: 13
        serviceTypeId:
          type: integer
          description: The numeric Id of the service type.
          format: int32
          example: 6
        AvaTax.Communications.TransactionType:
          type: string
          description: The name of the transaction type.
        AvaTax.Communications.ServiceType:
          type: string
          description: The name of the service type.
        description:
          type: string
          description: The description of the transaction/service type pair.
          example: Basic monthly flat-rate charge for cellular/wireless service.
        requiredParameters:
          type: array
          description: List of the parameters (among Charge, Minutes and Lines) that
            will be used for calculation for this T/S pair.
          example:
          - AvaTax.Communications.Charge
          - AvaTax.Communications.Minutes
          items:
            type: string
      description: Represents a transaction/service type pair for telecommunications
        tax
      example:
        transactionTypeId: 13
        serviceTypeId: 6
        AvaTax.Communications.TransactionType: Cellular
        AvaTax.Communications.ServiceType: Access Charge
        description: Basic monthly flat-rate charge for cellular/wireless service.
        requiredParameters:
        - AvaTax.Communications.Charge
        - AvaTax.Communications.Minutes
    CommunicationsTSPairModelFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/CommunicationsTSPairModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    CommunicationsTransactionTypeModel:
      required:
      - transactionTypeId
      type: object
      properties:
        transactionTypeId:
          type: integer
          description: The numeric Id of the transaction type.
          format: int32
          example: 13
        AvaTax.Communications.TransactionType:
          type: string
          description: The name of the transaction type.
      description: Represents information about a type of telecommunications transaction
      example:
        transactionTypeId: 13
        AvaTax.Communications.TransactionType: Cellular
    CommunicationsTransactionTypeModelFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/CommunicationsTransactionTypeModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    ExposureZoneModelFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/ExposureZoneModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    CoverLetterModelFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/CoverLetterModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    ExemptionReasonModelFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/ExemptionReasonModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    UomModel:
      type: object
      properties:
        id:
          type: integer
          description: The unique ID number of this unit of measurement.
          format: int32
          example: 2
        code:
          type: string
          description: The code that refers to this unit of measurement.
          example: British thermal unit (International Table)
        shortDesc:
          type: string
          description: A short description of this unit of measurement.
          example: British thermal unit (International Table)
        description:
          type: string
          description: A longer description of this unit of measurement.
          example: British thermal unit (International Table)
        measurementTypeId:
          type: integer
          description: The ID number of the measurement type, such as "Distance" or
            "Mass".
          format: int32
          example: 1
        measurementTypeCode:
          type: string
          description: The code describing the measurement type.
          example: Energy
        siUOM:
          type: string
          description: "For a particular measurement type, this is the ID number of\
            \ the unit of measurement object corresponding to the\r\nInternational\
            \ System of Units (abbreviated SI) unit of measurement standard.  This\
            \ pointer allows you to select\r\nthe SI unit of measurement for a particular\
            \ measurement type."
          example: "374"
        measurementTypeDescription:
          type: string
          description: A description of the measurement type system.
          example: Energy
        isSiUom:
          type: boolean
          description: True if this measurement is an International System of Units
            (abbreviated SI) defined standard.
          example: false
      description: "The \"Unit of Measurement\" model captures information about a\
        \ type of measurement.  Types of measurement refer to\r\ndifferent scales\
        \ for the same dimension.  For example, measurements of type \"Distance\"\
        \ may include units of measurement\r\nsuch as meters, feet, inches, and miles."
      example:
        id: 2
        code: British thermal unit (International Table)
        shortDesc: British thermal unit (International Table)
        description: British thermal unit (International Table)
        measurementTypeId: 1
        measurementTypeCode: Energy
        siUOM: "374"
        measurementTypeDescription: Energy
        isSiUom: false
    UomModelFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/UomModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    HsCodeModel:
      required:
      - description
      - id
      type: object
      properties:
        hsCode:
          maxLength: 25
          minLength: 0
          type: string
          description: "The harmonized tariff system code for this section and chapter.\r\
            \n            \r\nA full HS code contains more than six characters.  Partial\
            \ HS codes with two, four, or six characters may have child codes underneath\
            \ them.\r\nA child code is one that contains greater specificity than\
            \ a parent code.  It is recommended that when you identify a product you\
            \ use\r\nthe most detailed code available to identify it.\r\n        \
            \    \r\nTop level sections do not have HS Codes."
          example: hsCode
        id:
          type: integer
          description: "A unique identifier for this harmonized tariff system code.\r\
            \n            \r\nTo search for a list of child codes underneath a specific\
            \ HS code, search for codes where the child's `parentHsCodeId` value matches\
            \ the parent's `id` value."
          format: int64
          example: 12345
        parentHsCodeId:
          type: integer
          description: "The unique ID number of the parent HS code or HS code prefix.\r\
            \n            \r\nTo search for a list of child codes underneath a specific\
            \ HS code, search for codes where the child's `parentHsCodeId` value matches\
            \ the parent's `id` value."
          format: int64
          example: 0
        description:
          type: string
          description: A human readable description that identifies Code descriptive
            text for this Section, Chapter, Heading, or Subheading.
          example: HSCode
        system:
          type: string
          description: The system to which this HS code belongs.
          readOnly: true
          example: system
        destinationCountry:
          type: string
          description: "The destination country identified with this HS Code.  This\
            \ value applies when certain products are classified in specific ways\
            \ by\r\nbilateral trade agreements."
          example: US
        effDate:
          type: string
          description: "For codes that have been expired or defined on specific dates,\
            \ this value indicates the earliest\r\ndate for which this code is considered\
            \ valid.\r\n            \r\nIf this value is null, this code can be used\
            \ for any valid date earlier than its end date."
          format: date
        endDate:
          type: string
          description: "For codes that have been expired or defined on specific dates,\
            \ this value indicates the latest\r\ndate for which this code is considered\
            \ valid.\r\n            \r\nIf this value is null, this code can be used\
            \ for any valid date later than its effective date."
          format: date
      description: "Describes an element in the harmonized tariff system.\r\n    \
        \        \r\nAccording to the [United States International Trade Commission](https://www.usitc.gov),\
        \ the harmonized tariff schedule is defined as follows:\r\n            \r\n\
        The HTS is a U.S. nomenclature system used to classify traded goods based\
        \ on their material composition, product name, and/or intended\r\nfunction.\
        \ The HTS is designed so that each article falls into only one category. It\
        \ is divided into chapters, each of which has a 2-digit\r\nnumber. Each product\
        \ category within the various chapters is designated by 4, 6, 8, or 10 digits.\
        \ The 4-digit categories are called\r\n\"headings.\" The 6-, 8- and 10-digit\
        \ classifications are called \"subheadings.\"\r\n            \r\nWithin AvaTax,\
        \ the `HsCodeModel` object can refer to sections, chapters, headings, subheadings,\
        \ or articles.  Each object represents one\r\nclassification.  Many of these\
        \ objects have child objects underneath them; these child objects are more\
        \ specific than their parent objects."
      example:
        hsCode: hsCode
        id: 12345
        parentHsCodeId: 0
        description: HSCode
        system: system
        destinationCountry: US
    HsCodeModelFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/HsCodeModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    PostalCodeModel:
      type: object
      properties:
        country:
          type: string
          description: Country this PostalCode locates in
          readOnly: true
          example: US
        region:
          type: string
          description: The Region/State/Province this PostalCode locates in
          readOnly: true
          example: WA
        taxRegionId:
          type: integer
          description: An Avalara assigned TaxRegion Id associated to the PostalCode
          format: int32
          readOnly: true
          example: 0
        effDate:
          type: string
          description: The date when the PostalCode becomes effective
          format: date-time
          readOnly: true
        endDate:
          type: string
          description: The date when the PostalCode becomes expired
          format: date-time
          readOnly: true
        postalCode:
          type: string
          description: The postalCode
          readOnly: true
          example: "98104"
      description: 'Represents a PostalCode and its associated data like: country,
        region, effective dates, etc.'
      example:
        country: US
        region: WA
        taxRegionId: 0
        effDate: 2005-04-01T00:00:00
        endDate: 9999-12-31T00:00:00
        postalCode: "98104"
    PostalCodeModelFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/PostalCodeModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    MarketplaceLocationModel:
      type: object
      properties:
        region:
          type: string
          description: Marketplace Location State
          example: AL
        country:
          type: string
          description: Marketplace Location Country
          example: US
        marketplaceId:
          type: string
          description: Marketplace Location Id
          example: a0n0b00000ODPh2AAH
        marketplace:
          type: string
          description: Marketplace Location
          example: Amazon
        marketplaceAdoptionDate:
          type: string
          description: Marketplace Location Adoption Date
          format: date-time
        marketplaceEndDate:
          type: string
          description: Marketplace Location End Date
          format: date-time
        legislativeEffectiveDate:
          type: string
          description: Marketplace Location Legislative Effective Date
          format: date-time
        enforcementDate:
          type: string
          description: Marketplace Location Enforcement Date
          format: date-time
        createdDate:
          type: string
          description: Marketplace Location Created Date
          format: date-time
        modifiedDate:
          type: string
          description: Marketplace Location Modified Date
          format: date-time
      description: Marketplace Location Output model
      example:
        region: AL
        country: US
        marketplaceId: a0n0b00000ODPh2AAH
        marketplace: Amazon
        marketplaceAdoptionDate: 2019-01-01T00:00:00
        marketplaceEndDate: 9999-12-31T00:00:00
        enforcementDate: 2019-10-01T00:00:00
        createdDate: 2019-11-21T00:00:00
        modifiedDate: 2019-11-21T00:00:00
    MarketplaceLocationModelFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/MarketplaceLocationModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    MarketplaceModel:
      type: object
      properties:
        marketplaceId:
          type: string
          description: Marketplace Location Id
          example: a0n0b00000ODPh2AAH
        marketplace:
          type: string
          description: Marketplace Location
          example: Amazon
      description: Marketplace Location Output model
      example:
        marketplaceId: a0n0b00000ODPh2AAH
        marketplace: Amazon
    MarketplaceModelFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/MarketplaceModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    TagsModel:
      type: object
      properties:
        id:
          type: integer
          description: The unique ID number of the tag.
          format: int64
          readOnly: true
          example: 1
        tagName:
          type: string
          description: The tag name.
          example: Import_Restricted
      description: Represents a tag for an item in your company's product catalog.
      example:
        id: 1
        tagName: Import_Restricted
    TagsModelFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/TagsModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    TaxTypeModel:
      type: object
      properties:
        id:
          type: integer
          description: The unique ID number of this tax type.
          format: int32
          readOnly: true
          example: 1
        taxType:
          type: string
          description: The name of this tax type.
          readOnly: true
          example: Bottle
        description:
          type: string
          description: The description of this tax type.
          readOnly: true
          example: Bottle
      description: Represents a tax type
      example:
        id: 1
        taxType: Bottle
        description: Bottle
    TaxTypeModelFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/TaxTypeModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    UnitOfBasisModel:
      type: object
      properties:
        unitOfBasisId:
          type: integer
          description: UnitOfBasisId
          format: int32
          readOnly: true
          example: 13
        unitOfBasis:
          type: string
          description: UnitOfBasis Name
          readOnly: true
          example: PerCurrencyUnit
      description: ""
      example:
        unitOfBasisId: 13
        unitOfBasis: PerCurrencyUnit
    UnitOfBasisModelFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/UnitOfBasisModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    CompanyDistanceThresholdModel:
      required:
      - destinationCountry
      - originCountry
      - type
      type: object
      properties:
        id:
          type: integer
          description: A unique ID number representing this distance threshold object.
          format: int64
          readOnly: true
          example: 0
        companyId:
          type: integer
          description: The ID number of the company that defined this distance threshold.
          format: int32
          readOnly: true
          example: 0
        originCountry:
          type: string
          description: "The origin country for this threshold.\r\n            \r\n\
            This field supports many different country identifiers:\r\n * Two character\
            \ ISO 3166 codes\r\n * Three character ISO 3166 codes\r\n * Fully spelled\
            \ out names of the country in ISO supported languages\r\n * Common alternative\
            \ spellings for many countries\r\n            \r\nFor a full list of all\
            \ supported codes and names, please see the Definitions API `ListCountries`."
          example: FR
        destinationCountry:
          type: string
          description: "The destination country for this threshold.\r\n          \
            \  \r\nThis field supports many different country identifiers:\r\n * Two\
            \ character ISO 3166 codes\r\n * Three character ISO 3166 codes\r\n *\
            \ Fully spelled out names of the country in ISO supported languages\r\n\
            \ * Common alternative spellings for many countries\r\n            \r\n\
            For a full list of all supported codes and names, please see the Definitions\
            \ API `ListCountries`."
          example: BR
        effDate:
          type: string
          description: "For distance threshold values that change over time, this\
            \ is the earliest date for which this distance\r\nthreshold is valid.\
            \  If null, this distance threshold is valid for all dates earlier than\
            \ the `endDate` field."
          format: date-time
        endDate:
          type: string
          description: "For distance threshold values that change over time, this\
            \ is the latest date for which this distance\r\nthreshold is valid.  If\
            \ null, this distance threshold is valid for all dates later than the\
            \ `effDate` field."
          format: date-time
        thresholdExceeded:
          type: boolean
          description: "True if your tax professional has determined that the value-added\
            \ tax distance threshold is exceeded for this pair of countries.\r\n \
            \           \r\nIf you set this value to `false`, your value added taxes\
            \ will be calculated using the origin country.  Otherwise, value\r\nadded\
            \ taxes will be calculated on the destination country."
          example: false
        type:
          maxLength: 20
          minLength: 0
          type: string
          description: "Indicates the distance threshold type.\r\n            \r\n\
            This value can be either `Sale` or `Purchase`."
          example: Sale
      description: "A company-distance-threshold model indicates the distance between\
        \ a company\r\nand the taxing borders of various countries.  Distance thresholds\
        \ are necessary\r\nto correctly calculate some value-added taxes.\r\n    \
        \        \r\nDistance thresholds only apply to sales of goods in certain countries.\
        \  A distance threshold\r\nis applied for each ship-from/ship-to combination\
        \ of countries.  The threshold amount is defined by\r\nthe ship-to country.\r\
        \n            \r\nGenerally, if you have exceeded a distance threshold for\
        \ taxes between a pair of countries, your tax calculation\r\nwill be determined\
        \ to be the rate in the destination country.  If you have not exceeded the\
        \ threshold,\r\nyour tax calculation will be determined to be the rate in\
        \ the origin country.\r\n            \r\nThe amount of a threshold is not\
        \ tracked or managed in AvaTax, but the decision of your tax compliance department\r\
        \nas to whether you have exceeded this threshold is maintained in this object.\r\
        \n            \r\nBy default, you are considered to have exceeded tax thresholds.\
        \ If you wish to change this default, you can create\r\na company-distance-threshold\
        \ object to select the correct behavior for this origin/destination tax calculation\
        \ process."
      example:
        id: 0
        companyId: 0
        originCountry: FR
        destinationCountry: BR
        thresholdExceeded: false
        type: Sale
    CompanyDistanceThresholdModelFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/CompanyDistanceThresholdModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    EcmsModelFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/EcmsModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    CreateECommerceTokenInputModel:
      required:
      - customerNumber
      type: object
      properties:
        customerNumber:
          type: string
          description: The customer's number that the token will be issued for.
          example: "1"
      description: A model used to initialize a new CertCapture eCommerce token.
      example:
        customerNumber: "1"
    ECommerceTokenOutputModel:
      required:
      - createdDate
      - expirationDate
      - token
      type: object
      properties:
        token:
          type: string
          description: The JWT token that authorizes the gencert tool to operate.
          example: jwt token for gencert utility
        clientIds:
          type: array
          description: The list of clients that the token is valid for.
          example:
          - 1
          - 2
          - 3
          items:
            type: integer
            format: int64
        createdDate:
          type: string
          description: The date the token was created.
          format: date-time
        expirationDate:
          type: string
          description: The date that the token will expire.
          format: date-time
      description: The resource model returned by the ECommerceTokenController's endpoints.
      example:
        token: jwt token for gencert utility
        clientIds:
        - 1
        - 2
        - 3
        createdDate: 2000-01-01T00:00:00
        expirationDate: 2000-01-01T00:00:00
    RefreshECommerceTokenInputModel:
      required:
      - token
      type: object
      properties:
        token:
          type: string
          description: The token that requires its expiration to be extended.
          example: jwt token for gencert utility
      description: A model used to request the refresh of a CertCapture eCommerce
        token.
      example:
        token: jwt token for gencert utility
    ECommerceTokenOutputModelFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/ECommerceTokenOutputModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    ErrorTransactionOutputModel:
      required:
      - documentCode
      - documentType
      type: object
      properties:
        errorCode:
          type: string
          description: Error code of the error result from transaction creation
          example: GetTaxError
        errorMessage:
          type: string
          description: Error message of the error result from transaction creation
          example: Invalid or missing state/province code (CQ).
        avataxErrorJson:
          type: string
          description: The full JSON of the error result from transaction creation
          example: "{\r\n  \"error\": {\r\n    \"code\": \"GetTaxError\",\r\n    \"\
            message\": \"Invalid or missing state/province code (CQ).\",\r\n    \"\
            target\": \"Unknown\",\r\n    \"details\": [\r\n      {\r\n        \"\
            code\": \"GetTaxError\",\r\n        \"number\": 300,\r\n        \"message\"\
            : \"Invalid or missing state/province code (CQ).\",\r\n        \"description\"\
            : \"CQ is not a known state or province.\",\r\n        \"faultCode\":\
            \ \"GetTaxError\",\r\n        \"helpLink\": \"http://developer.avalara.com/avatax/errors/GetTaxError\"\
            ,\r\n        \"refersTo\": \"Addresses[0]\",\r\n        \"severity\":\
            \ \"Error\"\r\n      }\r\n    ]\r\n  }\r\n}"
        avataxCreateTransactionJson:
          type: string
          description: The full JSON of the transaction creation request
          example: "{\r\n  \"id\": 123456789,\r\n  \"code\": \"a0538d37-c476-4e4a-9c2e-a62d740583b8\"\
            ,\r\n  \"companyId\": 12345,\r\n  \"date\": \"2019-08-29\",\r\n  \"status\"\
            : \"Committed\",\r\n  \"type\": \"SalesInvoice\",\r\n  \"currencyCode\"\
            : \"USD\",\r\n  \"entityUseCode\": \"\",\r\n  \"customerVendorCode\":\
            \ \"ABC\",\r\n  \"customerCode\": \"ABC\",\r\n  \"exemptNo\": \"\",\r\n\
            \  \"reconciled\": true,\r\n  \"locationCode\": \"DEFAULT\",\r\n  \"salespersonCode\"\
            : \"DEF\",\r\n  \"taxOverrideType\": \"None\",\r\n  \"taxOverrideAmount\"\
            : 0,\r\n  \"taxOverrideReason\": \"\",\r\n  \"totalAmount\": 1000,\r\n\
            \  \"totalExempt\": 0,\r\n  \"totalDiscount\": 0,\r\n  \"totalTax\": 62.5,\r\
            \n  \"totalTaxable\": 1000,\r\n  \"totalTaxCalculated\": 62.5,\r\n  \"\
            adjustmentReason\": \"NotAdjusted\",\r\n  \"adjustmentDescription\": \"\
            \",\r\n  \"locked\": false,\r\n  \"region\": \"CA\",\r\n  \"country\"\
            : \"US\",\r\n  \"version\": 0,\r\n  \"originAddressId\": 123456789,\r\n\
            \  \"destinationAddressId\": 123456789,\r\n  \"isSellerImporterOfRecord\"\
            : false,\r\n  \"description\": \"Yarn\",\r\n  \"taxDate\": \"2019-08-29T00:00:00-07:00\"\
            ,\r\n  \"lines\": [\r\n    {\r\n      \"id\": 123456789,\r\n      \"transactionId\"\
            : 123456789,\r\n      \"lineNumber\": \"1\",\r\n      \"boundaryOverrideId\"\
            : 0,\r\n      \"entityUseCode\": \"\",\r\n      \"description\": \"Yarn\"\
            ,\r\n      \"destinationAddressId\": 12345,\r\n      \"originAddressId\"\
            : 123456789,\r\n      \"discountAmount\": 100,\r\n      \"discountTypeId\"\
            : 0,\r\n      \"exemptAmount\": 0,\r\n      \"exemptCertId\": 0,\r\n \
            \     \"exemptNo\": \"\",\r\n      \"isItemTaxable\": true,\r\n      \"\
            isSSTP\": false,\r\n      \"itemCode\": \"116292\",\r\n      \"lineAmount\"\
            : 1000,\r\n      \"quantity\": 1,\r\n      \"ref1\": \"Note: Deliver to\
            \ Bob\",\r\n      \"reportingDate\": \"2019-08-29\",\r\n      \"revAccount\"\
            : \"\",\r\n      \"sourcing\": \"Destination\",\r\n      \"tax\": 62.5,\r\
            \n      \"taxableAmount\": 1000,\r\n      \"taxCalculated\": 62.5,\r\n\
            \      \"taxCode\": \"PS081282\",\r\n      \"taxDate\": \"2019-08-29\"\
            ,\r\n      \"taxEngine\": \"\",\r\n      \"taxOverrideType\": \"None\"\
            ,\r\n      \"taxOverrideAmount\": 0,\r\n      \"taxOverrideReason\": \"\
            \",\r\n      \"taxIncluded\": false,\r\n      \"details\": [\r\n     \
            \   {\r\n          \"id\": 123456789,\r\n          \"transactionLineId\"\
            : 123456789,\r\n          \"transactionId\": 123456789,\r\n          \"\
            addressId\": 12345,\r\n          \"country\": \"US\",\r\n          \"\
            region\": \"CA\",\r\n          \"stateFIPS\": \"06\",\r\n          \"\
            exemptAmount\": 0,\r\n          \"exemptReasonId\": 4,\r\n          \"\
            inState\": false,\r\n          \"jurisCode\": \"06\",\r\n          \"\
            jurisName\": \"CALIFORNIA\",\r\n          \"jurisdictionId\": 5000531,\r\
            \n          \"signatureCode\": \"AGAM\",\r\n          \"stateAssignedNo\"\
            : \"\",\r\n          \"jurisType\": \"STA\",\r\n          \"nonTaxableAmount\"\
            : 0,\r\n          \"nonTaxableRuleId\": 0,\r\n          \"nonTaxableType\"\
            : \"BaseRule\",\r\n          \"rate\": 0.0625,\r\n          \"rateRuleId\"\
            : 1321915,\r\n          \"rateSourceId\": 3,\r\n          \"serCode\"\
            : \"\",\r\n          \"sourcing\": \"Destination\",\r\n          \"tax\"\
            : 62.5,\r\n          \"taxableAmount\": 1000,\r\n          \"taxType\"\
            : \"Sales\",\r\n          \"taxName\": \"CA STATE TAX\",\r\n         \
            \ \"taxAuthorityTypeId\": 45,\r\n          \"taxRegionId\": 2127184,\r\
            \n          \"taxCalculated\": 62.5,\r\n          \"taxOverride\": 0,\r\
            \n          \"rateType\": \"General\"\r\n        }\r\n      ],\r\n   \
            \   \"vatNumberTypeId\": 0\r\n    }\r\n  ],\r\n  \"addresses\": [\r\n\
            \    {\r\n      \"id\": 0,\r\n      \"transactionId\": 0,\r\n      \"\
            boundaryLevel\": \"Address\",\r\n      \"line1\": \"100 Ravine Lane Northeast\
            \ #220\",\r\n      \"city\": \"Bainbridge Island\",\r\n      \"region\"\
            : \"WA\",\r\n      \"postalCode\": \"98110\",\r\n      \"country\": \"\
            US\",\r\n      \"taxRegionId\": 0\r\n    }\r\n  ],\r\n  \"taxDetailsByTaxType\"\
            : [\r\n    {\r\n      \"taxType\": \"SalesAndUse\",\r\n      \"totalTaxable\"\
            : 100,\r\n      \"totalExempt\": 0.05,\r\n      \"totalNonTaxable\": 0,\r\
            \n      \"totalTax\": 0.625\r\n    }\r\n  ]\r\n}"
        datasource:
          type: string
          description: The datasource instance that made the transaction creation
            call
          example: a4a8d904-3a0d-4e1b-bba7-a8823962709e
        documentDate:
          type: string
          description: The date of the document
          format: date-time
          example: 2022-01-10T00:00:00Z
        expiresAt:
          type: string
          description: The date that this ErrorTransaction will be automatically purged
            from the detabase.
          format: date-time
          example: 2023-03-10T00:00:00Z
        amount:
          type: number
          description: The amount of the transaction.
          format: double
          example: 2.34
        datasourceSource:
          type: string
          description: The Datasource source of the transaction creation call.
          example: Extractor
        shipToCountry:
          type: string
          description: The country of the ship to address for the transaction creation
            call.
          example: US
        shipToRegion:
          type: string
          description: The region of the ship to address for the transaction creation
            call.
          example: WA
        documentType:
          type: string
          description: Type of transaction of the error transaction
          example: SalesOrder
          enum:
          - SalesOrder
          - SalesInvoice
          - PurchaseOrder
          - PurchaseInvoice
          - ReturnOrder
          - ReturnInvoice
          - InventoryTransferOrder
          - InventoryTransferInvoice
          - ReverseChargeOrder
          - ReverseChargeInvoice
          - CustomsInvoice
          - CustomsOrder
          - Any
          x-enum-metadata:
            name: DocumentType
            values:
            - name: SalesOrder
              value: 0
            - name: SalesInvoice
              value: 1
            - name: PurchaseOrder
              value: 2
            - name: PurchaseInvoice
              value: 3
            - name: ReturnOrder
              value: 4
            - name: ReturnInvoice
              value: 5
            - name: InventoryTransferOrder
              value: 6
            - name: InventoryTransferInvoice
              value: 7
            - name: ReverseChargeOrder
              value: 8
            - name: ReverseChargeInvoice
              value: 9
            - name: CustomsInvoice
              value: 10
            - name: CustomsOrder
              value: 11
            - name: Any
              value: -1
        documentCode:
          maxLength: 50
          minLength: 0
          type: string
          description: The internal reference code (used by the client application)
            of the error transaction
          example: 7acdca3e-9b41-44b2-9842-d14322507d7d
      description: Error Transaction Model
      example:
        errorCode: GetTaxError
        errorMessage: Invalid or missing state/province code (CQ).
        avataxErrorJson: "{\r\n  \"error\": {\r\n    \"code\": \"GetTaxError\",\r\n\
          \    \"message\": \"Invalid or missing state/province code (CQ).\",\r\n\
          \    \"target\": \"Unknown\",\r\n    \"details\": [\r\n      {\r\n     \
          \   \"code\": \"GetTaxError\",\r\n        \"number\": 300,\r\n        \"\
          message\": \"Invalid or missing state/province code (CQ).\",\r\n       \
          \ \"description\": \"CQ is not a known state or province.\",\r\n       \
          \ \"faultCode\": \"GetTaxError\",\r\n        \"helpLink\": \"http://developer.avalara.com/avatax/errors/GetTaxError\"\
          ,\r\n        \"refersTo\": \"Addresses[0]\",\r\n        \"severity\": \"\
          Error\"\r\n      }\r\n    ]\r\n  }\r\n}"
        avataxCreateTransactionJson: "{\r\n  \"id\": 123456789,\r\n  \"code\": \"\
          a0538d37-c476-4e4a-9c2e-a62d740583b8\",\r\n  \"companyId\": 12345,\r\n \
          \ \"date\": \"2019-08-29\",\r\n  \"status\": \"Committed\",\r\n  \"type\"\
          : \"SalesInvoice\",\r\n  \"currencyCode\": \"USD\",\r\n  \"entityUseCode\"\
          : \"\",\r\n  \"customerVendorCode\": \"ABC\",\r\n  \"customerCode\": \"\
          ABC\",\r\n  \"exemptNo\": \"\",\r\n  \"reconciled\": true,\r\n  \"locationCode\"\
          : \"DEFAULT\",\r\n  \"salespersonCode\": \"DEF\",\r\n  \"taxOverrideType\"\
          : \"None\",\r\n  \"taxOverrideAmount\": 0,\r\n  \"taxOverrideReason\": \"\
          \",\r\n  \"totalAmount\": 1000,\r\n  \"totalExempt\": 0,\r\n  \"totalDiscount\"\
          : 0,\r\n  \"totalTax\": 62.5,\r\n  \"totalTaxable\": 1000,\r\n  \"totalTaxCalculated\"\
          : 62.5,\r\n  \"adjustmentReason\": \"NotAdjusted\",\r\n  \"adjustmentDescription\"\
          : \"\",\r\n  \"locked\": false,\r\n  \"region\": \"CA\",\r\n  \"country\"\
          : \"US\",\r\n  \"version\": 0,\r\n  \"originAddressId\": 123456789,\r\n\
          \  \"destinationAddressId\": 123456789,\r\n  \"isSellerImporterOfRecord\"\
          : false,\r\n  \"description\": \"Yarn\",\r\n  \"taxDate\": \"2019-08-29T00:00:00-07:00\"\
          ,\r\n  \"lines\": [\r\n    {\r\n      \"id\": 123456789,\r\n      \"transactionId\"\
          : 123456789,\r\n      \"lineNumber\": \"1\",\r\n      \"boundaryOverrideId\"\
          : 0,\r\n      \"entityUseCode\": \"\",\r\n      \"description\": \"Yarn\"\
          ,\r\n      \"destinationAddressId\": 12345,\r\n      \"originAddressId\"\
          : 123456789,\r\n      \"discountAmount\": 100,\r\n      \"discountTypeId\"\
          : 0,\r\n      \"exemptAmount\": 0,\r\n      \"exemptCertId\": 0,\r\n   \
          \   \"exemptNo\": \"\",\r\n      \"isItemTaxable\": true,\r\n      \"isSSTP\"\
          : false,\r\n      \"itemCode\": \"116292\",\r\n      \"lineAmount\": 1000,\r\
          \n      \"quantity\": 1,\r\n      \"ref1\": \"Note: Deliver to Bob\",\r\n\
          \      \"reportingDate\": \"2019-08-29\",\r\n      \"revAccount\": \"\"\
          ,\r\n      \"sourcing\": \"Destination\",\r\n      \"tax\": 62.5,\r\n  \
          \    \"taxableAmount\": 1000,\r\n      \"taxCalculated\": 62.5,\r\n    \
          \  \"taxCode\": \"PS081282\",\r\n      \"taxDate\": \"2019-08-29\",\r\n\
          \      \"taxEngine\": \"\",\r\n      \"taxOverrideType\": \"None\",\r\n\
          \      \"taxOverrideAmount\": 0,\r\n      \"taxOverrideReason\": \"\",\r\
          \n      \"taxIncluded\": false,\r\n      \"details\": [\r\n        {\r\n\
          \          \"id\": 123456789,\r\n          \"transactionLineId\": 123456789,\r\
          \n          \"transactionId\": 123456789,\r\n          \"addressId\": 12345,\r\
          \n          \"country\": \"US\",\r\n          \"region\": \"CA\",\r\n  \
          \        \"stateFIPS\": \"06\",\r\n          \"exemptAmount\": 0,\r\n  \
          \        \"exemptReasonId\": 4,\r\n          \"inState\": false,\r\n   \
          \       \"jurisCode\": \"06\",\r\n          \"jurisName\": \"CALIFORNIA\"\
          ,\r\n          \"jurisdictionId\": 5000531,\r\n          \"signatureCode\"\
          : \"AGAM\",\r\n          \"stateAssignedNo\": \"\",\r\n          \"jurisType\"\
          : \"STA\",\r\n          \"nonTaxableAmount\": 0,\r\n          \"nonTaxableRuleId\"\
          : 0,\r\n          \"nonTaxableType\": \"BaseRule\",\r\n          \"rate\"\
          : 0.0625,\r\n          \"rateRuleId\": 1321915,\r\n          \"rateSourceId\"\
          : 3,\r\n          \"serCode\": \"\",\r\n          \"sourcing\": \"Destination\"\
          ,\r\n          \"tax\": 62.5,\r\n          \"taxableAmount\": 1000,\r\n\
          \          \"taxType\": \"Sales\",\r\n          \"taxName\": \"CA STATE\
          \ TAX\",\r\n          \"taxAuthorityTypeId\": 45,\r\n          \"taxRegionId\"\
          : 2127184,\r\n          \"taxCalculated\": 62.5,\r\n          \"taxOverride\"\
          : 0,\r\n          \"rateType\": \"General\"\r\n        }\r\n      ],\r\n\
          \      \"vatNumberTypeId\": 0\r\n    }\r\n  ],\r\n  \"addresses\": [\r\n\
          \    {\r\n      \"id\": 0,\r\n      \"transactionId\": 0,\r\n      \"boundaryLevel\"\
          : \"Address\",\r\n      \"line1\": \"100 Ravine Lane Northeast #220\",\r\
          \n      \"city\": \"Bainbridge Island\",\r\n      \"region\": \"WA\",\r\n\
          \      \"postalCode\": \"98110\",\r\n      \"country\": \"US\",\r\n    \
          \  \"taxRegionId\": 0\r\n    }\r\n  ],\r\n  \"taxDetailsByTaxType\": [\r\
          \n    {\r\n      \"taxType\": \"SalesAndUse\",\r\n      \"totalTaxable\"\
          : 100,\r\n      \"totalExempt\": 0.05,\r\n      \"totalNonTaxable\": 0,\r\
          \n      \"totalTax\": 0.625\r\n    }\r\n  ]\r\n}"
        datasource: a4a8d904-3a0d-4e1b-bba7-a8823962709e
        documentDate: 2022-01-10T00:00:00+00:00
        expiresAt: 2023-03-10T00:00:00+00:00
        amount: 2.34
        datasourceSource: Extractor
        shipToCountry: US
        shipToRegion: WA
        documentType: SalesOrder
        documentCode: 7acdca3e-9b41-44b2-9842-d14322507d7d
    ErrorTransactionOutputModelCappedFetchResult:
      type: object
      properties:
        '@isRecordsetCountCapped':
          type: boolean
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/ErrorTransactionOutputModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    ErrorTransactionModelBase:
      required:
      - documentCode
      - documentType
      type: object
      properties:
        documentType:
          type: string
          description: Type of transaction of the error transaction
          example: SalesOrder
          enum:
          - SalesOrder
          - SalesInvoice
          - PurchaseOrder
          - PurchaseInvoice
          - ReturnOrder
          - ReturnInvoice
          - InventoryTransferOrder
          - InventoryTransferInvoice
          - ReverseChargeOrder
          - ReverseChargeInvoice
          - CustomsInvoice
          - CustomsOrder
          - Any
          x-enum-metadata:
            name: DocumentType
            values:
            - name: SalesOrder
              value: 0
            - name: SalesInvoice
              value: 1
            - name: PurchaseOrder
              value: 2
            - name: PurchaseInvoice
              value: 3
            - name: ReturnOrder
              value: 4
            - name: ReturnInvoice
              value: 5
            - name: InventoryTransferOrder
              value: 6
            - name: InventoryTransferInvoice
              value: 7
            - name: ReverseChargeOrder
              value: 8
            - name: ReverseChargeInvoice
              value: 9
            - name: CustomsInvoice
              value: 10
            - name: CustomsOrder
              value: 11
            - name: Any
              value: -1
        documentCode:
          maxLength: 50
          minLength: 0
          type: string
          description: The internal reference code (used by the client application)
            of the error transaction
          example: fff42143-303a-4906-b73d-92885af0e352
      description: Base model class for single error transaction delete request
      example:
        documentType: SalesOrder
        documentCode: fff42143-303a-4906-b73d-92885af0e352
    DeleteErrorTransactionsRequestModel:
      required:
      - models
      type: object
      properties:
        models:
          type: array
          description: List of error transactions to be deleted
          example:
          - documentType: SalesOrder
            documentCode: 13356317-7734-402b-8fa5-c07ca6557d5d
          items:
            $ref: '#/components/schemas/ErrorTransactionModelBase'
      description: Request model for when a user is deleting multiple error transaction
      example:
        models:
        - documentType: SalesOrder
          documentCode: 13356317-7734-402b-8fa5-c07ca6557d5d
    DeleteErrorTransactionResponseModel:
      required:
      - documentCode
      - documentType
      type: object
      properties:
        result:
          type: string
          description: Result of the deletion
          example: Success
          enum:
          - Success
          - Failure
          x-enum-metadata:
            name: AvataxDeleteErrorTransactionStatus
            values:
            - name: Success
              value: 0
            - name: Failure
              value: 1
        documentType:
          type: string
          description: Type of transaction of the error transaction
          example: SalesOrder
          enum:
          - SalesOrder
          - SalesInvoice
          - PurchaseOrder
          - PurchaseInvoice
          - ReturnOrder
          - ReturnInvoice
          - InventoryTransferOrder
          - InventoryTransferInvoice
          - ReverseChargeOrder
          - ReverseChargeInvoice
          - CustomsInvoice
          - CustomsOrder
          - Any
          x-enum-metadata:
            name: DocumentType
            values:
            - name: SalesOrder
              value: 0
            - name: SalesInvoice
              value: 1
            - name: PurchaseOrder
              value: 2
            - name: PurchaseInvoice
              value: 3
            - name: ReturnOrder
              value: 4
            - name: ReturnInvoice
              value: 5
            - name: InventoryTransferOrder
              value: 6
            - name: InventoryTransferInvoice
              value: 7
            - name: ReverseChargeOrder
              value: 8
            - name: ReverseChargeInvoice
              value: 9
            - name: CustomsInvoice
              value: 10
            - name: CustomsOrder
              value: 11
            - name: Any
              value: -1
        documentCode:
          maxLength: 50
          minLength: 0
          type: string
          description: The internal reference code (used by the client application)
            of the error transaction
          example: f602773d-90da-40d9-9e38-ab744a6588f8
      description: Response model of a single error transaction delete
      example:
        result: Success
        documentType: SalesOrder
        documentCode: f602773d-90da-40d9-9e38-ab744a6588f8
    DeleteErrorTransactionsResponseModel:
      type: object
      properties:
        results:
          type: array
          description: The individual result of each error transaction in the request
            batch
          example:
          - result: Success
            documentType: SalesOrder
            documentCode: 05da038d-f0cd-4a38-8673-bd61610550c3
          items:
            $ref: '#/components/schemas/DeleteErrorTransactionResponseModel'
      description: Response model of error transaction batch delete
      example:
        results:
        - result: Success
          documentType: SalesOrder
          documentCode: 05da038d-f0cd-4a38-8673-bd61610550c3
    ErrorCodeOutputModel:
      type: object
      properties:
        errorCode:
          type: string
          description: Name of the error code
          example: GetTaxError
        count:
          type: integer
          description: Number of error code recorded
          format: int32
          example: 123
      description: Model that has the matching count for an errorcode
      example:
        errorCode: GetTaxError
        count: 123
    ErrorCodeOutputModelCappedFetchResult:
      type: object
      properties:
        '@isRecordsetCountCapped':
          type: boolean
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/ErrorCodeOutputModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    CompanyReturnSettingModel:
      required:
      - companyReturnId
      - filingQuestionId
      type: object
      properties:
        id:
          type: integer
          description: The unique ID of this CompanyReturnsSetting
          format: int64
          readOnly: true
          example: 0
        companyReturnId:
          type: integer
          description: The CompanyReturn Id
          format: int64
          example: 123
        filingQuestionId:
          type: integer
          description: The TaxFormCatalog filingQuestionId.
          format: int64
          example: 26
        filingQuestionCode:
          maxLength: 255
          minLength: 0
          type: string
          description: Filing question code as defined in TaxFormCatalog.
          example: EfileUsername
        value:
          type: string
          description: The value of this setting
          example: bobExample
        createdDate:
          type: string
          description: The date when this record was created.
          format: date-time
          readOnly: true
        createdUserId:
          type: integer
          description: The User ID of the user who created this record.
          format: int32
          readOnly: true
        modifiedDate:
          type: string
          description: The date/time when this record was last modified.
          format: date-time
          readOnly: true
        modifiedUserId:
          type: integer
          description: The user ID of the user who last modified this record.
          format: int32
          readOnly: true
      description: ""
      example:
        id: 0
        companyReturnId: 123
        filingQuestionId: 26
        filingQuestionCode: EfileUsername
        value: bobExample
    FilingCalendarModel:
      required:
      - companyId
      - effectiveDate
      - filingFrequencyId
      - taxTypeId
      type: object
      properties:
        id:
          type: integer
          description: The unique ID number of this filing calendar.
          format: int64
          readOnly: true
          example: 56789
        companyId:
          type: integer
          description: The unique ID number of the company to which this filing calendar
            belongs.
          format: int32
          example: 12345
        returnName:
          maxLength: 50
          minLength: 0
          type: string
          description: "DEPRECATED - Date: 9/13/2018, Version: 18.10, Message: Please\
            \ use `taxFormCode` instead.\r\nThe legacy return name of the tax form\
            \ to file."
          example: CABOE401A2
          x-property-deprecation-info:
            date: 9/13/2018
            version: "18.10"
            message: Please use `taxFormCode` instead.
        formCountry:
          type: string
          description: "Name or ISO 3166 code identifying the country that issued\
            \ the tax form for this filing calendar.\r\n            \r\nThis field\
            \ supports many different country identifiers:\r\n * Two character ISO\
            \ 3166 codes\r\n * Three character ISO 3166 codes\r\n * Fully spelled\
            \ out names of the country in ISO supported languages\r\n * Common alternative\
            \ spellings for many countries\r\n            \r\nFor a full list of all\
            \ supported codes and names, please see the Definitions API `ListCountries`."
        formRegion:
          type: string
          description: "Name or ISO 3166 code identifying the region that issued the\
            \ tax form for this filing calendar.\r\n            \r\nThis field supports\
            \ many different region identifiers:\r\n * Two and three character ISO\
            \ 3166 region codes\r\n * Fully spelled out names of the region in ISO\
            \ supported languages\r\n * Common alternative spellings for many regions\r\
            \n            \r\nFor a full list of all supported codes and names, please\
            \ see the Definitions API `ListRegions`."
        taxFormCode:
          type: string
          description: "The Avalara standard tax form code of the tax form for this\
            \ filing calendar.  The first two characters of the tax form code\r\n\
            are the ISO 3166 country code of the country that issued this form."
        fiscalYearStartMonth:
          type: integer
          description: The start period of a fiscal year for this form/company
          format: int32
        locationCode:
          maxLength: 50
          minLength: 0
          type: string
          description: If this calendar is for a location-specific tax return, specify
            the location code here.  To file for all locations, leave this value NULL.
        outletTypeId:
          type: string
          description: "DEPRECATED - Date: 9/17/2021, Version: 21.9.0, Message: Field\
            \ will be no longer be available after the 21.9.0 release.\r\nIf this\
            \ calendar is for a location-specific tax return, specify the location-specific\
            \ behavior here."
          example: None
          enum:
          - None
          - Schedule
          - Duplicate
          - Consolidated
          x-property-deprecation-info:
            date: 9/17/2021
            version: 21.9.0
            message: Field will be no longer be available after the 21.9.0 release.
          x-enum-metadata:
            name: OutletTypeId
            values:
            - name: None
              value: 0
            - name: Schedule
              value: 1
            - name: Duplicate
              value: 2
            - name: Consolidated
              value: 3
        paymentCurrency:
          maxLength: 3
          minLength: 0
          type: string
          description: Specify the ISO 4217 currency code for the currency to remit
            for this tax return.  For all tax returns in the United States, specify
            "USD".
        filingFrequencyId:
          type: string
          description: The frequency on which this tax form is filed.
          example: Monthly
          enum:
          - Monthly
          - Quarterly
          - SemiAnnually
          - Annually
          - Bimonthly
          - Occasional
          - InverseQuarterly
          - Weekly
          x-enum-metadata:
            name: FilingFrequencyId
            values:
            - name: Monthly
              value: 1
            - name: Quarterly
              value: 2
            - name: SemiAnnually
              value: 3
            - name: Annually
              value: 4
            - name: Bimonthly
              value: 5
            - name: Occasional
              value: 6
            - name: InverseQuarterly
              value: 7
            - name: Weekly
              value: 8
        months:
          type: integer
          description: A 16-bit bitmap containing a 1 for each month when the return
            should be filed.
          format: int16
          example: 2340
        stateRegistrationId:
          maxLength: 50
          minLength: 0
          type: string
          description: Tax Registration ID for this Region - in the U.S., this is
            for your state.
          example: 101-123456
        localRegistrationId:
          maxLength: 50
          minLength: 0
          type: string
          description: Tax Registration ID for the local jurisdiction, if any.
        employerIdentificationNumber:
          maxLength: 50
          minLength: 0
          type: string
          description: The Employer Identification Number or Taxpayer Identification
            Number that is to be used when filing this return.
          example: 12-3456789
        line1:
          maxLength: 50
          minLength: 0
          type: string
          description: "DEPRECATED - Date: 9/1/2017, Version: 17.9, Message: Field\
            \ will be no longer be available after the 17.9 release.\r\nThe first\
            \ line of the mailing address that will be used when filling out this\
            \ tax return."
          example: 2000 Main Street
          x-property-deprecation-info:
            date: 9/1/2017
            version: "17.9"
            message: Field will be no longer be available after the 17.9 release.
        line2:
          maxLength: 50
          minLength: 0
          type: string
          description: "DEPRECATED - Date: 9/1/2017, Version: 17.9, Message: Field\
            \ will be no longer be available after the 17.9 release.\r\nThe second\
            \ line of the mailing address that will be used when filling out this\
            \ tax return.\r\nPlease note that some tax forms do not support multiple\
            \ address lines."
          x-property-deprecation-info:
            date: 9/1/2017
            version: "17.9"
            message: Field will be no longer be available after the 17.9 release.
        city:
          maxLength: 50
          minLength: 0
          type: string
          description: "DEPRECATED - Date: 9/1/2017, Version: 17.9, Message: Field\
            \ will be no longer be available after the 17.9 release.\r\nThe city name\
            \ of the mailing address that will be used when filling out this tax return."
          example: Irvine
          x-property-deprecation-info:
            date: 9/1/2017
            version: "17.9"
            message: Field will be no longer be available after the 17.9 release.
        region:
          maxLength: 3
          minLength: 0
          type: string
          description: "DEPRECATED - Date: 9/1/2017, Version: 17.9, Message: Field\
            \ will be no longer be available after the 17.9 release.\r\nThe state,\
            \ region, or province of the mailing address that will be used when filling\
            \ out this tax return."
          example: CA
          x-property-deprecation-info:
            date: 9/1/2017
            version: "17.9"
            message: Field will be no longer be available after the 17.9 release.
        postalCode:
          maxLength: 25
          minLength: 0
          type: string
          description: "DEPRECATED - Date: 9/1/2017, Version: 17.9, Message: Field\
            \ will be no longer be available after the 17.9 release.\r\nThe postal\
            \ code or zip code of the mailing address that will be used when filling\
            \ out this tax return."
          example: "92614"
          x-property-deprecation-info:
            date: 9/1/2017
            version: "17.9"
            message: Field will be no longer be available after the 17.9 release.
        country:
          maxLength: 2
          minLength: 0
          type: string
          description: "DEPRECATED - Date: 9/1/2017, Version: 17.9, Message: Field\
            \ will be no longer be available after the 17.9 release.\r\nThe two character\
            \ ISO-3166 country code of the mailing address that will be used when\
            \ filling out this tax return."
          example: US
          x-property-deprecation-info:
            date: 9/1/2017
            version: "17.9"
            message: Field will be no longer be available after the 17.9 release.
        mailingAddressLine1:
          maxLength: 50
          minLength: 0
          type: string
          description: The first line of the mailing address that will be used when
            filling out this tax return.
        mailingAddressLine2:
          maxLength: 50
          minLength: 0
          type: string
          description: "The second line of the mailing address that will be used when\
            \ filling out this tax return.\r\nPlease note that some tax forms do not\
            \ support multiple address lines."
        mailingAddressCity:
          maxLength: 50
          minLength: 0
          type: string
          description: The city name of the mailing address that will be used when
            filling out this tax return.
        mailingAddressRegion:
          type: string
          description: "Name or ISO 3166 code identifying the region of the mailing\
            \ address that will be used when filling out this tax return.\r\n    \
            \        \r\nThis field supports many different region identifiers:\r\n\
            \ * Two and three character ISO 3166 region codes\r\n * Fully spelled\
            \ out names of the region in ISO supported languages\r\n * Common alternative\
            \ spellings for many regions\r\n            \r\nFor a full list of all\
            \ supported codes and names, please see the Definitions API `ListRegions`."
        mailingAddressPostalCode:
          maxLength: 25
          minLength: 0
          type: string
          description: The postal code or zip code of the mailing address that will
            be used when filling out this tax return.
        mailingAddressCountry:
          type: string
          description: "Name or ISO 3166 code identifying the country of the mailing\
            \ address that will be used when filling out this tax return.\r\n    \
            \        \r\nThis field supports many different country identifiers:\r\
            \n * Two character ISO 3166 codes\r\n * Three character ISO 3166 codes\r\
            \n * Fully spelled out names of the country in ISO supported languages\r\
            \n * Common alternative spellings for many countries\r\n            \r\
            \nFor a full list of all supported codes and names, please see the Definitions\
            \ API `ListCountries`."
        phone:
          maxLength: 50
          minLength: 0
          type: string
          description: The phone number to be used when filing this return.
          example: 714 555-1212
        customerFilingInstructions:
          maxLength: 1000
          minLength: 0
          type: string
          description: "DEPRECATED - Date: 9/17/2021, Version: 21.9.0, Message: Field\
            \ will be no longer be available after the 21.9.0 release.\r\nSpecial\
            \ filing instructions to be used when filing this return.\r\nPlease note\
            \ that requesting special filing instructions may incur additional costs."
          x-property-deprecation-info:
            date: 9/17/2021
            version: 21.9.0
            message: Field will be no longer be available after the 21.9.0 release.
        legalEntityName:
          maxLength: 75
          minLength: 0
          type: string
          description: The legal entity name to be used when filing this return.
          example: Bob's Artisan Pottery
        effectiveDate:
          type: string
          description: "The earliest date for the tax period when this return should\
            \ be filed.\r\nThis date specifies the earliest date for tax transactions\
            \ that should be reported on this filing calendar.\r\nPlease note that\
            \ tax is usually filed one month in arrears: for example, tax for January\
            \ transactions is typically filed during the month of February."
          format: date
        endDate:
          type: string
          description: "The last date for the tax period when this return should be\
            \ filed.\r\nThis date specifies the last date for tax transactions that\
            \ should be reported on this filing calendar.\r\nPlease note that tax\
            \ is usually filed one month in arrears: for example, tax for January\
            \ transactions is typically filed during the month of February."
          format: date
        filingTypeId:
          type: string
          description: The method to be used when filing this return.
          example: PaperReturn
          enum:
          - PaperReturn
          - ElectronicReturn
          - SER
          - EFTPaper
          - PhonePaper
          - SignatureReady
          - EfileCheck
          x-enum-metadata:
            name: FilingTypeId
            values:
            - name: PaperReturn
              value: 0
            - name: ElectronicReturn
              value: 1
            - name: SER
              value: 2
            - name: EFTPaper
              value: 3
            - name: PhonePaper
              value: 4
            - name: SignatureReady
              value: 5
            - name: EfileCheck
              value: 6
        eFileUsername:
          maxLength: 254
          minLength: 0
          type: string
          description: If you file electronically, this is the username you use to
            log in to the tax authority's website.
        eFilePassword:
          maxLength: 40
          minLength: 0
          type: string
          description: If you file electronically, this is the password or pass code
            you use to log in to the tax authority's website.
        prepayPercentage:
          type: integer
          description: "If you are required to prepay a percentage of taxes for future\
            \ periods, please specify the percentage in whole numbers;\r\nfor example,\
            \ the value 90 would indicate 90%."
          format: int32
          example: 90
        prePaymentRequired:
          type: boolean
          description: Determines if a prepayment is required for this filing calendar
          example: false
        fixedPrepaymentAmount:
          type: number
          description: If your company is required to make a prepayment that is designated
            by a fixed amount each period, please specify the amount here.
          format: double
        taxTypeId:
          type: string
          description: "DEPRECATED - Date: , Version: , Message: The 'taxTypes' list\
            \ field should be used going forward.\r\nThe type of tax to report on\
            \ this return."
          example: E
          enum:
          - E
          - Lodging
          - Bottle
          - RentToOwn
          - BikeTax
          - LandedCost
          - CheckoutBag
          - Alcohol
          - Amusement
          - Hospitality
          - RentalLeasing
          - GrossReceipts
          - Mattress
          - Lumber
          - Paint
          - Tires
          - EI
          - All
          - BothSalesAndUseTax
          - ConsumerUseTax
          - ConsumersUseAndSellersUseTax
          - ConsumerUseAndSalesTax
          - Fee
          - VATInputTax
          - LightBulbs
          - Meals
          - VATNonrecoverableInputTax
          - VATOutputTax
          - PIF
          - Rental
          - SalesTax
          - UseTax
          - EWaste
          - Batteries
          x-property-deprecation-info:
            message: The 'taxTypes' list field should be used going forward.
          x-enum-metadata:
            name: MatchingTaxType
            values:
            - name: E
              value: 5
            - name: Lodging
              value: 6
            - name: Bottle
              value: 7
            - name: RentToOwn
              value: 8
            - name: BikeTax
              value: 11
            - name: LandedCost
              value: 12
            - name: CheckoutBag
              value: 13
            - name: Alcohol
              value: 17
            - name: Amusement
              value: 20
            - name: Hospitality
              value: 21
            - name: RentalLeasing
              value: 23
            - name: GrossReceipts
              value: 24
            - name: Mattress
              value: 25
            - name: Lumber
              value: 27
            - name: Paint
              value: 28
            - name: Tires
              value: 29
            - name: EI
              value: 30
            - name: All
              value: 65
            - name: BothSalesAndUseTax
              value: 66
            - name: ConsumerUseTax
              value: 67
            - name: ConsumersUseAndSellersUseTax
              value: 68
            - name: ConsumerUseAndSalesTax
              value: 69
            - name: Fee
              value: 70
            - name: VATInputTax
              value: 73
            - name: LightBulbs
              value: 76
            - name: Meals
              value: 77
            - name: VATNonrecoverableInputTax
              value: 78
            - name: VATOutputTax
              value: 79
            - name: PIF
              value: 80
            - name: Rental
              value: 82
            - name: SalesTax
              value: 83
            - name: UseTax
              value: 85
            - name: EWaste
              value: 87
            - name: Batteries
              value: 90
        taxTypes:
          type: array
          description: The list of tax types to report on this return.
          items:
            type: string
        internalNotes:
          maxLength: 1000
          minLength: 0
          type: string
          description: "DEPRECATED - Date: 9/17/2021, Version: 21.9.0, Message: Field\
            \ will be no longer be available after the 21.9.0 release.\r\nInternal\
            \ filing notes."
          x-property-deprecation-info:
            date: 9/17/2021
            version: 21.9.0
            message: Field will be no longer be available after the 21.9.0 release.
        alSignOn:
          maxLength: 25
          minLength: 0
          type: string
          description: Custom filing information field for Alabama.
        alAccessCode:
          maxLength: 25
          minLength: 0
          type: string
          description: Custom filing information field for Alabama.
        meBusinessCode:
          maxLength: 50
          minLength: 0
          type: string
          description: Custom filing information field for Maine.
        iaBen:
          maxLength: 50
          minLength: 0
          type: string
          description: Custom filing information field for Iowa.
        ctReg:
          maxLength: 50
          minLength: 0
          type: string
          description: Custom filing information field for Connecticut.
        other1Name:
          maxLength: 50
          minLength: 0
          type: string
          description: Custom filing information field.  Leave blank.
        other1Value:
          maxLength: 50
          minLength: 0
          type: string
          description: Custom filing information field.  Leave blank.
        other2Name:
          maxLength: 50
          minLength: 0
          type: string
          description: Custom filing information field.  Leave blank.
        other2Value:
          maxLength: 50
          minLength: 0
          type: string
          description: Custom filing information field.  Leave blank.
        other3Name:
          maxLength: 50
          minLength: 0
          type: string
          description: Custom filing information field.  Leave blank.
        other3Value:
          maxLength: 50
          minLength: 0
          type: string
          description: Custom filing information field.  Leave blank.
        taxAuthorityId:
          type: integer
          description: The unique ID of the tax authority of this return.
          format: int32
          readOnly: true
        taxAuthorityName:
          type: string
          description: The name of the tax authority of this return.
          readOnly: true
        taxAuthorityType:
          type: string
          description: The type description of the tax authority of this return.
          readOnly: true
        createdDate:
          type: string
          description: The date when this record was created.
          format: date-time
          readOnly: true
        createdUserId:
          type: integer
          description: The User ID of the user who created this record.
          format: int32
          readOnly: true
        modifiedDate:
          type: string
          description: The date/time when this record was last modified.
          format: date-time
          readOnly: true
        modifiedUserId:
          type: integer
          description: The user ID of the user who last modified this record.
          format: int32
          readOnly: true
        bulkAccountId:
          type: string
          description: User name of bulk account.
          readOnly: true
        siteCode:
          type: string
          description: The bulk account site code.
          readOnly: true
        bulkAccountValidationStatus:
          type: string
          description: The status of the bulk account's validation.
          readOnly: true
          example: New
          enum:
          - New
          - Added
          - Failed
          x-enum-metadata:
            name: BulkAccountValidationStatus
            values:
            - name: New
              value: 0
            - name: Added
              value: 1
            - name: Failed
              value: 2
        settings:
          type: array
          description: CompanyReturn settings for complext filing calendar
          example:
          - id: 0
            companyReturnId: 123
            filingQuestionId: 26
            filingQuestionCode: EfileUsername
            value: bobExample
          items:
            $ref: '#/components/schemas/CompanyReturnSettingModel'
      description: "Represents a commitment to file a tax return on a recurring basis.\r\
        \nOnly used if you subscribe to Avalara Returns."
      example:
        id: 56789
        companyId: 12345
        returnName: CABOE401A2
        outletTypeId: None
        filingFrequencyId: Quarterly
        months: 2340
        stateRegistrationId: 101-123456
        employerIdentificationNumber: 12-3456789
        line1: 2000 Main Street
        city: Irvine
        region: CA
        postalCode: "92614"
        country: US
        phone: 714 555-1212
        legalEntityName: Bob's Artisan Pottery
        effectiveDate: 2015-01-01
        filingTypeId: ElectronicReturn
        prepayPercentage: 90
        prePaymentRequired: false
        taxTypeId: All
        settings:
        - id: 0
          companyReturnId: 123
          filingQuestionId: 26
          filingQuestionCode: EfileUsername
          value: bobExample
    FilingCalendarModelFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/FilingCalendarModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    QueryRequestModel:
      type: object
      properties:
        filter:
          type: string
          description: A list of conditions to filter objects.
        include:
          type: string
          description: A list of included commands for this fetch operation.
        maxResults:
          type: integer
          description: 'For pagination: This is the maximum number of results to return.'
          format: int32
        startIndex:
          type: integer
          description: 'For pagination: This is the index of the first result.'
          format: int32
        sortBy:
          type: string
          description: Sorts the resulting objects in a specific manner.
      description: Represents a complex query request to parse using query filter
        guidelines from Microsoft REST standards
      example:
        filter: id = 1
        maxResults: 10
        startIndex: 0
        sortBy: id asc
    CycleAddOptionModel:
      type: object
      properties:
        available:
          type: boolean
          description: True if this form can be added and filed for the current cycle.
            "Current cycle" is considered one month before the month of today's date.
          example: true
        transactionalPeriodStart:
          type: string
          description: The period start date for the customer's first transaction
            in the jurisdiction being added
          format: date
        transactionalPeriodEnd:
          type: string
          description: The period end date for the customer's last transaction in
            the jurisdiction being added
          format: date
        filingDueDate:
          type: string
          description: The jurisdiction-assigned due date for the form
          format: date
        cycleName:
          type: string
          description: A descriptive name of the cycle and due date of form.
          example: Monthly filing for April 2018, due May 20 2018.
        frequencyName:
          type: string
          description: The filing frequency of the form
          example: Monthly
        filingFrequencyCode:
          type: string
          description: A code assigned to the filing frequency
          example: M
        filingFrequencyId:
          type: string
          description: The filing frequency of the request
          example: Monthly
          enum:
          - Monthly
          - Quarterly
          - SemiAnnually
          - Annually
          - Bimonthly
          - Occasional
          - InverseQuarterly
          - Weekly
          x-enum-metadata:
            name: FilingFrequencyId
            values:
            - name: Monthly
              value: 1
            - name: Quarterly
              value: 2
            - name: SemiAnnually
              value: 3
            - name: Annually
              value: 4
            - name: Bimonthly
              value: 5
            - name: Occasional
              value: 6
            - name: InverseQuarterly
              value: 7
            - name: Weekly
              value: 8
        cycleUnavailableReason:
          type: string
          description: An explanation for why this form cannot be added for the current
            cycle
          example: ""
        availableLocationCodes:
          type: array
          description: A list of outlet codes that can be assigned to this form for
            the current cycle
          example: []
          items:
            type: string
      description: Model with options for adding a new filing calendar
      example:
        available: true
        transactionalPeriodStart: 2018-04-01
        transactionalPeriodEnd: 2018-04-30
        filingDueDate: 2018-05-20
        cycleName: Monthly filing for April 2018, due May 20 2018.
        frequencyName: Monthly
        filingFrequencyCode: M
        cycleUnavailableReason: ""
        availableLocationCodes: []
    CycleExpireOptionModel:
      type: object
      properties:
        transactionalPeriodStart:
          type: string
          description: The period start date for the customer's first transaction
            in the jurisdiction being expired.
          format: date
        transactionalPeriodEnd:
          type: string
          description: The period end date for the customer's last transaction in
            the jurisdiction being expired.
          format: date
        filingDueDate:
          type: string
          description: The jurisdiction-assigned due date for the form.
          format: date
        cycleName:
          type: string
          description: A descriptive name of the cycle and due date of the form.
          example: Monthly filing for December 2016, due January 20 2017.
      description: Options for expiring a filing calendar.
      example:
        transactionalPeriodStart: 2016-12-01
        transactionalPeriodEnd: 2016-12-31
        filingDueDate: 2017-01-20
        cycleName: Monthly filing for December 2016, due January 20 2017.
    CycleExpireModel:
      type: object
      properties:
        success:
          type: boolean
          description: "Whether or not the filing calendar can be expired.\r\ne.g.\
            \ if user makes end date of a calendar earlier than latest filing, this\
            \ would be set to false."
          example: true
        message:
          type: string
          description: The message to present to the user if expiration is successful
            or unsuccessful.
        cycleExpirationOptions:
          type: array
          description: A list of options for expiring the filing calendar.
          example:
          - transactionalPeriodStart: 2016-12-01
            transactionalPeriodEnd: 2016-12-31
            filingDueDate: 2017-01-20
            cycleName: Monthly filing for December 2016, due January 20 2017.
          items:
            $ref: '#/components/schemas/CycleExpireOptionModel'
      description: Cycle Safe Expiration results.
      example:
        success: true
        cycleExpirationOptions:
        - transactionalPeriodStart: 2016-12-01
          transactionalPeriodEnd: 2016-12-31
          filingDueDate: 2017-01-20
          cycleName: Monthly filing for December 2016, due January 20 2017.
    FilingCalendarEditModel:
      required:
      - fieldName
      - newValue
      - oldValue
      - questionId
      type: object
      properties:
        fieldName:
          type: string
          description: The name of the field to be modified.
          example: Ein
        questionId:
          type: integer
          description: The unique ID of the filing calendar question. "Filing calendar
            question" is the wording displayed to users for a given field.
          format: int32
          example: 36
        oldValue:
          type: object
          properties: {}
          description: The current value of the field.
          example: "002094004"
        newValue:
          type: object
          properties: {}
          description: The new/proposed value of the field.
          example: "002094005"
      description: An edit to be made on a filing calendar.
      example:
        fieldName: Ein
        questionId: 36
        oldValue: "002094004"
        newValue: "002094005"
    CycleEditOptionModel:
      type: object
      properties:
        success:
          type: boolean
          description: Whether or not changes can be made to the filing calendar.
          example: true
        message:
          type: string
          description: The message to present to the user when calendar is successfully
            or unsuccessfully changed.
          example: Clone unnecessary.  No approved instances of filing calendar
        customerMustApprove:
          type: boolean
          description: "Whether or not the user should be warned of a change, because\
            \ some changes are risky and may be being done not in accordance with\
            \ jurisdiction rules.\r\nFor example, user would be warned if user changes\
            \ filing frequency to new frequency with a start date during an accrual\
            \ month of the existing frequency."
          example: false
        mustCloneFilingCalendar:
          type: boolean
          description: True if the filing calendar must be cloned to allow this change;
            false if the existing filing calendar can be changed itself.
          example: false
        clonedCalendarEffDate:
          type: string
          description: The effective date of the filing calendar (only applies if
            cloning).
          format: date
        expiredCalendarEndDate:
          type: string
          description: The expired end date of the old filing calendar (only applies
            if cloning).
          format: date
      description: Model with options for actual filing calendar output based on user
        edits to filing calendar.
      example:
        success: true
        message: Clone unnecessary.  No approved instances of filing calendar
        customerMustApprove: false
        mustCloneFilingCalendar: false
    CycleSafeFilingCalendarEditModel:
      type: object
      properties:
        fieldName:
          type: string
          description: Field To Edit
          example: ""
        destination:
          type: string
          description: Destination is used to identify filing questions' type Other
            or Settings.
          example: ""
        questionId:
          type: integer
          description: Question
          format: int64
          example: 0
        questionCode:
          type: string
          description: The filing question code.
          example: ""
        oldValue:
          type: object
          properties: {}
          description: Old Value
          example: ""
        newValue:
          type: object
          properties: {}
          description: New Value
          example: ""
      description: Filing Calendar Edit
      example:
        fieldName: ""
        destination: ""
        questionId: 0
        questionCode: ""
        oldValue: ""
        newValue: ""
    CycleSafeEditRequestModel:
      type: object
      properties:
        companyId:
          type: integer
          description: Company Identifier
          format: int32
          example: 0
        taxFormCode:
          type: string
          description: Tax Form Code
          example: ""
        filingCalendarId:
          type: integer
          description: Filing Calendar Identifier
          format: int64
          example: 0
        edits:
          type: array
          description: Filing calendar edits
          example:
          - fieldName: ""
            destination: ""
            questionId: 0
            questionCode: ""
            oldValue: ""
            newValue: ""
          items:
            $ref: '#/components/schemas/CycleSafeFilingCalendarEditModel'
      description: Options for expiring a filing calendar.
      example:
        companyId: 0
        taxFormCode: ""
        filingCalendarId: 0
        edits:
        - fieldName: ""
          destination: ""
          questionId: 0
          questionCode: ""
          oldValue: ""
          newValue: ""
    AvailableCycleModel:
      type: object
      properties:
        transactionalPeriodStart:
          type: string
          description: Transactional Period Start
          format: date-time
        transactionalPeriodEnd:
          type: string
          description: Transactional Period End
          format: date-time
        filingDueDate:
          type: string
          description: Filing Due Date
          format: date-time
        cycleName:
          type: string
          description: Cycle Name
      description: Available Cycle object
      example:
        transactionalPeriodStart: 2022-01-10T15:49:31.774005+00:00
        transactionalPeriodEnd: 2022-02-09T15:49:31.773991+00:00
        filingDueDate: 2022-01-10T15:49:31.7739707+00:00
        cycleName: ""
    FrequencyAvailableModel:
      type: object
      properties:
        frequencyCode:
          type: string
          description: Frequency Code
        frequencyName:
          type: string
          description: Frequency Name
        reason:
          type: string
          description: Reason
        availableCycles:
          type: array
          description: Expired Calendar End Date
          items:
            $ref: '#/components/schemas/AvailableCycleModel'
      description: Frequency Available object
      example:
        frequencyCode: ""
        frequencyName: ""
        reason: ""
        availableCycles:
        - transactionalPeriodStart: 2022-01-10T15:49:31.7770947+00:00
          transactionalPeriodEnd: 2022-02-09T15:49:31.7770944+00:00
          filingDueDate: 2022-01-10T15:49:31.7770933+00:00
          cycleName: ""
    CycleSafeOptionResultModel:
      type: object
      properties:
        taxFormCode:
          type: string
          description: Tax Form Code
        mustCloneFilingCalendar:
          type: boolean
          description: Boolean if the Filing Calendar must be cloned
        clonedCalendarEffDate:
          type: string
          description: Cloned Calendar Effective Date
          format: date-time
        expiredCalendarEndDate:
          type: string
          description: Expired Calendar End Date
          format: date-time
        frequenciesAvailable:
          type: array
          description: Frequencies Available
          items:
            $ref: '#/components/schemas/FrequencyAvailableModel'
      description: CycleSafe Option Result
      example:
        taxFormCode: ""
        mustCloneFilingCalendar: false
        clonedCalendarEffDate: 2022-01-10T15:49:31.7798903+00:00
        expiredCalendarEndDate: 2022-02-09T15:49:31.7799151+00:00
        frequenciesAvailable: []
    FilingAnswerModel:
      required:
      - filingQuestionId
      type: object
      properties:
        filingQuestionId:
          type: integer
          description: The ID number for a filing question
          format: int64
          example: 1
        answer:
          type: object
          properties: {}
          description: The value of the answer for the filing question identified
            by filingQuestionId
          example: Answer to question 1
      description: ""
      example:
        filingQuestionId: 1
        answer: Answer to question 1
    FilingRequestDataModel:
      required:
      - effDate
      - filingFrequencyId
      - months
      type: object
      properties:
        companyReturnId:
          type: integer
          description: The company return ID if requesting an update.
          format: int64
          example: 1
        returnName:
          type: string
          description: "DEPRECATED - Date: 9/13/2018, Version: 18.10, Message: Please\
            \ use `taxFormCode` instead.\r\nThe legacy return name of the requested\
            \ calendar."
          example: WIST12CT
          x-property-deprecation-info:
            date: 9/13/2018
            version: "18.10"
            message: Please use `taxFormCode` instead.
        taxFormCode:
          type: string
          description: "The Avalara standard tax form code of the tax form for this\
            \ filing calendar.  The first two characters of the tax form code\r\n\
            are the ISO 3166 country code of the country that issued this form."
          example: US00194
        filingFrequencyId:
          type: string
          description: The filing frequency of the request
          example: Monthly
          enum:
          - Monthly
          - Quarterly
          - SemiAnnually
          - Annually
          - Bimonthly
          - Occasional
          - InverseQuarterly
          - Weekly
          x-enum-metadata:
            name: FilingFrequencyId
            values:
            - name: Monthly
              value: 1
            - name: Quarterly
              value: 2
            - name: SemiAnnually
              value: 3
            - name: Annually
              value: 4
            - name: Bimonthly
              value: 5
            - name: Occasional
              value: 6
            - name: InverseQuarterly
              value: 7
            - name: Weekly
              value: 8
        registrationId:
          type: string
          description: State registration ID of the company requesting the filing
            calendar.
          example: "1234"
        months:
          type: integer
          description: The months of the request
          format: int16
          example: 2
        fiscalYearStartMonth:
          type: integer
          description: The start period of a fiscal year for this form/company
          format: int32
        taxTypeId:
          type: string
          description: The type of tax to report on this return.
          example: E
          enum:
          - E
          - Lodging
          - Bottle
          - RentToOwn
          - BikeTax
          - LandedCost
          - CheckoutBag
          - Alcohol
          - Amusement
          - Hospitality
          - RentalLeasing
          - GrossReceipts
          - Mattress
          - Lumber
          - Paint
          - Tires
          - EI
          - All
          - BothSalesAndUseTax
          - ConsumerUseTax
          - ConsumersUseAndSellersUseTax
          - ConsumerUseAndSalesTax
          - Fee
          - VATInputTax
          - LightBulbs
          - Meals
          - VATNonrecoverableInputTax
          - VATOutputTax
          - PIF
          - Rental
          - SalesTax
          - UseTax
          - EWaste
          - Batteries
          x-enum-metadata:
            name: MatchingTaxType
            values:
            - name: E
              value: 5
            - name: Lodging
              value: 6
            - name: Bottle
              value: 7
            - name: RentToOwn
              value: 8
            - name: BikeTax
              value: 11
            - name: LandedCost
              value: 12
            - name: CheckoutBag
              value: 13
            - name: Alcohol
              value: 17
            - name: Amusement
              value: 20
            - name: Hospitality
              value: 21
            - name: RentalLeasing
              value: 23
            - name: GrossReceipts
              value: 24
            - name: Mattress
              value: 25
            - name: Lumber
              value: 27
            - name: Paint
              value: 28
            - name: Tires
              value: 29
            - name: EI
              value: 30
            - name: All
              value: 65
            - name: BothSalesAndUseTax
              value: 66
            - name: ConsumerUseTax
              value: 67
            - name: ConsumersUseAndSellersUseTax
              value: 68
            - name: ConsumerUseAndSalesTax
              value: 69
            - name: Fee
              value: 70
            - name: VATInputTax
              value: 73
            - name: LightBulbs
              value: 76
            - name: Meals
              value: 77
            - name: VATNonrecoverableInputTax
              value: 78
            - name: VATOutputTax
              value: 79
            - name: PIF
              value: 80
            - name: Rental
              value: 82
            - name: SalesTax
              value: 83
            - name: UseTax
              value: 85
            - name: EWaste
              value: 87
            - name: Batteries
              value: 90
        locationCode:
          type: string
          description: Location code of the request
          example: LOC-1
        effDate:
          type: string
          description: Filing cycle effective date of the request
          format: date
        endDate:
          type: string
          description: Filing cycle end date of the request
          format: date
        isClone:
          type: boolean
          description: Flag if the request is a clone of a current filing calendar
          example: false
        country:
          type: string
          description: The two character ISO 3166 country code of the country that
            issued the tax form for this filing calendar.
          readOnly: true
          example: US
        region:
          type: string
          description: The two or three character ISO 3166 code of the region / state
            / province that issued the tax form for this filing calendar.
          readOnly: true
          example: WI
        taxAuthorityId:
          type: integer
          description: The tax authority id of the return
          format: int32
          readOnly: true
          example: 121
        taxAuthorityName:
          type: string
          description: The tax authority name on the return
          readOnly: true
          example: WISCONSIN
        answers:
          type: array
          description: Filing question answers
          example:
          - filingQuestionId: 1
            answer: Answer to question 1
          - filingQuestionId: 2
            answer: Answer to question 2
          items:
            $ref: '#/components/schemas/FilingAnswerModel'
      description: "Represents a commitment to file a tax return on a recurring basis.\r\
        \nOnly used if you subscribe to Avalara Returns."
      example:
        companyReturnId: 1
        returnName: WIST12CT
        taxFormCode: US00194
        filingFrequencyId: Monthly
        registrationId: "1234"
        months: 2
        taxTypeId: SalesTax
        locationCode: LOC-1
        effDate: 2017-01-01
        endDate: 2020-01-01
        isClone: false
        country: US
        region: WI
        taxAuthorityId: 121
        taxAuthorityName: WISCONSIN
        answers:
        - filingQuestionId: 1
          answer: Answer to question 1
        - filingQuestionId: 2
          answer: Answer to question 2
    FilingRequestModel:
      required:
      - companyId
      - data
      type: object
      properties:
        id:
          type: integer
          description: The unique ID number of this filing request.
          format: int64
          example: 12345
        companyId:
          type: integer
          description: The unique ID number of the company to which this filing request
            belongs.
          format: int32
          example: 12345
        filingRequestStatusId:
          type: string
          description: The current status of this request
          readOnly: true
          example: New
          enum:
          - New
          - Validated
          - Pending
          - Active
          - PendingStop
          - Inactive
          - ChangeRequest
          - RequestApproved
          - RequestDenied
          x-enum-metadata:
            name: FilingRequestStatus
            values:
            - name: New
              value: 1
            - name: Validated
              value: 2
            - name: Pending
              value: 3
            - name: Active
              value: 4
            - name: PendingStop
              value: 5
            - name: Inactive
              value: 6
            - name: ChangeRequest
              value: 7
            - name: RequestApproved
              value: 8
            - name: RequestDenied
              value: 9
        data:
          $ref: '#/components/schemas/FilingRequestDataModel'
        createdDate:
          type: string
          description: The date when this record was created.
          format: date-time
          readOnly: true
        createdUserId:
          type: integer
          description: The User ID of the user who created this record.
          format: int32
          readOnly: true
        modifiedDate:
          type: string
          description: The date/time when this record was last modified.
          format: date-time
          readOnly: true
        modifiedUserId:
          type: integer
          description: The user ID of the user who last modified this record.
          format: int32
          readOnly: true
      description: "Represents a commitment to file a tax return on a recurring basis.\r\
        \nOnly used if you subscribe to Avalara Returns."
      example:
        id: 12345
        companyId: 12345
        filingRequestStatusId: New
        data:
          companyReturnId: 1
          returnName: WIST12CT
          filingFrequencyId: Monthly
          registrationId: "1234"
          months: 2
          taxTypeId: SalesTax
          locationCode: LOC-1
          effDate: 2017-01-01
          endDate: 2017-01-01
          isClone: false
          region: WI
          taxAuthorityId: 121
          taxAuthorityName: WISCONSIN
          answers:
          - filingQuestionId: 1
            answer: Answer to question 1
          - filingQuestionId: 2
            answer: Answer to question 2
    FilingRequestModelFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/FilingRequestModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    LoginVerificationOutputModel:
      required:
      - jobId
      type: object
      properties:
        jobId:
          type: integer
          description: The job Id returned from skyscraper
          format: int32
          example: 8366
        operationStatus:
          type: string
          description: The operation status of the job
          example: Pending
        message:
          type: string
          description: The message returned from the job
          example: ""
        loginSuccess:
          type: boolean
          description: Indicates if the login was successful
          example: true
      description: This is the output model coming from skyscraper services
      example:
        jobId: 8366
        operationStatus: Pending
        message: ""
        loginSuccess: true
    LoginVerificationInputModel:
      required:
      - accountId
      - companyId
      - password
      - region
      - username
      type: object
      properties:
        companyId:
          type: integer
          description: CompanyId that we are verifying the login information for
          format: int32
          example: 12345
        accountId:
          type: integer
          description: AccountId of the login verification
          format: int32
          example: 1987654323
        region:
          type: string
          description: Region of the verification request
          example: AR
        taxFormCode:
          type: string
          description: TaxFormCode for the verification request
          example: USARET1
        username:
          type: string
          description: Username that we are using for verification
          example: Test
        password:
          type: string
          description: Password we are using for verification
          example: Test
        additionalOptions:
          type: object
          additionalProperties:
            type: string
          description: Additional options of the verification
          example:
            key: 4133|AR-2131232-13
        bulkRequestId:
          type: integer
          description: Bulk Request Id of the verification
          format: int32
          example: 1
        priority:
          type: integer
          description: Priority of the verification request
          format: int32
          example: 2
      description: Represents a verification request using Skyscraper for a company
      example:
        companyId: 12345
        accountId: 1987654323
        region: AR
        taxFormCode: USARET1
        username: Test
        password: Test
        additionalOptions:
          key: 4133|AR-2131232-13
        bulkRequestId: 1
        priority: 2
    ResourceFileDownloadResult:
      type: object
      properties:
        success:
          type: boolean
          description: True if this download succeeded
        bytes:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          description: Bytes of the file
          format: byte
        filename:
          type: string
          description: Original filename
        contentType:
          type: string
          description: Mime content type
      description: Represents everything downloaded from resource files
    PowerOfAttorneyCheckModel:
      type: object
      properties:
        companyId:
          type: integer
          description: companyId of the request
          format: int32
          example: 12345
        country:
          type: string
          description: Country POA is for
          example: US
        region:
          type: string
          description: Region POA is for
          example: WI
        activePoa:
          type: boolean
          description: Notes if there is an actice POA
          example: true
        effectiveDate:
          type: string
          description: Effective Date of the POA
          format: date-time
        expirationDate:
          type: string
          description: End Date of POA
          format: date-time
        availablePoa:
          $ref: '#/components/schemas/ResourceFileDownloadResult'
      description: Response when checking if a company has a POA on file with Avalara
      example:
        companyId: 12345
        country: US
        region: WI
        activePoa: true
    FilingAttachmentModel:
      type: object
      properties:
        resourceFileId:
          type: integer
          description: The resourceFileId used to retrieve the attachment
          format: int32
          example: 71
        description:
          type: string
          description: The description of the attachment
          example: Form XYZ Confirmation
      description: An attachment associated with a filing return
      example:
        resourceFileId: 71
        description: Form XYZ Confirmation
    FilingReturnModelBasic:
      type: object
      properties:
        companyId:
          type: integer
          description: The unique ID number of the company filing return.
          format: int64
          example: 0
        id:
          type: integer
          description: The unique ID number of this filing return.
          format: int64
          example: 5233103
        filingId:
          type: integer
          description: The filing id that this return belongs too
          format: int64
          example: 0
        resourceFileId:
          type: integer
          description: The resourceFileId of the return
          format: int64
          example: 0
        filingRegionId:
          type: integer
          description: The region id that this return belongs too
          format: int64
          example: 0
        filingCalendarId:
          type: integer
          description: The unique ID number of the filing calendar associated with
            this return.
          format: int64
          example: 513256
        country:
          type: string
          description: The country of the form.
        region:
          type: string
          description: The region of the form.
        endPeriodMonth:
          type: integer
          description: "The month of the filing period for this tax filing.\r\nThe\
            \ filing period represents the year and month of the last day of taxes\
            \ being reported on this filing.\r\nFor example, an annual tax filing\
            \ for Jan-Dec 2015 would have a filing period of Dec 2015."
          format: int32
          example: 1
        endPeriodYear:
          type: integer
          description: "The year of the filing period for this tax filing.\r\nThe\
            \ filing period represents the year and month of the last day of taxes\
            \ being reported on this filing.\r\nFor example, an annual tax filing\
            \ for Jan-Dec 2015 would have a filing period of Dec 2015."
          format: int16
          example: 2017
        status:
          type: string
          description: The current status of the filing return.
          example: PendingApproval
          enum:
          - PendingApproval
          - Dirty
          - ApprovedToFile
          - PendingFiling
          - PendingFilingOnBehalf
          - Filed
          - FiledOnBehalf
          - ReturnAccepted
          - ReturnAcceptedOnBehalf
          - PaymentRemitted
          - Voided
          - PendingReturn
          - PendingReturnOnBehalf
          - DoNotFile
          - ReturnRejected
          - ReturnRejectedOnBehalf
          - ApprovedToFileOnBehalf
          x-enum-metadata:
            name: FilingStatusId
            values:
            - name: PendingApproval
              value: 0
            - name: Dirty
              value: 1
            - name: ApprovedToFile
              value: 2
            - name: PendingFiling
              value: 3
            - name: PendingFilingOnBehalf
              value: 4
            - name: Filed
              value: 5
            - name: FiledOnBehalf
              value: 6
            - name: ReturnAccepted
              value: 7
            - name: ReturnAcceptedOnBehalf
              value: 8
            - name: PaymentRemitted
              value: 9
            - name: Voided
              value: 10
            - name: PendingReturn
              value: 11
            - name: PendingReturnOnBehalf
              value: 12
            - name: DoNotFile
              value: 13
            - name: ReturnRejected
              value: 14
            - name: ReturnRejectedOnBehalf
              value: 15
            - name: ApprovedToFileOnBehalf
              value: 16
        filingFrequency:
          type: string
          description: The filing frequency of the return.
          example: Monthly
          enum:
          - Monthly
          - Quarterly
          - SemiAnnually
          - Annually
          - Bimonthly
          - Occasional
          - InverseQuarterly
          - Weekly
          x-enum-metadata:
            name: FilingFrequencyId
            values:
            - name: Monthly
              value: 1
            - name: Quarterly
              value: 2
            - name: SemiAnnually
              value: 3
            - name: Annually
              value: 4
            - name: Bimonthly
              value: 5
            - name: Occasional
              value: 6
            - name: InverseQuarterly
              value: 7
            - name: Weekly
              value: 8
        filedDate:
          type: string
          description: The date the return was filed by Avalara.
          format: date-time
        salesAmount:
          type: number
          description: The sales amount.
          format: double
          example: 0.0
        filingType:
          type: string
          description: The filing type of the return.
          example: PaperReturn
          enum:
          - PaperReturn
          - ElectronicReturn
          - SER
          - EFTPaper
          - PhonePaper
          - SignatureReady
          - EfileCheck
          x-enum-metadata:
            name: FilingTypeId
            values:
            - name: PaperReturn
              value: 0
            - name: ElectronicReturn
              value: 1
            - name: SER
              value: 2
            - name: EFTPaper
              value: 3
            - name: PhonePaper
              value: 4
            - name: SignatureReady
              value: 5
            - name: EfileCheck
              value: 6
        formName:
          type: string
          description: The name of the form.
          example: AL 2100
        remitAmount:
          type: number
          description: The remittance amount of the return.
          format: double
          example: 0.0
        formCode:
          type: string
          description: The unique code of the form.
          example: AL2100
        description:
          type: string
          description: A description for the return.
          example: Sales Tax Return
        taxableAmount:
          type: number
          description: The taxable amount.
          format: double
          example: 0.0
        taxAmount:
          type: number
          description: The tax amount.
          format: double
          example: 0.0
        collectAmount:
          type: number
          description: The amount collected by avalara for this return
          format: double
          example: 1.0
        taxDueAmount:
          type: number
          description: The tax due amount.
          format: double
          example: 0.0
        nonTaxableAmount:
          type: number
          description: The non-taxable amount.
          format: double
          example: 0.0
        nonTaxableDueAmount:
          type: number
          description: The non-taxable due amount.
          format: double
          example: 0.0
        consumerUseTaxAmount:
          type: number
          description: Consumer use tax liability.
          format: double
          example: 0.0
        consumerUseNonTaxableAmount:
          type: number
          description: Consumer use non-taxable amount.
          format: double
          example: 0.0
        consumerUseTaxableAmount:
          type: number
          description: Consumer use taxable amount.
          format: double
          example: 0.0
        excludedSalesAmount:
          type: number
          description: The amount of sales excluded from the liability calculation
          format: double
          example: 0.0
        excludedNonTaxableAmount:
          type: number
          description: The amount of non-taxable sales excluded from the liability
            calculation
          format: double
          example: 0.0
        excludedTaxAmount:
          type: number
          description: The amount of tax excluded from the liability calculation
          format: double
          example: 0.0
        accrualType:
          type: string
          description: Accrual type of the return
          example: Filing
          enum:
          - Filing
          - Accrual
          x-enum-metadata:
            name: AccrualType
            values:
            - name: Filing
              value: 1
            - name: Accrual
              value: 2
        attachments:
          type: array
          description: The attachments for this return.
          items:
            $ref: '#/components/schemas/FilingAttachmentModel'
        createdDate:
          type: string
          description: The date when this record was created.
          format: date-time
          readOnly: true
        createdUserId:
          type: integer
          description: The User ID of the user who created this record.
          format: int32
          readOnly: true
        modifiedDate:
          type: string
          description: The date/time when this record was last modified.
          format: date-time
          readOnly: true
      description: Filing Returns Model
      example:
        companyId: 0
        id: 5233103
        filingId: 0
        resourceFileId: 0
        filingRegionId: 0
        filingCalendarId: 513256
        endPeriodMonth: 1
        endPeriodYear: 2017
        status: PendingApproval
        filingFrequency: Monthly
        salesAmount: 0
        filingType: ElectronicReturn
        formName: AL 2100
        remitAmount: 0
        formCode: AL2100
        description: Sales Tax Return
        taxableAmount: 0
        taxAmount: 0
        collectAmount: 1
        taxDueAmount: 0
        nonTaxableAmount: 0
        nonTaxableDueAmount: 0
        consumerUseTaxAmount: 0
        consumerUseNonTaxableAmount: 0
        consumerUseTaxableAmount: 0
        excludedSalesAmount: 0
        excludedNonTaxableAmount: 0
        excludedTaxAmount: 0
        accrualType: 0
    FilingReturnModelBasicFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/FilingReturnModelBasic'
        '@nextLink':
          type: string
        pageKey:
          type: string
    FiledReturnModel:
      type: object
      properties:
        companyId:
          type: integer
          description: The unique ID number of the company filing return.
          format: int64
          example: 12345
        endPeriodMonth:
          type: integer
          description: "The month of the filing period for this tax filing.\r\nThe\
            \ filing period represents the year and month of the last day of taxes\
            \ being reported on this filing.\r\nFor example, an annual tax filing\
            \ for Jan-Dec 2015 would have a filing period of Dec 2015."
          format: int32
          example: 1
        endPeriodYear:
          type: integer
          description: "The year of the filing period for this tax filing.\r\nThe\
            \ filing period represents the year and month of the last day of taxes\
            \ being reported on this filing.\r\nFor example, an annual tax filing\
            \ for Jan-Dec 2015 would have a filing period of Dec 2015."
          format: int16
          example: 2017
        taxformCode:
          type: string
          description: The unique code of the form.
          example: USAZTPT2
      description: Filing Returns Model
      example:
        companyId: 12345
        endPeriodMonth: 1
        endPeriodYear: 2017
        taxformCode: USAZTPT2
    FiledReturnModelFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/FiledReturnModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    FilingAdjustmentModel:
      required:
      - accountType
      - amount
      - period
      - type
      type: object
      properties:
        id:
          type: integer
          description: The unique ID number for the adjustment.
          format: int64
          readOnly: true
          example: 15634
        filingId:
          type: integer
          description: The filing return id that this applies too
          format: int64
          readOnly: true
        amount:
          type: number
          description: The adjustment amount.
          format: double
          example: 100.0
        period:
          type: string
          description: The filing period the adjustment is applied to.
          example: None
          enum:
          - None
          - CurrentPeriod
          - NextPeriod
          x-enum-metadata:
            name: AdjustmentPeriodTypeId
            values:
            - name: None
              value: 0
            - name: CurrentPeriod
              value: 1
            - name: NextPeriod
              value: 2
        type:
          type: string
          description: The type of the adjustment.
          example: Discount
        isCalculated:
          type: boolean
          description: Whether or not the adjustment has been calculated.
          example: false
        accountType:
          type: string
          description: The account type of the adjustment.
          example: None
          enum:
          - None
          - AccountsReceivableAccountsPayable
          - AccountsReceivable
          - AccountsPayable
          x-enum-metadata:
            name: PaymentAccountTypeId
            values:
            - name: None
              value: 0
            - name: AccountsReceivableAccountsPayable
              value: 1
            - name: AccountsReceivable
              value: 2
            - name: AccountsPayable
              value: 3
        reason:
          type: string
          description: A descriptive reason for creating this adjustment.
        createdDate:
          type: string
          description: The date when this record was created.
          format: date-time
          readOnly: true
        createdUserId:
          type: integer
          description: The User ID of the user who created this record.
          format: int32
          readOnly: true
        modifiedDate:
          type: string
          description: The date/time when this record was last modified.
          format: date-time
          readOnly: true
        modifiedUserId:
          type: integer
          description: The user ID of the user who last modified this record.
          format: int32
          readOnly: true
      description: A model for return adjustments.
      example:
        id: 15634
        amount: 100
        period: CurrentPeriod
        type: Discount
        isCalculated: false
        accountType: AccountsReceivableAccountsPayable
    FilingAugmentationModel:
      required:
      - fieldAmount
      - fieldName
      type: object
      properties:
        id:
          type: integer
          description: The unique ID number for the augmentation.
          format: int64
          readOnly: true
          example: 103230
        filingId:
          type: integer
          description: The filing return id that this applies too
          format: int64
          readOnly: true
        fieldAmount:
          type: number
          description: The field amount.
          format: double
          example: 10.0
        fieldName:
          type: string
          description: The field name.
          example: Credit from the State
        createdDate:
          type: string
          description: The date when this record was created.
          format: date-time
          readOnly: true
        createdUserId:
          type: integer
          description: The User ID of the user who created this record.
          format: int32
          readOnly: true
        modifiedDate:
          type: string
          description: The date/time when this record was last modified.
          format: date-time
          readOnly: true
        modifiedUserId:
          type: integer
          description: The user ID of the user who last modified this record.
          format: int32
          readOnly: true
      description: A model for return augmentations.
      example:
        id: 103230
        fieldAmount: 10
        fieldName: Credit from the State
    FilingPaymentModel:
      required:
      - filingId
      - paymentAmount
      - type
      type: object
      properties:
        id:
          type: integer
          description: The unique ID number for the payment.
          format: int64
          readOnly: true
          example: 15634
        filingId:
          type: integer
          description: The filing return id that this applies too
          format: int64
          example: 1234
        paymentAmount:
          type: number
          description: The payment amount.
          format: double
          example: 100.0
        type:
          type: string
          description: The type of the payment.
          example: CurrentPeriod
          enum:
          - CurrentPeriod
          - Prepayment
          - PriorPayment
          - PriorCspFee
          x-enum-metadata:
            name: PaymentType
            values:
            - name: CurrentPeriod
              value: 0
            - name: Prepayment
              value: 1
            - name: PriorPayment
              value: 2
            - name: PriorCspFee
              value: 3
        isCalculated:
          type: boolean
          description: Whether or not the payment has been calculated.
          example: false
        createdDate:
          type: string
          description: The date when this record was created.
          format: date-time
          readOnly: true
        createdUserId:
          type: integer
          description: The User ID of the user who created this record.
          format: int32
          readOnly: true
        modifiedDate:
          type: string
          description: The date/time when this record was last modified.
          format: date-time
          readOnly: true
        modifiedUserId:
          type: integer
          description: The user ID of the user who last modified this record.
          format: int32
          readOnly: true
      description: A model for return payments.
      example:
        id: 15634
        filingId: 1234
        paymentAmount: 100
        type: CurrentPeriod
        isCalculated: false
    Message:
      type: object
      properties:
        details:
          type: string
        helpLink:
          type: string
        name:
          type: string
        refersTo:
          type: string
        severity:
          type: string
          example: Success
          enum:
          - Success
          - Warning
          - Error
          - Exception
        source:
          type: string
        summary:
          type: string
    WorksheetDocumentLine:
      type: object
      properties:
        reportingDate:
          type: string
          format: date-time
        lineNo:
          type: string
        lineAmount:
          type: number
          format: double
        exemptAmount:
          type: number
          format: double
        taxableAmount:
          type: number
          format: double
        taxAmount:
          type: number
          format: double
        messages:
          type: array
          items:
            $ref: '#/components/schemas/Message'
        resultCode:
          type: string
          example: Success
          enum:
          - Success
          - Warning
          - Error
          - Exception
        transactionId:
          type: string
    WorksheetDocument:
      type: object
      properties:
        docCode:
          type: string
        docDate:
          type: string
          format: date-time
        totalExempt:
          type: number
          format: double
        totalTaxable:
          type: number
          format: double
        totalTax:
          type: number
          format: double
        lines:
          type: array
          items:
            $ref: '#/components/schemas/WorksheetDocumentLine'
        messages:
          type: array
          items:
            $ref: '#/components/schemas/Message'
        resultCode:
          type: string
          example: Success
          enum:
          - Success
          - Warning
          - Error
          - Exception
        transactionId:
          type: string
    FilingReturnCreditModel:
      type: object
      properties:
        totalSales:
          type: number
          description: The resourceFileId used to retrieve the attachment
          format: double
          example: 0.0
        totalExempt:
          type: number
          description: The resourceFileId used to retrieve the attachment
          format: double
          example: 0.0
        totalTaxable:
          type: number
          description: The resourceFileId used to retrieve the attachment
          format: double
          example: 0.0
        totalTax:
          type: number
          description: The resourceFileId used to retrieve the attachment
          format: double
          example: 0.0
        transactionDetails:
          type: array
          description: The excluded carry over credit documents
          items:
            $ref: '#/components/schemas/WorksheetDocument'
      description: An attachment associated with a filing return
      example:
        totalSales: 0
        totalExempt: 0
        totalTaxable: 0
        totalTax: 0
    FilingReturnModel:
      type: object
      properties:
        id:
          type: integer
          description: The unique ID number of this filing return.
          format: int64
          example: 5233103
        filingRegionId:
          type: integer
          description: The region id that this return belongs too
          format: int64
          example: 0
        filingCalendarId:
          type: integer
          description: The unique ID number of the filing calendar associated with
            this return.
          format: int64
          example: 513256
        resourceFileId:
          type: integer
          description: The resourceFileId of the return.  Will be null if not available.
          format: int64
        taxAuthorityId:
          type: integer
          description: Tax Authority ID of this return
          format: int32
        status:
          type: string
          description: The current status of the filing return.
          example: PendingApproval
          enum:
          - PendingApproval
          - Dirty
          - ApprovedToFile
          - PendingFiling
          - PendingFilingOnBehalf
          - Filed
          - FiledOnBehalf
          - ReturnAccepted
          - ReturnAcceptedOnBehalf
          - PaymentRemitted
          - Voided
          - PendingReturn
          - PendingReturnOnBehalf
          - DoNotFile
          - ReturnRejected
          - ReturnRejectedOnBehalf
          - ApprovedToFileOnBehalf
          x-enum-metadata:
            name: FilingStatusId
            values:
            - name: PendingApproval
              value: 0
            - name: Dirty
              value: 1
            - name: ApprovedToFile
              value: 2
            - name: PendingFiling
              value: 3
            - name: PendingFilingOnBehalf
              value: 4
            - name: Filed
              value: 5
            - name: FiledOnBehalf
              value: 6
            - name: ReturnAccepted
              value: 7
            - name: ReturnAcceptedOnBehalf
              value: 8
            - name: PaymentRemitted
              value: 9
            - name: Voided
              value: 10
            - name: PendingReturn
              value: 11
            - name: PendingReturnOnBehalf
              value: 12
            - name: DoNotFile
              value: 13
            - name: ReturnRejected
              value: 14
            - name: ReturnRejectedOnBehalf
              value: 15
            - name: ApprovedToFileOnBehalf
              value: 16
        filingFrequency:
          type: string
          description: The filing frequency of the return.
          example: Monthly
          enum:
          - Monthly
          - Quarterly
          - SemiAnnually
          - Annually
          - Bimonthly
          - Occasional
          - InverseQuarterly
          - Weekly
          x-enum-metadata:
            name: FilingFrequencyId
            values:
            - name: Monthly
              value: 1
            - name: Quarterly
              value: 2
            - name: SemiAnnually
              value: 3
            - name: Annually
              value: 4
            - name: Bimonthly
              value: 5
            - name: Occasional
              value: 6
            - name: InverseQuarterly
              value: 7
            - name: Weekly
              value: 8
        filedDate:
          type: string
          description: The date the return was filed by Avalara.
          format: date-time
        startPeriod:
          type: string
          description: The start date of this return
          format: date-time
        endPeriod:
          type: string
          description: The end date of this return
          format: date-time
        salesAmount:
          type: number
          description: The sales amount.
          format: double
          example: 0.0
        filingType:
          type: string
          description: The filing type of the return.
          example: PaperReturn
          enum:
          - PaperReturn
          - ElectronicReturn
          - SER
          - EFTPaper
          - PhonePaper
          - SignatureReady
          - EfileCheck
          x-enum-metadata:
            name: FilingTypeId
            values:
            - name: PaperReturn
              value: 0
            - name: ElectronicReturn
              value: 1
            - name: SER
              value: 2
            - name: EFTPaper
              value: 3
            - name: PhonePaper
              value: 4
            - name: SignatureReady
              value: 5
            - name: EfileCheck
              value: 6
        formName:
          type: string
          description: The name of the form.
          example: AL 2100
        remitAmount:
          type: number
          description: The remittance amount of the return.
          format: double
          example: 0.0
        formCode:
          type: string
          description: The unique code of the form.
          example: AL2100
        description:
          type: string
          description: A description for the return.
          example: Sales Tax Return
        taxableAmount:
          type: number
          description: The taxable amount.
          format: double
          example: 0.0
        taxAmount:
          type: number
          description: The tax amount.
          format: double
          example: 0.0
        collectAmount:
          type: number
          description: The amount collected by avalara for this return
          format: double
          example: 1.0
        taxDueAmount:
          type: number
          description: The tax due amount.
          format: double
          example: 0.0
        nonTaxableAmount:
          type: number
          description: The non-taxable amount.
          format: double
          example: 0.0
        nonTaxableDueAmount:
          type: number
          description: The non-taxable due amount.
          format: double
          example: 0.0
        consumerUseTaxAmount:
          type: number
          description: Consumer use tax liability during the period.
          format: double
          example: 0.0
        consumerUseTaxDueAmount:
          type: number
          description: Consumer use tax liability accrued during the period.
          format: double
          example: 0.0
        consumerUseNonTaxableAmount:
          type: number
          description: Consumer use non-taxable amount.
          format: double
          example: 0.0
        consumerUseTaxableAmount:
          type: number
          description: Consumer use taxable amount.
          format: double
          example: 0.0
        totalAdjustments:
          type: number
          description: Total amount of adjustments on this return
          format: double
          example: 0.0
        excludedSalesAmount:
          type: number
          description: The amount of sales excluded from the liability calculation
          format: double
          example: 0.0
        excludedNonTaxableAmount:
          type: number
          description: The amount of non-taxable sales excluded from the liability
            calculation
          format: double
          example: 0.0
        excludedTaxAmount:
          type: number
          description: The amount of tax excluded from the liability calculation
          format: double
          example: 0.0
        carryOverSalesAmount:
          type: number
          description: The amount of carry over sales applied to the liability calculation
          format: double
          example: 0.0
        carryOverNonTaxableAmount:
          type: number
          description: The amount of carry over non taxable sales applied to the liability
            calculation
          format: double
          example: 0.0
        carryOverTaxAmount:
          type: number
          description: The amount of carry over sales tax applied to the liability
            calculation
          format: double
          example: 0.0
        carryOverConsumerUseTaxAmount:
          type: number
          description: The amount of carry over consumer use tax applied to the liability
            calculation
          format: double
          example: 0.0
        taxAccrualAmount:
          type: number
          description: The total amount of total tax accrued in the current active
            period
          format: double
          example: 0.0
        salesAccrualAmount:
          type: number
          description: The total amount of sales accrued in the current active period
          format: double
          example: 0.0
        nonTaxableAccrualAmount:
          type: number
          description: The total amount of nontaxable sales accrued in the current
            active period
          format: double
          example: 0.0
        taxableAccrualAmount:
          type: number
          description: The total amount of taxable sales accrued in the current active
            period
          format: double
          example: 0.0
        salesTaxAccrualAmount:
          type: number
          description: The total amount of sales tax accrued in the current active
            period
          format: double
          example: 0.0
        sellersUseTaxAccrualAmount:
          type: number
          description: The total amount of sellers use tax accrued in the current
            active period
          format: double
          example: 0.0
        consumerUseTaxAccrualAmount:
          type: number
          description: The total amount of consumer use tax accrued in the current
            active period
          format: double
          example: 0.0
        consumerUseTaxableAccrualAmount:
          type: number
          description: The total amount of consumer use taxable sales accrued in the
            current active period
          format: double
          example: 0.0
        consumerUseNonTaxableAccrualAmount:
          type: number
          description: The total amount of consumer use non taxable sales accrued
            in the current active period
          format: double
          example: 0.0
        adjustments:
          type: array
          description: The Adjustments for this return.
          example:
          - id: 15634
            amount: 100
            period: CurrentPeriod
            type: Discount
            isCalculated: false
            accountType: AccountsReceivableAccountsPayable
          items:
            $ref: '#/components/schemas/FilingAdjustmentModel'
        totalAugmentations:
          type: number
          description: Total amount of augmentations on this return
          format: double
          example: 0.0
        augmentations:
          type: array
          description: The Augmentations for this return.
          example:
          - id: 103230
            fieldAmount: 10
            fieldName: Credit from the State
          items:
            $ref: '#/components/schemas/FilingAugmentationModel'
        totalPayments:
          type: number
          description: Total amount of payments on this return
          format: double
          example: 0.0
        payments:
          type: array
          description: The payments for this return.
          items:
            $ref: '#/components/schemas/FilingPaymentModel'
        accrualType:
          type: string
          description: Accrual type of the return
          example: Filing
          enum:
          - Filing
          - Accrual
          x-enum-metadata:
            name: AccrualType
            values:
            - name: Filing
              value: 1
            - name: Accrual
              value: 2
        month:
          type: integer
          description: "The month of the filing period for this tax filing.\r\nThe\
            \ filing period represents the year and month of the last day of taxes\
            \ being reported on this filing.\r\nFor example, an annual tax filing\
            \ for Jan-Dec 2015 would have a filing period of Dec 2015."
          format: int32
        year:
          type: integer
          description: "The year of the filing period for this tax filing.\r\nThe\
            \ filing period represents the year and month of the last day of taxes\
            \ being reported on this filing.\r\nFor example, an annual tax filing\
            \ for Jan-Dec 2015 would have a filing period of Dec 2015."
          format: int32
        type:
          type: string
          description: The FilingTaskType for this return.
        attachments:
          type: array
          description: The attachments for this return.
          items:
            $ref: '#/components/schemas/FilingAttachmentModel'
        excludedCarryOverCredits:
          $ref: '#/components/schemas/FilingReturnCreditModel'
        appliedCarryOverCredits:
          $ref: '#/components/schemas/FilingReturnCreditModel'
        createdDate:
          type: string
          description: The date when this record was created.
          format: date-time
          readOnly: true
        createdUserId:
          type: integer
          description: The User ID of the user who created this record.
          format: int32
          readOnly: true
        modifiedDate:
          type: string
          description: The date/time when this record was last modified.
          format: date-time
          readOnly: true
      description: Filing Returns Model
      example:
        id: 5233103
        filingRegionId: 0
        filingCalendarId: 513256
        status: PendingApproval
        filingFrequency: Monthly
        salesAmount: 0
        filingType: ElectronicReturn
        formName: AL 2100
        remitAmount: 0
        formCode: AL2100
        description: Sales Tax Return
        taxableAmount: 0
        taxAmount: 0
        collectAmount: 1
        taxDueAmount: 0
        nonTaxableAmount: 0
        nonTaxableDueAmount: 0
        consumerUseTaxAmount: 0
        consumerUseTaxDueAmount: 0
        consumerUseNonTaxableAmount: 0
        consumerUseTaxableAmount: 0
        totalAdjustments: 0
        excludedSalesAmount: 0
        excludedNonTaxableAmount: 0
        excludedTaxAmount: 0
        carryOverSalesAmount: 0
        carryOverNonTaxableAmount: 0
        carryOverTaxAmount: 0
        carryOverConsumerUseTaxAmount: 0
        taxAccrualAmount: 0
        salesAccrualAmount: 0
        nonTaxableAccrualAmount: 0
        taxableAccrualAmount: 0
        salesTaxAccrualAmount: 0
        sellersUseTaxAccrualAmount: 0
        consumerUseTaxAccrualAmount: 0
        consumerUseTaxableAccrualAmount: 0
        consumerUseNonTaxableAccrualAmount: 0
        adjustments:
        - id: 15634
          amount: 100
          period: CurrentPeriod
          type: Discount
          isCalculated: false
          accountType: AccountsReceivableAccountsPayable
        totalAugmentations: 0
        augmentations:
        - id: 103230
          fieldAmount: 10
          fieldName: Credit from the State
        totalPayments: 0
        accrualType: 0
    FilingsCheckupSuggestedFormModel:
      type: object
      properties:
        taxAuthorityId:
          type: integer
          description: Tax Authority ID of the suggested form returned
          format: int32
          example: 71
        country:
          type: string
          description: Country of the suggested form returned
          example: US
        region:
          type: string
          description: Region of the suggested form returned
          example: NY
        taxFormCode:
          type: string
          description: Name of the suggested form returned
          example: NYAU11
        returnName:
          type: string
          description: Legacy Name of the suggested form returned
      description: Worksheet Checkup Report Suggested Form Model
      example:
        taxAuthorityId: 71
        country: US
        region: NY
        taxFormCode: NYAU11
    FilingRegionModel:
      type: object
      properties:
        id:
          type: integer
          description: The unique ID number of this filing region.
          format: int64
          example: 2892824
        filingId:
          type: integer
          description: The filing id that this region belongs too
          format: int64
          example: 0
        country:
          type: string
          description: The two-character ISO-3166 code for the country.
          example: US
        region:
          type: string
          description: The two or three character region code for the region.
          example: AZ
        salesAmount:
          type: number
          description: The sales amount.
          format: double
          example: 80.48
        taxableAmount:
          type: number
          description: The taxable amount.
          format: double
          example: 24.49
        taxAmount:
          type: number
          description: The tax amount.
          format: double
          example: 2.2
        taxDueAmount:
          type: number
          description: The tax amount due.
          format: double
          example: 0.0
        collectAmount:
          type: number
          description: The amount collected by Avalara for this region
          format: double
          example: 1.1
        totalRemittanceAmount:
          type: number
          description: Total remittance amount of all returns in region
          format: double
          example: 0.0
        nonTaxableAmount:
          type: number
          description: The non-taxable amount.
          format: double
          example: 55.99
        consumerUseTaxAmount:
          type: number
          description: Consumer use tax liability.
          format: double
          example: 0.0
        consumerUseNonTaxableAmount:
          type: number
          description: Consumer use non-taxable amount.
          format: double
          example: 0.0
        consumerUseTaxableAmount:
          type: number
          description: Consumer use taxable amount.
          format: double
          example: 0.0
        approveDate:
          type: string
          description: The date the filing region was approved.
          format: date-time
        startDate:
          type: string
          description: The start date for the filing cycle.
          format: date-time
        endDate:
          type: string
          description: The end date for the filing cycle.
          format: date-time
        hasNexus:
          type: boolean
          description: Whether or not you have nexus in this region.
          example: true
        status:
          type: string
          description: The current status of the filing region.
          example: PendingApproval
          enum:
          - PendingApproval
          - Dirty
          - ApprovedToFile
          - PendingFiling
          - PendingFilingOnBehalf
          - Filed
          - FiledOnBehalf
          - ReturnAccepted
          - ReturnAcceptedOnBehalf
          - PaymentRemitted
          - Voided
          - PendingReturn
          - PendingReturnOnBehalf
          - DoNotFile
          - ReturnRejected
          - ReturnRejectedOnBehalf
          - ApprovedToFileOnBehalf
          x-enum-metadata:
            name: FilingStatusId
            values:
            - name: PendingApproval
              value: 0
            - name: Dirty
              value: 1
            - name: ApprovedToFile
              value: 2
            - name: PendingFiling
              value: 3
            - name: PendingFilingOnBehalf
              value: 4
            - name: Filed
              value: 5
            - name: FiledOnBehalf
              value: 6
            - name: ReturnAccepted
              value: 7
            - name: ReturnAcceptedOnBehalf
              value: 8
            - name: PaymentRemitted
              value: 9
            - name: Voided
              value: 10
            - name: PendingReturn
              value: 11
            - name: PendingReturnOnBehalf
              value: 12
            - name: DoNotFile
              value: 13
            - name: ReturnRejected
              value: 14
            - name: ReturnRejectedOnBehalf
              value: 15
            - name: ApprovedToFileOnBehalf
              value: 16
        returns:
          type: array
          description: A list of tax returns in this region.
          example:
          - id: 5233103
            filingRegionId: 0
            filingCalendarId: 513256
            status: PendingApproval
            filingFrequency: Monthly
            salesAmount: 0
            filingType: ElectronicReturn
            formName: AL 2100
            remitAmount: 0
            formCode: AL2100
            description: Sales Tax Return
            taxableAmount: 0
            taxAmount: 0
            collectAmount: 1
            taxDueAmount: 0
            nonTaxableAmount: 0
            nonTaxableDueAmount: 0
            consumerUseTaxAmount: 0
            consumerUseTaxDueAmount: 0
            consumerUseNonTaxableAmount: 0
            consumerUseTaxableAmount: 0
            totalAdjustments: 0
            excludedSalesAmount: 0
            excludedNonTaxableAmount: 0
            excludedTaxAmount: 0
            carryOverSalesAmount: 0
            carryOverNonTaxableAmount: 0
            carryOverTaxAmount: 0
            carryOverConsumerUseTaxAmount: 0
            taxAccrualAmount: 0
            salesAccrualAmount: 0
            nonTaxableAccrualAmount: 0
            taxableAccrualAmount: 0
            salesTaxAccrualAmount: 0
            sellersUseTaxAccrualAmount: 0
            consumerUseTaxAccrualAmount: 0
            consumerUseTaxableAccrualAmount: 0
            consumerUseNonTaxableAccrualAmount: 0
            adjustments:
            - id: 15634
              amount: 100
              period: CurrentPeriod
              type: Discount
              isCalculated: false
              accountType: AccountsReceivableAccountsPayable
            totalAugmentations: 0
            augmentations:
            - id: 103230
              fieldAmount: 10
              fieldName: Credit from the State
            totalPayments: 0
            accrualType: 0
          items:
            $ref: '#/components/schemas/FilingReturnModel'
        suggestReturns:
          type: array
          description: A list of tax returns in this region.
          items:
            $ref: '#/components/schemas/FilingsCheckupSuggestedFormModel'
        createdDate:
          type: string
          description: The date when this record was created.
          format: date-time
          readOnly: true
        createdUserId:
          type: integer
          description: The User ID of the user who created this record.
          format: int32
          readOnly: true
        modifiedDate:
          type: string
          description: The date/time when this record was last modified.
          format: date-time
          readOnly: true
        modifiedUserId:
          type: integer
          description: The user ID of the user who last modified this record.
          format: int32
          readOnly: true
      description: Regions
      example:
        id: 2892824
        filingId: 0
        country: US
        region: AZ
        salesAmount: 80.48
        taxableAmount: 24.49
        taxAmount: 2.2
        taxDueAmount: 0
        collectAmount: 1.1
        totalRemittanceAmount: 0
        nonTaxableAmount: 55.99
        consumerUseTaxAmount: 0
        consumerUseNonTaxableAmount: 0
        consumerUseTaxableAmount: 0
        startDate: 2016-10-01T00:00:00
        endDate: 2016-10-31T00:00:00
        hasNexus: true
        status: PendingApproval
        returns:
        - id: 5233103
          filingRegionId: 0
          filingCalendarId: 513256
          status: PendingApproval
          filingFrequency: Monthly
          salesAmount: 0
          filingType: ElectronicReturn
          formName: AL 2100
          remitAmount: 0
          formCode: AL2100
          description: Sales Tax Return
          taxableAmount: 0
          taxAmount: 0
          collectAmount: 1
          taxDueAmount: 0
          nonTaxableAmount: 0
          nonTaxableDueAmount: 0
          consumerUseTaxAmount: 0
          consumerUseTaxDueAmount: 0
          consumerUseNonTaxableAmount: 0
          consumerUseTaxableAmount: 0
          totalAdjustments: 0
          excludedSalesAmount: 0
          excludedNonTaxableAmount: 0
          excludedTaxAmount: 0
          carryOverSalesAmount: 0
          carryOverNonTaxableAmount: 0
          carryOverTaxAmount: 0
          carryOverConsumerUseTaxAmount: 0
          taxAccrualAmount: 0
          salesAccrualAmount: 0
          nonTaxableAccrualAmount: 0
          taxableAccrualAmount: 0
          salesTaxAccrualAmount: 0
          sellersUseTaxAccrualAmount: 0
          consumerUseTaxAccrualAmount: 0
          consumerUseTaxableAccrualAmount: 0
          consumerUseNonTaxableAccrualAmount: 0
          adjustments:
          - id: 15634
            amount: 100
            period: CurrentPeriod
            type: Discount
            isCalculated: false
            accountType: AccountsReceivableAccountsPayable
          totalAugmentations: 0
          augmentations:
          - id: 103230
            fieldAmount: 10
            fieldName: Credit from the State
          totalPayments: 0
          accrualType: 0
    FilingModel:
      type: object
      properties:
        id:
          type: integer
          description: The unique ID number of this filing.
          format: int64
          example: 326529
        companyId:
          type: integer
          description: The unique ID number of the company for this filing.
          format: int32
          example: 62593
        month:
          type: integer
          description: "The month of the filing period for this tax filing.\r\nThe\
            \ filing period represents the year and month of the last day of taxes\
            \ being reported on this filing.\r\nFor example, an annual tax filing\
            \ for Jan-Dec 2015 would have a filing period of Dec 2015."
          format: int32
          example: 10
        year:
          type: integer
          description: "The year of the filing period for this tax filing.\r\nThe\
            \ filing period represents the year and month of the last day of taxes\
            \ being reported on this filing.\r\nFor example, an annual tax filing\
            \ for Jan-Dec 2015 would have a filing period of Dec 2015."
          format: int16
          example: 2016
        type:
          type: string
          description: Indicates whether this is an original or an amended filing.
          example: Original
          enum:
          - Original
          - Amended
          - Test
          x-enum-metadata:
            name: WorksheetTypeId
            values:
            - name: Original
              value: 0
            - name: Amended
              value: 1
            - name: Test
              value: 2
        createdDate:
          type: string
          description: The date when this record was created.
          format: date-time
          readOnly: true
        createdUserId:
          type: integer
          description: The User ID of the user who created this record.
          format: int32
          readOnly: true
        modifiedDate:
          type: string
          description: The date/time when this record was last modified.
          format: date-time
          readOnly: true
        modifiedUserId:
          type: integer
          description: The user ID of the user who last modified this record.
          format: int32
          readOnly: true
        filingRegions:
          type: array
          description: A listing of regional tax filings within this time period.
          example:
          - id: 2892824
            filingId: 0
            country: US
            region: AZ
            salesAmount: 80.48
            taxableAmount: 24.49
            taxAmount: 2.2
            taxDueAmount: 0
            collectAmount: 1.1
            totalRemittanceAmount: 0
            nonTaxableAmount: 55.99
            consumerUseTaxAmount: 0
            consumerUseNonTaxableAmount: 0
            consumerUseTaxableAmount: 0
            startDate: 2016-10-01T00:00:00
            endDate: 2016-10-31T00:00:00
            hasNexus: true
            status: PendingApproval
            returns:
            - id: 5233103
              filingRegionId: 0
              filingCalendarId: 513256
              status: PendingApproval
              filingFrequency: Monthly
              salesAmount: 0
              filingType: ElectronicReturn
              formName: AL 2100
              remitAmount: 0
              formCode: AL2100
              description: Sales Tax Return
              taxableAmount: 0
              taxAmount: 0
              collectAmount: 1
              taxDueAmount: 0
              nonTaxableAmount: 0
              nonTaxableDueAmount: 0
              consumerUseTaxAmount: 0
              consumerUseTaxDueAmount: 0
              consumerUseNonTaxableAmount: 0
              consumerUseTaxableAmount: 0
              totalAdjustments: 0
              excludedSalesAmount: 0
              excludedNonTaxableAmount: 0
              excludedTaxAmount: 0
              carryOverSalesAmount: 0
              carryOverNonTaxableAmount: 0
              carryOverTaxAmount: 0
              carryOverConsumerUseTaxAmount: 0
              taxAccrualAmount: 0
              salesAccrualAmount: 0
              nonTaxableAccrualAmount: 0
              taxableAccrualAmount: 0
              salesTaxAccrualAmount: 0
              sellersUseTaxAccrualAmount: 0
              consumerUseTaxAccrualAmount: 0
              consumerUseTaxableAccrualAmount: 0
              consumerUseNonTaxableAccrualAmount: 0
              adjustments:
              - id: 15634
                amount: 100
                period: CurrentPeriod
                type: Discount
                isCalculated: false
                accountType: AccountsReceivableAccountsPayable
              totalAugmentations: 0
              augmentations:
              - id: 103230
                fieldAmount: 10
                fieldName: Credit from the State
              totalPayments: 0
              accrualType: 0
          items:
            $ref: '#/components/schemas/FilingRegionModel'
      description: Represents a listing of all tax calculation data for filings and
        for accruing to future filings.
      example:
        id: 326529
        companyId: 62593
        month: 10
        year: 2016
        type: Original
        filingRegions:
        - id: 2892824
          filingId: 0
          country: US
          region: AZ
          salesAmount: 80.48
          taxableAmount: 24.49
          taxAmount: 2.2
          taxDueAmount: 0
          collectAmount: 1.1
          totalRemittanceAmount: 0
          nonTaxableAmount: 55.99
          consumerUseTaxAmount: 0
          consumerUseNonTaxableAmount: 0
          consumerUseTaxableAmount: 0
          startDate: 2016-10-01T00:00:00
          endDate: 2016-10-31T00:00:00
          hasNexus: true
          status: PendingApproval
          returns:
          - id: 5233103
            filingRegionId: 0
            filingCalendarId: 513256
            status: PendingApproval
            filingFrequency: Monthly
            salesAmount: 0
            filingType: ElectronicReturn
            formName: AL 2100
            remitAmount: 0
            formCode: AL2100
            description: Sales Tax Return
            taxableAmount: 0
            taxAmount: 0
            collectAmount: 1
            taxDueAmount: 0
            nonTaxableAmount: 0
            nonTaxableDueAmount: 0
            consumerUseTaxAmount: 0
            consumerUseTaxDueAmount: 0
            consumerUseNonTaxableAmount: 0
            consumerUseTaxableAmount: 0
            totalAdjustments: 0
            excludedSalesAmount: 0
            excludedNonTaxableAmount: 0
            excludedTaxAmount: 0
            carryOverSalesAmount: 0
            carryOverNonTaxableAmount: 0
            carryOverTaxAmount: 0
            carryOverConsumerUseTaxAmount: 0
            taxAccrualAmount: 0
            salesAccrualAmount: 0
            nonTaxableAccrualAmount: 0
            taxableAccrualAmount: 0
            salesTaxAccrualAmount: 0
            sellersUseTaxAccrualAmount: 0
            consumerUseTaxAccrualAmount: 0
            consumerUseTaxableAccrualAmount: 0
            consumerUseNonTaxableAccrualAmount: 0
            adjustments:
            - id: 15634
              amount: 100
              period: CurrentPeriod
              type: Discount
              isCalculated: false
              accountType: AccountsReceivableAccountsPayable
            totalAugmentations: 0
            augmentations:
            - id: 103230
              fieldAmount: 10
              fieldName: Credit from the State
            totalPayments: 0
            accrualType: 0
    FilingModelFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/FilingModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    FilingsTaxSummaryModel:
      type: object
      properties:
        salesAmount:
          type: number
          description: The total sales amount
          format: double
          example: 200.0
        taxableAmount:
          type: number
          description: The taxable amount
          format: double
          example: 0.0
        nonTaxableAmount:
          type: number
          description: The nontaxable amount
          format: double
          example: 100.0
        taxAmount:
          type: number
          description: The tax amount
          format: double
          example: 10.0
        remittanceAmount:
          type: number
          description: The remittance amount
          format: double
          example: 10.0
        collectAmount:
          type: number
          description: The collect amount
          format: double
          example: 10.0
        salesAccrualAmount:
          type: number
          description: The sales accrual amount
          format: double
          example: 100.0
        taxableAccrualAmount:
          type: number
          description: The taxable sales accrual amount
          format: double
          example: 0.0
        nonTaxableAccrualAmount:
          type: number
          description: The nontaxable accrual amount
          format: double
          example: 100.0
        taxAccrualAmount:
          type: number
          description: The tax accrual amount
          format: double
          example: 10.0
        reportableSalesAmount:
          type: number
          description: reportableSalesAmount
          format: double
          example: 100.0
        reportableNonTaxableAmount:
          type: number
          description: reportableNonTaxableAmount
          format: double
          example: 50.0
        reportableTaxableAmount:
          type: number
          description: reportableTaxableAmount
          format: double
          example: 5.0
        reportableTaxAmount:
          type: number
          description: reportableTaxAmount
          format: double
          example: 5.0
      description: Represents a listing of all tax calculation data for filings and
        for accruing to future filings.
      example:
        salesAmount: 200
        taxableAmount: 0
        nonTaxableAmount: 100
        taxAmount: 10
        remittanceAmount: 10
        collectAmount: 10
        salesAccrualAmount: 100
        taxableAccrualAmount: 0
        nonTaxableAccrualAmount: 100
        taxAccrualAmount: 10
        reportableSalesAmount: 100
        reportableNonTaxableAmount: 50
        reportableTaxableAmount: 5
        reportableTaxAmount: 5
    FilingsTaxDetailsModel:
      type: object
      properties:
        taxType:
          type: string
          description: The tax type associated with the summary
          example: S
        salesAmount:
          type: number
          description: The total sales amount
          format: double
          example: 200.0
        nonTaxableAmount:
          type: number
          description: The nontaxable amount
          format: double
          example: 100.0
        taxAmount:
          type: number
          description: The tax amount
          format: double
          example: 10.0
        numberOfNights:
          type: integer
          description: The number of nights
          format: int64
          example: 1
      description: Represents a listing of all tax calculation data for filings and
        for accruing to future filings.
      example:
        taxType: S
        salesAmount: 200
        nonTaxableAmount: 100
        taxAmount: 10
        numberOfNights: 1
    MultiTaxFilingReturnModel:
      type: object
      properties:
        id:
          type: integer
          description: The unique ID number of this filing return.
          format: int64
          example: 5233103
        filingCalendarId:
          type: integer
          description: The unique ID number of the filing calendar associated with
            this return.
          format: int64
          example: 513256
        status:
          type: string
          description: The current status of the filing return.
          example: PendingApproval
          enum:
          - PendingApproval
          - Dirty
          - ApprovedToFile
          - PendingFiling
          - PendingFilingOnBehalf
          - Filed
          - FiledOnBehalf
          - ReturnAccepted
          - ReturnAcceptedOnBehalf
          - PaymentRemitted
          - Voided
          - PendingReturn
          - PendingReturnOnBehalf
          - DoNotFile
          - ReturnRejected
          - ReturnRejectedOnBehalf
          - ApprovedToFileOnBehalf
          x-enum-metadata:
            name: FilingStatusId
            values:
            - name: PendingApproval
              value: 0
            - name: Dirty
              value: 1
            - name: ApprovedToFile
              value: 2
            - name: PendingFiling
              value: 3
            - name: PendingFilingOnBehalf
              value: 4
            - name: Filed
              value: 5
            - name: FiledOnBehalf
              value: 6
            - name: ReturnAccepted
              value: 7
            - name: ReturnAcceptedOnBehalf
              value: 8
            - name: PaymentRemitted
              value: 9
            - name: Voided
              value: 10
            - name: PendingReturn
              value: 11
            - name: PendingReturnOnBehalf
              value: 12
            - name: DoNotFile
              value: 13
            - name: ReturnRejected
              value: 14
            - name: ReturnRejectedOnBehalf
              value: 15
            - name: ApprovedToFileOnBehalf
              value: 16
        filingFrequency:
          type: string
          description: The filing frequency of the return.
          example: Monthly
          enum:
          - Monthly
          - Quarterly
          - SemiAnnually
          - Annually
          - Bimonthly
          - Occasional
          - InverseQuarterly
          - Weekly
          x-enum-metadata:
            name: FilingFrequencyId
            values:
            - name: Monthly
              value: 1
            - name: Quarterly
              value: 2
            - name: SemiAnnually
              value: 3
            - name: Annually
              value: 4
            - name: Bimonthly
              value: 5
            - name: Occasional
              value: 6
            - name: InverseQuarterly
              value: 7
            - name: Weekly
              value: 8
        filingType:
          type: string
          description: The filing type of the return.
          example: PaperReturn
          enum:
          - PaperReturn
          - ElectronicReturn
          - SER
          - EFTPaper
          - PhonePaper
          - SignatureReady
          - EfileCheck
          x-enum-metadata:
            name: FilingTypeId
            values:
            - name: PaperReturn
              value: 0
            - name: ElectronicReturn
              value: 1
            - name: SER
              value: 2
            - name: EFTPaper
              value: 3
            - name: PhonePaper
              value: 4
            - name: SignatureReady
              value: 5
            - name: EfileCheck
              value: 6
        formName:
          type: string
          description: The name of the form.
          example: AL 2100
        formCode:
          type: string
          description: The unique code of the form.
          example: AL2100
        description:
          type: string
          description: A description for the return.
          example: Sales Tax Return
        taxAuthorityId:
          type: integer
          description: Tax Authority ID of this return
          format: int32
        filedDate:
          type: string
          description: The date the return was filed by Avalara.
          format: date-time
        accrualType:
          type: string
          description: Accrual type of the return
          example: Filing
          enum:
          - Filing
          - Accrual
          x-enum-metadata:
            name: AccrualType
            values:
            - name: Filing
              value: 1
            - name: Accrual
              value: 2
        startPeriod:
          type: string
          description: The start date of this return
          format: date-time
        endPeriod:
          type: string
          description: The end date of this return
          format: date-time
        type:
          type: string
          description: The FilingTaskType for this return.
        returnTaxSummary:
          $ref: '#/components/schemas/FilingsTaxSummaryModel'
        returnTaxDetails:
          type: array
          description: A detailed breakdown of the taxes in this filing
          example:
          - taxType: S
            salesAmount: 200
            nonTaxableAmount: 100
            taxAmount: 10
            numberOfNights: 1
          items:
            $ref: '#/components/schemas/FilingsTaxDetailsModel'
        excludedCarryOverCredits:
          $ref: '#/components/schemas/FilingReturnCreditModel'
        appliedCarryOverCredits:
          $ref: '#/components/schemas/FilingReturnCreditModel'
        totalAdjustments:
          type: number
          description: Total amount of adjustments on this return
          format: double
          example: 0.0
        adjustments:
          type: array
          description: The Adjustments for this return.
          example:
          - id: 15634
            amount: 100
            period: CurrentPeriod
            type: Discount
            isCalculated: false
            accountType: AccountsReceivableAccountsPayable
          items:
            $ref: '#/components/schemas/FilingAdjustmentModel'
        totalAugmentations:
          type: number
          description: Total amount of augmentations on this return
          format: double
          example: 0.0
        augmentations:
          type: array
          description: The Augmentations for this return.
          items:
            $ref: '#/components/schemas/FilingAugmentationModel'
        totalPayments:
          type: number
          description: Total amount of payments on this return
          format: double
          example: 0.0
        payments:
          type: array
          description: The payments for this return.
          items:
            $ref: '#/components/schemas/FilingPaymentModel'
        attachments:
          type: array
          description: The attachments for this return.
          items:
            $ref: '#/components/schemas/FilingAttachmentModel'
      description: Filing Returns Model
      example:
        id: 5233103
        filingCalendarId: 513256
        status: PendingApproval
        filingFrequency: Monthly
        filingType: ElectronicReturn
        formName: AL 2100
        formCode: AL2100
        description: Sales Tax Return
        accrualType: 0
        returnTaxSummary:
          salesAmount: 200
          taxableAmount: 0
          nonTaxableAmount: 100
          taxAmount: 10
          remittanceAmount: 10
          collectAmount: 10
          salesAccrualAmount: 100
          taxableAccrualAmount: 0
          nonTaxableAccrualAmount: 100
          taxAccrualAmount: 10
          reportableSalesAmount: 100
          reportableNonTaxableAmount: 50
          reportableTaxableAmount: 5
          reportableTaxAmount: 5
        returnTaxDetails:
        - taxType: S
          salesAmount: 200
          nonTaxableAmount: 100
          taxAmount: 10
          numberOfNights: 1
        totalAdjustments: 0
        adjustments:
        - id: 15634
          amount: 100
          period: CurrentPeriod
          type: Discount
          isCalculated: false
          accountType: AccountsReceivableAccountsPayable
        totalAugmentations: 0
        totalPayments: 0
    MultiTaxFilingRegionModel:
      type: object
      properties:
        country:
          type: string
          description: The two-character ISO-3166 code for the country.
          example: US
        region:
          type: string
          description: The two or three character region code for the region.
          example: AZ
        hasNexus:
          type: boolean
          description: Whether or not you have nexus in this region.
          example: true
        status:
          type: string
          description: The current status of the filing region.
          example: PendingApproval
          enum:
          - PendingApproval
          - Dirty
          - ApprovedToFile
          - PendingFiling
          - PendingFilingOnBehalf
          - Filed
          - FiledOnBehalf
          - ReturnAccepted
          - ReturnAcceptedOnBehalf
          - PaymentRemitted
          - Voided
          - PendingReturn
          - PendingReturnOnBehalf
          - DoNotFile
          - ReturnRejected
          - ReturnRejectedOnBehalf
          - ApprovedToFileOnBehalf
          x-enum-metadata:
            name: FilingStatusId
            values:
            - name: PendingApproval
              value: 0
            - name: Dirty
              value: 1
            - name: ApprovedToFile
              value: 2
            - name: PendingFiling
              value: 3
            - name: PendingFilingOnBehalf
              value: 4
            - name: Filed
              value: 5
            - name: FiledOnBehalf
              value: 6
            - name: ReturnAccepted
              value: 7
            - name: ReturnAcceptedOnBehalf
              value: 8
            - name: PaymentRemitted
              value: 9
            - name: Voided
              value: 10
            - name: PendingReturn
              value: 11
            - name: PendingReturnOnBehalf
              value: 12
            - name: DoNotFile
              value: 13
            - name: ReturnRejected
              value: 14
            - name: ReturnRejectedOnBehalf
              value: 15
            - name: ApprovedToFileOnBehalf
              value: 16
        regionTaxSummary:
          $ref: '#/components/schemas/FilingsTaxSummaryModel'
        regionTaxDetails:
          type: array
          description: A detailed breakdown of the taxes in this filing
          items:
            $ref: '#/components/schemas/FilingsTaxDetailsModel'
        suggestReturns:
          type: array
          description: A list of tax returns in this region.
          items:
            $ref: '#/components/schemas/FilingsCheckupSuggestedFormModel'
        returns:
          type: array
          description: A list of tax returns in this region.
          example:
          - id: 5233103
            filingCalendarId: 513256
            status: PendingApproval
            filingFrequency: Monthly
            filingType: ElectronicReturn
            formName: AL 2100
            formCode: AL2100
            description: Sales Tax Return
            accrualType: 0
            returnTaxSummary:
              salesAmount: 200
              taxableAmount: 0
              nonTaxableAmount: 100
              taxAmount: 10
              remittanceAmount: 10
              collectAmount: 10
              salesAccrualAmount: 100
              taxableAccrualAmount: 0
              nonTaxableAccrualAmount: 100
              taxAccrualAmount: 10
              reportableSalesAmount: 100
              reportableNonTaxableAmount: 50
              reportableTaxableAmount: 5
              reportableTaxAmount: 5
            returnTaxDetails:
            - taxType: S
              salesAmount: 200
              nonTaxableAmount: 100
              taxAmount: 10
              numberOfNights: 1
            totalAdjustments: 0
            adjustments:
            - id: 15634
              amount: 100
              period: CurrentPeriod
              type: Discount
              isCalculated: false
              accountType: AccountsReceivableAccountsPayable
            totalAugmentations: 0
            totalPayments: 0
          items:
            $ref: '#/components/schemas/MultiTaxFilingReturnModel'
      description: Regions
      example:
        country: US
        region: AZ
        hasNexus: true
        status: PendingApproval
        regionTaxSummary:
          salesAmount: 200
          taxableAmount: 0
          nonTaxableAmount: 100
          taxAmount: 10
          remittanceAmount: 10
          collectAmount: 10
          salesAccrualAmount: 100
          taxableAccrualAmount: 0
          nonTaxableAccrualAmount: 100
          taxAccrualAmount: 10
          reportableSalesAmount: 100
          reportableNonTaxableAmount: 50
          reportableTaxableAmount: 5
          reportableTaxAmount: 5
        returns:
        - id: 5233103
          filingCalendarId: 513256
          status: PendingApproval
          filingFrequency: Monthly
          filingType: ElectronicReturn
          formName: AL 2100
          formCode: AL2100
          description: Sales Tax Return
          accrualType: 0
          returnTaxSummary:
            salesAmount: 200
            taxableAmount: 0
            nonTaxableAmount: 100
            taxAmount: 10
            remittanceAmount: 10
            collectAmount: 10
            salesAccrualAmount: 100
            taxableAccrualAmount: 0
            nonTaxableAccrualAmount: 100
            taxAccrualAmount: 10
            reportableSalesAmount: 100
            reportableNonTaxableAmount: 50
            reportableTaxableAmount: 5
            reportableTaxAmount: 5
          returnTaxDetails:
          - taxType: S
            salesAmount: 200
            nonTaxableAmount: 100
            taxAmount: 10
            numberOfNights: 1
          totalAdjustments: 0
          adjustments:
          - id: 15634
            amount: 100
            period: CurrentPeriod
            type: Discount
            isCalculated: false
            accountType: AccountsReceivableAccountsPayable
          totalAugmentations: 0
          totalPayments: 0
    MultiTaxFilingModel:
      type: object
      properties:
        id:
          type: integer
          description: The unique ID number of this filing.
          format: int64
          example: 326529
        companyId:
          type: integer
          description: The unique ID number of the company for this filing.
          format: int32
          example: 62593
        month:
          type: integer
          description: "The month of the filing period for this tax filing.\r\nThe\
            \ filing period represents the year and month of the last day of taxes\
            \ being reported on this filing.\r\nFor example, an annual tax filing\
            \ for Jan-Dec 2015 would have a filing period of Dec 2015."
          format: int32
          example: 10
        year:
          type: integer
          description: "The year of the filing period for this tax filing.\r\nThe\
            \ filing period represents the year and month of the last day of taxes\
            \ being reported on this filing.\r\nFor example, an annual tax filing\
            \ for Jan-Dec 2015 would have a filing period of Dec 2015."
          format: int16
          example: 2016
        type:
          type: string
          description: Indicates whether this is an original or an amended filing.
          example: Original
          enum:
          - Original
          - Amended
          - Test
          x-enum-metadata:
            name: WorksheetTypeId
            values:
            - name: Original
              value: 0
            - name: Amended
              value: 1
            - name: Test
              value: 2
        taxSummary:
          $ref: '#/components/schemas/FilingsTaxSummaryModel'
        taxDetails:
          type: array
          description: A detailed breakdown of the taxes in this filing
          items:
            $ref: '#/components/schemas/FilingsTaxDetailsModel'
        filingRegions:
          type: array
          description: A listing of regional tax filings within this time period.
          example:
          - country: US
            region: AZ
            hasNexus: true
            status: PendingApproval
            regionTaxSummary:
              salesAmount: 200
              taxableAmount: 0
              nonTaxableAmount: 100
              taxAmount: 10
              remittanceAmount: 10
              collectAmount: 10
              salesAccrualAmount: 100
              taxableAccrualAmount: 0
              nonTaxableAccrualAmount: 100
              taxAccrualAmount: 10
              reportableSalesAmount: 100
              reportableNonTaxableAmount: 50
              reportableTaxableAmount: 5
              reportableTaxAmount: 5
            returns:
            - id: 5233103
              filingCalendarId: 513256
              status: PendingApproval
              filingFrequency: Monthly
              filingType: ElectronicReturn
              formName: AL 2100
              formCode: AL2100
              description: Sales Tax Return
              accrualType: 0
              returnTaxSummary:
                salesAmount: 200
                taxableAmount: 0
                nonTaxableAmount: 100
                taxAmount: 10
                remittanceAmount: 10
                collectAmount: 10
                salesAccrualAmount: 100
                taxableAccrualAmount: 0
                nonTaxableAccrualAmount: 100
                taxAccrualAmount: 10
                reportableSalesAmount: 100
                reportableNonTaxableAmount: 50
                reportableTaxableAmount: 5
                reportableTaxAmount: 5
              returnTaxDetails:
              - taxType: S
                salesAmount: 200
                nonTaxableAmount: 100
                taxAmount: 10
                numberOfNights: 1
              totalAdjustments: 0
              adjustments:
              - id: 15634
                amount: 100
                period: CurrentPeriod
                type: Discount
                isCalculated: false
                accountType: AccountsReceivableAccountsPayable
              totalAugmentations: 0
              totalPayments: 0
          items:
            $ref: '#/components/schemas/MultiTaxFilingRegionModel'
      description: Represents a listing of all tax calculation data for filings and
        for accruing to future filings.
      example:
        id: 326529
        companyId: 62593
        month: 10
        year: 2016
        type: Original
        filingRegions:
        - country: US
          region: AZ
          hasNexus: true
          status: PendingApproval
          regionTaxSummary:
            salesAmount: 200
            taxableAmount: 0
            nonTaxableAmount: 100
            taxAmount: 10
            remittanceAmount: 10
            collectAmount: 10
            salesAccrualAmount: 100
            taxableAccrualAmount: 0
            nonTaxableAccrualAmount: 100
            taxAccrualAmount: 10
            reportableSalesAmount: 100
            reportableNonTaxableAmount: 50
            reportableTaxableAmount: 5
            reportableTaxAmount: 5
          returns:
          - id: 5233103
            filingCalendarId: 513256
            status: PendingApproval
            filingFrequency: Monthly
            filingType: ElectronicReturn
            formName: AL 2100
            formCode: AL2100
            description: Sales Tax Return
            accrualType: 0
            returnTaxSummary:
              salesAmount: 200
              taxableAmount: 0
              nonTaxableAmount: 100
              taxAmount: 10
              remittanceAmount: 10
              collectAmount: 10
              salesAccrualAmount: 100
              taxableAccrualAmount: 0
              nonTaxableAccrualAmount: 100
              taxAccrualAmount: 10
              reportableSalesAmount: 100
              reportableNonTaxableAmount: 50
              reportableTaxableAmount: 5
              reportableTaxAmount: 5
            returnTaxDetails:
            - taxType: S
              salesAmount: 200
              nonTaxableAmount: 100
              taxAmount: 10
              numberOfNights: 1
            totalAdjustments: 0
            adjustments:
            - id: 15634
              amount: 100
              period: CurrentPeriod
              type: Discount
              isCalculated: false
              accountType: AccountsReceivableAccountsPayable
            totalAugmentations: 0
            totalPayments: 0
    MultiTaxFilingModelFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/MultiTaxFilingModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    RebuildFilingsModel:
      required:
      - rebuild
      type: object
      properties:
        rebuild:
          type: boolean
          description: Set this value to true in order to rebuild the filings.
          example: true
      description: Rebuild a set of filings.
      example:
        rebuild: true
    ApproveFilingsModel:
      required:
      - approve
      type: object
      properties:
        approve:
          type: boolean
          description: Set this value to true in order to approve the filings.
          example: true
      description: Approve a set of filings.
      example:
        approve: true
    FilingsCheckupAuthorityModel:
      type: object
      properties:
        taxAuthorityId:
          type: integer
          description: Unique ID of the tax authority
          format: int32
        locationCode:
          type: string
          description: Location Code of the tax authority
        taxAuthorityName:
          type: string
          description: Name of the tax authority
        taxAuthorityTypeId:
          type: integer
          description: Type Id of the tax authority
          format: int32
        jurisdictionId:
          type: integer
          description: Jurisdiction Id of the tax authority
          format: int32
        tax:
          type: number
          description: Amount of tax collected in this tax authority
          format: double
        taxTypeId:
          type: string
          description: Tax Type collected in the tax authority
        suggestedForms:
          type: array
          description: Suggested forms to file due to tax collected
          items:
            $ref: '#/components/schemas/FilingsCheckupSuggestedFormModel'
      description: Cycle Safe Expiration results.
      example:
        taxAuthorityId: 71
        taxAuthorityName: NEW YORK
        taxAuthorityTypeId: 45
        jurisdictionId: 42
        tax: 0
        taxTypeId: U
        suggestedForms:
        - taxAuthorityId: 71
          country: US
          region: NY
          taxFormCode: NYAU11
    FilingsCheckupModel:
      type: object
      properties:
        authorities:
          type: array
          description: A collection of authorities in the report
          items:
            $ref: '#/components/schemas/FilingsCheckupAuthorityModel'
      description: Results of the Worksheet Checkup report
      example:
        authorities:
        - taxAuthorityId: 71
          taxAuthorityName: NEW YORK
          taxAuthorityTypeId: 45
          jurisdictionId: 42
          tax: 0
          taxTypeId: U
          suggestedForms:
          - taxAuthorityId: 71
            country: US
            region: NY
            taxFormCode: NYAU11
    FirmClientLinkageOutputModel:
      type: object
      properties:
        id:
          type: integer
          description: The unique ID number of firm-client linkage.
          format: int32
          readOnly: true
          example: 123456
        firmAccountId:
          type: integer
          description: Firm Account to be linked with the firm
          format: int32
          example: 23982571
        firmAccountName:
          type: string
          description: FIrm Account name
          example: Firm Account
        clientAccountId:
          type: integer
          description: Client Account to be linked with the firm
          format: int32
          example: 24958289
        clientAccountName:
          type: string
          description: Client Account name
          example: Client Account
        createdDate:
          type: string
          description: Created date of the linkage
          format: date-time
          example: 2022-01-10T15:49:33.172814Z
        createdUserId:
          type: integer
          description: User who created the linkage
          format: int32
          example: 213
        modifiedDate:
          type: string
          description: Modified date of the linkage
          format: date-time
          example: 2022-01-10T15:49:33.1728545Z
        modifiedUserId:
          type: integer
          description: User who modified the linkage
          format: int32
          example: 213
        status:
          type: string
          description: "The status of the account linkage. The following are the available\
            \ statuses\r\n* Requested - When a linkage is requested\r\n* Approved\
            \ - When the linkage is approved\r\n* Rejected - When the linkage is rejected\r\
            \n* Revoked - When the linkage is revoked."
          example: Requested
          enum:
          - Requested
          - Approved
          - Rejected
          - Revoked
          x-enum-metadata:
            name: FirmClientLinkageStatus
            values:
            - name: Requested
              value: 1
            - name: Approved
              value: 2
            - name: Rejected
              value: 3
            - name: Revoked
              value: 4
        isDeleted:
          type: boolean
          description: This is set to 1 if the linkage is deleted.
          example: false
        firmContactName:
          type: string
          description: Name of the firm's point of contact person for the client
        firmContactEmail:
          type: string
          description: Email of the firm's point of contact person for the client
      description: Account Linkage output model
      example:
        id: 123456
        firmAccountId: 23982571
        firmAccountName: Firm Account
        clientAccountId: 24958289
        clientAccountName: Client Account
        createdDate: 2022-01-10T15:49:33.172814+00:00
        createdUserId: 213
        modifiedDate: 2022-01-10T15:49:33.1728545+00:00
        modifiedUserId: 213
        status: Requested
        isDeleted: false
    FirmClientLinkageOutputModelFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/FirmClientLinkageOutputModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    FirmClientLinkageInputModel:
      required:
      - clientAccountId
      - clientAccountName
      type: object
      properties:
        clientAccountId:
          type: integer
          description: Client AccountId that needs to be linked to the firm
          format: int32
          example: 24958289
        clientAccountName:
          type: string
          description: Client AccountName that needs to be linked to the firm
          example: client account
      description: Account Linkage Input model
      example:
        clientAccountId: 24958289
        clientAccountName: client account
    NewFirmClientAccountRequestModel:
      required:
      - accountName
      - companyAddress
      - email
      - firstName
      - lastName
      type: object
      properties:
        accountName:
          maxLength: 50
          minLength: 0
          type: string
          description: The name of the account to create
          example: BizTech Company Inc.
        firstName:
          maxLength: 50
          minLength: 0
          type: string
          description: First name of the primary contact person for this account
          example: Bob
        lastName:
          maxLength: 50
          minLength: 0
          type: string
          description: Last name of the primary contact person for this account
          example: Example
        title:
          maxLength: 50
          minLength: 0
          type: string
          description: Title of the primary contact person for this account
        phoneNumber:
          maxLength: 50
          minLength: 0
          type: string
          description: Phone number of the primary contact person for this account
        email:
          maxLength: 50
          minLength: 0
          type: string
          description: Email of the primary contact person for this account
          example: bob@example.org
        companyCode:
          maxLength: 50
          minLength: 0
          type: string
          description: "Company code to be assigned to the company created for this\
            \ account.\r\n            \r\nIf no company code is provided, this will\
            \ be defaulted to \"DEFAULT\" company code."
          example: DEFAULT
        companyAddress:
          $ref: '#/components/schemas/CompanyAddress'
        taxPayerIdNumber:
          maxLength: 11
          minLength: 0
          type: string
          description: "United States Taxpayer ID number, usually your Employer Identification\
            \ Number if you are a business or your\r\nSocial Security Number if you\
            \ are an individual.\r\nThis value is required if the address provided\
            \ is inside the US. Otherwise it is optional."
        properties:
          type: array
          description: Properties of the primary contact person for this account
          items:
            type: string
      description: Represents a request for a new account with Avalara for a new Firm
        client.
      example:
        accountName: BizTech Company Inc.
        firstName: Bob
        lastName: Example
        email: bob@example.org
        companyCode: DEFAULT
        companyAddress:
          line: 100 Ravine Ln
          region: WA
          country: US
          postalCode: "98010"
    ItemClassificationInputModel:
      required:
      - productCode
      type: object
      properties:
        productCode:
          maxLength: 50
          minLength: 0
          type: string
          description: The product code of an item in a given system.
          example: "9011900000"
        systemCode:
          maxLength: 50
          minLength: 0
          type: string
          description: The system code in which the product belongs.
          example: TARIC
      description: Product classification input model.
      example:
        productCode: "9011900000"
        systemCode: TARIC
    ItemClassificationOutputModel:
      type: object
      properties:
        id:
          type: integer
          description: The unique ID number of this product.
          format: int64
          example: 791
        itemId:
          type: integer
          description: The unique ID number of the item this product belongs to.
          format: int64
          example: 891267
        systemId:
          type: integer
          description: The system id which the product belongs.
          format: int32
          example: 1
        productCode:
          type: string
          description: A unique code representing this item.
          example: "001048015838"
        systemCode:
          type: string
          description: A unique code representing this item.
          example: HTS
      description: Product classification output model.
      example:
        id: 791
        itemId: 891267
        systemId: 1
        productCode: "001048015838"
        systemCode: HTS
    ItemClassificationOutputModelFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/ItemClassificationOutputModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    ItemParameterModelFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/ItemParameterModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    ItemModelFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/ItemModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    ItemSyncModel:
      required:
      - description
      - itemCode
      type: object
      properties:
        itemCode:
          type: string
          description: A unique code representing this item.
          example: CHIP1041
        description:
          type: string
          description: A friendly description of the item. If your company has enrolled
            in Streamlined Sales Tax, this description must be auditable.
          example: Potato Chips
        itemGroup:
          type: string
          description: A group to which the item belongs.
          example: Packaged Food
        taxCode:
          type: string
          description: The tax code of the item (optional)
          example: PF051578
      description: An abridged item model used for syncing product catalogs with AvaTax.
      example:
        itemCode: CHIP1041
        description: Potato Chips
        itemGroup: Packaged Food
        taxCode: PF051578
    SyncItemsRequestModel:
      required:
      - items
      type: object
      properties:
        items:
          type: array
          description: A list of items to sync with AvaTax.
          example:
          - itemCode: CHIP1041
            description: Potato Chips
            itemGroup: Packaged Food
            taxCode: PF051578
          items:
            $ref: '#/components/schemas/ItemSyncModel'
      description: Represents a request to sync items.
      example:
        items:
        - itemCode: CHIP1041
          description: Potato Chips
          itemGroup: Packaged Food
          taxCode: PF051578
    SyncItemsResponseModel:
      type: object
      properties:
        status:
          type: string
          description: The status of the request
          example: Accepted
      description: The response returned after an item sync was requested.
      example:
        status: Accepted
    ItemBulkUploadInputModel:
      type: object
      properties:
        items:
          type: array
          description: List of items
          example:
          - id: 0
            companyId: 0
            itemCode: CHIP1041
            taxCode: PF051578
            description: Potato Chips
            itemGroup: Packaged Food
            parameters:
            - id: 0
              name: ScreenSize
              value: "24"
              unit: inch
          items:
            $ref: '#/components/schemas/ItemModel'
      description: Represents a bulk upload input model.
      example:
        items:
        - id: 0
          companyId: 0
          itemCode: CHIP1041
          taxCode: PF051578
          description: Potato Chips
          itemGroup: Packaged Food
          parameters:
          - id: 0
            name: ScreenSize
            value: "24"
            unit: inch
    ItemUploadErrorModel:
      type: object
      properties:
        rowIndex:
          type: integer
          description: Row index of an item
          format: int32
        itemCode:
          type: string
          description: Item code
        errors:
          type: array
          description: List of errors for against given item code
          items:
            type: string
      description: Represents a item upload error model.
    ItemBulkUploadOutputModel:
      type: object
      properties:
        total:
          type: integer
          description: Count of processed objects
          format: int32
          example: 35
        failed:
          type: array
          description: Dictionary of object and respective list of errors
          example:
          - rowIndex: 5
            itemCode: Item 4
            errors:
            - Please provide a value for field description.
          items:
            $ref: '#/components/schemas/ItemUploadErrorModel'
      description: Represents a bulk upload response model.
      example:
        total: 35
        failed:
        - rowIndex: 5
          itemCode: Item 4
          errors:
          - Please provide a value for field description.
    ItemTagDetailModelFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/ItemTagDetailModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    LocationParameterModelFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/LocationParameterModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    LocationModelFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/LocationModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    LocationValidationModel:
      type: object
      properties:
        settingsValidated:
          type: boolean
          description: "True if the location has a value for each jurisdiction-required\
            \ setting.\r\nThe user is required to ensure that the values are correct\
            \ according to the jurisdiction; this flag\r\ndoes not indicate whether\
            \ the taxing jurisdiction has accepted the data you have provided."
          example: true
        requiredSettings:
          type: array
          description: A list of settings that must be defined for this location
          example:
          - id: 1
            question: State Assigned Code
            description: ""
            jurisdictionType: Country
            required: false
            unique: false
          items:
            $ref: '#/components/schemas/LocationQuestionModel'
      description: Tells you whether this location object has been correctly set up
        to the local jurisdiction's standards
      example:
        settingsValidated: true
        requiredSettings:
        - id: 1
          question: State Assigned Code
          description: ""
          jurisdictionType: Country
          required: false
          unique: false
    UpdateCompanyLocationRemittanceModel:
      required:
      - addressCategoryId
      - effectiveDate
      type: object
      properties:
        addressCategoryId:
          type: string
          description: Indicates whether this location is a physical place of business
            or a temporary salesperson location.
          example: Storefront
          enum:
          - Storefront
          - MainOffice
          - Warehouse
          - Salesperson
          - Other
          - SellerRemitsTax
          - MarketplaceRemitsTax
          - NonPhysical
          x-enum-metadata:
            name: AddressCategoryId
            values:
            - name: Storefront
              value: 1
            - name: MainOffice
              value: 2
            - name: Warehouse
              value: 3
            - name: Salesperson
              value: 4
            - name: Other
              value: 5
            - name: SellerRemitsTax
              value: 6
            - name: MarketplaceRemitsTax
              value: 7
            - name: NonPhysical
              value: 8
        effectiveDate:
          type: string
          description: The date when this location was opened for business.
          format: date
        endDate:
          type: string
          description: If this place of business has closed, the date when this location
            closed business. If null it'll be set to the date of 9998-12-31.
          format: date
      description: Expire a location without restriction then update with new remittance
        and dates.
      example:
        addressCategoryId: MarketplaceRemitsTax
        effectiveDate: 2020-01-01
        endDate: 2021-01-01
    CommitMultiDocumentModel:
      required:
      - code
      - commit
      type: object
      properties:
        code:
          type: string
          description: "Represents the unique code of this MultiDocument transaction.\r\
            \n            \r\nA MultiDocument transaction is uniquely identified by\
            \ its `accountId`, `code`, and `type`.        ///"
          example: 8c96495e-c338-4211-840a-5d2e45810a88
        type:
          type: string
          description: "Represents the document type of this MultiDocument transaction.\
            \  For more information about\r\ndocument types, see [DocumentType](https://developer.avalara.com/api-reference/avatax/rest/v2/models/enums/DocumentType/).\r\
            \n            \r\nA MultiDocument transaction is uniquely identified by\
            \ its `accountId`, `code`, and `type`."
          example: SalesOrder
          enum:
          - SalesOrder
          - SalesInvoice
          - PurchaseOrder
          - PurchaseInvoice
          - ReturnOrder
          - ReturnInvoice
          - InventoryTransferOrder
          - InventoryTransferInvoice
          - ReverseChargeOrder
          - ReverseChargeInvoice
          - CustomsInvoice
          - CustomsOrder
          - Any
          x-enum-metadata:
            name: DocumentType
            values:
            - name: SalesOrder
              value: 0
            - name: SalesInvoice
              value: 1
            - name: PurchaseOrder
              value: 2
            - name: PurchaseInvoice
              value: 3
            - name: ReturnOrder
              value: 4
            - name: ReturnInvoice
              value: 5
            - name: InventoryTransferOrder
              value: 6
            - name: InventoryTransferInvoice
              value: 7
            - name: ReverseChargeOrder
              value: 8
            - name: ReverseChargeInvoice
              value: 9
            - name: CustomsInvoice
              value: 10
            - name: CustomsOrder
              value: 11
            - name: Any
              value: -1
        commit:
          type: boolean
          description: "Set this value to be `true` to commit this transaction.\r\n\
            \            \r\nCommitting a transaction allows it to be reported on\
            \ a tax filing.  Uncommitted transactions will not be reported."
          example: true
      description: Commit this MultiDocument object so that all transactions within
        it can be reported on a tax filing.
      example:
        code: 8c96495e-c338-4211-840a-5d2e45810a88
        type: SalesInvoice
        commit: true
    TransactionLineDetailModel:
      type: object
      properties:
        id:
          type: integer
          description: The unique ID number of this tax detail.
          format: int64
          readOnly: true
          example: 123456789
        transactionLineId:
          type: integer
          description: The unique ID number of the line within this transaction.
          format: int64
          readOnly: true
          example: 123456789
        transactionId:
          type: integer
          description: The unique ID number of this transaction.
          format: int64
          readOnly: true
          example: 123456789
        addressId:
          type: integer
          description: The unique ID number of the address used for this tax detail.
          format: int64
          example: 12345
        country:
          maxLength: 2
          minLength: 2
          type: string
          description: The two character ISO 3166 country code of the country where
            this tax detail is assigned.
          example: US
        region:
          type: string
          description: The two-or-three character ISO region code for the region where
            this tax detail is assigned.
          example: CA
        countyFIPS:
          type: string
          description: For U.S. transactions, the Federal Information Processing Standard
            (FIPS) code for the county where this tax detail is assigned.
        stateFIPS:
          type: string
          description: For U.S. transactions, the Federal Information Processing Standard
            (FIPS) code for the state where this tax detail is assigned.
          example: "06"
        exemptAmount:
          type: number
          description: The amount of this line that was considered exempt in this
            tax detail.
          format: double
          example: 0.0
        exemptReasonId:
          type: integer
          description: The unique ID number of the exemption reason for this tax detail.
          format: int32
          example: 4
        inState:
          type: boolean
          description: True if this detail element represented an in-state transaction.
          example: false
        jurisCode:
          type: string
          description: The code of the jurisdiction to which this tax detail applies.
          example: "06"
        jurisName:
          type: string
          description: The name of the jurisdiction to which this tax detail applies.
          example: CALIFORNIA
        jurisdictionId:
          type: integer
          description: The unique ID number of the jurisdiction to which this tax
            detail applies.
          format: int32
          example: 5000531
        signatureCode:
          type: string
          description: The Avalara-specified signature code of the jurisdiction to
            which this tax detail applies.
          example: AGAM
        stateAssignedNo:
          type: string
          description: The state assigned number of the jurisdiction to which this
            tax detail applies.
          example: ""
        jurisType:
          type: string
          description: "DEPRECATED - Date: 12/20/2017, Version: 18.1, Message: Use\
            \ jurisdictionTypeId instead.\r\nThe type of the jurisdiction to which\
            \ this tax detail applies."
          example: STA
          enum:
          - STA
          - CTY
          - CIT
          - STJ
          - CNT
          x-property-deprecation-info:
            date: 12/20/2017
            version: "18.1"
            message: Use jurisdictionTypeId instead.
          x-enum-metadata:
            name: JurisTypeId
            values:
            - name: STA
              value: 1
            - name: CTY
              value: 2
            - name: CIT
              value: 3
            - name: STJ
              value: 4
            - name: CNT
              value: 5
        jurisdictionType:
          type: string
          description: The type of the jurisdiction in which this tax detail applies.
          example: Country
          enum:
          - Country
          - State
          - County
          - City
          - Special
          x-enum-metadata:
            name: JurisdictionType
            values:
            - name: Country
              value: 0
            - name: State
              value: 1
            - name: County
              value: 2
            - name: City
              value: 3
            - name: Special
              value: 4
        nonTaxableAmount:
          type: number
          description: The amount of this line item that was considered nontaxable
            in this tax detail.
          format: double
          example: 0.0
        nonTaxableRuleId:
          type: integer
          description: The rule according to which portion of this detail was considered
            nontaxable.
          format: int32
          example: 0
        nonTaxableType:
          type: string
          description: The type of nontaxability that was applied to this tax detail.
          example: RateRule
          enum:
          - RateRule
          - RateOverrideRule
          - BaseRule
          - ExemptEntityRule
          - ProductTaxabilityRule
          - NexusRule
          - RateCapRule
          - TaxOverrideRule
          - FeeRule
          - OtherRule
          x-enum-metadata:
            name: TaxRuleTypeId
            values:
            - name: RateRule
              value: 0
            - name: RateOverrideRule
              value: 1
            - name: BaseRule
              value: 2
            - name: ExemptEntityRule
              value: 3
            - name: ProductTaxabilityRule
              value: 4
            - name: NexusRule
              value: 5
            - name: RateCapRule
              value: 6
            - name: TaxOverrideRule
              value: 7
            - name: FeeRule
              value: 8
            - name: OtherRule
              value: 100
        rate:
          type: number
          description: The rate at which this tax detail was calculated.
          format: double
          example: 0.0625
        rateRuleId:
          type: integer
          description: The unique ID number of the rule according to which this tax
            detail was calculated.
          format: int32
          example: 1321915
        rateSourceId:
          type: integer
          description: The unique ID number of the source of the rate according to
            which this tax detail was calculated.
          format: int32
          example: 3
        serCode:
          type: string
          description: For Streamlined Sales Tax customers, the SST Electronic Return
            code under which this tax detail should be applied.
          example: ""
        sourcing:
          type: string
          description: Indicates whether this tax detail applies to the origin or
            destination of the transaction.
          example: Mixed
          enum:
          - Mixed
          - Destination
          - Origin
          x-enum-metadata:
            name: Sourcing
            values:
            - name: Mixed
              value: 42
            - name: Destination
              value: 68
            - name: Origin
              value: 79
        tax:
          type: number
          description: The amount of tax for this tax detail.
          format: double
          example: 62.5
        taxableAmount:
          type: number
          description: The taxable amount of this tax detail.
          format: double
          example: 1000.0
        taxType:
          type: string
          description: The type of tax that was calculated.  Depends on the company's
            nexus settings as well as the jurisdiction's tax laws.
          example: Sales
        taxSubTypeId:
          type: string
          description: The id of the tax subtype.
        taxTypeGroupId:
          type: string
          description: The id of the tax type group.
        taxName:
          type: string
          description: The name of the tax against which this tax amount was calculated.
          example: CA STATE TAX
        taxAuthorityTypeId:
          type: integer
          description: The type of the tax authority to which this tax will be remitted.
          format: int32
          example: 45
        taxRegionId:
          type: integer
          description: The unique ID number of the tax region.
          format: int32
          example: 2127184
        taxCalculated:
          type: number
          description: "The amount of tax that AvaTax calculated.\r\nIf an override\
            \ for tax amount is used, there may be a difference between the tax\r\n\
            field which applies your override, and the this amount that is calculated\
            \ without override."
          format: double
          example: 62.5
        taxOverride:
          type: number
          description: The amount of tax override that was specified for this tax
            line.
          format: double
          example: 0.0
        rateType:
          type: string
          description: "DEPRECATED - Date: 12/20/2017, Version: 18.1, Message: Please\
            \ use rateTypeCode instead.\r\nThe rate type for this tax detail."
          example: ReducedA
          enum:
          - ReducedA
          - ReducedB
          - Food
          - General
          - IncreasedStandard
          - LinenRental
          - Medical
          - Construction
          - Parking
          - SuperReduced
          - ReducedR
          - Standard
          - Leasing
          - LeasingLow
          - Services
          - Zero
          x-property-deprecation-info:
            date: 12/20/2017
            version: "18.1"
            message: Please use rateTypeCode instead.
          x-enum-metadata:
            name: RateType
            values:
            - name: ReducedA
              value: 65
            - name: ReducedB
              value: 66
            - name: Food
              value: 70
            - name: General
              value: 71
            - name: IncreasedStandard
              value: 73
            - name: LinenRental
              value: 76
            - name: Medical
              value: 77
            - name: Construction
              value: 78
            - name: Parking
              value: 80
            - name: SuperReduced
              value: 81
            - name: ReducedR
              value: 82
            - name: Standard
              value: 83
            - name: Leasing
              value: 84
            - name: LeasingLow
              value: 85
            - name: Services
              value: 88
            - name: Zero
              value: 90
        rateTypeCode:
          maxLength: 25
          minLength: 0
          type: string
          description: Indicates the code of the rate type that was used to calculate
            this tax detail.  Use [ListRateTypesByCountry](https://developer.avalara.com/api-reference/avatax/rest/v2/methods/Definitions/ListRateTypesByCountry/)
            API for a full list of rate type codes.
        taxableUnits:
          type: number
          description: Number of units in this line item that were calculated to be
            taxable according to this rate detail.
          format: double
          example: 62.5
        nonTaxableUnits:
          type: number
          description: Number of units in this line item that were calculated to be
            nontaxable according to this rate detail.
          format: double
          example: 1000.0
        exemptUnits:
          type: number
          description: Number of units in this line item that were calculated to be
            exempt according to this rate detail.
          format: double
          example: 62.5
        unitOfBasis:
          type: string
          description: When calculating units, what basis of measurement did we use
            for calculating the units?
        isNonPassThru:
          type: boolean
          description: "True if this value is a non-passthrough tax.\r\n         \
            \   \r\nA non-passthrough tax is a tax that may not be charged to a customer;\
            \ it must be paid directly by the company."
        isFee:
          type: boolean
          description: The Taxes/Fee component. True if the fee is applied.
        reportingTaxableUnits:
          type: number
          description: Number of units in this line item that were calculated to be
            taxable according to this rate detail in the reporting currency.
          format: double
          example: 125.0
        reportingNonTaxableUnits:
          type: number
          description: Number of units in this line item that were calculated to be
            nontaxable according to this rate detail in the reporting currency.
          format: double
          example: 2000.0
        reportingExemptUnits:
          type: number
          description: Number of units in this line item that were calculated to be
            exempt according to this rate detail in the reporting currency.
          format: double
          example: 125.0
        reportingTax:
          type: number
          description: The amount of tax for this tax detail in the reporting currency.
          format: double
          example: 125.0
        reportingTaxCalculated:
          type: number
          description: "The amount of tax that AvaTax calculated in the reporting\
            \ currency.\r\nIf an override for tax amount is used, there may be a difference\
            \ between the tax\r\nfield which applies your override, and the this amount\
            \ that is calculated without override."
          format: double
          example: 125.0
        liabilityType:
          type: string
          description: LiabilityType identifies the party liable to file the tax.
            This field is used to filter taxes from reports and tax filings as appropriate.
          example: Seller
          enum:
          - Seller
          - BuyersAgent
          x-enum-metadata:
            name: LiabilityType
            values:
            - name: Seller
              value: 0
            - name: BuyersAgent
              value: 1
      description: An individual tax detail element.  Represents the amount of tax
        calculated for a particular jurisdiction, for a particular line in an invoice.
      example:
        id: 123456789
        transactionLineId: 123456789
        transactionId: 123456789
        addressId: 12345
        country: US
        region: CA
        stateFIPS: "06"
        exemptAmount: 0
        exemptReasonId: 4
        inState: false
        jurisCode: "06"
        jurisName: CALIFORNIA
        jurisdictionId: 5000531
        signatureCode: AGAM
        stateAssignedNo: ""
        jurisType: STA
        nonTaxableAmount: 0
        nonTaxableRuleId: 0
        nonTaxableType: BaseRule
        rate: 0.0625
        rateRuleId: 1321915
        rateSourceId: 3
        serCode: ""
        sourcing: Destination
        tax: 62.5
        taxableAmount: 1000
        taxType: Sales
        taxName: CA STATE TAX
        taxAuthorityTypeId: 45
        taxRegionId: 2127184
        taxCalculated: 62.5
        taxOverride: 0
        rateType: General
        taxableUnits: 62.5
        nonTaxableUnits: 1000
        exemptUnits: 62.5
        reportingTaxableUnits: 125
        reportingNonTaxableUnits: 2000
        reportingExemptUnits: 125
        reportingTax: 125
        reportingTaxCalculated: 125
    TransactionLineLocationTypeModel:
      type: object
      properties:
        documentLineLocationTypeId:
          type: integer
          description: The unique ID number of this line location address model
          format: int64
          readOnly: true
          example: 123
        documentLineId:
          type: integer
          description: The unique ID number of the document line associated with this
            line location address model
          format: int64
          readOnly: true
          example: 456
        documentAddressId:
          type: integer
          description: The address ID corresponding to this model
          format: int64
          readOnly: true
          example: 789
        locationTypeCode:
          type: string
          description: The location type code corresponding to this model
          readOnly: true
          example: SingleLocation
      description: Represents information about location types stored in a line
      example:
        documentLineLocationTypeId: 123
        documentLineId: 456
        documentAddressId: 789
        locationTypeCode: SingleLocation
    TransactionLineModel:
      type: object
      properties:
        id:
          type: integer
          description: The unique ID number of this transaction line item.
          format: int64
          example: 123456789
        transactionId:
          type: integer
          description: The unique ID number of the transaction to which this line
            item belongs.
          format: int64
          example: 123456789
        lineNumber:
          type: string
          description: The line number or code indicating the line on this invoice
            or receipt or document.
          example: "1"
        boundaryOverrideId:
          type: integer
          description: The unique ID number of the boundary override applied to this
            line item.
          format: int32
          example: 0
        customerUsageType:
          type: string
          description: "DEPRECATED - Date: 10/16/2017, Version: 17.11, Message: Please\
            \ use entityUseCode instead.\r\nThe customer usage type for this line\
            \ item.  Usage type often affects taxability rules."
          x-property-deprecation-info:
            date: 10/16/2017
            version: "17.11"
            message: Please use entityUseCode instead.
        entityUseCode:
          type: string
          description: The entity use code for this line item.  Usage type often affects
            taxability rules.
          example: ""
        description:
          type: string
          description: A description of the item or service represented by this line.
          example: Yarn
        destinationAddressId:
          type: integer
          description: "The unique ID number of the destination address where this\
            \ line was delivered or sold.\r\nIn the case of a point-of-sale transaction,\
            \ the destination address and origin address will be the same.\r\nIn the\
            \ case of a shipped transaction, they will be different."
          format: int64
          example: 12345
        originAddressId:
          type: integer
          description: "The unique ID number of the origin address where this line\
            \ was delivered or sold.\r\nIn the case of a point-of-sale transaction,\
            \ the origin address and destination address will be the same.\r\nIn the\
            \ case of a shipped transaction, they will be different."
          format: int64
          example: 123456789
        discountAmount:
          type: number
          description: "The amount of discount that was applied to this line item.\
            \  This represents the difference between list price and sale price of\
            \ the item.\r\nIn general, a discount represents money that did not change\
            \ hands; tax is calculated on only the amount of money that changed hands."
          format: double
          example: 100.0
        discountTypeId:
          type: integer
          description: The type of discount, if any, that was applied to this line
            item.
          format: int32
          example: 0
        exemptAmount:
          type: number
          description: The amount of this line item that was exempt.
          format: double
          example: 0.0
        exemptCertId:
          type: integer
          description: The unique ID number of the exemption certificate that applied
            to this line item. It is the calc_id associated with a certificate in
            CertCapture.
          format: int32
          example: 0
        certificateId:
          type: string
          description: The CertCapture Certificate ID
          readOnly: true
        exemptNo:
          type: string
          description: "The customer Tax Id Number (tax_number) associated with a\
            \ certificate - Sales tax calculation requests first determine if there\
            \ is an applicable\r\nECMS entry available, and will utilize it for exemption\
            \ processing. If no applicable ECMS entry is available, the AvaTax service\r\
            \nwill determine if an Exemption Number field is populated or an Entity/Use\
            \ Code is included in the sales tax calculation request,\r\nand will perform\
            \ exemption processing using either of those two options."
          example: ""
        isItemTaxable:
          type: boolean
          description: True if this item is taxable.
          example: true
        isSSTP:
          type: boolean
          description: True if this item is a Streamlined Sales Tax line item.
          example: false
        itemCode:
          type: string
          description: The code string of the item represented by this line item.
          example: "116292"
        lineAmount:
          type: number
          description: "The total amount of the transaction, including both taxable\
            \ and exempt.  This is the total price for all items.\r\nTo determine\
            \ the individual item price, divide this by quantity."
          format: double
          example: 1000.0
        quantity:
          type: number
          description: The quantity of products sold on this line item.
          format: double
          example: 1.0
        ref1:
          type: string
          description: A user-defined reference identifier for this transaction line
            item.
          example: 'Note: Deliver to Bob'
        ref2:
          type: string
          description: A user-defined reference identifier for this transaction line
            item.
        reportingDate:
          type: string
          description: "The date when this transaction should be reported.  By default,\
            \ all transactions are reported on the date when the actual transaction\
            \ took place.\r\nIn some cases, line items may be reported later due to\
            \ delayed shipments or other business reasons."
          format: date
        revAccount:
          type: string
          description: The revenue account number for this line item.
          example: ""
        sourcing:
          type: string
          description: Indicates whether this line item was taxed according to the
            origin or destination.
          example: Mixed
          enum:
          - Mixed
          - Destination
          - Origin
          x-enum-metadata:
            name: Sourcing
            values:
            - name: Mixed
              value: 42
            - name: Destination
              value: 68
            - name: Origin
              value: 79
        tax:
          type: number
          description: "The tax for this line in this transaction.\r\n           \
            \ \r\nIf you used a `taxOverride` of type `taxAmount` for this line, this\
            \ value\r\nwill represent the amount of your override.  AvaTax will still\
            \ attempt to calculate the correct tax\r\nfor this line and will store\
            \ that calculated value in the `taxCalculated` field.\r\n            \r\
            \nYou can compare the `tax` and `taxCalculated` fields to check for any\
            \ discrepancies\r\nbetween an external tax calculation provider and the\
            \ calculation performed by AvaTax."
          format: double
          example: 62.5
        taxableAmount:
          type: number
          description: The taxable amount of this line item.
          format: double
          example: 1000.0
        taxCalculated:
          type: number
          description: "The amount of tax that AvaTax calculated for the transaction.\r\
            \n            \r\nIf you used a `taxOverride` of type `taxAmount`, there\
            \ may be a difference between\r\nthe `tax` field which applies your override,\
            \ and the `taxCalculated` field which\r\nrepresents the amount of tax\
            \ that AvaTax calculated without the override.\r\n            \r\nYou\
            \ can compare the `tax` and `taxCalculated` fields to check for any discrepancies\r\
            \nbetween an external tax calculation provider and the calculation performed\
            \ by AvaTax."
          format: double
          example: 62.5
        taxCode:
          type: string
          description: The code string for the tax code that was used to calculate
            this line item.
          example: PS081282
        taxCodeId:
          type: integer
          description: The unique ID number for the tax code that was used to calculate
            this line item.
          format: int32
        taxDate:
          type: string
          description: "The date that was used for calculating tax amounts for this\
            \ line item.  By default, this date should be the same as the document\
            \ date.\r\nIn some cases, for example when a consumer returns a product\
            \ purchased previously, line items may be calculated using a tax date\
            \ in the past\r\nso that the consumer can receive a refund for the correct\
            \ tax amount that was charged when the item was originally purchased."
          format: date
        taxEngine:
          type: string
          description: The tax engine identifier that was used to calculate this line
            item.
          example: ""
        taxOverrideType:
          type: string
          description: If a tax override was specified, this indicates the type of
            tax override.
          example: None
          enum:
          - None
          - TaxAmount
          - Exemption
          - TaxDate
          - AccruedTaxAmount
          - DeriveTaxable
          - OutOfHarbor
          - TaxAmountByTaxType
          x-enum-metadata:
            name: TaxOverrideType
            values:
            - name: None
              value: 0
            - name: TaxAmount
              value: 1
            - name: Exemption
              value: 2
            - name: TaxDate
              value: 3
            - name: AccruedTaxAmount
              value: 4
            - name: DeriveTaxable
              value: 5
            - name: OutOfHarbor
              value: 6
            - name: TaxAmountByTaxType
              value: 7
        businessIdentificationNo:
          type: string
          description: VAT business identification number used for this transaction.
        taxOverrideAmount:
          type: number
          description: If a tax override was specified, this indicates the amount
            of tax that was requested.
          format: double
          example: 0.0
        taxOverrideReason:
          type: string
          description: If a tax override was specified, represents the reason for
            the tax override.
          example: ""
        taxIncluded:
          type: boolean
          description: "Indicates whether the `amount` for this line already includes\
            \ tax.\r\n            \r\nIf this value is `true`, the final price of\
            \ this line including tax will equal the value in `amount`.\r\n      \
            \      \r\nIf this value is `null` or `false`, the final price will equal\
            \ `amount` plus whatever taxes apply to this line."
          example: false
        merchantSellerId:
          type: integer
          description: "DEPRECATED - Date: 04/15/2021, Version: 21.4, Message: Please\
            \ use merchantSellerIdentifier instead.\r\nID of the merchant selling\
            \ on the Marketplace. This field must be populated by Marketplace."
          format: int64
          x-property-deprecation-info:
            date: 04/15/2021
            version: "21.4"
            message: Please use merchantSellerIdentifier instead.
        merchantSellerIdentifier:
          type: string
          description: ID of the merchant selling on the Marketplace. This field must
            be populated by Marketplace.
        marketplaceLiabilityType:
          type: string
          description: This field will identify who is remitting Marketplace or Seller.
            This field must be populated by Marketplace.
          example: Marketplace
          enum:
          - Marketplace
          - Seller
          x-enum-metadata:
            name: MarketplaceLiabilityType
            values:
            - name: Marketplace
              value: 1
            - name: Seller
              value: 2
        originationDocumentId:
          type: string
          description: The transaction's original ID in its origination system
        originationSite:
          type: string
          description: Synonym of Marketplace Origination. Name of the Marketplace
            where the transaction originated from.
        details:
          type: array
          description: "Optional: A list of tax details for this line item.\r\n  \
            \          \r\nTax details represent taxes being charged by various tax\
            \ authorities. Taxes that appear in the `details` collection are intended\
            \ to be\r\ndisplayed to the customer and charged as a 'tax' on the invoice.\r\
            \n            \r\nTo fetch this list, add the query string `?$include=Details`\
            \ to your URL."
          example:
          - id: 123456789
            transactionLineId: 123456789
            transactionId: 123456789
            addressId: 12345
            country: US
            region: CA
            stateFIPS: "06"
            exemptAmount: 0
            exemptReasonId: 4
            inState: false
            jurisCode: "06"
            jurisName: CALIFORNIA
            jurisdictionId: 5000531
            signatureCode: AGAM
            stateAssignedNo: ""
            jurisType: STA
            nonTaxableAmount: 0
            nonTaxableRuleId: 0
            nonTaxableType: BaseRule
            rate: 0.0625
            rateRuleId: 1321915
            rateSourceId: 3
            serCode: ""
            sourcing: Destination
            tax: 62.5
            taxableAmount: 1000
            taxType: Sales
            taxName: CA STATE TAX
            taxAuthorityTypeId: 45
            taxRegionId: 2127184
            taxCalculated: 62.5
            taxOverride: 0
            rateType: General
            taxableUnits: 62.5
            nonTaxableUnits: 1000
            exemptUnits: 62.5
            reportingTaxableUnits: 125
            reportingNonTaxableUnits: 2000
            reportingExemptUnits: 125
            reportingTax: 125
            reportingTaxCalculated: 125
          items:
            $ref: '#/components/schemas/TransactionLineDetailModel'
        nonPassthroughDetails:
          type: array
          description: "Optional: A list of non-passthrough tax details for this line\
            \ item.\r\n            \r\nTax details represent taxes being charged by\
            \ various tax authorities. Taxes that appear in the `nonPassthroughDetails`\
            \ collection are\r\ntaxes that must be paid directly by the company and\
            \ not shown to the customer."
          items:
            $ref: '#/components/schemas/TransactionLineDetailModel'
        lineLocationTypes:
          type: array
          description: 'Optional: A list of location types for this line item.  To
            fetch this list, add the query string "?$include=LineLocationTypes" to
            your URL.'
          items:
            $ref: '#/components/schemas/TransactionLineLocationTypeModel'
        parameters:
          type: array
          description: Contains a list of extra parameters that were set when the
            transaction was created.
          items:
            $ref: '#/components/schemas/TransactionLineParameterModel'
        userDefinedFields:
          type: array
          description: Custom user fields/flex fields for this transaction.
          items:
            $ref: '#/components/schemas/TransactionLineUserDefinedFieldModel'
        hsCode:
          type: string
          description: "The cross-border harmonized system code (HSCode) used to calculate\
            \ tariffs and duties for this line item.\r\nFor a full list of HS codes,\
            \ see `ListCrossBorderCodes()`."
        costInsuranceFreight:
          type: number
          description: Indicates the cost of insurance and freight for this line.
          format: double
        vatCode:
          type: string
          description: Indicates the VAT code for this line item.
        vatNumberTypeId:
          type: integer
          description: Indicates the VAT number type for this line item.
          format: int32
          example: 0
        taxAmountByTaxTypes:
          type: array
          description: Contains a list of TaxType that are to be overridden with their
            respective TaxOverrideAmount.
          items:
            $ref: '#/components/schemas/TransactionLineTaxAmountByTaxTypeModel'
        deemedSupplier:
          type: string
          description: Deemed Supplier field indicates which party on the marketplace
            transaction is liable for collecting and reporting the VAT. This is based
            on the 2021 E-commerce legislative reforms in EU and UK. This field will
            not be used until after July 1, 2021.
          example: Marketplace
          enum:
          - Marketplace
          - Merchant
          x-enum-metadata:
            name: DeemedSellerType
            values:
            - name: Marketplace
              value: 1
            - name: Merchant
              value: 2
        category:
          type: string
          description: Product category breadcrumbs. This is the full path to the
            category where item is included. Categories should be separated by “ >
            “.  Multiple category paths per item are accepted. In this case, category
            paths should be separated by “;”.
        summary:
          type: string
          description: A long description of the product.
      description: One line item on this transaction.
      example:
        id: 123456789
        transactionId: 123456789
        lineNumber: "1"
        boundaryOverrideId: 0
        entityUseCode: ""
        description: Yarn
        destinationAddressId: 12345
        originAddressId: 123456789
        discountAmount: 100
        discountTypeId: 0
        exemptAmount: 0
        exemptCertId: 0
        exemptNo: ""
        isItemTaxable: true
        isSSTP: false
        itemCode: "116292"
        lineAmount: 1000
        quantity: 1
        ref1: 'Note: Deliver to Bob'
        reportingDate: 2022-01-10
        revAccount: ""
        sourcing: Destination
        tax: 62.5
        taxableAmount: 1000
        taxCalculated: 62.5
        taxCode: PS081282
        taxDate: 2022-01-10
        taxEngine: ""
        taxOverrideType: None
        taxOverrideAmount: 0
        taxOverrideReason: ""
        taxIncluded: false
        details:
        - id: 123456789
          transactionLineId: 123456789
          transactionId: 123456789
          addressId: 12345
          country: US
          region: CA
          stateFIPS: "06"
          exemptAmount: 0
          exemptReasonId: 4
          inState: false
          jurisCode: "06"
          jurisName: CALIFORNIA
          jurisdictionId: 5000531
          signatureCode: AGAM
          stateAssignedNo: ""
          jurisType: STA
          nonTaxableAmount: 0
          nonTaxableRuleId: 0
          nonTaxableType: BaseRule
          rate: 0.0625
          rateRuleId: 1321915
          rateSourceId: 3
          serCode: ""
          sourcing: Destination
          tax: 62.5
          taxableAmount: 1000
          taxType: Sales
          taxName: CA STATE TAX
          taxAuthorityTypeId: 45
          taxRegionId: 2127184
          taxCalculated: 62.5
          taxOverride: 0
          rateType: General
          taxableUnits: 62.5
          nonTaxableUnits: 1000
          exemptUnits: 62.5
          reportingTaxableUnits: 125
          reportingNonTaxableUnits: 2000
          reportingExemptUnits: 125
          reportingTax: 125
          reportingTaxCalculated: 125
        vatNumberTypeId: 0
    TransactionAddressModel:
      type: object
      properties:
        id:
          type: integer
          description: The unique ID number of this address.
          format: int64
          readOnly: true
          example: 0
        transactionId:
          type: integer
          description: The unique ID number of the document to which this address
            belongs.
          format: int64
          readOnly: true
          example: 0
        boundaryLevel:
          type: string
          description: The boundary level at which this address was validated.
          readOnly: true
          example: Address
          enum:
          - Address
          - Zip9
          - Zip5
          x-enum-metadata:
            name: BoundaryLevel
            values:
            - name: Address
              value: 0
            - name: Zip9
              value: 1
            - name: Zip5
              value: 2
        line1:
          type: string
          description: The first line of the address.
          example: '100 Ravine Lane Northeast #220'
        line2:
          type: string
          description: The second line of the address.
        line3:
          type: string
          description: The third line of the address.
        city:
          type: string
          description: The city for the address.
          example: Bainbridge Island
        region:
          type: string
          description: The ISO 3166 region code. E.g., the second part of ISO 3166-2.
          example: WA
        postalCode:
          type: string
          description: The postal code or zip code for the address.
          example: "98110"
        country:
          type: string
          description: The ISO 3166 country code
          example: US
        taxRegionId:
          type: integer
          description: The unique ID number of the tax region for this address.
          format: int32
          example: 0
        latitude:
          type: string
          description: Latitude for this address
        longitude:
          type: string
          description: Longitude for this address
        jurisdictions:
          type: array
          description: List of all the qualified jurisdictions for the TaxRegionId.
          items:
            $ref: '#/components/schemas/JurisdictionModel'
      description: An address used within this transaction.
      example:
        id: 0
        transactionId: 0
        boundaryLevel: Address
        line1: '100 Ravine Lane Northeast #220'
        city: Bainbridge Island
        region: WA
        postalCode: "98110"
        country: US
        taxRegionId: 0
    TransactionLocationTypeModel:
      type: object
      properties:
        documentLocationTypeId:
          type: integer
          description: Location type ID for this location type in transaction
          format: int64
          readOnly: true
          example: 123
        documentId:
          type: integer
          description: Transaction ID
          format: int64
          readOnly: true
          example: 456
        documentAddressId:
          type: integer
          description: Address ID for the transaction
          format: int64
          readOnly: true
          example: 789
        locationTypeCode:
          type: string
          description: Location type code
          readOnly: true
          example: SingleLocation
      description: Information about a location type
      example:
        documentLocationTypeId: 123
        documentId: 456
        documentAddressId: 789
        locationTypeCode: SingleLocation
    TransactionSummary:
      type: object
      properties:
        country:
          type: string
          description: Two character ISO-3166 country code.
          example: US
        region:
          type: string
          description: Two or three character ISO region, state or province code,
            if applicable.
          example: CA
        jurisType:
          type: string
          description: The type of jurisdiction that collects this tax.
          example: Country
          enum:
          - Country
          - State
          - County
          - City
          - Special
          x-enum-metadata:
            name: JurisdictionType
            values:
            - name: Country
              value: 0
            - name: State
              value: 1
            - name: County
              value: 2
            - name: City
              value: 3
            - name: Special
              value: 4
        jurisCode:
          type: string
          description: Jurisdiction Code for the taxing jurisdiction
          example: "06"
        jurisName:
          type: string
          description: The name of the jurisdiction that collects this tax.
          example: CALIFORNIA
        taxAuthorityType:
          type: integer
          description: The unique ID of the Tax Authority Type that collects this
            tax.
          format: int32
          example: 45
        stateAssignedNo:
          type: string
          description: The state assigned number of the jurisdiction that collects
            this tax.
          example: ""
        taxType:
          type: string
          description: The tax type of this tax.
          example: Sales
        taxSubType:
          type: string
          description: The tax subtype of this tax.
          example: S
        taxName:
          type: string
          description: The name of the tax.
          example: CA STATE TAX
        taxGroup:
          type: string
          description: Group code when special grouping is enabled.
          example: ""
        rateType:
          type: string
          description: "DEPRECATED - Date: 3/1/2018, Version: 18.3, Message: Please\
            \ use rateTypeCode instead.\r\nIndicates the tax rate type."
          example: ReducedA
          enum:
          - ReducedA
          - ReducedB
          - Food
          - General
          - IncreasedStandard
          - LinenRental
          - Medical
          - Construction
          - Parking
          - SuperReduced
          - ReducedR
          - Standard
          - Leasing
          - LeasingLow
          - Services
          - Zero
          x-property-deprecation-info:
            date: 3/1/2018
            version: "18.3"
            message: Please use rateTypeCode instead.
          x-enum-metadata:
            name: RateType
            values:
            - name: ReducedA
              value: 65
            - name: ReducedB
              value: 66
            - name: Food
              value: 70
            - name: General
              value: 71
            - name: IncreasedStandard
              value: 73
            - name: LinenRental
              value: 76
            - name: Medical
              value: 77
            - name: Construction
              value: 78
            - name: Parking
              value: 80
            - name: SuperReduced
              value: 81
            - name: ReducedR
              value: 82
            - name: Standard
              value: 83
            - name: Leasing
              value: 84
            - name: LeasingLow
              value: 85
            - name: Services
              value: 88
            - name: Zero
              value: 90
        rateTypeCode:
          type: string
          description: Indicates the code of the rate type.  Use [ListRateTypesByCountry](https://developer.avalara.com/api-reference/avatax/rest/v2/methods/Definitions/ListRateTypesByCountry/)
            API for a full list of rate type codes.
          example: G
        taxable:
          type: number
          description: Tax Base - The adjusted taxable amount.
          format: double
          example: 1000.0
        rate:
          type: number
          description: Tax Rate - The rate of taxation, as a fraction of the amount.
          format: double
          example: 0.0625
        tax:
          type: number
          description: Tax amount - The calculated tax (Base * Rate).
          format: double
          example: 62.5
        taxCalculated:
          type: number
          description: "The amount of tax that AvaTax calculated for the transaction.\r\
            \n            \r\nIf you used a `taxOverride` of type `taxAmount`, there\
            \ may be a difference between\r\nthe `tax` field which applies your override,\
            \ and the `TaxCalculated` field which\r\nrepresents the amount of tax\
            \ that AvaTax calculated for this transaction without override.\r\n  \
            \          \r\nYou can use this for comparison."
          format: double
          example: 62.5
        nonTaxable:
          type: number
          description: The amount of the transaction that was non-taxable.
          format: double
          example: 0.0
        exemption:
          type: number
          description: The amount of the transaction that was exempt.
          format: double
          example: 0.0
      description: Summary information about an overall transaction.
      example:
        country: US
        region: CA
        jurisType: State
        jurisCode: "06"
        jurisName: CALIFORNIA
        taxAuthorityType: 45
        stateAssignedNo: ""
        taxType: Sales
        taxSubType: S
        taxName: CA STATE TAX
        taxGroup: ""
        rateType: General
        rateTypeCode: G
        taxable: 1000
        rate: 0.0625
        tax: 62.5
        taxCalculated: 62.5
        nonTaxable: 0
        exemption: 0
    TaxDetailsByTaxSubType:
      type: object
      properties:
        taxSubType:
          type: string
          description: Tax subtype
          example: S
        totalTaxable:
          type: number
          description: Total taxable amount by tax type
          format: double
          example: 100.0
        totalExempt:
          type: number
          description: Total exempt by tax type
          format: double
          example: 0.05
        totalNonTaxable:
          type: number
          description: Total non taxable by tax type
          format: double
          example: 0.0
        totalTax:
          type: number
          description: Total tax by tax type
          format: double
          example: 0.625
      description: Tax Details by Tax subtype
      example:
        taxSubType: S
        totalTaxable: 100
        totalExempt: 0.05
        totalNonTaxable: 0
        totalTax: 0.625
    TaxDetailsByTaxType:
      type: object
      properties:
        taxType:
          type: string
          description: Tax Type
          example: SalesAndUse
        totalTaxable:
          type: number
          description: Total taxable amount by tax type
          format: double
          example: 100.0
        totalExempt:
          type: number
          description: Total exempt by tax type
          format: double
          example: 0.05
        totalNonTaxable:
          type: number
          description: Total non taxable by tax type
          format: double
          example: 0.0
        totalTax:
          type: number
          description: Total tax by tax type
          format: double
          example: 0.625
        taxSubTypeDetails:
          type: array
          description: Tax subtype details
          items:
            $ref: '#/components/schemas/TaxDetailsByTaxSubType'
      description: Tax Details by Tax Type
      example:
        taxType: SalesAndUse
        totalTaxable: 100
        totalExempt: 0.05
        totalNonTaxable: 0
        totalTax: 0.625
    InvoiceMessageModel:
      type: object
      properties:
        content:
          type: string
          description: The content of the invoice message.
          example: Intra-EU Supply of Goods as per Art. 138 EU VAT Directive 2006/112
        lineNumbers:
          type: array
          description: The applicable tax line numbers and codes.
          example:
          - "1"
          - "2"
          items:
            type: string
      description: Represents a message to be displayed on an invoice.
      example:
        content: Intra-EU Supply of Goods as per Art. 138 EU VAT Directive 2006/112
        lineNumbers:
        - "1"
        - "2"
    TransactionModel:
      type: object
      properties:
        id:
          type: integer
          description: The unique ID number of this transaction.
          format: int64
          readOnly: true
          example: 123456789
        code:
          type: string
          description: A unique customer-provided code identifying this transaction.
          readOnly: true
          example: 788a8950-f821-4b99-9bbd-1181a0f4693d
        companyId:
          type: integer
          description: The unique ID number of the company that recorded this transaction.
          format: int32
          example: 12345
        date:
          type: string
          description: The date on which this transaction occurred.
          format: date
        paymentDate:
          type: string
          description: "DEPRECATED - Date: 07/25/2018, Version: 18.7, Message: This\
            \ field is deprecated and will return null till its removed.\r\nThe date\
            \ when payment was made on this transaction.  By default, this should\
            \ be the same as the date of the transaction."
          format: date
          x-property-deprecation-info:
            date: 07/25/2018
            version: "18.7"
            message: This field is deprecated and will return null till its removed.
        status:
          type: string
          description: The status of the transaction.
          example: Temporary
          enum:
          - Temporary
          - Saved
          - Posted
          - Committed
          - Cancelled
          - Adjusted
          - Queued
          - PendingApproval
          - Any
          x-enum-metadata:
            name: DocumentStatus
            values:
            - name: Temporary
              value: 0
            - name: Saved
              value: 1
            - name: Posted
              value: 2
            - name: Committed
              value: 3
            - name: Cancelled
              value: 4
            - name: Adjusted
              value: 5
            - name: Queued
              value: 6
            - name: PendingApproval
              value: 7
            - name: Any
              value: -1
        type:
          type: string
          description: "The type of the transaction.\r\n            \r\nTransactions\
            \ of type `SalesOrder`, `ReturnOrder`, and so on are temporary estimates\
            \ and will not be saved.\r\n            \r\nTransactions of type `SalesInvoice,\
            \ `ReturnInvoice`, and so on are permanent transactions that can be reported\
            \ to tax authorities\r\nif they are in status `Committed`.\r\n       \
            \     \r\nA sales transaction represents a sale from the company to a\
            \ customer.  A purchase transaction represents a purchase made by the\
            \ company.\r\nA return transaction represents a customer who decided to\
            \ request a refund after purchasing a product from the company.  An inventory\r\
            \ntransfer transaction represents goods that were moved from one location\
            \ of the company to another location without changing ownership."
          example: SalesOrder
          enum:
          - SalesOrder
          - SalesInvoice
          - PurchaseOrder
          - PurchaseInvoice
          - ReturnOrder
          - ReturnInvoice
          - InventoryTransferOrder
          - InventoryTransferInvoice
          - ReverseChargeOrder
          - ReverseChargeInvoice
          - CustomsInvoice
          - CustomsOrder
          - Any
          x-enum-metadata:
            name: DocumentType
            values:
            - name: SalesOrder
              value: 0
            - name: SalesInvoice
              value: 1
            - name: PurchaseOrder
              value: 2
            - name: PurchaseInvoice
              value: 3
            - name: ReturnOrder
              value: 4
            - name: ReturnInvoice
              value: 5
            - name: InventoryTransferOrder
              value: 6
            - name: InventoryTransferInvoice
              value: 7
            - name: ReverseChargeOrder
              value: 8
            - name: ReverseChargeInvoice
              value: 9
            - name: CustomsInvoice
              value: 10
            - name: CustomsOrder
              value: 11
            - name: Any
              value: -1
        batchCode:
          type: string
          description: If this transaction was created as part of a batch, this code
            indicates which batch.
        currencyCode:
          type: string
          description: The three-character ISO 4217 currency code that was used for
            payment for this transaction.
          example: USD
        exchangeRateCurrencyCode:
          type: string
          description: The three-character ISO 4217 exchange rate currency code that
            was used for payment for this transaction.
          example: USD
        customerUsageType:
          type: string
          description: "DEPRECATED - Date: 10/16/2017, Version: 17.11, Message: Please\
            \ use entityUseCode instead.\r\nThe customer usage type for this transaction.\
            \  Customer usage types often affect exemption or taxability rules."
          x-property-deprecation-info:
            date: 10/16/2017
            version: "17.11"
            message: Please use entityUseCode instead.
        entityUseCode:
          type: string
          description: The entity use code for this transaction.  Entity use codes
            often affect exemption or taxability rules.
          example: ""
        customerVendorCode:
          type: string
          description: "DEPRECATED - Date: 3/1/2018, Version: 18.3, Message: Please\
            \ use `customerCode`\r\nThis field has been renamed to `customerCode`\
            \ to match documentation for other APIs related to exemption customers."
          example: ABC
          x-property-deprecation-info:
            date: 3/1/2018
            version: "18.3"
            message: Please use `customerCode`
        customerCode:
          type: string
          description: "Unique code identifying the customer that requested this transaction.\r\
            \n            \r\nWhen you specify a `customerCode`, AvaTax will look\
            \ to see if a customer exists with this code in the exemption certificate\
            \ system.\r\nIf that customer exists, and if that customer has uploaded\
            \ an exemption certificate that applies to this transaction, the relevant\r\
            \nparts of this transaction that can use the exemption certificate will\
            \ be treated as exempt."
          example: ABC
        exemptNo:
          type: string
          description: "The customer Tax Id Number (tax_number) associated with a\
            \ certificate - Sales tax calculation requests first determine if there\
            \ is an applicable\r\nECMS entry available, and will utilize it for exemption\
            \ processing. If no applicable ECMS entry is available, the AvaTax service\r\
            \nwill determine if an Exemption Number field is populated or an Entity/Use\
            \ Code is included in the sales tax calculation request,\r\nand will perform\
            \ exemption processing using either of those two options."
          example: ""
        reconciled:
          type: boolean
          description: If this transaction has been reconciled against the company's
            ledger, this value is set to true.
          example: true
        locationCode:
          type: string
          description: "DEPRECATED - Date: 3/1/2018, Version: 18.3, Message: In order\
            \ to ensure consistency of field names, Please use reportingLocationCode\
            \ instead.\r\nThis field has been replaced by the reportingLocationCode\
            \ field"
          example: DEFAULT
          x-property-deprecation-info:
            date: 3/1/2018
            version: "18.3"
            message: In order to ensure consistency of field names, Please use reportingLocationCode
              instead.
        reportingLocationCode:
          type: string
          description: "For customers who use [location-based tax reporting](https://developer.avalara.com/avatax/dev-guide/locations/location-based-reporting),\r\
            \nthis field controls how this transaction will be filed for multi-location\
            \ tax filings.\r\n            \r\nIf you specify a non-null value for\
            \ this field, AvaTax will ensure that this transaction is reported on\
            \ the tax return associated\r\nwith the [LocationModel](https://developer.avalara.com/api-reference/avatax/rest/v2/models/LocationModel/)\
            \ identified by this code.\r\n            \r\nThis field does not affect\
            \ any addresses for the transaction.  It only controls the tax filing\
            \ behavior of this transaction.\r\n            \r\nIf you are looking\
            \ for information about how to set up addresses for a transaction, please\
            \ see [Using Address Types](https://developer.avalara.com/avatax/dev-guide/customizing-transaction/address-types/)\r\
            \nin the AvaTax Developer Guide."
        purchaseOrderNo:
          type: string
          description: The customer-supplied purchase order number of this transaction.
        referenceCode:
          type: string
          description: A user-defined reference code for this transaction.
        salespersonCode:
          type: string
          description: The salesperson who provided this transaction.  Not required.
          example: DEF
        taxOverrideType:
          type: string
          description: If a tax override was applied to this transaction, indicates
            what type of tax override was applied.
          example: None
          enum:
          - None
          - TaxAmount
          - Exemption
          - TaxDate
          - AccruedTaxAmount
          - DeriveTaxable
          - OutOfHarbor
          - TaxAmountByTaxType
          x-enum-metadata:
            name: TaxOverrideType
            values:
            - name: None
              value: 0
            - name: TaxAmount
              value: 1
            - name: Exemption
              value: 2
            - name: TaxDate
              value: 3
            - name: AccruedTaxAmount
              value: 4
            - name: DeriveTaxable
              value: 5
            - name: OutOfHarbor
              value: 6
            - name: TaxAmountByTaxType
              value: 7
        taxOverrideAmount:
          type: number
          description: If a tax override was applied to this transaction, indicates
            the amount of tax that was requested by the customer.
          format: double
          example: 0.0
        taxOverrideReason:
          type: string
          description: If a tax override was applied to this transaction, indicates
            the reason for the tax override.
          example: ""
        totalAmount:
          type: number
          description: The total amount of this transaction.
          format: double
          example: 1000.0
        totalExempt:
          type: number
          description: The amount of this transaction that was exempt.
          format: double
          example: 0.0
        totalDiscount:
          type: number
          description: The total amount of discounts applied to all lines within this
            transaction.
          format: double
          example: 0.0
        totalTax:
          type: number
          description: "The total tax for all lines in this transaction.\r\n     \
            \       \r\nIf you used a `taxOverride` of type `taxAmount` for any lines\
            \ in this transaction, this value\r\nmay be different than the amount\
            \ of tax calculated by AvaTax.  The amount of tax calculated by\r\nAvaTax\
            \ will be stored in the `totalTaxCalculated` field, whereas this field\
            \ will contain the\r\ntotal tax that was charged on the transaction.\r\
            \n            \r\nYou can compare the `totalTax` and `totalTaxCalculated`\
            \ fields to check for any discrepancies\r\nbetween an external tax calculation\
            \ provider and the calculation performed by AvaTax."
          format: double
          example: 62.5
        totalTaxable:
          type: number
          description: The portion of the total amount of this transaction that was
            taxable.
          format: double
          example: 1000.0
        totalTaxCalculated:
          type: number
          description: "The amount of tax that AvaTax calculated for the transaction.\r\
            \n            \r\nIf you used a `taxOverride` of type `taxAmount` for\
            \ any lines in this transaction, this value\r\nwill represent the amount\
            \ that AvaTax calculated for this transaction without applying the override.\r\
            \nThe field `totalTax` will be the total amount of tax after all overrides\
            \ are applied.\r\n            \r\nYou can compare the `totalTax` and `totalTaxCalculated`\
            \ fields to check for any discrepancies\r\nbetween an external tax calculation\
            \ provider and the calculation performed by AvaTax."
          format: double
          example: 62.5
        adjustmentReason:
          type: string
          description: If this transaction was adjusted, indicates the unique ID number
            of the reason why the transaction was adjusted.
          example: NotAdjusted
          enum:
          - NotAdjusted
          - SourcingIssue
          - ReconciledWithGeneralLedger
          - ExemptCertApplied
          - PriceAdjusted
          - ProductReturned
          - ProductExchanged
          - BadDebt
          - Other
          - Offline
          x-enum-metadata:
            name: AdjustmentReason
            values:
            - name: NotAdjusted
              value: 0
            - name: SourcingIssue
              value: 1
            - name: ReconciledWithGeneralLedger
              value: 2
            - name: ExemptCertApplied
              value: 3
            - name: PriceAdjusted
              value: 4
            - name: ProductReturned
              value: 5
            - name: ProductExchanged
              value: 6
            - name: BadDebt
              value: 7
            - name: Other
              value: 8
            - name: Offline
              value: 9
        adjustmentDescription:
          type: string
          description: If this transaction was adjusted, indicates a description of
            the reason why the transaction was adjusted.
          example: ""
        locked:
          type: boolean
          description: If this transaction has been reported to a tax authority, this
            transaction is considered locked and may not be adjusted after reporting.
          example: false
        region:
          type: string
          description: The two-or-three character ISO region code of the region for
            this transaction.
          example: CA
        country:
          maxLength: 2
          minLength: 2
          type: string
          description: The two-character ISO 3166 code of the country for this transaction.
          example: US
        version:
          type: integer
          description: "If this transaction was adjusted, this indicates the version\
            \ number of this transaction.  Incremented each time the transaction\r\
            \nis adjusted."
          format: int32
          example: 0
        softwareVersion:
          type: string
          description: The software version used to calculate this transaction.
        originAddressId:
          type: integer
          description: The unique ID number of the origin address for this transaction.
          format: int64
          example: 123456789
        destinationAddressId:
          type: integer
          description: The unique ID number of the destination address for this transaction.
          format: int64
          example: 123456789
        exchangeRateEffectiveDate:
          type: string
          description: If this transaction included foreign currency exchange, this
            is the date as of which the exchange rate was calculated.
          format: date
        exchangeRate:
          type: number
          description: If this transaction included foreign currency exchange, this
            is the exchange rate that was used.
          format: double
          example: 2.0
        isSellerImporterOfRecord:
          type: boolean
          description: "By default, the value is null, when the value is null, the\
            \ value can be set at nexus level and used.\r\nIf the value is not null,\
            \ it will override the value at nexus level.\r\n            \r\nIf true,\
            \ this seller was considered the importer of record of a product shipped\
            \ internationally.\r\n            \r\nIf this transaction is not an international\
            \ transaction, this field may be left blank.\r\n            \r\nThe \"\
            importer of record\" is liable to pay customs and import duties for products\
            \ shipped internationally.  If\r\nyou specify that the seller is the importer\
            \ of record, then estimates of customs and import duties will be added\r\
            \nas tax details to the transaction.  Otherwise, the buyer is considered\
            \ the importer of record, and customs\r\nand import duties will not be\
            \ added to the tax details for this transaction."
          example: false
        description:
          type: string
          description: Description of this transaction.  Field permits unicode values.
          example: Yarn
        email:
          type: string
          description: Email address associated with this transaction.
        businessIdentificationNo:
          type: string
          description: VAT business identification number used for this transaction.
        modifiedDate:
          type: string
          description: The date/time when this record was last modified.
          format: date-time
          readOnly: true
        modifiedUserId:
          type: integer
          description: The user ID of the user who last modified this record.
          format: int32
          readOnly: true
        taxDate:
          type: string
          description: Tax date for this transaction
          format: date-time
          readOnly: true
          example: 2022-01-10T00:00:00Z
        lines:
          type: array
          description: A list of line items in this transaction.  To fetch this list,
            add the query string `?$include=Lines` or `?$include=Details` to your
            URL.
          example:
          - id: 123456789
            transactionId: 123456789
            lineNumber: "1"
            boundaryOverrideId: 0
            entityUseCode: ""
            description: Yarn
            destinationAddressId: 12345
            originAddressId: 123456789
            discountAmount: 100
            discountTypeId: 0
            exemptAmount: 0
            exemptCertId: 0
            exemptNo: ""
            isItemTaxable: true
            isSSTP: false
            itemCode: "116292"
            lineAmount: 1000
            quantity: 1
            ref1: 'Note: Deliver to Bob'
            reportingDate: 2022-01-10
            revAccount: ""
            sourcing: Destination
            tax: 62.5
            taxableAmount: 1000
            taxCalculated: 62.5
            taxCode: PS081282
            taxDate: 2022-01-10
            taxEngine: ""
            taxOverrideType: None
            taxOverrideAmount: 0
            taxOverrideReason: ""
            taxIncluded: false
            details:
            - id: 123456789
              transactionLineId: 123456789
              transactionId: 123456789
              addressId: 12345
              country: US
              region: CA
              stateFIPS: "06"
              exemptAmount: 0
              exemptReasonId: 4
              inState: false
              jurisCode: "06"
              jurisName: CALIFORNIA
              jurisdictionId: 5000531
              signatureCode: AGAM
              stateAssignedNo: ""
              jurisType: STA
              nonTaxableAmount: 0
              nonTaxableRuleId: 0
              nonTaxableType: BaseRule
              rate: 0.0625
              rateRuleId: 1321915
              rateSourceId: 3
              serCode: ""
              sourcing: Destination
              tax: 62.5
              taxableAmount: 1000
              taxType: Sales
              taxName: CA STATE TAX
              taxAuthorityTypeId: 45
              taxRegionId: 2127184
              taxCalculated: 62.5
              taxOverride: 0
              rateType: General
              taxableUnits: 62.5
              nonTaxableUnits: 1000
              exemptUnits: 62.5
              reportingTaxableUnits: 125
              reportingNonTaxableUnits: 2000
              reportingExemptUnits: 125
              reportingTax: 125
              reportingTaxCalculated: 125
            vatNumberTypeId: 0
          items:
            $ref: '#/components/schemas/TransactionLineModel'
        addresses:
          type: array
          description: "A list of line items in this transaction.  To fetch this list,\
            \ add the query string `?$include=Addresses` to your URL.\r\n        \
            \    \r\nFor more information about transaction addresses, please see\
            \ [Using Address Types](https://developer.avalara.com/avatax/dev-guide/customizing-transaction/address-types/)\r\
            \nin the AvaTax Developer Guide."
          example:
          - id: 0
            transactionId: 0
            boundaryLevel: Address
            line1: '100 Ravine Lane Northeast #220'
            city: Bainbridge Island
            region: WA
            postalCode: "98110"
            country: US
            taxRegionId: 0
          items:
            $ref: '#/components/schemas/TransactionAddressModel'
        locationTypes:
          type: array
          description: A list of location types in this transaction.  To fetch this
            list, add the query string `?$include=Addresses` to your URL.
          items:
            $ref: '#/components/schemas/TransactionLocationTypeModel'
        summary:
          type: array
          description: Contains a summary of tax on this transaction.
          items:
            $ref: '#/components/schemas/TransactionSummary'
        taxDetailsByTaxType:
          type: array
          description: Contains the tax details per tax type
          example:
          - taxType: SalesAndUse
            totalTaxable: 100
            totalExempt: 0.05
            totalNonTaxable: 0
            totalTax: 0.625
          items:
            $ref: '#/components/schemas/TaxDetailsByTaxType'
        parameters:
          type: array
          description: Contains a list of extra parameters that were set when the
            transaction was created.
          items:
            $ref: '#/components/schemas/TransactionParameterModel'
        userDefinedFields:
          type: array
          description: Custom user fields/flex fields for this transaction.
          items:
            $ref: '#/components/schemas/TransactionUserDefinedFieldModel'
        messages:
          type: array
          description: List of informational and warning messages regarding this API
            call.  These messages are only relevant to the current API call.
          items:
            $ref: '#/components/schemas/AvaTaxMessage'
        invoiceMessages:
          type: array
          description: Invoice messages associated with this document. Currently,
            this stores legally-required VAT messages.
          items:
            $ref: '#/components/schemas/InvoiceMessageModel'
        customerSupplierName:
          type: string
          description: "The name of the supplier / exporter / seller.\r\nFor sales\
            \ doctype this will be the name of your own company for which you are\
            \ reporting.\r\nFor purchases doctype this will be the name of the supplier\
            \ you have purchased from."
        dataSourceId:
          type: integer
          description: "The Id of the datasource from which this transaction originated.\r\
            \nThis value will be overridden by the system to take the datasource Id\
            \ from the call header."
          format: int32
        deliveryTerms:
          type: string
          description: "The Delivery Terms is a field used in conjunction with Importer\
            \ of Record to influence whether AvaTax includes Import Duty and Tax values\
            \ in the transaction totals or not.\r\nDelivered at Place (DAP) and Delivered\
            \ Duty Paid (DDP) are two delivery terms that  indicate that Import Duty\
            \ and Tax should be included in the transaction total.\r\nThis field is\
            \ also used for reports.\r\nThis field is used for future feature support.\
            \ This field is not currently in use."
          example: DAP
          enum:
          - DAP
          - DDP
          x-enum-metadata:
            name: DeliveryTerms
            values:
            - name: DAP
              value: 1
            - name: DDP
              value: 2
      description: This object represents a single transaction; for example, a sales
        invoice or purchase order.
      example:
        id: 123456789
        code: 788a8950-f821-4b99-9bbd-1181a0f4693d
        companyId: 12345
        date: 2022-01-10
        status: Committed
        type: SalesInvoice
        currencyCode: USD
        exchangeRateCurrencyCode: USD
        entityUseCode: ""
        customerVendorCode: ABC
        customerCode: ABC
        exemptNo: ""
        reconciled: true
        locationCode: DEFAULT
        salespersonCode: DEF
        taxOverrideType: None
        taxOverrideAmount: 0
        taxOverrideReason: ""
        totalAmount: 1000
        totalExempt: 0
        totalDiscount: 0
        totalTax: 62.5
        totalTaxable: 1000
        totalTaxCalculated: 62.5
        adjustmentReason: NotAdjusted
        adjustmentDescription: ""
        locked: false
        region: CA
        country: US
        version: 0
        originAddressId: 123456789
        destinationAddressId: 123456789
        exchangeRateEffectiveDate: 2022-01-10
        exchangeRate: 2
        isSellerImporterOfRecord: false
        description: Yarn
        taxDate: 2022-01-10T00:00:00+00:00
        lines:
        - id: 123456789
          transactionId: 123456789
          lineNumber: "1"
          boundaryOverrideId: 0
          entityUseCode: ""
          description: Yarn
          destinationAddressId: 12345
          originAddressId: 123456789
          discountAmount: 100
          discountTypeId: 0
          exemptAmount: 0
          exemptCertId: 0
          exemptNo: ""
          isItemTaxable: true
          isSSTP: false
          itemCode: "116292"
          lineAmount: 1000
          quantity: 1
          ref1: 'Note: Deliver to Bob'
          reportingDate: 2022-01-10
          revAccount: ""
          sourcing: Destination
          tax: 62.5
          taxableAmount: 1000
          taxCalculated: 62.5
          taxCode: PS081282
          taxDate: 2022-01-10
          taxEngine: ""
          taxOverrideType: None
          taxOverrideAmount: 0
          taxOverrideReason: ""
          taxIncluded: false
          details:
          - id: 123456789
            transactionLineId: 123456789
            transactionId: 123456789
            addressId: 12345
            country: US
            region: CA
            stateFIPS: "06"
            exemptAmount: 0
            exemptReasonId: 4
            inState: false
            jurisCode: "06"
            jurisName: CALIFORNIA
            jurisdictionId: 5000531
            signatureCode: AGAM
            stateAssignedNo: ""
            jurisType: STA
            nonTaxableAmount: 0
            nonTaxableRuleId: 0
            nonTaxableType: BaseRule
            rate: 0.0625
            rateRuleId: 1321915
            rateSourceId: 3
            serCode: ""
            sourcing: Destination
            tax: 62.5
            taxableAmount: 1000
            taxType: Sales
            taxName: CA STATE TAX
            taxAuthorityTypeId: 45
            taxRegionId: 2127184
            taxCalculated: 62.5
            taxOverride: 0
            rateType: General
            taxableUnits: 62.5
            nonTaxableUnits: 1000
            exemptUnits: 62.5
            reportingTaxableUnits: 125
            reportingNonTaxableUnits: 2000
            reportingExemptUnits: 125
            reportingTax: 125
            reportingTaxCalculated: 125
          vatNumberTypeId: 0
        addresses:
        - id: 0
          transactionId: 0
          boundaryLevel: Address
          line1: '100 Ravine Lane Northeast #220'
          city: Bainbridge Island
          region: WA
          postalCode: "98110"
          country: US
          taxRegionId: 0
        taxDetailsByTaxType:
        - taxType: SalesAndUse
          totalTaxable: 100
          totalExempt: 0.05
          totalNonTaxable: 0
          totalTax: 0.625
    MultiDocumentModel:
      type: object
      properties:
        id:
          type: integer
          description: The unique ID number of this MultiDocument object.
          format: int64
          readOnly: true
          example: 12
        accountId:
          type: integer
          description: The unique ID number of the AvaTax customer account that created
            this MultiDocument object.
          format: int32
          example: 123456
        code:
          type: string
          description: "The transaction code of the MultiDocument transaction.\r\n\
            \            \r\nAll individual transactions within this MultiDocument\
            \ object will have this code as a prefix."
          example: 71c27e72-41a0-407d-bcd1-eb3bbbb2e95b
        type:
          type: string
          description: "Indicates the type of MultiDocument transaction.  Common values\
            \ are:\r\n            \r\n* SalesOrder - An estimate that is not permanently\
            \ recorded\r\n* SalesInvoice - An invoice that can be reported on a tax\
            \ return\r\n            \r\nFor more information about document types,\
            \ see [DocumentType](https://developer.avalara.com/api-reference/avatax/rest/v2/models/enums/DocumentType/)"
          example: SalesOrder
          enum:
          - SalesOrder
          - SalesInvoice
          - PurchaseOrder
          - PurchaseInvoice
          - ReturnOrder
          - ReturnInvoice
          - InventoryTransferOrder
          - InventoryTransferInvoice
          - ReverseChargeOrder
          - ReverseChargeInvoice
          - CustomsInvoice
          - CustomsOrder
          - Any
          x-enum-metadata:
            name: DocumentType
            values:
            - name: SalesOrder
              value: 0
            - name: SalesInvoice
              value: 1
            - name: PurchaseOrder
              value: 2
            - name: PurchaseInvoice
              value: 3
            - name: ReturnOrder
              value: 4
            - name: ReturnInvoice
              value: 5
            - name: InventoryTransferOrder
              value: 6
            - name: InventoryTransferInvoice
              value: 7
            - name: ReverseChargeOrder
              value: 8
            - name: ReverseChargeInvoice
              value: 9
            - name: CustomsInvoice
              value: 10
            - name: CustomsOrder
              value: 11
            - name: Any
              value: -1
        createdUserId:
          type: integer
          description: The user ID of the user who created this record.
          format: int32
          readOnly: true
          example: 87954
        createdDate:
          type: string
          description: The date/time when this record was created.
          format: date-time
          readOnly: true
          example: 2022-01-10T00:00:00Z
        modifiedDate:
          type: string
          description: The date/time when this record was last modified.
          format: date-time
          readOnly: true
          example: 2022-01-10T00:00:00Z
        modifiedUserId:
          type: integer
          description: The user ID of the user who last modified this record.
          format: int32
          readOnly: true
          example: 66783
        documents:
          type: array
          description: A separate document will exist for each unique combination
            of buyer and seller in this MultiDocument transaction.
          readOnly: true
          example:
          - id: 123456789
            code: 31e9e48d-842d-47bf-977c-c72d731b4e50
            companyId: 12345
            date: 2022-01-10
            status: Committed
            type: SalesInvoice
            currencyCode: USD
            exchangeRateCurrencyCode: USD
            entityUseCode: ""
            customerVendorCode: ABC
            customerCode: ABC
            exemptNo: ""
            reconciled: true
            locationCode: DEFAULT
            salespersonCode: DEF
            taxOverrideType: None
            taxOverrideAmount: 0
            taxOverrideReason: ""
            totalAmount: 1000
            totalExempt: 0
            totalDiscount: 0
            totalTax: 62.5
            totalTaxable: 1000
            totalTaxCalculated: 62.5
            adjustmentReason: NotAdjusted
            adjustmentDescription: ""
            locked: false
            region: CA
            country: US
            version: 0
            originAddressId: 123456789
            destinationAddressId: 123456789
            exchangeRateEffectiveDate: 2022-01-10
            exchangeRate: 2
            isSellerImporterOfRecord: false
            description: Yarn
            taxDate: 2022-01-10T00:00:00+00:00
            lines:
            - id: 123456789
              transactionId: 123456789
              lineNumber: "1"
              boundaryOverrideId: 0
              entityUseCode: ""
              description: Yarn
              destinationAddressId: 12345
              originAddressId: 123456789
              discountAmount: 100
              discountTypeId: 0
              exemptAmount: 0
              exemptCertId: 0
              exemptNo: ""
              isItemTaxable: true
              isSSTP: false
              itemCode: "116292"
              lineAmount: 1000
              quantity: 1
              ref1: 'Note: Deliver to Bob'
              reportingDate: 2022-01-10
              revAccount: ""
              sourcing: Destination
              tax: 62.5
              taxableAmount: 1000
              taxCalculated: 62.5
              taxCode: PS081282
              taxDate: 2022-01-10
              taxEngine: ""
              taxOverrideType: None
              taxOverrideAmount: 0
              taxOverrideReason: ""
              taxIncluded: false
              details:
              - id: 123456789
                transactionLineId: 123456789
                transactionId: 123456789
                addressId: 12345
                country: US
                region: CA
                stateFIPS: "06"
                exemptAmount: 0
                exemptReasonId: 4
                inState: false
                jurisCode: "06"
                jurisName: CALIFORNIA
                jurisdictionId: 5000531
                signatureCode: AGAM
                stateAssignedNo: ""
                jurisType: STA
                nonTaxableAmount: 0
                nonTaxableRuleId: 0
                nonTaxableType: BaseRule
                rate: 0.0625
                rateRuleId: 1321915
                rateSourceId: 3
                serCode: ""
                sourcing: Destination
                tax: 62.5
                taxableAmount: 1000
                taxType: Sales
                taxName: CA STATE TAX
                taxAuthorityTypeId: 45
                taxRegionId: 2127184
                taxCalculated: 62.5
                taxOverride: 0
                rateType: General
                taxableUnits: 62.5
                nonTaxableUnits: 1000
                exemptUnits: 62.5
                reportingTaxableUnits: 125
                reportingNonTaxableUnits: 2000
                reportingExemptUnits: 125
                reportingTax: 125
                reportingTaxCalculated: 125
              vatNumberTypeId: 0
            addresses:
            - id: 0
              transactionId: 0
              boundaryLevel: Address
              line1: '100 Ravine Lane Northeast #220'
              city: Bainbridge Island
              region: WA
              postalCode: "98110"
              country: US
              taxRegionId: 0
            taxDetailsByTaxType:
            - taxType: SalesAndUse
              totalTaxable: 100
              totalExempt: 0.05
              totalNonTaxable: 0
              totalTax: 0.625
          items:
            $ref: '#/components/schemas/TransactionModel'
      description: "A MultiDocument transaction represents a sale or purchase that\
        \ occurred between more than two companies.\r\n            \r\nA traditional\
        \ transaction requires exactly two parties: a seller and a buyer.  MultiDocument\
        \ transactions can\r\ninvolve a marketplace of vendors, each of which contributes\
        \ some portion of the final transaction.  Within\r\na MultiDocument transaction,\
        \ each individual buyer and seller pair are matched up and converted to a\
        \ separate\r\ndocument.  This separation of documents allows each seller to\
        \ file their taxes separately."
      example:
        id: 12
        accountId: 123456
        code: 71c27e72-41a0-407d-bcd1-eb3bbbb2e95b
        type: SalesInvoice
        createdUserId: 87954
        createdDate: 2022-01-10T00:00:00+00:00
        modifiedDate: 2022-01-10T00:00:00+00:00
        modifiedUserId: 66783
        documents:
        - id: 123456789
          code: 31e9e48d-842d-47bf-977c-c72d731b4e50
          companyId: 12345
          date: 2022-01-10
          status: Committed
          type: SalesInvoice
          currencyCode: USD
          exchangeRateCurrencyCode: USD
          entityUseCode: ""
          customerVendorCode: ABC
          customerCode: ABC
          exemptNo: ""
          reconciled: true
          locationCode: DEFAULT
          salespersonCode: DEF
          taxOverrideType: None
          taxOverrideAmount: 0
          taxOverrideReason: ""
          totalAmount: 1000
          totalExempt: 0
          totalDiscount: 0
          totalTax: 62.5
          totalTaxable: 1000
          totalTaxCalculated: 62.5
          adjustmentReason: NotAdjusted
          adjustmentDescription: ""
          locked: false
          region: CA
          country: US
          version: 0
          originAddressId: 123456789
          destinationAddressId: 123456789
          exchangeRateEffectiveDate: 2022-01-10
          exchangeRate: 2
          isSellerImporterOfRecord: false
          description: Yarn
          taxDate: 2022-01-10T00:00:00+00:00
          lines:
          - id: 123456789
            transactionId: 123456789
            lineNumber: "1"
            boundaryOverrideId: 0
            entityUseCode: ""
            description: Yarn
            destinationAddressId: 12345
            originAddressId: 123456789
            discountAmount: 100
            discountTypeId: 0
            exemptAmount: 0
            exemptCertId: 0
            exemptNo: ""
            isItemTaxable: true
            isSSTP: false
            itemCode: "116292"
            lineAmount: 1000
            quantity: 1
            ref1: 'Note: Deliver to Bob'
            reportingDate: 2022-01-10
            revAccount: ""
            sourcing: Destination
            tax: 62.5
            taxableAmount: 1000
            taxCalculated: 62.5
            taxCode: PS081282
            taxDate: 2022-01-10
            taxEngine: ""
            taxOverrideType: None
            taxOverrideAmount: 0
            taxOverrideReason: ""
            taxIncluded: false
            details:
            - id: 123456789
              transactionLineId: 123456789
              transactionId: 123456789
              addressId: 12345
              country: US
              region: CA
              stateFIPS: "06"
              exemptAmount: 0
              exemptReasonId: 4
              inState: false
              jurisCode: "06"
              jurisName: CALIFORNIA
              jurisdictionId: 5000531
              signatureCode: AGAM
              stateAssignedNo: ""
              jurisType: STA
              nonTaxableAmount: 0
              nonTaxableRuleId: 0
              nonTaxableType: BaseRule
              rate: 0.0625
              rateRuleId: 1321915
              rateSourceId: 3
              serCode: ""
              sourcing: Destination
              tax: 62.5
              taxableAmount: 1000
              taxType: Sales
              taxName: CA STATE TAX
              taxAuthorityTypeId: 45
              taxRegionId: 2127184
              taxCalculated: 62.5
              taxOverride: 0
              rateType: General
              taxableUnits: 62.5
              nonTaxableUnits: 1000
              exemptUnits: 62.5
              reportingTaxableUnits: 125
              reportingNonTaxableUnits: 2000
              reportingExemptUnits: 125
              reportingTax: 125
              reportingTaxCalculated: 125
            vatNumberTypeId: 0
          addresses:
          - id: 0
            transactionId: 0
            boundaryLevel: Address
            line1: '100 Ravine Lane Northeast #220'
            city: Bainbridge Island
            region: WA
            postalCode: "98110"
            country: US
            taxRegionId: 0
          taxDetailsByTaxType:
          - taxType: SalesAndUse
            totalTaxable: 100
            totalExempt: 0.05
            totalNonTaxable: 0
            totalTax: 0.625
    RefundTransactionModel:
      required:
      - refundDate
      type: object
      properties:
        refundTransactionCode:
          maxLength: 50
          minLength: 0
          type: string
          description: The transaction code for the refund.  This code will be saved
            to the `ReturnInvoice` transaction, and does not need to match the code
            of the original sale.
          example: a9e34100-053c-49e6-8def-ea7111baa729
        refundDate:
          type: string
          description: "The date of the refund.  For customers using Avalara's Managed\
            \ Returns Service, this date controls the month in which the refund\r\n\
            transaction will be reported on a tax filing."
          format: date
        refundType:
          type: string
          description: "Type of this refund.\r\n            \r\nTo submit a full refund,\
            \ specify `Full`.\r\n            \r\nTo refund only specific lines from\
            \ the transaction, specify `Partial` and indicate the lines you wish to\
            \ apply in the `refundLines` field.\r\n            \r\nTo refund the tax\
            \ that was paid in the previous transaction, specify `TaxOnly`.\r\n  \
            \          \r\nTo issue a percentage-based discount, specify `Percentage`."
          example: Full
          enum:
          - Full
          - Partial
          - TaxOnly
          - Percentage
          x-enum-metadata:
            name: RefundType
            values:
            - name: Full
              value: 0
            - name: Partial
              value: 1
            - name: TaxOnly
              value: 2
            - name: Percentage
              value: 3
        refundPercentage:
          type: number
          description: "The percentage for refund.\r\n            \r\nThis value only\
            \ applies if you choose `refundType = Percentage` or `refundType = Partial`."
          format: double
        refundLines:
          type: array
          description: If you chose a refund of type `Partial`, this indicates which
            lines from the original transaction are being refunded.
          items:
            type: string
        referenceCode:
          type: string
          description: A user-defined reference field containing information about
            this refund.
          example: Refund for a committed transaction
      description: Refund a committed transaction
      example:
        refundTransactionCode: a9e34100-053c-49e6-8def-ea7111baa729
        refundDate: 2022-01-10
        refundType: Full
        referenceCode: Refund for a committed transaction
    MultiDocumentLineItemModel:
      required:
      - amount
      type: object
      properties:
        companyCode:
          type: string
          description: "Specify the code of the company for this line of transaction.\r\
            \n            \r\nIf you leave this value null, the `companyCode` at the\
            \ root level will be used instead."
          example: DEFAULT
        reportingLocationCode:
          type: string
          description: "Sets the sale location code (Outlet ID) for reporting this\
            \ document to the tax authority.\r\n            \r\nIf you leave this\
            \ value `null`, the `reportingLocationCode` at the root level will be\
            \ used instead."
          example: ReportLocation111
        number:
          maxLength: 50
          minLength: 0
          type: string
          description: The line number of this line within the document.  This can
            be any text that is useful to you, such as numeric line numbers, alphabetic
            line numbers, or other text.
          example: "1"
        quantity:
          type: number
          description: "Quantity of items in this line.  This quantity value should\
            \ always be a positive value representing the quantity of product that\
            \ changed hands, even when handling returns or refunds.\r\n          \
            \  \r\nIf not provided, or if set to zero, the quantity value is assumed\
            \ to be one (1)."
          format: double
          example: 1.0
        amount:
          type: number
          description: "Total amount for this line.  The amount represents the net\
            \ currency value that changed hands from the customer (represented by\
            \ the `customerCode` field) to the company (represented by the `companyCode`)\
            \ field.\r\n            \r\nFor sale transactions, this value must be\
            \ positive.  It indicates the amount of money paid by the customer to\
            \ the company.\r\n            \r\nFor refund or return transactions, this\
            \ value must be negative."
          format: double
          example: 100.0
        addresses:
          $ref: '#/components/schemas/AddressesModel'
        taxCode:
          maxLength: 25
          minLength: 0
          type: string
          description: "Tax Code - System or Custom Tax Code.\r\n            \r\n\
            You can use your own tax code mapping or standard Avalara tax codes. \
            \ For a full list of tax codes, see `ListTaxCodes`."
          example: PS081282
        customerUsageType:
          maxLength: 25
          minLength: 0
          type: string
          description: "DEPRECATED - Date: 10/16/2017, Version: 17.11, Message: Please\
            \ use `entityUseCode` instead.\r\n"
          x-property-deprecation-info:
            date: 10/16/2017
            version: "17.11"
            message: Please use `entityUseCode` instead.
        entityUseCode:
          maxLength: 25
          minLength: 0
          type: string
          description: "Entity Use Code - The client application customer or usage\
            \ type.  This field allows you to designate a type of usage that\r\nmay\
            \ make this transaction considered exempt by reason of exempt usage.\r\
            \n            \r\nFor a list of entity use codes, see the Definitions\
            \ API `ListEntityUseCodes`."
        itemCode:
          maxLength: 50
          minLength: 0
          type: string
          description: "Item Code (SKU).  If you provide an `itemCode` field, the\
            \ AvaTax API will look up the item you created with the `CreateItems`\
            \ API call\r\nand use all the information available about that item for\
            \ this transaction."
          example: Y0001
        exemptionCode:
          type: string
          description: "The customer Tax Id Number (tax_number) associated with a\
            \ certificate - Sales tax calculation requests first determine if there\
            \ is an applicable\r\nECMS entry available, and will utilize it for exemption\
            \ processing. If no applicable ECMS entry is available, the AvaTax service\r\
            \nwill determine if an Exemption Number field is populated or an Entity/Use\
            \ Code is included in the sales tax calculation request,\r\nand will perform\
            \ exemption processing using either of those two options.\r\nNote: This\
            \ is same as 'exemptNo' in TransactionModel."
        discounted:
          type: boolean
          description: "True if the document discount should be applied to this line.\
            \  If this value is false, or not provided, discounts will not be\r\n\
            applied to this line even if they are specified on the root `discount`\
            \ element."
        taxIncluded:
          type: boolean
          description: "Indicates whether the `amount` for this line already includes\
            \ tax.\r\n            \r\nIf this value is `true`, the final price of\
            \ this line including tax will equal the value in `amount`.\r\n      \
            \      \r\nIf this value is `null` or `false`, the final price will equal\
            \ `amount` plus whatever taxes apply to this line."
        revenueAccount:
          maxLength: 50
          minLength: 0
          type: string
          description: "Revenue Account (Customer Defined Field).\r\n            \r\
            \nThis field is available for you to use to provide whatever information\
            \ your implementation requires.  It does not affect tax calculation."
        ref1:
          maxLength: 250
          minLength: 0
          type: string
          description: "Ref1 (Customer Defined Field)\r\n            \r\nThis field\
            \ is available for you to use to provide whatever information your implementation\
            \ requires.  It does not affect tax calculation."
        ref2:
          maxLength: 250
          minLength: 0
          type: string
          description: "Ref2 (Customer Defined Field)\r\n            \r\nThis field\
            \ is available for you to use to provide whatever information your implementation\
            \ requires.  It does not affect tax calculation."
        description:
          maxLength: 2096
          minLength: 0
          type: string
          description: "Item description.\r\n            \r\nFor Streamlined Sales\
            \ Tax (SST) customers, this field is required if an unmapped `itemCode`\
            \ is used."
          example: Yarn
        businessIdentificationNo:
          maxLength: 25
          minLength: 0
          type: string
          description: "VAT business identification number for the customer for this\
            \ line item.  If you leave this field empty,\r\nthis line item will use\
            \ whatever business identification number you provided at the transaction\
            \ level.\r\n            \r\nIf you specify a VAT business identification\
            \ number for the customer in this transaction and you have also set up\r\
            \na business identification number for your company during company setup,\
            \ this transaction will be treated as a\r\nbusiness-to-business transaction\
            \ for VAT purposes and it will be calculated according to VAT tax rules."
        taxOverride:
          $ref: '#/components/schemas/TaxOverrideModel'
        parameters:
          type: array
          description: "Special parameters that apply to this line within this transaction.\r\
            \n            \r\nTo get a full list of available parameters, please use\
            \ the `ListParameters` API."
          items:
            $ref: '#/components/schemas/TransactionLineParameterModel'
        userDefinedFields:
          type: array
          description: Custom user fields/flex fields for this line.
          items:
            $ref: '#/components/schemas/TransactionLineUserDefinedFieldModel'
        hsCode:
          maxLength: 25
          minLength: 0
          type: string
          description: "The Item code for Custom Duty / Global Import tax determination\r\
            \nHarmonized Tariff System code for this transaction.\r\n            \r\
            \nFor a list of harmonized tariff codes, see the Definitions API for harmonized\
            \ tariff codes."
        merchantSellerId:
          type: integer
          description: "DEPRECATED - Date: 04/15/2021, Version: 21.4, Message: Please\
            \ use merchantSellerIdentifier instead.\r\nID of the merchant selling\
            \ on the Marketplace. This field must be populated by Marketplace."
          format: int64
          x-property-deprecation-info:
            date: 04/15/2021
            version: "21.4"
            message: Please use merchantSellerIdentifier instead.
        merchantSellerIdentifier:
          maxLength: 100
          minLength: 0
          type: string
          description: ID of the merchant selling on the Marketplace. This field must
            be populated by Marketplace.
        marketplaceLiabilityType:
          type: string
          description: This field will identify who is remitting Marketplace or Seller.
            This field must be populated by Marketplace.
          example: Marketplace
          enum:
          - Marketplace
          - Seller
          x-enum-metadata:
            name: MarketplaceLiabilityType
            values:
            - name: Marketplace
              value: 1
            - name: Seller
              value: 2
        originationDocumentId:
          maxLength: 50
          minLength: 0
          type: string
          description: The transaction's original ID in its origination system
        originationSite:
          maxLength: 60
          minLength: 0
          type: string
          description: Synonym of Marketplace Origination. Name of the Marketplace
            where the transaction originated from.
        category:
          maxLength: 4000
          minLength: 0
          type: string
          description: Product category breadcrumbs. This is the full path to the
            category where item is included. Categories should be separated by “ >
            “.  Multiple category paths per item are accepted. In this case, category
            paths should be separated by “;”.
        summary:
          maxLength: 4000
          minLength: 0
          type: string
          description: A long description of the product.
      description: Represents one line item in a MultiDocument transaction
      example:
        companyCode: DEFAULT
        reportingLocationCode: ReportLocation111
        number: "1"
        quantity: 1
        amount: 100
        taxCode: PS081282
        itemCode: Y0001
        description: Yarn
    CreateMultiDocumentModel:
      required:
      - customerCode
      - date
      - lines
      type: object
      properties:
        code:
          maxLength: 45
          minLength: 0
          type: string
          description: "The transaction code of the MultiDocument transaction.\r\n\
            \            \r\nAll individual transactions within this MultiDocument\
            \ object will have this code as a prefix.\r\n            \r\nIf you leave\
            \ the `code` field blank, a GUID will be assigned."
        lines:
          type: array
          description: "Lines that will appear on the invoice.\r\n            \r\n\
            For a MultiDocument transaction, each line may represent a different company\
            \ or reporting location code.  AvaTax\r\nwill separate this MultiDocument\
            \ transaction object into many different transactions, one for each pair\
            \ of legal\r\nentities, so that each legal entity can file their transactional\
            \ taxes correctly."
          example:
          - companyCode: DEFAULT
            reportingLocationCode: ReportLocation111
            number: "1"
            quantity: 1
            amount: 100
            taxCode: PS081282
            itemCode: Y0001
            description: Yarn
          items:
            $ref: '#/components/schemas/MultiDocumentLineItemModel'
        allowAdjust:
          type: boolean
          description: "Set this value to true to allow this API call to adjust the\
            \ MultiDocument model if one already exists.\r\n            \r\nIf you\
            \ omit this field, or if the value is `null`, you will receive an error\
            \ if you try to create two MultiDocument\r\nobjects with the same `code`."
        type:
          type: string
          description: "Specifies the type of document to create.  A document type\
            \ ending with `Invoice` is a permanent transaction\r\nthat will be recorded\
            \ in AvaTax.  A document type ending with `Order` is a temporary estimate\
            \ that will not\r\nbe preserved.\r\n            \r\nIf you omit this value,\
            \ the API will assume you want to create a `SalesOrder`."
          example: SalesOrder
          enum:
          - SalesOrder
          - SalesInvoice
          - PurchaseOrder
          - PurchaseInvoice
          - ReturnOrder
          - ReturnInvoice
          - InventoryTransferOrder
          - InventoryTransferInvoice
          - ReverseChargeOrder
          - ReverseChargeInvoice
          - CustomsInvoice
          - CustomsOrder
          - Any
          x-enum-metadata:
            name: DocumentType
            values:
            - name: SalesOrder
              value: 0
            - name: SalesInvoice
              value: 1
            - name: PurchaseOrder
              value: 2
            - name: PurchaseInvoice
              value: 3
            - name: ReturnOrder
              value: 4
            - name: ReturnInvoice
              value: 5
            - name: InventoryTransferOrder
              value: 6
            - name: InventoryTransferInvoice
              value: 7
            - name: ReverseChargeOrder
              value: 8
            - name: ReverseChargeInvoice
              value: 9
            - name: CustomsInvoice
              value: 10
            - name: CustomsOrder
              value: 11
            - name: Any
              value: -1
        companyCode:
          maxLength: 50
          minLength: 0
          type: string
          description: "Company Code - Specify the code of the company creating this\
            \ transaction here.  If you leave this value null,\r\nyour account's default\
            \ company will be used instead."
          example: DEFAULT
        date:
          type: string
          description: "Transaction Date - The date on the invoice, purchase order,\
            \ etc.\r\n            \r\nBy default, this date will be used to calculate\
            \ the tax rates for the transaction.  If you wish to use a\r\ndifferent\
            \ date to calculate tax rates, please specify a `taxOverride` of type\
            \ `taxDate`."
          format: date
        salespersonCode:
          maxLength: 25
          minLength: 0
          type: string
          description: Salesperson Code - The client application salesperson reference
            code.
        customerCode:
          maxLength: 50
          minLength: 0
          type: string
          description: "Customer Code - The client application customer reference\
            \ code.\r\nNote: This field is case sensitive. To have exemption certificates\
            \ apply, this value should\r\nbe the same as the one passed to create\
            \ a customer."
          example: ABC
        customerUsageType:
          maxLength: 25
          minLength: 0
          type: string
          description: "DEPRECATED - Date: 10/16/2017, Version: 17.11, Message: Please\
            \ use entityUseCode instead.\r\nCustomer Usage Type - The client application\
            \ customer or usage type."
          x-property-deprecation-info:
            date: 10/16/2017
            version: "17.11"
            message: Please use entityUseCode instead.
        entityUseCode:
          maxLength: 25
          minLength: 0
          type: string
          description: "Entity Use Code - The client application customer or usage\
            \ type.  For a list of\r\navailable usage types, use [ListEntityUseCodes](https://developer.avalara.com/api-reference/avatax/rest/v2/methods/Definitions/ListEntityUseCodes/)\
            \ API."
        discount:
          type: number
          description: "Discount - The discount amount to apply to the document. \
            \ This value will be applied only to lines\r\nthat have the `discounted`\
            \ flag set to true.  If no lines have `discounted` set to true, this discount\r\
            \ncannot be applied."
          format: double
        purchaseOrderNo:
          maxLength: 50
          minLength: 0
          type: string
          description: "Purchase Order Number for this document.\r\n            \r\
            \nThis is required for single use exemption certificates to match the\
            \ order and invoice with the certificate."
          example: 2022-01-10-001
        exemptionNo:
          maxLength: 25
          minLength: 0
          type: string
          description: "Exemption Number for this document.\r\n            \r\nIf\
            \ you specify an exemption number for this document, this document will\
            \ be considered exempt, and you\r\nmay be asked to provide proof of this\
            \ exemption certificate in the event that you are asked by an auditor\r\
            \nto verify your exemptions.\r\nNote: This is same as 'exemptNo' in TransactionModel."
        addresses:
          $ref: '#/components/schemas/AddressesModel'
        parameters:
          type: array
          description: "Special parameters for this transaction.\r\n            \r\
            \nTo get a full list of available parameters, please use the [ListParameters](https://developer.avalara.com/api-reference/avatax/rest/v2/methods/Definitions/ListParameters/)\
            \ endpoint."
          items:
            $ref: '#/components/schemas/TransactionParameterModel'
        userDefinedFields:
          type: array
          description: Custom user fields/flex fields for this transaction.
          items:
            $ref: '#/components/schemas/TransactionUserDefinedFieldModel'
        referenceCode:
          maxLength: 1024
          minLength: 0
          type: string
          description: "Customer-provided Reference Code with information about this\
            \ transaction.\r\n            \r\nThis field could be used to reference\
            \ the original document for a return invoice, or for any other\r\nreference\
            \ purpose."
        reportingLocationCode:
          maxLength: 50
          minLength: 0
          type: string
          description: "Sets the sale location code (Outlet ID) for reporting this\
            \ document to the tax authority.\r\n            \r\nThis value is used\
            \ by Avalara Managed Returns to group documents together by reporting\
            \ locations\r\nfor tax authorities that require location-based reporting."
        commit:
          type: boolean
          description: "Causes the document to be committed if true.  This option\
            \ is only applicable for invoice document\r\ntypes, not orders."
          example: true
        batchCode:
          maxLength: 25
          minLength: 0
          type: string
          description: BatchCode for batch operations.
        taxOverride:
          $ref: '#/components/schemas/TaxOverrideModel'
        currencyCode:
          maxLength: 3
          minLength: 0
          type: string
          description: The three-character ISO 4217 currency code for this transaction.
          example: USD
        serviceMode:
          type: string
          description: "Specifies whether the tax calculation is handled Local, Remote,\
            \ or Automatic (default).  This only\r\napplies when using an AvaLocal\
            \ server."
          example: Automatic
          enum:
          - Automatic
          - Local
          - Remote
          x-enum-metadata:
            name: ServiceMode
            values:
            - name: Automatic
              value: 0
            - name: Local
              value: 1
            - name: Remote
              value: 2
        exchangeRate:
          type: number
          description: "Currency exchange rate from this transaction to the company\
            \ base currency.\r\n            \r\nThis only needs to be set if the transaction\
            \ currency is different than the company base currency.\r\nIt defaults\
            \ to 1.0."
          format: double
        exchangeRateEffectiveDate:
          type: string
          description: Effective date of the exchange rate.
          format: date
        exchangeRateCurrencyCode:
          maxLength: 3
          minLength: 0
          type: string
          description: Optional three-character ISO 4217 reporting exchange rate currency
            code for this transaction. The default value is USD.
        posLaneCode:
          maxLength: 50
          minLength: 0
          type: string
          description: Sets the Point of Sale Lane Code sent by the User for this
            document.
        businessIdentificationNo:
          maxLength: 25
          minLength: 0
          type: string
          description: "VAT business identification number for the customer for this\
            \ transaction.  This number will be used for all lines\r\nin the transaction,\
            \ except for those lines where you have defined a different business identification\
            \ number.\r\n            \r\nIf you specify a VAT business identification\
            \ number for the customer in this transaction and you have also set up\r\
            \na business identification number for your company during company setup,\
            \ this transaction will be treated as a\r\nbusiness-to-business transaction\
            \ for VAT purposes and it will be calculated according to VAT tax rules."
        isSellerImporterOfRecord:
          type: boolean
          description: "Specifies if the transaction should have value-added and cross-border\
            \ taxes calculated with the seller as the importer of record.\r\n    \
            \        \r\nSome taxes only apply if the seller is the importer of record\
            \ for a product.  In cases where companies are working together to\r\n\
            ship products, there may be mutual agreement as to which company is the\
            \ entity designated as importer of record.  The importer\r\nof record\
            \ will then be the company designated to pay taxes marked as being obligated\
            \ to the importer of record.\r\n            \r\nSet this value to `true`\
            \ to consider your company as the importer of record and collect these\
            \ taxes.\r\n            \r\nThis value may also be set at the Nexus level.\
            \  See `NexusModel` for more information."
        description:
          maxLength: 2048
          minLength: 0
          type: string
          description: User-supplied description for this transaction.
          example: Yarn
        email:
          maxLength: 50
          minLength: 0
          type: string
          description: User-supplied email address relevant for this transaction.
        debugLevel:
          type: string
          description: If the user wishes to request additional debug information
            from this transaction, specify a level higher than `normal`.
          example: Normal
          enum:
          - Normal
          - Diagnostic
          x-enum-metadata:
            name: TaxDebugLevel
            values:
            - name: Normal
              value: 0
            - name: Diagnostic
              value: 1
        customerSupplierName:
          maxLength: 200
          minLength: 0
          type: string
          description: "The name of the supplier / exporter / seller.\r\nFor sales\
            \ doctype enter the name of your own company for which you are reporting.\r\
            \nFor purchases doctype enter the name of the supplier you have purchased\
            \ from."
        dataSourceId:
          type: integer
          description: "The Id of the datasource from which this transaction originated.\r\
            \nThis value will be overridden by the system to take the datasource Id\
            \ from the call header."
          format: int32
        deliveryTerms:
          type: string
          description: "The Delivery Terms is a field used in conjunction with Importer\
            \ of Record to influence whether AvaTax includes Import Duty and Tax values\
            \ in the transaction totals or not.\r\nDelivered at Place (DAP) and Delivered\
            \ Duty Paid (DDP) are two delivery terms that  indicate that Import Duty\
            \ and Tax should be included in the transaction total.\r\nThis field is\
            \ also used for reports.\r\nThis field is used for future feature support.\
            \ This field is not currently in use."
          example: DAP
          enum:
          - DAP
          - DDP
          x-enum-metadata:
            name: DeliveryTerms
            values:
            - name: DAP
              value: 1
            - name: DDP
              value: 2
      description: "A MultiDocument transaction represents a sale or purchase that\
        \ occurred between more than two companies.\r\n            \r\nA traditional\
        \ transaction requires exactly two parties: a seller and a buyer.  MultiDocument\
        \ transactions can\r\ninvolve a marketplace of vendors, each of which contributes\
        \ some portion of the final transaction.  Within\r\na MultiDocument transaction,\
        \ each individual buyer and seller pair are matched up and converted to a\
        \ separate\r\ndocument.  This separation of documents allows each seller to\
        \ file their taxes separately."
      example:
        lines:
        - companyCode: DEFAULT
          reportingLocationCode: ReportLocation111
          number: "1"
          quantity: 1
          amount: 100
          taxCode: PS081282
          itemCode: Y0001
          description: Yarn
        type: SalesInvoice
        companyCode: DEFAULT
        date: 2022-01-10
        customerCode: ABC
        purchaseOrderNo: 2022-01-10-001
        addresses:
          singleLocation:
            line1: 2000 Main Street
            city: Irvine
            region: CA
            country: US
            postalCode: "92614"
        commit: true
        currencyCode: USD
        description: Yarn
    MultiDocumentModelFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/MultiDocumentModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    AdjustMultiDocumentModel:
      required:
      - adjustmentReason
      - newTransaction
      type: object
      properties:
        adjustmentReason:
          type: string
          description: A reason code indicating why this adjustment was made
          example: NotAdjusted
          enum:
          - NotAdjusted
          - SourcingIssue
          - ReconciledWithGeneralLedger
          - ExemptCertApplied
          - PriceAdjusted
          - ProductReturned
          - ProductExchanged
          - BadDebt
          - Other
          - Offline
          x-enum-metadata:
            name: AdjustmentReason
            values:
            - name: NotAdjusted
              value: 0
            - name: SourcingIssue
              value: 1
            - name: ReconciledWithGeneralLedger
              value: 2
            - name: ExemptCertApplied
              value: 3
            - name: PriceAdjusted
              value: 4
            - name: ProductReturned
              value: 5
            - name: ProductExchanged
              value: 6
            - name: BadDebt
              value: 7
            - name: Other
              value: 8
            - name: Offline
              value: 9
        adjustDescription:
          type: string
          description: "If the AdjustmentReason is \"Other\", specify the reason here.\r\
            \n            \r\nThis is required when the AdjustmentReason is 8 (Other)."
          example: Price was dropped.
        newTransaction:
          $ref: '#/components/schemas/CreateMultiDocumentModel'
      description: Replace an existing MultiDocument transaction recorded in AvaTax
        with a new one.
      example:
        adjustmentReason: PriceAdjusted
        adjustDescription: Price was dropped.
        newTransaction:
          lines:
          - companyCode: DEFAULT
            reportingLocationCode: ReportLocation111
            number: "1"
            quantity: 1
            amount: 100
            taxCode: PS081282
            itemCode: Y0001
            description: Yarn
          type: SalesInvoice
          companyCode: DEFAULT
          date: 2022-01-10
          customerCode: ABC
          purchaseOrderNo: 2022-01-10-001
          addresses:
            singleLocation:
              line1: 2000 Main Street
              city: Irvine
              region: CA
              country: US
              postalCode: "92614"
          commit: true
          currencyCode: USD
          description: Yarn
    VoidTransactionModel:
      required:
      - code
      type: object
      properties:
        code:
          type: string
          description: "Please specify the reason for voiding or cancelling this transaction.\r\
            \nTo void the transaction, please specify the reason 'DocVoided'.\r\n\
            If you do not provide a reason, the void command will fail."
          example: Unspecified
          enum:
          - Unspecified
          - PostFailed
          - DocDeleted
          - DocVoided
          - AdjustmentCancelled
          x-enum-metadata:
            name: VoidReasonCode
            values:
            - name: Unspecified
              value: 0
            - name: PostFailed
              value: 1
            - name: DocDeleted
              value: 2
            - name: DocVoided
              value: 3
            - name: AdjustmentCancelled
              value: 4
      description: A request to void a previously created transaction
      example:
        code: DocVoided
    ReconstructedMultiDocumentModel:
      type: object
      properties:
        request:
          $ref: '#/components/schemas/CreateMultiDocumentModel'
      description: "Contains information about the original API request and response\
        \ that created\r\na MultiDocument object."
      example:
        request:
          lines:
          - companyCode: DEFAULT
            reportingLocationCode: ReportLocation111
            number: "1"
            quantity: 1
            amount: 100
            taxCode: PS081282
            itemCode: Y0001
            description: Yarn
          type: SalesInvoice
          companyCode: DEFAULT
          date: 2022-01-10
          customerCode: ABC
          purchaseOrderNo: 2022-01-10-001
          addresses:
            singleLocation:
              line1: 2000 Main Street
              city: Irvine
              region: CA
              country: US
              postalCode: "92614"
          commit: true
          currencyCode: USD
          description: Yarn
    OriginalApiRequestResponseModel:
      type: object
      properties:
        request:
          $ref: '#/components/schemas/CreateTransactionModel'
        response:
          $ref: '#/components/schemas/TransactionModel'
      description: Represents the exact API request and response from the original
        transaction API call, if available
      example:
        request:
          lines:
          - number: "1"
            quantity: 1
            amount: 100
            taxCode: PS081282
            itemCode: Y0001
            description: Yarn
          type: SalesInvoice
          companyCode: DEFAULT
          date: 2022-01-10
          customerCode: ABC
          purchaseOrderNo: 2022-01-10-001
          addresses:
            singleLocation:
              line1: 2000 Main Street
              city: Irvine
              region: CA
              country: US
              postalCode: "92614"
          commit: true
          currencyCode: USD
          description: Yarn
        response:
          id: 123456789
          code: aa027633-24e3-4fe9-98dd-8ec981b07557
          companyId: 12345
          date: 2022-01-10
          status: Committed
          type: SalesInvoice
          currencyCode: USD
          exchangeRateCurrencyCode: USD
          entityUseCode: ""
          customerVendorCode: ABC
          customerCode: ABC
          exemptNo: ""
          reconciled: true
          locationCode: DEFAULT
          salespersonCode: DEF
          taxOverrideType: None
          taxOverrideAmount: 0
          taxOverrideReason: ""
          totalAmount: 1000
          totalExempt: 0
          totalDiscount: 0
          totalTax: 62.5
          totalTaxable: 1000
          totalTaxCalculated: 62.5
          adjustmentReason: NotAdjusted
          adjustmentDescription: ""
          locked: false
          region: CA
          country: US
          version: 0
          originAddressId: 123456789
          destinationAddressId: 123456789
          exchangeRateEffectiveDate: 2022-01-10
          exchangeRate: 2
          isSellerImporterOfRecord: false
          description: Yarn
          taxDate: 2022-01-10T00:00:00+00:00
          lines:
          - id: 123456789
            transactionId: 123456789
            lineNumber: "1"
            boundaryOverrideId: 0
            entityUseCode: ""
            description: Yarn
            destinationAddressId: 12345
            originAddressId: 123456789
            discountAmount: 100
            discountTypeId: 0
            exemptAmount: 0
            exemptCertId: 0
            exemptNo: ""
            isItemTaxable: true
            isSSTP: false
            itemCode: "116292"
            lineAmount: 1000
            quantity: 1
            ref1: 'Note: Deliver to Bob'
            reportingDate: 2022-01-10
            revAccount: ""
            sourcing: Destination
            tax: 62.5
            taxableAmount: 1000
            taxCalculated: 62.5
            taxCode: PS081282
            taxDate: 2022-01-10
            taxEngine: ""
            taxOverrideType: None
            taxOverrideAmount: 0
            taxOverrideReason: ""
            taxIncluded: false
            details:
            - id: 123456789
              transactionLineId: 123456789
              transactionId: 123456789
              addressId: 12345
              country: US
              region: CA
              stateFIPS: "06"
              exemptAmount: 0
              exemptReasonId: 4
              inState: false
              jurisCode: "06"
              jurisName: CALIFORNIA
              jurisdictionId: 5000531
              signatureCode: AGAM
              stateAssignedNo: ""
              jurisType: STA
              nonTaxableAmount: 0
              nonTaxableRuleId: 0
              nonTaxableType: BaseRule
              rate: 0.0625
              rateRuleId: 1321915
              rateSourceId: 3
              serCode: ""
              sourcing: Destination
              tax: 62.5
              taxableAmount: 1000
              taxType: Sales
              taxName: CA STATE TAX
              taxAuthorityTypeId: 45
              taxRegionId: 2127184
              taxCalculated: 62.5
              taxOverride: 0
              rateType: General
              taxableUnits: 62.5
              nonTaxableUnits: 1000
              exemptUnits: 62.5
              reportingTaxableUnits: 125
              reportingNonTaxableUnits: 2000
              reportingExemptUnits: 125
              reportingTax: 125
              reportingTaxCalculated: 125
            vatNumberTypeId: 0
          addresses:
          - id: 0
            transactionId: 0
            boundaryLevel: Address
            line1: '100 Ravine Lane Northeast #220'
            city: Bainbridge Island
            region: WA
            postalCode: "98110"
            country: US
            taxRegionId: 0
          taxDetailsByTaxType:
          - taxType: SalesAndUse
            totalTaxable: 100
            totalExempt: 0.05
            totalNonTaxable: 0
            totalTax: 0.625
    AuditMultiDocumentModel:
      type: object
      properties:
        reconstructed:
          $ref: '#/components/schemas/ReconstructedMultiDocumentModel'
        code:
          type: string
          description: "Represents the unique code of this MultiDocument transaction.\r\
            \n            \r\nA MultiDocument transaction is uniquely identified by\
            \ its `accountId`, `code`, and `type`."
        type:
          type: string
          description: "Represents the document type of this MultiDocument transaction.\
            \  For more information about\r\ndocument types, see [DocumentType](https://developer.avalara.com/api-reference/avatax/rest/v2/models/enums/DocumentType/).\r\
            \n            \r\nA MultiDocument transaction is uniquely identified by\
            \ its `accountId`, `code`, and `type`."
          example: SalesOrder
          enum:
          - SalesOrder
          - SalesInvoice
          - PurchaseOrder
          - PurchaseInvoice
          - ReturnOrder
          - ReturnInvoice
          - InventoryTransferOrder
          - InventoryTransferInvoice
          - ReverseChargeOrder
          - ReverseChargeInvoice
          - CustomsInvoice
          - CustomsOrder
          - Any
          x-enum-metadata:
            name: DocumentType
            values:
            - name: SalesOrder
              value: 0
            - name: SalesInvoice
              value: 1
            - name: PurchaseOrder
              value: 2
            - name: PurchaseInvoice
              value: 3
            - name: ReturnOrder
              value: 4
            - name: ReturnInvoice
              value: 5
            - name: InventoryTransferOrder
              value: 6
            - name: InventoryTransferInvoice
              value: 7
            - name: ReverseChargeOrder
              value: 8
            - name: ReverseChargeInvoice
              value: 9
            - name: CustomsInvoice
              value: 10
            - name: CustomsOrder
              value: 11
            - name: Any
              value: -1
        serverTimestamp:
          type: string
          description: Server timestamp, in UTC, of the date/time when the original
            transaction was created
          format: date-time
          example: 2022-01-10T15:49:34.8547986Z
        serverDuration:
          type: string
          description: Length of time the original API call took
          format: date-time
        apiCallStatus:
          type: string
          description: api call status
          example: OriginalApiCallAvailable
          enum:
          - OriginalApiCallAvailable
          - ReconstructedApiCallAvailable
          - Any
          x-enum-metadata:
            name: ApiCallStatus
            values:
            - name: OriginalApiCallAvailable
              value: 0
            - name: ReconstructedApiCallAvailable
              value: 1
            - name: Any
              value: -1
        original:
          $ref: '#/components/schemas/OriginalApiRequestResponseModel'
      description: Information about a previously created MultiDocument transaction
      example:
        reconstructed:
          request:
            lines:
            - companyCode: DEFAULT
              reportingLocationCode: ReportLocation111
              number: "1"
              quantity: 1
              amount: 100
              taxCode: PS081282
              itemCode: Y0001
              description: Yarn
            type: SalesInvoice
            companyCode: DEFAULT
            date: 2022-01-10
            customerCode: ABC
            purchaseOrderNo: 2022-01-10-001
            addresses:
              singleLocation:
                line1: 2000 Main Street
                city: Irvine
                region: CA
                country: US
                postalCode: "92614"
            commit: true
            currencyCode: USD
            description: Yarn
        type: SalesOrder
        serverTimestamp: 2022-01-10T15:49:34.8547986Z
        apiCallStatus: ReconstructedApiCallAvailable
    VerifyMultiDocumentModel:
      required:
      - code
      - type
      type: object
      properties:
        code:
          maxLength: 45
          minLength: 0
          type: string
          description: "Represents the unique code of this MultiDocument transaction.\r\
            \n            \r\nA MultiDocument transaction is uniquely identified by\
            \ its `accountId`, `code`, and `type`."
          example: ABC
        type:
          type: string
          description: "Represents the document type of this MultiDocument transaction.\
            \  For more information about\r\ndocument types, see [DocumentType](https://developer.avalara.com/api-reference/avatax/rest/v2/models/enums/DocumentType/).\r\
            \n            \r\nA MultiDocument transaction is uniquely identified by\
            \ its `accountId`, `code`, and `type`."
          example: SalesOrder
          enum:
          - SalesOrder
          - SalesInvoice
          - PurchaseOrder
          - PurchaseInvoice
          - ReturnOrder
          - ReturnInvoice
          - InventoryTransferOrder
          - InventoryTransferInvoice
          - ReverseChargeOrder
          - ReverseChargeInvoice
          - CustomsInvoice
          - CustomsOrder
          - Any
          x-enum-metadata:
            name: DocumentType
            values:
            - name: SalesOrder
              value: 0
            - name: SalesInvoice
              value: 1
            - name: PurchaseOrder
              value: 2
            - name: PurchaseInvoice
              value: 3
            - name: ReturnOrder
              value: 4
            - name: ReturnInvoice
              value: 5
            - name: InventoryTransferOrder
              value: 6
            - name: InventoryTransferInvoice
              value: 7
            - name: ReverseChargeOrder
              value: 8
            - name: ReverseChargeInvoice
              value: 9
            - name: CustomsInvoice
              value: 10
            - name: CustomsOrder
              value: 11
            - name: Any
              value: -1
        verifyTransactionDate:
          type: string
          description: "Set this value if you wish to verify a match between `verifyTransactionDate`\
            \ and\r\nthe `documentDate` value on the transaction recorded in AvaTax.\r\
            \n            \r\nIf you leave this field empty, we will skip verification\
            \ for this field."
          format: date-time
        verifyTotalAmount:
          type: number
          description: "Set this value if you wish to verify a match between `verifyTotalAmount`\
            \ and\r\nthe `totalAmount` value on the transaction recorded in AvaTax.\r\
            \n            \r\nIf you leave this field empty, we will skip verification\
            \ for this field."
          format: double
        verifyTotalTax:
          type: number
          description: "Set this value if you wish to verify a match between `verifyTotalTax`\
            \ and\r\nthe `totalTax` value on the transaction recorded in AvaTax.\r\
            \n            \r\nIf you leave this field empty, we will skip verification\
            \ for this field."
          format: double
      description: "Verify that a MultiDocument object matches the information in\
        \ your accounting system.\r\n            \r\nIf all attributes of the MultiDocument\
        \ object match the values in your request, the\r\nMultiDocument object will\
        \ be moved to the document status `Posted`.\r\n            \r\nFor more information\
        \ on document status, see [DocumentStatus](https://developer.avalara.com/api-reference/avatax/rest/v2/models/enums/DocumentStatus/)."
      example:
        code: ABC
        type: SalesInvoice
    NexusTaxTypeGroupCountModel:
      type: object
      properties:
        nexusTaxTypeGroup:
          type: string
          description: Which nexus tax type group
        count:
          type: integer
          description: How many nexus in the group
          format: int32
      description: Nexus tax type groupe with count
    NexusSummaryModel:
      type: object
      properties:
        companyId:
          type: integer
          description: Company Id
          format: int32
          example: 1234
        nexusSummary:
          type: array
          description: Nexus summary for this company
          example:
          - nexusTaxTypeGroup: SalesAndUse
            count: 8
          - nexusTaxTypeGroup: InputOutput
            count: 5
          items:
            $ref: '#/components/schemas/NexusTaxTypeGroupCountModel'
      description: Nexus summary model
      example:
        companyId: 1234
        nexusSummary:
        - nexusTaxTypeGroup: SalesAndUse
          count: 8
        - nexusTaxTypeGroup: InputOutput
          count: 5
    DeclareNexusByAddressModel:
      type: object
      properties:
        effectiveDate:
          type: string
          description: "The earliest date on which your company does business at this\
            \ address.  If you omit\r\na value in this field, nexus will be declared\
            \ at the earliest possible date for this\r\njurisdiction."
          format: date-time
        endDate:
          type: string
          description: "The date on which your company stopped doing business at this\
            \ address, or empty if\r\nyour company has no plans to stop doing business\
            \ at this address."
          format: date-time
        line1:
          maxLength: 50
          minLength: 0
          type: string
          description: First line of the street address
          example: 2000 Main Street
        textCase:
          type: string
          description: Specify the text case for the validated address result.  If
            not specified, will return uppercase.
          example: Upper
          enum:
          - Upper
          - Mixed
          x-enum-metadata:
            name: TextCase
            values:
            - name: Upper
              value: 0
            - name: Mixed
              value: 1
        line2:
          maxLength: 100
          minLength: 0
          type: string
          description: Second line of the street address
        line3:
          maxLength: 100
          minLength: 0
          type: string
          description: Third line of the street address
        city:
          maxLength: 50
          minLength: 0
          type: string
          description: City component of the address
          example: Irvine
        region:
          type: string
          description: "Name or ISO 3166 code identifying the region within the country.\r\
            \n            \r\nThis field supports many different region identifiers:\r\
            \n * Two and three character ISO 3166 region codes\r\n * Fully spelled\
            \ out names of the region in ISO supported languages\r\n * Common alternative\
            \ spellings for many regions\r\n            \r\nFor a full list of all\
            \ supported codes and names, please see the Definitions API `ListRegions`."
          example: CA
        country:
          type: string
          description: "Name or ISO 3166 code identifying the country.\r\n       \
            \     \r\nThis field supports many different country identifiers:\r\n\
            \ * Two character ISO 3166 codes\r\n * Three character ISO 3166 codes\r\
            \n * Fully spelled out names of the country in ISO supported languages\r\
            \n * Common alternative spellings for many countries\r\n            \r\
            \nFor a full list of all supported codes and names, please see the Definitions\
            \ API `ListCountries`."
          example: US
        postalCode:
          maxLength: 11
          minLength: 0
          type: string
          description: Postal Code / Zip Code component of the address.
          example: "92614"
        latitude:
          type: number
          description: Geospatial latitude measurement, in Decimal Degrees floating
            point format.
          format: double
        longitude:
          type: number
          description: Geospatial longitude measurement, in Decimal Degrees floating
            point format.
          format: double
      description: "Use this object to provide an address and date range where your\
        \ company does business.\r\nThis address will be used to determine what jurisdictions\
        \ you should declare nexus and\r\ncalculate tax."
      example:
        effectiveDate: 2018-01-01T00:00:00
        endDate: 2020-12-31T00:00:00
        line1: 2000 Main Street
        city: Irvine
        region: CA
        country: US
        postalCode: "92614"
    NexusByAddressModel:
      type: object
      properties:
        address:
          $ref: '#/components/schemas/DeclareNexusByAddressModel'
        declaredNexus:
          type: array
          description: "List of all nexus objects that were affected by declaring\
            \ nexus at the address specified\r\nby `address`."
          example:
          - id: 0
            companyId: 0
            country: US
            region: CA
            jurisTypeId: STA
            jurisdictionTypeId: State
            jurisCode: "06"
            jurisName: CALIFORNIA
            effectiveDate: 2017-04-01
            shortName: CALIFORNIA
            signatureCode: ""
            stateAssignedNo: ""
            nexusTypeId: SalesOrSellersUseTax
            sourcing: Destination
            hasLocalNexus: false
            hasPermanentEstablishment: true
            streamlinedSalesTax: false
            isSSTActive: false
            createdDate: 2017-06-30T05:14:06.003
            createdUserId: 0
            modifiedDate: 2021-12-06T09:14:53.693
            modifiedUserId: 0
            taxTypeGroup: EWaste
            nexusTaxTypeGroup: SalesAndUse
            isSellerImporterOfRecord: false
            taxName: Tire Fee
            taxableNexus: true
          items:
            $ref: '#/components/schemas/NexusModel'
      description: "Contains information about nexus jurisdictions that were declared\r\
        \nas a result of a call to `DeclareNexusByAddress`.  For each address,\r\n\
        this object model contains a list of the nexus objects that were declared\r\
        \naccording to the geocoding that corresponds to this address."
      example:
        address:
          effectiveDate: 2018-01-01T00:00:00
          endDate: 2020-12-31T00:00:00
          line1: 2000 Main Street
          city: Irvine
          region: CA
          country: US
          postalCode: "92614"
        declaredNexus:
        - id: 0
          companyId: 0
          country: US
          region: CA
          jurisTypeId: STA
          jurisdictionTypeId: State
          jurisCode: "06"
          jurisName: CALIFORNIA
          effectiveDate: 2017-04-01
          shortName: CALIFORNIA
          signatureCode: ""
          stateAssignedNo: ""
          nexusTypeId: SalesOrSellersUseTax
          sourcing: Destination
          hasLocalNexus: false
          hasPermanentEstablishment: true
          streamlinedSalesTax: false
          isSSTActive: false
          createdDate: 2017-06-30T05:14:06.003
          createdUserId: 0
          modifiedDate: 2021-12-06T09:14:53.693
          modifiedUserId: 0
          taxTypeGroup: EWaste
          nexusTaxTypeGroup: SalesAndUse
          isSellerImporterOfRecord: false
          taxName: Tire Fee
          taxableNexus: true
    NexusParameterDetailModelFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/NexusParameterDetailModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    ResourceFileUploadRequestModel:
      required:
      - content
      type: object
      properties:
        content:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          description: This stream contains the bytes of the file being uploaded.
          format: byte
          example: UHJvY2Vzc0NvZGUsRG9jQ29kZSxEb2NUeXBlLERvY0RhdGUsQ29tcGFueUNvZGUsQ3VzdG9tZXJDb2RlLEVudGl0eVVzZUNvZGUsTGluZU5vLFRheENvZGUsVGF4RGF0ZSxJdGVtQ29kZSxEZXNjcmlwdGlvbixRdHksQW1vdW50LERpc2NvdW50LFJlZjEsUmVmMixFeGVtcHRpb25ObyxSZXZBY2N0LERlc3RBZGRyZXNzLERlc3RDaXR5LERlc3RSZWdpb24sRGVzdFBvc3RhbENvZGUsRGVzdENvdW50cnksT3JpZ0FkZHJlc3MsT3JpZ0NpdHksT3JpZ1JlZ2lvbixPcmlnUG9zdGFsQ29kZSxPcmlnQ291bnRyeSxMb2NhdGlvbkNvZGUsU2FsZXNQZXJzb25Db2RlLFB1cmNoYXNlT3JkZXJObyxDdXJyZW5jeUNvZGUsRXhjaGFuZ2VSYXRlLEV4Y2hhbmdlUmF0ZUVmZkRhdGUsUGF5bWVudERhdGUsVGF4SW5jbHVkZWQsRGVzdFRheFJlZ2lvbixPcmlnVGF4UmVnaW9uLFRheGFibGUsVGF4VHlwZSxUb3RhbFRheCxDb3VudHJ5TmFtZSxDb3VudHJ5Q29kZSxDb3VudHJ5UmF0ZSxDb3VudHJ5VGF4LFN0YXRlTmFtZSxTdGF0ZUNvZGUsU3RhdGVSYXRlLFN0YXRlVGF4LENvdW50eU5hbWUsQ291bnR5Q29kZSxDb3VudHlSYXRlLENvdW50eVRheCxDaXR5TmFtZSxDaXR5Q29kZSxDaXR5UmF0ZSxDaXR5VGF4LE90aGVyMU5hbWUsT3RoZXIxQ29kZSxPdGhlcjFSYXRlLE90aGVyMVRheCxPdGhlcjJOYW1lLE90aGVyMkNvZGUsT3RoZXIyUmF0ZSxPdGhlcjJUYXgsT3RoZXIzTmFtZSxPdGhlcjNDb2RlLE90aGVyM1JhdGUsT3RoZXIzVGF4LE90aGVyNE5hbWUsT3RoZXI0Q29kZSxPdGhlcjRSYXRlLE90aGVyNFRheCxSZWZlcmVuY2VDb2RlLEJ1eWVyc1ZBVE5vLElzU2VsbGVySW1wb3J0ZXJPZlJlY29yZCxCUkJ1eWVyVHlwZSxCUkJ1eWVyX0lzRXhlbXB0T3JDYW5ub3RXSF9JUlJGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX1BJU1JGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX0NPRklOU1JGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX0NTTExSRixCUkJ1eWVyX0lzRXhlbXB0X1BJUyxCUkJ1eWVyX0lzRXhlbXB0X0NPRklOUyxCUkJ1eWVyX0lzRXhlbXB0X0NTTEwsSGVhZGVyX0Rlc2NyaXB0aW9uLEVtYWlsDQozLDlhYzI4MGMzLTNhNTUtNGEzNS1iZWQyLWE4M2RiNTNiMDUxZSwxLDEvMS8yMDE0LERFRkFVTFQsQ3VzdDEsLDEsLCwsLCwxMDAwLCwsLCwsMjM1IEUgNDJuZCBTdCAsTmV3IFlvcmssTlksMTAwMTctNTcwMyAgLFVTLDkwMCBXaW5zbG93IFdheSxCYWluYnJpZGdlIElzbGFuZCxXQSw5ODExMCxVUywsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwNCg==
        username:
          type: string
          description: The username adding the file
          example: test.user
        accountId:
          type: integer
          description: The account ID to which this file will be attached.
          format: int32
          example: 5555
        companyId:
          type: integer
          description: The company ID to which this file will be attached.
          format: int32
          example: 66666
        name:
          type: string
          description: The original name of this file.
          example: nameoffile.txt
        resourceFileTypeId:
          type: integer
          description: The resource type ID of this file.
          format: int32
          example: 0
        length:
          type: integer
          description: Length of the file in bytes.
          format: int64
          example: 333
      description: A request to upload a file to Resource Files
      example:
        content: UHJvY2Vzc0NvZGUsRG9jQ29kZSxEb2NUeXBlLERvY0RhdGUsQ29tcGFueUNvZGUsQ3VzdG9tZXJDb2RlLEVudGl0eVVzZUNvZGUsTGluZU5vLFRheENvZGUsVGF4RGF0ZSxJdGVtQ29kZSxEZXNjcmlwdGlvbixRdHksQW1vdW50LERpc2NvdW50LFJlZjEsUmVmMixFeGVtcHRpb25ObyxSZXZBY2N0LERlc3RBZGRyZXNzLERlc3RDaXR5LERlc3RSZWdpb24sRGVzdFBvc3RhbENvZGUsRGVzdENvdW50cnksT3JpZ0FkZHJlc3MsT3JpZ0NpdHksT3JpZ1JlZ2lvbixPcmlnUG9zdGFsQ29kZSxPcmlnQ291bnRyeSxMb2NhdGlvbkNvZGUsU2FsZXNQZXJzb25Db2RlLFB1cmNoYXNlT3JkZXJObyxDdXJyZW5jeUNvZGUsRXhjaGFuZ2VSYXRlLEV4Y2hhbmdlUmF0ZUVmZkRhdGUsUGF5bWVudERhdGUsVGF4SW5jbHVkZWQsRGVzdFRheFJlZ2lvbixPcmlnVGF4UmVnaW9uLFRheGFibGUsVGF4VHlwZSxUb3RhbFRheCxDb3VudHJ5TmFtZSxDb3VudHJ5Q29kZSxDb3VudHJ5UmF0ZSxDb3VudHJ5VGF4LFN0YXRlTmFtZSxTdGF0ZUNvZGUsU3RhdGVSYXRlLFN0YXRlVGF4LENvdW50eU5hbWUsQ291bnR5Q29kZSxDb3VudHlSYXRlLENvdW50eVRheCxDaXR5TmFtZSxDaXR5Q29kZSxDaXR5UmF0ZSxDaXR5VGF4LE90aGVyMU5hbWUsT3RoZXIxQ29kZSxPdGhlcjFSYXRlLE90aGVyMVRheCxPdGhlcjJOYW1lLE90aGVyMkNvZGUsT3RoZXIyUmF0ZSxPdGhlcjJUYXgsT3RoZXIzTmFtZSxPdGhlcjNDb2RlLE90aGVyM1JhdGUsT3RoZXIzVGF4LE90aGVyNE5hbWUsT3RoZXI0Q29kZSxPdGhlcjRSYXRlLE90aGVyNFRheCxSZWZlcmVuY2VDb2RlLEJ1eWVyc1ZBVE5vLElzU2VsbGVySW1wb3J0ZXJPZlJlY29yZCxCUkJ1eWVyVHlwZSxCUkJ1eWVyX0lzRXhlbXB0T3JDYW5ub3RXSF9JUlJGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX1BJU1JGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX0NPRklOU1JGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX0NTTExSRixCUkJ1eWVyX0lzRXhlbXB0X1BJUyxCUkJ1eWVyX0lzRXhlbXB0X0NPRklOUyxCUkJ1eWVyX0lzRXhlbXB0X0NTTEwsSGVhZGVyX0Rlc2NyaXB0aW9uLEVtYWlsDQozLDlhYzI4MGMzLTNhNTUtNGEzNS1iZWQyLWE4M2RiNTNiMDUxZSwxLDEvMS8yMDE0LERFRkFVTFQsQ3VzdDEsLDEsLCwsLCwxMDAwLCwsLCwsMjM1IEUgNDJuZCBTdCAsTmV3IFlvcmssTlksMTAwMTctNTcwMyAgLFVTLDkwMCBXaW5zbG93IFdheSxCYWluYnJpZGdlIElzbGFuZCxXQSw5ODExMCxVUywsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwNCg==
        username: test.user
        accountId: 5555
        companyId: 66666
        name: nameoffile.txt
        resourceFileTypeId: 0
        length: 333
    NoticeCommentModel:
      required:
      - commentType
      - noticeId
      type: object
      properties:
        id:
          type: integer
          description: The unique ID number of this notice.
          format: int32
          readOnly: true
          example: 1123
        noticeId:
          type: integer
          description: The ID of the notice this comment is attached too
          format: int32
          example: 12345
        date:
          type: string
          description: The date this comment was entered
          format: date-time
          example: 2022-01-10T15:49:35.3785116Z
        comment:
          type: string
          description: TaxNoticeComment
          example: comment
        commentUserId:
          type: integer
          description: TaxNoticeCommentUserId
          format: int32
          example: 0
        commentUserName:
          type: string
          description: TaxNoticeCommentUserName
          readOnly: true
          example: complianceUser
        commentTypeId:
          type: integer
          description: taxNoticeCommentTypeId
          format: int32
          example: 0
        commentType:
          type: string
          description: taxNoticeCommentType
          example: Internal
          enum:
          - Internal
          - Customer
          - POAAttachment
          - NoticeVoucher
          x-enum-metadata:
            name: CommentType
            values:
            - name: Internal
              value: 1
            - name: Customer
              value: 2
            - name: POAAttachment
              value: 3
            - name: NoticeVoucher
              value: 4
        commentLink:
          type: string
          description: TaxNoticeCommentLink
          example: www.avalara.com
        taxNoticeFileName:
          maxLength: 300
          minLength: 0
          type: string
          description: TaxNoticeFileName
          example: xyz.txt
        resourceFileId:
          type: integer
          description: resourceFileId
          format: int64
        modifiedDate:
          type: string
          description: The date/time when this record was last modified.
          format: date-time
          readOnly: true
        modifiedUserId:
          type: integer
          description: The user ID of the user who last modified this record.
          format: int32
          readOnly: true
        attachmentUploadRequest:
          $ref: '#/components/schemas/ResourceFileUploadRequestModel'
      description: Represents communication between Avalara and the company regarding
        the processing of a tax notice.
      example:
        id: 1123
        noticeId: 12345
        date: 2022-01-10T15:49:35.3785116Z
        comment: comment
        commentUserId: 0
        commentUserName: complianceUser
        commentTypeId: 0
        commentType: Internal
        commentLink: www.avalara.com
        taxNoticeFileName: xyz.txt
        attachmentUploadRequest:
          content: UHJvY2Vzc0NvZGUsRG9jQ29kZSxEb2NUeXBlLERvY0RhdGUsQ29tcGFueUNvZGUsQ3VzdG9tZXJDb2RlLEVudGl0eVVzZUNvZGUsTGluZU5vLFRheENvZGUsVGF4RGF0ZSxJdGVtQ29kZSxEZXNjcmlwdGlvbixRdHksQW1vdW50LERpc2NvdW50LFJlZjEsUmVmMixFeGVtcHRpb25ObyxSZXZBY2N0LERlc3RBZGRyZXNzLERlc3RDaXR5LERlc3RSZWdpb24sRGVzdFBvc3RhbENvZGUsRGVzdENvdW50cnksT3JpZ0FkZHJlc3MsT3JpZ0NpdHksT3JpZ1JlZ2lvbixPcmlnUG9zdGFsQ29kZSxPcmlnQ291bnRyeSxMb2NhdGlvbkNvZGUsU2FsZXNQZXJzb25Db2RlLFB1cmNoYXNlT3JkZXJObyxDdXJyZW5jeUNvZGUsRXhjaGFuZ2VSYXRlLEV4Y2hhbmdlUmF0ZUVmZkRhdGUsUGF5bWVudERhdGUsVGF4SW5jbHVkZWQsRGVzdFRheFJlZ2lvbixPcmlnVGF4UmVnaW9uLFRheGFibGUsVGF4VHlwZSxUb3RhbFRheCxDb3VudHJ5TmFtZSxDb3VudHJ5Q29kZSxDb3VudHJ5UmF0ZSxDb3VudHJ5VGF4LFN0YXRlTmFtZSxTdGF0ZUNvZGUsU3RhdGVSYXRlLFN0YXRlVGF4LENvdW50eU5hbWUsQ291bnR5Q29kZSxDb3VudHlSYXRlLENvdW50eVRheCxDaXR5TmFtZSxDaXR5Q29kZSxDaXR5UmF0ZSxDaXR5VGF4LE90aGVyMU5hbWUsT3RoZXIxQ29kZSxPdGhlcjFSYXRlLE90aGVyMVRheCxPdGhlcjJOYW1lLE90aGVyMkNvZGUsT3RoZXIyUmF0ZSxPdGhlcjJUYXgsT3RoZXIzTmFtZSxPdGhlcjNDb2RlLE90aGVyM1JhdGUsT3RoZXIzVGF4LE90aGVyNE5hbWUsT3RoZXI0Q29kZSxPdGhlcjRSYXRlLE90aGVyNFRheCxSZWZlcmVuY2VDb2RlLEJ1eWVyc1ZBVE5vLElzU2VsbGVySW1wb3J0ZXJPZlJlY29yZCxCUkJ1eWVyVHlwZSxCUkJ1eWVyX0lzRXhlbXB0T3JDYW5ub3RXSF9JUlJGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX1BJU1JGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX0NPRklOU1JGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX0NTTExSRixCUkJ1eWVyX0lzRXhlbXB0X1BJUyxCUkJ1eWVyX0lzRXhlbXB0X0NPRklOUyxCUkJ1eWVyX0lzRXhlbXB0X0NTTEwsSGVhZGVyX0Rlc2NyaXB0aW9uLEVtYWlsDQozLDlhYzI4MGMzLTNhNTUtNGEzNS1iZWQyLWE4M2RiNTNiMDUxZSwxLDEvMS8yMDE0LERFRkFVTFQsQ3VzdDEsLDEsLCwsLCwxMDAwLCwsLCwsMjM1IEUgNDJuZCBTdCAsTmV3IFlvcmssTlksMTAwMTctNTcwMyAgLFVTLDkwMCBXaW5zbG93IFdheSxCYWluYnJpZGdlIElzbGFuZCxXQSw5ODExMCxVUywsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwNCg==
          username: test.user
          accountId: 5555
          companyId: 66666
          name: nameoffile.txt
          resourceFileTypeId: 0
          length: 333
    NoticeFinanceModel:
      type: object
      properties:
        id:
          type: integer
          description: The Unique Id of the Finance Model
          format: int32
          example: 0
        noticeId:
          type: integer
          description: The unique ID of the the tax notice associated with the the
            finance detail
          format: int32
          example: 12345
        noticeDate:
          type: string
          description: The date of the notice
          format: date-time
          example: 2022-01-10T15:49:35.4294724Z
        dueDate:
          type: string
          description: The due date of the notice
          format: date-time
          example: 2022-01-24T15:49:35.4294916Z
        noticeNumber:
          type: string
          description: The sequential number of the notice
          example: 3x3215
        taxDue:
          type: number
          description: The amount of tax due on the notice
          format: double
          example: 99.98
        penalty:
          type: number
          description: The amound of penalty listed on the notice
          format: double
          example: 56.98
        interest:
          type: number
          description: The amount of interest listed on the notice
          format: double
          example: 88.98
        credits:
          type: number
          description: The amount of credits listed on the notice
          format: double
          example: 85.98
        taxAbated:
          type: number
          description: The amount of tax abated on the notice
          format: double
          example: 45.98
        customerPenalty:
          type: number
          description: The amount of customer penalty on the notice
          format: double
          example: 23.98
        customerInterest:
          type: number
          description: The amount of customer interest on the notice
          format: double
          example: 13.98
        cspFeeRefund:
          type: number
          description: The amount of CSP Fee Refund on the notice
          format: double
          example: 10.98
        fileName:
          type: string
          description: The name of the file attached to the finance detail
        resourceFileId:
          type: integer
          description: The ResourceFileId of the finance detail attachment
          format: int64
        createdDate:
          type: string
          description: The date when this record was created.
          format: date-time
          readOnly: true
        createdUserId:
          type: integer
          description: The User ID of the user who created this record.
          format: int32
          readOnly: true
        modifiedDate:
          type: string
          description: The date/time when this record was last modified.
          format: date-time
          readOnly: true
        modifiedUserId:
          type: integer
          description: The user ID of the user who last modified this record.
          format: int32
          readOnly: true
        attachmentUploadRequest:
          $ref: '#/components/schemas/ResourceFileUploadRequestModel'
      description: Represents estimated financial results from responding to a tax
        notice.
      example:
        id: 0
        noticeId: 12345
        noticeDate: 2022-01-10T15:49:35.4294724Z
        dueDate: 2022-01-24T15:49:35.4294916Z
        noticeNumber: 3x3215
        taxDue: 99.98
        penalty: 56.98
        interest: 88.98
        credits: 85.98
        taxAbated: 45.98
        customerPenalty: 23.98
        customerInterest: 13.98
        cspFeeRefund: 10.98
        attachmentUploadRequest:
          content: UHJvY2Vzc0NvZGUsRG9jQ29kZSxEb2NUeXBlLERvY0RhdGUsQ29tcGFueUNvZGUsQ3VzdG9tZXJDb2RlLEVudGl0eVVzZUNvZGUsTGluZU5vLFRheENvZGUsVGF4RGF0ZSxJdGVtQ29kZSxEZXNjcmlwdGlvbixRdHksQW1vdW50LERpc2NvdW50LFJlZjEsUmVmMixFeGVtcHRpb25ObyxSZXZBY2N0LERlc3RBZGRyZXNzLERlc3RDaXR5LERlc3RSZWdpb24sRGVzdFBvc3RhbENvZGUsRGVzdENvdW50cnksT3JpZ0FkZHJlc3MsT3JpZ0NpdHksT3JpZ1JlZ2lvbixPcmlnUG9zdGFsQ29kZSxPcmlnQ291bnRyeSxMb2NhdGlvbkNvZGUsU2FsZXNQZXJzb25Db2RlLFB1cmNoYXNlT3JkZXJObyxDdXJyZW5jeUNvZGUsRXhjaGFuZ2VSYXRlLEV4Y2hhbmdlUmF0ZUVmZkRhdGUsUGF5bWVudERhdGUsVGF4SW5jbHVkZWQsRGVzdFRheFJlZ2lvbixPcmlnVGF4UmVnaW9uLFRheGFibGUsVGF4VHlwZSxUb3RhbFRheCxDb3VudHJ5TmFtZSxDb3VudHJ5Q29kZSxDb3VudHJ5UmF0ZSxDb3VudHJ5VGF4LFN0YXRlTmFtZSxTdGF0ZUNvZGUsU3RhdGVSYXRlLFN0YXRlVGF4LENvdW50eU5hbWUsQ291bnR5Q29kZSxDb3VudHlSYXRlLENvdW50eVRheCxDaXR5TmFtZSxDaXR5Q29kZSxDaXR5UmF0ZSxDaXR5VGF4LE90aGVyMU5hbWUsT3RoZXIxQ29kZSxPdGhlcjFSYXRlLE90aGVyMVRheCxPdGhlcjJOYW1lLE90aGVyMkNvZGUsT3RoZXIyUmF0ZSxPdGhlcjJUYXgsT3RoZXIzTmFtZSxPdGhlcjNDb2RlLE90aGVyM1JhdGUsT3RoZXIzVGF4LE90aGVyNE5hbWUsT3RoZXI0Q29kZSxPdGhlcjRSYXRlLE90aGVyNFRheCxSZWZlcmVuY2VDb2RlLEJ1eWVyc1ZBVE5vLElzU2VsbGVySW1wb3J0ZXJPZlJlY29yZCxCUkJ1eWVyVHlwZSxCUkJ1eWVyX0lzRXhlbXB0T3JDYW5ub3RXSF9JUlJGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX1BJU1JGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX0NPRklOU1JGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX0NTTExSRixCUkJ1eWVyX0lzRXhlbXB0X1BJUyxCUkJ1eWVyX0lzRXhlbXB0X0NPRklOUyxCUkJ1eWVyX0lzRXhlbXB0X0NTTEwsSGVhZGVyX0Rlc2NyaXB0aW9uLEVtYWlsDQozLDlhYzI4MGMzLTNhNTUtNGEzNS1iZWQyLWE4M2RiNTNiMDUxZSwxLDEvMS8yMDE0LERFRkFVTFQsQ3VzdDEsLDEsLCwsLCwxMDAwLCwsLCwsMjM1IEUgNDJuZCBTdCAsTmV3IFlvcmssTlksMTAwMTctNTcwMyAgLFVTLDkwMCBXaW5zbG93IFdheSxCYWluYnJpZGdlIElzbGFuZCxXQSw5ODExMCxVUywsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwNCg==
          username: test.user
          accountId: 5555
          companyId: 66666
          name: nameoffile.txt
          resourceFileTypeId: 0
          length: 333
    NoticeResponsibilityDetailModel:
      required:
      - noticeId
      - taxNoticeResponsibilityId
      type: object
      properties:
        id:
          type: integer
          description: The unique ID number of this filing frequency.
          format: int32
          readOnly: true
          example: 0
        noticeId:
          type: integer
          description: TaxNoticeId
          format: int32
          example: 4
        taxNoticeResponsibilityId:
          type: integer
          description: TaxNoticeResponsibilityId
          format: int32
          example: 4
        description:
          type: string
          description: The description name of this filing frequency
          readOnly: true
          example: Avalara-Compliance
      description: NoticeResponsibility Model
      example:
        id: 0
        noticeId: 4
        taxNoticeResponsibilityId: 4
        description: Avalara-Compliance
    NoticeRootCauseDetailModel:
      required:
      - id
      - noticeId
      - taxNoticeRootCauseId
      type: object
      properties:
        id:
          type: integer
          description: The unique ID number of this filing frequency.
          format: int32
          example: 0
        noticeId:
          type: integer
          description: TaxNoticeId
          format: int32
          example: 4
        taxNoticeRootCauseId:
          type: integer
          description: TaxNoticeRootCauseId
          format: int32
          example: 4
        description:
          type: string
          description: The description name of this root cause
          readOnly: true
          example: Processor error-Return not submitted
      description: NoticeRootCause Model
      example:
        id: 0
        noticeId: 4
        taxNoticeRootCauseId: 4
        description: Processor error-Return not submitted
    NoticeModel:
      required:
      - companyId
      - customerTypeId
      - hideFromCustomer
      - id
      - priorityId
      - reasonId
      - receivedDate
      - showResolutionDateToCustomer
      - statusId
      type: object
      properties:
        id:
          type: integer
          description: The unique ID number of this notice.
          format: int32
          example: 3878
        companyId:
          type: integer
          description: The unique ID number of the company to which this notice belongs.
          format: int32
          example: 5714
        statusId:
          type: integer
          description: The status id of the notice
          format: int32
          example: 4
        status:
          type: string
          description: The status of the notice
          readOnly: true
          example: Closed - Paid
        receivedDate:
          type: string
          description: The received date of the notice
          format: date-time
          example: 2022-01-10T15:49:35.4689395Z
        closedDate:
          type: string
          description: The closed date of the notice
          format: date-time
          example: 2022-01-30T15:49:35.4689576Z
        totalRemit:
          type: number
          description: The total remmitance amount for the notice
          format: double
          readOnly: true
          example: 0.0
        customerTypeId:
          type: string
          description: NoticeCustomerTypeID can be retrieved from the definitions
            API
          example: AvaTaxReturns
          enum:
          - AvaTaxReturns
          - StandAlone
          - Strategic
          - SST
          - TrustFile
          - PWC
          - HudsonGroup
          - MRA
          - None
          x-enum-metadata:
            name: NoticeCustomerType
            values:
            - name: AvaTaxReturns
              value: 1
            - name: StandAlone
              value: 2
            - name: Strategic
              value: 3
            - name: SST
              value: 4
            - name: TrustFile
              value: 5
            - name: PWC
              value: 6
            - name: HudsonGroup
              value: 7
            - name: MRA
              value: 8
            - name: None
              value: 9
        country:
          type: string
          description: "Name or ISO 3166 code identifying the country that sent this\
            \ notice.\r\n            \r\nThis field supports many different country\
            \ identifiers:\r\n * Two character ISO 3166 codes\r\n * Three character\
            \ ISO 3166 codes\r\n * Fully spelled out names of the country in ISO supported\
            \ languages\r\n * Common alternative spellings for many countries\r\n\
            \            \r\nFor a full list of all supported codes and names, please\
            \ see the Definitions API `ListCountries`."
          example: US
        region:
          type: string
          description: "Name or ISO 3166 code identifying the region within the country\
            \ that sent this notice.\r\n            \r\nThis field supports many different\
            \ region identifiers:\r\n * Two and three character ISO 3166 region codes\r\
            \n * Fully spelled out names of the region in ISO supported languages\r\
            \n * Common alternative spellings for many regions\r\n            \r\n\
            For a full list of all supported codes and names, please see the Definitions\
            \ API `ListRegions`."
          example: AZ
        taxAuthorityId:
          type: integer
          description: The tax authority id of the notice
          format: int32
          example: 208
        filingFrequency:
          type: string
          description: The filing frequency of the notice
          example: Monthly
          enum:
          - Monthly
          - Quarterly
          - SemiAnnually
          - Annually
          - Bimonthly
          - Occasional
          - InverseQuarterly
          - Weekly
          x-enum-metadata:
            name: FilingFrequencyId
            values:
            - name: Monthly
              value: 1
            - name: Quarterly
              value: 2
            - name: SemiAnnually
              value: 3
            - name: Annually
              value: 4
            - name: Bimonthly
              value: 5
            - name: Occasional
              value: 6
            - name: InverseQuarterly
              value: 7
            - name: Weekly
              value: 8
        filingTypeId:
          type: string
          description: The filing type of the notice
          example: ElectronicReturn
          enum:
          - ElectronicReturn
          - PaperReturn
          - ReturnNotFiled
          - EFTPaper
          - SER
          - TrustfileEdi
          - UploadFile
          - PaperManual
          - CertCapture
          - SignatureReady
          x-enum-metadata:
            name: TaxNoticeFilingTypeId
            values:
            - name: ElectronicReturn
              value: 1
            - name: PaperReturn
              value: 2
            - name: ReturnNotFiled
              value: 3
            - name: EFTPaper
              value: 4
            - name: SER
              value: 5
            - name: TrustfileEdi
              value: 6
            - name: UploadFile
              value: 7
            - name: PaperManual
              value: 8
            - name: CertCapture
              value: 9
            - name: SignatureReady
              value: 10
        ticketReferenceNo:
          type: string
          description: The ticket reference number of the notice
          example: "1235"
        ticketReferenceUrl:
          type: string
          description: The ticket reference url of the notice
          example: http://www.ticketurl.com
        salesForceCase:
          type: string
          description: The sales force case of the notice
          example: "3333"
        salesForceCaseUrl:
          type: string
          description: The URL to the sales force case
          example: http://www.salesforcecaseurl.com
        taxPeriod:
          type: string
          description: The tax period of the notice
          example: "200710"
        reasonId:
          type: integer
          description: The notice reason id
          format: int32
          example: 10
        reason:
          type: string
          description: The notice reason
          readOnly: true
          example: Unsupported Credit
        typeId:
          type: integer
          description: The tax notice type id
          format: int32
          example: 3
        type:
          type: string
          description: The tax notice type description
        customerFundingOptionId:
          type: string
          description: The notice customer funding options
          example: Pull
          enum:
          - Pull
          - Wire
          x-enum-metadata:
            name: FundingOption
            values:
            - name: Pull
              value: 1
            - name: Wire
              value: 2
        priorityId:
          type: string
          description: The priority of the notice
          example: ImmediateAttentionRequired
          enum:
          - ImmediateAttentionRequired
          - High
          - Normal
          - Low
          x-enum-metadata:
            name: NoticePriorityId
            values:
            - name: ImmediateAttentionRequired
              value: 1
            - name: High
              value: 2
            - name: Normal
              value: 3
            - name: Low
              value: 4
        customerComment:
          type: string
          description: Comments from the customer on this notice
          example: comments
        hideFromCustomer:
          type: boolean
          description: Indicator to hide from customer
          example: false
        expectedResolutionDate:
          type: string
          description: Expected resolution date of the notice
          format: date-time
          example: 2022-01-25T15:49:35.4694137Z
        showResolutionDateToCustomer:
          type: boolean
          description: Indicator to show customer this resolution date
          example: false
        closedByUserId:
          type: integer
          description: The unique ID number of the user that closed the notice
          format: int32
          example: 1
        createdByUserName:
          type: string
          description: The user who created the notice
          readOnly: true
          example: user@compliance.com
        ownedByUserId:
          type: integer
          description: The unique ID number of the user that owns the notice
          format: int32
          example: 23
        description:
          type: string
          description: The description of the notice
          example: description
        avaFileFormId:
          type: integer
          description: The ava file form id of the notice
          format: int32
          example: 333
        revenueContactId:
          type: integer
          description: The id of the revenue contact
          format: int32
          example: 444
        complianceContactId:
          type: integer
          description: The id of the compliance contact
          format: int32
          example: 555
        taxFormCode:
          type: string
          description: The tax form code of the notice
        documentReference:
          type: string
          description: The document reference of the notice
        jurisdictionName:
          type: string
          description: The jurisdiction name of the notice
          readOnly: true
          example: CHANDLER
        jurisdictionType:
          type: string
          description: The jurisdiction type of the notice
          readOnly: true
          example: City
        comments:
          type: array
          description: Additional comments on the notice
          example:
          - id: 3
            noticeId: 3878
            date: 2022-01-10T15:49:35.4688368Z
            comment: spoke to Chris payment not received need copy of check.VW
            commentUserId: 1
            commentUserName: user@compliance.com
            commentTypeId: 0
            commentType: Internal
          items:
            $ref: '#/components/schemas/NoticeCommentModel'
        finances:
          type: array
          description: Finance details of the notice
          example:
          - id: 3
            noticeId: 0
            noticeDate: 2022-01-10T15:49:35.4688878Z
            taxDue: 6.66
            penalty: 0.67
            interest: 0.19
            credits: 0.06
            taxAbated: 0
          items:
            $ref: '#/components/schemas/NoticeFinanceModel'
        responsibility:
          type: array
          description: Notice Responsibility Details
          items:
            $ref: '#/components/schemas/NoticeResponsibilityDetailModel'
        rootCause:
          type: array
          description: Notice Root Cause Details
          items:
            $ref: '#/components/schemas/NoticeRootCauseDetailModel'
        createdDate:
          type: string
          description: The date when this record was created.
          format: date-time
          readOnly: true
          example: 2022-01-05T15:49:35.4694817Z
        createdUserId:
          type: integer
          description: The User ID of the user who created this record.
          format: int32
          readOnly: true
          example: 1
        modifiedDate:
          type: string
          description: The date/time when this record was last modified.
          format: date-time
          readOnly: true
          example: 2022-01-10T15:49:35.4695096Z
        modifiedUserId:
          type: integer
          description: The user ID of the user who last modified this record.
          format: int32
          readOnly: true
          example: 222
      description: "Represents a letter received from a tax authority regarding tax\
        \ filing.\r\nThese letters often have the warning \"Notice\" printed at the\
        \ top, which is why\r\nthey are called \"Notices\"."
      example:
        id: 3878
        companyId: 5714
        statusId: 4
        status: Closed - Paid
        receivedDate: 2022-01-10T15:49:35.4689395Z
        closedDate: 2022-01-30T15:49:35.4689576Z
        totalRemit: 0
        customerTypeId: AvaTaxReturns
        country: US
        region: AZ
        taxAuthorityId: 208
        filingFrequency: Quarterly
        filingTypeId: ElectronicReturn
        ticketReferenceNo: "1235"
        ticketReferenceUrl: http://www.ticketurl.com
        salesForceCase: "3333"
        salesForceCaseUrl: http://www.salesforcecaseurl.com
        taxPeriod: "200710"
        reasonId: 10
        reason: Unsupported Credit
        typeId: 3
        customerFundingOptionId: Pull
        priorityId: ImmediateAttentionRequired
        customerComment: comments
        hideFromCustomer: false
        expectedResolutionDate: 2022-01-25T15:49:35.4694137Z
        showResolutionDateToCustomer: false
        closedByUserId: 1
        createdByUserName: user@compliance.com
        ownedByUserId: 23
        description: description
        avaFileFormId: 333
        revenueContactId: 444
        complianceContactId: 555
        jurisdictionName: CHANDLER
        jurisdictionType: City
        comments:
        - id: 3
          noticeId: 3878
          date: 2022-01-10T15:49:35.4688368Z
          comment: spoke to Chris payment not received need copy of check.VW
          commentUserId: 1
          commentUserName: user@compliance.com
          commentTypeId: 0
          commentType: Internal
        finances:
        - id: 3
          noticeId: 0
          noticeDate: 2022-01-10T15:49:35.4688878Z
          taxDue: 6.66
          penalty: 0.67
          interest: 0.19
          credits: 0.06
          taxAbated: 0
        createdDate: 2022-01-05T15:49:35.4694817Z
        createdUserId: 1
        modifiedDate: 2022-01-10T15:49:35.4695096Z
        modifiedUserId: 222
    NoticeModelFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/NoticeModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    NoticeCommentModelFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/NoticeCommentModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    NoticeFinanceModelFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/NoticeFinanceModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    NoticeResponsibilityDetailModelFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/NoticeResponsibilityDetailModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    CreateNoticeResponsibilityTypeModel:
      type: object
      properties:
        description:
          type: string
          description: The description name of this notice responsibility
          example: Customer-Invalid login (Return filed manual)
        isActive:
          type: boolean
          description: Defines if the responsibility is active
          example: true
        sortOrder:
          type: integer
          description: The sort order of this responsibility
          format: int32
          example: 175
      description: Model to create a new tax notice responsibility type.
      example:
        description: Customer-Invalid login (Return filed manual)
        isActive: true
        sortOrder: 175
    NoticeRootCauseDetailModelFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/NoticeRootCauseDetailModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    CreateNoticeRootCauseTypeModel:
      type: object
      properties:
        description:
          type: string
          description: The description name of this notice RootCause
          example: Customer-Invalid login (Return filed manual)
        isActive:
          type: boolean
          description: Defines if the RootCause is active
          example: true
        sortOrder:
          type: integer
          description: The sort order of this RootCause
          format: int32
          example: 55
      description: Model to create a new tax notice root cause type.
      example:
        description: Customer-Invalid login (Return filed manual)
        isActive: true
        sortOrder: 55
    ResourceFileUploadResultModel:
      type: object
      properties:
        message:
          type: string
          description: If the request failed, this contains a description of the error.
          example: return message
        resourceFileId:
          type: integer
          description: If the request succeeded, this is the ID number of the file.
          format: int64
          example: 333
        aaa_success:
          type: boolean
          description: True if the upload request succeeded.
      description: Encapsulates the result of uploading a file to the resource system
      example:
        message: return message
        resourceFileId: 333
        aaa_success: true
    NotificationModel:
      required:
      - expireDate
      - message
      - severityLevelId
      type: object
      properties:
        id:
          type: integer
          description: The unique id of the notification.
          format: int64
          example: 123
        accountId:
          type: integer
          description: The unique ID number of the account that received this notification.
          format: int32
          example: 202011901
        companyId:
          type: integer
          description: "If this notification was tied to a specific company, this\
            \ will be the\r\nunique ID number of the company that received the notification.\
            \  Notifications that\r\nare tied to accounts will have a `NULL` value\
            \ for `companyId`."
          format: int32
          example: 34345
        referenceObject:
          maxLength: 20
          minLength: 0
          type: string
          description: "The type name of object referred to by this notification,\
            \ if any.\r\n            \r\nSome notifications may include information\
            \ about a related data object.\r\n            \r\nFor example, if this\
            \ notification was related to a nexus declaration, the `referenceObject`\
            \ field would\r\nbe  `Nexus` and the `referenceId` field would be the\
            \ unique ID number of that nexus."
          example: Company Return
        referenceId:
          type: integer
          description: "The unique reference Id number of the object referred to by\
            \ this notification, if any.\r\n            \r\nSome notifications may\
            \ include information about a related data object.\r\n            \r\n\
            For example, if this notification was related to a nexus declaration,\
            \ the `referenceObject` field would\r\nbe  `Nexus` and the `referenceId`\
            \ field would be the unique ID number of that nexus."
          format: int64
          example: 692
        severityLevelId:
          type: string
          description: The severity level of the notification.
          example: Neutral
          enum:
          - Neutral
          - Advisory
          - Blocking
          - Complete
          x-enum-metadata:
            name: NotificationSeverityLevel
            values:
            - name: Neutral
              value: 0
            - name: Advisory
              value: 1
            - name: Blocking
              value: 2
            - name: Complete
              value: -1
        category:
          maxLength: 50
          minLength: 0
          type: string
          description: "The category of this notification.\r\n            \r\nNotification\
            \ categories are a useful way to group related notifications together.\
            \ Category names may change\r\nover time.\r\n            \r\nFor Example:\
            \ \"Backdated Transactions\" or \"Nexus Jurisdiction Alerts\", or \"Certificate\
            \ Expiration\"."
          example: Certificate Expiration
        topic:
          maxLength: 250
          minLength: 0
          type: string
          description: "The topic of this notification.\r\n            \r\nNotification\
            \ topics contain information about the notification.  They are a summary\
            \ of the issue and can\r\nhelp you decide what type of action to take.\r\
            \n            \r\nFor Example: \"Backdated Transactions\" or \"Nexus Jurisdiction\
            \ Alerts\", or \"Certificate Expiration\"."
        message:
          type: string
          description: "The message for this notification.  This is a friendly description\
            \ of the notification and any relevant\r\ninformation that can help you\
            \ decide what kind of action, if any, to take in response."
          example: The certificate of your company is nearing its expiration, please
            consider renewing it.
        needsAction:
          type: boolean
          description: If this notification object requires user action to resolve,
            this value will be set to true.
          example: true
        actionName:
          maxLength: 250
          minLength: 0
          type: string
          description: "If there is a specific action suggested by this notification,\
            \ this is the name of the action.\r\n            \r\nAn action is a suggested\
            \ next step such as \"Review Your Tax Profile.\"  If an action is suggested,\r\
            \nyou should give the viewer a hyperlink to the location referred to by\
            \ `actionLink` and give the\r\nhyperlink the name `actionName`."
          example: Certificate Renewal
        actionLink:
          maxLength: 250
          minLength: 0
          type: string
          description: "If there is a specific action suggested by this notification,\
            \ this is the URL of the action.\r\n            \r\nAn action is a suggested\
            \ next step such as \"Review Your Tax Profile.\"  If an action is suggested,\r\
            \nyou should give the viewer a hyperlink to the location referred to by\
            \ `actionLink` and give the\r\nhyperlink the name `actionName`."
          example: www.xyz.com
        actionDueDate:
          type: string
          description: "If there is a specific action suggested by this notification,\
            \ and if this action is requested\r\nby a specific due date, this value\
            \ will be the due date for the action.\r\n            \r\nAn action is\
            \ a suggested next step such as \"Review Your Tax Profile.\"  If an action\
            \ is suggested,\r\nyou should give the viewer a hyperlink to the location\
            \ referred to by `actionLink` and give the\r\nhyperlink the name `actionName`.\r\
            \n            \r\nFor actions that have deadlines, such as \"Confirm your\
            \ tax registration before filing\", this value\r\nwill be set to the deadline\
            \ date for the action.  Otherwise, this value will be null."
          format: date-time
        dismissed:
          type: boolean
          description: "When a user has finished reviewing a notification, they may\
            \ opt to dismiss it by calling the\r\n`DismissNotification` API.  This\
            \ API marks the notification as dismissed, and dismissed notifications\r\
            \nwill generally not appear in most user interfaces."
          example: false
        dismissedByUserId:
          type: integer
          description: "If this notification has been dismissed, this indicates the\
            \ unique ID number of the user that\r\ndismissed the notification."
          format: int32
        dismissedDate:
          type: string
          description: "If this notification has been dismissed, this indicates the\
            \ timestamp (in UTC time) when the user\r\ndismissed the notification."
          format: date-time
        expireDate:
          type: string
          description: "If this notification is time sensitive, this is the latest\
            \ date when the notification should be\r\ndisplayed to the user."
          format: date-time
          example: 2022-01-10T00:00:00Z
        createdUserId:
          type: integer
          description: The unique ID number of the user who created the notification.
          format: int32
          example: 442323
        createdDate:
          type: string
          description: The UTC timestamp of the time when this notification was created.
          format: date-time
        modifiedUserId:
          type: integer
          description: The unique ID number of the user who most recently modified
            this notification.
          format: int32
          example: 442323
        modifiedDate:
          type: string
          description: The UTC timestamp of the time when this notification was last
            modified.
          format: date-time
      description: "Represents a single notification.\r\n            \r\nA notification\
        \ is a message from Avalara that may have relevance to your business.  You\
        \ may want\r\nto regularly review notifications and then dismiss them when\
        \ you are certain that you have addressed\r\nany relevant concerns raised\
        \ by this notification.\r\n            \r\nAn example of a notification would\
        \ be a message about new software, or a change to AvaTax that may\r\naffect\
        \ you, or a potential issue with your company's tax profile."
      example:
        id: 123
        accountId: 202011901
        companyId: 34345
        referenceObject: Company Return
        referenceId: 692
        severityLevelId: Neutral
        category: Certificate Expiration
        message: The certificate of your company is nearing its expiration, please
          consider renewing it.
        needsAction: true
        actionName: Certificate Renewal
        actionLink: www.xyz.com
        dismissed: false
        expireDate: 2022-01-10T00:00:00+00:00
        createdUserId: 442323
        createdDate: 2018-05-05T00:00:00
        modifiedUserId: 442323
        modifiedDate: 2018-05-07T00:00:00
    NotificationModelFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/NotificationModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    PasswordChangeModel:
      required:
      - newPassword
      - oldPassword
      type: object
      properties:
        oldPassword:
          maxLength: 50
          minLength: 0
          type: string
          description: Old Password
          example: MyOldPassword123!
        newPassword:
          type: string
          description: New Password
          example: ANewPassword567:)
      description: Password Change Model
      example:
        oldPassword: MyOldPassword123!
        newPassword: ANewPassword567:)
    SetPasswordModel:
      required:
      - newPassword
      type: object
      properties:
        newPassword:
          type: string
          description: New Password
          example: NewPassword789~~!
      description: Set Password Model
      example:
        newPassword: NewPassword789~~!
    ExportDocumentLineModel:
      type: object
      properties:
        format:
          type: string
          description: The file format.
          example: CSV
          enum:
          - CSV
          x-enum-metadata:
            name: ReportFormat
            values:
            - name: CSV
              value: 0
        startDate:
          type: string
          description: "The start date filter for report execution. If no date provided,\
            \ same date of last month will be used as the startDate.\r\nAccepts date\
            \ in short format yyyy-mm-dd as well as date time stamp"
          format: date-time
          example: 2021-12-10T00:00:00Z
        endDate:
          type: string
          description: "The end date filter for report execution. If no date provided,\
            \ today's date will be used as the endDate.\r\nAccepts date in short format\
            \ yyyy-mm-dd as well as date time stamp"
          format: date-time
          example: 2022-01-10T00:00:00Z
        country:
          type: string
          description: "The transactions in the country you wish to run a report.\r\
            \nUse \"ALL\" for all countries\r\nUse \"ALL Non-US\" for all international\
            \ countries\r\nOr use a single 2-char ISO country code"
          example: US
        state:
          type: string
          description: "The state associated with the transactions you wish to run\
            \ a report.\r\nUse \"ALL\" for all states or 2-char state code."
          example: All
        dateFilter:
          type: string
          description: The type of date to filter your transactions
          example: DocumentDate
          enum:
          - DocumentDate
          - ModifiedDate
          - PaymentDate
          - ReportingDate
          - TaxDate
          x-enum-metadata:
            name: ReportDateFilter
            values:
            - name: DocumentDate
              value: 68
            - name: ModifiedDate
              value: 77
            - name: PaymentDate
              value: 80
            - name: ReportingDate
              value: 82
            - name: TaxDate
              value: 84
        docType:
          type: string
          description: The transaction type you want to run a report on
          example: ConsumerUse
          enum:
          - ConsumerUse
          - Sales
          x-enum-metadata:
            name: ReportDocType
            values:
            - name: ConsumerUse
              value: 67
            - name: Sales
              value: 83
        currencyCode:
          type: string
          description: "The currency your report is displayed in.\r\nAccepts \"USD\"\
            \ or leave this blank to get all the documents with all the currencies"
          example: USD
        numberOfPartitions:
          type: integer
          description: "Number of partitions (2 - 250) to split the report into.\r\
            \nIf a value is provided for this property, a value must also be provided\
            \ for the partition property."
          format: int32
          example: 10
        partition:
          type: integer
          description: "The zero-based partition number to retrieve in this export\
            \ request.\r\nIf a value is provided for this property, a value must also\
            \ be provided for the numberOfPartitions property."
          format: int32
          example: 0
        isLocked:
          type: boolean
          description: "If true, include only documents that are locked.\r\nIf false,\
            \ include only documents that are not locked.\r\nDefaults to false if\
            \ not specified."
          example: true
        merchantSellerIdentifier:
          type: string
          description: If set, include only documents associated with these merchantSellerIds.Multiple
            merchantSellerIds should be sent by comma separated values.
          example: abc,xyz
        documentStatus:
          type: string
          description: "DocumentStatus\r\nFor documentStatus, accepted values are:\
            \ Saved, Posted, Committed, Cancelled"
          example: Temporary
          enum:
          - Temporary
          - Saved
          - Posted
          - Committed
          - Cancelled
          - Adjusted
          - Queued
          - PendingApproval
          - Any
          x-enum-metadata:
            name: DocumentStatus
            values:
            - name: Temporary
              value: 0
            - name: Saved
              value: 1
            - name: Posted
              value: 2
            - name: Committed
              value: 3
            - name: Cancelled
              value: 4
            - name: Adjusted
              value: 5
            - name: Queued
              value: 6
            - name: PendingApproval
              value: 7
            - name: Any
              value: -1
        isModifiedDateSameAsDocumentDate:
          type: boolean
          description: "Use this parameter when dateFilter = ModifiedDate.\r\nFor\
            \ dateFilter = DocumentDate, PaymentDate, TaxDate or ReportingDate, the\
            \ isModifiedDateSameAsDocumentDate parameter is ignored.\r\nSet this parameter\
            \ to true when you would like to get Documents which have the Document\
            \ Date same as Modified Date.\r\nDefaults to false if not specified."
          example: false
        taxGroup:
          type: string
          description: "TaxGroup is required to support Sales tax (Sales + SellersUse)\
            \ and VAT (Input+ Output).\r\nTaxTypes, such as Lodging, Bottle, LandedCost,\
            \ Ewaste, BevAlc, etc"
          example: Alcohol
        taxName:
          type: string
          description: The description of the tax
          example: VAT
        taxCode:
          type: string
          description: The AvaTax tax code or customer tax code associated with the
            item or SKU in the transaction
          example: "123"
        customerVendorCode:
          type: string
          description: The code your business application uses to identify a customer
            or vendor
        taxSubType:
          type: string
          description: Defines the individual taxes associated with a TaxType category,
            such as Lodging TaxType which supports numerous TaxSubTypes, including
            Hotel, Occupancy, ConventionCenter, Accommotations, etc.
          example: Prepared Food and Beverage
      description: An input model for executing a report detailed to the document
        line level
      example:
        format: CSV
        startDate: 2021-12-10T00:00:00+00:00
        endDate: 2022-01-10T00:00:00+00:00
        country: US
        state: All
        dateFilter: DocumentDate
        docType: Sales
        currencyCode: USD
        numberOfPartitions: 10
        partition: 0
        isLocked: true
        merchantSellerIdentifier: abc,xyz
        documentStatus: Committed
        isModifiedDateSameAsDocumentDate: false
        taxGroup: Alcohol
        taxName: VAT
        taxCode: "123"
        taxSubType: Prepared Food and Beverage
    ReportParametersModel:
      type: object
      properties:
        startDate:
          type: string
          description: The start date filter used for your report
          format: date-time
          example: 2021-12-10T00:00:00Z
        endDate:
          type: string
          description: The end date filter used for your report
          format: date-time
          example: 2022-01-10T00:00:00Z
        country:
          type: string
          description: The country filter used for your report
          example: US
        state:
          type: string
          description: The state filter used for your report
          example: All
        dateFilter:
          type: string
          description: The date type filter used for your report
          example: DD
        docType:
          type: string
          description: The doc type filter used for your report
          example: S
        dateFormat:
          type: string
          description: The date format used for your report
          example: MM/dd/yyyy
        currencyCode:
          type: string
          description: The currency code used for your report
          example: USD
        numberOfPartitions:
          type: integer
          description: Number of partitions to split the report into.
          format: int32
          example: 2
        partition:
          type: integer
          description: The zero-based partition number to retrieve in this export
            request.
          format: int32
          example: 0
        isLocked:
          type: boolean
          description: "If true, include only documents that are locked.\r\nIf false,\
            \ include only documents that are not locked.\r\nDefaults to false if\
            \ not specified."
          example: true
        merchantSellerId:
          type: string
          description: If set, include only documents associated with this merchantSellerId.
          example: abcd
        documentStatus:
          type: string
          description: "The Document status filter used for report\r\nFor documentStatus,\
            \ accepted values are: Temporary, Saved, Posted, Committed, Cancelled,\
            \ Adjusted, Queued, PendingApproval"
          example: Commited
        isModifiedDateSameAsDocumentDate:
          type: boolean
          description: "If true, modified date will be same as document date\r\nIf\
            \ false, modified date will not be same as document date\r\nDefaults to\
            \ false if not specified."
          example: false
        taxGroup:
          type: string
          description: "TaxGroup is required to support Sales tax (Sales + SellersUse)\
            \ and VAT (Input+ Output).\r\nTaxTypes, such as Lodging, Bottle, LandedCost,\
            \ Ewaste, BevAlc, etc"
          example: Alcohol
        taxName:
          type: string
          description: The description of the tax
          example: VAT
        taxCode:
          type: string
          description: The AvaTax tax code or customer tax code associated with the
            item or SKU in the transaction
          example: "123"
        customerVendorCode:
          type: string
          description: The code your business application uses to identify a customer
            or vendor
        taxSubType:
          type: string
          description: Defines the individual taxes associated with a TaxType category,
            such as Lodging TaxType which supports numerous TaxSubTypes, including
            Hotel, Occupancy, ConventionCenter, Accommotations, etc.
          example: Amusement
      description: The output model for report parameter definitions
      example:
        startDate: 2021-12-10T00:00:00+00:00
        endDate: 2022-01-10T00:00:00+00:00
        country: US
        state: All
        dateFilter: DD
        docType: S
        dateFormat: MM/dd/yyyy
        currencyCode: USD
        numberOfPartitions: 2
        partition: 0
        isLocked: true
        merchantSellerId: abcd
        documentStatus: Commited
        isModifiedDateSameAsDocumentDate: false
        taxGroup: Alcohol
        taxName: VAT
        taxCode: "123"
        taxSubType: Amusement
    ReportModel:
      type: object
      properties:
        id:
          type: integer
          description: The unique identifier of the report task
          format: int64
          example: 1
        accountId:
          type: integer
          description: The ID of the account the reported transactions are from
          format: int32
          example: 2087654354
        companyId:
          type: integer
          description: The ID of the company the reported transactions are from
          format: int32
          example: 2087654354
        reportType:
          type: string
          description: 'The type of the report: ExportDocumentLine, etc.'
          example: ExportDocumentLine
        parameters:
          $ref: '#/components/schemas/ReportParametersModel'
        status:
          type: string
          description: The current status of the report building task
          example: InQueue
        size:
          type: integer
          description: The size of the report file, if available
          format: int64
        format:
          type: string
          description: The format of the report file
          example: CSV
        file:
          type: string
          description: The name of the report file, if available
          example: 2087654354_2087654354_1_ExportDocumentLine.CSV
        createdDate:
          type: string
          description: The time when the report task was initiated
          format: date-time
          example: 2022-01-10T00:00:00Z
        createdUserId:
          type: integer
          description: The Id of the user who initiated this task
          format: int32
          example: 0
        createdUser:
          type: string
          description: The userName of the user who initiated the report task
        completedDate:
          type: string
          description: The time when the report was finished building, if completed
          format: date-time
      description: A model for displaying report task metadata
      example:
        id: 1
        accountId: 2087654354
        companyId: 2087654354
        reportType: ExportDocumentLine
        parameters:
          startDate: 2021-12-10T00:00:00+00:00
          endDate: 2022-01-10T00:00:00+00:00
          country: US
          state: All
          dateFilter: DD
          docType: S
          dateFormat: MM/dd/yyyy
          currencyCode: USD
          numberOfPartitions: 2
          partition: 0
          isLocked: true
          merchantSellerId: abcd
          documentStatus: Commited
          isModifiedDateSameAsDocumentDate: false
          taxGroup: Alcohol
          taxName: VAT
          taxCode: "123"
          taxSubType: Amusement
        status: InQueue
        format: CSV
        file: 2087654354_2087654354_1_ExportDocumentLine.CSV
        createdDate: 2022-01-10T00:00:00+00:00
        createdUserId: 0
    ReportModelFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/ReportModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    SettingModelFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/SettingModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    SubscriptionModelFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/SubscriptionModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    PointOfSaleDataRequestModel:
      required:
      - companyCode
      type: object
      properties:
        companyCode:
          type: string
          description: A unique code that references a company within your account.
          example: DEFAULT
        documentDate:
          type: string
          description: The date associated with the response content. Default is current
            date. This field can be used to backdate or postdate the response content.
          format: date
        responseType:
          type: string
          description: The format of your response. Formats include JSON, CSV, and
            XML.
          example: Json
          enum:
          - Json
          - Csv
          - Xml
          x-enum-metadata:
            name: PointOfSaleFileType
            values:
            - name: Json
              value: 0
            - name: Csv
              value: 1
            - name: Xml
              value: 2
        taxCodes:
          type: array
          description: A list of tax codes to include in this point-of-sale file.
            If no tax codes are specified, response will include all distinct tax
            codes associated with the Items within your company.
          example:
          - P0000000
          items:
            type: string
        itemCodes:
          type: array
          description: A list of item codes to include in this point-of-sale file.
            If no item codes are specified, responese will include all distinct item
            codes associated with the Items within your company.
          example:
          - TXINCL
          items:
            type: string
        locationCodes:
          type: array
          description: A list of location codes to include in this point-of-sale file.
            If no location codes are specified, response will include all locations
            within your company.
          example:
          - DEFAULT
          items:
            type: string
        includeJurisCodes:
          type: boolean
          description: Set this value to true to include Juris Code in the response.
          example: true
        partnerId:
          type: string
          description: A unique code assoicated with the Partner you may be working
            with. If you are not working with a Partner or your Partner has not provided
            you an ID, leave null.
          example: DMA
          enum:
          - DMA
          - AX7
          x-enum-metadata:
            name: PointOfSalePartnerId
            values:
            - name: DMA
              value: 1
            - name: AX7
              value: 2
      description: Point-of-Sale Data Request Model
      example:
        companyCode: DEFAULT
        documentDate: 2022-01-10
        responseType: Json
        taxCodes:
        - P0000000
        itemCodes:
        - TXINCL
        locationCodes:
        - DEFAULT
        includeJurisCodes: true
    SendSalesRequestModel:
      required:
      - companyId
      - date
      - taxCodes
      type: object
      properties:
        companyId:
          type: integer
          description: The companyId for which the send sales file is being generated.
          format: int32
          example: 12345
        taxCodes:
          type: array
          description: List of taxCodes to be included in send sales file.
          example:
          - P0000000
          - PC040100
          items:
            type: string
        date:
          type: string
          description: The date for which send sales file is being generated.
          format: date-time
          example: 2022-01-10T00:00:00Z
        format:
          type: string
          description: The send sales file format.
          example: STANDARD
          enum:
          - STANDARD
          - DMA
          - DMA_NEW
          x-enum-metadata:
            name: SendSalesOutputFileFormat
            values:
            - name: STANDARD
              value: 1
            - name: DMA
              value: 2
            - name: DMA_NEW
              value: 3
        type:
          type: string
          description: The send sales file type
          example: Csv
          enum:
          - Csv
          - Json
          x-enum-metadata:
            name: SendSalesFileType
            values:
            - name: Csv
              value: 0
            - name: Json
              value: 1
      description: SendSales Request Model.
      example:
        companyId: 12345
        taxCodes:
        - P0000000
        - PC040100
        date: 2022-01-10T00:00:00+00:00
        format: STANDARD
        type: Csv
    RateModel:
      type: object
      properties:
        rate:
          type: number
          description: The sales tax rate for general tangible personal property in
            this jurisdiction.
          format: double
          example: 0.0625
        name:
          type: string
          description: A readable name of the tax or taxing jurisdiction related to
            this tax rate.
          example: CALIFORNIA
        type:
          type: string
          description: The type of jurisdiction associated with this tax rate.
          example: Country
          enum:
          - Country
          - State
          - County
          - City
          - Special
          x-enum-metadata:
            name: JurisdictionType
            values:
            - name: Country
              value: 0
            - name: State
              value: 1
            - name: County
              value: 2
            - name: City
              value: 3
            - name: Special
              value: 4
      description: Indicates one element of a sales tax rate.
      example:
        rate: 0.0625
        name: CALIFORNIA
        type: State
    TaxRateModel:
      type: object
      properties:
        totalRate:
          type: number
          description: "The total sales tax rate for general tangible personal property\
            \ sold at a retail point of presence\r\nin this jurisdiction on this date."
          format: double
          example: 0.0625
        rates:
          type: array
          description: "The list of individual rate elements for general tangible\
            \ personal property sold at a retail\r\npoint of presence in this jurisdiction\
            \ on this date."
          example:
          - rate: 0.0625
            name: CALIFORNIA
            type: State
          items:
            $ref: '#/components/schemas/RateModel'
      description: "Contains information about the general tangible personal property\
        \ sales tax rates for this jurisdiction.\r\n            \r\nThis rate is calculated\
        \ by making assumptions about the tax calculation process.  It does not account\
        \ for:\r\n            \r\n* Sourcing rules, such as origin-and-destination\
        \ based transactions.\r\n* Product taxability rules, such as different tax\
        \ rates for different product types.\r\n* Nexus declarations, where some customers\
        \ are not obligated to collect tax in specific jurisdictions.\r\n* Tax thresholds\
        \ and rate differences by amounts.\r\n* And many more custom use cases.\r\n\
        \            \r\nTo upgrade to a fully-featured and accurate tax process that\
        \ handles these scenarios correctly, please\r\ncontact Avalara to upgrade\
        \ to AvaTax!"
      example:
        totalRate: 0.0625
        rates:
        - rate: 0.0625
          name: CALIFORNIA
          type: State
    TaxRuleModelFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/TaxRuleModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    TransactionModelFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/TransactionModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    AdjustTransactionModel:
      required:
      - adjustmentReason
      - newTransaction
      type: object
      properties:
        adjustmentReason:
          type: string
          description: A reason code indicating why this adjustment was made
          example: NotAdjusted
          enum:
          - NotAdjusted
          - SourcingIssue
          - ReconciledWithGeneralLedger
          - ExemptCertApplied
          - PriceAdjusted
          - ProductReturned
          - ProductExchanged
          - BadDebt
          - Other
          - Offline
          x-enum-metadata:
            name: AdjustmentReason
            values:
            - name: NotAdjusted
              value: 0
            - name: SourcingIssue
              value: 1
            - name: ReconciledWithGeneralLedger
              value: 2
            - name: ExemptCertApplied
              value: 3
            - name: PriceAdjusted
              value: 4
            - name: ProductReturned
              value: 5
            - name: ProductExchanged
              value: 6
            - name: BadDebt
              value: 7
            - name: Other
              value: 8
            - name: Offline
              value: 9
        adjustmentDescription:
          type: string
          description: "If the AdjustmentReason is \"Other\", specify the reason here.\r\
            \n            \r\nThis is required when the AdjustmentReason is 8 (Other)."
          example: Price drop before shipping
        newTransaction:
          $ref: '#/components/schemas/CreateTransactionModel'
      description: Replace an existing transaction recorded in AvaTax with a new one.
      example:
        adjustmentReason: PriceAdjusted
        adjustmentDescription: Price drop before shipping
        newTransaction:
          lines:
          - number: "1"
            quantity: 1
            amount: 100
            taxCode: PS081282
            itemCode: Y0001
            description: Yarn
          type: SalesInvoice
          companyCode: DEFAULT
          date: 2022-01-10
          customerCode: ABC
          purchaseOrderNo: 2022-01-10-001
          addresses:
            singleLocation:
              line1: 2000 Main Street
              city: Irvine
              region: CA
              country: US
              postalCode: "92614"
          commit: true
          currencyCode: USD
          description: Yarn
    VerifyTransactionModel:
      type: object
      properties:
        verifyTransactionDate:
          type: string
          description: "Set this value if you wish to verify a match between `verifyTransactionDate`\
            \ and\r\nthe `documentDate` value on the transaction recorded in AvaTax.\r\
            \n            \r\nIf you leave this field empty, we will skip verification\
            \ for this field."
          format: date-time
          example: 2022-01-10T00:00:00Z
        verifyTotalAmount:
          type: number
          description: "Set this value if you wish to verify a match between `verifyTotalAmount`\
            \ and\r\nthe `totalAmount` value on the transaction recorded in AvaTax.\r\
            \n            \r\nIf you leave this field empty, we will skip verification\
            \ for this field."
          format: double
          example: 100.0
        verifyTotalTax:
          type: number
          description: "Set this value if you wish to verify a match between `verifyTotalTax`\
            \ and\r\nthe `totalTax` value on the transaction recorded in AvaTax.\r\
            \n            \r\nIf you leave this field empty, we will skip verification\
            \ for this field."
          format: double
          example: 6.25
      description: "Verify this transaction by matching it to values in your accounting\
        \ system.\r\n            \r\nYou may specify one or more of the following\
        \ fields to verify: `date`, `totalAmount`, or `totalTax`.\r\nThis call will\
        \ report an error if there is any difference between the data stored in AvaTax\
        \ and\r\nthe data stored in your accounting system."
      example:
        verifyTransactionDate: 2022-01-10T00:00:00+00:00
        verifyTotalAmount: 100
        verifyTotalTax: 6.25
    ChangeTransactionCodeModel:
      required:
      - newCode
      type: object
      properties:
        newCode:
          maxLength: 50
          minLength: 0
          type: string
          description: To change the transaction code for this transaction, specify
            the new transaction code here.
          example: de56f787-e715-4312-81ee-3115acacf978
      description: "Settle this transaction with your ledger by verifying its amounts.\r\
        \nIf the transaction is not yet committed, you may specify the \"commit\"\
        \ value to commit it to the ledger and allow it to be reported.\r\nYou may\
        \ also optionally change the transaction's code by specifying the \"newTransactionCode\"\
        \ value."
      example:
        newCode: de56f787-e715-4312-81ee-3115acacf978
    CommitTransactionModel:
      required:
      - commit
      type: object
      properties:
        commit:
          type: boolean
          description: "Set this value to be `true` to commit this transaction.\r\n\
            \            \r\nCommitting a transaction allows it to be reported on\
            \ a tax filing.  Uncommitted transactions will not be reported."
          example: true
      description: Commit this transaction as permanent so that it can be reported
        on a tax filing.
      example:
        commit: true
    SettleTransactionModel:
      type: object
      properties:
        verify:
          $ref: '#/components/schemas/VerifyTransactionModel'
        changeCode:
          $ref: '#/components/schemas/ChangeTransactionCodeModel'
        commit:
          $ref: '#/components/schemas/CommitTransactionModel'
      description: "Settle this transaction with your ledger by executing one or many\
        \ actions against that transaction.\r\n            \r\nYou may use this endpoint\
        \ to verify the transaction, change the transaction's code, and commit the\
        \ transaction for reporting purposes.\r\nThis endpoint may be used to execute\
        \ any or all of these actions at once."
      example:
        verify:
          verifyTransactionDate: 2022-01-10T00:00:00+00:00
          verifyTotalAmount: 100
          verifyTotalTax: 6.25
        changeCode:
          newCode: 45f9491b-6662-4935-a14e-caa639e04098
        commit:
          commit: true
    LockTransactionModel:
      required:
      - isLocked
      type: object
      properties:
        isLocked:
          type: boolean
          description: "Set this value to be true to commit this transaction.\r\n\
            Committing a transaction allows it to be reported on a tax return.  Uncommitted\
            \ transactions will not be reported."
          example: true
      description: Commit this transaction as permanent
      example:
        isLocked: true
    BulkLockTransactionModel:
      required:
      - documentIds
      - isLocked
      type: object
      properties:
        documentIds:
          type: array
          description: List of documents to lock
          example:
          - 1
          - 2
          - 3
          - 4
          - 5
          items:
            type: integer
            format: int64
        isLocked:
          type: boolean
          description: The lock status to set for the documents designated in this
            API
          example: true
      description: Bulk lock documents model
      example:
        documentIds:
        - 1
        - 2
        - 3
        - 4
        - 5
        isLocked: true
    BulkLockTransactionResult:
      type: object
      properties:
        numberOfRecords:
          type: integer
          description: Number of records that have been modified
          format: int32
      description: Returns information about transactions that were locked
      example:
        numberOfRecords: 42
    ReconstructedApiRequestResponseModel:
      type: object
      properties:
        request:
          $ref: '#/components/schemas/CreateTransactionModel'
      description: "This model contains a reconstructed CreateTransaction request\
        \ object that could potentially be used\r\nto recreate this transaction.\r\
        \n            \r\nNote that the API changes over time, and this reconstructed\
        \ model is likely different from the exact request\r\nthat was originally\
        \ used to create this transaction."
      example:
        request:
          lines:
          - number: "1"
            quantity: 1
            amount: 100
            taxCode: PS081282
            itemCode: Y0001
            description: Yarn
          type: SalesInvoice
          companyCode: DEFAULT
          date: 2017-10-12
          customerCode: ABC
          purchaseOrderNo: 2017 - 10 - 12 - 001
          addresses:
            singleLocation:
              line1: 2000 Main Street
              city: Irvine
              region: CA
              country: US
              postalCode: "92614"
          commit: true
          currencyCode: USD
          description: Yarn
    AuditTransactionModel:
      type: object
      properties:
        companyId:
          type: integer
          description: Unique ID number of the company that created this transaction
          format: int32
          example: 0
        reconstructed:
          $ref: '#/components/schemas/ReconstructedApiRequestResponseModel'
        serverTimestamp:
          type: string
          description: Server timestamp, in UTC, of the date/time when the original
            transaction was created
          format: date-time
          example: 2022-01-10T15:49:36.8408422Z
        serverDuration:
          type: string
          description: Length of time the original API call took
          format: date-time
        apiCallStatus:
          type: string
          description: api call status
          example: OriginalApiCallAvailable
          enum:
          - OriginalApiCallAvailable
          - ReconstructedApiCallAvailable
          - Any
          x-enum-metadata:
            name: ApiCallStatus
            values:
            - name: OriginalApiCallAvailable
              value: 0
            - name: ReconstructedApiCallAvailable
              value: 1
            - name: Any
              value: -1
        original:
          $ref: '#/components/schemas/OriginalApiRequestResponseModel'
      description: Information about a previously created transaction
      example:
        companyId: 0
        reconstructed:
          request:
            lines:
            - number: "1"
              quantity: 1
              amount: 100
              taxCode: PS081282
              itemCode: Y0001
              description: Yarn
            type: SalesInvoice
            companyCode: DEFAULT
            date: 2022-01-10
            customerCode: ABC
            purchaseOrderNo: 2022-01-10-001
            addresses:
              singleLocation:
                line1: 2000 Main Street
                city: Irvine
                region: CA
                country: US
                postalCode: "92614"
            commit: true
            currencyCode: USD
            description: Yarn
        serverTimestamp: 2022-01-10T15:49:36.8408422Z
        apiCallStatus: ReconstructedApiCallAvailable
    AddTransactionLineModel:
      required:
      - companyCode
      - lines
      - transactionCode
      type: object
      properties:
        companyCode:
          type: string
          description: company code
          example: DEFAULT
        transactionCode:
          type: string
          description: document code for the transaction to add lines
          example: "1234"
        documentType:
          type: string
          description: document type
          example: SalesOrder
          enum:
          - SalesOrder
          - SalesInvoice
          - PurchaseOrder
          - PurchaseInvoice
          - ReturnOrder
          - ReturnInvoice
          - InventoryTransferOrder
          - InventoryTransferInvoice
          - ReverseChargeOrder
          - ReverseChargeInvoice
          - CustomsInvoice
          - CustomsOrder
          - Any
          x-enum-metadata:
            name: DocumentType
            values:
            - name: SalesOrder
              value: 0
            - name: SalesInvoice
              value: 1
            - name: PurchaseOrder
              value: 2
            - name: PurchaseInvoice
              value: 3
            - name: ReturnOrder
              value: 4
            - name: ReturnInvoice
              value: 5
            - name: InventoryTransferOrder
              value: 6
            - name: InventoryTransferInvoice
              value: 7
            - name: ReverseChargeOrder
              value: 8
            - name: ReverseChargeInvoice
              value: 9
            - name: CustomsInvoice
              value: 10
            - name: CustomsOrder
              value: 11
            - name: Any
              value: -1
        lines:
          type: array
          description: List of lines to be added
          example:
          - number: "1"
            quantity: 1
            amount: 100
            taxCode: PS081282
            itemCode: Y0001
            description: Yarn
          items:
            $ref: '#/components/schemas/LineItemModel'
        renumber:
          type: boolean
          description: 'Option to renumber lines after add. After renumber, the line
            number becomes: "1", "2", "3", ...'
          example: false
      description: Model to add specific lines to exising transaction
      example:
        companyCode: DEFAULT
        transactionCode: "1234"
        documentType: SalesInvoice
        lines:
        - number: "1"
          quantity: 1
          amount: 100
          taxCode: PS081282
          itemCode: Y0001
          description: Yarn
        renumber: false
    RemoveTransactionLineModel:
      required:
      - companyCode
      - lines
      - transactionCode
      type: object
      properties:
        companyCode:
          type: string
          description: company code
          example: DEFAULT
        transactionCode:
          type: string
          description: document code for the transaction to add lines
          example: "1234"
        documentType:
          type: string
          description: document type
          example: SalesOrder
          enum:
          - SalesOrder
          - SalesInvoice
          - PurchaseOrder
          - PurchaseInvoice
          - ReturnOrder
          - ReturnInvoice
          - InventoryTransferOrder
          - InventoryTransferInvoice
          - ReverseChargeOrder
          - ReverseChargeInvoice
          - CustomsInvoice
          - CustomsOrder
          - Any
          x-enum-metadata:
            name: DocumentType
            values:
            - name: SalesOrder
              value: 0
            - name: SalesInvoice
              value: 1
            - name: PurchaseOrder
              value: 2
            - name: PurchaseInvoice
              value: 3
            - name: ReturnOrder
              value: 4
            - name: ReturnInvoice
              value: 5
            - name: InventoryTransferOrder
              value: 6
            - name: InventoryTransferInvoice
              value: 7
            - name: ReverseChargeOrder
              value: 8
            - name: ReverseChargeInvoice
              value: 9
            - name: CustomsInvoice
              value: 10
            - name: CustomsOrder
              value: 11
            - name: Any
              value: -1
        lines:
          type: array
          description: List of line numbers to be removed
          example:
          - "1"
          items:
            type: string
        renumber:
          type: boolean
          description: 'ption to renumber lines after removal. After renumber, the
            line number becomes: "1", "2", "3", ...'
          example: false
      description: Model to specify lines to be removed
      example:
        companyCode: DEFAULT
        transactionCode: "1234"
        documentType: SalesInvoice
        lines:
        - "1"
        renumber: false
    DeterminationFactorModel:
      type: object
      properties:
        code:
          type: string
          description: Determination reason code.
          example: NoNexus
        description:
          type: string
          description: Determination reason description.
          example: No tax was calculated because no nexus was declared in XYZ.
        ids:
          type: array
          description: The ids of any applied determination factor.
          items:
            type: string
        names:
          type: array
          description: The name of any applied determination factor.
          items:
            type: string
        createdBy:
          type: string
          description: The name of the user who created the determination factor.
      description: This object represents a single determination factor for a line
        that is being inspected through the InspectLine API.
      example:
        code: NoNexus
        description: No tax was calculated because no nexus was declared in XYZ.
    InspectResponseModel:
      type: object
      properties:
        determinationFactors:
          type: array
          description: A list of determination factors for a line that is being inspected
            through the InspectLine API.
          example:
          - code: NoNexus
            description: No tax was calculated because no nexus was declared in XYZ.
          items:
            $ref: '#/components/schemas/DeterminationFactorModel'
      description: Response model used as output for InspectLine API.
      example:
        determinationFactors:
        - code: NoNexus
          description: No tax was calculated because no nexus was declared in XYZ.
    UPCModelFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/UPCModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    CompanyUserDefinedFieldModel:
      required:
      - friendlyName
      - name
      type: object
      properties:
        id:
          type: integer
          description: The id of the datasource.
          format: int64
          readOnly: true
          example: 1
        companyId:
          type: integer
          description: The id of the company to which the datasource belongs to.
          format: int32
          example: 12345
        name:
          maxLength: 50
          minLength: 0
          type: string
          description: The extractor/connector id.
          example: UDF1
        friendlyName:
          maxLength: 4096
          minLength: 0
          type: string
          description: The unique ID number of this connection.
          example: General Ledger Account Number
        dataType:
          type: string
          description: The unique ID number of this connection.
          example: String
          enum:
          - String
          - Number
          - Date
          - Boolean
          x-enum-metadata:
            name: UserDefinedFieldDataType
            values:
            - name: String
              value: 0
            - name: Number
              value: 1
            - name: Date
              value: 2
            - name: Boolean
              value: 3
        userDefinedFieldType:
          type: string
          description: 'The category of user defined type For Example: Document level
            or Line level UDF.'
          example: Document
          enum:
          - Document
          - Line
          x-enum-metadata:
            name: UserDefinedFieldType
            values:
            - name: Document
              value: 1
            - name: Line
              value: 2
        createdUserId:
          type: integer
          description: The User ID of the user who created this record.
          format: int32
          readOnly: true
          example: 123
        createdDate:
          type: string
          description: The date when this record was created.
          format: date-time
          readOnly: true
          example: 2022-01-10T00:00:00Z
        modifiedUserId:
          type: integer
          description: The user ID of the user who last modified this record.
          format: int32
          readOnly: true
          example: 12
        modifiedDate:
          type: string
          description: The date/time when this record was last modified.
          format: date-time
          readOnly: true
          example: 2022-01-10T00:00:00Z
      description: ""
      example:
        id: 1
        companyId: 12345
        name: UDF1
        friendlyName: General Ledger Account Number
        dataType: String
        userDefinedFieldType: Document
        createdUserId: 123
        createdDate: 2022-01-10T00:00:00+00:00
        modifiedUserId: 12
        modifiedDate: 2022-01-10T00:00:00+00:00
    CompanyUserDefinedFieldModelFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/CompanyUserDefinedFieldModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    UserModelFetchResult:
      type: object
      properties:
        '@recordsetCount':
          type: integer
          format: int32
        value:
          type: array
          items:
            $ref: '#/components/schemas/UserModel'
        '@nextLink':
          type: string
        pageKey:
          type: string
    UserEntitlementModel:
      type: object
      properties:
        permissions:
          type: array
          description: List of API names and categories that this user is permitted
            to access
          example:
          - CompanyFetch
          - CompanySave
          - NexusFetch
          - NexusSave
          items:
            type: string
        accessLevel:
          type: string
          description: What access privileges does the current user have to see companies?
          example: None
          enum:
          - None
          - SingleCompany
          - SingleAccount
          - AllCompanies
          - FirmManagedAccounts
          x-enum-metadata:
            name: CompanyAccessLevel
            values:
            - name: None
              value: 0
            - name: SingleCompany
              value: 1
            - name: SingleAccount
              value: 2
            - name: AllCompanies
              value: 3
            - name: FirmManagedAccounts
              value: 4
        companies:
          type: array
          description: The identities of all companies this user is permitted to access
          example:
          - 123
          - 456
          - 789
          items:
            type: integer
            format: int32
      description: User Entitlement Model
      example:
        permissions:
        - CompanyFetch
        - CompanySave
        - NexusFetch
        - NexusSave
        accessLevel: SingleAccount
        companies:
        - 123
        - 456
        - 789
    PingResultModel:
      type: object
      properties:
        version:
          type: string
          description: Version number
          example: 1.0.0.0
        authenticated:
          type: boolean
          description: Returns true if you provided authentication for this API call;
            false if you did not.
          example: true
        authenticationType:
          type: string
          description: Returns the type of authentication you provided, if authenticated
          example: None
          enum:
          - None
          - UsernamePassword
          - AccountIdLicenseKey
          - OpenIdBearerToken
          x-enum-metadata:
            name: AuthenticationTypeId
            values:
            - name: None
              value: 0
            - name: UsernamePassword
              value: 1
            - name: AccountIdLicenseKey
              value: 2
            - name: OpenIdBearerToken
              value: 3
        authenticatedUserName:
          type: string
          description: The username of the currently authenticated user, if any.
          example: TestUser
        authenticatedUserId:
          type: integer
          description: The ID number of the currently authenticated user, if any.
          format: int32
          example: 98765
        authenticatedAccountId:
          type: integer
          description: The ID number of the currently authenticated user's account,
            if any.
          format: int32
          example: 123456789
        authenticatedCompanyId:
          type: integer
          description: The ID number of the currently authenticated user's company,
            if any.
          format: int32
          example: 123456789
        crmid:
          type: string
          description: The connected Salesforce account.
          example: "1111"
      description: Ping Result Model
      example:
        version: 1.0.0.0
        authenticated: true
        authenticationType: UsernamePassword
        authenticatedUserName: TestUser
        authenticatedUserId: 98765
        authenticatedAccountId: 123456789
        authenticatedCompanyId: 123456789
        crmid: "1111"
  securitySchemes:
    OauthSecurity:
      type: oauth2
      description: A bearer token provided by the Avalara Identity server.
      flows:
        implicit:
          authorizationUrl: https://ai-sbx.avlr.sh/connect/authorize?response_type=id_token
            token&scope=avatax_api avatax openid profile&nonce=fa5df26f-6c2c-4ae1-b4b5-ed28c86e8667&
          scopes: {}
    UserSecurity:
      type: http
      description: Basic authentication supports either Username/Password or AccountId/LicenseKey,
        using Base64 encoding.
      scheme: basic
x-group-by-tags: true
x-auth-formula: '`Basic ${btoa(`<username>:<password>`)}`'
x-sample-auth-header: Basic aHR0cHdhdGNoOmY=
x-ApiType: REST
x-avalara-version: 21.12.0
x-api-proxy:
  route: https://e3zwcxla5k.execute-api.us-west-2.amazonaws.com/prod/
  key:
    name: api-key
    location: api-proxy-key/key
