openapi: 3.0.0
info:
  title: GoToMeeting REST API
  description: |
    This is a generated connector for [GoToMeeting API v1.0](https://developer.goto.com/GoToMeetingV1) OpenAPI specification.  
    The GoToMeeting API provides the capability to organize meetings.
  x-ballerina-init-description: |
    The connector initialization requires setting the API credentials. 
    Create a [LogMeIn account](https://accounts.logme.in/registration.aspx) and obtain tokens by following [this guide](https://developer.goto.com/guides/HowTos/02_HOW_createClient/).
  x-ballerina-display:
    label: GoTo Meeting
    iconPath: "icon.png"
  version: 1.0.0
tags:
  - name: Organizers
    description: Operations on organizers. Only available to users with the admin role.
  - name: Meetings
    description: Operations on meetings.
  - name: Groups
    description: Operations on groups. Only available to users with the admin role.

security:
  - OAuth2: []
  - Bearer: []

paths:
  /organizers:
    post:
      deprecated: true
      tags:
        - Organizers
      operationId: createOrganizer
      summary: 'Create organizer'
      description: >
        <br>
        **DEPRECATED:** To 'Create organizer', please use ['Add users'](/admin/#operation/Add%20Users) from the GoTo Admin API.
        <br>
        <br>
        Creates a new organizer and sends an email to the email address defined
        in the request. This API call is only available to users with the admin
        role. You may also pass 'G2W', 'G2T', 'OPENVOICE', 'G2ASEEIT',
        'G2ARS' or 'G2ASD' as productType variables, creating organizers for
        those products. A G2W or G2T organizer will also have access to G2M.
        <p>
          **Please note that your client requires the Admin Center scope
          (identity:) to execute this API request.**<br>
          How to create a client is described in a
          [HowTo](/guides/HowTos/02_HOW_createClient),
          but you can also add the missing scope to an existing OAuth client.
        </p>
      requestBody:
        $ref: '#/components/requestBodies/OrganizerReq'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizerShort'
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '409':
          description: Conflict
    get:
      deprecated: true
      tags:
        - Organizers
      operationId: getOrganizersAllOrByEmail
      summary: 'Get organizer by email / Get all organizers'
      description: >
        <br>
        **DEPRECATED:** To 'Get organizer by email / Get all organizers', please use ['Get users'](/admin/#operation/Get%20Users) from the GoTo Admin API.
        <br>
        <br>
        Gets the individual organizer specified by the
        organizer's email address. If an email address is not specified, all
        organizers are returned. This API call is only available to users with
        the admin role.
        <p>
          **Please note that your client requires the Admin Center scope
          (identity:) to execute this API request.**<br>
          How to create a client is described in a
          [HowTo](/guides/HowTos/02_HOW_createClient),
          but you can also add the missing scope to an existing OAuth client.
        </p>
      parameters:
        - name: email
          in: query
          description: The email address of the organizer
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organizer'
        '400':
          description: Bad Request
        '404':
          description: Not Found
    delete:
      deprecated: true
      tags:
        - Organizers
      operationId: deleteOrganizerByEmail
      summary: 'Delete organizer by email'
      description: >
        <br>
        **DEPRECATED:** To delete organizer, please use ['Delete user'](/admin/#operation/Delete%20User) from the GoTo Admin API.
        <br>
        <br>
        Deletes the individual organizer specified by the email address.
        This API call is only available to users with the admin role.
        <p>
          **Please note that your client requires the Admin Center scope
          (identity:) to execute this API request.**<br>
          How to create a client is described in a
          [HowTo](/guides/HowTos/02_HOW_createClient),
          but you can also add the missing scope to an existing OAuth client.
        </p>
      parameters:
        - name: email
          in: query
          description: The email address of the organizer
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
  '/organizers/{organizerKey}':
    get:
      deprecated: true
      tags:
        - Organizers
      operationId: getOrganizer
      summary: 'Get organizer'
      description: >
        <br>
        **DEPRECATED:** To 'Get organizer', please use ['Get users'](/admin/#operation/Get%20Users) from the GoTo Admin API.
        <br>
        <br>
        Returns the individual organizer specified by the key. This API call is only
        available to users with the admin role. Non-admin users can only make
        this call for their own organizerKey.
        <p>
          **Please note that your client requires the Admin Center scope
          (identity:) to execute this API request.**<br>
          How to create a client is described in a
          [HowTo](/guides/HowTos/02_HOW_createClient),
          but you can also add the missing scope to an existing OAuth client.
        </p>
      parameters:
        - $ref: '#/components/parameters/organizerKey'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organizer'
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      deprecated: true
      tags:
        - Organizers
      operationId: deleteOrganizer
      summary: 'Delete organizer'
      description: >
        <br>
        **DEPRECATED:** To 'Delete organizer', please use ['Delete user'](/admin/#operation/Delete%20User) from the GoTo Admin API.
        <br>
        <br>
        Deletes the individual organizer specified by the organizer key. This
        API call is only available to users with the admin role.
        <p>
          **Please note that your client requires the Admin Center scope
          (identity:) to execute this API request.**<br>
          How to create a client is described in a
          [HowTo](/guides/HowTos/02_HOW_createClient),
          but you can also add the missing scope to an existing OAuth client.
        </p>
      parameters:
        - $ref: '#/components/parameters/organizerKey'
      responses:
        '204':
          description: No Content
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      deprecated: true
      tags:
        - Organizers
      operationId: updateOrganizer
      summary: 'Update organizer'
      description: >
        <br>
        **DEPRECATED:** To 'Update organizer', please use ['Update user'](/admin/#operation/Update%20User) from the GoTo Admin API.
        <br>
        <br>
        Updates the products of the specified organizer. To add a product
        ('G2W', 'G2T', 'OPENVOICE', 'G2ASEEIT', 'G2ARS', 'G2ASD') for the
        organizer, the call must be sent once for each product you want to add.
        To remove all products for the organizer, set status to 'suspended'. The
        call is limited to users with the admin role.
        <p>
          **Please note that your client requires the Admin Center scope
          (identity:) to execute this API request.**<br>
          How to create a client is described in a
          [HowTo](/guides/HowTos/02_HOW_createClient),
          but you can also add the missing scope to an existing OAuth client.
        </p>
      parameters:
        - $ref: '#/components/parameters/organizerKey'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizerStatus'
        description: The organizer's status
        required: true
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/organizers/{organizerKey}/attendees':
    get:
      tags:
        - Organizers
      operationId: getAttendeesByOrganizer
      summary: 'Get attendees by organizer'
      description: Lists all attendees for all meetings within a specified date range for a
        specified organizer. This API call is only available to users with the
        admin role.
        <p>
        **If you want to execute this for other organizers your client requires the Admin Center scope
        (identity:).**<br>
        How to create a client is described in a
        [HowTo](/guides/HowTos/02_HOW_createClient),
        but you can also add the missing scope to an existing OAuth client.
        </p>
      parameters:
        - $ref: '#/components/parameters/organizerKey'
        - name: startDate
          in: query
          description: A required start of date range in ISO8601 UTC format, e.g.
            2015-07-01T22:00:00Z
          required: true
          schema:
            type: string
            format: date-time
        - name: endDate
          in: query
          description: A required end of date range in ISO8601 UTC format, e.g.
            2015-07-01T23:00:00Z
          required: true
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AttendeeByOrganizer'
        '400':
          description: Bad Request
        '404':
          description: Not Found
  '/organizers/{organizerKey}/historicalMeetings':
    get:
      tags:
        - Organizers
      operationId: getHistoricalMeetingsByOrganizer
      summary: 'Get historical meetings by organizer'
      description: >
        Get historical meetings for the specified organizer that started within
        the specified date/time range. Remark: Meetings which are still ongoing
        at the time of the request are NOT contained in the result array.
        <p>
          **If you want to execute this for other organizers your client requires the Admin Center scope
          (identity:).**<br>
          How to create a client is described in a
          [HowTo](/guides/HowTos/02_HOW_createClient),
          but you can also add the missing scope to an existing OAuth client.
        </p>
      parameters:
        - $ref: '#/components/parameters/organizerKey'
        - name: startDate
          in: query
          description: Required start of date range, in ISO8601 UTC format, e.g.
            2015-07-01T22:00:00Z
          required: true
          schema:
            type: string
            format: date-time
        - name: endDate
          in: query
          description: Required end of date range, in ISO8601 UTC format, e.g.
            2015-07-01T23:00:00Z
          required: true
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HistoricalMeeting'
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/organizers/{organizerKey}/upcomingMeetings':
    get:
      tags:
        - Organizers
      operationId: getUpcomingMeetingsByOrganizer
      summary: 'Get upcoming meetings by organizer'
      description: >
        Get upcoming meetings for a specified organizer. This API call is only
        available to users with the admin role.
        <p>
          **If you want to execute this for other organizers your client requires the Admin Center scope
          (identity:).**<br>
          How to create a client is described in a
          [HowTo](/guides/HowTos/02_HOW_createClient),
          but you can also add the missing scope to an existing OAuth client.
        </p>
      parameters:
        - $ref: '#/components/parameters/organizerKey'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UpcomingMeeting'
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/organizers/{organizerKey}/meetings':
    get:
      deprecated: true
      tags:
        - Organizers
      operationId: getMeetingsByOrganizer
      summary: 'Get meetings by organizer'
      description: >
        DEPRECATED: Please use the new API calls 'Get historical meetings by
        organizer' and 'Get upcoming meetings by organizer'. Gets future
        (scheduled) or past (history) meetings for a specified organizer.
        Include 'history=true' and the past start and end dates in the URL to
        retrieve past meetings. Enter 'scheduled=true' (without dates) to get
        scheduled meetings.
        <p>
          **If you want to execute this for other organizers your client requires the Admin Center scope
          (identity:).**<br>
          How to create a client is described in a
          [HowTo](/guides/HowTos/02_HOW_createClient),
          but you can also add the missing scope to an existing OAuth client.
        </p>
      parameters:
        - $ref: '#/components/parameters/organizerKey'
        - name: scheduled
          in: query
          description: When 'true', returns all future meetings. Date range is ignored. Mutually exclusive to 'history'.
          schema:
            type: boolean
        - name: history
          in: query
          description: When 'true', returns all past meetings within date range. Mutually exclusive to 'scheduled'.
          schema:
            type: boolean
        - name: startDate
          in: query
          description: If history is 'true', required start of date range, in ISO8601 UTC
            format, e.g. 2015-07-01T22:00:00Z
          schema:
            type: string
            format: date-time
        - name: endDate
          in: query
          description: If history is 'true', required end of date range, in ISO8601 UTC
            format, e.g. 2015-07-01T23:00:00Z
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MeetingByOrganizer'
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/organizers/{organizerKey}/sessions/{sessionId}':
    delete:
      tags:
        - Organizers
      operationId: deleteSessionById
      summary: 'Delete meeting session by session id'
      description: >
        Use this call to clean up your data by deleting any specific session.
        The sessionID(s) are included by meeting in the Get Historical Meetings
        call. Each meeting held is at least one session. One meeting may be
        multiple sessions if the organizer stopped and restarted the meeting for
        any reason, such as their device of choice did not work. Recurring
        meetings are at least one session per event. The call removes the
        specified session(s) from LogMeIn's servers including the sessionID, the
        attendee list, and any recordings. The meeting will still appear in your
        organizer's Meeting History, but will have no associated sessions. NOTE:
        The delete occurs at the session level because this provides the
        greatest granular control. To delete for a specific meetingID, you would
        need to accumualate all sessions for the meeting and apply the delete.
        <p>
          **If you want to execute this for other organizers your client requires the Admin Center scope
          (identity:).**<br>
          How to create a client is described in a
          [HowTo](/guides/HowTos/02_HOW_createClient),
          but you can also add the missing scope to an existing OAuth client.
        </p>
      parameters:
        - name: organizerKey
          in: path
          description: The organizer ID
          required: true
          schema:
            type: integer
            format: int64
        - name: sessionId
          in: path
          description: The session ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
  '/organizers/{organizerKey}/sessions/{sessionId}/attendees':
    delete:
      tags:
        - Organizers
      operationId: deleteSessionAttendeesById
      summary: 'Remove attendee list of a meeting session'
      description: >
        Use this call to clean up your data by deleting the attendee list for a
        specific session. The sessionID(s) and the number of attendees at each
        session is included by meeting in the Get Historical Meetings call. Each
        meeting held is at least one session. One meeting may be multiple
        sessions if the organizer stopped and restarted the meeting for any
        reason, such as their device of choice did not work. Recurring meetings
        are at least one session per event. The call removes the attendee list
        from the session from LogMeIn's servers. You can remove the entire
        session data using the Delete Session call, or delete recordings of the
        meeting using the Delete Session Recordings call. The meeting will still
        appear in your organizer's Meeting History, but will have no associated
        attendees. NOTE: The delete occurs at the session level because this
        provides the greatest granular control. To delete for a specific
        meetingID, you would need to accumulate all sessions for the meeting
        and apply the delete.
        <p>
          **If you want to execute this for other organizers your client requires the Admin Center scope
          (identity:).**<br>
          How to create a client is described in a
          [HowTo](/guides/HowTos/02_HOW_createClient),
          but you can also add the missing scope to an existing OAuth client.
        </p>
      parameters:
        - name: organizerKey
          in: path
          description: The organizer ID
          required: true
          schema:
            type: integer
            format: int64
        - name: sessionId
          in: path
          description: The session ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
  '/organizers/{organizerKey}/sessions/{sessionId}/recordings':
    delete:
      tags:
        - Organizers
      operationId: deleteSessionRecordingsById
      summary: 'Delete recordings of a meeting session'
      description: >
        Use this call to clean up your data by deleting recordings associated
        with a specific session. The sessionID(s) are included by meeting in the
        Get Historical Meetings call. The call removes any recordings associated
        with the specified session from LogMeIn's servers. (Any session may have
        multiple recordings if the feature was started and stopped multiple
        times during the meeting.) You can remove the entire session data using
        the Delete Session call, or delete attendee lists for the session using
        the Delete Session Attendees call. The meeting will still appear in your
        organizer's Meeting History, but will have no associated recordings for
        the specified session. NOTE: The delete occurs at the session level
        because this provides the greatest granular control. To delete for a
        specific meetingID, you would need to accumualate all sessions for the
        meeting and apply the delete.
        <p>
          **If you want to execute this for other organizers your client requires the Admin Center scope
          (identity:).**<br>
          How to create a client is described in a
          [HowTo](/guides/HowTos/02_HOW_createClient),
          but you can also add the missing scope to an existing OAuth client.
        </p>
      parameters:
        - name: organizerKey
          in: path
          description: The organizer ID
          required: true
          schema:
            type: integer
            format: int64
        - name: sessionId
          in: path
          description: The session ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
  /groups:
    get:
      deprecated: true
      tags:
        - Groups
      operationId: getGroups
      summary: 'Get groups'
      description: >
        <br>
        **DEPRECATED:** To 'Get groups', please use ['Get groups'](/admin/#operation/Get%20Groups) from the GoTo Admin API.
        <br>
        <br>
        List all groups for an account. This API call is only available to users with the
        admin role.
        <p>
          **Please note that your client requires the Admin Center scope
          (identity:) to execute this API request.**<br>
          How to create a client is described in a
          [HowTo](/guides/HowTos/02_HOW_createClient),
          but you can also add the missing scope to an existing OAuth client.
        </p>
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group'
        '403':
          description: Forbidden
  '/groups/{groupKey}/attendees':
    get:
      tags:
        - Groups
      operationId: getAttendeesByGroup
      summary: 'Get attendees by group'
      description: Returns all attendees for all meetings within specified date range held
        by organizers within the specified group. This API call is only
        available to users with the admin role. This API call can be used only
        for groups with maximum 50 organizers.
        <p>
        **Please note that your client requires the Admin Center scope
        (identity:) to execute this API request.**<br>
        How to create a client is described in a
        [HowTo](/guides/HowTos/02_HOW_createClient),
        but you can also add the missing scope to an existing OAuth client.
        </p>
      parameters:
        - $ref: '#/components/parameters/groupKey'
        - name: startDate
          in: query
          description: Start of date range, in ISO8601 UTC format, e.g. 2015-07-01T22:00:00Z
          schema:
            type: string
            format: date-time
        - name: endDate
          in: query
          description: End of date range, in ISO8601 UTC format, e.g. 2015-07-01T23:00:00Z
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AttendeeByGroup'
        '400':
          description: Bad Request
  '/groups/{groupKey}/historicalMeetings':
    get:
      tags:
        - Groups
      operationId: getHistoricalMeetingsByGroup
      summary: 'Get historical meetings by group'
      description: >
        Get historical meetings for the specified group that started within the
        specified date/time range. This API call is only available to users with
        the admin role. This API call is restricted to groups with a maximum of
        50 organizers. Remark: Meetings which are still ongoing at the time of
        the request are NOT contained in the result array.
        <p>
          **Please note that your client requires the Admin Center scope
          (identity:) to execute this API request.**<br>
          How to create a client is described in a
          [HowTo](/guides/HowTos/02_HOW_createClient),
          but you can also add the missing scope to an existing OAuth client.
        </p>
      parameters:
        - $ref: '#/components/parameters/groupKey'
        - name: startDate
          in: query
          description: Required start of date range, in ISO8601 UTC format, e.g.
            2015-07-01T22:00:00Z
          required: true
          schema:
            type: string
            format: date-time
        - name: endDate
          in: query
          description: Required end of date range, in ISO8601 UTC format, e.g.
            2015-07-01T23:00:00Z
          required: true
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HistoricalMeetingByGroup'
        '400':
          description: Bad Request
        '403':
          description: Forbidden
  '/groups/{groupKey}/upcomingMeetings':
    get:
      tags:
        - Groups
      operationId: getUpcomingMeetingsByGroup
      summary: 'Get upcoming meetings by group'
      description: Get upcoming meetings for a specified group. This API call is only
        available to users with the admin role. This API call can be used only
        for groups with maximum 50 organizers.
        <p>
        **Please note that your client requires the Admin Center scope
        (identity:) to execute this API request.**<br>
        How to create a client is described in a
        [HowTo](/guides/HowTos/02_HOW_createClient),
        but you can also add the missing scope to an existing OAuth client.
        </p>
      parameters:
        - $ref: '#/components/parameters/groupKey'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UpcomingMeetingByGroup'
        '400':
          description: Bad Request
        '403':
          description: Forbidden
  '/groups/{groupKey}/meetings':
    get:
      deprecated: true
      tags:
        - Groups
      operationId: getMeetingsByGroup
      summary: 'Get meetings by group'
      description: >
        DEPRECATED: Please use the new API calls 'Get historical meetings by
        group' and 'Get upcoming meetings by group'. Get meetings for a
        specified group. Additional filters can be used to view only meetings
        within a specified date range. This API call is only available to users
        with the admin role.
        <p>
          **Please note that your client requires the Admin Center scope
          (identity:) to execute this API request.**<br>
          How to create a client is described in a
          [HowTo](/guides/HowTos/02_HOW_createClient),
          but you can also add the missing scope to an existing OAuth client.
        </p>
      parameters:
        - $ref: '#/components/parameters/groupKey'
        - name: scheduled
          in: query
          description: When 'true', returns all future meetings. Date range is ignored. Mutually exclusive to 'history'.
          schema:
            type: boolean
        - name: history
          in: query
          description: When 'true', returns all past meetings within date range. Mutually exclusive to 'scheduled'.
          schema:
            type: boolean
        - name: startDate
          in: query
          description: If history=true, required start of date range, in ISO8601 UTC
            format, e.g. 2015-07-01T22:00:00Z
          schema:
            type: string
            format: date-time
        - name: endDate
          in: query
          description: If history=true, required end of date range, in ISO8601 UTC format,
            e.g. 2015-07-01T23:00:00Z
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HistoryMeetingByGroup'
        '400':
          description: Bad Request
  '/groups/{groupKey}/organizers':
    post:
      deprecated: true
      tags:
        - Groups
      operationId: createOrganizerInGroup
      summary: 'Create organizer in group'
      description: >
        <br>
        **DEPRECATED:** To 'Create organizer in group', please use ['Add users'](/admin/#operation/Add%20Users) from the GoTo Admin API.
        <br>
        <br>
        Creates a new organizer and sends an email to the email address
        defined in the request. This API call is only available to users with the
        admin role. You may also pass 'G2W', 'G2T', 'OPENVOICE', 'G2ASEEIT',
        'G2ARS' or 'G2ASD' as productType variables, creating organizers for
        those products. A G2W or G2T organizer will also have access to G2M.
        <p>
          **Please note that your client requires the Admin Center scope
          (identity:) to execute this API request.**<br>
          How to create a client is described in a
          [HowTo](/guides/HowTos/02_HOW_createClient),
          but you can also add the missing scope to an existing OAuth client.
        </p>
      parameters:
        - $ref: '#/components/parameters/groupKey'
      requestBody:
        $ref: '#/components/requestBodies/OrganizerReq'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizerShort'
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '409':
          description: Conflict
    get:
      deprecated: true
      tags:
        - Groups
      operationId: getOrganizersByGroup
      summary: 'Get organizers by group'
      description: >
        <br>
        **DEPRECATED:** To 'Get organizers by group', please use ['Get users'](/admin/#operation/Get%20Users) from the GoTo Admin API.
        <br>
        <br>
        Returns all the organizers within a specific group. This API call is
        only available to users with the admin role.
        <p>
          **Please note that your client requires the Admin Center scope
          (identity:) to execute this API request.**<br>
          How to create a client is described in a
          [HowTo](/guides/HowTos/02_HOW_createClient),
          but you can also add the missing scope to an existing OAuth client.
        </p>
      parameters:
        - $ref: '#/components/parameters/groupKey'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizerByGroup'
        '400':
          description: Bad Request
        '403':
          description: Forbidden
  /historicalMeetings:
    get:
      tags:
        - Meetings
      operationId: getHistoricalMeetings
      summary: 'Get historical meetings'
      description: >
        Get historical meetings for the currently authenticated organizer that
        started within the specified date/time range. Remark: Meetings which are
        still ongoing at the time of the request are NOT contained in the result
        array.
      parameters:
        - name: startDate
          in: query
          description: Required start of date range, in ISO8601 UTC format, e.g.
            2015-07-01T22:00:00Z
          required: true
          schema:
            type: string
            format: date-time
        - name: endDate
          in: query
          description: Required end of date range, in ISO8601 UTC format, e.g.
            2015-07-01T23:00:00Z
          required: true
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HistoricalMeeting'
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /upcomingMeetings:
    get:
      tags:
        - Meetings
      operationId: getUpcomingMeetings
      summary: 'Get upcoming meetings'
      description: Gets upcoming meetings for the current authenticated organizer.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UpcomingMeeting'
        '403':
          description: Forbidden
  /meetings:
    get:
      deprecated: true
      tags:
        - Meetings
      operationId: getMeetings
      summary: 'Get meetings'
      description: >
        DEPRECATED: Please use the new API calls 'Get historical meetings' and
        'Get upcoming meetings'.  Gets historical meetings for the current
        authenticated organizer. Requires date range for filtering results to
        only meetings within specified dates. History searches will contain the
        parameter 'meetingInstanceKey' which is used in conjunction with the
        call 'Get Attendees by Meeting' to get attendee information for a past
        meeting. Enter 'scheduled=true' (without dates) to get scheduled meetings.
      parameters:
        - name: scheduled
          in: query
          description: When 'true', returns all future meetings. Date range is ignored. Mutually exclusive to 'history'.
          schema:
            type: boolean
        - name: history
          in: query
          description: When 'true', returns all past meetings within date range. Mutually exclusive to 'scheduled'.
          schema:
            type: boolean
        - name: startDate
          in: query
          description: If history=true, required start of date range, in ISO8601 UTC
            format, e.g. 2015-07-01T22:00:00Z
          schema:
            type: string
            format: date-time
        - name: endDate
          in: query
          description: If history=true, required end of date range, in ISO8601 UTC format,
            e.g. 2015-07-01T23:00:00Z
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MeetingHistory'
        '400':
          description: Bad Request
    post:
      tags:
        - Meetings
      operationId: createMeeting
      summary: 'Create meeting'
      description: Create a new meeting based on the parameters specified.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeetingReqCreate'
        description: The meeting details
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MeetingCreated'
        '400':
          description: Bad Request
  '/meetings/{meetingId}':
    get:
      tags:
        - Meetings
      operationId: getMeeting
      summary: 'Get meeting'
      description: Returns the meeting details for the specified meeting.
      parameters:
        - $ref: '#/components/parameters/meetingId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MeetingById'
        '404':
          description: Not Found
    delete:
      tags:
        - Meetings
      operationId: deleteMeeting
      summary: 'Delete meeting'
      description: Deletes the meeting identified by the meetingId.
      parameters:
        - $ref: '#/components/parameters/meetingId'
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '404':
          description: Not Found
    put:
      tags:
        - Meetings
      operationId: updateMeeting
      summary: 'Update meeting'
      description: Updates an existing meeting specified by meetingId.
      parameters:
        - $ref: '#/components/parameters/meetingId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeetingReqUpdate'
        description: The meeting details
        required: true
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '404':
          description: Not Found
  '/meetings/{meetingId}/start':
    get:
      tags:
        - Meetings
      operationId: startMeeting
      summary: 'Start meeting'
      description: Returns a host URL that can be used to start a meeting. When this URL is
        opened in a web browser, the GoToMeeting client will be downloaded and
        launched and the meeting will start. The end user is not required to
        login to a client.
      parameters:
        - $ref: '#/components/parameters/meetingId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartUrl'
  '/meetings/{meetingId}/attendees':
    get:
      tags:
        - Meetings
      operationId: getAttendeesByMeetings
      summary: 'Get attendees by meeting'
      description: List all attendees for specified meetingId of historical meeting. The
        historical meetings can be fetched using 'Get historical meetings', 'Get
        historical meetings by organizer', and 'Get historical meetings by
        group'. For users with the admin role this call returns attendees for
        any meeting. For any other user the call will return attendees for
        meetings on which the user is a valid organizer.
        <p>
        **Please note that your client requires the Admin Center scope
        (identity:) to execute this API request.**<br>
        How to create a client is described in a
        [HowTo](/guides/HowTos/02_HOW_createClient),
        but you can also add the missing scope to an existing OAuth client.
        </p>
      parameters:
        - $ref: '#/components/parameters/meetingId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AttendeeByMeeting'
        '404':
          description: Not Found
servers:
  - url: https://api.getgo.com/G2M/rest
components:
  securitySchemes:
    OAuth2:
      type: oauth2
      description: >
        To use this API, you _must_ provide an OAuth Token that has been requested from LogMeIn’s OAuth service.
        See https://goto-developer.logmeininc.com/how-get-access-token-and-organizer-key for documentation about how to use LogMeIn’s OAuth service.
      flows:
        password:
          scopes: {}
          tokenUrl: https://api.getgo.com/oauth/v2/token
          refreshUrl: https://api.getgo.com/oauth/v2/token
        authorizationCode:
          scopes: {}
          authorizationUrl: https://api.getgo.com/oauth/v2/authorize
          tokenUrl: https://api.getgo.com/oauth/v2/token
          refreshUrl: https://api.getgo.com/oauth/v2/token
    Bearer:
      type: http
      scheme: bearer
  parameters:
    Authorization:
      name: Authorization
      in: header
      description: Access token
      required: true
      schema:
        type: string
    groupKey:
      name: groupKey
      in: path
      description: The key of the group
      required: true
      schema:
        type: integer
        format: int64
    organizerKey:
      name: organizerKey
      in: path
      description: The key of the organizer
      required: true
      schema:
        type: integer
        format: int64
    meetingId:
      name: meetingId
      description: The meeting ID
      in: path
      required: true
      schema:
        type: integer
        format: int64
  requestBodies:
    OrganizerReq:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OrganizerReq'
      description: The details of the organizer to be created
      required: true
  schemas:
    Group:
      description: Describes a collection of organizers categorized by department or job
        function, for example. Can be a subgroup of a larger group.
      required:
        - groupkey
        - groupName
        - parentKey
        - status
        - numOrganizers
      properties:
        groupkey:
          type: integer
          format: int64
          description: The key of this group
        groupName:
          type: string
          description: The name of this group
        parentKey:
          type: integer
          format: int64
          description: The key of the parent group this group belongs to. Identical with
            the groupkey if this group is not a subgroup
        status:
          $ref: '#/components/schemas/Status'
        numOrganizers:
          type: integer
          format: int32
          description: The number of organizers assigned to this group
    AttendeeByGroup:
      description: Describes an attendee of a meeting instance held by an organizer within
        a specified group.
      required:
        - lastName
        - groupName
        - numAttendees
        - attendeeName
        - subject
        - endTime
        - conferenceCallInfo
        - organizerkey
        - startTime
        - meetingInstanceKey
        - duration
        - joinTime
        - email
        - leaveTime
        - attendeeEmail
        - organizerKey
        - meetingId
        - meetingType
        - firstName
      properties:
        lastName:
          type: string
          description: The surname of the meeting organizer
        groupName:
          type: string
          description: The name of the group
        numAttendees:
          type: integer
          format: int32
          description: The number of attendees at the attended meeting instance
        attendeeName:
          type: string
          description: The full name of the attendee
        subject:
          type: string
          description: The subject of the attended meeting
        endTime:
          type: string
          format: date-time
          description: The time the meeting instance ended
        conferenceCallInfo:
          type: string
          description: Audio options for the attended meeting
        organizerkey:
          type: integer
          format: int64
          description: The key of the meeting organizer. Field retained for backwards
            compatibility reasons
        startTime:
          type: string
          format: date-time
          description: The time the meeting instance started
        meetingInstanceKey:
          type: integer
          format: int64
          description: The key of the attended meeting instance
        duration:
          type: integer
          format: int32
          description: The duration of attendance in minutes
        joinTime:
          type: string
          format: date-time
          description: The time the attendee joined the meeting instance
        email:
          type: string
          description: The email address of the meeting organizer
        leaveTime:
          type: string
          format: date-time
          description: The time the attendee left the meeting instance
        attendeeEmail:
          type: string
          description: The attendee's email address
        organizerKey:
          type: string
          description: The key of the meeting organizer
        meetingId:
          type: string
          description: The meeting ID
        meetingType:
          $ref: '#/components/schemas/MeetingType'
        firstName:
          type: string
          description: The first name of the organizer of the attended meeting
    HistoryMeetingByGroup:
      description: Describes past meeting instance(s) held by an organizer within a
        specified group.
      required:
        - lastName
        - groupName
        - numAttendees
        - subject
        - endTime
        - conferenceCallInfo
        - organizerkey
        - startTime
        - meetingInstanceKey
        - duration
        - email
        - organizerKey
        - meetingId
        - meetingType
        - firstName
      properties:
        lastName:
          type: string
          description: The surname of the meeting organizer
        groupName:
          type: string
          description: The name of the group
        numAttendees:
          type: integer
          format: int32
          description: The number of attendees at this meeting instance
        subject:
          type: string
          description: The subject of the meeting
        endTime:
          type: string
          format: date-time
          description: The time this meeting instance ended
        conferenceCallInfo:
          type: string
          description: Audio options for the meeting
        organizerkey:
          type: integer
          format: int64
          description: The key of the meeting organizer. Field retained for backwards
            compatibility reasons
        startTime:
          type: string
          format: date-time
          description: The time this meeting instance started
        meetingInstanceKey:
          type: integer
          format: int64
          description: The key of this meeting instance
        duration:
          type: string
          description: The duration of this meeting instance in minutes
        email:
          type: string
          description: The email address of the meeting organizer
        organizerKey:
          type: string
          description: The key of the meeting organizer
        meetingId:
          type: string
          description: The meeting ID
        meetingType:
          $ref: '#/components/schemas/MeetingType'
        firstName:
          type: string
          description: The first name of the meeting organizer
    ScheduledMeetingByGroup:
      description: Describes a meeting scheduled by an organizer within a specified group.
      required:
        - organizerkey
        - attendees
        - lastName
        - groupName
        - passwordRequired
        - email
        - subject
        - meetingId
        - organizerKey
        - meetingType
        - firstName
        - conferenceCallInfo
      properties:
        organizerkey:
          type: integer
          format: int64
          description: The key of the meeting organizer. Field retained for backwards
            compatibility reasons.
        attendees:
          type: string
          description: Not in use.
        lastName:
          type: string
          description: The surname of the meeting organizer.
        groupName:
          type: string
          description: The name of the group.
        passwordRequired:
          type: boolean
          description: Indicates whether a password is required to join the meeting.
        email:
          type: string
          description: The email address of the meeting organizer.
        subject:
          type: string
          description: The subject of the meeting.
        meetingId:
          type: string
          description: The meeting ID.
        organizerKey:
          type: string
          description: The key of the meeting organizer.
        meetingType:
          $ref: '#/components/schemas/MeetingType'
        firstName:
          type: string
          description: The first name of the meeting organizer.
        conferenceCallInfo:
          type: string
          description: Audio options for the meeting.
    OrganizerReq:
      description: Describes the information required to create an organizer, with or
        without assigning a group.
      required:
        - organizerEmail
        - firstName
        - lastName
        - productType
      properties:
        organizerEmail:
          type: string
          description: The email address of the organizer
        firstName:
          type: string
          description: The first name of the organizer
        lastName:
          type: string
          description: The surname of the organizer
        productType:
          $ref: '#/components/schemas/Product'
    OrganizerShort:
      description: Describes a newly created organizer.
      required:
        - key
        - email
      properties:
        key:
          type: integer
          format: int64
          description: The organizer's key
        email:
          type: string
          description: The organizer's email address
    OrganizerByGroup:
      description: Describes an organizer within a specified group.
      required:
        - lastName
        - groupId
        - groupName
        - status
        - email
        - organizerKey
        - firstName
        - products
        - maxNumAttendeesAllowed
      properties:
        lastName:
          type: string
          description: The organizer's surname
        groupId:
          type: integer
          format: int64
          description: The key of the group
        groupName:
          type: string
          description: The name of the group
        status:
          $ref: '#/components/schemas/Status'
        email:
          type: string
          description: The organizer's email address
        organizerKey:
          type: integer
          format: int64
          description: The key of the organizer
        firstName:
          type: string
          description: The organizer's first name
        products:
          type: array
          description: Product list
          items:
            $ref: '#/components/schemas/Product'
        maxNumAttendeesAllowed:
          type: integer
          format: int32
          description: The maximum number of attendees allowed at sessions held by this
            organizer
    OrganizerStatus:
      description: Describes the status of an organizer, i.e. whether they are able to host
        meetings.
      properties:
        status:
          type: string
          description: The status of the organizer can be set to. Use 'suspended' to remove
            all products. The formerly used status 'active' is now DEPRECATED
            for this call. To activate the organizer please assign a product. In
            this case do not pass this parameter
          enum:
            - suspended
        productType:
          $ref: '#/components/schemas/Product'
    Organizer:
      description: Describes an organizer.
      required:
        - lastName
        - groupId
        - groupName
        - status
        - email
        - organizerKey
        - firstName
        - products
        - maxNumAttendeesAllowed
      properties:
        lastName:
          type: string
          description: The organizer's surname
        groupId:
          type: integer
          format: int64
          description: The key of the group this organizer is assigned to
        groupName:
          type: string
          description: The name of the group this organizer is assigned to
        status:
          $ref: '#/components/schemas/Status'
        organizerKey:
          type: integer
          format: int64
          description: The key of the organizer
        email:
          type: string
          description: The organizer's email address
        firstName:
          type: string
          description: The organizer's first name
        products:
          type: array
          description: Product list
          items:
            $ref: '#/components/schemas/Product'
        maxNumAttendeesAllowed:
          type: integer
          format: int32
          description: The maximum number of attendees allowed at sessions hosted by this
            organizer.
    AttendeeByOrganizer:
      description: Describes an attendee of a meeting instance held by a specified
        organizer.
      required:
        - lastName
        - groupName
        - numAttendees
        - attendeeName
        - subject
        - endTime
        - conferenceCallInfo
        - organizerkey
        - startTime
        - meetingInstanceKey
        - duration
        - newMeetingId
        - email
        - joinTime
        - name
        - leaveTime
        - attendeeEmail
        - meetingId
        - meetingType
        - firstName
      properties:
        lastName:
          type: string
          description: The surname of the meeting organizer
        groupName:
          type: string
          description: The name of the group the organizer is assigned to
        numAttendees:
          type: integer
          format: int32
          description: The number of attendees at the attended meeting instance
        attendeeName:
          type: string
          description: The full name of the attendee
        subject:
          type: string
          description: The subject of the attended meeting
        endTime:
          type: string
          format: date-time
          description: The time the meeting instance ended
        conferenceCallInfo:
          type: string
          description: Audio options for the attended meeting
        organizerkey:
          type: integer
          format: int64
          description: The key of the meeting organizer. Field retained for backwards
            compatibility reasons
        startTime:
          type: string
          format: date-time
          description: The time the meeting instance started
        meetingInstanceKey:
          type: integer
          format: int64
          description: The key of the attended meeting instance
        duration:
          type: integer
          format: int32
          description: The duration of attendance in minutes
        newMeetingId:
          type: string
          description: The formatted meeting ID
        email:
          type: string
          description: The email address of the meeting organizer
        joinTime:
          type: string
          format: date-time
          description: The time the attendee joined the meeting instance
        name:
          type: string
          description: The full name of the meeting organizer
        leaveTime:
          type: string
          format: date-time
          description: The time the attendee left the meeting instance
        attendeeEmail:
          type: string
          description: The attendee's email address
        meetingId:
          type: integer
          format: int64
          description: The meeting ID
        meetingType:
          $ref: '#/components/schemas/MeetingType'
        firstName:
          type: string
          description: The first name of the meeting organizer
    MeetingByOrganizer:
      description: Describes a meeting scheduled by a specified organizer
      required:
        - startTime
        - createTime
        - meetingid
        - maxParticipants
        - passwordRequired
        - status
        - subject
        - meetingType
        - endTime
        - uniqueMeetingId
        - conferenceCallInfo
      properties:
        startTime:
          type: string
          format: date-time
          description: The starting time of the meeting
        createTime:
          type: string
          format: date-time
          description: DEPRECATED. Returns an empty string ''
        meetingid:
          type: integer
          format: int64
          description: The meeting ID
        maxParticipants:
          type: integer
          format: int32
          description: The maximum number of participants allowed at the meeting
        passwordRequired:
          type: boolean
          description: Indicates whether a password is required to join the meeting
        status:
          $ref: '#/components/schemas/MeetingStatus'
        subject:
          type: string
          description: The subject of the meeting
        meetingType:
          $ref: '#/components/schemas/MeetingType'
        endTime:
          type: string
          format: date-time
          description: The ending time of the meeting
        uniqueMeetingId:
          type: integer
          format: int64
          description: A unique ID for the meeting
        conferenceCallInfo:
          type: string
          description: Audio options for the meeting
    MeetingReqCreate:
      description: Describes the information required to create a meeting.
      required:
        - subject
        - starttime
        - endtime
        - passwordrequired
        - conferencecallinfo
        - timezonekey
        - meetingtype
      properties:
        subject:
          type: string
          description: The subject of the meeting. 100 characters maximum. The characters
            '>' and '<' have to be replaced with the corresponding html
            character code (&gt; for '>' and &lt; for
            '<')
        starttime:
          type: string
          format: date-time
          description: The starting time of the meeting. Required ISO8601 UTC string, e.g.
            2015-07-01T22:00:00Z
        endtime:
          type: string
          format: date-time
          description: The ending time of the meeting. Required ISO8601 UTC string, e.g.
            2015-07-01T23:00:00Z
        passwordrequired:
          type: boolean
          description: Indicates whether a password is required to join the meeting.
            Required parameter
        conferencecallinfo:
          type: string
          description: >
            A required string. Can be one of the following options:
            PSTN (PSTN only),
            Free (PSTN and VoIP),
            Hybrid, (PSTN and VoIP),
            Private (you provide numbers and access code), or
            VoIP (VoIP only).
            You may also enter plain text for numbers and access codes with a limit of 255 characters
        timezonekey:
          type: string
          description: DEPRECATED. Must be provided and set to empty string ''
        meetingtype:
          $ref: '#/components/schemas/MeetingType'
        coorganizerKeys:
          description: Co-organizer keys. Co-organizers can start the meeting on the
            organizers behalf. Retrieve a list of valid organizers from the 'Get Users' call.
          type: array
          items:
            type: string
    MeetingReqUpdate:
      description: Describes the information required to update a meeting.
      required:
        - subject
        - starttime
        - endtime
        - passwordrequired
        - conferencecallinfo
        - timezonekey
        - meetingtype
      properties:
        subject:
          type: string
          description: A description of the meeting. 100 characters maximum. The characters
            '>' and '<' have to be replaced with the corresponding html
            character code (&gt; for '>' and &lt; for
            '<')
        starttime:
          type: string
          format: date-time
          description: The starting time of the meeting. A required ISO8601 UTC string,
            e.g. 2015-07-01T22:00:00Z
        endtime:
          type: string
          format: date-time
          description: The ending time of the meeting. A required ISO8601 UTC string, e.g.
            2015-07-01T22:00:00Z
        passwordrequired:
          type: boolean
          description: Indicates whether a password is required to join the meeting.
            Required parameter
        conferencecallinfo:
          type: string
          description: >
            A required string. Can be one of the following options:
            PSTN (PSTN only),
            Free (PSTN and VoIP),
            Hybrid, (PSTN and VoIP),
            Private (you provide numbers and access code), or
            VoIP (VoIP only).
            You may also enter plain text for numbers and access codes with a limit of 255 characters
        timezonekey:
          type: string
          description: DEPRECATED. Must be provided and set to empty string ''
        meetingtype:
          $ref: '#/components/schemas/MeetingType'
        coorganizerKeys:
          description: Co-organizer keys. Co-organizers can start the meeting on the
            organizers behalf. Retrieve a list of valid organizers from the 'Get Users' call.
          type: array
          items:
            type: string
    MeetingById:
      description: Describes a given meeting.
      required:
        - createTime
        - passwordRequired
        - status
        - subject
        - endTime
        - conferenceCallInfo
        - startTime
        - duration
        - maxParticipants
        - meetingId
        - meetingKey
        - meetingType
        - uniqueMeetingId
      properties:
        createTime:
          type: string
          format: date-time
          description: DEPRECATED. Returns an empty string ''
        passwordRequired:
          type: boolean
          description: Indicates whether a password is required to join the meeting
        status:
          $ref: '#/components/schemas/MeetingStatus'
        subject:
          type: string
          description: The subject of the meeting
        endTime:
          type: string
          format: date-time
          description: The ending time of the meeting
        conferenceCallInfo:
          type: string
          description: Audio options of the meeting
        startTime:
          type: string
          format: date-time
          description: The meeting starting time
        duration:
          type: integer
          format: int32
          description: The duration of the meeting in minutes
        maxParticipants:
          type: integer
          format: int32
          description: The maximum number of participants allowed at the meeting
        meetingId:
          type: integer
          format: int64
          description: The meeting ID
        meetingKey:
          type: integer
          format: int64
          description: The meeting ID. Field retained for backwards compatibility reasons
        meetingType:
          $ref: '#/components/schemas/MeetingType'
        uniqueMeetingId:
          type: integer
          format: int64
          description: The meeting ID. Field retained for backwards compatibility reasons
        coorganizerKeys:
          type: array
          description: The co-organizer keys of users that also can host the meeting.
          items:
            type: string
    MeetingScheduled:
      description: Describes a scheduled meeting.
      required:
        - startTime
        - createTime
        - meetingid
        - maxParticipants
        - passwordRequired
        - status
        - subject
        - meetingType
        - endTime
        - uniqueMeetingId
        - conferenceCallInfo
      properties:
        startTime:
          type: string
          format: date-time
          description: The starting time of the meeting.
        createTime:
          type: string
          format: date-time
          description: The time the meeting was created.
        meetingid:
          type: integer
          format: int64
          description: The meeting ID.
        maxParticipants:
          type: integer
          format: int32
          description: The maximum number of participants allowed at the meeting.
        passwordRequired:
          type: boolean
          description: Indicates whether a password is required to join the meeting.
        status:
          $ref: '#/components/schemas/MeetingStatus'
        subject:
          type: string
          description: The subject of the meeting.
        meetingType:
          $ref: '#/components/schemas/MeetingType'
        endTime:
          type: string
          format: date-time
          description: The ending time of the meeting.
        uniqueMeetingId:
          type: integer
          format: int64
          description: The meeting ID. Field retained for backwards compatibility reasons.
        conferenceCallInfo:
          type: string
          description: Audio options for the meeting.
        coorganizerKeys:
          description: Co-organizer keys. Co-organizers can start the meeting on the
            organizers behalf.
          type: array
          items:
            type: string
    MeetingHistory:
      description: Describes a unique past meeting instance.
      required:
        - lastName
        - groupName
        - numAttendees
        - passwordRequired
        - status
        - subject
        - endTime
        - date
        - conferenceCallInfo
        - startTime
        - organizerkey
        - meetingInstanceKey
        - newOrganizerKey
        - duration
        - newMeetingId
        - sessionId
        - email
        - meetingId
        - organizerKey
        - meetingKey
        - meetingType
        - firstName
        - uniqueMeetingId
      properties:
        lastName:
          type: string
          description: The surname of the meeting organizer
        groupName:
          type: string
          description: DEPRECATED. An empty string '' is returned
        numAttendees:
          type: integer
          format: int32
          description: The number of attendees at the meeting instance
        passwordRequired:
          type: boolean
          description: DEPRECATED. An empty string '' is returned
        status:
          type: string
          description: DEPRECATED. An empty string '' is returned
        subject:
          type: string
          description: The subject of the meeting
        endTime:
          type: string
          format: date-time
          description: The time the meeting instance ended
        date:
          type: string
          format: date-time
          description: The time the meeting instance started. Field retained for backwards
            compatibility reasons
        conferenceCallInfo:
          type: string
          description: Audio options for the meeting
        startTime:
          type: string
          format: date-time
          description: The time the meeting instance started
        organizerkey:
          type: string
          description: The key of the meeting organizer. Field retained for backwards
            compatibility reasons
        meetingInstanceKey:
          type: integer
          format: int64
          description: The key of the unique meeting instance
        newOrganizerKey:
          type: string
          description: The key of the meeting organizer. Field introduced for compatibility
            reasons
        duration:
          type: integer
          format: int32
          description: The duration of the meeting session in minutes
        newMeetingId:
          type: string
          description: Formatted meeting ID
        sessionId:
          type: integer
          format: int64
          description: The ID of the meeting session
        email:
          type: string
          description: The meeting organizer's email address
        meetingId:
          type: integer
          format: int64
          description: The meeting ID
        organizerKey:
          type: string
          description: The key of the meeting organizer
        meetingKey:
          type: integer
          format: int64
          description: The meeting ID. Field retained for backwards compatibility reasons
        meetingType:
          $ref: '#/components/schemas/MeetingType'
        firstName:
          type: string
          description: The meeting organizer's first name
        uniqueMeetingId:
          type: integer
          format: int64
          description: The meeting ID. Field retained for backwards compatibility reasons
        recording:
          $ref: '#/components/schemas/MeetingRecording'
    HistoricalMeeting:
      description: Describes a historical meeting within specified dates.
      required:
        - startTime
        - lastName
        - duration
        - numAttendees
        - accountKey
        - email
        - sessionId
        - subject
        - locale
        - organizerKey
        - meetingId
        - meetingType
        - firstName
        - endTime
        - conferenceCallInfo
      properties:
        startTime:
          type: string
          format: date-time
          description: The time the meeting instance started
        lastName:
          type: string
          description: The surname of the meeting organizer
        duration:
          type: string
          description: The duration of the meeting session in minutes
        numAttendees:
          type: string
          description: The number of attendees at the meeting instance
        accountKey:
          type: string
          description: The key of the company account
        email:
          type: string
          description: The meeting organizer's email address
        sessionId:
          type: string
          description: The ID of the meeting session
        subject:
          type: string
          description: The subject of the meeting
        locale:
          type: string
          description: The current language setting of the organizer in the web portal
        organizerKey:
          type: string
          description: The key of the meeting organizer
        meetingId:
          type: string
          description: The meeting ID
        meetingType:
          $ref: '#/components/schemas/MeetingType'
        firstName:
          type: string
          description: The meeting organizer's first name
        endTime:
          type: string
          format: date-time
          description: The time the meeting instance ended
        conferenceCallInfo:
          type: string
          description: Audio options for the meeting
        recording:
          $ref: '#/components/schemas/MeetingRecording'
    HistoricalMeetingByGroup:
      description: Describes a historical meeting within specified dates for a specified
        group.
      required:
        - startTime
        - lastName
        - duration
        - numAttendees
        - accountKey
        - email
        - subject
        - locale
        - organizerKey
        - meetingId
        - meetingType
        - firstName
        - endTime
        - groupName
      properties:
        startTime:
          type: string
          format: date-time
          description: The time the meeting instance started
        lastName:
          type: string
          description: The surname of the meeting organizer
        duration:
          type: string
          description: The duration of the meeting session in minutes
        numAttendees:
          type: string
          description: The number of attendees at the meeting instance
        accountKey:
          type: string
          description: The key of the company account
        email:
          type: string
          description: The meeting organizer's email address
        subject:
          type: string
          description: The subject of the meeting
        locale:
          type: string
          description: The current language setting of the organizer in the web portal
        organizerKey:
          type: string
          description: The key of the meeting organizer
        meetingId:
          type: string
          description: The meeting ID
        meetingType:
          $ref: '#/components/schemas/MeetingType'
        firstName:
          type: string
          description: The meeting organizer's first name
        endTime:
          type: string
          format: date-time
          description: The time the meeting instance ended
        groupName:
          type: string
          description: The name of the group
    UpcomingMeeting:
      description: Describes an upcoming meeting.
      required:
        - startTime
        - lastName
        - accountKey
        - passwordRequired
        - email
        - status
        - subject
        - locale
        - organizerKey
        - meetingId
        - meetingType
        - firstName
        - endTime
        - conferenceCallInfo
      properties:
        startTime:
          type: string
          format: date-time
          description: The time the meeting instance will start
        lastName:
          type: string
          description: The surname of the meeting organizer
        accountKey:
          type: string
          description: The key of the company account
        passwordRequired:
          type: boolean
          description: Indicates whether a password is required to join the meeting or not
        email:
          type: string
          description: The meeting organizer's email address
        status:
          $ref: '#/components/schemas/MeetingStatus'
        subject:
          type: string
          description: The subject of the meeting
        locale:
          type: string
          description: The current language setting of the organizer in the web portal
        organizerKey:
          type: string
          description: The key of the meeting organizer
        meetingId:
          type: string
          description: The meeting ID
        meetingType:
          $ref: '#/components/schemas/MeetingType'
        firstName:
          type: string
          description: The meeting organizer's first name
        endTime:
          type: string
          format: date-time
          description: The time the meeting instance ended
        conferenceCallInfo:
          type: string
          description: Audio options for the meeting
    UpcomingMeetingByGroup:
      description: Describes an upcoming meeting of a group.
      required:
        - startTime
        - lastName
        - accountKey
        - passwordRequired
        - email
        - subject
        - locale
        - organizerKey
        - meetingId
        - meetingType
        - firstName
        - endTime
        - groupName
      properties:
        startTime:
          type: string
          format: date-time
          description: The time the meeting instance will start
        lastName:
          type: string
          description: The surname of the meeting organizer
        accountKey:
          type: string
          description: The key of the company account
        passwordRequired:
          type: boolean
          description: Indicates whether a password is required to join the meeting or not
        email:
          type: string
          description: The meeting organizer's email address
        status:
          $ref: '#/components/schemas/MeetingStatus'
        subject:
          type: string
          description: The subject of the meeting
        locale:
          type: string
          description: The current language setting of the organizer in the web portal
        organizerKey:
          type: string
          description: The key of the meeting organizer
        meetingId:
          type: string
          description: The meeting ID
        meetingType:
          $ref: '#/components/schemas/MeetingType'
        firstName:
          type: string
          description: The meeting organizer's first name
        endTime:
          type: string
          format: date-time
          description: The time the meeting instance ended
        groupName:
          type: string
          description: The name of the group the meeting belongs to
    MeetingCreated:
      description: Describes a newly created meeting.
      required:
        - joinURL
        - meetingid
        - maxParticipants
        - uniqueMeetingId
        - conferenceCallInfo
      properties:
        joinURL:
          type: string
          description: The URL the meeting participants will use to join the meeting
        meetingid:
          type: integer
          format: int64
          description: The meeting ID
        maxParticipants:
          type: integer
          format: int32
          description: The maximum number of participants allowed in the meeting
        uniqueMeetingId:
          type: integer
          format: int64
          description: The meeting ID. Field retained for backwards compatibility reasons
        conferenceCallInfo:
          type: string
          description: Audio options for the meeting
    StartUrl:
      description: Host URL that can be used to start a meeting
      required:
        - hostURL
      properties:
        hostURL:
          type: string
          description: The host URL that can be used to start a meeting.
    AttendeeByMeeting:
      description: Describes an attendee of a specified meeting instance.
      required:
        - lastName
        - groupName
        - numAttendees
        - attendeeName
        - subject
        - endTime
        - conferenceCallInfo
        - organizerkey
        - startTime
        - meetingInstanceKey
        - duration
        - email
        - joinTime
        - name
        - leaveTime
        - attendeeEmail
        - meetingId
        - meetingType
        - firstName
      properties:
        lastName:
          type: string
          description: The surname of the meeting organizer
        groupName:
          type: string
          description: DEPRECATED. Returns 'NA'
        numAttendees:
          type: integer
          format: int32
          description: The number of attendees at the meeting instance
        attendeeName:
          type: string
          description: The attendee's full name
        subject:
          type: string
          description: The subject of the meeting
        endTime:
          type: string
          format: date-time
          description: The ending time of the meeting instance
        conferenceCallInfo:
          type: string
          description: Audio options for the meeting
        organizerkey:
          type: integer
          format: int64
          description: The key of the meeting organizer
        startTime:
          type: string
          format: date-time
          description: The starting time of the meeting instance
        meetingInstanceKey:
          type: integer
          format: int64
          description: The key of the unique meeting instance
        duration:
          type: integer
          format: int32
          description: The meeting duration in minutes
        email:
          type: string
          description: The email address of the meeting organizer
        joinTime:
          type: string
          format: date-time
          description: The time the attendee joined the meeting instance
        name:
          type: string
          description: The attendee's full name
        leaveTime:
          type: string
          format: date-time
          description: The time the attendee left the meeting instance
        attendeeEmail:
          type: string
          description: The attendee's email address
        meetingId:
          type: integer
          format: int64
          description: The meeting ID
        meetingType:
          $ref: '#/components/schemas/MeetingType'
        firstName:
          type: string
          description: The first name of the meeting organizer
    MeetingRecording:
      description: Information about the meeting recording.
      properties:
        recordingName:
          type: string
          description: Name of the recording
        recordingId:
          type: string
          description: The recording ID
        downloadUrl:
          type: string
          description: Url where the mp4 file of the recording can be downloaded
        fileSize:
          type: integer
          format: int64
          description: Size of the recording file in bytes
        shareUrl:
          type: string
          description: Url that can be used to share the recording only or including
            transcripts if present
    Product:
      description: Product type
      type: string
      enum:
        - G2M
        - G2W
        - G2T
        - OPENVOICE
        - G2ASEEIT
        - G2ARS
        - G2ASD
    MeetingType:
      type: string
      description: The meeting type
      enum:
        - immediate
        - recurring
        - scheduled
    MeetingStatus:
      type: string
      description: The meeting status, i.e whether the meeting is running or not
      enum:
        - ACTIVE
        - INACTIVE
    Status:
      type: string
      description: The status of an organizer (or group), i.e. whether the organizer (or
        the members of the group respectively) are able to host meetings
      enum:
        - active
        - suspended