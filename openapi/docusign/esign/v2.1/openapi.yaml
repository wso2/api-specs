swagger: "2.0"
info:
  version: v2.1
  title: DocuSign REST API
  description:
    The DocuSign REST API provides you with a powerful, convenient, and
    simple Web services API for interacting with DocuSign.
  termsOfService: https://www.docusign.com/company/terms-and-conditions/web
  contact:
    name: DocuSign Developer Center
    url: https://developers.docusign.com/
    email: devcenter@docusign.com
host: www.docusign.net
basePath: "/restapi"
schemes:
  - https
consumes:
  - application/json
  - application/xml
produces:
  - application/json
externalDocs:
  description: See the DocuSign REST API Guide for more information.
  url: https://docs.docusign.com/esign
paths:
  "/service_information":
    get:
      tags:
        - Services
      summary: Retrieves the available REST API versions.
      description: |-
        Retrieves the available REST API versions.

        DocuSign Production system: https://www.docusign.net/restapi/service_information
        DocuSign Demo system: https://demo.docusign.net/restapi/service_information

        You do not need an integration key to view the REST API versions and resources.
      operationId: ServiceInformation_GetServiceInformation
      consumes: []
      produces: []
      parameters: []
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/serviceInformation"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getService
      x-ds-method: get
      x-ds-service: Diagnostics
      x-ds-in-sdk: true
    parameters: []
  "/v2.1":
    get:
      tags:
        - Resources
      summary: Lists resources for REST version specified
      description: |+
        Retrieves the base resources available for the eSignature REST API.

        You do not need an integrator key to view the REST API versions and resources.

      operationId: ServiceInformation_GetResourceInformation
      consumes: []
      produces: []
      parameters: []
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/resourceInformation"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getResources
      x-ds-method: get
      x-ds-service: Diagnostics
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts":
    post:
      tags:
        - Accounts
      summary: Creates new accounts.
      description: |
        Creates new DocuSign accounts.
        You can use this method to create
        a single account
        or up to 100 accounts at a time.

        **Note:**  This method is restricted to partner integrations.
        You must work with DocuSign Professional Services
        or DocuSign Business Development,
        who will provide you with the Distributor Code
        and Distributor Password
        that you need to include in the request body.


        When creating a single account,
        the body of the request is a
        [`newAccountRequest`][newAccountRequest]
        object.

        Example:

        ```
        {
          "newAccountRequest": [
            {
              "accountName":"Test Account",
              "distributorCode":"MY_DIST_CODE",
              "distributorPassword":"MY_DIST_PWD",
              "initialUser":{
                "email":"user@emaildomain.com",
                "firstName":"John",
                "middleName": "Harry",
                "lastName":"Doe",
                "suffixName": "",
                "userName": "John Doe",
                "jobTitle": "Engineer",
                "company": "Test Company"
              },
              "addressInformation":{
                "address1": "1234 Main Street",
                "address2": "Suite 100",
                "city": "Seattle",
                "state": "WA",
                "postalCode": "98101",
                "country": "US",
                "phone": "1234567890",
                "fax": "1234567891"
              },
              "planInformation":{
                "planId":"37085696-xxxx-xxxx-xxxx-7ea067752959"
              },
              "referralInformation":{
                "includedSeats": "1",
                "referralCode": "code",
                "referrerName": "name"
              }
            }
          ]
        }

        ```
        If the request succeeds,
        it returns a
        201 (Created) HTTP response code.
        The response returns the new account ID, password, and the default user
        information for each newly created account.


        When creating multiple accounts,
        the body of the request is a
        `newAccountRequests`
        object,
        which contains one or more
        [`newAccountDefinition`][newAccountDefinition]
        objects.
        You can create up to 100 new accounts
        at a time this way.

        The body for a multi-account
        creation request
        looks like this in JSON:

        ```
        {
          "newAccountRequests": [
            {
              "accountName": "accountone",
              . . .
            },
            {
              "accountName": "accounttwo",
              . . .
            }
          ]
        }
        ```

        A multi-account request
        looks like this in XML:

        ```
        <newAccountsDefinition xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.docusign.com/restapi">
          <newAccountRequests>
            <newAccountDefinition>
              . . .
            </newAccountDefinition>
            <newAccountDefinition>
              . . .
            </newAccountDefinition>
          </newAccountRequests>
        </newAccountsDefinition>
        ```

        A multi-account creation request
        may succeed (report a 201 code)
        even if some accounts could not be created.
        In this case, the `errorDetails` property
        in the response contains specific information
        about the failure.



        [newAccountDefinition]: #/definitions/newAccountDefinition
        [nameValue]: #/definitions/nameValue
        [newAccountRequest]: #/definitions/newAccountRequest
      operationId: Accounts_PostAccounts
      consumes: []
      produces: []
      parameters:
        - name: newAccountDefinition
          in: body
          required: false
          schema:
            "$ref": "#/definitions/newAccountDefinition"
          description: ""
      responses:
        "201":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/newAccountSummary"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: create
      x-ds-method: create
      x-ds-service: Accounts
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}":
    get:
      tags:
        - Accounts
      summary: Retrieves the account information for the specified account.
      description: Retrieves the account information for the specified account.
      operationId: Accounts_GetAccount
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: include_account_settings
          in: query
          description:
            When **true,** includes account settings in the response. The
            default value is **false.**
          required: false
          type: string
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/accountInformation"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: GetAccountInformation
      x-ds-method: get
      x-ds-service: Accounts
      x-ds-in-sdk: true
    delete:
      tags:
        - Accounts
      summary: Deletes the specified account.
      description:
        This closes the specified account. You must be an account admin
        to close your account. Once closed, an account must be reopened by DocuSign.
      operationId: Accounts_DeleteAccount
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: redact_user_data
          in: query
          required: false
          type: string
          description: ""
      responses:
        "200":
          description: A successful response or an error.
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: delete
      x-ds-method: delete
      x-ds-service: Accounts
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/billing_charges":
    get:
      tags:
        - Accounts
      summary: Gets list of recurring and usage charges for the account.
      description:
        "Retrieves the list of recurring and usage charges for the account.
        This can be used to determine the charge structure and usage of charge plan
        items. \n\nPrivileges required: account administrator "
      operationId: BillingCharges_GetAccountBillingCharges
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: include_charges
          in: query
          description: |
            Specifies which billing charges to return.
            Valid values are:

            * envelopes
            * seats
          required: false
          type: string
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/billingChargeResponse"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getBillingCharges
      x-ds-method: getBillingCharges
      x-ds-service: Accounts
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/billing_invoices":
    get:
      tags:
        - Invoices
      summary: Get a List of Billing Invoices
      description:
        "Retrieves a list of invoices for the account. If the from date
        or to date queries are not specified, the response returns invoices for the
        last 365 days.\n\nPrivileges required: account administrator "
      operationId: BillingInvoices_GetBillingInvoices
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: from_date
          in: query
          description:
            Specifies the date/time of the earliest invoice in the account
            to retrieve.
          required: false
          type: string
        - name: to_date
          in: query
          description:
            Specifies the date/time of the latest invoice in the account
            to retrieve.
          required: false
          type: string
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/billingInvoicesResponse"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: listInvoices
      x-ds-method: list
      x-ds-service: Billing
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/billing_invoices/{invoiceId}":
    get:
      tags:
        - Invoices
      summary: Retrieves a billing invoice.
      description: |-
        Retrieves the specified invoice.

        **Note:** If the `pdfAvailable` property in the response is set to *true*, you can download a PDF version of the invoice. To download the PDF, make the call again and change the value of the `Accept` property in the header to `Accept: application/pdf`.

        Privileges required: account administrator

        The response returns a list of charges and information about the charges. Quantities are usually shown as 'unlimited' or an integer. Amounts are shown in the currency set for the account.

        **Response**
        The following table provides a description of the different `chargeName` property values. The information will grow as more chargeable items are added to the system.

        | chargeName | Description |
        | --- | --- |
        | id_check | ID Check Charge |
        | in_person_signing | In Person Signing charge |
        | envelopes Included | Sent Envelopes for the account |
        | age_verify | Age verification check |
        | ofac | OFAC Check |
        | id_confirm | ID confirmation check |
        | student_authentication | STAN PIN authentication check |
        | wet_sign_fax | Pages for returning signed documents by fax |
        | attachment_fax | Pages for returning attachments by fax |
        | phone_authentication | Phone authentication charge |
        | powerforms | PowerForm envelopes sent |
        | signer_payments | Payment processing charge |
        | outbound_fax | Send by fax charge |
        | bulk_recipient_envelopes | Bulk Recipient Envelopes sent |
        | sms_authentications | SMS authentication charge |
        | saml_authentications | SAML authentication charge |
        | express_signer_certificate | DocuSign Express Certificate charge |
        | personal_signer_certificate | Personal Signer Certificate charge |
        | safe_certificate | SAFE BioPharma Signer Certificate charge |
        | seats | Included active seats charge |
        | open_trust_certificate | OpenTrust Signer Certificate charge |
      operationId: BillingInvoices_GetBillingInvoice
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: invoiceId
          in: path
          required: true
          type: string
          description: The ID of the invoice.
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/billingInvoice"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getInvoice
      x-ds-method: get
      x-ds-service: Billing
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/billing_invoices_past_due":
    get:
      tags:
        - Invoices
      summary: Get a list of past due invoices.
      description:
        "Returns a list past due invoices for the account and notes if
        payment can be made through the REST API. \n\nPrivileges Required: account
        administrator"
      operationId: BillingInvoices_GetBillingInvoicesPastDue
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/billingInvoicesSummary"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: listInvoicesPastDue
      x-ds-method: listPastDue
      x-ds-service: Billing
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/billing_payments":
    get:
      tags:
        - Payments
      summary: Gets payment information for one or more payments.
      description:
        "Retrieves a list containing information about one or more payments.
        If the from date or to date queries are not used, the response returns payment
        information for the last 365 days. \n\nPrivileges required: account administrator "
      operationId: BillingPayments_GetPaymentList
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: from_date
          in: query
          description:
            Specifies the date/time of the earliest payment in the account
            to retrieve.
          required: false
          type: string
        - name: to_date
          in: query
          description:
            Specifies the date/time of the latest payment in the account
            to retrieve.
          required: false
          type: string
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/billingPaymentsResponse"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: listPayments
      x-ds-method: list
      x-ds-service: Billing
      x-ds-in-sdk: true
    post:
      tags:
        - Payments
      summary: Posts a payment to a past due invoice.
      description: |
        Posts a payment to a past due invoice.

        This method can only be used if the `paymentAllowed` value for a past due invoice is true. This can be determined calling [Billing::listInvoicesPastDue](/docs/esign-rest-api/reference/billing/invoices/listpastdue/).

        The response returns information for a single payment
        if a payment ID was used in the endpoint, or a list of payments.
        If the from date or to date queries or payment ID are not used,
        the response returns payment information for the last 365 days.

        If the request was for a single payment ID, the `nextUri` and `previousUri` properties are not returned.

        Privileges required: account administrator
      operationId: BillingPayments_PostPayment
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: billingPaymentRequest
          in: body
          required: false
          schema:
            "$ref": "#/definitions/billingPaymentRequest"
          description: ""
      responses:
        "201":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/billingPaymentResponse"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: makePayment
      x-ds-method: create
      x-ds-service: Billing
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/billing_payments/{paymentId}":
    get:
      tags:
        - Payments
      summary: Gets billing payment information for a specific payment.
      description:
        "Retrieves the information for a specified payment. \n\nPrivileges
        required: account administrator "
      operationId: BillingPayments_GetPayment
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: paymentId
          in: path
          required: true
          type: string
          description: The ID of the payment.
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/billingPaymentItem"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getPayment
      x-ds-method: get
      x-ds-service: Billing
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/billing_plan":
    get:
      tags:
        - BillingPlans
      summary: Get Account Billing Plan
      description: |
        Retrieves the billing plan information for the specified account, including the current billing plan, successor plans, billing address, and billing credit card.

        By default the successor plan and credit card information is included in the response. You can exclude this information from the response by adding the appropriate optional query string and setting it to **false.**

        Response

        The response returns the billing plan information, including the currency code, for the plan. The `billingPlan` and `succesorPlans` property values are the same as those shown in the [Billing: getBillingPlan](/docs/esign-rest-api/reference/billing/billingplans/get/) reference. the `billingAddress` and `creditCardInformation` property values are the same as those shown in the [Billing: updatePlan](/docs/esign-rest-api/reference/billing/billingplans/update/) reference.

        **Note:** When credit card number information displays, a mask is applied to the response so that only the last 4 digits of the card number are visible.
      operationId: BillingPlan_GetBillingPlan
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: include_credit_card_information
          in: query
          description:
            When **true,** payment information including credit card information
            will show in the return.
          required: false
          type: string
        - name: include_downgrade_information
          in: query
          required: false
          type: string
          description: ""
        - name: include_metadata
          in: query
          description:
            "When **true,** the `canUpgrade` and `renewalStatus` properties
            are included the response and an array of `supportedCountries` is added
            to the `billingAddress` information. "
          required: false
          type: string
        - name: include_successor_plans
          in: query
          description: When **true,** excludes successor information from the response.
          required: false
          type: string
        - name: include_tax_exempt_id
          in: query
          required: false
          type: string
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/accountBillingPlanResponse"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getPlan
      x-ds-method: getAccountPlan
      x-ds-service: Billing
      x-ds-in-sdk: true
    put:
      tags:
        - BillingPlans
      summary: Updates an account billing plan.
      description:
        Updates the billing plan information, billing address, and credit
        card information for the specified account.
      operationId: BillingPlan_PutBillingPlan
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: preview_billing_plan
          in: query
          description: When **true,** updates the account using a preview billing plan.
          required: false
          type: string
        - name: billingPlanInformation
          in: body
          required: false
          schema:
            "$ref": "#/definitions/billingPlanInformation"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/billingPlanUpdateResponse"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: updatePlan
      x-ds-method: update
      x-ds-service: Billing
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/billing_plan/credit_card":
    get:
      tags:
        - BillingPlans
      summary: Get credit card information
      operationId: BillingPlan_GetCreditCardInfo
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/creditCardInformation"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getCreditCardInfo
      description:
        This method returns information about a credit card associated
        with an account.
      x-ds-method: getCreditCard
      x-ds-service: Billing
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/billing_plan/downgrade":
    get:
      tags:
        - BillingPlans
      summary: Returns downgrade plan information for the specified account.
      operationId: BillingPlan_GetDowngradeRequestBillingInfo
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/downgradRequestBillingInfoResponse"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getDowngradeRequestBillingInfo
      description: ""
      x-ds-method: getDowngradeRequestBillingInfo
      x-ds-service: Uncategorized
      x-ds-in-sdk: true
    put:
      tags:
        - BillingPlans
      summary: Queues downgrade billing plan request for an account.
      operationId: BillingPlan_PutDowngradeAccountBillingPlan
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: downgradeBillingPlanInformation
          in: body
          required: false
          schema:
            "$ref": "#/definitions/downgradeBillingPlanInformation"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/downgradePlanUpdateResponse"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: updateDowngradeAccountBillingPlan
      description: ""
      x-ds-method: updateDowngradeAccountBillingPlan
      x-ds-service: Uncategorized
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/billing_plan/purchased_envelopes":
    put:
      tags:
        - BillingPlans
      summary: "Reserved: Purchase additional envelopes."
      description:
        "Reserved: At this time, this endpoint is limited to DocuSign internal
        use only. Completes the purchase of envelopes for your account. The actual
        purchase is done as part of an internal workflow interaction with an envelope
        vendor."
      operationId: PurchasedEnvelopes_PutPurchasedEnvelopes
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: purchasedEnvelopesInformation
          in: body
          required: false
          schema:
            "$ref": "#/definitions/purchasedEnvelopesInformation"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: purchaseEnvelopes
      x-ds-method: purchaseEnvelopes
      x-ds-service: Billing
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/brands":
    get:
      tags:
        - AccountBrands
      summary: Gets a list of brands.
      description: |
        This method returns details about all of the brands associated with an account,
        including the default brand profiles.

        Either or both of the following settings must be enabled for the account to use this method:

        - `canSelfBrandSign`
        - `canSelfBrandSend`

        ### Related topics

        - [How to create a brand](/docs/esign-rest-api/how-to/create-brand/)
      operationId: Brands_GetBrands
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: exclude_distributor_brand
          in: query
          description:
            When **true,** excludes distributor brand information from the
            response set.
          required: false
          type: string
        - name: include_logos
          in: query
          description: When **true,** returns the logos associated with the brand.
          required: false
          type: string
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/AccountBrands"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: listBrands
      x-ds-method: list
      x-ds-service: Accounts
      x-ds-in-sdk: true
    post:
      tags:
        - AccountBrands
      summary: Creates one or more brand profiles for an account.
      description: |
        This method creates one or more brand profile files for an account.

        To specify logos for the brand,
        use the
        [AccountBrands: updateLogo](/docs/esign-rest-api/reference/accounts/accountbrands/updatelogo/)
        method
        after you create the brand.


        Either or both of the following settings must be enabled for the account to use this method:

        - `canSelfBrandSign`
        - `canSelfBrandSend`

        ### Related topics

        - [How to create a brand](/docs/esign-rest-api/how-to/create-brand/)
      operationId: Brands_PostBrands
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: brand
          in: body
          required: false
          schema:
            "$ref": "#/definitions/brand"
          description: ""
      responses:
        "201":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/AccountBrands"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: createBrand
      x-ds-method: create
      x-ds-service: Accounts
      x-ds-in-sdk: true
    delete:
      tags:
        - AccountBrands
      summary: Deletes one or more brand profiles.
      description: |
        This method deletes one or more brand profiles from an account, based on the brand IDs that you include in the `brandsRequest`.

        Either or both of the following settings must be enabled for the account to use this method:

        - `canSelfBrandSign`
        - `canSelfBrandSend`

        ### Related topics

        - [How to create a brand](/docs/esign-rest-api/how-to/create-brand/)
      operationId: Brands_DeleteBrands
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: brandsRequest
          in: body
          required: false
          schema:
            "$ref": "#/definitions/brandsRequest"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/AccountBrands"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: deleteBrands
      x-ds-method: deleteList
      x-ds-service: Accounts
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/brands/{brandId}":
    get:
      tags:
        - AccountBrands
      summary: Gets information about a brand.
      operationId: Brand_GetBrand
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: brandId
          in: path
          description: The ID of the brand.
          required: true
          type: string
        - name: include_external_references
          in: query
          required: false
          type: string
          description:
            When **true,** the landing pages and links associated with the
            brand are included in the response.
        - name: include_logos
          in: query
          required: false
          type: string
          description:
            When **true,** the URIs for the logos associated with the brand
            are included in the response.
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/brand"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getBrand
      description: |-
        This method returns details about an account brand.

        **Note:** Branding for either signing or sending must be enabled for the account (`canSelfBrandSend` , `canSelfBrandSign`, or both of these account settings must be **true**).
      x-ds-method: get
      x-ds-service: Accounts
      x-ds-in-sdk: true
    put:
      tags:
        - AccountBrands
      summary: Updates an existing brand.
      operationId: Brand_PutBrand
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: brandId
          in: path
          description: The ID of the brand.
          required: true
          type: string
        - name: replace_brand
          in: query
          required: false
          type: string
          description:
            When **true,** replaces the brand instead of updating it. The
            only unchanged value is the brand ID. The request body must be XML. The
            default value is **false.**
        - name: brand
          in: body
          required: false
          schema:
            "$ref": "#/definitions/brand"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/brand"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: updateBrand
      description:
        "This method updates an account brand. \n\n**Note:** Branding for
        either signing or sending must be enabled for the account (`canSelfBrandSend`
        , `canSelfBrandSign`, or both of these account settings must be **true**)."
      x-ds-method: update
      x-ds-service: Accounts
      x-ds-in-sdk: true
    delete:
      tags:
        - AccountBrands
      summary: Deletes a brand.
      operationId: Brand_DeleteBrand
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: brandId
          in: path
          description: The ID of the brand.
          required: true
          type: string
      responses:
        "200":
          description: A successful response or an error.
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: deleteBrand
      description: |-
        This method deletes a brand from an account.

        **Note:** Branding for either signing or sending must be enabled for the account (`canSelfBrandSend` , `canSelfBrandSign`, or both of these account settings must be **true**).
      x-ds-method: delete
      x-ds-service: Accounts
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/brands/{brandId}/file":
    get:
      tags:
        - AccountBrands
      summary: Exports a brand.
      operationId: BrandExport_GetBrandExportFile
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: brandId
          in: path
          description: The ID of the brand.
          required: true
          type: string
      responses:
        "200":
          description: A successful response or an error.
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getBrandExportFile
      description: |-
        This method exports information about a brand to an XML file.

        **Note:** Branding for either signing or sending must be enabled for the account (`canSelfBrandSend` , `canSelfBrandSign`, or both of these account settings must be **true**).
      x-ds-method: getExportFile
      x-ds-service: Accounts
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/brands/{brandId}/logos/{logoType}":
    get:
      tags:
        - AccountBrands
      summary: Gets a brand logo.
      operationId: BrandLogo_GetBrandLogo
      consumes: []
      produces:
        - image/png
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: brandId
          in: path
          description: The ID of the brand.
          required: true
          type: string
        - name: logoType
          in: path
          description:
            "The type of logo. Valid values are:\n\n- `primary` \n- `secondary`
            \n- `email`"
          required: true
          type: string
      responses:
        "200":
          description: A successful response or an error.
          schema:
            type: file
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getBrandLogoByType
      description: |-
        This method returns a specific logo that is used in a brand.

        **Note:** Branding for either signing or sending must be enabled for the account (`canSelfBrandSend` , `canSelfBrandSign`, or both of these account settings must be **true**).
      x-ds-method: getLogo
      x-ds-service: Accounts
      x-ds-in-sdk: true
    put:
      tags:
        - AccountBrands
      summary: Updates a brand logo.
      operationId: BrandLogo_PutBrandLogo
      consumes:
        - image/png
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: brandId
          in: path
          description: The ID of the brand.
          required: true
          type: string
        - name: logoType
          in: path
          description:
            "The type of logo. Valid values are:\n\n- `primary` \n- `secondary`
            \n- `email`"
          required: true
          type: string
        - name: logoFileBytes
          in: body
          description:
            "Brand logo binary Stream. Supported formats: JPG, GIF, PNG.
            Maximum file size: 300 KB. Recommended dimensions: 296 x 76 pixels (larger
            images will be resized). Changes may take up to one hour to display in all
            places"
          required: true
          schema:
            type: string
            format: binary
      responses:
        "200":
          description: A successful response or an error.
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: updateBrandLogoByType
      description: |-
        This method updates a single brand logo.

        You pass in the new version of the resource in the `Content-Disposition` header. Example:

        `Content-Disposition: form-data; name="file"; filename="logo.jpg"`

        **Note:** Branding for either signing or sending must be enabled for the account (`canSelfBrandSend` , `canSelfBrandSign`, or both of these account settings must be **true**).
      x-ds-method: updateLogo
      x-ds-service: Accounts
      x-ds-in-sdk: true
    delete:
      tags:
        - AccountBrands
      summary: Deletes a brand logo.
      operationId: BrandLogo_DeleteBrandLogo
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: brandId
          in: path
          description: The ID of the brand.
          required: true
          type: string
        - name: logoType
          in: path
          description:
            "The type of logo. Valid values are:\n\n- `primary` \n- `secondary`
            \n- `email`"
          required: true
          type: string
      responses:
        "200":
          description: A successful response or an error.
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: deleteBrandLogoByType
      description: |-
        This method deletes a single logo from an account brand.

        **Note:** Branding for either signing or sending must be enabled for the account (`canSelfBrandSend` , `canSelfBrandSign`, or both of these account settings must be **true**).
      x-ds-method: deleteLogo
      x-ds-service: Accounts
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/brands/{brandId}/resources":
    get:
      tags:
        - AccountBrands
      summary: Returns metadata about the branding resources for an account.
      operationId: BrandResources_GetBrandResourcesList
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: brandId
          in: path
          description: The ID of the brand.
          required: true
          type: string
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/brandResourcesList"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getBrandResources
      description: |-
        This method returns metadata about the branding resources that are associated with an account.

        **Note:** Branding for either signing or sending must be enabled for the account (`canSelfBrandSend` , `canSelfBrandSign`, or both of these account settings must be **true**).
      x-ds-method: listResources
      x-ds-service: Accounts
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/brands/{brandId}/resources/{resourceContentType}":
    get:
      tags:
        - AccountBrands
      summary: Returns a branding resource file.
      operationId: BrandResources_GetBrandResources
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: brandId
          in: path
          description: The ID of the brand.
          required: true
          type: string
        - name: resourceContentType
          in: path
          required: true
          type: string
          description: |-
            The type of brand resource file to return. Valid values are:

            - `sending`
            - `signing`
            - `email`
            - `signing_captive`
        - name: langcode
          in: query
          required: false
          type: string
          description:
            The ISO 3166-1 alpha-2 codes for the languages that the brand
            supports.
        - name: return_master
          in: query
          required: false
          type: string
          description:
            Specifies which resource file data to return. When **true,**
            only the master resource file is returned. When **false,** only the elements
            that you modified are returned.
      responses:
        "200":
          description: A successful response or an error.
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getBrandResourcesByContentType
      description:
        "This method returns a specific branding resource file.\n\nA brand
        uses a set of brand resource files to control the sending, signing, email
        message, and captive (embedded) signing experiences.  You can modify the default
        email messages and formats in these files and upload them to your brand to
        customize the user experience.\n\n**Important:** When you upload a modified
        resource file, only the elements that differ from the master resource file
        are saved as your resource file. Similarly, when you download your resource
        files, only the modified elements are included in the file. \n\n**Note:**
        Branding for either signing or sending must be enabled for the account (`canSelfBrandSend`
        , `canSelfBrandSign`, or both of these account settings must be **true**)."
      x-ds-method: getResource
      x-ds-service: Accounts
      x-ds-in-sdk: true
    put:
      tags:
        - AccountBrands
      summary: Updates a branding resource file.
      operationId: BrandResources_PutBrandResources
      consumes:
        - multipart/form-data
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: brandId
          in: path
          description: The ID of the brand.
          required: true
          type: string
        - name: resourceContentType
          in: path
          required: true
          type: string
          description: |-
            The type of brand resource file that you are updating. Valid values are:

            - `sending`
            - `signing`
            - `email`
            - `signing_captive`
        - name: file.xml
          in: formData
          description: Brand resource XML file.
          required: true
          type: file
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/brandResources"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: updateBrandResourcesByContentType
      description: |-
        This method updates a branding resource file.

        You pass in the new version of the resource file in the `Content-Disposition` header. Example:

        `Content-Disposition: form-data; name="file"; filename="DocuSign_SigningResource_4328673.xml"`

        **Note:** Branding for either signing or sending must be enabled for the account (`canSelfBrandSend` , `canSelfBrandSign`, or both of these account settings must be **true**).

        **Important:** Customizing resource files is an advanced branding configuration option which can significantly impact your account, and should be done only by someone with expertise in XML and HTML. The master resource files are subject to change without notice. If you customize your resource files, after each release, DocuSign recommends you review any changes and update your custom files as needed.

        When you upload a modified resource file, only the elements that differ from the master resource file are saved as your resource file. Similarly, when you download your resource files, only the modified elements are included in the file.
      x-ds-method: updateResource
      x-ds-service: Accounts
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/bulk_send_batch":
    get:
      tags:
        - BulkSend
      summary: "Returns a list of bulk send batch summaries. "
      operationId: BulkSendV2Batch_GetBulkSendBatches
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: batch_ids
          in: query
          required: false
          type: string
          description: A comma-separated list of batch IDs to query.
        - name: count
          in: query
          required: false
          type: string
          description: |-
            The maximum number of results to return.

            Use `start_position` to specify the number of results to skip.

            Valid values: `1` to `100`<br>
            Default: `100`
        - name: from_date
          in: query
          required: false
          type: string
          description: |-
            The start date for a date range in UTC DateTime format.

            **Note:** If this property is null, no date filtering is applied.
        - name: search_text
          in: query
          required: false
          type: string
          description: Use this parameter to search for specific text.
        - name: start_position
          in: query
          required: false
          type: string
          description: |
            The zero-based index of the
            result from which to start returning results.

            Use with `count` to limit the number
            of results.

            The default value is `0`.
        - name: status
          in: query
          required: false
          type: string
          description: |-
            The kind of results to collect. Must be one of:

            - all
            - failed
            - sent
            - queued
        - name: to_date
          in: query
          required: false
          type: string
          description: |-
            The end of a search date range in UTC DateTime format. When you use this parameter, only templates created up to this date and time are returned.

            **Note:** If this property is null, the value defaults to the current date.
        - name: user_id
          in: query
          required: false
          type: string
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/bulkSendBatchSummaries"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getBulkSendBatches
      description: |-
        Returns a summary of bulk send batches.

        Use the `batch_ids` query parameter to narrow the list of batches.
      x-ds-method: getBulkSendBatches
      x-ds-service: Uncategorized
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/bulk_send_batch/{bulkSendBatchId}":
    get:
      tags:
        - BulkSend
      summary: Gets the status of a specific bulk send batch.
      operationId: BulkSendV2Batch_GetBulkSendBatchStatus
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: bulkSendBatchId
          in: path
          required: true
          type: string
          description: The batch ID.
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/bulkSendBatchStatus"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getBulkSendBatchStatus
      description: |
        Gets the general status of a specific bulk send batch such as:

        - number of successes
        - number pending
        - number of errors

        The `bulkErrors` property of the response object contains more information about the errors.

        ### Related topics

        - [How to bulk send envelopes](/docs/esign-rest-api/how-to/bulk-send-envelopes/)
      x-ds-method: getBulkSendBatchStatus
      x-ds-service: Uncategorized
      x-ds-in-sdk: true
    put:
      tags:
        - BulkSend
      summary: Updates the name of a bulk send batch.
      operationId: BulkSendV2Batch_PutBulkSendBatchStatus
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: bulkSendBatchId
          in: path
          required: true
          type: string
          description: The batch ID.
        - name: bulkSendBatchRequest
          in: body
          required: false
          schema:
            "$ref": "#/definitions/bulkSendBatchRequest"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/bulkSendBatchStatus"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: updateBulkSendBatchStatus
      description: Updates the name of a bulk send batch.
      x-ds-method: updateBulkSendBatchStatus
      x-ds-service: Uncategorized
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/bulk_send_batch/{bulkSendBatchId}/{bulkAction}":
    put:
      tags:
        - BulkSend
      summary: Applies a bulk action to all envelopes from a specified bulk send.
      operationId: BulkSendV2Batch_PutBulkSendBatchAction
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: bulkAction
          in: path
          required: true
          type: string
          description: |
            The action to apply. Valid values:
            * `resend`
            * `correct`
            * `void`
        - name: bulkSendBatchId
          in: path
          required: true
          type: string
          description: The batch ID.
        - name: bulkSendBatchActionRequest
          in: body
          required: false
          schema:
            "$ref": "#/definitions/bulkSendBatchActionRequest"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/bulkSendBatchStatus"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: updateBulkSendBatchAction
      description:
        Use this endpoint to resend, correct, or void all envelopes from
        a specified bulk send.
      x-ds-method: updateBulkSendBatchAction
      x-ds-service: Uncategorized
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/bulk_send_batch/{bulkSendBatchId}/envelopes":
    get:
      tags:
        - BulkSend
      summary: Gets envelopes from a specific bulk send batch.
      operationId: BulkSendV2Envelopes_GetBulkSendBatchEnvelopes
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: bulkSendBatchId
          in: path
          required: true
          type: string
          description: The batch ID.
        - name: count
          in: query
          required: false
          type: string
          description: |
            The maximum number of results to return.

            Use `start_position` to specify the number of results to skip.

            Valid values: `1` to `1000`
        - name: include
          in: query
          required: false
          type: string
          description:
            When `recipients`, only envelopes with recipient nodes will be
            included in the response.
        - name: order
          in: query
          required: false
          type: string
          description: |-
            The order in which to sort the results. Valid values are:

            - Descending order: `desc` (default)
            - Ascending order: `asc`
        - name: order_by
          in: query
          required: false
          type: string
          description: |-
            The envelope attribute used to sort the results. Valid values are:

            - `created` (default)
            - `completed`
            - `last_modified`
            - `sent`
            - `status`
            - `subject`
            - `status_changed`
        - name: search_text
          in: query
          required: false
          type: string
          description: Use this parameter to search for specific text.
        - name: start_position
          in: query
          required: false
          type: string
          description: |
            The zero-based index of the
            result from which to start returning results.

            Use with `count` to limit the number
            of results.

            The default value is `0`.
        - name: status
          in: query
          required: false
          type: string
          description: |-
            Comma-separated list of envelope statuses.

            Note that `any` should not be included with other statuses. In other words, `any` is a valid parameter value, but `any,sent` is not.

            Use the value `deliveryfailure` to get all envelopes with `AuthFailed` and `AutoResponded` status. This value is specific to bulk sending.
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/envelopesInformation"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getBulkSendBatchEnvelopes
      description:
        This method returns a list of envelopes in a specified bulk batch.
        Use the query parameters to filter and sort the envelopes by different attributes.
      x-ds-method: getBulkSendBatchEnvelopes
      x-ds-service: Uncategorized
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/bulk_send_lists":
    get:
      tags:
        - BulkSend
      summary: Gets bulk send lists.
      operationId: BulkSendV2CRUD_GetBulkSendLists
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/bulkSendingListSummaries"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getBulkSendLists
      description:
        This method returns a list of bulk send lists belonging to the
        current user, as well as basic information about each list.
      x-ds-method: getBulkSendLists
      x-ds-service: Uncategorized
      x-ds-in-sdk: true
    post:
      tags:
        - BulkSend
      summary: Creates a bulk send list.
      operationId: BulkSendV2CRUD_PostBulkSendList
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The ID of the account.
          required: true
          type: string
        - name: bulkSendingList
          in: body
          required: false
          schema:
            "$ref": "#/definitions/bulkSendingList"
          description: ""
      responses:
        "201":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/bulkSendingList"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: createBulkSendList
      description: |-
        This method creates a bulk send list that you can use to send an envelope to up to 1,000 recipients at once.

        ### Related topics

        - [How to bulk send envelopes](/docs/esign-rest-api/how-to/bulk-send-envelopes/)

        ### Errors

        | Error code                                              | Description                                                                                                                                                                                                                                                                              |
        | :------------------------------------------------------ | :--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
        | BULK_SEND_MAX_COPIES_EXCEEDED                           | A bulk sending list cannot specify more than XXX copies in the mailing list. Call the settings API endpoint to find the maximum number of copies in a batch allowed for your account. In almost all cases, the default limit is 1000.                                                    |
        | BULK_SEND_RECIPIENT_IDS_MUST_BE_UNIQUE                  | No two recipientIds can be same within a bulkCopy. Same restriction as a regular envelope applies. Specify unique recipient IDs for each recipient within a bulkCopy (model for envelope in mailing list).                                                                               |
        | BULK_SEND_RECIPIENT_ID_REQUIRED                         | If no RoleName is present, recipientID is required in mailing list's bulkCopy. Add a roleName (that coalesces with template/envelope) or a recipientID.                                                                                                                                  |
        | BULK_SEND_RECIPIENT_NAME_REQUIRED                       | Recipient {0} has no name. Specify a name for the recipient.                                                                                                                                                                                                                             |
        | BULK_SEND_EMAIL_ADDRESS_REQUIRED_FOR_EMAIL_RECIPIENT    | Recipient {0} is an email recipient with no email address. Specify an email for the email recipient.                                                                                                                                                                                     |
        | BULK_SEND_FAX_NUMBER_REQUIRED_FOR_FAX_RECIPIENT         | Recipient {0} is a fax recipient with no fax number. Specify a fax number for the fax recipient.                                                                                                                                                                                         |
        | BULK_SEND_FAX_NUMBER_NOT_VALID                          | Recipient {0} specifies fax number {1}, which is not valid. Specify a valid fax number for the fax recipient.                                                                                                                                                                            |
        | BULK_SEND_EMAIL_ADDRESS_NOT_VALID                       | Recipient {0} specifies email address {1}, which is not a valid email address.  Specify a valid email address for the recipient.                                                                                                                                                         |
        | BULK_SEND_PHONE_NUMBER_REQURED_FOR_SMS_AUTH             | Recipient {0} specifies SMS auth, but no number was provided. Specify a phone number for the SMS auth recipient.                                                                                                                                                                         |
        | BULK_SEND_PHONE_NUMBER_INVALID_FOR_SMS_AUTH             | Recipient {0} specifies phone number {1} for SMS auth, which is not valid. Specify a valid phone number for the SMS auth recipient.                                                                                                                                                      |
        | BULK_SEND_ROLE_NAMES_MUST_BE_UNIQUE                     | Recipient role names cannot be duplicated; role {duplicateRecipientRole} appears multiple times. Use unique roleNames for recipients.                                                                                                                                                    |
        | BULK_SEND_CANNOT_USE_BOTH_ROLE_AND_ID_ON_SAME_RECIPIENT | Recipients cannot have both ID and Role; {0} has both. Specify a roleName or recipientId, but not both for the same recipient.                                                                                                                                                           |
        | BULK_SEND_CANNOT_USE_BOTH_ROLE_AND_ID_IN_SAME_LIST      | Cannot use both recipient role and ID in the same list. Specify a roleName or recipientId, but not both in the same list.                                                                                                                                                                |
        | BULK_SEND_INVALID_ID_CHECK_CONFIGURATION                | Recipient {0} specified SMS authentication, but no SMS auth settings were provided. Provide an SMS auth setting (proper ID configuration) if SMS auth is specified.                                                                                                                      |
        | BULK_SEND_INVALID_SBS_INPUT_CONFIGURATION               | Recipient {0} has more than one signature provider specified. Or signingProviderName is not specified. Or Signature provider : {0} is either unknown or not an available pen for this account. One or more SBS configuration is missing or invalid. The error details provide specifics. |
        | BULK_SEND_TAB_LABELS_MUST_BE_UNIQUE                     | Tab label {0} is duplicated. Needs to be unique. Use a unique tab label.                                                                                                                                                                                                                 |
        | BULK_SEND_TAB_LABEL_REQUIRED                            | Tab label is required. Specify a tab label.                                                                                                                                                                                                                                              |
        | BULK_SEND_TAB_VALUE_REQUIRED                            | Tab Label value is required. Specify a value for the tab label.                                                                                                                                                                                                                          |
        | BULK_SEND_ENVELOPE_CUSTOM_FIELD_NAME_MUST_BE_UNIQUE     | Custom fields must have distinct names. The field {0} appears more than once in a copy. Use unique names for custom fields.                                                                                                                                                              |
        | BULK_SEND_ENVELOPE_CUSTOM_FIELD_NAME_REQUIRED           | All custom fields must have names. Specify a name for the custom field.                                                                                                                                                                                                                  |
        | BULK_SEND_ENVELOPE_CUSTOM_FIELD_VALUE_REQUIRED          | Custom field {0} has no value. A custom field can have an empty value, but it cannot have a null value. Specify a value for the custom field.                                                                                                                                            |
      x-ds-method: createBulkSendList
      x-ds-service: Uncategorized
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/bulk_send_lists/{bulkSendListId}":
    get:
      tags:
        - BulkSend
      summary: Gets a specific bulk send list.
      operationId: BulkSendV2CRUD_GetBulkSendList
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: bulkSendListId
          in: path
          required: true
          type: string
          description:
            The GUID of the bulk send list. This property is created after
            you post a new bulk send list.
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/bulkSendingList"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getBulkSendList
      description:
        This method returns all of the details associated with a specific
        bulk send list that belongs to the current user.
      x-ds-method: getBulkSendList
      x-ds-service: Uncategorized
      x-ds-in-sdk: true
    put:
      tags:
        - BulkSend
      summary: Updates a bulk send list.
      operationId: BulkSendV2CRUD_PutBulkSendList
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: bulkSendListId
          in: path
          required: true
          type: string
          description:
            The GUID of the bulk send list. This property is created after
            you post a new bulk send list.
        - name: bulkSendingList
          in: body
          required: false
          schema:
            "$ref": "#/definitions/bulkSendingList"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/bulkSendingList"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: updateBulkSendList
      description: This method replaces the definition of an existing bulk send list.
      x-ds-method: updateBulkSendList
      x-ds-service: Uncategorized
      x-ds-in-sdk: true
    delete:
      tags:
        - BulkSend
      summary: Deletes a bulk send list.
      operationId: BulkSendV2CRUD_DeleteBulkSendList
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: bulkSendListId
          in: path
          required: true
          type: string
          description:
            The GUID of the bulk send list. This property is created after
            you post a new bulk send list.
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/bulkSendingListSummaries"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: deleteBulkSendList
      description: This method deletes a bulk send list.
      x-ds-method: deleteBulkSendList
      x-ds-service: Uncategorized
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/bulk_send_lists/{bulkSendListId}/send":
    post:
      tags:
        - BulkSend
      summary: Creates a bulk send request.
      operationId: BulkSendV2Send_PostBulkSendRequest
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: bulkSendListId
          in: path
          required: true
          type: string
          description:
            The GUID of the bulk send list. This property is created after
            you post a new bulk send list.
        - name: bulkSendRequest
          in: body
          required: false
          schema:
            "$ref": "#/definitions/bulkSendRequest"
          description: ""
      responses:
        "201":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/bulkSendResponse"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: createBulkSendRequest
      description: |+
        This method initiates the bulk send process. It generates a bulk send request based on an [existing bulk send list][create_list] and an envelope or template.

        Consider using the [BulkSend::createBulkSendTestRequest][create_test] method to test your bulk send list for compatibility with the envelope or template that you want to send first. To learn about the complete bulk send flow, see the [Bulk Send overview][BulkSendOverview].

        If the envelopes were successfully queued for asynchronous processing, the response contains a `batchId` that you can use to get the status of the batch. If a failure occurs, the API returns an error message.

        **Note:** Partial success or failure generally does not occur. Only the entire batch is queued for asynchronous processing.

        ### Related topics

        - [How to bulk send envelopes](/docs/esign-rest-api/how-to/bulk-send-envelopes/)


        ### Errors

        This method returns the following errors:

        | Error code                                                 | Description                                                                                                                                                                                                                                                                                            |
        | :--------------------------------------------------------- | :----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
        | BULK_SEND_ENVELOPE_NOT_IN_SENDABLE_STATE                   | Envelope {0} is not in a sendable state. The envelope is not complete. Make sure it has a sendable status, such as `created`.                                                                                                                                                                          |
        | BULK_SEND_ENVELOPE_LIST_CONTAINS_NO_COPIES                 | Cannot send an envelope with a bulk sending list which contains no copies.  The list you're trying to bulk send is empty. Make sure the bulk sending list you're using contains recipients.                                                                                                            |
        | BULK_SEND_ENVELOPE_LIST_CONTAINS_TOO_MANY_COPIES           | Bulk sending list contains more than {0} copies. The list you're trying to bulk send will cause your account to exceed the 1,000-copy limit imposed for all accounts. Try sending two or more separate lists.                                                                                          |
        | BULK_SEND_ENVELOPE_CANNOT_BE_NULL                          | Cannot send a bulk list without an envelope. Specify the envelope ID or template ID for the envelope you want to bulk send.                                                                                                                                                                            |
        | BULK_SEND_BLOB_STORE_ERROR                                 | Could not save copy of bulk sending list. An error writing to the database occurred. Try again. If the error persists, contact DocuSign Support.                                                                                                                                                       |
        | BULK_SEND_ACCOUNT_HAS_TOO_MANY_QUEUED_ENVELOPES            | Cannot send this bulk sending list because doing so would exceed the maximum of {maxCopies} in-flight envelopes. This account currently has {unprocessedEnvelopes} envelopes waiting to be processed. Please try again later." .Try again later, or contact DocuSign Support to request a higher tier. |
        | BULK_SEND_ENVELOPE_NOT_FOUND                               | Envelope {envelopeOrTemplateId} does not exist or you do not have permission to access it. The envelopeId or templateId specified could not be found. Specify a valid value.                                                                                                                           |
        | BULK_SEND_LIST_NOT_FOUND                                   | Bulk Sending list {listId} does not exist or you do not have permission to access it. The mailingListId specified could not be found. Specify a valid value.                                                                                                                                           |
        | BULK_SEND_ENVELOPE_HAS_NO_RECIPIENTS                       | Bulk sending copy contains recipients, but the specified envelope does not. The recipients on the envelope and the bulk send list do not match. Make sure the envelope and list are compatible for sending.                                                                                            |
        | BULK_SEND_RECIPIENT_ID_DOES_NOT_EXIST_IN_ENVELOPE          | Recipient {0} does not exist in the envelope. Add the missing recipient to the envelope.                                                                                                                                                                                                               |
        | BULK_SEND_RECIPIENT_ID_DOES_NOT_MATCH                      | Recipient ID {envelopeMember.ID} does not match. Make sure the recipient information in the list and the envelope match up.                                                                                                                                                                            |
        | BULK_SEND_ENVELOPE_HAS_BULK_RECIPIENT                      | Recipient {0} is a bulk recipient.  This is not supported. No legacy 'bulk recipient' allowed. In v2.1 of the eSignature API, you must use a bulk send list instead of a bulk recipient. See the API documentation for details.                                                                        |
        | BULK_SEND_RECIPIENT_ROLE_DOES_NOT_MATCH                    | Recipient Role {envelopeMember.RoleName} does not match. Make sure the recipient information in the list and the envelope is compatible.                                                                                                                                                               |
        | BULK_SEND_DUPLICATE_RECIPIENT_DETECTED                     | Duplicate recipients ({0}) not allowed, unless recipients have unique routing order specified on envelope.                                                                                                                                                                                             |
        | BULK_SEND_ENVELOPE_HAS_NO_TABS                             | Bulk sending copy contains tabs, but the specified envelope does not. List and envelope tabs cannot be coalesced. Make sure they are compatible for sending.                                                                                                                                           |
        | BULK_SEND_TAB_LABEL_DOES_NOT_EXIST_IN_ENVELOPE             | Tab with label {0} does not exist in envelope. Add the tab label to the envelope, remove the label from the list, or make sure you're specifying the correct list and envelope.                                                                                                                        |
        | BULK_SEND_TAB_DOES_NOT_MATCH                               | Tab {0} does not match {0} in envelope. A tab exists on the list that does not match or is missing on the envelope. Make sure the tabs on the list and the envelope match.                                                                                                                             |
        | BULK_SEND_ENVELOPE_HAS_NO_ENVELOPE_CUSTOM_FIELDS           | Bulk sending copy contains custom fields, but the specified envelope does not. There are custom fields on the list that the envelope does not have. Make sure that any custom fields on the list and the envelope match.                                                                               |
        | BULK_SEND_ENVELOPE_CUSTOM_FIELD_DOES_NOT_EXIST_IN_ENVELOPE | Custom field {0} does not exist in the envelope. Either add the custom field on the list to the envelope, remove the custom field from the list, or make sure you're specifying the correct list and envelope.                                                                                         |
        | BULK_SEND_ENVELOPE_CUSTOM_FIELD_NAME_DOES_NOT_MATCH        | Custom field names must match. {0} and {1} do not match. The custom field names on the list and the envelope do not match. Use identical names for both.                                                                                                                                               |

        [create_list]:      /docs/esign-rest-api/reference/bulkenvelopes/bulksend/createbulksendlist/
        [create_test]:      /docs/esign-rest-api/reference/bulkenvelopes/bulksend/createbulksendtestrequest/
        [BulkSendOverview]: /docs/esign-rest-api/reference/bulkenvelopes/bulksend/

      x-ds-method: createBulkSendRequest
      x-ds-service: Uncategorized
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/bulk_send_lists/{bulkSendListId}/test":
    post:
      tags:
        - BulkSend
      summary: Creates a bulk send test.
      operationId: BulkSendV2Test_PostBulkSendTestRequest
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: bulkSendListId
          in: path
          required: true
          type: string
          description:
            The GUID of the bulk send list. This property is created after
            you post a new bulk send list.
        - name: bulkSendRequest
          in: body
          required: false
          schema:
            "$ref": "#/definitions/bulkSendRequest"
          description: ""
      responses:
        "201":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/bulkSendTestResponse"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: createBulkSendTestRequest
      description: |+
        This method tests a bulk send list for compatibility with the envelope or template that you want to send. For example, a template that has three roles is not compatible with a bulk send list that has only two recipients. For this reason, you might want to test compatibility first.

        A successful test result returns `true` for the `canBeSent` property. An unsuccessful test returns a JSON response that contains information about the errors that occurred.

        If the test is successful, you can then send the envelope or template by using the [BulkSend::createBulkSendRequest][BulkSendRequest] method.

        ## Envelope Compatibility Checks

        This section describes the envelope compatibility checks that the system performs.

        **Top-Level Issues**

        - Envelopes must be in a sendable state.
        - The bulk send list must contain at least one copy (instance of an envelope), and no more than the maximum number of copies allowed for the account.
        - The envelope must not be null and must be visible to the current user.
        - The account cannot have more queued envelopes than the maximum number configured for the account.
        - The bulk send list must exist.

        **Recipients**

        - The envelope must have recipients.
        - If you are using an envelope, all of the recipients defined in the bulk send list must have corresponding recipient IDs in the envelope definition. If you are using a template, you must either match the recipient IDs or role IDs.
        - The envelope cannot contain a bulk recipient (an artifact of the legacy version of DocuSign's bulk send
          functionality).

        **Recipient Tabs**

        - Every `recipient ID, tab label` pair in the bulk send list must correspond to a tab in the envelope.

        **Custom Fields**

        - Each envelope-level custom field in the bulk send list must correspond to the name of a `customField` in the
          envelope definition. You do not have to match the recipient-level custom fields.

        [BulkSendRequest]:  /docs/esign-rest-api/reference/bulkenvelopes/bulksend/createbulksendrequest/


      x-ds-method: createBulkSendTestRequest
      x-ds-service: Uncategorized
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/captive_recipients/{recipientPart}":
    delete:
      tags:
        - Accounts
      summary: Deletes the signature for one or more captive recipient records.
      description:
        This method deletes the signature for one or more captive recipient
        records. It is primarily used for testing. This functionality provides a way
        to reset the signature associated with a client user ID so that a new signature
        can be created the next time the client user ID is used.
      operationId: CaptiveRecipients_DeleteCaptiveRecipientsPart
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: recipientPart
          in: path
          required: true
          type: string
          description: "Signature is the only supported value. "
        - name: captiveRecipientInformation
          in: body
          required: false
          schema:
            "$ref": "#/definitions/captiveRecipientInformation"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/captiveRecipientInformation"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: deleteCaptiveRecipient
      x-ds-method: deleteCaptiveRecipient
      x-ds-service: Accounts
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/chunked_uploads":
    post:
      tags:
        - ChunkedUploads
      summary: Initiate a new chunked upload.
      operationId: ChunkedUploads_PostChunkedUploads
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: chunkedUploadRequest
          in: body
          required: false
          schema:
            "$ref": "#/definitions/chunkedUploadRequest"
          description: ""
      responses:
        "201":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/chunkedUploadResponse"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: createChunkedUpload
      x-ds-api-status: beta
      description:
        This method initiates a new chunked upload with the first part
        of the content.
      x-ds-method: create
      x-ds-service: Envelopes
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/chunked_uploads/{chunkedUploadId}":
    get:
      tags:
        - ChunkedUploads
      summary: Retrieves metadata about a chunked upload.
      operationId: ChunkedUploads_GetChunkedUpload
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: chunkedUploadId
          in: path
          required: true
          type: string
          description: "The ID of the chunked upload. "
        - name: include
          in: query
          required: false
          type: string
          description:
            "(Optional) This parameter enables you to include additional
            attribute data in the response. The valid value for this method is `checksum`,
            which returns an SHA256 checksum of the content of the chunked upload in
            the response. You can use compare this checksum against your own checksum
            of the original content to verify that there are no missing parts before
            you attempt to commit the chunked upload."
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/chunkedUploadResponse"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getChunkedUpload
      x-ds-api-status: beta
      description: |-
        Returns the details (but not the content) about a chunked upload.

        **Note:** You cannot obtain details about a chunked upload that has expired, been deleted, or consumed by other actions.
      x-ds-method: get
      x-ds-service: Envelopes
      x-ds-in-sdk: true
    put:
      tags:
        - ChunkedUploads
      summary: Commit a chunked upload.
      operationId: ChunkedUploads_PutChunkedUploads
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: "(Required) The external account number (int) or account ID GUID."
          required: true
          type: string
        - name: chunkedUploadId
          in: path
          required: true
          type: string
          description: "(Required) The ID of the chunked upload to commit."
        - name: action
          in: query
          required: false
          type: string
          description:
            "(Required) You must use this query parameter with the value
            `commit`, which affirms the request to validate and prepare the chunked
            upload for use with other API calls."
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/chunkedUploadResponse"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: updateChunkedUpload
      x-ds-api-status: beta
      description: |-
        This method checks the integrity of a chunked upload and then commits it. When this request is successful, the chunked upload is then ready to be referenced in other API calls.

        If the request is unsuccessful, ensure that you have uploaded all of the parts by using the Update method.

        **Note:** After you commit a chunked upload, it no longer accepts additional parts.
      x-ds-method: commit
      x-ds-service: Envelopes
      x-ds-in-sdk: true
    delete:
      tags:
        - ChunkedUploads
      summary: Deletes a chunked upload.
      operationId: ChunkedUploads_DeleteChunkedUpload
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: chunkedUploadId
          in: path
          required: true
          type: string
          description: "The ID of the chunked upload. "
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/chunkedUploadResponse"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: deleteChunkedUpload
      x-ds-api-status: beta
      description: |-
        Deletes a chunked upload that has been committed but not yet consumed.

        This method cannot be used to delete the following types of chunked uploads, which the system deletes automatically:


        - Chunked uploads that have been consumed by use in another API call.
        - Expired chunked uploads.

        **Note:** If you are aware of a chunked upload that can be discarded, the best practice is to explicitly delete it. If you wait for the system to automatically delete it after it expires, the chunked upload will continue to count against your quota.
      x-ds-method: delete
      x-ds-service: Envelopes
      x-ds-in-sdk: true
    parameters: []
  ? "/v2.1/accounts/{accountId}/chunked_uploads/{chunkedUploadId}/{chunkedUploadPartSeq}"
  : put:
      tags:
        - ChunkedUploads
      summary: Add a chunk to an existing chunked upload.
      operationId: ChunkedUploads_PutChunkedUploadPart
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: chunkedUploadId
          in: path
          required: true
          type: string
          description: "The ID of the chunked upload. "
        - name: chunkedUploadPartSeq
          in: path
          required: true
          type: string
          description: |-
            The sequence or order of the part in the chunked upload. By default, the sequence of the first part that is uploaded as part of the Create request is `0`.

            **Note:** You can add parts out of order. However, the chunked upload must consist of a contiguous series of one or more parts before you can successfully commit it.
        - name: chunkedUploadRequest
          in: body
          required: false
          schema:
            "$ref": "#/definitions/chunkedUploadRequest"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/chunkedUploadResponse"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: updateChunkedUploadPart
      x-ds-api-status: beta
      description:
        "Adds a chunk or part to an existing chunked upload. After you
        use the Create method to initiate a new chunked upload and upload the first
        part, \nuse this method to upload subsequent parts.\n\nFor simplicity, DocuSign
        recommends that you upload the parts in their sequential order ( 1,2, 3, 4,
        etc.). The Create method adds the first part and assigns it the `sequence`
        value `0`. As a result, DocuSign recommends that you start with a `sequence`
        value of `1` when you use this method, and continue uploading parts contiguously
        until you have uploaded the entirety of the original content to DocuSign.\n\nExample:\n\n\n```\nPUT
        /v2.1/accounts/{accountId}/chunked_uploads/{chunkedUploadId}/1\nPUT /v2.1/accounts/{accountId}/chunked_uploads/{chunkedUploadId}/2\nPUT
        /v2.1/accounts/{accountId}/chunked_uploads/{chunkedUploadId}/3\n```\n\n**Note:**
        You cannot replace a part that DocuSign has already received, or add parts
        to a chunked upload that is already successfully committed."
      x-ds-method: update
      x-ds-service: Envelopes
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/connect":
    get:
      tags:
        - ConnectConfigurations
      summary: Get Connect configuration information.
      description: |-
        Retrieves all the DocuSign Custom Connect definitions for the specified account.

        **Note:** To use this function, you must be an account administrator and Connect must be enabled on your account.
      operationId: Connect_GetConnectConfigs
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/connectConfigResults"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: listConfigurations
      x-ds-method: list
      x-ds-service: Connect
      x-ds-in-sdk: true
    put:
      tags:
        - ConnectConfigurations
      summary: Updates a specified Connect configuration.
      description: |-
        Updates the specified DocuSign Connect configuration in your account. To enable the configuration, set the `allowEnvelopePublish` property to **true.**

        After any updates, test your configuration to make sure it works as expected.

        **Note:** To use this function, you must be an account administrator and Connect must be enabled on your account.
      operationId: Connect_PutConnectConfiguration
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: connectCustomConfiguration
          in: body
          required: false
          schema:
            "$ref": "#/definitions/connectCustomConfiguration"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/connectCustomConfiguration"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: updateConfiguration
      x-ds-method: update
      x-ds-service: Connect
      x-ds-in-sdk: true
    post:
      tags:
        - ConnectConfigurations
      summary: Creates a Connect configuration.
      description:
        "Creates a custom Connect configuration for the specified account.\n\nConnect
        is a webhook service that provides updates when certain events occur in your
        eSignature workflows. You can use this endpoint to create:\n* Account-level
        Connect configurations to listen for events related to any envelopes sent
        by one or more account users\n* Recipient Connect configurations that are
        triggered when one or more of your account users receive an envelope\n\nTo
        set an account-level configuration, set `configurationType` to **custom.**\nTo
        set a Recipient Connect configuration, set `configurationType` to **customrecipient.**\n\nIf
        you want to listen for events on only one envelope, use the [eventNotification](/docs/esign-rest-api/reference/envelopes/envelopes/create/#schema__envelopedefinition_eventnotification)
        object instead.\n\n**Note:** To use this function, you must be an account
        administrator and Connect must be enabled on your account.\n\n## Data models\n\nThere
        are four possible data models for your Connect configuration. Consider:\n*
        Do you want the data in JSON or XML?\n* Do you want events sent individually
        (SIM) or in aggregate?\n\nDocuSign recommends using the [JSON SIM event model](/platform/webhooks/connect/improved-json-sim-event-model/).\n\n<ds-column>\n\n<ds-step
        open=\"false\" hideIcon=\"true\">\n<h3>JSON SIM (Recommended)</h3>\n<div>\n\nSet
        `deliveryMode` to **SIM** and `eventData.version` to **restv2.1.** Use the
        `events` property to set the event statuses that will trigger your configuration.\n\nThe
        following sample request shows how to create an envelope-level configuration
        using JSON SIM:\n```\n{\n  \"configurationType\": \"custom\",\n  \"urlToPublishTo\":
        \"YOUR-WEBHOOK-URL\",\n  \"allUsers\": \"true\",\n  \"name\": \"jsonSimTest\",\n
        \ \"deliveryMode\": \"SIM\",\n  \"allowEnvelopePublish\": \"true\",\n  \"enableLog\":
        \"true\",\n  \"eventData\": {\n      \"version\": \"restv2.1\"\n  },\n  \"events\":
        [\n      \"envelope-sent\",\n      \"envelope-delivered\",\n      \"envelope-completed\"\n
        \ ]\n}\n```\n\nThe following sample request shows how to create a Recipient
        Connect configuration using JSON SIM:\n```\n{\n  \"configurationType\": \"customrecipient\",\n
        \ \"urlToPublishTo\": \"YOUR-WEBHOOK-URL\",\n  \"allUsers\": \"true\",\n  \"name\":
        \"jsonSimTest\",\n  \"deliveryMode\": \"SIM\",\n  \"allowEnvelopePublish\":
        \"true\",\n  \"enableLog\": \"true\",\n  \"eventData\": {\n      \"version\":
        \"restv2.1\"\n  },\n  \"events\": [\n      \"recipient-sent\",\n      \"recipient-completed\"\n
        \ ]\n}\n```\n\n</div></ds-step>\n\n<ds-step open=\"false\" hideIcon=\"true\">\n<h3>JSON
        Aggregate</h3>\n<div>\n\nSet `deliveryMode` to **aggregate** and `eventData.version`
        to **restv2.1.** Use the `envelopeEvents` or `recipientEvents` property to
        set the event statuses that will trigger your configuration.\n\n</div></ds-step>\n\n<ds-step
        open=\"false\" hideIcon=\"true\">\n<h3>XML Aggregate</h3>\n<div>\n\nSet `deliveryMode`
        to **aggregate.** Use the `envelopeEvents` or `recipientEvents` property to
        set the event statuses that will trigger your configuration.\n\n</div></ds-step>\n\n<ds-step
        open=\"false\" hideIcon=\"true\">\n<h3>XML SIM (Legacy apps only)</h3>\n<div>\n\n**Note:**
        This model [will be deprecated](https://www.docusign.com/blog/developers/docusign-connect-xml-sim-messaging-format-deprecated).
        \n\nSet `deliveryMode` to **SIM.** Use the `envelopeEvents` or `recipientEvents`
        property to set the event statuses that will trigger your configuration.\n\n</div></ds-step>\n</ds-column>\n\n##
        Troubleshooting\n\nIf your configuration is not working, check the following.\n\n*
        Connect must be enabled for your account to use this function.\n* If you are
        using `envelopeEvents` or `recipientEvents`, make sure that the event values
        are sentence case, not lowercase.\n* Make sure you have either set `allUsers`
        to **true** or set `userIds` to a non-empty array of IDs.\n* By default, this
        endpoint creates a disabled configuration. To enable the configuration immediately,
        set the body parameter `allowEnvelopePublish` to **true.** You can also enable
        the configuration in the UI.\n* To check if events are being emitted, set
        `enableLog` to **true** to view event logs in the Connect console.\n\n## Related
        topics\n\n* For more information about Connect, see the [DocuSign Connect
        guide](/platform/webhooks/connect/).\n* Use the MyAPICalls sample app to see
        an [example of this endpoint](https://myapicalls.sampleapps.docusign.com/scenario/6)
        using the JSON SIM model."
      operationId: Connect_PostConnectConfiguration
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: connectCustomConfiguration
          in: body
          required: false
          schema:
            "$ref": "#/definitions/connectCustomConfiguration"
          description: ""
      responses:
        "201":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/connectCustomConfiguration"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: createConfiguration
      x-ds-method: create
      x-ds-service: Connect
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/connect/{connectId}":
    get:
      tags:
        - ConnectConfigurations
      summary: Gets the details about a Connect configuration.
      description: |
        Retrieves the information for the specified DocuSign Connect configuration.

        **Note:** To use this function, you must be an account administrator and Connect must be enabled on your account.
      operationId: Connect_GetConnectConfig
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: connectId
          in: path
          description: The ID of the custom Connect configuration being accessed.
          required: true
          type: string
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/connectConfigResults"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getConfiguration
      x-ds-method: get
      x-ds-service: Connect
      x-ds-in-sdk: true
    delete:
      tags:
        - ConnectConfigurations
      summary: Deletes the specified Connect configuration.
      description: |+
        Deletes the specified DocuSign Connect configuration.

        **Note:** To use this function, you must be an account administrator and Connect must be enabled on your account.


      operationId: Connect_DeleteConnectConfig
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: connectId
          in: path
          description: The ID of the custom Connect configuration being accessed.
          required: true
          type: string
      responses:
        "200":
          description: A successful response or an error.
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: deleteConfiguration
      x-ds-method: delete
      x-ds-service: Connect
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/connect/{connectId}/all/users":
    get:
      tags:
        - ConnectConfigurations
      summary: Returns all users from the configured Connect service.
      operationId: Connect_GetConnectAllUsers
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: connectId
          in: path
          description: The ID of the custom Connect configuration being accessed.
          required: true
          type: string
        - name: count
          in: query
          required: false
          type: string
          description: The maximum number of results to return.
        - name: domain_users_only
          in: query
          required: false
          type: string
          description: ""
        - name: email_substring
          in: query
          required: false
          type: string
          description:
            Filters returned user records by full email address or a substring
            of email address.
        - name: start_position
          in: query
          required: false
          type: string
          description:
            The position within the total result set from which to start
            returning values. The value **thumbnail** may be used to return the page
            image.
        - name: status
          in: query
          required: false
          type: string
          description: The status of the item.
        - name: user_name_substring
          in: query
          required: false
          type: string
          description: |-
            Filters results based on a full or partial user name.

            **Note:** When you enter a partial user name, you do not use a wildcard character.
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/integratedConnectUserInfoList"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getConnectAllUsers
      description: |-
        Returns all users from the configured Connect service.

        **Note:** To use this function, you must be an account administrator and Connect must be enabled on your account.
      x-ds-method: getConnectAllUsers
      x-ds-service: Uncategorized
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/connect/{connectId}/users":
    get:
      tags:
        - ConnectConfigurations
      summary: Returns users from the configured Connect service.
      description: |-
        Returns users from the configured Connect service.

        **Note:** To use this function, you must be an account administrator and Connect must be enabled on your account.
      operationId: Connect_GetConnectUsers
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: connectId
          in: path
          description: The ID of the custom Connect configuration being accessed.
          required: true
          type: string
        - name: count
          in: query
          required: false
          type: string
          description: |+
            The maximum number of results to return.

            Use `start_position` to specify the number of results to skip.

        - name: email_substring
          in: query
          required: false
          type: string
          description:
            Filters returned user records by full email address or a substring
            of email address.
        - name: list_included_users
          in: query
          required: false
          type: string
          description: ""
        - name: start_position
          in: query
          required: false
          type: string
          description: |
            The zero-based index of the
            result from which to start returning results.

            Use with `count` to limit the number
            of results.

            The default value is `0`.
        - name: status
          in: query
          required: false
          type: string
          description:
            "Filters the results by user status.\nYou can specify a comma-separated\nlist
            of the following statuses:\n\n* ActivationRequired \n* ActivationSent \n*
            Active\n* Closed \n* Disabled\n"
        - name: user_name_substring
          in: query
          required: false
          type: string
          description: |-
            Filters results based on a full or partial user name.

            **Note:** When you enter a partial user name, you do not use a wildcard character.
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/integratedUserInfoList"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: connectUsers
      x-ds-method: listUsers
      x-ds-service: Connect
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/connect/envelopes/{envelopeId}/retry_queue":
    put:
      tags:
        - ConnectEvents
      summary: Republishes Connect information for the specified envelope.
      description: |-
        Republishes Connect information for the specified envelope.

        **Note:** To use this function, you must be an account administrator and Connect must be enabled on your account.
      operationId: ConnectPublish_PutConnectRetryByEnvelope
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: envelopeId
          in: path
          description: "The envelope's GUID. \n\nExample: `93be49ab-xxxx-xxxx-xxxx-f752070d71ec`\n"
          required: true
          type: string
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/connectFailureResults"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: retryEventForEnvelope
      x-ds-method: retryForEnvelope
      x-ds-service: Connect
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/connect/envelopes/publish/historical":
    post:
      tags:
        - EnvelopePublish
      summary: Submits a batch of historical envelopes for republish to a webhook.
      operationId: HistoricalEnvelopePublish_PostHistoricalEnvelopePublishTransaction
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: connectHistoricalEnvelopeRepublish
          in: body
          required: false
          schema:
            "$ref": "#/definitions/connectHistoricalEnvelopeRepublish"
          description: ""
      responses:
        "201":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/envelopePublishTransaction"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: createHistoricalEnvelopePublishTransaction
      x-ds-method: createHistoricalEnvelopePublishTransaction
      x-ds-service: Uncategorized
      description: |-
        This endpoint submits a batch of existing envelopes to a webhook of your choice. Set the webhook address with the `urlToPublishTo` request body parameter.

        This endpoint does not call an existing Connect configuration or create a new Connect listener to monitor new activity. It simply uses an ad hoc configuration to submit existing envelopes. You must include all the configuration data in the request body.

        The envelope data will always be transmitted in JSON format. XML, Salesforce, and eOriginal configuration types are not supported.

        Your request should match the following format:

        ```
        {
            "envelopes": ["4280f274-xxxx-xxxx-xxxx-b218b7eeda08", "8373a938-xxxx-xxxx-xxxx-e992a2abae01"],
            "config": {
                "configurationType":"custom",
                "name": "Test",
                "urlToPublishTo":"YOUR-WEBHOOK-URL",
                "allowEnvelopePublish": "true",
                "enableLog": "true",
                "requiresAcknowledgement": "true",
                "IncludeHMAC": "true",
                "SignMessageWithX509Cert": "true",
                "deliveryMode": "SIM",
                "eventData": {
                    "version": "restv2.1",
                    "format": "json",
                    "includedata": ["tabs","payment_tabs","custom_fields","powerform","recipients","folders","extensions","attachments", "prefill_tabs", "documents"]
                }
            }
        }
        ```

        If the request succeeds, it returns a 201 (Created) HTTP response code and the response body property `processingStatus` will be set to `processing`. You can then view the status of each historical republish request in the [Bulk Actions Log](https://support.docusign.com/s/document-item?bundleId=pik1583277475390&topicId=nvf1648497452396.html).
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/connect/envelopes/retry_queue":
    put:
      tags:
        - ConnectEvents
      summary: Republishes Connect information for multiple envelopes.
      description: |-
        Republishes Connect information for the  specified set of envelopes. The primary use is to republish Connect post failures by including envelope IDs for the envelopes that failed to post in the request. The list of envelope IDs that failed to post correctly can be retrieved by calling to [Connect::listEventLogs](/docs/esign-rest-api/reference/connect/connectevents/list/) retrieve the failure log.

        **Note:** To use this function, you must be an account administrator and Connect must be enabled on your account.
      operationId: ConnectPublish_PutConnectRetry
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: connectFailureFilter
          in: body
          required: false
          schema:
            "$ref": "#/definitions/connectFailureFilter"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/connectFailureResults"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: retryEventForEnvelopes
      x-ds-method: retryForEnvelopes
      x-ds-service: Connect
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/connect/failures":
    get:
      tags:
        - ConnectEvents
      summary: Gets the Connect failure log information.
      description: |-
        Retrieves the Connect failure log information. You can use this log to determine which envelopes failed to post, in order to create a republish request.

        **Note:** To use this function, you must be an account administrator and Connect must be enabled on your account.
      operationId: ConnectFailures_GetConnectLogs
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: from_date
          in: query
          required: false
          type: string
          description: |-
            The start date for a date range in UTC DateTime format.

            **Note:** If this property is null, no date filtering is applied.
        - name: to_date
          in: query
          required: false
          type: string
          description: |-
            The end of a search date range in UTC DateTime format. When you use this parameter, only templates created up to this date and time are returned.

            **Note:** If this property is null, the value defaults to the current date.
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/connectLogs"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: listEventFailureLogs
      x-ds-method: listFailures
      x-ds-service: Connect
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/connect/failures/{failureId}":
    delete:
      tags:
        - ConnectEvents
      summary: Deletes a Connect failure log entry.
      description: |-
        Deletes the Connect failure log information for the specified entry.

        **Note:** To use this function, you must be an account administrator and Connect must be enabled on your account.
      operationId: ConnectFailures_DeleteConnectFailureLog
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: failureId
          in: path
          description:
            The ID of the Connect post failure. Use `all` to delete all failures
            for the account.
          required: true
          type: string
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/connectDeleteFailureResult"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: deleteEventFailureLog
      x-ds-method: deleteFailure
      x-ds-service: Connect
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/connect/logs":
    get:
      tags:
        - ConnectEvents
      summary: Gets the Connect log.
      description: |-
        Retrieves a list of the 100 most recent Connect log entries for your account.

        The `enableLog` setting in the Connect configuration must be set to **true** to enable logging. Log entries are deleted after 15 days.

        **Note:** To use this function, you must be an account administrator and Connect must be enabled on your account.
      operationId: ConnectLog_GetConnectLogs
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: from_date
          in: query
          required: false
          type: string
          description: |-
            The start date for a date range in UTC DateTime format.

            **Note:** If this property is null, no date filtering is applied.
        - name: to_date
          in: query
          required: false
          type: string
          description: |-
            The end of a search date range in UTC DateTime format. When you use this parameter, only templates created up to this date and time are returned.

            **Note:** If this property is null, the value defaults to the current date.
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/connectLogs"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: listEventLogs
      x-ds-method: list
      x-ds-service: Connect
      x-ds-in-sdk: true
    delete:
      tags:
        - ConnectEvents
      summary: Deletes a list of Connect log entries.
      description: |-
        Deletes a list of Connect log entries for your account.

        **Note:** To use this function, you must be an account administrator and Connect must be enabled on your account.
      operationId: ConnectLog_DeleteConnectLogs
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
      responses:
        "200":
          description: A successful response or an error.
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: deleteEventLogs
      x-ds-method: deleteList
      x-ds-service: Connect
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/connect/logs/{logId}":
    get:
      tags:
        - ConnectEvents
      summary: Gets a Connect log entry.
      description: |-
        Retrieves the specified Connect log entry for your account.

        The `enableLog` setting in the Connect configuration must be set to **true** to enable logging.
        If logging is not enabled, then no log entries are recorded.

        **Note:** To use this function, you must be an account administrator and Connect must be enabled on your account.
      operationId: ConnectLog_GetConnectLog
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: logId
          in: path
          description: The ID of the Connect log entry.
          required: true
          type: string
        - name: additional_info
          in: query
          description: When **true,** the response includes the `connectDebugLog` information.
          required: false
          type: string
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/connectLog"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getEventLog
      x-ds-method: get
      x-ds-service: Connect
      x-ds-in-sdk: true
    delete:
      tags:
        - ConnectEvents
      summary: Deletes a specified Connect log entry.
      description: |-
        Deletes a specified entry from the Connect Log.

        **Note:** To use this function, you must be an account administrator and Connect must be enabled on your account.
      operationId: ConnectLog_DeleteConnectLog
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: logId
          in: path
          description: The ID of the Connect log entry.
          required: true
          type: string
      responses:
        "200":
          description: A successful response or an error.
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: deleteEventLog
      x-ds-method: delete
      x-ds-service: Connect
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/connect/oauth":
    get:
      tags:
        - ConnectConfigurations
      summary: Retrieves the Connect OAuth information for the account.
      operationId: ConnectOAuthConfig_GetConnectOAuthConfig
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/connectOAuthConfig"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getConnectOAuthConfig
      x-ds-method: getConnectOAuthConfig
      x-ds-service: Uncategorized
      description: |
        Gets the Connect OAuth configuration for the specified account.

        **Note:** To use this function, you must be an account administrator and Connect must be enabled on your account.

        ## Related topics:
        - [OAuth for DocuSign Connect](/platform/webhooks/connect/validation-and-security/oauth-connect/)
      x-ds-in-sdk: true
    put:
      tags:
        - ConnectConfigurations
      summary:
        "Updates the existing Connect OAuth configuration for the account.

        "
      operationId: ConnectOAuthConfig_PutConnectOAuthConfig
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: connectOAuthConfig
          in: body
          required: false
          schema:
            "$ref": "#/definitions/connectOAuthConfig"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/connectOAuthConfig"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: updateConnectOAuthConfig
      x-ds-method: updateConnectOAuthConfig
      x-ds-service: Uncategorized
      description: ""
      x-ds-in-sdk: true
    post:
      tags:
        - ConnectConfigurations
      summary: Set up Connect OAuth for the specified account.
      operationId: ConnectOAuthConfig_PostConnectOAuthConfig
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: connectOAuthConfig
          in: body
          required: false
          schema:
            "$ref": "#/definitions/connectOAuthConfig"
          description: ""
      responses:
        "201":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/connectOAuthConfig"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: createConnectOAuthConfig
      x-ds-method: createConnectOAuthConfig
      x-ds-service: Uncategorized
      description: |
        Sets up Connect OAuth for the specified account using an authorization server of your choice. To use this endpoint, get the client ID and client secret from your authorization server.

        When you call this endpoint, DocuSign requests an access token from your authorization server. DocuSign will use that token in the Authorization HTTP header of your account's Connect messages. Finally, your listener will be responsible for validating the token by calling the authorization server.

        **Note:** To use this function, you must be an account administrator and Connect must be enabled on your account.

        ## Related topics:
        - [OAuth for DocuSign Connect](/platform/webhooks/connect/validation-and-security/oauth-connect/)
      x-ds-in-sdk: true
    delete:
      tags:
        - ConnectConfigurations
      summary: Delete the Connect OAuth configuration.
      operationId: ConnectOAuthConfig_DeleteConnectOAuthConfig
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
      responses:
        "200":
          description: A successful response or an error.
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: deleteConnectOAuthConfig
      x-ds-method: deleteConnectOAuthConfig
      x-ds-service: Uncategorized
      description: |
        Deletes the Connect OAuth configuration for the specified account.

        **Note:** To use this function, you must be an account administrator and Connect must be enabled on your account.

        ## Related topics:
        - [OAuth for DocuSign Connect](/platform/webhooks/connect/validation-and-security/oauth-connect/)
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/consumer_disclosure":
    get:
      tags:
        - AccountConsumerDisclosures
      summary:
        Gets the default Electronic Record and Signature Disclosure for an
        account.
      description:
        "Retrieves the default, HTML-formatted Electronic Record and Signature
        Disclosure (ERSD) associated with the account. \n\nThis is the default ERSD
        disclosure that DocuSign provides for the convenience of U.S.-based customers
        only. This default disclosure is only valid for transactions between U.S.-based
        parties.\n\nTo set the language of the disclosure that you want to retrieve,
        use the optional `langCode` query parameter."
      operationId: ConsumerDisclosure_GetConsumerDisclosure
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: langCode
          in: query
          description: |-
            The code for the signer language version of the disclosure that you want to retrieve. The following languages are supported:

            - Arabic (`ar`)
            - Bulgarian (`bg`)
            - Czech (`cs`)
            - Chinese Simplified (`zh_CN`)
            - Chinese Traditional (`zh_TW`)
            - Croatian (`hr`)
            - Danish (`da`)
            - Dutch (`nl`)
            - English US (`en`)
            - English UK (`en_GB`)
            - Estonian (`et`)
            - Farsi (`fa`)
            - Finnish (`fi`)
            - French (`fr`)
            - French Canadian (`fr_CA`)
            - German (`de`)
            - Greek (`el`)
            - Hebrew (`he`)
            - Hindi (`hi`)
            - Hungarian (`hu`)
            - Bahasa Indonesian (`id`)
            - Italian (`it`)
            - Japanese (`ja`)
            - Korean (`ko`)
            - Latvian (`lv`)
            - Lithuanian (`lt`)
            - Bahasa Melayu (`ms`)
            - Norwegian (`no`)
            - Polish (`pl`)
            - Portuguese (`pt`)
            - Portuguese Brazil (`pt_BR`)
            - Romanian (`ro`)
            - Russian (`ru`)
            - Serbian (`sr`)
            - Slovak (`sk`)
            - Slovenian (`sl`)
            - Spanish (`es`)
            - Spanish Latin America (`es_MX`)
            - Swedish (`sv`)
            - Thai (`th`)
            - Turkish (`tr`)
            - Ukrainian (`uk`)
            - Vietnamese (`vi`)

            Additionally, you can automatically detect the browser language being used by the viewer and display the disclosure in that language by setting the value to `browser`.
          required: false
          type: string
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/AccountConsumerDisclosures"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getConsumerDisclosureDefault
      x-ds-method: getDefault
      x-ds-service: Accounts
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/consumer_disclosure/{langCode}":
    get:
      tags:
        - AccountConsumerDisclosures
      summary: Gets the Electronic Record and Signature Disclosure for an account.
      description:
        "Retrieves the HTML-formatted Electronic Record and Signature Disclosure
        (ERSD) associated with the account. \n\nTo set the language of the disclosure
        that you want to retrieve, use the optional `langCode` query parameter.\n\n**Note:**
        The text of the default disclosure is always in English, but if you are using
        a custom disclosure and have created versions of it in different signer languages,
        you can use the `langCode` parameter to specify the signer language version
        that you want to retrieve.  "
      operationId: ConsumerDisclosure_GetConsumerDisclosureLangCode
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: langCode
          in: path
          description: |-
            The code for the signer language version of the disclosure that you want to retrieve. The following languages are supported:

            - Arabic (`ar`)
            - Bulgarian (`bg`)
            - Czech (`cs`)
            - Chinese Simplified (`zh_CN`)
            - Chinese Traditional (`zh_TW`)
            - Croatian (`hr`)
            - Danish (`da`)
            - Dutch (`nl`)
            - English US (`en`)
            - English UK (`en_GB`)
            - Estonian (`et`)
            - Farsi (`fa`)
            - Finnish (`fi`)
            - French (`fr`)
            - French Canadian (`fr_CA`)
            - German (`de`)
            - Greek (`el`)
            - Hebrew (`he`)
            - Hindi (`hi`)
            - Hungarian (`hu`)
            - Bahasa Indonesian (`id`)
            - Italian (`it`)
            - Japanese (`ja`)
            - Korean (`ko`)
            - Latvian (`lv`)
            - Lithuanian (`lt`)
            - Bahasa Melayu (`ms`)
            - Norwegian (`no`)
            - Polish (`pl`)
            - Portuguese (`pt`)
            - Portuguese Brazil (`pt_BR`)
            - Romanian (`ro`)
            - Russian (`ru`)
            - Serbian (`sr`)
            - Slovak (`sk`)
            - Slovenian (`sl`)
            - Spanish (`es`)
            - Spanish Latin America (`es_MX`)
            - Swedish (`sv`)
            - Thai (`th`)
            - Turkish (`tr`)
            - Ukrainian (`uk`)
            - Vietnamese (`vi`)

            Additionally, you can automatically detect the browser language being used by the viewer and display the disclosure in that language by setting the value to `browser`.
          required: true
          type: string
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/AccountConsumerDisclosures"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getConsumerDisclosure
      x-ds-method: get
      x-ds-service: Accounts
      x-ds-in-sdk: true
    put:
      tags:
        - AccountConsumerDisclosures
      summary: Updates the Electronic Record and Signature Disclosure for an account.
      operationId: ConsumerDisclosure_PutConsumerDisclosure
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: langCode
          in: path
          description: |-
            The code for the signer language version of the disclosure that you want to update. The following languages are supported:

            - Arabic (`ar`)
            - Bulgarian (`bg`)
            - Czech (`cs`)
            - Chinese Simplified (`zh_CN`)
            - Chinese Traditional (`zh_TW`)
            - Croatian (`hr`)
            - Danish (`da`)
            - Dutch (`nl`)
            - English US (`en`)
            - English UK (`en_GB`)
            - Estonian (`et`)
            - Farsi (`fa`)
            - Finnish (`fi`)
            - French (`fr`)
            - French Canadian (`fr_CA`)
            - German (`de`)
            - Greek (`el`)
            - Hebrew (`he`)
            - Hindi (`hi`)
            - Hungarian (`hu`)
            - Bahasa Indonesian (`id`)
            - Italian (`it`)
            - Japanese (`ja`)
            - Korean (`ko`)
            - Latvian (`lv`)
            - Lithuanian (`lt`)
            - Bahasa Melayu (`ms`)
            - Norwegian (`no`)
            - Polish (`pl`)
            - Portuguese (`pt`)
            - Portuguese Brazil (`pt_BR`)
            - Romanian (`ro`)
            - Russian (`ru`)
            - Serbian (`sr`)
            - Slovak (`sk`)
            - Slovenian (`sl`)
            - Spanish (`es`)
            - Spanish Latin America (`es_MX`)
            - Swedish (`sv`)
            - Thai (`th`)
            - Turkish (`tr`)
            - Ukrainian (`uk`)
            - Vietnamese (`vi`)

            Additionally, you can automatically detect the browser language being used by the viewer and display the disclosure in that language by setting the value to `browser`.
          required: true
          type: string
        - name: include_metadata
          in: query
          required: false
          type: string
          description:
            "(Optional) When true, the response includes metadata indicating
            which properties are editable."
        - name: consumerDisclosure
          in: body
          required: false
          schema:
            "$ref": "#/definitions/consumerDisclosure"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/consumerDisclosure"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: updateConsumerDisclosure
      description:
        "Account administrators can use this method to perform the following
        tasks:\n\n- Customize values in the default disclosure.\n- Switch to a custom
        disclosure that uses your own text and HTML formatting.\n- Change values in
        your existing consumer disclosure. \n\nTo specify the signer language version
        of the disclosure that you are updating, use the optional `langCode` query
        parameter.\n\n**Note:** Only account administrators can use this method. Each
        time you change the disclosure content, all unsigned recipients of outstanding
        documents will be required to accept a new version. \n\n## Updating the default
        disclosure\n\nWhen you update the default disclosure, you can edit all properties
        except for the following ones:\n\n- `accountEsignId`: This property is read-only.\n-
        `custom`: The default value is **false.** Editing this property causes the
        default disclosure to switch to a custom disclosure.\n- `esignAgreement`:
        This property is read-only.\n- `esignText`: You cannot edit this property
        when `custom` is set to **false.** The API returns a 200 OK HTTP response,
        but does not update the `esignText`.\n- Metadata properties: These properties
        are read-only.\n\n**Note:** The text of the default disclosure is always in
        English.\n\n## Switching to a custom disclosure\n\nTo switch to a custom disclosure,
        set the `custom` property to **true** and customize the value for the `eSignText`
        property. \n\nYou can also edit all of the other properties except for the
        following ones:\n\n- `accountEsignId`: This property is read-only.\n- `esignAgreement`:
        This property is read-only.\n- Metadata properties: These properties are read-only.\n\n**Note:**
        When you use a custom disclosure, you can create versions of it in different
        signer languages and se the `langCode` parameter to specify the signer language
        version that you are updating.\n\n**Important:**  When you switch from a default
        to a custom disclosure, note the following information:\n\n- You will not
        be able to return to using the default disclosure.\n- Only the disclosure
        for the currently selected signer language is saved. DocuSign will not automatically
        translate your custom disclosure. You must create a disclosure for each language
        that your signers use.\n\n## Updating a custom disclosure\n\nWhen you update
        a custom disclosure, you can update all of the properties except for the following
        ones:\n\n- `accountEsignId`: This property is read-only. \n- `esignAgreement`:
        This property is read-only.\n- Metadata properties: These properties are read-only.\n\n**Important:**
        Only the disclosure for the currently selected signer language is saved. DocuSign
        will not automatically translate your custom disclosure. You must create a
        disclosure for each language that your signers use.\n\n"
      x-ds-method: update
      x-ds-service: Accounts
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/contacts":
    put:
      tags:
        - Contacts
      summary: Updates one or more contacts.
      operationId: Contacts_PutContacts
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: contactModRequest
          in: body
          required: false
          schema:
            "$ref": "#/definitions/contactModRequest"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/contactUpdateResponse"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: putContacts
      description: This method updates one or more contacts associated with an account.
      x-ds-method: update
      x-ds-service: Users
      x-ds-in-sdk: true
    post:
      tags:
        - Contacts
      summary: Add contacts to a contacts list.
      operationId: Contacts_PostContacts
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: contactModRequest
          in: body
          required: false
          schema:
            "$ref": "#/definitions/contactModRequest"
          description: ""
      responses:
        "201":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/contactUpdateResponse"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: postContacts
      description: This method adds multiple contacts into a contacts list.
      x-ds-method: create
      x-ds-service: Users
      x-ds-in-sdk: true
    delete:
      tags:
        - Contacts
      summary: Deletes multiple contacts from an account.
      operationId: Contacts_DeleteContacts
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: contactModRequest
          in: body
          required: false
          schema:
            "$ref": "#/definitions/contactModRequest"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/contactUpdateResponse"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: deleteContacts
      description: This method deletes multiple contacts associated with an account.
      x-ds-method: deleteList
      x-ds-service: Users
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/contacts/{contactId}":
    get:
      tags:
        - Contacts
      summary: Gets one or more contacts.
      operationId: Contacts_GetContactById
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: contactId
          in: path
          description: |-
            The ID of a contact person in the account's address book.

            **Note:** To return all contacts, omit this parameter. It is not required.
          required: true
          type: string
        - name: cloud_provider
          in: query
          required: false
          type: string
          description: |-
            (Optional) The cloud provider from which to retrieve the contacts. Valid values are:

            - `rooms`
            - `docusignCore` (default)
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/contactGetResponse"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getContactById
      description: |-
        This method returns one or more contacts
        associated with a DocuSign account. You can also
        retrieve contacts from connected [cloud storage][CloudStorage] providers by using the
        `cloud_provider` query parameter. By default,
        contacts are retrieved from the DocuSign account's
        default address book.

        To return a specific contact, use the `contactId`
        query parameter. To return all contacts associated
        with an account, omit this parameter.

        [CloudStorage]: /docs/esign-rest-api/reference/cloudstorage/
      x-ds-method: get
      x-ds-service: Users
      x-ds-in-sdk: true
    delete:
      tags:
        - Contacts
      summary: Deletes a contact.
      operationId: Contacts_DeleteContactWithId
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: contactId
          in: path
          description: The ID of a contact person in the account's address book.
          required: true
          type: string
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/contactUpdateResponse"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: deleteContactWithId
      description: This method deletes a contact associated with an account.
      x-ds-method: delete
      x-ds-service: Users
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/custom_fields":
    get:
      tags:
        - AccountCustomFields
      summary: Gets a list of custom fields.
      description:
        This method returns a list of the envelope and document custom
        fields associated with an account.
      operationId: AccountCustomFields_GetAccountCustomFields
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/AccountCustomFields"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: listCustomFields
      x-ds-method: list
      x-ds-service: Accounts
      x-ds-in-sdk: true
    post:
      tags:
        - AccountCustomFields
      summary: Creates an account custom field.
      operationId: AccountCustomFields_PostAccountCustomFields
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: apply_to_templates
          in: query
          required: false
          type: string
          description:
            "(Optional) When **true,** the new custom field is applied to
            all of the templates on the account."
        - name: customField
          in: body
          required: false
          schema:
            "$ref": "#/definitions/customField"
          description: ""
      responses:
        "201":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/AccountCustomFields"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: createCustomField
      description:
        This method creates a custom field and makes it available for all
        new envelopes associated with an account.
      x-ds-method: create
      x-ds-service: Accounts
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/custom_fields/{customFieldId}":
    put:
      tags:
        - AccountCustomFields
      summary: Updates an account custom field.
      operationId: AccountCustomFields_PutAccountCustomFields
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: customFieldId
          in: path
          required: true
          type: string
          description: The ID of the custom field.
        - name: apply_to_templates
          in: query
          required: false
          type: string
          description: ""
        - name: customField
          in: body
          required: false
          schema:
            "$ref": "#/definitions/customField"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/AccountCustomFields"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: updateCustomField
      description: This method updates an existing account custom field.
      x-ds-method: update
      x-ds-service: Accounts
      x-ds-in-sdk: true
    delete:
      tags:
        - AccountCustomFields
      summary: Deletes an account custom field.
      operationId: AccountCustomFields_DeleteAccountCustomFields
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: customFieldId
          in: path
          required: true
          type: string
          description: The ID of the custom field.
        - name: apply_to_templates
          in: query
          required: false
          type: string
          description: ""
      responses:
        "200":
          description: A successful response or an error.
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: deleteCustomField
      description: This method deletes an existing account custom field.
      x-ds-method: delete
      x-ds-service: Accounts
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/envelopes":
    get:
      tags:
        - Envelopes
      summary: Search for specific sets of envelopes by using search filters.
      description: |
        This method lets you
        [search for envelopes](/docs/esign-rest-api/esign101/concepts/envelopes/)
        in your accounts.
        A large set of filters let you narrow the scope of your search
        by date,
        by envelope ID,
        or by status codes.
        Your request must include one or more of the following parameters:

        * `from_date`
        * `envelope_ids`
        * `transaction_ids`

        <ds-inlinemessage kind="information">
        This method excludes envelopes older than six months.
        </ds-inlinemessage>

        To avoid unnecessary database queries, the DocuSign
        signature platform first checks requests to ensure that the
        filter set supplied does not result in a zero-size response
        before querying the database.

        For example, for a request with a `from_to_status` of
        `delivered` and a current `status` of `created,sent`,
        DocuSign will always return an empty list.
        This is because the request translates to: find the
        envelopes that were delivered between the `from_date` and
        `to_date` dates that have a current status of `created` or
        `sent`. Since an envelope that has been delivered can
        never have a status of `created` or `sent`, a zero-size
        response would be generated.
        In this case, DocuSign does not query the database
        and returns an empty list immediately.

        Getting envelope status using `transaction_ids` is useful
        for offline signing situations where it can be used
        determine if an envelope was created or not. It can be used
        for the cases where a network connection was lost, before
        the envelope status could be returned.

        The following table shows the valid current envelope
        statuses (`status` parameter) for the different status
        qualifiers (`from_to_status` parameter) in the request. If
        the status and status qualifiers in the API request do not
        contain any of the values shown in the Valid Current
        Statuses column, then an empty list is returned.

        Client applications should check that the statuses (`status`
        parameter) they are requesting make sense for a given
        `from_to_status` parameter value.

        | Status Qualifier<br>(`from_to_status`) | Effective Status Qualifier | Valid Current Statuses                                                      |
        | :------------------------------------- | :------------------------- | :-------------------------------------------------------------------------- |
        | any (changed)                          | StatusChanged              | any, created, sent, delivered, signed, completed, declined, voided, deleted |
        | created                                | Created                    | any, created, sent, delivered, signed, completed, declined, voided, deleted |
        | sent                                   | Sent                       | any, sent, delivered, signed, completed, declined, voided, deleted          |
        | delivered                              | StatusChanged              | any, delivered, signed, completed, declined, voided, deleted                |
        | signed                                 | StatusChanged              | any, signed, completed, declined, voided, deleted                           |
        | completed                              | Completed                  | any, completed, declined, voided, deleted                                   |
        | declined                               | StatusChanged              | any, declined, voided, deleted                                              |
        | timedout<br>always return zero results | StatusChanged              | any, voided, deleted                                                        |
        | voided                                 | Voided                     | any, voided, deleted                                                        |
        | deleted                                | StatusChanged              | any, deleted                                                                |

        ## Extraneous results

        In some cases, a request for a specific envelope status will
        include envelopes with additional statuses. For example, in
        a request with a `from_date` of 2017-01-01, a `to_date` of
        2017-01-07 and the status qualifier (`from_to_status`) set
        to `delivered`, the response set might contain envelopes
        that were created during that time period, but not delivered
        during the time period. As a workaround, check the envelope
        status values in the result set as needed.


        ### Related topics

        - [Searching for envelopes](/docs/esign-rest-api/esign101/concepts/envelopes/search/)
        - [How to list envelope status changes](/docs/esign-rest-api/how-to/list-envelope-status-changes/)
      operationId: Envelopes_GetEnvelopes
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: ac_status
          in: query
          description:
            "Specifies the Authoritative Copy Status for the envelopes. Valid
            values: Unknown, Original, Transferred, AuthoritativeCopy, AuthoritativeCopyExportPending,
            AuthoritativeCopyExported, DepositPending, Deposited, DepositedEO, or DepositFailed."
          required: false
          type: string
        - name: block
          in: query
          required: false
          type: string
          description: "Reserved for DocuSign.

            "
        - name: cdse_mode
          in: query
          required: false
          type: string
          description: "Reserved for DocuSign.

            "
        - name: continuation_token
          in: query
          required: false
          type: string
          description: Reserved for DocuSign.
        - name: count
          in: query
          required: false
          type: string
          description: |
            The maximum number of results to return.

            Use `start_position` to specify the number of results to skip.
        - name: custom_field
          in: query
          description:
            "Optional. Specifies an envelope custom field name and value
            searched for in the envelopes. Format: `custom_envelope_field_name=desired_value`\n\nExample:
            If you have an envelope custom field named \"Region\" and you want to search
            for all envelopes where the value is \"West\" you would use set this parameter
            to `Region=West`. \n \n"
          required: false
          type: string
        - name: email
          in: query
          required: false
          type: string
          description: |
            Limit results to envelopes
            sent by the account user
            with this email address.

            `user_name` must be given as well,
            and both `email` and `user_name`
            must refer to an existing account user.
        - name: envelope_ids
          in: query
          required: false
          type: string
          description: Comma separated list of `envelopeId` values.
        - name: exclude
          in: query
          required: false
          type: string
          description: |-
            Excludes information from the response. Enter  as a comma-separated list (e.g., `folders,powerforms`). Valid values are:

            - `recipients`
            - `powerforms`
            - `folders`
        - name: folder_ids
          in: query
          required: false
          type: string
          description:
            "Returns the envelopes from specific folders. Enter as a comma-separated
            list of either valid folder Guids or the following values: \n\n- `awaiting_my_signature`\n-
            `completed`\n- `draft`\n- `drafts`\n- `expiring_soon`\n- `inbox`\n- `out_for_signature`\n-
            `recyclebin`\n- `sentitems`\n- `waiting_for_others`"
        - name: folder_types
          in: query
          required: false
          type: string
          description:
            "A comma-separated list of folder types you want to retrieve
            envelopes from. Valid values are: \n\n- `normal`\n- `inbox`\n- `sentitems`\n-
            `draft`\n- `templates`"
        - name: from_date
          in: query
          description: |-
            Specifies the date and time
            to start looking for status changes.
            This parameter is required
            unless `envelopeIds` or `transactionIds`
            are set.


            Although you can use any date format
            supported by the .NET system library's
            [`DateTime.Parse()`][msoft] function,
            DocuSign recommends
            using [ISO 8601][] format dates
            with an explicit time zone offset
            If you do not provide
            a time zone offset,
            the method uses the server's time zone.

            For example, the following dates and times refer to the same instant:

            * `2017-05-02T01:44Z`
            * `2017-05-01T21:44-04:00`
            * `2017-05-01T18:44-07:00`


            [msoft]: https://docs.microsoft.com/en-us/dotnet/api/system.datetime.parse?redirectedfrom=MSDN&view=net-5.0#overloads
            [ISO 8601]: https://en.wikipedia.org/wiki/ISO_8601
          required: false
          type: string
        - name: from_to_status
          in: query
          description:
            "This is the status type checked for in the `from_date`/`to_date`
            period. If `changed` is specified, then envelopes that changed status during
            the period are found. If for example, `created` is specified, then envelopes
            created during the period are found. Default is `changed`. \n\nPossible
            values are: Voided, Changed, Created, Deleted, Sent, Delivered, Signed,
            Completed, Declined, TimedOut and Processing."
          required: false
          type: string
        - name: include
          in: query
          required: false
          type: string
          description: |
            Specifies additional information to return  about the envelopes.
            Use a comma-separated list, such as `folders, recipients` to specify information.
            Valid values are:

            - `custom_fields`: The custom fields associated with the envelope.
            - `documents`: The documents associated with the envelope.
            - `attachments`: The attachments associated with the envelope.
            - `extensions`: Information about the email settings associated with the envelope.
            - `folders`: The folders where the envelope exists.
            - `recipients`: The recipients associated with the envelope.
            - `payment_tabs`: The payment tabs associated with the envelope.
        - name: include_purge_information
          in: query
          required: false
          type: string
          description:
            When **true,** information about envelopes that have been deleted
            is included in the response.
        - name: intersecting_folder_ids
          in: query
          required: false
          type: string
          description:
            "A comma-separated list of folders that you want want to get
            envelopes from. Valid values are: \n\n- `normal`\n- `inbox`\n- `sentitems`\n-
            `draft`\n- `templates`"
        - name: last_queried_date
          in: query
          required: false
          type: string
          description:
            "Returns envelopes that were modified prior to the specified
            date and time. \n\nExample: `2020-05-09T21:56:12.2500000Z`"
        - name: order
          in: query
          required: false
          type: string
          description:
            Returns envelopes in either ascending (`asc`) or descending (`desc`)
            order.
        - name: order_by
          in: query
          required: false
          type: string
          description: |-
            Sorts results according to a specific property. Valid values are:

            - `last_modified`
            - `action_required`
            - `created`
            - `completed`
            - `envelope_name`
            - `expire`
            - `sent`
            - `signer_list`
            - `status`
            - `subject`
            - `user_name`
            - `status_changed`
            - `last_modified`
        - name: powerformids
          in: query
          required: false
          type: string
          description: A comma-separated list of `PowerFormId` values.
        - name: query_budget
          in: query
          required: false
          type: string
          description:
            The time in seconds that the query should run before returning
            data.
        - name: requester_date_format
          in: query
          required: false
          type: string
          description: ""
        - name: search_mode
          in: query
          required: false
          type: string
          description: ""
        - name: search_text
          in: query
          required: false
          type: string
          description:
            Free text search criteria that you can use to filter the list
            of envelopes that is returned.
        - name: start_position
          in: query
          required: false
          type: string
          description: |
            The zero-based index of the
            result from which to start returning results.

            Use with `count` to limit the number
            of results.

            The default value is `0`.
        - name: status
          in: query
          description: |
            A comma-separated list of current envelope statuses to included in the response. Possible values are:

            * `completed`
            * `created`
            * `declined`
            * `deleted`
            * `delivered`
            * `processing`
            * `sent`
            * `signed`
            * `timedout`
            * `voided`

            The `any` value is equivalent to any status.
          required: false
          type: string
        - name: to_date
          in: query
          description: |
            Specifies the date and time
            to stop looking for status changes.
            The default is the current date and time.

            Although you can use any date format
            supported by the .NET system library's
            [`DateTime.Parse()`][msoft] function,
            DocuSign recommends
            using [ISO 8601][] format dates
            with an explicit time zone offset
            If you do not provide
            a time zone offset,
            the method uses the server's time zone.

            For example, the following dates and times refer to the same instant:

            * `2017-05-02T01:44Z`
            * `2017-05-01T21:44-04:00`
            * `2017-05-01T18:44-07:00`


            [msoft]: https://docs.microsoft.com/en-us/dotnet/api/system.datetime.parse?redirectedfrom=MSDN&view=net-5.0#overloads
            [ISO 8601]: https://en.wikipedia.org/wiki/ISO_8601
          required: false
          type: string
        - name: transaction_ids
          in: query
          description:
            "If included in the query string, this is a comma separated list
            of envelope `transactionId`s. \n\nIf included in the `request_body`, this
            is a list of envelope `transactionId`s. \n\n###### Note: `transactionId`s
            are only valid in the DocuSign system for seven days.\n"
          required: false
          type: string
        - name: user_filter
          in: query
          required: false
          type: string
          description: |-
            Returns envelopes where the current user is the recipient, the sender, or the recipient only. (For example, `user_filter=sender`.) Valid values are:

            - `sender`
            - `recipient`
            - `recipient_only`
        - name: user_id
          in: query
          required: false
          type: string
          description:
            The ID of the user who created the envelopes to be retrieved.
            Note that an account can have multiple users, and any user with account
            access can retrieve envelopes by user_id from the account.
        - name: user_name
          in: query
          required: false
          type: string
          description: |
            Limit results to envelopes
            sent by the account user
            with this user name.

            `email` must be given as well,
            and both `email` and `user_name`
            must refer to an existing account user.
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/envelopesInformation"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: listStatusChanges
      x-ds-method: listStatusChanges
      x-ds-service: Envelopes
      x-ds-in-sdk: true
    post:
      tags:
        - Envelopes
      summary: Creates an envelope.
      description: |+
        Creates and sends an envelope or creates a draft envelope.
        Envelopes are fundamental resources in the DocuSign platform.


        With this method you can:

        * Create and send an envelope
          with [documents][], [recipients][], and [tabs][].
        * [Create and send an envelope from a template](/docs/esign-rest-api/esign101/concepts/templates/).
        * [Create and send an envelope from
          a combination of documents and templates](/docs/esign-rest-api/esign101/concepts/templates/composite/).
        * Create a draft envelope.


        When you use this method
        to create and send an envelope
        in a single request,
        the following parameters in the request body (an [`envelopeDefinition`][envelopeDefinition] object) are required:

        | Parameter      | Description |
        | :--------      | :---------- |
        | `status`       | Set to `sent` to send the envelope to recipients.<br>Set to `created` (or don't set at all) to save the envelope as a draft. |
        | `emailSubject` | The subject of the email used to send the envelope. |
        | `documents`    | The [documents][] to be signed. |
        | `recipients`   | The email addresses of the envelope [recipients][]. |


        When you create an envelope by using a
        [composite template](/docs/esign-rest-api/esign101/concepts/templates/composite/),
        you should specify the envelope custom fields in the inline template.
        Any custom fields that you specify at the root level are ignored.

        If the envelope has a workflow definition
        and the `workflowStatus` is `paused`,
        the envelope will not be sent immediately,
        even if the envelope's `status` is `sent`.


        ### Related topics

        [Envelope][envelopes] and [template][templates]
        objects along with [documents][documents],
        [recipients][recipients], and [tabs][tabs]
        are the five object models at the core of the eSignature API.
        The [eSignature concepts guide](/docs/esign-rest-api/esign101/concepts/)
        describes how the five object models work together.

        The following how-to articles contain
        practical examples that show you how to
        to
        configure this method's
        [`envelopeDefinition`][envelopeDefinition] request body
        to perform common tasks.

        Requesting a signature

        - [How to request a signature by email](/docs/esign-rest-api/how-to/request-signature-email-remote/)
        - [How to request a signature through your app](/docs/esign-rest-api/how-to/request-signature-in-app-embedded/)
        - [How to request a signature by email using a template](/docs/esign-rest-api/how-to/request-signature-template-remote/)
        - [How to request a signature using a composite template](/docs/esign-rest-api/how-to/request-signature-composite-template-embedded/)
        - [How to request a signature by SMS delivery](/docs/esign-rest-api/how-to/request-signature-sms/)
        - [How to send a request for payment](/docs/esign-rest-api/how-to/request-a-payment/)
        - [How to send an envelope to an In Person Signer](/docs/esign-rest-api/how-to/send-envelope-to-in-person-signer/)
        - [How to request a signature through your app (embedded signing) with a CFR Part 11 account](/docs/esign-rest-api/how-to/request-signature-in-app-embedded-cfrpart11/)

        Working with envelopes and templates

        - [How to get envelope information](/docs/esign-rest-api/how-to/get-envelope-information/)
        - [How to list envelope recipients](/docs/esign-rest-api/how-to/get-envelope-recipients/)
        - [How to list envelope status changes](/docs/esign-rest-api/how-to/list-envelope-status-changes/)
        - [How to create a template](/docs/esign-rest-api/how-to/create-template/)
        - [How to send an envelope via your app](/docs/esign-rest-api/how-to/embedded-sending/)
        - [How to bulk send envelopes](/docs/esign-rest-api/how-to/bulk-send-envelopes/)

        Working with advanced recipient routing

        - [How to pause a signature workflow](/docs/esign-rest-api/how-to/pause-workflow/)
        - [How to unpause a signature workflow](/docs/esign-rest-api/how-to/unpause-workflow/)
        - [How to use conditional recipients](/docs/esign-rest-api/how-to/use-conditional-recipients/)
        - [How to schedule an envelope](/docs/esign-rest-api/how-to/schedule-an-envelope/)
        - [How to send an envelope with delayed routing](/docs/esign-rest-api/how-to/send-envelope-with-delayed-routing/)

        Working with documents

        - [How to list envelope documents](/docs/esign-rest-api/how-to/list-envelope-documents/)
        - [How to download envelope documents](/docs/esign-rest-api/how-to/download-envelope-documents/)
        - [How to attach documents via binary transfer](/docs/esign-rest-api/how-to/send-binary/)
        - [How to create a signable HTML document](/docs/esign-rest-api/how-to/creating-signable-html/)
        - [How to convert a PDF file into a signable HTML document](/docs/esign-rest-api/how-to/converting-pdf/)
        - [How to set document visibility for envelope recipients](/docs/esign-rest-api/how-to/set-document-visibility/)

        Working with tabs

        - [How to get envelope tab values](/docs/esign-rest-api/how-to/get-envelope-tab-values/)
        - [How to get envelope custom tab values](/docs/esign-rest-api/how-to/get-envelope-custom-tab-values/)
        - [How to set envelope tab values](/docs/esign-rest-api/how-to/set-envelope-tab-values/)
        - [How to set tab values in a template](/docs/esign-rest-api/how-to/set-template-tab-values/)

        Working with brands

        - [How to create a brand](/docs/esign-rest-api/how-to/create-brand/)
        - [How to apply a brand to an envelope](/docs/esign-rest-api/how-to/apply-brand-to-envelope/)
        - [How to apply a brand and template to an envelope](/docs/esign-rest-api/how-to/apply-brand-and-template-to-envelope/)

        Working with permissions

        - [How to create a permission profile](/docs/esign-rest-api/how-to/permission-profile-creating/)
        - [How to update individual permission settings](/docs/esign-rest-api/how-to/permission-profile-updating/)
        - [How to set a permission profile](/docs/esign-rest-api/how-to/permission-profile-setting/)
        - [How to delete a permission profile](/docs/esign-rest-api/how-to/permission-profile-deleting/)

        Implementing multi-factor recipient (signer) authentication

        - [How to require ID verification (IDV) for a recipient](/docs/esign-rest-api/how-to/id-verification/)
        - [How to require knowledge-based authentication (KBA) for a recipient](/docs/esign-rest-api/how-to/knowledge-based-authentication/)
        - [How to require phone authentication for a recipient](/docs/esign-rest-api/how-to/phone-auth/)
        - [How to require access code authentication for a recipient](/docs/esign-rest-api/how-to/require-access-code-recipient/)

        <!-- this should mirror /docs/esign-rest-api/how-to/ -->



        [addingdocs]:           /docs/esign-rest-api/esign101/concepts/envelopes/
        [attachments]:          /docs/esign-rest-api/esign101/concepts/documents/attachments/
        [authcopies]:           /docs/esign-rest-api/esign101/concepts/documents/authoritative-copies/
        [conoverview]:          /docs/esign-rest-api/esign101/concepts/overview/
        [deleting]:             /docs/esign-rest-api/esign101/concepts/envelopes/
        [documents]:            /docs/esign-rest-api/esign101/concepts/documents/
        [envelopeDefinition]:   /docs/esign-rest-api/reference/envelopes/envelopes/create/#schema__envelopedefinition
        [envelopes]:            /docs/esign-rest-api/esign101/concepts/envelopes/
        [locking]:              /docs/esign-rest-api/esign101/concepts/envelopes/lock/
        [payments]:             /docs/esign-rest-api/esign101/concepts/tabs/payment/
        [purging]:              /docs/esign-rest-api/esign101/concepts/documents/purging/
        [recipients]:           /docs/esign-rest-api/esign101/concepts/recipients/
        [recipstatus]:          /docs/esign-rest-api/esign101/concepts/recipients/#recipient-status
        [reciptypes]:           /docs/esign-rest-api/esign101/concepts/recipients/#recipient-types
        [supdocs]:              /docs/esign-rest-api/esign101/concepts/documents/supplemental/
        [tabanchor]:            /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        [tabcustom]:            /docs/esign-rest-api/esign101/concepts/tabs/custom-tabs/
        [tabs]:                 /docs/esign-rest-api/esign101/concepts/tabs/
        [tabtypes]:             /docs/esign-rest-api/esign101/concepts/tabs/
        [templates]:            /docs/esign-rest-api/esign101/concepts/templates/
        [tracking]:             /docs/esign-rest-api/esign101/concepts/envelopes/

      operationId: Envelopes_PostEnvelopes
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: cdse_mode
          in: query
          required: false
          type: string
          description: "Reserved for DocuSign.

            "
        - name: change_routing_order
          in: query
          required: false
          type: string
          description:
            When true, users can define the routing order of recipients while
            sending documents for signature.
        - name: completed_documents_only
          in: query
          description: "Reserved for DocuSign.

            "
          required: false
          type: string
        - name: merge_roles_on_draft
          in: query
          description: |-
            When **true,** template roles will be merged, and empty recipients will be removed. This parameter applies when you create a draft envelope with multiple templates. (To create a draft envelope, the `status` field is set to `created`.)

            **Note:** DocuSign recommends that this parameter should be set to **true** whenever you create a draft envelope with multiple templates.
          required: false
          type: string
        - name: envelopeDefinition
          in: body
          required: false
          schema:
            "$ref": "#/definitions/envelopeDefinition"
          description: ""
      responses:
        "201":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/envelopeSummary"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: createEnvelope
      x-ds-method: create
      x-ds-service: Envelopes
      x-ds-in-sdk: true
      x-ds-examples:
        - description: |
            This example shows a request/response that includes:

            * A single PDF document to be signed
            * One tab positioned using anchor text
            * One recipient
          direction: both
          format: json
          response:
            envelopeId: 63e05468-xxxx-xxxx-xxxx-8b48f7dbeb80
            status: sent
            statusDateTime: "2016-05-29T17:11:56.1800000Z"
            uri: "/envelopes/63e05468-xxxx-xxxx-xxxx-8b48f7dbeb80"
          request:
            documents:
              - documentBase64: "[Document content (PDF File)]"
                documentId: "1"
                fileExtension: pdf
                name: NDA.pdf
            emailSubject: Please sign the NDA
            recipients:
              signers:
                - email: the_nda_signer@example.com
                  name: Darlene Petersen
                  recipientId: "1"
                  routingOrder: "1"
                  tabs:
                    dateSignedTabs:
                      - anchorString: signer1date
                        anchorYOffset: "-6"
                        fontSize: Size12
                        name: Date Signed
                        recipientId: "1"
                        tabLabel: date_signed
                    fullNameTabs:
                      - anchorString: signer1name
                        anchorYOffset: "-6"
                        fontSize: Size12
                        name: Full Name
                        recipientId: "1"
                        tabLabel: Full Name
                    signHereTabs:
                      - anchorString: signer1sig
                        anchorUnits: mms
                        anchorXOffset: "0"
                        anchorYOffset: "0"
                        name: Please sign here
                        optional: "false"
                        recipientId: "1"
                        scaleValue: 1
                        tabLabel: signer1sig
            status: sent
          style: custom
          title: Request Signature on Single Document by Email
        - description: |
            This example shows a request/response that includes:

            * Multiple documents, both pdf and Word docx files.
            * Multiple tabs including signing, fullName, dateSigned, and text tabs.
            * Tabs positioned using anchor text.
            * Two recipients, a signer and a cc recipient.
          direction: both
          format: json
          response:
            envelopeId: 63e05468-xxxx-xxxx-xxxx-8b48f7dbeb80
            status: sent
            statusDateTime: "2016-05-29T17:11:56.1800000Z"
            uri: "/envelopes/63e05468-xxxx-xxxx-xxxx-8b48f7dbeb80"
          request:
            documents:
              - documentBase64: "[Document 1 content (PDF File)]"
                documentId: "1"
                fileExtension: pdf
                name: NDA.pdf
              - documentBase64: "[Document 2 content (PDF File)]"
                documentId: "2"
                fileExtension: pdf
                name: House.pdf
              - documentBase64: "[Document 3 content (Word file)]"
                documentId: "3"
                fileExtension: docx
                name: contractor_agreement.docx
            emailSubject: Please sign the house documentation package
            recipients:
              carbonCopies:
                - email: cody_vigil@worldwidecorp.example.com
                  name: Cody Vigil
                  recipientId: "2"
                  routingOrder: "2"
              signers:
                - email: darlene_petersen@newco.example.com
                  name: Darlene Petersen
                  recipientId: "1"
                  routingOrder: "1"
                  tabs:
                    dateSignedTabs:
                      - anchorString: signer1date
                        anchorYOffset: "-6"
                        fontSize: Size12
                        name: Date Signed
                        recipientId: "1"
                        tabLabel: date_signed
                      - documentId: "2"
                        fontSize: Size12
                        name: Date Signed
                        pageNumber: "1"
                        recipientId: "1"
                        tabLabel: doc3_date_signed
                        xPosition: "89"
                        yPosition: "100"
                    fullNameTabs:
                      - anchorString: signer1name
                        anchorYOffset: "-6"
                        fontSize: Size12
                        name: Full Name
                        recipientId: "1"
                        tabLabel: Full Name
                    signHereTabs:
                      - anchorString: signer1sig
                        anchorUnits: mms
                        anchorXOffset: "0"
                        anchorYOffset: "0"
                        name: Please sign here
                        optional: "false"
                        recipientId: "1"
                        scaleValue: 1
                        tabLabel: signer1sig
                      - documentId: "2"
                        name: Please sign here
                        optional: "false"
                        pageNumber: "1"
                        recipientId: "2"
                        scaleValue: 1
                        tabLabel: signer1_doc2
                        xPosition: "89"
                        yPosition: "40"
                      - anchorString: Client Signature
                        anchorUnits: mms
                        anchorXOffset: "0"
                        anchorYOffset: "-4"
                        name: Please sign here
                        optional: "false"
                        recipientId: "1"
                        scaleValue: 1
                        tabLabel: doc3_client_sig
                    textTabs:
                      - anchorString: signer1company
                        anchorYOffset: "-8"
                        fontSize: Size12
                        name: Company
                        recipientId: "1"
                        required: "true"
                        tabLabel: Company
                      - anchorString: Client Name
                        anchorYOffset: "-38"
                        fontSize: Size12
                        name: Company
                        recipientId: "1"
                        required: "true"
                        tabLabel: Company
                      - documentId: "3"
                        fontSize: Size10
                        name: Company
                        pageNumber: "1"
                        recipientId: "1"
                        required: "true"
                        tabLabel: Company
                        xPosition: "145"
                        yPosition: "195"
            status: sent
          style: custom
          title: Multiple Documents and Tabs, Signer and CC Recipients
        - description: |-
            For some documents, one or more signatures must be witnessed by an appointed [notary public](https://en.wikipedia.org/wiki/Notary_public).

            DocuSign supports eNotary services for many jurisdictions. This example demonstrates how to send an envelope to be signed by Susan Signer with her signature witnessed by Nancy Notary. You must know the name and email address of the signer and the notary public for a signature to be notarized.

            Note that the full legal name of the signer must be used. It will be checked against the signer's government-issued proof of identity by the notary public.

            Please see the [DocuSign eNotary resource page](https://support.docusign.com/s/document-item?bundleId=gko1642535666104&topicId=jiv1635359045452.html) for further information. It lists the jurisdictions participating in the DocuSign eNotary program and additional reference information.

            Note that eNotary services are not included with all account types and are **not** included by default with demo/developer sandbox accounts. To enable eNotary service for your sandbox account, contact your DocuSign technical support person or DocuSign customer service.

            The example includes event notification via the Connect service.
          direction: both
          format: json
          response:
            envelopeId: aaaaaaaa-xxxx-xxxx-xxxx-52a86fb94be8
            uri: "/envelopes/aaaaaaaa-xxxx-xxxx-xxxx-52a86fb94be8"
            statusDateTime: "2017-06-15T11:02:39.3996430Z"
            status: sent
          request:
            emailSubject: Important agreement for notarized signature
            status: sent
            recipients:
              inPersonSigners:
                - recipientId: 1
                  email: susan_signer@gmail.com
                  name: Susan Anne Signer
                  routingOrder: 1
                  inPersonSigningType: notary
                  notaryHost:
                    name: Nancy Notary
                    email: nancy@notary-svc.com
                    recipientId: 2
                  tabs:
                    signHereTabs:
                      - documentId: "1"
                        optional: "false"
                        recipientId: "1"
                        xPosition: "100"
                        yPosition: "100"
                        pageNumber: "1"
                        name: Please sign here
                        tabLabel: signer1sig
            documents:
              - documentId: "1"
                name: important document.docx
                fileExtension: docx
                documentBase64: "[Contents elided]"
            eventNotification:
              includeDocumentFields: "false"
              envelopeEvents:
                - envelopeEventStatusCode: Completed
                - envelopeEventStatusCode: Declined
                - envelopeEventStatusCode: Voided
              url: https://listener.example.com/docusign_notifications
              requireAcknowledgment: "true"
              includeSenderAccountAsCustomField: "true"
              loggingEnabled: "true"
              includeDocuments: "false"
              signMessageWithX509Cert: "true"
          style: custom
          title: Create a Notarized Signing Recipient
        - description: |
            DocuSign enables document signers to use
            electronic or
            digital signatures.

            DocuSign has tightly integrated standard digital signatures into the DocuSign Signature platform. This enables a single envelope to include:

            * electronic signatures,
            * AES digital signatures using certificates from DocuSign or from your organization,
            * QES digital signatures from government certified Trust Service Providers (TSPs).

            This example enables the signer to create an eIDAS compliant AES signature with embedded signing. InPerson signers can also use SBS digital signatures.

            [More information on creating SBS digital signature requests.](/docs/esign-rest-api/esign101/concepts/standards-based-signatures/)

            The `clientId` in the example tells DocuSign that the Signing Ceremony will be embedded.
            The example also includes an `eventNotification` object for receiving envelope status updates from DocuSign.

            ## Embedding the signing ceremony
            1. Send the `Envelopes: create` call as shown below in the Request/Response section.
            2. The response will include the `envelopeId`
            3. Use the [EnvelopeViews: createRecipient](/docs/esign-rest-api/reference/envelopes/envelopeviews/createrecipient/) request to obtain the redirectURL as follows:

            `POST /v2.1/accounts/{accountId}/envelopes/{envelopeId}/views/recipient`

            ````
            {
                "clientUserId": "1000",
                "email": "Sam@spade.com",
                "userName": "Sam Spade",
                "returnUrl": "https://your_app.example.com",
                "AuthenticationMethod": "Password"
            }
            ````
            The response will include the `url`. Redirect the user's browser to the URL to start the signing ceremony.

            **Note:** You must **immediately** redirect the user to the URL you receive from DocuSign. The URL is only valid for 5 minutes. Don't request a recipient view URL until you are ready to redirect the user's browser.
          direction: both
          format: json
          response:
            envelopeId: caaaaaaa-xxxx-xxxx-xxxx-c171528e99c8
            uri: "/envelopes/caaaaaaa-xxxx-xxxx-xxxx-c171528e99c8"
            statusDateTime: "2017-06-22T06:44:49.1642220Z"
            status: sent
          request:
            documents:
              - documentId: "1"
                name: " Agreement"
                fileExtension: html
                documentBase64: "[Contents elided]"
            emailSubject: NewCo agreement for signature
            status: sent
            recipients:
              signers:
                - recipientId: "1"
                  clientUserId: "1000"
                  email: Sam@spade.com
                  name: Sam Spade
                  recipientSignatureProviders:
                    - signatureProviderName: UniversalSignaturePen_OpenTrust_Hash_TSP
                      signatureProviderOptions:
                        SMS: "+33134567899"
                  routingOrder: "1"
                  tabs:
                    signHereTabs:
                      - documentId: "1"
                        optional: "false"
                        recipientId: "1"
                        name: Please sign here
                        tabLabel: signer1sig
                        anchorString: signer1sig
            eventNotification:
              includeDocumentFields: "false"
              envelopeEvents:
                - envelopeEventStatusCode: Completed
                - envelopeEventStatusCode: Declined
                - envelopeEventStatusCode: Voided
              url: https://your_app.example.com/listener
              requireAcknowledgment: "true"
              includeSenderAccountAsCustomField: "true"
              loggingEnabled: "true"
              includeDocuments: "false"
              signMessageWithX509Cert: "true"
          style: custom
          title: Request an SBS digital signature, with an embedded signing ceremony
    parameters: []
  "/v2.1/accounts/{accountId}/envelopes/{envelopeId}":
    get:
      tags:
        - Envelopes
      summary: Gets the status of a single envelope.
      description: |
        Retrieves the overall status for the specified envelope.
        To get the status of a list of envelopes, use
        [Envelope: listStatusChanges ](/docs/esign-rest-api/reference/envelopes/envelopes/liststatuschanges/).

        ### Related topics

        - [How to get envelope information](/docs/esign-rest-api/how-to/get-envelope-information/)
      operationId: Envelopes_GetEnvelope
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: envelopeId
          in: path
          description: "The envelope's GUID. \n\nExample: `93be49ab-xxxx-xxxx-xxxx-f752070d71ec`\n"
          required: true
          type: string
        - name: advanced_update
          in: query
          description: When **true,** envelope information can be added or modified.
          required: false
          type: string
        - name: include
          in: query
          required: false
          type: string
          description: |
            Specifies additional information about the envelope to return. Enter a comma-separated list, such as `tabs,recipients`. Valid values are:

            - `custom_fields`: The custom fields associated with the envelope.
            - `documents`: The documents associated with the envelope.
            - `attachments`: The attachments associated with the envelope.
            - `extensions`: The email settings associated with the envelope.
            - `folders`: The folder where the envelope exists.
            - `recipients`: The recipients associated with the envelope.
            - `powerform`: The PowerForms associated with the envelope.
            - `tabs`: The tabs associated with the envelope.
            - `payment_tabs`: The payment tabs associated with the envelope.
            - `workflow`: The workflow definition associated with the envelope.
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/envelope"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getEnvelope
      x-ds-method: get
      x-ds-service: Envelopes
      x-ds-in-sdk: true
      x-ds-examples:
        - description: |
            This example shows a how to get information about
            an envelope with a given envelope id.

            The request for this endpoint has no payload.

            ### Request
            ```
            GET /restapi/v2.1/accounts/1703061/envelopes/4b728be4-xxxx-xxxx-xxxx-d63e23f822b6
            ```
          direction: response
          format: json
          response:
            allowMarkup: "false"
            autoNavigation: "true"
            brandId: 56502fe1-xxxx-xxxx-xxxx-97cb5c43176a
            certificateUri: "/envelopes/4b728be4-xxxx-xxxx-xxxx-d63e23f822b6/documents/certificate"
            createdDateTime: "2016-10-05T01:04:58.1830000Z"
            customFieldsUri: "/envelopes/4b728be4-xxxx-xxxx-xxxx-d63e23f822b6/custom_fields"
            documentsCombinedUri: "/envelopes/4b728be4-xxxx-xxxx-xxxx-d63e23f822b6/documents/combined"
            documentsUri: "/envelopes/4b728be4-xxxx-xxxx-xxxx-d63e23f822b6/documents"
            emailSubject: Please sign the NDA
            enableWetSign: "true"
            envelopeId: 4b728be4-xxxx-xxxx-xxxx-d63e23f822b6
            envelopeIdStamping: "true"
            envelopeUri: "/envelopes/4b728be4-xxxx-xxxx-xxxx-d63e23f822b6"
            initialSentDateTime: "2016-10-05T01:04:58.7770000Z"
            is21CFRPart11: "false"
            isSignatureProviderEnvelope: "false"
            lastModifiedDateTime: "2016-10-05T01:04:58.1830000Z"
            notificationUri: "/envelopes/4b728be4-xxxx-xxxx-xxxx-d63e23f822b6/notification"
            purgeState: unpurged
            recipientsUri: "/envelopes/4b728be4-xxxx-xxxx-xxxx-d63e23f822b6/recipients"
            sentDateTime: "2016-10-05T01:04:58.7770000Z"
            status: sent
            statusChangedDateTime: "2016-10-05T01:04:58.7770000Z"
            templatesUri: "/envelopes/4b728be4-xxxx-xxxx-xxxx-d63e23f822b6/templates"
          request:
          style: custom
          title: Get Status About a Specific Envelope
    put:
      tags:
        - Envelopes
      summary:
        Send, void, or modify a draft envelope. Purge documents from a completed
        envelope.
      description: |
        This method enables you to make changes to an envelope.
        You can use it to:

        * [Send a draft envelope](#sending-a-draft-envelope)
        * [Void an in-process envelope](#voiding-an-in-process-envelope)
        * [Modify a draft envelope](#modifying-envelope-email-information)
        * [Purge documents and envelope metadata from the DocuSign platform](#purging-documents-from-docusign)

        Although the request body for this method
        is a complete envelope definition,
        you only need to provide
        the properties that
        you're updating.

        ## Sending a draft envelope

        To send a draft envelope, include the following code in the request body:

        ```json
        {
          "status": "sent"
        }
        ```

        You can attach a workflow before sending the envelope:

        ```json
        {
          "status": "sent",
          "workflow": {
            "workflowSteps": [
              {
                "action": "pause_before",
                "description": "pause_before routing order 2",
                "itemId": 2,
                "triggerOnItem": "routing_order"
              }
            ]
          }
        }
        ```

        ## Working with workflows

        To unpause a workflow, the request body should include this:

        ```json
        {
          "workflow": {
            "workflowStatus": "in_progress"
          }
        }
        ```

        ## Voiding an in-process envelope

        To void an in-process envelope, include the following code in the request body:

        ```json
        {
          "status": "voided",
          "voidedReason": "The reason for voiding the envelope"
        }
        ```

        ## Modifying envelope email information

        To change the email subject and message of a draft envelope,
        include the following code in the request body:

        ```json
        {
          "emailSubject": "new email subject",
          "emailBlurb": "new email message"
        }
        ```

        ## Purging documents from DocuSign

        To place only the documents
        in the purge queue,
        leaving any
        corresponding attachments
        and tabs in the DocuSign platform,
        set the `purgeState` property
        to `documents_queued`.

        ```json
        {
          "envelopeId": "222e6847-xxxx-xxxx-xxxx-72a3c9c16fca",
          "purgeState": "documents_queued"
        }
        ```

        To place documents,
        attachments,
        and tabs
        in the purge queue,
        set the `purgeState` property
        to `documents_and_metadata_queued`.

        ```json
        {
          "envelopeId": "222e6847-xxxx-xxxx-xxxx-72a3c9c16fca",
          "purgeState": "documents_and_metadata_queued"
        }
        ```

        To place documents,
        attachments,
        and tabs
        in the purge queue
        and to redact personal information,
        set the `purgeState` property
        to `documents_and_metadata_and_redact_queued`.

        ```json
        {
          "envelopeId": "222e6847-xxxx-xxxx-xxxx-72a3c9c16fca",
          "purgeState": "documents_and_metadata_and_redact_queued"
        }
        ```

        You can purge documents
        only from completed envelopes
        that are not marked as the authoritative copy.
        The user requesting the purge
        must have permission to purge documents
        and
        must be the sender or be acting on behalf of the sender.

        When the purge request is initiated
        the items to be purged
        are placed in the purge queue
        for deletion in 14 days.
        The sender
        and
        all recipients with DocuSign accounts
        associated with the envelope
        get an email notification
        the documents will be deleted in 14 days.
        The notification contains a link
        to the documents.
        A second email notification
        is sent 7 days later.
        At the end of the 14-day period
        the documents are deleted from the system.
        Recipients without DocuSign accounts
        do not receive email notifications.

        If your account has a Document Retention policy,
        envelope documents
        are automatically placed
        in the purge queue,
        and notification emails are sent
        at the end of the retention period.
        Setting a Document Retention policy is the same as setting a
        schedule for purging documents.

        ## Removing documents from the purge queue

        To remove documents from the purge queue, include the following code in the request body:

        ```json
        {
          "envelopeId": "222e6847-xxxx-xxxx-xxxx-72a3c9c16fca",
          "purgeState": "documents_dequeued"
        }
        ```

        ### Related topics

        - [Void an envelope](https://www.docusign.com/blog/dsdev-common-api-tasks-void-an-envelope) ([Common API Tasks](https://www.docusign.com/blog/tags/common-api-tasks))
        - [Purging documents (eSignature Concepts)](/docs/esign-rest-api/esign101/concepts/documents/purging/)
        - [Purging documents in an envelope (blog post)](https://www.docusign.com/blog/developers/purging-documents-envelope)
        - [How to unpause a signature workflow](/docs/esign-rest-api/how-to/unpause-workflow/)
      operationId: Envelopes_PutEnvelope
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: envelopeId
          in: path
          description: "The envelope's GUID. \n\nExample: `93be49ab-xxxx-xxxx-xxxx-f752070d71ec`\n"
          required: true
          type: string
        - name: advanced_update
          in: query
          description:
            When **true,** allows the caller to update recipients, tabs,
            custom fields, notification, email settings and other envelope attributes.
          required: false
          type: string
        - name: resend_envelope
          in: query
          description: |-
            When **true,**
            sends the specified envelope again.
          required: false
          type: string
        - name: envelope
          in: body
          required: false
          schema:
            "$ref": "#/definitions/envelope"
          description:
            A container used to send documents to recipients. The envelope
            carries information about the sender and timestamps to indicate the progress
            of the delivery procedure. It can contain collections of Documents, Tabs
            and Recipients.
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/envelopeUpdateSummary"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: update
      x-ds-method: update
      x-ds-service: Envelopes
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/envelopes/{envelopeId}/attachments":
    get:
      tags:
        - EnvelopeAttachments
      summary:
        Returns a list of envelope attachments associated with a specified
        envelope.
      operationId: Attachments_GetAttachments
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: envelopeId
          in: path
          description: "The envelope's GUID. \n\nExample: `93be49ab-xxxx-xxxx-xxxx-f752070d71ec`\n"
          required: true
          type: string
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/envelopeAttachmentsResult"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getAttachments
      x-ds-api-status: beta
      description: |
        Returns a list of envelope attachments associated with a specified envelope.

        <!-- std notice DEVDOCS-114911 -->
        <ds-inlinemessage kind="information" markdown="1">

        It's easy to confuse envelope attachments,
        which are developer-only files associated with an envelope,
        with signer attachments.

        To get a list of user-visible attachments,
        use [EnvelopeDocuments: get](/docs/esign-rest-api/reference/envelopes/envelopedocuments/get/).

        To learn about the different types of attachments, see [Attachments](/docs/esign-rest-api/esign101/concepts/documents/attachments/) in the concept guide.

        </ds-inlinemessage>
        <!-- end notice DEVDOCS-114911 -->
      x-ds-method: list
      x-ds-service: Envelopes
      x-ds-in-sdk: true
    put:
      tags:
        - EnvelopeAttachments
      summary: Adds one or more envelope attachments to a draft or in-process envelope.
      operationId: Attachments_PutAttachments
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: envelopeId
          in: path
          description: "The envelope's GUID. \n\nExample: `93be49ab-xxxx-xxxx-xxxx-f752070d71ec`\n"
          required: true
          type: string
        - name: envelopeAttachmentsRequest
          in: body
          required: false
          schema:
            "$ref": "#/definitions/envelopeAttachmentsRequest"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/envelopeAttachmentsResult"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: putAttachments
      x-ds-api-status: beta
      description: |+
        Adds one or more envelope attachments to a draft or in-process envelope.
        Each envelope can have a maximum of 12 attachments.

        Envelope attachments are files that an application can include in an envelope. They are not converted to PDF. Envelope attachments are available only through the API. There is no user interface in the DocuSign web application for them.

        For a list of supported file formats, see [Supported File Formats](https://support.docusign.com/s/document-item?bundleId=gbo1643332197980&topicId=xln1578456261162.html).

        <!-- std notice DEVDOCS-114911 -->
        <ds-inlinemessage kind="information" markdown="1">

        It's easy to confuse envelope attachments,
        which are developer-only files associated with an envelope,
        with signer attachments.

        To learn about the different types of attachments, see [Attachments](/docs/esign-rest-api/esign101/concepts/documents/attachments/) in the concept guide.

        </ds-inlinemessage>
        <!-- end notice DEVDOCS-114911 -->


      x-ds-method: create
      x-ds-service: Envelopes
      x-ds-in-sdk: true
    delete:
      tags:
        - EnvelopeAttachments
      summary: Deletes one or more envelope attachments from a draft envelope.
      operationId: Attachments_DeleteAttachments
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: envelopeId
          in: path
          description: "The envelope's GUID. \n\nExample: `93be49ab-xxxx-xxxx-xxxx-f752070d71ec`\n"
          required: true
          type: string
        - name: envelopeAttachmentsRequest
          in: body
          required: false
          schema:
            "$ref": "#/definitions/envelopeAttachmentsRequest"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/envelopeAttachmentsResult"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: deleteAttachments
      x-ds-api-status: beta
      description: |
        Deletes one or more envelope attachments from a draft envelope.

        <!-- std notice DEVDOCS-114911 -->
        <ds-inlinemessage kind="information" markdown="1">

        It's easy to confuse envelope attachments,
        which are developer-only files associated with an envelope,
        with signer attachments.

        To learn about the different types of attachments, see [Attachments](/docs/esign-rest-api/esign101/concepts/documents/attachments/) in the concept guide.

        </ds-inlinemessage>
        <!-- end notice DEVDOCS-114911 -->
      x-ds-method: delete
      x-ds-service: Envelopes
      x-ds-in-sdk: true
    parameters: []
  ? "/v2.1/accounts/{accountId}/envelopes/{envelopeId}/attachments/{attachmentId}"
  : get:
      tags:
        - EnvelopeAttachments
      summary: Retrieves an envelope attachment from an envelope.
      operationId: Attachments_GetAttachment
      consumes: []
      produces:
        - application/octet-stream
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: attachmentId
          in: path
          required: true
          type: string
          description: The unique identifier for the attachment.
        - name: envelopeId
          in: path
          description: "The envelope's GUID. \n\nExample: `93be49ab-xxxx-xxxx-xxxx-f752070d71ec`\n"
          required: true
          type: string
      responses:
        "200":
          description: A successful response or an error.
          schema:
            type: file
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getAttachment
      x-ds-api-status: beta
      description: |
        Retrieves an envelope attachment from an envelope.

        <!-- std notice DEVDOCS-114911 -->
        <ds-inlinemessage kind="information" markdown="1">

        It's easy to confuse envelope attachments,
        which are developer-only files associated with an envelope,
        with signer attachments.

        To learn about the different types of attachments, see [Attachments](/docs/esign-rest-api/esign101/concepts/documents/attachments/) in the concept guide.

        </ds-inlinemessage>
        <!-- end notice DEVDOCS-114911 -->
      x-ds-method: get
      x-ds-service: Envelopes
      x-ds-in-sdk: true
    put:
      tags:
        - EnvelopeAttachments
      summary: Updates an envelope attachment in a draft or in-process envelope.
      operationId: Attachments_PutAttachment
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: attachmentId
          in: path
          required: true
          type: string
          description: The unique identifier for the attachment.
        - name: envelopeId
          in: path
          description: "The envelope's GUID. \n\nExample: `93be49ab-xxxx-xxxx-xxxx-f752070d71ec`\n"
          required: true
          type: string
        - name: attachment
          in: body
          required: false
          schema:
            "$ref": "#/definitions/attachment"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/envelopeAttachmentsResult"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: putAttachment
      x-ds-api-status: beta
      description: |
        Updates an envelope attachment to a draft or in-process envelope.

        <!-- std notice DEVDOCS-114911 -->
        <ds-inlinemessage kind="information" markdown="1">

        It's easy to confuse envelope attachments,
        which are developer-only files associated with an envelope,
        with signer attachments.

        To learn about the different types of attachments, see [Attachments](/docs/esign-rest-api/esign101/concepts/documents/attachments/) in the concept guide.

        </ds-inlinemessage>
        <!-- end notice DEVDOCS-114911 -->
      x-ds-method: update
      x-ds-service: Envelopes
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/envelopes/{envelopeId}/audit_events":
    get:
      tags:
        - Envelopes
      summary: Gets the envelope audit events for an envelope.
      description: Gets the envelope audit events for the specified envelope.
      operationId: AuditEvents_GetAuditEvents
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: envelopeId
          in: path
          description: "The envelope's GUID. \n\nExample: `93be49ab-xxxx-xxxx-xxxx-f752070d71ec`\n"
          required: true
          type: string
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/envelopeAuditEventResponse"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: listAuditEvents
      x-ds-method: listAuditEvents
      x-ds-service: Envelopes
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/envelopes/{envelopeId}/comments/transcript":
    get:
      tags:
        - Comments
      summary: Gets a PDF transcript of all of the comments in an envelope.
      operationId: Comments_GetCommentsTranscript
      consumes: []
      produces:
        - application/pdf
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: envelopeId
          in: path
          description: "The envelope's GUID. \n\nExample: `93be49ab-xxxx-xxxx-xxxx-f752070d71ec`\n"
          required: true
          type: string
        - name: encoding
          in: query
          required: false
          type: string
          description: "(Optional) The encoding to use for the file."
      responses:
        "200":
          description: A successful response or an error.
          schema:
            type: file
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getCommentsTranscript
      description:
        "Retrieves a PDF file containing all of the comments that senders
        and recipients have added to the documents in an envelope.\n\nThe response
        body of this method is the PDF file as a byte\nstream.\n\n\n**Note:** Comments
        are disabled by default. To use the comments feature, an account administrator
        must enable comments on the account (in the `accountSettingsInformation` object,
        set the `enableSigningExtensionComments` property to **true**). "
      x-ds-method: get
      x-ds-service: Uncategorized
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/envelopes/{envelopeId}/custom_fields":
    get:
      tags:
        - EnvelopeCustomFields
      summary: Gets the custom field information for the specified envelope.
      description: |
        Retrieves the custom field information for the specified envelope. You can use these fields in the envelopes for your account to record information about the envelope, help search for envelopes, and track information. The envelope custom fields are shown in the Envelope Settings section when a user is creating an envelope in the DocuSign member console. The envelope custom fields are not seen by the envelope recipients.

        There are two types of envelope custom fields, text, and list. A text custom field lets the sender enter the value for the field. With a list custom field, the sender selects the value of the field from a pre-made list.


        ### Related topics

        - [How to get envelope custom tab values](/docs/esign-rest-api/how-to/get-envelope-custom-tab-values/)
      operationId: CustomFields_GetCustomFields
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: envelopeId
          in: path
          description: "The envelope's GUID. \n\nExample: `93be49ab-xxxx-xxxx-xxxx-f752070d71ec`\n"
          required: true
          type: string
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/customFieldsEnvelope"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: listCustomFields
      x-ds-method: list
      x-ds-service: Envelopes
      x-ds-in-sdk: true
    put:
      tags:
        - EnvelopeCustomFields
      summary: Updates envelope custom fields in an envelope.
      description: |
        Updates the envelope custom fields in draft and in-process envelopes.

        Each custom field used in an envelope must have a unique name.
      operationId: CustomFields_PutCustomFields
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: envelopeId
          in: path
          description: "The envelope's GUID. \n\nExample: `93be49ab-xxxx-xxxx-xxxx-f752070d71ec`\n"
          required: true
          type: string
        - name: EnvelopeCustomFields
          in: body
          required: false
          schema:
            "$ref": "#/definitions/EnvelopeCustomFields"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/EnvelopeCustomFields"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: updateCustomFields
      x-ds-method: update
      x-ds-service: Envelopes
      x-ds-in-sdk: true
    post:
      tags:
        - EnvelopeCustomFields
      summary: Creates envelope custom fields for an envelope.
      description: |
        Updates the envelope custom fields for draft and in-process envelopes.

        ### Related topics

        - [How to bulk send envelopes](/docs/esign-rest-api/how-to/bulk-send-envelopes/)
      operationId: CustomFields_PostCustomFields
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: envelopeId
          in: path
          description: "The envelope's GUID. \n\nExample: `93be49ab-xxxx-xxxx-xxxx-f752070d71ec`\n"
          required: true
          type: string
        - name: EnvelopeCustomFields
          in: body
          required: false
          schema:
            "$ref": "#/definitions/EnvelopeCustomFields"
          description: ""
      responses:
        "201":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/EnvelopeCustomFields"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: createCustomFields
      x-ds-method: create
      x-ds-service: Envelopes
      x-ds-in-sdk: true
    delete:
      tags:
        - EnvelopeCustomFields
      summary: Deletes envelope custom fields for draft and in-process envelopes.
      description: Deletes envelope custom fields for draft and in-process envelopes.
      operationId: CustomFields_DeleteCustomFields
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: envelopeId
          in: path
          description: "The envelope's GUID. \n\nExample: `93be49ab-xxxx-xxxx-xxxx-f752070d71ec`\n"
          required: true
          type: string
        - name: EnvelopeCustomFields
          in: body
          required: false
          schema:
            "$ref": "#/definitions/EnvelopeCustomFields"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/EnvelopeCustomFields"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: deleteCustomFields
      x-ds-method: delete
      x-ds-service: Envelopes
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/envelopes/{envelopeId}/docGenFormFields":
    get:
      tags:
        - DocumentGeneration
      summary: Returns form fields for an envelope
      operationId: DocGenFormFields_GetEnvelopeDocGenFormFields
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: envelopeId
          in: path
          description: "The envelope's GUID. \n\nExample: `93be49ab-xxxx-xxxx-xxxx-f752070d71ec`\n"
          required: true
          type: string
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/docGenFormFieldResponse"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getEnvelopeDocGenFormFields
      x-ds-method: getEnvelopeDocGenFormFields
      x-ds-service: Uncategorized
      description: |-
        Given an `envelopeId` this method
        returns the form fields found in
        that envelope's documents.

        The response for envelope that has one document
        with form fields would look like this:

        ```json
        {
          "docGenFormFields": [
            {
              "documentId": "2dc54cf5-xxxx-xxxx-xxxx-05132a2dd889",
              "docGenFormFieldList": [
                {
                  "label": "Candidate_Name",
                  "type": "TextBox",
                  "required": "True",
                  "name": "Candidate_Name"
                },
                {
                  "label": "Job_Title",
                  "type": "TextBox",
                  "required": "True",
                  "name": "Job_Title"
                },
                {
                  "label": "Manager_Name",
                  "type": "TextBox",
                  "required": "True",
                  "name": "Manager_Name"
                },
                {
                  "label": "Start_Date",
                  "type": "TextBox",
                  "required": "True",
                  "name": "Start_Date"
                },
                {
                  "label": "Salary",
                  "type": "TextBox",
                  "required": "True",
                  "name": "Salary"
                }
              ],
              "docGenDocumentStatus": "created"
            }
          ]
        }
        ```

        ### Related topics

        - [Document generation](/docs/esign-rest-api/esign101/concepts/documents/document-generation/) in the eSignature concepts guide
        - [How to request a signature by email with document generation](/docs/esign-rest-api/how-to/request-signature-email-document-generation/)
        - [Document Generation for DocuSign eSignature](https://support.docusign.com/s/document-item?bundleId=als1679428547895&topicId=ldx1679428689631.html) in the eSignature User Guide
      x-ds-in-sdk: true
    put:
      tags:
        - DocumentGeneration
      summary: Updates form fields for an envelope.
      operationId: DocGenFormFields_PutEnvelopeDocGenFormFields
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: envelopeId
          in: path
          description: "The envelope's GUID. \n\nExample: `93be49ab-xxxx-xxxx-xxxx-f752070d71ec`\n"
          required: true
          type: string
        - name: update_docgen_formfields_only
          in: query
          required: false
          type: string
          description: |-
            When **true,** only the form fields are updated.
            When **false** or omitted,
            the documents are updated as well.
        - name: docGenFormFieldRequest
          in: body
          required: false
          schema:
            "$ref": "#/definitions/docGenFormFieldRequest"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/docGenFormFieldResponse"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: updateEnvelopeDocGenFormFields
      x-ds-method: updateEnvelopeDocGenFormFields
      x-ds-service: Uncategorized
      description: |-
        This method updates the form fields
        for all the documents in a given
        envelope.

        The envelope must be in the `draft` state.


        The request body for an envelope that has one document
        with form fields would look like this:

        ```json
        {
          "docGenFormFields": [
            {
              "documentId": "2dc54cf5-xxxx-xxxx-xxxx-05132a2dd889",
              "docGenFormFieldList": [
                {
                  "name": "Candidate_Name",
                  "value": "Peggy Olson"
                },
                {
                  "name": "Job_Title",
                  "value": "Copywriter"
                },
                {
                  "name": "Manager_Name",
                  "value": "Donald Draper"
                },
                {
                  "name": "Start_Date",
                  "value": "March 15, 1960"
                },
                {
                  "name": "Salary",
                  "value": "8000"
                }
              ]
            }
          ]
        }
        ```

        ### Related topics

        - [Document generation](/docs/esign-rest-api/esign101/concepts/documents/document-generation/) in the eSignature concepts guide
        - [How to request a signature by email with document generation](/docs/esign-rest-api/how-to/request-signature-email-document-generation/)
        - [Document Generation for DocuSign eSignature](https://support.docusign.com/s/document-item?bundleId=als1679428547895&topicId=ldx1679428689631.html) in the eSignature User Guide
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/envelopes/{envelopeId}/documents":
    get:
      tags:
        - EnvelopeDocuments
      summary: Gets a list of documents in an envelope.
      description: |
        Retrieves a list of documents associated with the specified envelope.

        ### Related topics

        - [How to list envelope documents](/docs/esign-rest-api/how-to/list-envelope-documents/)
      operationId: Documents_GetDocuments
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: envelopeId
          in: path
          description: "The envelope's GUID. \n\nExample: `93be49ab-xxxx-xxxx-xxxx-f752070d71ec`\n"
          required: true
          type: string
        - name: documents_by_userid
          in: query
          required: false
          type: string
          description:
            When **true,** allows recipients to get documents by their user
            id. For example, if a user is included in two different routing orders with
            different visibilities, using this parameter returns all of the documents
            from both routing orders.
        - name: include_docgen_formfields
          in: query
          required: false
          type: string
          description: Reserved for DocuSign.
        - name: include_metadata
          in: query
          required: false
          type: string
          description:
            When **true,** the response includes metadata that indicates
            which properties the sender can edit.
        - name: include_tabs
          in: query
          required: false
          type: string
          description:
            When **true,** information about the tabs, including prefill
            tabs, associated with the documents are included in the response.
        - name: recipient_id
          in: query
          required: false
          type: string
          description:
            Allows the sender to retrieve the documents as one of the recipients
            that they control. The `documents_by_userid` parameter must be set to **false**
            for this to work.
        - name: shared_user_id
          in: query
          required: false
          type: string
          description: |-
            The ID of a shared user that you want to impersonate in order to
            retrieve their view of the list of documents. This parameter is
            used in the context of a shared inbox (i.e., when you share
            envelopes from one user to another through the DocuSign Admin console).
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/envelopeDocumentsResult"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: listDocuments
      x-ds-method: list
      x-ds-service: Envelopes
      x-ds-in-sdk: true
      x-ds-examples:
        - description: |
            This example shows how
            to get a list
            of all the documents in an envelope.

            The request for this endpoint has no payload.

            ### Request

            ```
            GET /restapi/v2.1/accounts/1703061/envelopes/44efc9e6-xxxx-xxxx-xxxx-801410d6922d/documents
            ```
          direction: response
          format: json
          response:
            envelopeDocuments:
              - availableDocumentTypes:
                  - isDefault: "true"
                    type: electronic
                display: inline
                documentId: "1"
                includeInDownload: "true"
                name: NDA.pdf
                order: "1"
                pages: "3"
                signerMustAcknowledge: no_interaction
                type: content
                uri: "/envelopes/44efc9e6-xxxx-xxxx-xxxx-801410d6922d/documents/1"
              - availableDocumentTypes:
                  - isDefault: "true"
                    type: electronic
                display: inline
                documentId: "2"
                includeInDownload: "true"
                name: House.pdf
                order: "2"
                pages: "1"
                signerMustAcknowledge: no_interaction
                type: content
                uri: "/envelopes/44efc9e6-xxxx-xxxx-xxxx-801410d6922d/documents/2"
              - availableDocumentTypes:
                  - isDefault: "true"
                    type: electronic
                display: inline
                documentId: "3"
                includeInDownload: "true"
                name: contractor_agreement.docx
                order: "3"
                pages: "2"
                signerMustAcknowledge: no_interaction
                type: content
                uri: "/envelopes/44efc9e6-xxxx-xxxx-xxxx-801410d6922d/documents/3"
              - availableDocumentTypes:
                  - isDefault: "true"
                    type: electronic
                display: inline
                documentId: certificate
                includeInDownload: "true"
                name: Summary
                order: "999"
                pages: "4"
                signerMustAcknowledge: no_interaction
                type: summary
                uri: "/envelopes/44efc9e6-xxxx-xxxx-xxxx-801410d6922d/documents/certificate"
            envelopeId: 44efc9e6-xxxx-xxxx-xxxx-801410d6922d
          request:
          style: custom
          title: List All Documents in an Envelope
    put:
      tags:
        - EnvelopeDocuments
      summary: Adds one or more documents to an existing envelope.
      description: |-
        Adds one or more documents to an existing envelope.
        The tabs of the original document will be applied to the new document.


        **Note:** When adding or modifying documents for an in-process envelope,
        DocuSign recommends
        [locking the envelope](/docs/esign-rest-api/reference/envelopes/envelopelocks/create/)
        prior to making any changes.

        If the file name of a document contains Unicode characters, you need to include a `Content-Disposition` header. Example:


        **Header:** `Content-Disposition`


        **Value:** `file; filename=\"name\";fileExtension=ext;documentId=1`
      operationId: Documents_PutDocuments
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: envelopeId
          in: path
          description: "The envelope's GUID. \n\nExample: `93be49ab-xxxx-xxxx-xxxx-f752070d71ec`\n"
          required: true
          type: string
        - name: envelopeDefinition
          in: body
          required: false
          schema:
            "$ref": "#/definitions/envelopeDefinition"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/envelopeDocumentsResult"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: updateDocuments
      x-ds-method: updateList
      x-ds-service: Envelopes
      x-ds-in-sdk: true
    delete:
      tags:
        - EnvelopeDocuments
      summary: Deletes documents from a draft envelope.
      description: |+
        Deletes one or more documents from an existing envelope that has not yet been completed.

        To delete a document, use only the relevant parts of the [`envelopeDefinition`](#envelopeDefinition).
        For example, this request body specifies that you want to delete the document whose `documentId` is "1".


        ```text
        {
          "documents": [
            {
              "documentId": "1"
            }
          ]
        }
        ```

        The envelope status must be one of:

        - `created`
        - `sent`
        - `delivered`


      operationId: Documents_DeleteDocuments
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: envelopeId
          in: path
          description: "The envelope's GUID. \n\nExample: `93be49ab-xxxx-xxxx-xxxx-f752070d71ec`\n"
          required: true
          type: string
        - name: envelopeDefinition
          in: body
          required: false
          schema:
            "$ref": "#/definitions/envelopeDefinition"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/envelopeDocumentsResult"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: deleteDocuments
      x-ds-method: delete
      x-ds-service: Envelopes
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/envelopes/{envelopeId}/documents/{documentId}":
    get:
      tags:
        - EnvelopeDocuments
      summary: Retrieves a single document or all documents from an envelope.
      description: |
        Retrieves a single document or all documents from an envelope.

        To retrieve a single document, provide the ID of the document in the `documentId` path parameter.
        Alternatively, by setting the `documentId` parameter to special keyword values,
        you can retrieve all the documents (as a combined PDF, portfolio PDF, or ZIP archive)
        or just the certificate of completion. See the `documentId` description for how to retrieve each format.


        The response body of this method
        is a file. If you request multiple documents,
        the result is a ZIP archive
        that contains all of the documents.

        In all other cases, the response is a PDF
        file or PDF portfolio.


        You can get the file name and document ID from the response's `Content-Disposition` header:

        ```
        Content-Disposition: file; filename="NDA.pdf"; documentid="1
        ```

        By default, the response is the PDF file
        as a byte stream.
        For example a request/response in `curl` looks like this:

        ```
        $ curl --request GET 'https://demo.docusign.net/restapi/v2/accounts/0cdb3ff3-xxxx-xxxx-xxxx-e43af011006d/envelopes/ea4cc25b-xxxx-xxxx-xxxx-a67a0a2a4f6c/documents/1/' \
               --header 'Authorization: Bearer eyJ...bqg'


        HTTP/1.1 200 OK
        Content-Length: 167539
        Content-Type: application/pdf
        . . .
        Content-Disposition: file; filename="Lorem_Ipsum.pdf"; documentid="1"
        Date: Tue, 23 Aug 2022 01:13:15 GMT

        %PDF-1.4
        %˚¸˝˛
        6 0 obj
        <</Length 14>>stream
        . . .
        ```

        By using the `Content-Transfer-Encoding`
        header in the request, you can obtain the PDF file
        encoded in base64. The same `curl` request with
        the base64 header would look like this:

        ```
        $ curl --request GET 'https://demo.docusign.net/restapi/v2/accounts/0cdb3ff3-xxxx-xxxx-xxxx-e43af011006d/envelopes/ea4cc25b-xxxx-xxxx-xxxx-a67a0a2a4f6c/documents/1/' \
               --header 'Authorization: Bearer eyJ...bqg' \
               --header 'Content-Transfer-Encoding: base64'


        HTTP/1.1 200 OK
        Content-Length: 223384
        Content-Type: application/pdf
        . . .
        Content-Disposition: file; filename="Lorem_Ipsum.pdf"; documentid="1"
        Content-Transfer-Encoding: base64
        Date: Tue, 23 Aug 2022 01:12:30 GMT

        JVBERi0xLjQKJfv8/f4KNiAwIG9iago8PC9MZW. . .==
        ```


        (In an actual `curl` request you would use the `--output` switch to
        save the byte stream into a file.)

        ### Related topics

        - [How to download envelope documents](/docs/esign-rest-api/how-to/download-envelope-documents/)
      operationId: Documents_GetDocument
      consumes: []
      produces:
        - application/pdf
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: documentId
          in: path
          description: |-
            The ID of the document to retrieve. Alternatively, you can use one of the following special keywords:

            - `combined`: Retrieves all of the documents as a single PDF file.
              When the query parameter `certificate` is **true,** the certificate of completion is included in the PDF file.
              When the query parameter `certificate` is **false,** the certificate of completion is not included in the PDF file.
            - `archive`: Retrieves a ZIP archive that contains all of the PDF documents and the certificate of completion.
            - `certificate`: Retrieves only the certificate of completion as a PDF file.
            - `portfolio`: Retrieves the envelope documents as a [PDF portfolio](https://helpx.adobe.com/acrobat/using/overview-pdf-portfolios.html).
          required: true
          type: string
        - name: envelopeId
          in: path
          description: "The envelope's GUID. \n\nExample: `93be49ab-xxxx-xxxx-xxxx-f752070d71ec`\n"
          required: true
          type: string
        - name: certificate
          in: query
          description: |+
            Used only when the `documentId` parameter is the special keyword `combined`.

            When **true,** the certificate of completion is included in the combined PDF file.
            When **false,** (the default) the certificate of completion is not included in the combined PDF file.

          required: false
          type: string
        - name: documents_by_userid
          in: query
          required: false
          type: string
          description:
            When **true,** allows recipients to get documents by their user
            id. For example, if a user is included in two different routing orders with
            different visibilities, using this parameter returns all of the documents
            from both routing orders.
        - name: encoding
          in: query
          required: false
          type: string
          description: Reserved for DocuSign.
        - name: encrypt
          in: query
          description:
            When **true,** the PDF bytes returned in the response are encrypted
            for all the key managers configured on your DocuSign account. You can decrypt
            the documents by using the Key Manager DecryptDocument API method. For more
            information about Key Manager, see the DocuSign Security Appliance Installation
            Guide that your organization received from DocuSign.
          required: false
          type: string
        - name: language
          in: query
          description:
            "Specifies the language for the Certificate of Completion in
            the response. The supported languages are: Chinese Simplified (zh_CN), Chinese
            Traditional (zh_TW), Dutch (nl), English US (en), French (fr), German (de),
            Italian (it), Japanese (ja), Korean (ko), Portuguese (pt), Portuguese (Brazil)
            (pt_BR), Russian (ru), Spanish (es). "
          required: false
          type: string
        - name: recipient_id
          in: query
          required: false
          type: string
          description:
            Allows the sender to retrieve the documents as one of the recipients
            that they control. The `documents_by_userid` parameter must be set to **false**
            for this functionality to work.
        - name: shared_user_id
          in: query
          required: false
          type: string
          description: |-
            The ID of a shared user that you want to impersonate in order to
            retrieve their view of the list of documents. This parameter is
            used in the context of a shared inbox (i.e., when you share
            envelopes from one user to another through the DocuSign Admin console).
        - name: show_changes
          in: query
          description:
            When **true,** any changed fields for the returned PDF are highlighted
            in yellow and optional signatures or initials outlined in red. The account
            must have the **Highlight Data Changes** feature enabled.
          required: false
          type: string
        - name: watermark
          in: query
          description:
            "When **true,** the account has the watermark feature enabled,
            and the envelope is not complete, then the watermark for the account is
            added to the PDF documents. This option can remove the watermark. "
          required: false
          type: string
      responses:
        "200":
          description: A successful response or an error.
          schema:
            type: file
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getDocument
      x-ds-method: get
      x-ds-service: Envelopes
      x-ds-in-sdk: true
      x-ds-examples:
        - description: |+
            This example shows how to retrieve
            a single document from an envelope
            as a PDF file.


            The request for this endpoint has no payload.

            ### Request

            ```
            GET /restapi/v2.1/accounts/0cdb3ff3-xxxx-xxxx-xxxx-e43af011006d/envelopes/44efc9e6-xxxx-xxxx-xxxx-801410d6922d/documents/3
            ```

          direction: response
          format: json
          response: A byte stream representing a PDF file.
          request:
          style: custom
          title: Get a Single Document as a PDF File
        - description: |+
            If you use `combined` instead of a document id
            the response is a PDF file that contains
            all of the documents in the specified envelope.

            The request for this endpoint has no payload.

            ### Request

            ```
            GET /restapi/v2.1/accounts/0cdb3ff3-xxxx-xxxx-xxxx-e43af011006d/envelopes/44efc9e6-xxxx-xxxx-xxxx-801410d6922d/documents/combined
            ```

          direction: response
          format: json
          response: A byte stream representing a PDF file.
          request:
          style: custom
          title: Get All Documents as a Single PDF File
        - description: |
            This example shows how
            to get a list
            of all the documents in an envelope.

            The request for this endpoint has no payload.

            ### Request

            ```
            GET /restapi/v2.1/accounts/1703061/envelopes/44efc9e6-xxxx-xxxx-xxxx-801410d6922d/documents
            ```
          direction: response
          format: json
          response:
            envelopeDocuments:
              - availableDocumentTypes:
                  - isDefault: "true"
                    type: electronic
                display: inline
                documentId: "1"
                includeInDownload: "true"
                name: NDA.pdf
                order: "1"
                pages: "3"
                signerMustAcknowledge: no_interaction
                type: content
                uri: "/envelopes/44efc9e6-xxxx-xxxx-xxxx-801410d6922d/documents/1"
              - availableDocumentTypes:
                  - isDefault: "true"
                    type: electronic
                display: inline
                documentId: "2"
                includeInDownload: "true"
                name: House.pdf
                order: "2"
                pages: "1"
                signerMustAcknowledge: no_interaction
                type: content
                uri: "/envelopes/44efc9e6-xxxx-xxxx-xxxx-801410d6922d/documents/2"
              - availableDocumentTypes:
                  - isDefault: "true"
                    type: electronic
                display: inline
                documentId: "3"
                includeInDownload: "true"
                name: contractor_agreement.docx
                order: "3"
                pages: "2"
                signerMustAcknowledge: no_interaction
                type: content
                uri: "/envelopes/44efc9e6-xxxx-xxxx-xxxx-801410d6922d/documents/3"
              - availableDocumentTypes:
                  - isDefault: "true"
                    type: electronic
                display: inline
                documentId: certificate
                includeInDownload: "true"
                name: Summary
                order: "999"
                pages: "4"
                signerMustAcknowledge: no_interaction
                type: summary
                uri: "/envelopes/44efc9e6-xxxx-xxxx-xxxx-801410d6922d/documents/certificate"
            envelopeId: 44efc9e6-xxxx-xxxx-xxxx-801410d6922d
          request:
          style: custom
          title: List All Documents in an Envelope
    put:
      tags:
        - EnvelopeDocuments
      summary: Adds or replaces a document in an existing envelope.
      description: |
        Adds or replaces a document in an existing draft or in-process envelope.
        An in-process envelope is one that has been sent but not yet completed or voided.


        **Note:** When adding or modifying documents for an in-process envelope,
        DocuSign recommends
        [locking the envelope](/docs/esign-rest-api/reference/envelopes/envelopelocks/create/)
        prior to making any changes.

        To add a new document, set the `documentId` path parameter to a new document ID.

        To replace a document, set the `documentId` path parameter to the document ID of the existing document.
        The tabs of the original document will be applied to the new document.
        For example, a request in cURL looks like this:

        ```
        $ curl --location --request PUT 'https://demo.docusign.net/restapi/v2.1/accounts/0cdb3ff3-xxxx-xxxx-xxxx-e43af011006d/envelopes/ea4cc25b-xxxx-xxxx-xxxx-a67a0a2a4f6c/documents/1' \
            --header 'Authorization: Bearer eyJ...bqg' \
            --header 'Content-Disposition: filename="newDocument"' \
            --header 'Content-Type: application/pdf' \
            --data-binary '@/location/of/document.pdf'
        ```
      operationId: Documents_PutDocument
      consumes:
        - application/pdf
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: documentId
          in: path
          description: |
            The unique ID of the document within the envelope.

            Unlike other IDs in the eSignature API,
            you specify the `documentId` yourself.
            Typically the first document has the ID
            `1`, the second document `2`, and so on,
            but you can use any numbering scheme
            that fits within a 32-bit signed integer
            (1 through 2147483647).


            Tab objects have a `documentId` property
            that specifies the document on which to place
            the tab.
          required: true
          type: string
        - name: envelopeId
          in: path
          description: "The envelope's GUID. \n\nExample: `93be49ab-xxxx-xxxx-xxxx-f752070d71ec`\n"
          required: true
          type: string
        - name: documentFileBytes
          in: body
          description: Updated document content.
          required: true
          schema:
            format: binary
            type: string
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/envelopeDocument"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: updateDocument
      x-ds-method: update
      x-ds-service: Envelopes
      x-ds-in-sdk: true
    parameters: []
  ? "/v2.1/accounts/{accountId}/envelopes/{envelopeId}/documents/{documentId}/fields"
  : get:
      tags:
        - EnvelopeDocumentFields
      summary: Gets the custom document fields from an  existing envelope document.
      description:
        Retrieves the custom document field information from an existing
        envelope document.
      operationId: DocumentFields_GetDocumentFields
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: documentId
          in: path
          description: |
            The unique ID of the document within the envelope.

            Unlike other IDs in the eSignature API,
            you specify the `documentId` yourself.
            Typically the first document has the ID
            `1`, the second document `2`, and so on,
            but you can use any numbering scheme
            that fits within a 32-bit signed integer
            (1 through 2147483647).


            Tab objects have a `documentId` property
            that specifies the document on which to place
            the tab.
          required: true
          type: string
        - name: envelopeId
          in: path
          description: "The envelope's GUID. \n\nExample: `93be49ab-xxxx-xxxx-xxxx-f752070d71ec`\n"
          required: true
          type: string
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/EnvelopeDocumentFields"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: listDocumentFields
      x-ds-method: list
      x-ds-service: Envelopes
      x-ds-in-sdk: true
    put:
      tags:
        - EnvelopeDocumentFields
      summary: Updates existing custom document fields in an existing envelope document.
      description:
        Updates existing custom document fields in an existing envelope
        document.
      operationId: DocumentFields_PutDocumentFields
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: documentId
          in: path
          description: |
            The unique ID of the document within the envelope.

            Unlike other IDs in the eSignature API,
            you specify the `documentId` yourself.
            Typically the first document has the ID
            `1`, the second document `2`, and so on,
            but you can use any numbering scheme
            that fits within a 32-bit signed integer
            (1 through 2147483647).


            Tab objects have a `documentId` property
            that specifies the document on which to place
            the tab.
          required: true
          type: string
        - name: envelopeId
          in: path
          description: "The envelope's GUID. \n\nExample: `93be49ab-xxxx-xxxx-xxxx-f752070d71ec`\n"
          required: true
          type: string
        - name: EnvelopeDocumentFields
          in: body
          required: false
          schema:
            "$ref": "#/definitions/EnvelopeDocumentFields"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/EnvelopeDocumentFields"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: updateDocumentFields
      x-ds-method: update
      x-ds-service: Envelopes
      x-ds-in-sdk: true
    post:
      tags:
        - EnvelopeDocumentFields
      summary: Creates custom document fields in an existing envelope document.
      description: Creates custom document fields in an existing envelope document.
      operationId: DocumentFields_PostDocumentFields
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: documentId
          in: path
          description: |
            The unique ID of the document within the envelope.

            Unlike other IDs in the eSignature API,
            you specify the `documentId` yourself.
            Typically the first document has the ID
            `1`, the second document `2`, and so on,
            but you can use any numbering scheme
            that fits within a 32-bit signed integer
            (1 through 2147483647).


            Tab objects have a `documentId` property
            that specifies the document on which to place
            the tab.
          required: true
          type: string
        - name: envelopeId
          in: path
          description: "The envelope's GUID. \n\nExample: `93be49ab-xxxx-xxxx-xxxx-f752070d71ec`\n"
          required: true
          type: string
        - name: EnvelopeDocumentFields
          in: body
          required: false
          schema:
            "$ref": "#/definitions/EnvelopeDocumentFields"
          description: ""
      responses:
        "201":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/EnvelopeDocumentFields"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: createDocumentFields
      x-ds-method: create
      x-ds-service: Envelopes
      x-ds-in-sdk: true
    delete:
      tags:
        - EnvelopeDocumentFields
      summary: Deletes custom document fields from an existing envelope document.
      description: Deletes custom document fields from an existing envelope document.
      operationId: DocumentFields_DeleteDocumentFields
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: documentId
          in: path
          description: |
            The unique ID of the document within the envelope.

            Unlike other IDs in the eSignature API,
            you specify the `documentId` yourself.
            Typically the first document has the ID
            `1`, the second document `2`, and so on,
            but you can use any numbering scheme
            that fits within a 32-bit signed integer
            (1 through 2147483647).


            Tab objects have a `documentId` property
            that specifies the document on which to place
            the tab.
          required: true
          type: string
        - name: envelopeId
          in: path
          description: "The envelope's GUID. \n\nExample: `93be49ab-xxxx-xxxx-xxxx-f752070d71ec`\n"
          required: true
          type: string
        - name: EnvelopeDocumentFields
          in: body
          required: false
          schema:
            "$ref": "#/definitions/EnvelopeDocumentFields"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/EnvelopeDocumentFields"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: deleteDocumentFields
      x-ds-method: delete
      x-ds-service: Envelopes
      x-ds-in-sdk: true
    parameters: []
  ? "/v2.1/accounts/{accountId}/envelopes/{envelopeId}/documents/{documentId}/html_definitions"
  : get:
      tags:
        - EnvelopeDocumentHtmlDefinitions
      summary:
        Retrieves the HTML definition used to generate a dynamically sized
        responsive document.
      operationId: ResponsiveHtml_GetEnvelopeDocumentHtmlDefinitions
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: documentId
          in: path
          description: |-
            The GUID of the document.

            Example: c671747c-xxxx-xxxx-xxxx-4a4a48e23744
          required: true
          type: string
        - name: envelopeId
          in: path
          description: "The envelope's GUID. \n\nExample: `93be49ab-xxxx-xxxx-xxxx-f752070d71ec`\n"
          required: true
          type: string
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/documentHtmlDefinitionOriginals"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getEnvelopeDocumentHtmlDefinitions
      description:
        "Retrieves the HTML definition used to generate a dynamically sized
        responsive document.\n\nIf the document was not created as a signable HTML
        document, this endpoint will return a 200-OK response and an empty JSON body.
        \n\n**Note:** The `documentId` query parameter is a GUID value, not an integer
        document ID. If an invalid document ID is provided, this endpoint will return
        a 200-OK response and an empty JSON body.\n\n### Related topics\n\n- [Responsive
        signing](/docs/esign-rest-api/esign101/concepts/responsive/)"
      x-ds-method: get
      x-ds-service: Uncategorized
      x-ds-in-sdk: true
    parameters: []
  ? "/v2.1/accounts/{accountId}/envelopes/{envelopeId}/documents/{documentId}/pages"
  : get:
      tags:
        - Envelopes
      summary: Returns document page images based on input.
      operationId: Pages_GetPageImages
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: documentId
          in: path
          description: |
            The unique ID of the document within the envelope.

            Unlike other IDs in the eSignature API,
            you specify the `documentId` yourself.
            Typically the first document has the ID
            `1`, the second document `2`, and so on,
            but you can use any numbering scheme
            that fits within a 32-bit signed integer
            (1 through 2147483647).


            Tab objects have a `documentId` property
            that specifies the document on which to place
            the tab.
          required: true
          type: string
        - name: envelopeId
          in: path
          description: "The envelope's GUID. \n\nExample: `93be49ab-xxxx-xxxx-xxxx-f752070d71ec`\n"
          required: true
          type: string
        - name: count
          in: query
          required: false
          type: string
          description: The maximum number of results to return.
        - name: dpi
          in: query
          required: false
          type: string
          description:
            The number of dots per inch (DPI) for the resulting images. Valid
            values are 1-310 DPI. The default value is 94.
        - name: max_height
          in: query
          required: false
          type: string
          description: Sets the maximum height of the returned images in pixels.
        - name: max_width
          in: query
          required: false
          type: string
          description: Sets the maximum width of the returned images in pixels.
        - name: nocache
          in: query
          required: false
          type: string
          description:
            "When **true,** using cache is disabled and image information
            is retrieved from a database. **True** is the default value. "
        - name: show_changes
          in: query
          required: false
          type: string
          description: When **true,** changes display in the user interface.
        - name: start_position
          in: query
          required: false
          type: string
          description:
            The position within the total result set from which to start
            returning values. The value **thumbnail** may be used to return the page
            image.
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/pageImages"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getDocumentPageImages
      description:
        Returns images of the pages in a document for display based on
        the parameters that you specify.
      x-ds-method: getPageImages
      x-ds-service: Envelopes
      x-ds-in-sdk: true
    parameters: []
  ? "/v2.1/accounts/{accountId}/envelopes/{envelopeId}/documents/{documentId}/pages/{pageNumber}"
  : delete:
      tags:
        - Envelopes
      summary: Deletes a page from a document in an envelope.
      description:
        Deletes a page from a document in an envelope based on the page
        number.
      operationId: Pages_DeletePage
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: documentId
          in: path
          description: |
            The unique ID of the document within the envelope.

            Unlike other IDs in the eSignature API,
            you specify the `documentId` yourself.
            Typically the first document has the ID
            `1`, the second document `2`, and so on,
            but you can use any numbering scheme
            that fits within a 32-bit signed integer
            (1 through 2147483647).


            Tab objects have a `documentId` property
            that specifies the document on which to place
            the tab.
          required: true
          type: string
        - name: envelopeId
          in: path
          description: "The envelope's GUID. \n\nExample: `93be49ab-xxxx-xxxx-xxxx-f752070d71ec`\n"
          required: true
          type: string
        - name: pageNumber
          in: path
          description: The page number being accessed.
          required: true
          type: string
      responses:
        "200":
          description: A successful response or an error.
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: deleteDocumentPage
      x-ds-method: deleteDocumentPage
      x-ds-service: Envelopes
      x-ds-in-sdk: true
    parameters: []
  ? "/v2.1/accounts/{accountId}/envelopes/{envelopeId}/documents/{documentId}/pages/{pageNumber}/page_image"
  : get:
      tags:
        - Envelopes
      summary: Gets a page image from an envelope for display.
      description: Returns an image of a page in a document for display.
      operationId: Pages_GetPageImage
      consumes: []
      produces:
        - image/png
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: documentId
          in: path
          description: |
            The unique ID of the document within the envelope.

            Unlike other IDs in the eSignature API,
            you specify the `documentId` yourself.
            Typically the first document has the ID
            `1`, the second document `2`, and so on,
            but you can use any numbering scheme
            that fits within a 32-bit signed integer
            (1 through 2147483647).


            Tab objects have a `documentId` property
            that specifies the document on which to place
            the tab.
          required: true
          type: string
        - name: envelopeId
          in: path
          description: "The envelope's GUID. \n\nExample: `93be49ab-xxxx-xxxx-xxxx-f752070d71ec`\n"
          required: true
          type: string
        - name: pageNumber
          in: path
          description: The page number being accessed.
          required: true
          type: string
        - name: dpi
          in: query
          description: Sets the dots per inch (DPI) for the returned image.
          required: false
          type: string
        - name: max_height
          in: query
          description:
            Sets the maximum height for the page image in pixels. The DPI
            is recalculated based on this setting.
          required: false
          type: string
        - name: max_width
          in: query
          description:
            Sets the maximum width for the page image in pixels. The DPI
            is recalculated based on this setting.
          required: false
          type: string
        - name: show_changes
          in: query
          required: false
          type: string
          description: When **true,** changes display in the user interface.
      responses:
        "200":
          description: A successful response or an error.
          schema:
            type: file
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getDocumentPageImage
      x-ds-method: getPageImage
      x-ds-service: Envelopes
      x-ds-in-sdk: true
    put:
      tags:
        - Envelopes
      summary: Rotates page image from an envelope for display.
      description:
        Rotates page image from an envelope for display. The page image
        can be rotated to the left or right.
      operationId: Pages_PutPageImage
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: documentId
          in: path
          description: |
            The unique ID of the document within the envelope.

            Unlike other IDs in the eSignature API,
            you specify the `documentId` yourself.
            Typically the first document has the ID
            `1`, the second document `2`, and so on,
            but you can use any numbering scheme
            that fits within a 32-bit signed integer
            (1 through 2147483647).


            Tab objects have a `documentId` property
            that specifies the document on which to place
            the tab.
          required: true
          type: string
        - name: envelopeId
          in: path
          description: "The envelope's GUID. \n\nExample: `93be49ab-xxxx-xxxx-xxxx-f752070d71ec`\n"
          required: true
          type: string
        - name: pageNumber
          in: path
          description: The page number being accessed.
          required: true
          type: string
        - name: pageRequest
          in: body
          required: false
          schema:
            "$ref": "#/definitions/pageRequest"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: rotateDocumentPage
      x-ds-method: rotateDocumentPage
      x-ds-service: Envelopes
      x-ds-in-sdk: true
    parameters: []
  ? "/v2.1/accounts/{accountId}/envelopes/{envelopeId}/documents/{documentId}/pages/{pageNumber}/tabs"
  : get:
      tags:
        - EnvelopeDocumentTabs
      summary: Returns tabs on the specified page.
      operationId: Tabs_GetPageTabs
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: documentId
          in: path
          description: |
            The unique ID of the document within the envelope.

            Unlike other IDs in the eSignature API,
            you specify the `documentId` yourself.
            Typically the first document has the ID
            `1`, the second document `2`, and so on,
            but you can use any numbering scheme
            that fits within a 32-bit signed integer
            (1 through 2147483647).


            Tab objects have a `documentId` property
            that specifies the document on which to place
            the tab.
          required: true
          type: string
        - name: envelopeId
          in: path
          description: "The envelope's GUID. \n\nExample: `93be49ab-xxxx-xxxx-xxxx-f752070d71ec`\n"
          required: true
          type: string
        - name: pageNumber
          in: path
          description: The page number being accessed.
          required: true
          type: string
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/EnvelopeDocumentTabs"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getPageTabs
      description: |
        Returns the tabs from the page specified by `pageNumber` of the document specified by `documentId` in the
        envelope specified by `envelopeId`.
      x-ds-method: getByPage
      x-ds-service: Envelopes
      x-ds-in-sdk: true
    parameters: []
  ? "/v2.1/accounts/{accountId}/envelopes/{envelopeId}/documents/{documentId}/responsive_html_preview"
  : post:
      tags:
        - DocumentResponsiveHtmlPreview
      summary: Creates a preview of the responsive version of a document.
      operationId: ResponsiveHtml_PostDocumentResponsiveHtmlPreview
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: documentId
          in: path
          description: |
            The unique ID of the document within the envelope.

            Unlike other IDs in the eSignature API,
            you specify the `documentId` yourself.
            Typically the first document has the ID
            `1`, the second document `2`, and so on,
            but you can use any numbering scheme
            that fits within a 32-bit signed integer
            (1 through 2147483647).


            Tab objects have a `documentId` property
            that specifies the document on which to place
            the tab.
          required: true
          type: string
        - name: envelopeId
          in: path
          description: "The envelope's GUID. \n\nExample: `93be49ab-xxxx-xxxx-xxxx-f752070d71ec`\n"
          required: true
          type: string
        - name: documentHtmlDefinition
          in: body
          required: false
          schema:
            "$ref": "#/definitions/documentHtmlDefinition"
          description: ""
      responses:
        "201":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/documentHtmlDefinitions"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: createDocumentResponsiveHtmlPreview
      description: |-
        Creates a preview of the
        [responsive](/docs/esign-rest-api/esign101/concepts/responsive/)
        HTML version of a specific document.
        This method enables you to preview a PDF document
        conversion to responsive HTML across device types prior to sending.

        The request body is a `documentHtmlDefinition` object, which holds the responsive signing parameters that define how to generate the HTML version of the signing document.
      x-ds-method: create
      x-ds-service: Uncategorized
      x-ds-in-sdk: true
    parameters: []
  ? "/v2.1/accounts/{accountId}/envelopes/{envelopeId}/documents/{documentId}/tabs"
  : get:
      tags:
        - EnvelopeDocumentTabs
      summary: Returns the tabs on a document.
      operationId: Tabs_GetDocumentTabs
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: documentId
          in: path
          description: |
            The unique ID of the document within the envelope.

            Unlike other IDs in the eSignature API,
            you specify the `documentId` yourself.
            Typically the first document has the ID
            `1`, the second document `2`, and so on,
            but you can use any numbering scheme
            that fits within a 32-bit signed integer
            (1 through 2147483647).


            Tab objects have a `documentId` property
            that specifies the document on which to place
            the tab.
          required: true
          type: string
        - name: envelopeId
          in: path
          description: "The envelope's GUID. \n\nExample: `93be49ab-xxxx-xxxx-xxxx-f752070d71ec`\n"
          required: true
          type: string
        - name: include_metadata
          in: query
          required: false
          type: string
          description:
            When **true,** the response includes metadata indicating which
            properties are editable.
        - name: page_numbers
          in: query
          required: false
          type: string
          description: |-
            Filters for tabs that occur on the pages that you specify. Enter as a comma-separated list of page GUIDs.

            Example: `page_numbers=2,6`

            Note: You can only enter individual page numbers, and not a page range.
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/EnvelopeDocumentTabs"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getDocumentTabs
      description: |
        Returns the tabs on the document specified by `documentId` in the
        envelope specified by `envelopeId`.
      x-ds-method: get
      x-ds-service: Envelopes
      x-ds-in-sdk: true
    put:
      tags:
        - EnvelopeDocumentTabs
      summary: Updates the tabs for document.
      operationId: Tabs_PutDocumentTabs
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: documentId
          in: path
          description: |
            The unique ID of the document within the envelope.

            Unlike other IDs in the eSignature API,
            you specify the `documentId` yourself.
            Typically the first document has the ID
            `1`, the second document `2`, and so on,
            but you can use any numbering scheme
            that fits within a 32-bit signed integer
            (1 through 2147483647).


            Tab objects have a `documentId` property
            that specifies the document on which to place
            the tab.
          required: true
          type: string
        - name: envelopeId
          in: path
          description: "The envelope's GUID. \n\nExample: `93be49ab-xxxx-xxxx-xxxx-f752070d71ec`\n"
          required: true
          type: string
        - name: tabs
          in: body
          required: false
          schema:
            "$ref": "#/definitions/tabs"
          description:
            A list of tabs, which are represented graphically as symbols
            on documents at the time of signing. Tabs show recipients where to sign,
            initial, or enter data. They may also display data to the recipients.
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/tabs"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: updateDocumentTabs
      description: |
        Updates tabs in the document specified by `documentId` in the
        envelope specified by `envelopeId`.

        <ds-inlinemessage kind="information" markdown="1">
        This method operates only on
        <a href="/docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/#schema__enveloperecipienttabs_smartsectiontabs"><code>smartSection</code></a>
        and
        <a href="/docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/#schema__enveloperecipienttabs_polylineoverlaytabs"><code>polyLineOverlay</code></a>
        tabs.
        </ds-inlinemessage>
      x-ds-method: update
      x-ds-service: Uncategorized
      x-ds-in-sdk: true
    post:
      tags:
        - EnvelopeDocumentTabs
      summary: Adds tabs to a document in an envelope.
      operationId: Tabs_PostDocumentTabs
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: documentId
          in: path
          description: |
            The unique ID of the document within the envelope.

            Unlike other IDs in the eSignature API,
            you specify the `documentId` yourself.
            Typically the first document has the ID
            `1`, the second document `2`, and so on,
            but you can use any numbering scheme
            that fits within a 32-bit signed integer
            (1 through 2147483647).


            Tab objects have a `documentId` property
            that specifies the document on which to place
            the tab.
          required: true
          type: string
        - name: envelopeId
          in: path
          description: "The envelope's GUID. \n\nExample: `93be49ab-xxxx-xxxx-xxxx-f752070d71ec`\n"
          required: true
          type: string
        - name: tabs
          in: body
          required: false
          schema:
            "$ref": "#/definitions/tabs"
          description:
            A list of tabs, which are represented graphically as symbols
            on documents at the time of signing. Tabs show recipients where to sign,
            initial, or enter data. They may also display data to the recipients.
      responses:
        "201":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/tabs"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: createDocumentTabs
      description: |
        Adds tabs to the document specified by `documentId` in the
        envelope specified by `envelopeId`.

        <ds-inlinemessage kind="information" markdown="1">
        This method operates only on
        <a href="/docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/#schema__enveloperecipienttabs_smartsectiontabs"><code>smartSection</code></a>
        and
        <a href="/docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/#schema__enveloperecipienttabs_polylineoverlaytabs"><code>polyLineOverlay</code></a>
        tabs.
        </ds-inlinemessage>
      x-ds-method: create
      x-ds-service: Uncategorized
      x-ds-in-sdk: true
    delete:
      tags:
        - EnvelopeDocumentTabs
      summary: Deletes tabs from a document in an envelope.
      operationId: Tabs_DeleteDocumentTabs
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: documentId
          in: path
          description: |
            The unique ID of the document within the envelope.

            Unlike other IDs in the eSignature API,
            you specify the `documentId` yourself.
            Typically the first document has the ID
            `1`, the second document `2`, and so on,
            but you can use any numbering scheme
            that fits within a 32-bit signed integer
            (1 through 2147483647).


            Tab objects have a `documentId` property
            that specifies the document on which to place
            the tab.
          required: true
          type: string
        - name: envelopeId
          in: path
          description: "The envelope's GUID. \n\nExample: `93be49ab-xxxx-xxxx-xxxx-f752070d71ec`\n"
          required: true
          type: string
        - name: tabs
          in: body
          required: false
          schema:
            "$ref": "#/definitions/tabs"
          description:
            A list of tabs, which are represented graphically as symbols
            on documents at the time of signing. Tabs show recipients where to sign,
            initial, or enter data. They may also display data to the recipients.
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/tabs"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: deleteDocumentTabs
      description: |
        Deletes tabs from the document specified by `documentId` in the
        envelope specified by `envelopeId`.
      x-ds-method: delete
      x-ds-service: Uncategorized
      x-ds-in-sdk: true
    parameters: []
  ? "/v2.1/accounts/{accountId}/envelopes/{envelopeId}/documents/{documentId}/templates"
  : get:
      tags:
        - EnvelopeTemplates
      summary: Gets the templates associated with a document in an existing envelope.
      description:
        Retrieves the templates associated with a document in the specified
        envelope.
      operationId: Templates_GetDocumentTemplates
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: documentId
          in: path
          description: |
            The unique ID of the document within the envelope.

            Unlike other IDs in the eSignature API,
            you specify the `documentId` yourself.
            Typically the first document has the ID
            `1`, the second document `2`, and so on,
            but you can use any numbering scheme
            that fits within a 32-bit signed integer
            (1 through 2147483647).


            Tab objects have a `documentId` property
            that specifies the document on which to place
            the tab.
          required: true
          type: string
        - name: envelopeId
          in: path
          description: "The envelope's GUID. \n\nExample: `93be49ab-xxxx-xxxx-xxxx-f752070d71ec`\n"
          required: true
          type: string
        - name: include
          in: query
          required: false
          type: string
          description: |
            A comma-separated list that limits the results.
            Valid values are:

            * `applied`
            * `matched`
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/templateInformation"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: listTemplatesForDocument
      x-ds-method: listByDocument
      x-ds-service: Envelopes
      x-ds-in-sdk: true
    post:
      tags:
        - EnvelopeTemplates
      summary: Adds templates to a document in an  envelope.
      description: Adds templates to a document in the specified envelope.
      operationId: Templates_PostDocumentTemplates
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: documentId
          in: path
          description: |
            The unique ID of the document within the envelope.

            Unlike other IDs in the eSignature API,
            you specify the `documentId` yourself.
            Typically the first document has the ID
            `1`, the second document `2`, and so on,
            but you can use any numbering scheme
            that fits within a 32-bit signed integer
            (1 through 2147483647).


            Tab objects have a `documentId` property
            that specifies the document on which to place
            the tab.
          required: true
          type: string
        - name: envelopeId
          in: path
          description: "The envelope's GUID. \n\nExample: `93be49ab-xxxx-xxxx-xxxx-f752070d71ec`\n"
          required: true
          type: string
        - name: preserve_template_recipient
          in: query
          required: false
          type: string
          description:
            "If omitted or set to false (the default),\nenvelope recipients
            _will be removed_\nif the template being applied\nincludes only  tabs positioned
            via anchor text for the recipient,\nand none of the documents include the
            anchor text. \n\nWhen **true,** the recipients _will be preserved_ after
            the template is applied.\n\n"
        - name: documentTemplateList
          in: body
          required: false
          schema:
            "$ref": "#/definitions/documentTemplateList"
          description: ""
      responses:
        "201":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/documentTemplateList"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: applyTemplateToDocument
      x-ds-method: applyToDocument
      x-ds-service: Envelopes
      x-ds-in-sdk: true
    parameters: []
  ? "/v2.1/accounts/{accountId}/envelopes/{envelopeId}/documents/{documentId}/templates/{templateId}"
  : delete:
      tags:
        - EnvelopeTemplates
      summary: Deletes a template from a document in an existing envelope.
      description: Deletes the specified template from a document in an existing envelope.
      operationId: Templates_DeleteDocumentTemplates
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: documentId
          in: path
          description: |
            The unique ID of the document within the envelope.

            Unlike other IDs in the eSignature API,
            you specify the `documentId` yourself.
            Typically the first document has the ID
            `1`, the second document `2`, and so on,
            but you can use any numbering scheme
            that fits within a 32-bit signed integer
            (1 through 2147483647).


            Tab objects have a `documentId` property
            that specifies the document on which to place
            the tab.
          required: true
          type: string
        - name: envelopeId
          in: path
          description: "The envelope's GUID. \n\nExample: `93be49ab-xxxx-xxxx-xxxx-f752070d71ec`\n"
          required: true
          type: string
        - name: templateId
          in: path
          description: The ID of the template.
          required: true
          type: string
      responses:
        "200":
          description: A successful response or an error.
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: deleteTemplatesFromDocument
      x-ds-method: delete
      x-ds-service: Envelopes
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/envelopes/{envelopeId}/email_settings":
    get:
      tags:
        - EnvelopeEmailSettings
      summary: Gets the email setting overrides for an envelope.
      description: Retrieves the email override settings for the specified envelope.
      operationId: EmailSettings_GetEmailSettings
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: envelopeId
          in: path
          description: "The envelope's GUID. \n\nExample: `93be49ab-xxxx-xxxx-xxxx-f752070d71ec`\n"
          required: true
          type: string
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/emailSettings"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getEmailSettings
      x-ds-method: get
      x-ds-service: Envelopes
      x-ds-in-sdk: true
    put:
      tags:
        - EnvelopeEmailSettings
      summary: Updates the email setting overrides for an envelope.
      description: |-
        Updates the existing email override settings for the specified envelope. Note that modifying email settings will only affect email communications that occur after the modification was made.

        This can also be used to delete an individual email override setting by using an empty string for the value to be deleted.
      operationId: EmailSettings_PutEmailSettings
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: envelopeId
          in: path
          description: "The envelope's GUID. \n\nExample: `93be49ab-xxxx-xxxx-xxxx-f752070d71ec`\n"
          required: true
          type: string
        - name: emailSettings
          in: body
          required: false
          schema:
            "$ref": "#/definitions/emailSettings"
          description: A complex type that contains email settings.
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/emailSettings"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: updateEmailSettings
      x-ds-method: update
      x-ds-service: Envelopes
      x-ds-in-sdk: true
    post:
      tags:
        - EnvelopeEmailSettings
      summary: Adds email setting overrides to an envelope.
      description:
        "Adds email override settings, changing the email address to reply
        to an email address, name, or the BCC for email archive information, for the
        envelope. Note that adding email settings will only affect email communications
        that occur after the addition was made.\n\nThe BCC Email address feature is
        designed to provide a copy of all email communications for external archiving
        purposes.\nTo send a copy of the envelope to a recipient who does not need
        to sign, use a Carbon Copy or Certified Delivery recipient type.\n\n**Note:**
        DocuSign recommends that envelopes sent using the BCC for Email Archive feature,
        including the BCC Email Override option, include additional signer authentication
        options. "
      operationId: EmailSettings_PostEmailSettings
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: envelopeId
          in: path
          description: "The envelope's GUID. \n\nExample: `93be49ab-xxxx-xxxx-xxxx-f752070d71ec`\n"
          required: true
          type: string
        - name: emailSettings
          in: body
          required: false
          schema:
            "$ref": "#/definitions/emailSettings"
          description: A complex type that contains email settings.
      responses:
        "201":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/emailSettings"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: createEmailSettings
      x-ds-method: create
      x-ds-service: Envelopes
      x-ds-in-sdk: true
    delete:
      tags:
        - EnvelopeEmailSettings
      summary: Deletes the email setting overrides for an envelope.
      description:
        Deletes all existing email override settings for the envelope.
        If you want to delete an individual email override setting, use the PUT and
        set the value to an empty string. Note that deleting email settings will only
        affect email communications that occur after the deletion and the normal account
        email settings are used for future email communications.
      operationId: EmailSettings_DeleteEmailSettings
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: envelopeId
          in: path
          description: "The envelope's GUID. \n\nExample: `93be49ab-xxxx-xxxx-xxxx-f752070d71ec`\n"
          required: true
          type: string
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/emailSettings"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: deleteEmailSettings
      x-ds-method: delete
      x-ds-service: Envelopes
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/envelopes/{envelopeId}/form_data":
    get:
      tags:
        - EnvelopeFormData
      summary: Returns envelope tab data for an existing envelope.
      operationId: FormData_GetFormData
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: envelopeId
          in: path
          description: "The envelope's GUID. \n\nExample: `93be49ab-xxxx-xxxx-xxxx-f752070d71ec`\n"
          required: true
          type: string
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/envelopeFormData"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getFormData
      description: |
        This method downloads the envelope and tab data (also called form data) from any in-process, completed, or canceled envelope that you sent or that is shared with you. Recipients who are also full administrators on an account can view form data for any envelopes that another user on the account has sent to them.

        **Note:** To use this feature, the Sending Setting "Allow sender to download form data" must be enabled for the account.

        ### Related topics

        - [How to get envelope tab values](/docs/esign-rest-api/how-to/get-envelope-tab-values/)
      x-ds-method: get
      x-ds-service: Envelopes
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/envelopes/{envelopeId}/html_definitions":
    get:
      tags:
        - EnvelopeHtmlDefinitions
      summary:
        Gets the Original HTML Definition used to generate the Responsive HTML
        for the envelope.
      operationId: ResponsiveHtml_GetEnvelopeHtmlDefinitions
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: envelopeId
          in: path
          description: "The envelope's GUID. \n\nExample: `93be49ab-xxxx-xxxx-xxxx-f752070d71ec`\n"
          required: true
          type: string
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/documentHtmlDefinitionOriginals"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getEnvelopeHtmlDefinitions
      description: ""
      x-ds-method: list
      x-ds-service: Uncategorized
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/envelopes/{envelopeId}/lock":
    get:
      tags:
        - EnvelopeLocks
      summary: Gets envelope lock information.
      description: |+
        Retrieves general information about an envelope lock.

        The user requesting the information must be the same user
        who locked the envelope.

        You can use this method to recover the lock information,
        including the `lockToken`,
        for a locked envelope.
        The `X-DocuSign-Edit` header is included in the response.

        See [EnvelopeLocks: create](/docs/esign-rest-api/reference/envelopes/envelopelocks/create/)
        for a description of the `X-DocuSign-Edit` header.

        ### Related topics

        - [Common API Tasks: Locking and unlocking envelopes](https://www.docusign.com/blog/dsdev-common-api-tasks-locking-and-unlocking-envelopes)

      operationId: Lock_GetEnvelopeLock
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: envelopeId
          in: path
          description: "The envelope's GUID. \n\nExample: `93be49ab-xxxx-xxxx-xxxx-f752070d71ec`\n"
          required: true
          type: string
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/EnvelopeLocks"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getLock
      x-ds-method: get
      x-ds-service: Envelopes
      x-ds-in-sdk: true
    put:
      tags:
        - EnvelopeLocks
      summary: Updates an envelope lock.
      description: |+
        Updates the lock information for a locked envelope.

        You must include the `X-DocuSign-Edit` header
        as described in
        [EnvelopeLocks: create](/docs/esign-rest-api/reference/envelopes/envelopelocks/create/).


        Use this method to change the duration
        of the lock (`lockDurationInSeconds`)
        or the `lockedByApp` string.

        The request body is a full `lockRequest` object,
        but you only need to specify the
        properties that you are updating. For example:

        ```
        {
          "lockDurationInSeconds": "3600",
          "lockedByApp": "My Application"
        }
        ```

      operationId: Lock_PutEnvelopeLock
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: envelopeId
          in: path
          description: "The envelope's GUID. \n\nExample: `93be49ab-xxxx-xxxx-xxxx-f752070d71ec`\n"
          required: true
          type: string
        - name: lockRequest
          in: body
          required: false
          schema:
            "$ref": "#/definitions/lockRequest"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/EnvelopeLocks"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: updateLock
      x-ds-method: update
      x-ds-service: Envelopes
      x-ds-in-sdk: true
    post:
      tags:
        - EnvelopeLocks
      summary: Locks an envelope.
      description: |+
        This method locks the specified envelope and sets the time until
        the lock expires to prevent other users or recipients from
        changing the envelope.

        The response to this request includes a `lockToken` parameter
        that you must use in the `X-DocuSign-Edit` header for
        every PUT method (typically a method that updates an envelope)
        while the envelope is locked.


        If you do not provide the `lockToken` when accessing
        a locked envelope, you will get the following
        error:

        ```
        {
           "errorCode": "EDIT_LOCK_NOT_LOCK_OWNER",
           "message": "The user is not the owner of the lock. The template is locked by another user or in another application"
        }
        ```


        ### The X-DocuSign-Edit header

        The `X-DocuSign-Edit` header looks like this
        and can be specified in either JSON or XML.

        **JSON**
        ```
        {
          "LockToken": "token-from-response",
          "LockDurationInSeconds": "600"
        }
        ```

        **XML**
        ```
        <DocuSignEdit>
          <LockToken>token-from-response</LockToken>
          <LockDurationInSeconds>600</LockDurationInSeconds>
        </DocuSignEdit>
        ```

        In the actual HTTP header, you would remove the linebreaks:

        ```
        X-DocuSign-Edit: {"LockToken": "token-from-response", "LockDurationInSeconds": "600" }
            or
        X-DocuSign-Edit:<DocuSignEdit><LockToken>token-from-response</LockToken><LockDurationInSeconds>600</LockDurationInSeconds></DocuSignEdit>
        ```


        ### Related topics

        - [Common API Tasks: Locking and unlocking envelopes](https://www.docusign.com/blog/dsdev-common-api-tasks-locking-and-unlocking-envelopes)

      operationId: Lock_PostEnvelopeLock
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: envelopeId
          in: path
          description: "The envelope's GUID. \n\nExample: `93be49ab-xxxx-xxxx-xxxx-f752070d71ec`\n"
          required: true
          type: string
        - name: lockRequest
          in: body
          required: false
          schema:
            "$ref": "#/definitions/lockRequest"
          description: ""
      responses:
        "201":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/EnvelopeLocks"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: createLock
      x-ds-method: create
      x-ds-service: Envelopes
      x-ds-in-sdk: true
    delete:
      tags:
        - EnvelopeLocks
      summary: Deletes an envelope lock.
      description: |+
        Deletes the lock from the specified envelope.
        The user deleting the lock must be the same user
        who locked the envelope.

        You must include the `X-DocuSign-Edit` header
        as described in
        [EnvelopeLocks: create](/docs/esign-rest-api/reference/envelopes/envelopelocks/create/).

        This method takes an optional query parameter
        that lets you specify whether
        changes made while the envelope was locked
        are kept or discarded.


        | Query Parameter | Description                                                                                                                                                                         |
        | :-------------- | :---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
        | `save_changes`  | When **true** (the default), any changes made while the lock was active are saved. When **false,** any changes made while the envelope was locked are discarded. |

        ### Related topics

        - [Common API Tasks: Locking and unlocking envelopes](https://www.docusign.com/blog/dsdev-common-api-tasks-locking-and-unlocking-envelopes)

      operationId: Lock_DeleteEnvelopeLock
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: envelopeId
          in: path
          description: "The envelope's GUID. \n\nExample: `93be49ab-xxxx-xxxx-xxxx-f752070d71ec`\n"
          required: true
          type: string
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/EnvelopeLocks"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: deleteLock
      x-ds-method: delete
      x-ds-service: Envelopes
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/envelopes/{envelopeId}/notification":
    get:
      tags:
        - Envelopes
      summary: Gets envelope notification information.
      description:
        Retrieves the envelope notification, reminders and expirations,
        information for an existing envelope.
      operationId: Notification_GetEnvelopesEnvelopeIdNotification
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: envelopeId
          in: path
          description: "The envelope's GUID. \n\nExample: `93be49ab-xxxx-xxxx-xxxx-f752070d71ec`\n"
          required: true
          type: string
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/notification"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getNotificationSettings
      x-ds-method: getNotificationSettings
      x-ds-service: Envelopes
      x-ds-in-sdk: true
    put:
      tags:
        - Envelopes
      summary: Sets envelope notifications for an existing envelope.
      operationId: Notification_PutEnvelopesEnvelopeIdNotification
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: envelopeId
          in: path
          description: "The envelope's GUID. \n\nExample: `93be49ab-xxxx-xxxx-xxxx-f752070d71ec`\n"
          required: true
          type: string
        - name: envelopeNotificationRequest
          in: body
          required: false
          schema:
            "$ref": "#/definitions/envelopeNotificationRequest"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/notification"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: updateNotificationSettings
      description: |-
        This method sets the notifications (reminders and expirations) for an existing envelope. The request body sends a structure containing reminders and expirations settings. It also specifies whether to use the settings specified in the request, or the account default notification settings for the envelope.

        Note that this request only specifies when notifications are sent; it does not initiate sending of email messages.
      x-ds-method: updateNotificationSettings
      x-ds-service: Envelopes
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/envelopes/{envelopeId}/recipients":
    get:
      tags:
        - EnvelopeRecipients
      summary: Gets the status of recipients for an envelope.
      description: |
        Retrieves the status of all recipients in a single envelope and identifies the current recipient in the routing list. This method can also be used to retrieve the tab values.

        The `currentRoutingOrder` property of the response contains the `routingOrder` value of the current recipient indicating that the envelope has been sent to the recipient, but the recipient has not completed their actions.

        ### Related topics

        - [How to list envelope recipients](/docs/esign-rest-api/how-to/get-envelope-recipients/)
      operationId: Recipients_GetRecipients
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: envelopeId
          in: path
          description: "The envelope's GUID. \n\nExample: `93be49ab-xxxx-xxxx-xxxx-f752070d71ec`\n"
          required: true
          type: string
        - name: include_anchor_tab_locations
          in: query
          description:
            " When **true** and `include_tabs` value is set to **true,**
            all tabs with anchor tab properties are included in the response. "
          required: false
          type: string
        - name: include_extended
          in: query
          description:
            " When **true,** the extended properties are included in the
            response. "
          required: false
          type: string
        - name: include_metadata
          in: query
          required: false
          type: string
          description:
            Boolean value that specifies whether to include metadata associated
            with the recipients (for envelopes only, not templates).
        - name: include_tabs
          in: query
          description:
            When **true,** the tab information associated with the recipient
            is included in the response.
          required: false
          type: string
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/EnvelopeRecipients"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: listRecipients
      x-ds-method: list
      x-ds-service: Envelopes
      x-ds-in-sdk: true
      x-ds-examples:
        - description: |+
            This example shows the result of an envelope
            with one signer and a CC'ed recipient.


            ### Request
            The request for this endpoint has no payload.

            ```
            GET /restapi/v2.1/accounts/1703061/envelopes/44efc9e6-xxxx-xxxx-xxxx-801410d6922d/recipients
            ```


          direction: response
          format: json
          response:
            agents: []
            carbonCopies:
              - email: aoneil@example.com
                name: Ariana O'Neill
                recipientId: "2"
                recipientIdGuid: 72edf9b6-xxxx-xxxx-xxxx-86bc5d598bb8
                requireIdLookup: "false"
                routingOrder: "2"
                status: completed
                userId: b72bd827-xxxx-xxxx-xxxx-64ab32f0a0eb
            certifiedDeliveries: []
            currentRoutingOrder: "1"
            editors: []
            inPersonSigners: []
            intermediaries: []
            recipientCount: "2"
            signers:
              - deliveredDateTime: "2016-10-05T21:18:12.3330000Z"
                email: jallard@example.com
                isBulkRecipient: "false"
                name: Jennie Allard
                recipientId: "1"
                recipientIdGuid: 4575d5e9-xxxx-xxxx-xxxx-6c59ca7c43f8
                requireIdLookup: "false"
                routingOrder: "1"
                signedDateTime: "2016-10-05T21:18:41.6930000Z"
                status: completed
                userId: ca45284a-xxxx-xxxx-xxxx-76035bd795b2
          request:
          style: custom
          title: List Recipients and CC-ed Recipients
        - description: |
            This example shows the method's response after the envelope was signed.

            The signer recipient successfully authenticated using:
            * An access code (a pre-shared secret between the sender and the signer)
            * Authentication via Facebook. The Facebook email address is recorded in the Certificate of Completion
          direction: response
          format: json
          response:
            agents: []
            carbonCopies: []
            certifiedDeliveries: []
            currentRoutingOrder: "1"
            editors: []
            inPersonSigners: []
            intermediaries: []
            recipientCount: "1"
            signers:
              - accessCode: "1234"
                deliveredDateTime: "2016-07-11T06:19:36.4200000Z"
                email: larry@example.com
                idCheckConfigurationName: Facebook
                isBulkRecipient: "false"
                name: Larry Smithers
                recipientAuthenticationStatus:
                  accessCodeResult:
                    eventTimestamp: "2016-07-11T06:18:55.7170000Z"
                    status: Passed
                  facebookResult:
                    eventTimestamp: "2016-07-11T06:19:28.3170000Z"
                    status: Passed
                recipientId: "1"
                recipientIdGuid: 9670e679-xxxx-xxxx-xxxx-02b43027cb0a
                requireIdLookup: "true"
                routingOrder: "1"
                signInEachLocation: "false"
                signedDateTime: "2016-07-11T06:19:44.7470000Z"
                status: completed
                userId: 57a7b68f-xxxx-xxxx-xxxx-381042d14ca5
          request:
          style: custom
          title: List Recipients Who Used Facebook and Access Code Authentication
    put:
      tags:
        - EnvelopeRecipients
      summary:
        Updates recipients in a draft envelope or corrects recipient information
        for an in-process envelope.
      description: |+
        Updates the recipients of a draft envelope or corrects recipient information for an in-process envelope.

        If you send information for a recipient that does not already
        exist in a draft envelope, the recipient is added to the envelope
        (similar to the [EnvelopeRecipients: Create][EnvelopeRecipients-create] method).

        You can also use this method to resend an envelope to a recipient
        by using the `resend_envelope` option.

        **Updating Sent Envelopes**

        After an envelope has been sent, you can edit only the following properties:

        - `accessCode`
        - `agentCanEditName`
        - `agentCanEditEmail`
        - `customFields`
        - `deliveryMethod`
        - `documentVisibility`
        - `email` (If you provide an email address in this method, it will be treated as a new email address, even if it is exactly the same as the current address. Do not provide an email address if you do not want a correction email sent.)
        - `emailNotification`
        - `idCheckConfigurationName`
        - `identityVerification`
        - `name`
        - `note`
        - `phoneAuthentication`
        - `recipientType` (For this to work, you must also change the recipient object to match the recipient type.)
        - `requireIdLookup`
        - `routingOrder`
        - `routingOrder`
        - `signingGroupId` (You can change this ID to switch to a different signing group and its corresponding set of recipients.)
        - `smsAuthentication`
        - `suppressEmails`
        - `userName`

        If the recipient has signed,
        but the envelope is still active,
        the method will return success,
        but the `recipientUpdateResults` property
        in the response will include an error
        that the recipient could not be updated:

        ```
        {
          "recipientUpdateResults": [
            {
              "recipientId": "999",
              "errorDetails": {
                "errorCode": "RECIPIENT_UPDATE_FAILED",
                "message": "The recipient could not be updated.  Recipient not in state that allows correction."
              }
            }
          ]
        }
        ```

        If the envelope is completed,
        and you try to change a recipient's address,
        the method will fail with this error:

        ```
        {
          "errorCode": "ENVELOPE_INVALID_STATUS",
          "message": "Invalid envelope status. Envelope status is not one of: Created, Sent, Delivered, Correct."
        }
        ```

        **Note:** This method works on recipients only.
        To add recipient tabs,
        use methods from the [EnvelopeRecipientTabs][recipientTabs] resource.
        For example, this request body will add a recipient (`astanton@example.com`)
        but **NOT** the Sign Here recipient tab.

        ```json
        {
          "signers": [
            {
              "email": "astanton@example.com",
              "name": "Anne Stanton",
              "recipientId": "1",
        // THIS WILL NOT WORK
              "tabs": {
                "signHereTabs": [
                  {
                    "anchorString": "below",
                    "tooltip": "please sign here3"
                  },
                  . . .
                ]
              }
            }
          ]
        }
        ```


        [EnvelopeRecipients-create]: /docs/esign-rest-api/reference/envelopes/enveloperecipients/create/
        [recipientTabs]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/

      operationId: Recipients_PutRecipients
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: envelopeId
          in: path
          description: "The envelope's GUID. \n\nExample: `93be49ab-xxxx-xxxx-xxxx-f752070d71ec`\n"
          required: true
          type: string
        - name: combine_same_order_recipients
          in: query
          required: false
          type: string
          description:
            When **true,** recipients are combined or merged with matching
            recipients. Recipient matching occurs as part of [template matching](https://support.docusign.com/s/document-item?bundleId=jux1643235969954&topicId=fxo1578456612662.html),
            and is based on Recipient Role and Routing Order.
        - name: offline_signing
          in: query
          required: false
          type: string
          description:
            "Indicates if offline signing is enabled for the recipient when
            a network connection is unavailable. "
        - name: resend_envelope
          in: query
          description: |
            When **true,**
            forces the envelope to be resent
            if it would not be resent otherwise.

            Ordinarily, if the recipient's routing order
            is before or the same as the envelope's next recipient,
            the envelope is not resent.

            Setting this query parameter
            to **false** has no effect and is the same as omitting
            it altogether.
          required: false
          type: string
        - name: EnvelopeRecipients
          in: body
          required: false
          schema:
            "$ref": "#/definitions/EnvelopeRecipients"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/recipientsUpdateSummary"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: updateRecipients
      x-ds-method: update
      x-ds-service: Envelopes
      x-ds-in-sdk: true
    post:
      tags:
        - EnvelopeRecipients
      summary: Adds one or more recipients to an envelope.
      description: |+
        Adds one or more recipients to an envelope.

        For an in-process envelope,
        one that has been sent and has not been completed or voided,
        an email is sent to a new recipient
        when they are reached in the routing order.
        If the new recipient's routing order
        is before or the same as the envelope's
        next recipient,
        an email is only sent if the optional
        `resend_envelope` query string is set to **true.**


        **Note:** This method works on recipients only.
        To add recipient tabs,
        use methods from the [EnvelopeRecipientTabs][recipientTabs] resource.
        For example, this request body will add a recipient (`astanton@example.com`)
        but **NOT** the Sign Here recipient tab.

        ```json
        {
          "signers": [
            {
              "email": "astanton@example.com",
              "name": "Anne Stanton",
              "recipientId": "1",
              "tabs": {           // These tabs will NOT be added
                "signHereTabs": [ // with this method. See note above.
                  {
                    "anchorString": "below",
                    "tooltip": "please sign here"
                  },
                  . . .
                ]
              }
            }
          ]
        }
        ```

        [recipientTabs]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/


        ### Related topics

        - [How to bulk send envelopes](/docs/esign-rest-api/how-to/bulk-send-envelopes/)



      operationId: Recipients_PostRecipients
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: envelopeId
          in: path
          description: "The envelope's GUID. \n\nExample: `93be49ab-xxxx-xxxx-xxxx-f752070d71ec`\n"
          required: true
          type: string
        - name: resend_envelope
          in: query
          description: |
            When **true,**
            forces the envelope to be resent
            if it would not be resent otherwise.

            Ordinarily, if the recipient's routing order
            is before or the same as the envelope's next recipient,
            the envelope is not resent.

            Setting this query parameter
            to **false** has no effect and is the same as omitting
            it altogether.
          required: false
          type: string
        - name: EnvelopeRecipients
          in: body
          required: false
          schema:
            "$ref": "#/definitions/EnvelopeRecipients"
          description: ""
      responses:
        "201":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/EnvelopeRecipients"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: createRecipient
      x-ds-method: create
      x-ds-service: Envelopes
      x-ds-in-sdk: true
    delete:
      tags:
        - EnvelopeRecipients
      summary: Deletes recipients from an envelope.
      description: |-
        Deletes one or more recipients from a draft or sent envelope. List the recipients that you want to delete in the body of the request. This method uses the `recipientId` as the key for deleting recipients.

        If the envelope is `In Process`, meaning that it has been sent and has not been completed or voided, recipients that have completed their actions cannot be deleted.
      operationId: Recipients_DeleteRecipients
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: envelopeId
          in: path
          description: "The envelope's GUID. \n\nExample: `93be49ab-xxxx-xxxx-xxxx-f752070d71ec`\n"
          required: true
          type: string
        - name: EnvelopeRecipients
          in: body
          required: false
          schema:
            "$ref": "#/definitions/EnvelopeRecipients"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/EnvelopeRecipients"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: deleteRecipients
      x-ds-method: deleteList
      x-ds-service: Envelopes
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/envelopes/{envelopeId}/recipients/{recipientId}":
    delete:
      tags:
        - EnvelopeRecipients
      summary: Deletes a recipient from an envelope.
      description: |-
        Deletes a recipient from a `draft` or `sent` envelope.

        If the envelope is "In Process" (has been sent and is not completed or voided), recipients that have completed their actions cannot be deleted.
      operationId: Recipients_DeleteRecipient
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: envelopeId
          in: path
          description: "The envelope's GUID. \n\nExample: `93be49ab-xxxx-xxxx-xxxx-f752070d71ec`\n"
          required: true
          type: string
        - name: recipientId
          in: path
          description: |
            A local reference used to map
            recipients to other objects, such as specific
            document tabs.

            A `recipientId` must be
            either an integer or a GUID,
            and the `recipientId` must be
            unique within an envelope.

            For example, many envelopes assign the first recipient
            a `recipientId` of `1`.
          required: true
          type: string
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/EnvelopeRecipients"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: deleteRecipient
      x-ds-method: delete
      x-ds-service: Envelopes
      x-ds-in-sdk: true
    parameters: []
  ? "/v2.1/accounts/{accountId}/envelopes/{envelopeId}/recipients/{recipientId}/consumer_disclosure"
  : get:
      tags:
        - EnvelopeConsumerDisclosures
      summary:
        Gets the default Electronic Record and Signature Disclosure for an
        envelope.
      description:
        "Retrieves the default, HTML-formatted Electronic Record and Signature
        Disclosure (ERSD) for the envelope that you specify. \n\nThis is the default
        ERSD disclosure that DocuSign provides for the convenience of U.S.-based customers
        only. This default disclosure is only valid for transactions between U.S.-based
        parties.\n\nTo set the language of the disclosure that you want to retrieve,
        use the optional `langCode` query parameter."
      operationId: ConsumerDisclosure_GetConsumerDisclosureEnvelopeIdRecipientId
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: envelopeId
          in: path
          description: "The envelope's GUID. \n\nExample: `93be49ab-xxxx-xxxx-xxxx-f752070d71ec`\n"
          required: true
          type: string
        - name: recipientId
          in: path
          description: |
            A local reference used to map
            recipients to other objects, such as specific
            document tabs.

            A `recipientId` must be
            either an integer or a GUID,
            and the `recipientId` must be
            unique within an envelope.

            For example, many envelopes assign the first recipient
            a `recipientId` of `1`.
          required: true
          type: string
        - name: langCode
          in: query
          required: false
          type: string
          description:
            "(Optional) The code for the signer language version of the disclosure
            that you want to retrieve. The following languages are supported:\n\n- Arabic
            (`ar`)\n- Bulgarian (`bg`)\n- Czech (`cs`)\n- Chinese Simplified (`zh_CN`)\n-
            Chinese Traditional (`zh_TW`)\n- Croatian (`hr`)\n- Danish (`da`)\n- Dutch
            (`nl`)\n- English US (`en`)\n- English UK (`en_GB`)\n- Estonian (`et`)\n-
            Farsi (`fa`)\n- Finnish (`fi`)\n- French (`fr`)\n- French Canadian (`fr_CA`)\n-
            German (`de`)\n- Greek (`el`)\n- Hebrew (`he`)\n- Hindi (`hi`)\n- Hungarian
            (`hu`)\n- Bahasa Indonesian (`id`)\n- Italian (`it`)\n- Japanese (`ja`)\n-
            Korean (`ko`)\n- Latvian (`lv`)\n- Lithuanian (`lt`)\n- Bahasa Melayu (`ms`)\n-
            Norwegian (`no`)\n- Polish (`pl`)\n- Portuguese (`pt`)\n- Portuguese Brazil
            (`pt_BR`)\n- Romanian (`ro`)\n- Russian (`ru`)\n- Serbian (`sr`)\n- Slovak
            (`sk`)\n- Slovenian (`sl`)\n- Spanish (`es`)\n- Spanish Latin America (`es_MX`)\n-
            Swedish (`sv`)\n- Thai (`th`)\n- Turkish (`tr`)\n- Ukrainian (`uk`) \n-
            Vietnamese (`vi`)\n\nAdditionally, you can automatically detect the browser
            language being used by the viewer and display the disclosure in that language
            by setting the value to `browser`."
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/consumerDisclosure"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getConsumerDisclosureDefault
      x-ds-method: getDefault
      x-ds-service: Envelopes
      x-ds-in-sdk: true
    parameters: []
  ? "/v2.1/accounts/{accountId}/envelopes/{envelopeId}/recipients/{recipientId}/consumer_disclosure/{langCode}"
  : get:
      tags:
        - EnvelopeConsumerDisclosures
      summary:
        Gets the Electronic Record and Signature Disclosure for a specific
        envelope recipient.
      description: |-
        Retrieves the HTML-formatted Electronic Record and Signature Disclosure (ERSD) for the envelope recipient that you specify. This disclosure might differ from the account-level disclosure, based on the signing brand applied to the envelope and the recipient's language settings.

        To set the language of the disclosure that you want to retrieve, specify the `langCode` as either a path or query parameter.
      operationId: ConsumerDisclosure_GetConsumerDisclosureEnvelopeIdRecipientIdLangCode
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: envelopeId
          in: path
          description: "The envelope's GUID. \n\nExample: `93be49ab-xxxx-xxxx-xxxx-f752070d71ec`\n"
          required: true
          type: string
        - name: langCode
          in: path
          description:
            "(Optional) The code for the signer language version of the disclosure
            that you want to retrieve, as a path parameter. The following languages
            are supported:\n\n- Arabic (`ar`)\n- Bulgarian (`bg`)\n- Czech (`cs`)\n-
            Chinese Simplified (`zh_CN`)\n- Chinese Traditional (`zh_TW`)\n- Croatian
            (`hr`)\n- Danish (`da`)\n- Dutch (`nl`)\n- English US (`en`)\n- English
            UK (`en_GB`)\n- Estonian (`et`)\n- Farsi (`fa`)\n- Finnish (`fi`)\n- French
            (`fr`)\n- French Canadian (`fr_CA`)\n- German (`de`)\n- Greek (`el`)\n-
            Hebrew (`he`)\n- Hindi (`hi`)\n- Hungarian (`hu`)\n- Bahasa Indonesian (`id`)\n-
            Italian (`it`)\n- Japanese (`ja`)\n- Korean (`ko`)\n- Latvian (`lv`)\n-
            Lithuanian (`lt`)\n- Bahasa Melayu (`ms`)\n- Norwegian (`no`)\n- Polish
            (`pl`)\n- Portuguese (`pt`)\n- Portuguese Brazil (`pt_BR`)\n- Romanian (`ro`)\n-
            Russian (`ru`)\n- Serbian (`sr`)\n- Slovak (`sk`)\n- Slovenian (`sl`)\n-
            Spanish (`es`)\n- Spanish Latin America (`es_MX`)\n- Swedish (`sv`)\n- Thai
            (`th`)\n- Turkish (`tr`)\n- Ukrainian (`uk`) \n- Vietnamese (`vi`)\n\nAdditionally,
            you can automatically detect the browser language being used by the viewer
            and display the disclosure in that language by setting the value to `browser`."
          required: true
          type: string
        - name: recipientId
          in: path
          description: |
            A local reference used to map
            recipients to other objects, such as specific
            document tabs.

            A `recipientId` must be
            either an integer or a GUID,
            and the `recipientId` must be
            unique within an envelope.

            For example, many envelopes assign the first recipient
            a `recipientId` of `1`.
          required: true
          type: string
        - name: langCode
          in: query
          required: false
          type: string
          description:
            "(Optional) The code for the signer language version of the disclosure
            that you want to retrieve, as a query parameter. The following languages
            are supported:\n\n- Arabic (`ar`)\n- Bulgarian (`bg`)\n- Czech (`cs`)\n-
            Chinese Simplified (`zh_CN`)\n- Chinese Traditional (`zh_TW`)\n- Croatian
            (`hr`)\n- Danish (`da`)\n- Dutch (`nl`)\n- English US (`en`)\n- English
            UK (`en_GB`)\n- Estonian (`et`)\n- Farsi (`fa`)\n- Finnish (`fi`)\n- French
            (`fr`)\n- French Canadian (`fr_CA`)\n- German (`de`)\n- Greek (`el`)\n-
            Hebrew (`he`)\n- Hindi (`hi`)\n- Hungarian (`hu`)\n- Bahasa Indonesian (`id`)\n-
            Italian (`it`)\n- Japanese (`ja`)\n- Korean (`ko`)\n- Latvian (`lv`)\n-
            Lithuanian (`lt`)\n- Bahasa Melayu (`ms`)\n- Norwegian (`no`)\n- Polish
            (`pl`)\n- Portuguese (`pt`)\n- Portuguese Brazil (`pt_BR`)\n- Romanian (`ro`)\n-
            Russian (`ru`)\n- Serbian (`sr`)\n- Slovak (`sk`)\n- Slovenian (`sl`)\n-
            Spanish (`es`)\n- Spanish Latin America (`es_MX`)\n- Swedish (`sv`)\n- Thai
            (`th`)\n- Turkish (`tr`)\n- Ukrainian (`uk`) \n- Vietnamese (`vi`)\n\nAdditionally,
            you can automatically detect the browser language being used by the viewer
            and display the disclosure in that language by setting the value to `browser`."
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/consumerDisclosure"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getConsumerDisclosure
      x-ds-method: get
      x-ds-service: Envelopes
      x-ds-in-sdk: true
    parameters: []
  ? "/v2.1/accounts/{accountId}/envelopes/{envelopeId}/recipients/{recipientId}/document_visibility"
  : get:
      tags:
        - EnvelopeDocumentVisibility
      summary: Returns document visibility for a recipient
      operationId: Recipients_GetRecipientDocumentVisibility
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: envelopeId
          in: path
          description: "The envelope's GUID. \n\nExample: `93be49ab-xxxx-xxxx-xxxx-f752070d71ec`\n"
          required: true
          type: string
        - name: recipientId
          in: path
          description: |
            A local reference used to map
            recipients to other objects, such as specific
            document tabs.

            A `recipientId` must be
            either an integer or a GUID,
            and the `recipientId` must be
            unique within an envelope.

            For example, many envelopes assign the first recipient
            a `recipientId` of `1`.
          required: true
          type: string
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/documentVisibilityList"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getRecipientDocumentVisibility
      description:
        This method returns information about document visibility for a
        recipient.
      x-ds-method: get
      x-ds-service: Envelopes
      x-ds-in-sdk: true
    put:
      tags:
        - EnvelopeDocumentVisibility
      summary: Updates document visibility for a recipient
      operationId: Recipients_PutRecipientDocumentVisibility
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: envelopeId
          in: path
          description: "The envelope's GUID. \n\nExample: `93be49ab-xxxx-xxxx-xxxx-f752070d71ec`\n"
          required: true
          type: string
        - name: recipientId
          in: path
          description: |
            A local reference used to map
            recipients to other objects, such as specific
            document tabs.

            A `recipientId` must be
            either an integer or a GUID,
            and the `recipientId` must be
            unique within an envelope.

            For example, many envelopes assign the first recipient
            a `recipientId` of `1`.
          required: true
          type: string
        - name: documentVisibilityList
          in: body
          required: false
          schema:
            "$ref": "#/definitions/documentVisibilityList"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/documentVisibilityList"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: updateRecipientDocumentVisibility
      description: |-
        This method updates document visibility for a recipient.

        **Note:** A document cannot be hidden from a recipient if the recipient has tabs assigned to them on the document. Carbon Copy, Certified Delivery (Needs to Sign), Editor, and Agent recipients can always see all documents.
      x-ds-method: update
      x-ds-service: Envelopes
      x-ds-in-sdk: true
    parameters: []
  ? "/v2.1/accounts/{accountId}/envelopes/{envelopeId}/recipients/{recipientId}/identity_proof_token"
  : post:
      tags:
        - EnvelopeRecipients
      summary: "Creates a resource token for a sender to request ID Evidence data. "
      operationId: Recipients_PostRecipientProofFileResourceToken
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The account ID.
          required: true
          type: string
        - name: envelopeId
          in: path
          description: "The envelope's GUID. \n\nExample: `93be49ab-xxxx-xxxx-xxxx-f752070d71ec`\n"
          required: true
          type: string
        - name: recipientId
          in: path
          description: The `recipientIdGuid`.
          required: true
          type: string
      responses:
        "201":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/idEvidenceResourceToken"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: createRecipientProofFileResourceToken
      x-ds-api-status: beta
      description:
        Creates a resource token for a sender. This token allows a sender
        to return identification data for a recipient using the [ID Evidence API](/docs/idevidence-api/).
      x-ds-method: createRecipientProofFileResourceToken
      x-ds-service: Uncategorized
      x-ds-in-sdk: true
    parameters: []
  ? "/v2.1/accounts/{accountId}/envelopes/{envelopeId}/recipients/{recipientId}/initials_image"
  : get:
      tags:
        - Envelopes
      summary: Gets the initials image for a user.
      description: |-
        Retrieves the initials image for the specified user. The image is returned in the same format as it was uploaded. In the request you can specify if the chrome (the added line and identifier around the initial image) is returned with the image.

        The userId specified in the endpoint must match the authenticated user's user ID and the user must be a member of the account.

        The `signatureIdOrName` parameter accepts signature ID or signature name. DocuSign recommends you use signature ID (`signatureId`), since some names contain characters that do not properly URL encode. If you use the user name, it is likely that the name includes spaces and you might need to URL encode the name before using it in the endpoint.

        For example: "Bob Smith" to "Bob%20Smith"

        Older envelopes might only contain chromed images. If getting the non-chromed image fails, try getting the chromed image.
      operationId: Recipients_GetRecipientInitialsImage
      consumes: []
      produces:
        - image/gif
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: envelopeId
          in: path
          description: "The envelope's GUID. \n\nExample: `93be49ab-xxxx-xxxx-xxxx-f752070d71ec`\n"
          required: true
          type: string
        - name: recipientId
          in: path
          description: |
            A local reference used to map
            recipients to other objects, such as specific
            document tabs.

            A `recipientId` must be
            either an integer or a GUID,
            and the `recipientId` must be
            unique within an envelope.

            For example, many envelopes assign the first recipient
            a `recipientId` of `1`.
          required: true
          type: string
        - name: include_chrome
          in: query
          description:
            "The added line and identifier around the initial image. Note:
            Older envelopes might only have chromed images. If getting the non-chromed
            image fails, try getting the chromed image."
          required: false
          type: string
      responses:
        "200":
          description: A successful response or an error.
          schema:
            type: file
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getRecipientInitialsImage
      x-ds-method: getRecipientInitialsImage
      x-ds-service: Envelopes
      x-ds-in-sdk: true
    put:
      tags:
        - Envelopes
      summary: Sets the initials image for an accountless signer.
      description: |-
        Updates the initials image for a signer that does not have a DocuSign account. The supported image formats for this file are: gif, png, jpeg, and bmp. The file size must be less than 200K.

        For the Authentication/Authorization for this call, the credentials must match the sender of the envelope, the recipient must be an accountless signer or in person signer. The account must have the `CanSendEnvelope` property set to **true** and the `ExpressSendOnly` property in `SendingUser` structure must be set to **false.**
      operationId: Recipients_PutRecipientInitialsImage
      consumes:
        - image/gif
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: envelopeId
          in: path
          description: "The envelope's GUID. \n\nExample: `93be49ab-xxxx-xxxx-xxxx-f752070d71ec`\n"
          required: true
          type: string
        - name: recipientId
          in: path
          description: |
            A local reference used to map
            recipients to other objects, such as specific
            document tabs.

            A `recipientId` must be
            either an integer or a GUID,
            and the `recipientId` must be
            unique within an envelope.

            For example, many envelopes assign the first recipient
            a `recipientId` of `1`.
          required: true
          type: string
      responses:
        "200":
          description: A successful response or an error.
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: updateRecipientInitialsImage
      x-ds-method: updateRecipientInitialsImage
      x-ds-service: Envelopes
      x-ds-in-sdk: true
    parameters: []
  ? "/v2.1/accounts/{accountId}/envelopes/{envelopeId}/recipients/{recipientId}/signature"
  : get:
      tags:
        - Envelopes
      summary: Gets signature information for a signer or sign-in-person recipient.
      description:
        Retrieves signature information for a signer or sign-in-person
        recipient.
      operationId: Recipients_GetRecipientSignature
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: envelopeId
          in: path
          description: "The envelope's GUID. \n\nExample: `93be49ab-xxxx-xxxx-xxxx-f752070d71ec`\n"
          required: true
          type: string
        - name: recipientId
          in: path
          description: |
            A local reference used to map
            recipients to other objects, such as specific
            document tabs.

            A `recipientId` must be
            either an integer or a GUID,
            and the `recipientId` must be
            unique within an envelope.

            For example, many envelopes assign the first recipient
            a `recipientId` of `1`.
          required: true
          type: string
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/userSignature"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getRecipientSignature
      x-ds-method: getRecipientSignature
      x-ds-service: Envelopes
      x-ds-in-sdk: true
    parameters: []
  ? "/v2.1/accounts/{accountId}/envelopes/{envelopeId}/recipients/{recipientId}/signature_image"
  : get:
      tags:
        - Envelopes
      summary: Retrieve signature image information for a signer/sign-in-person recipient.
      description:
        "Retrieves the specified user signature image. The image is returned
        in the same format as uploaded. In the request you can specify if the chrome
        (the added line and identifier around the initial image) is returned with
        the image.\n\nThe userId specified in the endpoint must match the authenticated
        user's user ID and the user must be a member of the account.\n\nThe `signatureIdOrName`
        parameter accepts signature ID or signature name. DocuSign recommends you
        use signature ID (`signatureId`), since some names contain characters that
        don't properly URL encode. If you use the user name, it is likely that the
        name includes spaces and you might need to URL encode the name before using
        it in the endpoint. \n\nFor example: \"Bob Smith\" to \"Bob%20Smith\"\n\nOlder
        envelopes might only have chromed images. If getting the non-chromed image
        fails, try getting the chromed image."
      operationId: Recipients_GetRecipientSignatureImage
      consumes: []
      produces:
        - image/gif
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: envelopeId
          in: path
          description: "The envelope's GUID. \n\nExample: `93be49ab-xxxx-xxxx-xxxx-f752070d71ec`\n"
          required: true
          type: string
        - name: recipientId
          in: path
          description: |
            A local reference used to map
            recipients to other objects, such as specific
            document tabs.

            A `recipientId` must be
            either an integer or a GUID,
            and the `recipientId` must be
            unique within an envelope.

            For example, many envelopes assign the first recipient
            a `recipientId` of `1`.
          required: true
          type: string
        - name: include_chrome
          in: query
          description:
            When **true,** the response includes the chromed version of the
            signature image.
          required: false
          type: string
      responses:
        "200":
          description: A successful response or an error.
          schema:
            type: file
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getRecipientSignatureImage
      x-ds-method: getRecipientSignatureImage
      x-ds-service: Envelopes
      x-ds-in-sdk: true
    put:
      tags:
        - Envelopes
      summary: Sets the signature image for an accountless signer.
      description: |-
        Updates the signature image for an accountless signer. The supported image formats for this file are: gif, png, jpeg, and bmp. The file size must be less than 200K.

        For the Authentication/Authorization for this call, the credentials must match the sender of the envelope, the recipient must be an accountless signer or in person signer. The account must have the `CanSendEnvelope` property set to **true** and the `ExpressSendOnly` property in `SendingUser` structure must be set to **false.**
      operationId: Recipients_PutRecipientSignatureImage
      consumes:
        - image/gif
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: envelopeId
          in: path
          description: "The envelope's GUID. \n\nExample: `93be49ab-xxxx-xxxx-xxxx-f752070d71ec`\n"
          required: true
          type: string
        - name: recipientId
          in: path
          description: |
            A local reference used to map
            recipients to other objects, such as specific
            document tabs.

            A `recipientId` must be
            either an integer or a GUID,
            and the `recipientId` must be
            unique within an envelope.

            For example, many envelopes assign the first recipient
            a `recipientId` of `1`.
          required: true
          type: string
      responses:
        "200":
          description: A successful response or an error.
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: updateRecipientSignatureImage
      x-ds-method: updateRecipientSignatureImage
      x-ds-service: Envelopes
      x-ds-in-sdk: true
    parameters: []
  ? "/v2.1/accounts/{accountId}/envelopes/{envelopeId}/recipients/{recipientId}/tabs"
  : get:
      tags:
        - EnvelopeRecipientTabs
      summary:
        Gets the tabs information for a signer or sign-in-person recipient
        in an envelope.
      description: |-
        Retrieves information about the tabs associated
        with a recipient. You can make a single API call
        to get all the tab values and information from a
        given, completed envelope in addition to draft
        ones.  Tab values can be retrieved by using the
        [EnvelopeRecipients:list method](/docs/esign-rest-api/reference/envelopes/enveloperecipients/list/)
        with query parameter `include_tabs` set to **true.**
      operationId: Recipients_GetRecipientTabs
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: envelopeId
          in: path
          description: "The envelope's GUID. \n\nExample: `93be49ab-xxxx-xxxx-xxxx-f752070d71ec`\n"
          required: true
          type: string
        - name: recipientId
          in: path
          description: |
            A local reference used to map
            recipients to other objects, such as specific
            document tabs.

            A `recipientId` must be
            either an integer or a GUID,
            and the `recipientId` must be
            unique within an envelope.

            For example, many envelopes assign the first recipient
            a `recipientId` of `1`.
          required: true
          type: string
        - name: include_anchor_tab_locations
          in: query
          description:
            When **true,** all tabs with anchor tab properties are included
            in the response. The default value is **false.**
          required: false
          type: string
        - name: include_metadata
          in: query
          required: false
          type: string
          description:
            When **true,** the response includes metadata indicating which
            properties are editable.
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/EnvelopeRecipientTabs"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: listTabs
      x-ds-method: list
      x-ds-service: Envelopes
      x-ds-in-sdk: true
    put:
      tags:
        - EnvelopeRecipientTabs
      summary: "Updates the tabs for a recipient.\n\n"
      description: |+
        Updates one or more tabs for a recipient in a draft envelope.
        A draft envelope is one that is not yet complete.

        **Note:** It is an error to update a tab that has the
        `templateLocked` property set to true.
        This property corresponds to the **Restrict changes** option in the web app.

      operationId: Recipients_PutRecipientTabs
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: envelopeId
          in: path
          description: "The envelope's GUID. \n\nExample: `93be49ab-xxxx-xxxx-xxxx-f752070d71ec`\n"
          required: true
          type: string
        - name: recipientId
          in: path
          description: |
            A local reference used to map
            recipients to other objects, such as specific
            document tabs.

            A `recipientId` must be
            either an integer or a GUID,
            and the `recipientId` must be
            unique within an envelope.

            For example, many envelopes assign the first recipient
            a `recipientId` of `1`.
          required: true
          type: string
        - name: EnvelopeRecipientTabs
          in: body
          required: false
          schema:
            "$ref": "#/definitions/EnvelopeRecipientTabs"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/EnvelopeRecipientTabs"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: updateTabs
      x-ds-method: update
      x-ds-service: Envelopes
      x-ds-in-sdk: true
    post:
      tags:
        - EnvelopeRecipientTabs
      summary: Adds tabs for a recipient.
      description: Adds one or more tabs for a recipient.
      operationId: Recipients_PostRecipientTabs
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: envelopeId
          in: path
          description: "The envelope's GUID. \n\nExample: `93be49ab-xxxx-xxxx-xxxx-f752070d71ec`\n"
          required: true
          type: string
        - name: recipientId
          in: path
          description: |
            A local reference used to map
            recipients to other objects, such as specific
            document tabs.

            A `recipientId` must be
            either an integer or a GUID,
            and the `recipientId` must be
            unique within an envelope.

            For example, many envelopes assign the first recipient
            a `recipientId` of `1`.
          required: true
          type: string
        - name: EnvelopeRecipientTabs
          in: body
          required: false
          schema:
            "$ref": "#/definitions/EnvelopeRecipientTabs"
          description: ""
      responses:
        "201":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/EnvelopeRecipientTabs"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: createTabs
      x-ds-method: create
      x-ds-service: Envelopes
      x-ds-in-sdk: true
    delete:
      tags:
        - EnvelopeRecipientTabs
      summary: |+
        Deletes the tabs associated with a recipient.

        **Note:** It is an error to delete a tab that has the
        `templateLocked` property set to true.
        This property corresponds to the **Restrict changes** option in the web app.

      description:
        Deletes one or more tabs associated with a recipient in a draft
        envelope.
      operationId: Recipients_DeleteRecipientTabs
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: envelopeId
          in: path
          description: "The envelope's GUID. \n\nExample: `93be49ab-xxxx-xxxx-xxxx-f752070d71ec`\n"
          required: true
          type: string
        - name: recipientId
          in: path
          description: |
            A local reference used to map
            recipients to other objects, such as specific
            document tabs.

            A `recipientId` must be
            either an integer or a GUID,
            and the `recipientId` must be
            unique within an envelope.

            For example, many envelopes assign the first recipient
            a `recipientId` of `1`.
          required: true
          type: string
        - name: EnvelopeRecipientTabs
          in: body
          required: false
          schema:
            "$ref": "#/definitions/EnvelopeRecipientTabs"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/EnvelopeRecipientTabs"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: deleteTabs
      x-ds-method: delete
      x-ds-service: Envelopes
      x-ds-in-sdk: true
    parameters: []
  ? "/v2.1/accounts/{accountId}/envelopes/{envelopeId}/recipients/{recipientId}/views/identity_manual_review"
  : post:
      tags:
        - EnvelopeRecipients
      summary: Create the link to the page for manually reviewing IDs.
      operationId: Views_PostRecipientManualReviewView
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description:
            A value that identifies your account. This value is automatically
            generated by DocuSign for any account you create. Copy the value from the
            API Account ID field in the [AppsI and Keys](https://support.docusign.com/s/document-item?bundleId=pik1583277475390&topicId=pmp1583277397015.html)
            page.
          required: true
          type: string
        - name: envelopeId
          in: path
          description: "The envelope's GUID. \n\nExample: `93be49ab-xxxx-xxxx-xxxx-f752070d71ec`\n"
          required: true
          type: string
        - name: recipientId
          in: path
          description:
            "A GUID value that DocuSign assigns to identify each recipient
            in an envelope. This value is globally unique for all recipients, not just
            those in your account.\n\nThe specified recipient must belong to a workflow
            that allows the [manual review](https://support.docusign.com/s/document-item?bundleId=pik1583277475390&topicId=eya1583277454804.html)
            of IDs. In addition, the status of the automatic verification for this recipient
            must return `Failed` and the value of the `vendorFailureStatusCode` field
            must be `MANUAL_REVIEW_STARTED` as shown in the following extract of a response
            to the [GET ENVELOPE](/docs/esign-rest-api/reference/envelopes/envelopes/get/)
            method:\n<p>\n\n```\n\"recipientAuthenticationStatus\": {\n       \"identityVerificationResult\":
            { \n             \"status\": \"Failed\",\n             \"eventTimestamp\":
            \"2020-09-04T16:59:42.8045667Z\",\n             \"vendorFailureStatusCode\":
            \"MANUAL_REVIEW_STARTED\"\n        }\n  }\n```"
          required: true
          type: string
      responses:
        "201":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/viewUrl"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: createRecipientManualReviewView
      description:
        "This method returns the URL of the page that allows a sender to
        [manually review](https://support.docusign.com/s/document-item?bundleId=ced1643229641057&topicId=lyp1578456530647.html)
        the ID of a recipient. "
      x-ds-method: createRecipientManualReviewView
      x-ds-service: Uncategorized
      x-ds-in-sdk: true
    parameters: []
  ? "/v2.1/accounts/{accountId}/envelopes/{envelopeId}/recipients/document_visibility"
  : put:
      tags:
        - EnvelopeDocumentVisibility
      summary: Updates document visibility for recipients
      operationId: Recipients_PutRecipientsDocumentVisibility
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: envelopeId
          in: path
          description: "The envelope's GUID. \n\nExample: `93be49ab-xxxx-xxxx-xxxx-f752070d71ec`\n"
          required: true
          type: string
        - name: documentVisibilityList
          in: body
          required: false
          schema:
            "$ref": "#/definitions/documentVisibilityList"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/documentVisibilityList"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: updateRecipientsDocumentVisibility
      description: |-
        This method updates document visibility for one or more recipients based on the `recipientId` and `visible` values that you include in the request body.

        **Note:** A document cannot be hidden from a recipient if the recipient has tabs assigned to them on the document. Carbon Copy, Certified Delivery (Needs to Sign), Editor, and Agent recipients can always see all documents.
      x-ds-method: updateRecipientsDocumentVisibility
      x-ds-service: EnvelopeDocumentVisibility
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/envelopes/{envelopeId}/responsive_html_preview":
    post:
      tags:
        - ResponsiveHtmlPreview
      summary:
        Creates a preview of the responsive versions of all of the documents
        in an envelope.
      operationId: ResponsiveHtml_PostResponsiveHtmlPreview
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: envelopeId
          in: path
          description: "The envelope's GUID. \n\nExample: `93be49ab-xxxx-xxxx-xxxx-f752070d71ec`\n"
          required: true
          type: string
        - name: documentHtmlDefinition
          in: body
          required: false
          schema:
            "$ref": "#/definitions/documentHtmlDefinition"
          description: ""
      responses:
        "201":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/documentHtmlDefinitions"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: createResponsiveHtmlPreview
      description: |
        Creates a preview of the
        [responsive](/docs/esign-rest-api/esign101/concepts/responsive/),
        HTML versions of all of the documents in an
        envelope. This method enables you to preview the
        PDF document conversions to responsive HTML across
        device types prior to sending.

        The request body is a `documentHtmlDefinition`
        object, which holds the responsive signing
        parameters that define how to generate the HTML
        version of the documents.
      x-ds-method: create
      x-ds-service: Uncategorized
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/envelopes/{envelopeId}/tabs_blob":
    get:
      tags:
        - TabsBlob
      summary: Reserved for DocuSign.
      operationId: TabsBlob_GetTabsBlob
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: envelopeId
          in: path
          description: "The envelope's GUID. \n\nExample: `93be49ab-xxxx-xxxx-xxxx-f752070d71ec`\n"
          required: true
          type: string
      responses:
        "200":
          description: A successful response or an error.
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getTabsBlob
      description: This endpoint has been deprecated.
      x-ds-method: getTabsBlob
      x-ds-service: Uncategorized
      x-ds-in-sdk: true
    put:
      tags:
        - TabsBlob
      summary: Reserved for DocuSign.
      operationId: TabsBlob_PutTabsBlob
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: envelopeId
          in: path
          description: "The envelope's GUID. \n\nExample: `93be49ab-xxxx-xxxx-xxxx-f752070d71ec`\n"
          required: true
          type: string
      responses:
        "200":
          description: A successful response or an error.
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: putTabsBlob
      description: This endpoint has been deprecated.
      x-ds-method: putTabsBlob
      x-ds-service: Uncategorized
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/envelopes/{envelopeId}/templates":
    get:
      tags:
        - EnvelopeTemplates
      summary: Get List of Templates used in an Envelope
      description:
        "This returns a list of the server-side templates, their name and
        ID, used in an envelope.

        "
      operationId: Templates_GetEnvelopeTemplates
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: envelopeId
          in: path
          description: "The envelope's GUID. \n\nExample: `93be49ab-xxxx-xxxx-xxxx-f752070d71ec`\n"
          required: true
          type: string
        - name: include
          in: query
          description:
            The possible value is `matching_applied`, which returns template
            matching information for the template.
          required: false
          type: string
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/templateInformation"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: listTemplates
      x-ds-method: list
      x-ds-service: Envelopes
      x-ds-in-sdk: true
    post:
      tags:
        - EnvelopeTemplates
      summary: Adds templates to an envelope.
      description: Adds templates to the specified envelope.
      operationId: Templates_PostEnvelopeTemplates
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: envelopeId
          in: path
          description: "The envelope's GUID. \n\nExample: `93be49ab-xxxx-xxxx-xxxx-f752070d71ec`\n"
          required: true
          type: string
        - name: preserve_template_recipient
          in: query
          required: false
          type: string
          description:
            "If omitted or set to false (the default),\nenvelope recipients
            _will be removed_\nif the template being applied\nincludes only  tabs positioned
            via anchor text for the recipient,\nand none of the documents include the
            anchor text. \n\nWhen **true,** the recipients _will be preserved_ after
            the template is applied.\n\n"
        - name: documentTemplateList
          in: body
          required: false
          schema:
            "$ref": "#/definitions/documentTemplateList"
          description: ""
      responses:
        "201":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/documentTemplateList"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: applyTemplate
      x-ds-method: apply
      x-ds-service: Envelopes
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/envelopes/{envelopeId}/views/correct":
    post:
      tags:
        - EnvelopeViews
      summary: Returns a URL to the envelope correction UI.
      description: |
        Returns a URL that allows you to embed the envelope correction view of the DocuSign UI. To customize the appearance of the correction view, you can add special query parameters to the returned URL when you use it in your application.

        You can revoke this URL by calling the [deleteEnvelopeCorrectView](/docs/esign-rest-api/reference/envelopes/envelopeviews/deleteenvelopecorrectview/) endpoint.

        ## Best practices

        The returned URL expires after 10 minutes and can only be used once. Therefore, request the URL immediately before you redirect your user to it.

        Due to screen space issues, do not use an `<iframe>` for embedded operations on mobile devices. For iOS devices, DocuSign recommends using a WebView.

        ## Customizing the correction view

        To customize the appearance of the correction view, you can add query parameters **to the URL that is returned by this endpoint and used in your application.** Do not add these query parameters to the URL of the endpoint itself.

        For example, adding the following query parameters to the URL returned by this method causes the sending view to:

        - start in the tagging screen
        - hide the Edit Pages command
        - hide all of the options under the Actions dropdown except Save, Close, and Discard

        ```
        https://demo.docusign.net/Member/StartInSession.aspx?StartConsole=1&t=dd3b7c4c-xxxx-xxxx-xxxx-50cd195a3401&DocuEnvelope=f37489d3-xxxx-xxxx-xxxx-4de057063d0e&\
                advcorrect=1&\
                showEditPages=false&\
                showHeaderActions=false
        ```


        The default value reflects what happens
        if you omit the customization query parameter.
        You can use the interactive
        [Embedded Sending Demo tool](https://sign.agreementsdemo.com/Home/Sending)
        to see the effect of using different query parameters.



        | Query Parameter             | Default Value                                                                                                    | Alternate Value                                                                                                                                                                                                                                   |
        | :-------------------------- | :--------------------------------------------------------------------------------------------------------------- | :------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |
        | sendButtonAction            | `send`<br><br>The Send button operates normally.                                                                 | `redirect`<br><br>The text of the button changes to Continue. Clicking it redirects to the `returnUrl` in the request object. If you intend to modify the envelope after redirection, see [this note](#modifying-the-envelope-after-redirection). |
        | backButtonAction            | `previousPage`<br><br>The back arrow and back button operate normally.                                           | `redirect`<br><br>Clicking the back arrow and back button redirects to the `returnUrl` in the request object. If you intend to modify the envelope after redirection, see [this note](#modifying-the-envelope-after-redirection).                 |
        | showBackButton              | `true` <br><br> Shows the back arrow and the back button.                                                        | `false`<br><br>Hides the back arrow and the back button.                                                                                                                                                                                          |
        | showEditRecipients          | `true` <br><br> Shows the Edit Recipients command in the action menu and in the Conditional Recipients settings. | `false`<br><br>Hides the Edit Recipients command.                                                                                                                                                                                                 |
        | showEditDocuments           | `true` <br><br> Shows the Edit Documents command in the action menu and removes the Documents Gear icon.         | `false`<br><br>Hides the Edit Documents command.                                                                                                                                                                                                  |
        | showEditDocumentVisibility  | `true` <br><br> Shows the Documents Gear icon where the sender can edit document visibility.                     | `false`<br><br>Hides the Documents Gear icon.                                                                                                                                                                                                     |
        | showEditPages               | `true` <br><br> Shows the Edit Pages command under the document thumbnail.                                       | `false`<br><br>Hides the Edit Pages command.                                                                                                                                                                                                      |
        | showMatchingTemplatesPrompt | `true` <br><br> Shows the matching template prompt.                                                              | `false`<br><br>Hides the matching template prompt.                                                                                                                                                                                                |
        | showHeaderActions           | `true` <br><br> Shows all options under the Actions dropdown.                                                    | `false`<br><br>Hides all options under the Actions dropdown except Save, Close, and Discard.                                                                                                                                                      |
        | showDiscardAction           | `true` <br><br> Shows the Discard command under the Actions dropdown.                                            | `false`<br><br>Hides the Discard command.                                                                                                                                                                                                         |
        | advcorrect                  | `1`    <br><br> Starts the signer in the tagging screen.                                                         | `0`<br><br>Starts the signer in the prepare screen.                                                                                                                                                                                               |
        | showTabPalette              | `true` <br><br>Shows the tab palette.                                                                            | `false` <br><br>Hides the tab palette.                                                                                                                                                                                                            |
        | tabPaletteType              | `standard` <br><br> Displays the standard tab palette.                                                           | `custom`<br>`merge`<br>`notary`<br>`seals`<br>`smartcontracts`<br>`annotations`<br>`smartSections`<br><br>Displays the specified tab palette before the standard palette.                                                                         |


        ##  Modifying the envelope after redirection

        If you use `sendButtonAction=redirect` or `backButtonAction=redirect`, and you intend to modify the envelope after redirection, you will need to lock the envelope and add an extra query parameter:

        1.  [Create a lock token][createLock] for the envelope.
        2.  Add the new lock token to the URL with the `lockToken` query parameter.<br>
            `...&sendButtonAction=redirect&lockToken=MDgxZxabUVBiMWUzZWYz`<br>
            **Note:** The `lockToken` query parameter is case-sensitive.


        After clicking Continue,
        your user is redirected back to your integration.
        You can then [delete the lock token][deleteLock].

        [createLock]: /docs/esign-rest-api/reference/envelopes/envelopelocks/create/
        [deleteLock]: /docs/esign-rest-api/reference/envelopes/envelopelocks/delete/


        ## Information security notice

        This method provides full access to the sending account. When you
        use this view, the current user has full access to the account.
        If the account has administrative privileges, then this method
        also provides administrator access.

        If your use case needs to enable a sender to update a draft
        envelope before it is sent or make other changes, take one of the
        following steps:

        - Configure each sender to have their own individual user account
          to use this API method.
        - Enhance your API integration so that this method is not needed.
          Your integration can create the tabs, recipients,
          and other envelope settings as needed.


        ### Related topics

        - [Embedded signing and sending](/docs/esign-rest-api/esign101/concepts/embedding/)
        - [How to send an envelope via your app](/docs/esign-rest-api/how-to/embedded-sending/)
        - [How to embed the DocuSign UI in your app](/docs/esign-rest-api/how-to/embed-ui/)
        - [Introducing customizable embedded sending](https://www.docusign.com/blog/developers/introducing-customizable-embedded-sending)
      operationId: Views_PostEnvelopeCorrectView
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: envelopeId
          in: path
          description: "The envelope's GUID. \n\nExample: `93be49ab-xxxx-xxxx-xxxx-f752070d71ec`\n"
          required: true
          type: string
        - name: correctViewRequest
          in: body
          required: false
          schema:
            "$ref": "#/definitions/correctViewRequest"
          description: ""
      responses:
        "201":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/EnvelopeViews"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: createCorrectView
      x-ds-method: createCorrect
      x-ds-service: Envelopes
      x-ds-in-sdk: true
    delete:
      tags:
        - EnvelopeViews
      summary: Revokes the correction view URL to the Envelope UI.
      operationId: Views_DeleteEnvelopeCorrectView
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: envelopeId
          in: path
          description: "The envelope's GUID. \n\nExample: `93be49ab-xxxx-xxxx-xxxx-f752070d71ec`\n"
          required: true
          type: string
        - name: correctViewRequest
          in: body
          required: false
          schema:
            "$ref": "#/definitions/correctViewRequest"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: deleteEnvelopeCorrectView
      description: Revokes the correction view URL to the Envelope UI.
      x-ds-method: deleteEnvelopeCorrectView
      x-ds-service: Uncategorized
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/envelopes/{envelopeId}/views/edit":
    post:
      tags:
        - EnvelopeViews
      summary: Returns a URL to the edit view UI.
      description: |
        Returns a URL that enables you to embed the edit view of the DocuSign UI in your applications. This is a one-time use login token that allows the user to be placed into the DocuSign editing view.  Upon sending completion, the user is returned to the return URL provided by the API application.

        See [Embedded signing and sending](/docs/esign-rest-api/esign101/concepts/embedding/)
        to learn more about embedding.

        Due to screen space issues,
        do not use an `<iframe>` for embedded operations on mobile devices.
        For iOS devices, DocuSign recommends using a WebView.


        ## Information security notice

        This method provides full access to the sending account. When you
        use this view, the current user has full access to the account.
        If the account has administrative privileges, then this method
        also provides administrator access.

        If your use case needs to enable a sender to update a draft envelope before it is sent or make other changes, take one of the following steps:

        - Configure each sender to have their own individual user account to use this API method.</li>
        - Enhance your API integration so that this method is not needed. Your integration can create the tabs, recipients, and other envelope settings as needed.</li>

        ### Related topics

        - [Embedded signing and sending](/docs/esign-rest-api/esign101/concepts/embedding/)
        - [How to send an envelope via your app](/docs/esign-rest-api/how-to/embedded-sending/)
        - [How to embed the DocuSign UI in your app](/docs/esign-rest-api/how-to/embed-ui/)
      operationId: Views_PostEnvelopeEditView
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: envelopeId
          in: path
          description: "The envelope's GUID. \n\nExample: `93be49ab-xxxx-xxxx-xxxx-f752070d71ec`\n"
          required: true
          type: string
        - name: returnUrlRequest
          in: body
          required: false
          schema:
            "$ref": "#/definitions/returnUrlRequest"
          description: ""
      responses:
        "201":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/EnvelopeViews"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: createEditView
      x-ds-method: createEdit
      x-ds-service: Envelopes
      x-ds-in-sdk: true
      x-ds-examples:
        - description: |+
            The response contains the URL
            of the embeddable edit view
            for a specified envelope.

            The request body contains
            a `returnUrl`.
            This is the URL
            that the DocuSign platform
            will redirect the user to
            when the view is closed.

          direction: both
          format: json
          response:
            url: https://demo.docusign.net/Member/StartInSession.aspx?StartConsole=1&t=c8dc7c1e-xxxx-xxxx-xxxx-405ba1f7d38b&DocuEnvelope=4b728be4-xxxx-xxxx-xxxx-d63e23f822b6&send=1
          request:
            returnUrl: https://dsapp.example.com/return/from/edit/view
          style: custom
          title: Getting an Edit View URL and Setting a Return URL
    parameters: []
  "/v2.1/accounts/{accountId}/envelopes/{envelopeId}/views/recipient":
    post:
      tags:
        - EnvelopeViews
      summary: Returns a URL to the recipient view UI.
      description: |+
        Returns a URL that enables you to
        [embed the recipient view](/docs/esign-rest-api/esign101/concepts/embedding/)
        of the
        DocuSign UI in your applications. If the recipient is a signer,
        then the view will provide the signing ceremony.

        This method is only used with envelopes in the `sent` status.

        <ds-inlinemessage kind="information" markdown="1">
        Due to screen space issues,
        do not use an <code>&lt;iframe&gt;</code> for embedded operations on mobile devices.
        For iOS devices, DocuSign recommends using a WebView.
        </ds-inlinemessage>


        ### The returned URL

        The URL returned in this method's response is intended to be used
        immediately to redirect the signer to the recipient view.
        You can open the recipient view
        in the current browser or in a new tab.
        After the signer is redirected to the
        recipient view, they must interact with the DocuSign system
        periodically or their session will time out.

        <ds-inlinemessage kind="warning" markdown="1">
        The returned URL can be used only once and
        expires after 5 minutes.
        Do not store or email the returned URL.
        </ds-inlinemessage>

        If you want to invite someone to an embedded signing session via
        email, the email invitation's URL must be to your application.
        When invoked, your app should request a `recipientView` URL from
        DocuSign and then redirect the signer to that URL.

        ### How to specify the default language

        You can append the `locale`
        query parameter
        to the URL returned by this method
        to specify a language.

        The language for the recipient view
        follows this order or precedence:

        - The language specified by the sender for the recipient.
        - The `locale` parameter appended to the URL.
        - The account language if the signer has a DocuSign account.
        - The language used in a previous signing if the signer is return signer.
        - The browser language.

        For example, to set the default language
        to Canadian French, you would add this query parameter
        to the returned URL:

        ```
        ...?locale=fr_CA
        ```


        ## Authentication

        Your application is responsible for authenticating the identity
        of the recipient or signer when you use this method. Use the
        following parameters to record how the recipient
        was authenticated.

        - `assertionId`
        - `authenticationInstant`
        - `authenticationMethod`
        - `clientUserId`
        - `securityDomain`

        At a minimum, `authenticationMethod` and `clientUserId` are
        required. The information that you provide is included in the
        envelope's certificate of completion.

        ## Sending to a remote signer

        You can request a signing session for a remote recipient
        who has a DocuSign account.

        Authenticate the request using the recipient's
        credentials, and do not specify a  `clientUserId`.
        This differs from the typical behavior where the
        request is authenticated using the sender's credentials,
        and the recipient has a `clientUserId` defined.



        ## Redirecting back to returnUrl
        After the signer completes or ends the signing ceremony, DocuSign
        redirects the user's browser back to your app via the
        `returnUrl` that you supplied in the request.

        The signer may be redirected through various DocuSign
        subdomains, depending on the region of the account sending the
        envelope. Please consult [Allowlists for DocuSign eSignature service](https://www.docusign.com/trust/security/esignature#allowlists-for-docusign-esignature-service)
        in **Security for DocuSign eSignature**
        when setting up your allowlists


        ### The event status parameter

        DocuSign appends an `event` query parameter to the `returnUrl` with the
        outcome of the signing ceremony. Your app can use this event
        parameter to determine the next step for the envelope.
        Do not fetch the envelope status by using
        [Envelopes: get](/docs/esign-rest-api/reference/envelopes/envelopes/get/)
        or a similar method because doing so
        will probably hit [request and polling limits](/docs/esign-rest-api/esign101/rules-and-limits/).


        | event query parameter | Meaning                                                                                  |
        | :------------------- | :--------------------------------------------------------------------------------------- |
        | signing_complete     | The recipient has signed the document.                                                   |
        | cancel               | The recipient decided to finish later.                                                   |
        | decline              | The recipient declined to sign the document.                                             |
        | exception            | An exception has occurred on the server during the signing session.                      |
        | fax_pending          | Recipient has a fax pending.                                                             |
        | session_timeout      | The recipient did not sign the document in time. The timeout is set to 20 minutes.       |
        | ttl_expired          | The token was not used within the timeout period or the token has already been accessed. |
        | viewing_complete     | The recipient did not need to sign but has completed the viewing ceremony.               |



        <ds-inlinemessage kind="information" markdown="1">
        Because a user can cancel redirection, close their
        browser after signing, or spoof the landing URL,
        you should not rely on the <code>returnUrl</code>
        alone as the single source of truth for envelope
        status for your integration.
        </ds-inlinemessage>

        ### Maintaining State
        After the recipient completes the recipient view (or signing
        ceremony), they are redirected to your application. Your
        application can recover state information about the transaction
        by storing information in a cookie, or by including query
        parameters in the `returnUrl` field. For example.
        `https://myapp.example.com/docusign_return?myState=12345` When the
        user is redirected to your app, the `event` query parameter will
        be appended. In this example, prevent spoofing by not using a
        guessable value as the state value.


        ### Related topics

        - [How to request a signature by email](/docs/esign-rest-api/how-to/request-signature-email-remote/)
        - [How to request a signature through your app](/docs/esign-rest-api/how-to/request-signature-in-app-embedded/)
        - [How to request a signature using a composite template](/docs/esign-rest-api/how-to/request-signature-composite-template-embedded/)
        - [How to send an envelope via your app](/docs/esign-rest-api/how-to/embedded-sending/)
        - [How to set envelope tab values](/docs/esign-rest-api/how-to/set-envelope-tab-values/)
        - [How to set tab values in a template](/docs/esign-rest-api/how-to/set-template-tab-values/)

      operationId: Views_PostEnvelopeRecipientView
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: envelopeId
          in: path
          description: The ID of the draft envelope or template to preview.
          required: true
          type: string
        - name: recipientViewRequest
          in: body
          required: false
          schema:
            "$ref": "#/definitions/recipientViewRequest"
          description: ""
      responses:
        "201":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/EnvelopeViews"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: createRecipientView
      x-ds-method: createRecipient
      x-ds-service: Envelopes
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/envelopes/{envelopeId}/views/recipient_preview":
    post:
      tags:
        - EnvelopeRecipients
      summary: Creates an envelope recipient preview.
      operationId: Views_PostEnvelopeRecipientPreview
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: envelopeId
          in: path
          description: "The envelope's GUID. \n\nExample: `93be49ab-xxxx-xxxx-xxxx-f752070d71ec`\n"
          required: true
          type: string
        - name: recipientPreviewRequest
          in: body
          required: false
          schema:
            "$ref": "#/definitions/recipientPreviewRequest"
          description: ""
      responses:
        "201":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/viewUrl"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: createEnvelopeRecipientPreview
      description: |-
        Returns a URL to preview the recipients' view of a draft envelope or template. You can embed this view in your application to enable the sender to preview the recipients' experience.

        For more information, see [Preview and Send](https://support.docusign.com/s/document-item?bundleId=ulp1643236876813&topicId=oeg1578456408976.html).
      x-ds-method: createEnvelopeRecipientPreview
      x-ds-service: Uncategorized
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/envelopes/{envelopeId}/views/sender":
    post:
      tags:
        - EnvelopeViews
      summary: Returns a URL to the sender view UI.
      description:
        "Returns a URL that enables you to embed the sender view\nof the
        DocuSign UI in your applications. To customize the appearance of the sender
        view, you can append special query parameters to the returned URL. \n\n\n##
        Best Practices\n\nThe returned URL can only be redirected to immediately after
        it\nis generated. It can only be used once. Therefore, request the\nURL immediately
        before you redirect your user to it.\n\nDue to screen space issues,\ndo not
        use an `<iframe>` for embedded operations on mobile devices.\nFor iOS devices,
        DocuSign recommends using a WebView.\n\n## Customizing the sending view\n\nYou
        can add query parameters\nto customize the appearance of the sending view.\nFor
        example, adding the following query parameters\nto the URL returned by this
        method\ncauses the sending view to:\n\n- start in the tagging screen\n- hide
        the Edit Pages command\n- hide all of the options under the Actions dropdown
        except Save, Close, and Discard\n\n```\nhttps://demo.docusign.net/Member/StartInSession.aspx?StartConsole=1&t=dd3b7c4c-xxxx-xxxx-xxxx-50cd195a3401&DocuEnvelope=f37489d3-xxxx-xxxx-xxxx-4de057063d0e&\\\n
        \       send=1&\\\n        showEditPages=false&\\\n        showHeaderActions=false\n```\n\nThe
        default value reflects what happens\nif you omit the customization query parameter.\nYou
        can use the interactive\n[Embedded Sending Demo tool](https://sign.agreementsdemo.com/Home/Sending)\nto
        see the effect of using different query parameters.\n\n| Query Parameter             |
        Default Value                                                                                                    |
        Alternate Value                                                                                                                                                                                                                                   |\n|
        :-------------------------- | :---------------------------------------------------------------------------------------------------------------
        | :------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
        |\n| sendButtonAction            | `send`<br><br>The Send button operates
        normally.                                                                 |
        `redirect`<br><br>The text of the button changes to Continue. Clicking it
        redirects to the `returnUrl` in the request object. If you intend to modify
        the envelope after redirection, see [this note](#modifying-the-envelope-after-redirection).
        |\n| backButtonAction            | `previousPage`<br><br>The back arrow and
        back button operate normally.                                           |
        `redirect`<br><br>Clicking the back arrow and back button redirects to the
        `returnUrl` in the request object. If you intend to modify the envelope after
        redirection, see [this note](#modifying-the-envelope-after-redirection).                 |\n|
        showBackButton              | `true` <br><br> Shows the back arrow and the
        back button.                                                        | `false`<br><br>Hides
        the back arrow and the back button.                                                                                                                                                                                          |\n|
        showEditRecipients          | `true` <br><br> Shows the Edit Recipients command
        in the action menu and in the Conditional Recipients settings. | `false`<br><br>Hides
        the Edit Recipients command.                                                                                                                                                                                                 |\n|
        showEditDocuments           | `true` <br><br> Shows the Edit Documents command
        in the action menu and removes the Documents Gear icon.         | `false`<br><br>Hides
        the Edit Documents command.                                                                                                                                                                                                  |\n|
        showEditDocumentVisibility  | `true` <br><br> Shows the Documents Gear icon
        where the sender can edit document visibility.                     | `false`<br><br>Hides
        the Documents Gear icon.                                                                                                                                                                                                     |\n|
        showEditPages               | `true` <br><br> Shows the Edit Pages command
        under the document thumbnail.                                       | `false`<br><br>Hides
        the Edit Pages command.                                                                                                                                                                                                      |\n|
        showMatchingTemplatesPrompt | `true` <br><br> Shows the matching template
        prompt.                                                              | `false`<br><br>Hides
        the matching template prompt.                                                                                                                                                                                                |\n|
        showHeaderActions           | `true` <br><br> Shows all options under the
        Actions dropdown.                                                    | `false`<br><br>Hides
        all options under the Actions dropdown except Save, Close, and Discard.                                                                                                                                                      |\n|
        showDiscardAction           | `true` <br><br> Shows the Discard command under
        the Actions dropdown.                                            | `false`<br><br>Hides
        the Discard command.                                                                                                                                                                                                         |\n|
        send                        | `1`    <br><br> Starts the signer in the tagging
        screen.                                                         | `0`<br><br>Starts
        the signer in the prepare screen.                                                                                                                                                                                               |\n|
        showTabPalette              | `true` <br><br>Shows the tab palette.                                                                            |
        `false` <br><br>Hides the tab palette.                                                                                                                                                                                                            |\n|
        tabPaletteType              | `standard` <br><br> Displays the standard tab
        palette.                                                           | `custom`<br>`merge`<br>`notary`<br>`seals`<br>`smartcontracts`<br>`annotations`<br>`smartSections`<br><br>Displays
        the specified tab palette before the standard palette.                                                                         |\n\n##
        \ Modifying the envelope after redirection\n\nIf you use `sendButtonAction=redirect`\nor\n`backButtonAction=redirect`,\nand\nyou
        intend to modify the envelope after redirection,\nyou will need to lock the
        envelope\nand\nadd an extra query parameter:\n\n1.  [Create a lock token][createLock]
        for the envelope.\n2.  Add the new lock token to the URL with the `lockToken`
        query parameter.<br>\n    `...&sendButtonAction=redirect&lockToken=MDgxZxabUVBiMWUzZWYz`<br>\n
        \   **Note:** The `lockToken` query parameter is case-sensitive.\n\n\nAfter
        clicking Continue,\nyour user is redirected back to your integration.\nYou
        can then [delete the lock token][deleteLock].\n\n[createLock]: /docs/esign-rest-api/reference/envelopes/envelopelocks/create/\n[deleteLock]:
        /docs/esign-rest-api/reference/envelopes/envelopelocks/delete/\n\n\n## Information
        security notice\n\nThis method provides full access to the sending account.
        When you\nuse this view, the current user has full access to the account.\nIf
        the account has administrative privileges, then this method\nalso provides
        administrator access.\n\nIf your use case needs to enable a sender to update
        a draft\nenvelope before it is sent or make other changes, take one of the\nfollowing
        steps:\n\n- Configure each sender to have their own individual user account\n
        \ to use this API method.\n- Enhance your API integration so that this method
        is not needed.\n  Your integration can create the tabs, recipients,\n  and
        other envelope settings as needed.\n\n\n## Related topics\n\n- [Embedded signing
        and sending](/docs/esign-rest-api/esign101/concepts/embedding/)\n- [How to
        send an envelope via your app](/docs/esign-rest-api/how-to/embedded-sending/)\n-
        [How to embed the DocuSign UI in your app](/docs/esign-rest-api/how-to/embed-ui/)\n-
        [Introducing customizable embedded sending](https://www.docusign.com/blog/developers/introducing-customizable-embedded-sending)\n"
      operationId: Views_PostEnvelopeSenderView
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: envelopeId
          in: path
          description: "The envelope's GUID. \n\nExample: `93be49ab-xxxx-xxxx-xxxx-f752070d71ec`\n"
          required: true
          type: string
        - name: returnUrlRequest
          in: body
          required: false
          schema:
            "$ref": "#/definitions/returnUrlRequest"
          description: ""
      responses:
        "201":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/EnvelopeViews"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: createSenderView
      x-ds-method: createSender
      x-ds-service: Envelopes
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/envelopes/{envelopeId}/views/shared":
    post:
      tags:
        - EnvelopeViews
      summary: Returns a URL to the shared recipient view UI for an envelope.
      operationId: Views_PostEnvelopeRecipientSharedView
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: envelopeId
          in: path
          description: "The envelope's GUID. \n\nExample: `93be49ab-xxxx-xxxx-xxxx-f752070d71ec`\n"
          required: true
          type: string
        - name: recipientViewRequest
          in: body
          required: false
          schema:
            "$ref": "#/definitions/recipientViewRequest"
          description: ""
      responses:
        "201":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/viewUrl"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: createEnvelopeRecipientSharedView
      description: |
        Returns a URL that enables you to embed the DocuSign UI recipient view of a [shared envelope](https://support.docusign.com/s/document-item?bundleId=pik1583277475390&topicId=uzg1583277438725.html) in your applications. This is the view that a user sees of an envelope that a recipient on the same account has shared with them.

        Due to screen space issues,
        do not use an `<iframe>` for embedded operations on mobile devices.
        For iOS devices, DocuSign recommends using a WebView.

        ### Related topics

        - [Embedded signing and sending](/docs/esign-rest-api/esign101/concepts/embedding/)
        - [How to send an envelope via your app](/docs/esign-rest-api/how-to/embedded-sending/)
        - [How to embed the DocuSign UI in your app](/docs/esign-rest-api/how-to/embed-ui/)
      x-ds-method: createSharedRecipient
      x-ds-service: Uncategorized
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/envelopes/{envelopeId}/workflow":
    get:
      tags:
        - EnvelopeWorkflowDefinition
      summary: Returns the workflow definition for an envelope.
      operationId: EnvelopeWorkflowDefinitionV2_GetEnvelopeWorkflowDefinition
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: envelopeId
          in: path
          description: "The envelope's GUID. \n\nExample: `93be49ab-xxxx-xxxx-xxxx-f752070d71ec`\n"
          required: true
          type: string
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/workflow"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getEnvelopeWorkflowDefinition
      description:
        "Returns the workflow definition for the envelope specified by
        `envelopeId`. If the envelope does not have a workflow object, this method
        returns a 404.

        "
      x-ds-method: getEnvelopeWorkflowDefinition
      x-ds-service: Uncategorized
      x-ds-in-sdk: true
    put:
      tags:
        - EnvelopeWorkflowDefinition
      summary: Updates the workflow definition for an envelope.
      operationId: EnvelopeWorkflowDefinitionV2_PutEnvelopeWorkflowDefinition
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: envelopeId
          in: path
          description: "The envelope's GUID. \n\nExample: `93be49ab-xxxx-xxxx-xxxx-f752070d71ec`\n"
          required: true
          type: string
        - name: workflow
          in: body
          required: false
          schema:
            "$ref": "#/definitions/workflow"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/workflow"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: updateEnvelopeWorkflowDefinition
      description: |-
        Updates the specified envelope's workflow.

        You can use this endpoint to add scheduled sending to a draft envelope. You can also update the scheduled sending for a sent envelope if the scheduled sending countdown is in progress. In that case, the envelope will be reset to a draft state.

        You can also add delayed routing to a draft envelope or a sent envelope that has not started workflow processing.
      x-ds-method: updateEnvelopeWorkflowDefinition
      x-ds-service: Uncategorized
      x-ds-in-sdk: true
    delete:
      tags:
        - EnvelopeWorkflowDefinition
      summary: Delete the workflow definition for an envelope.
      operationId: EnvelopeWorkflowDefinitionV2_DeleteEnvelopeWorkflowDefinition
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: envelopeId
          in: path
          description: "The envelope's GUID. \n\nExample: `93be49ab-xxxx-xxxx-xxxx-f752070d71ec`\n"
          required: true
          type: string
      responses:
        "200":
          description: A successful response or an error.
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: deleteEnvelopeWorkflowDefinition
      description:
        "Deletes the specified envelope's workflow definition if it has
        one.\n\n**Note:** If the envelope was scheduled to be sent, this endpoint
        will cancel the scheduled send and the envelope status will be reset to \n`created`.
        To resend the envelope, call the update the status to `sent` with the [Envelopes::Update](/docs/esign-rest-api/reference/envelopes/envelopes/update/)
        method.\n"
      x-ds-method: deleteEnvelopeWorkflowDefinition
      x-ds-service: Uncategorized
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/envelopes/{envelopeId}/workflow/scheduledSending":
    get:
      tags:
        - EnvelopeWorkflowDefinition
      summary: Returns the scheduled sending rules for an envelope's workflow definition.
      operationId: EnvelopeWorkflowScheduledSending_GetEnvelopeScheduledSendingDefinition
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: envelopeId
          in: path
          description: "The envelope's GUID. \n\nExample: `93be49ab-xxxx-xxxx-xxxx-f752070d71ec`\n"
          required: true
          type: string
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/scheduledSending"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getEnvelopeScheduledSendingDefinition
      x-ds-method: getEnvelopeScheduledSendingDefinition
      x-ds-service: Uncategorized
      description: |-
        Given a template and a workflow step, returns the scheduled sending rules for that workflow step.

        **Note:** If the workflow step does not have a scheduled sending object, this method returns a 404.
      x-ds-in-sdk: true
    put:
      tags:
        - EnvelopeWorkflowDefinition
      summary: Updates the scheduled sending rules for an envelope's workflow.
      operationId: EnvelopeWorkflowScheduledSending_PutEnvelopeScheduledSendingDefinition
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: envelopeId
          in: path
          description: "The envelope's GUID. \n\nExample: `93be49ab-xxxx-xxxx-xxxx-f752070d71ec`\n"
          required: true
          type: string
        - name: scheduledSending
          in: body
          required: false
          schema:
            "$ref": "#/definitions/scheduledSending"
          description: An object that describes the settings for scheduled sending.
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/scheduledSending"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: updateEnvelopeScheduledSendingDefinition
      x-ds-method: updateEnvelopeScheduledSendingDefinition
      x-ds-service: Uncategorized
      description:
        Updates the scheduled sending rules for an envelope's workflow.
        The envelope must have an existing workflow object.
      x-ds-in-sdk: true
    delete:
      tags:
        - EnvelopeWorkflowDefinition
      summary: Deletes the scheduled sending rules for the envelope's workflow.
      operationId: EnvelopeWorkflowScheduledSending_DeleteEnvelopeScheduledSendingDefinition
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: envelopeId
          in: path
          description: "The envelope's GUID. \n\nExample: `93be49ab-xxxx-xxxx-xxxx-f752070d71ec`\n"
          required: true
          type: string
      responses:
        "200":
          description: A successful response or an error.
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: deleteEnvelopeScheduledSendingDefinition
      x-ds-method: deleteEnvelopeScheduledSendingDefinition
      x-ds-service: Uncategorized
      description:
        Deletes the scheduled sending rules for an envelope's workflow.
        You cannot call this endpoint once the scheduled sending countdown has begun.
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/envelopes/{envelopeId}/workflow/steps":
    post:
      tags:
        - EnvelopeWorkflowDefinition
      summary: Adds a new step to an envelope's workflow.
      operationId: EnvelopeWorkflowStep_PostEnvelopeWorkflowStepDefinition
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: envelopeId
          in: path
          description: "The envelope's GUID. \n\nExample: `93be49ab-xxxx-xxxx-xxxx-f752070d71ec`\n"
          required: true
          type: string
        - name: workflowStep
          in: body
          required: false
          schema:
            "$ref": "#/definitions/workflowStep"
          description: ""
      responses:
        "201":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/workflowStep"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: createEnvelopeWorkflowStepDefinition
      x-ds-method: createEnvelopeWorkflowStepDefinition
      x-ds-service: Uncategorized
      description: Adds a new step to an envelope's workflow.
      x-ds-in-sdk: true
    parameters: []
  ? "/v2.1/accounts/{accountId}/envelopes/{envelopeId}/workflow/steps/{workflowStepId}"
  : get:
      tags:
        - EnvelopeWorkflowDefinition
      summary: Returns a specified workflow step for a specified template.
      operationId: EnvelopeWorkflowStep_GetEnvelopeWorkflowStepDefinition
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: envelopeId
          in: path
          description: "The envelope's GUID. \n\nExample: `93be49ab-xxxx-xxxx-xxxx-f752070d71ec`\n"
          required: true
          type: string
        - name: workflowStepId
          in: path
          required: true
          type: string
          description: The ID of the workflow step.
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/workflowStep"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getEnvelopeWorkflowStepDefinition
      x-ds-method: getEnvelopeWorkflowStepDefinition
      x-ds-service: Uncategorized
      description:
        Returns a workflow step specified by `workflowStepId` for an envelope
        specified by `envelopeId`.
      x-ds-in-sdk: true
    put:
      tags:
        - EnvelopeWorkflowDefinition
      summary: Updates the specified workflow step for an envelope.
      operationId: EnvelopeWorkflowStep_PutEnvelopeWorkflowStepDefinition
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: envelopeId
          in: path
          description: "The envelope's GUID. \n\nExample: `93be49ab-xxxx-xxxx-xxxx-f752070d71ec`\n"
          required: true
          type: string
        - name: workflowStepId
          in: path
          required: true
          type: string
          description: The ID of the workflow step.
        - name: workflowStep
          in: body
          required: false
          schema:
            "$ref": "#/definitions/workflowStep"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/workflowStep"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: updateEnvelopeWorkflowStepDefinition
      x-ds-method: updateEnvelopeWorkflowStepDefinition
      x-ds-service: Uncategorized
      description: |-
        Updates the workflow step specified by `workflowStepId` for an envelope.

        You can use this endpoint to add or update delayed routing for a draft envelope. You can add or update delayed routing for a sent envelope as long as the previous workflow step has not been completed.
      x-ds-in-sdk: true
    delete:
      tags:
        - EnvelopeWorkflowDefinition
      summary: Deletes a workflow step from an envelope's workflow definition.
      operationId: EnvelopeWorkflowStep_DeleteEnvelopeWorkflowStepDefinition
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: envelopeId
          in: path
          description: "The envelope's GUID. \n\nExample: `93be49ab-xxxx-xxxx-xxxx-f752070d71ec`\n"
          required: true
          type: string
        - name: workflowStepId
          in: path
          required: true
          type: string
          description: The ID of the workflow step.
      responses:
        "200":
          description: A successful response or an error.
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: deleteEnvelopeWorkflowStepDefinition
      x-ds-method: deleteEnvelopeWorkflowStepDefinition
      x-ds-service: Uncategorized
      description:
        Deletes the workflow step specified by `workflowStepId` from an
        envelope specified by `envelopeId`.
      x-ds-in-sdk: true
    parameters: []
  ? "/v2.1/accounts/{accountId}/envelopes/{envelopeId}/workflow/steps/{workflowStepId}/delayedRouting"
  : get:
      tags:
        - EnvelopeWorkflowDefinition
      summary: Returns the delayed routing rules for an envelope's workflow step definition.
      operationId: EnvelopeWorkflowDelayedRouting_GetEnvelopeDelayedRoutingDefinition
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: envelopeId
          in: path
          description: "The envelope's GUID. \n\nExample: `93be49ab-xxxx-xxxx-xxxx-f752070d71ec`\n"
          required: true
          type: string
        - name: workflowStepId
          in: path
          required: true
          type: string
          description: The ID of the workflow step.
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/delayedRouting"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getEnvelopeDelayedRoutingDefinition
      x-ds-method: getEnvelopeDelayedRoutingDefinition
      x-ds-service: Uncategorized
      description: |-
        Given an envelope and a workflow step, returns the delayed routing rules for that workflow step.

        **Note:** If the workflow step does not have a delayed routing object, this method returns a 404.
      x-ds-in-sdk: true
    put:
      tags:
        - EnvelopeWorkflowDefinition
      summary: Updates the delayed routing rules for an envelope's workflow step definition.
      operationId: EnvelopeWorkflowDelayedRouting_PutEnvelopeDelayedRoutingDefinition
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: envelopeId
          in: path
          description: "The envelope's GUID. \n\nExample: `93be49ab-xxxx-xxxx-xxxx-f752070d71ec`\n"
          required: true
          type: string
        - name: workflowStepId
          in: path
          required: true
          type: string
          description: The ID of the workflow step.
        - name: delayedRouting
          in: body
          required: false
          schema:
            "$ref": "#/definitions/delayedRouting"
          description:
            A complex element that specifies the delayed routing settings
            for the workflow step.
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/delayedRouting"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: updateEnvelopeDelayedRoutingDefinition
      x-ds-method: updateEnvelopeDelayedRoutingDefinition
      x-ds-service: Uncategorized
      description: |-
        Updates the delayed routing rules for an envelope's workflow step definition.

        You can use this endpoint to add delayed routing to a draft envelope or a sent envelope (as long as the previous workflow step has not yet been completed). You can also update the delayed routing rule for an envelope, as long as the delay is not yet complete. If you update the delayed routing rule while the delay is already in progress, the countdown will reset.
      x-ds-in-sdk: true
    delete:
      tags:
        - EnvelopeWorkflowDefinition
      summary:
        Deletes the delayed routing rules for the specified envelope workflow
        step.
      operationId: EnvelopeWorkflowDelayedRouting_DeleteEnvelopeDelayedRoutingDefinition
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: envelopeId
          in: path
          description: "The envelope's GUID. \n\nExample: `93be49ab-xxxx-xxxx-xxxx-f752070d71ec`\n"
          required: true
          type: string
        - name: workflowStepId
          in: path
          required: true
          type: string
          description: The ID of the workflow step.
      responses:
        "200":
          description: A successful response or an error.
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: deleteEnvelopeDelayedRoutingDefinition
      x-ds-method: deleteEnvelopeDelayedRoutingDefinition
      x-ds-service: Uncategorized
      description:
        "Delete the delayed routing object for an envelope's workflow step.
        You cannot call this endpoint once the delay is in progress. As a workaround,
        you can update the delay or send time to one minute in the future using the
        [updateEnvelopeDelayedRoutingDefinition](/docs/esign-rest-api/reference/envelopes/envelopeworkflowdefinition/updateEnvelopeDelayedRoutingDefinition/)
        endpoint. \n\n**Note:** After deleting the delayed routing object, the workflow
        step still contains the `pause_before` action. Once the workflow step is reached,
        you will need to [unpause the envelope](/docs/esign-rest-api/how-to/unpause-workflow/).
        If you want to delete the step entirely, use [deleteEnvelopeWorkflowStepDefinition](/docs/esign-rest-api/reference/envelopes/envelopeworkflowdefinition/deleteenvelopeworkflowstepdefinition/)
        instead.\n"
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/envelopes/status":
    put:
      tags:
        - Envelopes
      summary: Gets envelope statuses for a set of envelopes.
      description: |
        Retrieves envelope statuses for a set of envelopes.

        <ds-inlinemessage>
        To search for envelopes using a broad range of filters, use
        <a href="/docs/esign-rest-api/reference/envelopes/envelopes/liststatuschanges/">Envelopes: listStatusChanges</a>
        instead of this method.
        </ds-inlinemessage>

        You must specify exactly one of the following query parameters:

        | Parameter         | Description                                                                      |
        | :---------------- | :------------------------------------------------------------------------------- |
        | `from_date`       | a valid UTC DateTime:  `2016-01-01`                                              |
        | `envelope_ids`    | A comma-separated list of envelope IDs<br>or the special value `request_body`    |
        | `transaction_ids` | A comma-separated list of transaction IDs<br>or the special value `request_body` |

        When you use the special value `request_body`, the request body looks like this:

        ```
        {
          "envelopeIds": [
            "44c5ad6c-xxxx-xxxx-xxxx-ebda5e2dfe15",
            "8e26040d-xxxx-xxxx-xxxx-1e29b924d237",
            "c8b40a2d-xxxx-xxxx-xxxx-4fe56fe10f95"
          ]
        }
        ```

        <ds-inlinemessage kind="warning">
        Omitting the request body altogether causes the endpoint to return an error.
        The request body must be at least <code>{}</code>.
        </ds-inlinemessage>

        ### Related topics

        - [Searching for envelopes](/docs/esign-rest-api/esign101/concepts/envelopes/search/)
        - [How to list envelope status changes](/docs/esign-rest-api/how-to/list-envelope-status-changes/)
      operationId: Envelopes_PutStatus
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: ac_status
          in: query
          required: false
          type: string
          description:
            "Specifies the Authoritative Copy Status for the envelopes. Valid
            values: \n\n- `Unknown`\n- `Original`\n- `Transferred`\n- `AuthoritativeCopy`\n-
            `AuthoritativeCopyExportPending`\n- `AuthoritativeCopyExported`\n- `DepositPending`\n-
            `Deposited`\n- `DepositedEO`\n- `DepositFailed`"
        - name: block
          in: query
          required: false
          type: string
          description:
            When **true,** removes any results that match one of the provided
            `transaction_ids`.
        - name: count
          in: query
          required: false
          type: string
          description: |+
            The maximum number of results to return.

            Use `start_position` to specify the number of results to skip.

        - name: email
          in: query
          required: false
          type: string
          description: The email address of the sender.
        - name: envelope_ids
          in: query
          required: false
          type: string
          description: |-
            The envelope IDs to include in the results.

            The value of this property can be:
            - A comma-separated list of envelope IDs
            - The special value `request_body`. In this case, the method uses the envelope IDs in the request body.
        - name: from_date
          in: query
          required: false
          type: string
          description: |-
            The date/time setting that specifies when the request begins checking for status changes for envelopes in the account. This is required unless parameters `envelope_ids` and/or `transaction_Ids` are provided.

            **Note:** This parameter must be set to a valid  `DateTime`, or  `envelope_ids` and/or `transaction_ids` must be specified.
        - name: from_to_status
          in: query
          required: false
          type: string
          description:
            "The envelope status that you are checking for. Possible values
            are:\n\n\n- `Changed` (default)\n- `Completed`\n- `Created`\n- `Declined`\n-
            `Deleted`\n- `Delivered`\n- `Processing`\n- `Sent`\n- `Signed`\n- `TimedOut`\n-
            `Voided`\n\nFor example, if you specify `Changed`, this method\nreturns
            a list of envelopes that changed status\nduring the `from_date` to `to_date`
            time period. \n"
        - name: start_position
          in: query
          required: false
          type: string
          description: |
            The zero-based index of the
            result from which to start returning results.

            Use with `count` to limit the number
            of results.

            The default value is `0`.
        - name: status
          in: query
          required: false
          type: string
          description: |
            A comma-separated list of envelope status to search for. Possible values are:

            - `completed`
            - `created`
            - `declined`
            - `deleted`
            - `delivered`
            - `processing`
            - `sent`
            - `signed`
            - `template`
            - `voided`
        - name: to_date
          in: query
          required: false
          type: string
          description:
            "Optional date/time setting\nthat specifies the last date/time
            \nor envelope status changes in the result set. \n\nThe default value is
            the time that you call the method. \n"
        - name: transaction_ids
          in: query
          required: false
          type: string
          description: |-
            The transaction IDs to include in the results. Note that transaction IDs are valid for seven days.

            The value of this property can be:
            - A list of comma-separated transaction IDs
            - The special value `request_body`. In this case, this method uses the transaction IDs in the request body.
        - name: user_name
          in: query
          required: false
          type: string
          description: |
            Limits results to envelopes
            sent by the account user
            with this user name.

            `email` must be given as well,
            and both `email` and `user_name`
            must refer to an existing account user.
        - name: envelopeIdsRequest
          in: body
          required: false
          schema:
            "$ref": "#/definitions/envelopeIdsRequest"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/envelopesInformation"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: listStatus
      x-ds-method: listStatus
      x-ds-service: Envelopes
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/envelopes/transfer_rules":
    get:
      tags:
        - EnvelopeTransferRules
      summary: Gets envelope transfer rules.
      operationId: EnvelopeTransferRules_GetEnvelopeTransferRules
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: count
          in: query
          required: false
          type: string
          description: |
            The maximum number of results to return.

            Use `start_position` to specify the number of results to skip.
        - name: start_position
          in: query
          required: false
          type: string
          description: |
            The zero-based index of the
            result from which to start returning results.

            Use with `count` to limit the number
            of results.

            The default value is `0`.
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/envelopeTransferRuleInformation"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: get
      description: |-
        This method retrieves a list of envelope transfer rules associated with an account.

        **Note:** Only Administrators can create and use envelope transfer rules. In addition, to use envelope transfer rules, the **Transfer Custody** feature must be enabled for your account.
      x-ds-method: get
      x-ds-service: Uncategorized
      x-ds-in-sdk: true
    put:
      tags:
        - EnvelopeTransferRules
      summary: Changes the status of multiple envelope transfer rules.
      operationId: EnvelopeTransferRules_PutEnvelopeTransferRules
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: envelopeTransferRuleInformation
          in: body
          required: false
          schema:
            "$ref": "#/definitions/envelopeTransferRuleInformation"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/envelopeTransferRuleInformation"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: update
      description: |-
        This method changes the status for one or more envelope transfer rules based on the `envelopeTransferRuleId`s in the request body. You use this method to change whether or not the rules are enabled.

        **Note:** You cannot change any other information about the envelope transfer rule. Only Administrators can update envelope transfer rules. In addition, to use envelope transfer rules, the **Transfer Custody** feature must be enabled for your account.
      x-ds-method: update
      x-ds-service: Uncategorized
      x-ds-in-sdk: true
    post:
      tags:
        - EnvelopeTransferRules
      summary: Creates an envelope transfer rule.
      operationId: EnvelopeTransferRules_PostEnvelopeTransferRules
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: envelopeTransferRuleRequest
          in: body
          required: false
          schema:
            "$ref": "#/definitions/envelopeTransferRuleRequest"
          description: ""
      responses:
        "201":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/envelopeTransferRuleInformation"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: create
      description:
        "This method creates an envelope transfer rule.\n\nWhen you create
        an envelope transfer rule, you specify the following properties: \n\n- `eventType`\n-
        `fromGroups`\n- `toUser`\n- `toFolder`\n- `carbonCopyOriginalOwner`\n- `enabled`\n\n**Note:**
        Only Administrators can create envelope transfer rules. In addition, to use
        envelope transfer rules, the **Transfer Custody** feature must be enabled
        for your account."
      x-ds-method: create
      x-ds-service: Uncategorized
      x-ds-in-sdk: true
    parameters: []
  ? "/v2.1/accounts/{accountId}/envelopes/transfer_rules/{envelopeTransferRuleId}"
  : put:
      tags:
        - EnvelopeTransferRules
      summary: Changes the status of an envelope transfer rule.
      operationId: EnvelopeTransferRules_PutEnvelopeTransferRule
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: envelopeTransferRuleId
          in: path
          required: true
          type: string
          description:
            The ID of the envelope transfer rule. The system generates this
            ID when the rule is first created.
        - name: envelopeTransferRule
          in: body
          required: false
          schema:
            "$ref": "#/definitions/envelopeTransferRule"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/envelopeTransferRule"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: updateEnvelopeTransferRule
      description: |-
        This method changes the status of an envelope transfer rule. You use this method to change whether or not the rule is enabled.

        You must include the `envelopeTransferRuleId` both as a query parameter, and in the request body.

        **Note:** You cannot change any other information about the envelope transfer rule. Only Administrators can update an envelope transfer rule. In addition, to use envelope transfer rules, the **Transfer Custody** feature must be enabled for your account.
      x-ds-method: updateEnvelopeTransferRule
      x-ds-service: Uncategorized
      x-ds-in-sdk: true
    delete:
      tags:
        - EnvelopeTransferRules
      summary: Deletes an envelope transfer rule.
      operationId: EnvelopeTransferRules_DeleteEnvelopeTransferRules
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: envelopeTransferRuleId
          in: path
          required: true
          type: string
          description:
            The ID of the envelope transfer rule. The system generates this
            ID when the rule is first created.
      responses:
        "200":
          description: A successful response or an error.
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: delete
      description: |-
        This method deletes an envelope transfer rule.

        **Note:** Only Administrators can delete envelope transfer rules. In addition, to use envelope transfer rules, the **Transfer Custody** feature must be enabled for your account.
      x-ds-method: delete
      x-ds-service: Uncategorized
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/favorite_templates":
    get:
      tags:
        - FavoriteTemplates
      summary: Retrieves the list of favorite templates for the account.
      operationId: FavoriteTemplates_GetFavoriteTemplates
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/favoriteTemplatesInfo"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getFavoriteTemplates
      x-ds-api-status: beta
      description: Retrieves the list of favorite templates for the account.
      x-ds-method: getFavoriteTemplates
      x-ds-service: Uncategorized
      x-ds-in-sdk: true
    put:
      tags:
        - FavoriteTemplates
      summary: Set one or more templates as account favorites.
      operationId: FavoriteTemplates_PutFavoriteTemplate
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: favoriteTemplatesInfo
          in: body
          required: false
          schema:
            "$ref": "#/definitions/favoriteTemplatesInfo"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/favoriteTemplatesInfo"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: updateFavoriteTemplate
      x-ds-api-status: beta
      description: |
        Set one or more templates as account favorites.

        Your request should include each template as a separate `favoriteTemplatesContentItem` JSON object, like this:
        ```
        {
            "favoriteTemplates": [
                {
                    "templateId": "6bc0584f-xxxx-xxxx-xxxx-35ab28cc44e1"
                },
                {
                    "templateId": "8ae9b3452-xxxx-xxxx-xxx-ac0de23fa57f"
                }
            ]
        }
        ```
      x-ds-method: updateFavoriteTemplate
      x-ds-service: Uncategorized
      x-ds-in-sdk: true
    delete:
      tags:
        - FavoriteTemplates
      summary: Remove one or more templates from the account favorites.
      operationId: FavoriteTemplates_UnFavoriteTemplate
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: favoriteTemplatesInfo
          in: body
          required: false
          schema:
            "$ref": "#/definitions/favoriteTemplatesInfo"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/favoriteTemplatesInfo"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: unFavoriteTemplate
      x-ds-api-status: beta
      description:
        "Remove one or more templates from the account favorites. \n\nYour
        request should include each template to remove as a separate `favoriteTemplatesContentItem`
        JSON object, like this:\n```\n{\n    \"favoriteTemplates\": [\n        {\n
        \           \"templateId\": \"6bc0584f-xxxx-xxxx-xxxx-35ab28cc44e1\"\n        },\n
        \       {\n            \"templateId\": \"8ae9b3452-xxxx-xxxx-xxx-ac0de23fa57f\"\n
        \       }\n    ]\n}\n```\n\nThe response includes the IDs of the templates
        that were successfully removed from your favorites. To get the account's remaining
        favorite templates, use the [getFavoriteTemplates](/docs/esign-rest-api/reference/accounts/favoritetemplates/getfavoritetemplates/)
        endpoint."
      x-ds-method: unFavoriteTemplate
      x-ds-service: Uncategorized
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/folders":
    get:
      tags:
        - Folders
      summary: Returns a list of the account's folders.
      description: |
        Returns a list of the account's folders.

        Use the `include` query parameter to specify the kinds of folders to return.

        By default, only the first level of subfolders is shown.
        Set the `sub_folder_depth` query parameter to `-1` to return the entire folder hierarchy.


        <ds-column>

        <ds-step open="false" hideIcon="true">

        Default returns only top-level folders. Click to show.

        <div>

        `GET 'https://demo.docusign.net/restapi/v2.1/accounts/624e3e00-xxxx-xxxx-xxxx-43918c520dab/folders'`


        ```json
        {
          "resultSetSize": "5",
          "startPosition": "0",
          "endPosition": "4",
          "totalSetSize": "5",
          "folders": [
            {
              "name": "Draft",
              "type": "draft",
              "itemCount": "1",
              "subFolderCount": "0",
              "hasSubFolders": "false"
            },
            {
              "name": "Inbox",
              "type": "inbox",
              "itemCount": "0",
              "subFolderCount": "1",
              "hasSubFolders": "true",
              "folders": [
                {
                  "name": "Project Fair",
                  "type": "normal",
                  "hasSubFolders": "false",
                  "parentFolderId": "3ed02ee3-xxxx-xxxx-xxxx-e6795f96a840",
                  "parentFolderUri": "/folders/3ed02ee3-xxxx-xxxx-xxxx-e6795f96a840"
                }
              ]
            },
            {
              "name": "Deleted Items",
              "type": "recyclebin",
              "itemCount": "0",
              "subFolderCount": "0",
              "hasSubFolders": "false"
            },
            {
              "name": "Sent Items",
              "type": "sentitems",
              "itemCount": "3",
              "subFolderCount": "0",
              "hasSubFolders": "false"
            }
          ]
        }

        ```

        </div></ds-step>


        <ds-step open="false" hideIcon="true">

        Setting `sub_folder_depth` to `-1` returns the entire folder hierarchy.
        Click to show.


        <div>

        `GET 'https://demo.docusign.net/restapi/v2.1/accounts/624e3e00-xxxx-xxxx-xxxx-43918c520dab/folders?sub_folder_depth=-1'`

        One envelope has been moved from the `Inbox` folder to the
        `Project Fair/Phase 1` folder, and the endpoint is invoked
        with `sub_folder_depth=-1`.


        ```json
        {
          "resultSetSize": "5",
          "startPosition": "0",
          "endPosition": "4",
          "totalSetSize": "4",
          "folders": [
            {
              "name": "Draft",
              "type": "draft",
              "itemCount": "1",
              "hasSubFolders": "false"
            },
            {
              "name": "Inbox",
              "type": "inbox",
              "itemCount": "0",
              "hasSubFolders": "true",
              "folders": [
                {
                  "name": "Project Fair",
                  "type": "normal",
                  "itemCount": "0",
                  "hasSubFolders": "true",
                  "parentFolderId": "3ed02ee3-xxxx-xxxx-xxxx-e6795f96a840",
                  "parentFolderUri": "/folders/3ed02ee3-xxxx-xxxx-xxxx-e6795f96a840",
                  "folders": [
                    {
                      "name": "NDAs",
                      "type": "normal",
                      "itemCount": "0",
                      "hasSubFolders": "false",
                      "parentFolderId": "12882f2f-xxxx-xxxx-xxxx-e04a714f8e2d",
                      "parentFolderUri": "/folders/12882f2f-xxxx-xxxx-xxxx-e04a714f8e2d"
                    },
                    {
                      "name": "Phase 1",
                      "type": "normal",
                      "itemCount": "1",
                      "hasSubFolders": "false",
                      "parentFolderId": "12882f2f-xxxx-xxxx-xxxx-e04a714f8e2d",
                      "parentFolderUri": "/folders/12882f2f-xxxx-xxxx-xxxx-e04a714f8e2d"
                    }
                  ]
                }
              ]
            },
            {
              "name": "Deleted Items",
              "type": "recyclebin",
              "itemCount": "0",
              "hasSubFolders": "false"
            },
            {
              "name": "Sent Items",
              "type": "sentitems",
              "itemCount": "1",
              "hasSubFolders": "false"
            }
          ]
        }
        ```

        </div></ds-step>
        </ds-column>


        ### Related topics

        - [Searching for envelopes](/docs/esign-rest-api/esign101/concepts/envelopes/search/)
        - [Sharing templates](/docs/esign-rest-api/esign101/concepts/templates/sharing/)
      operationId: Folders_GetFolders
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: count
          in: query
          required: false
          type: string
          description: The maximum number of results to return.
        - name: include
          in: query
          required: false
          type: string
          description:
            "A comma-separated list of folder types to include in the response.\nValid
            values are:\n\n- `envelope_folders`: Returns a list of envelope folders.
            (Default)\n- `template_folders`: Returns a list of template folders. \n-
            `shared_template_folders`: Returns a list of shared template folders.\n"
        - name: include_items
          in: query
          required: false
          type: string
          description:
            Indicates whether folder items are included in the response.
            If this parameter is omitted, the default is false.
        - name: start_position
          in: query
          required: false
          type: string
          description: |
            The zero-based index of the
            result from which to start returning results.

            The default value is `0`.
        - name: sub_folder_depth
          in: query
          required: false
          type: string
          description: |
            If missing or any value other than `-1`, the returned list contains only the top-level folders.
            A value of `-1` returns the complete folder hierarchy.
        - name: template
          in: query
          description:
            This parameter is deprecated as of version 2.1. Use `include`
            instead.
          required: false
          type: string
        - name: user_filter
          in: query
          required: false
          type: string
          description: |
            Narrows down the resulting folder list by the following values:

            - `all`: Returns all templates owned or shared with the user. (default)
            - `owned_by_me`: Returns only  templates the user owns.
            - `shared_with_me`: Returns only templates that are shared with the user.
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/foldersResponse"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: list
      x-ds-method: list
      x-ds-service: Folders
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/folders/{folderId}":
    get:
      tags:
        - Folders
      summary: "Gets information about items in a specified folder. "
      description:
        "Gets information about items in the specified folder. \n\nTo include
        a list of the items in the folder, set the `include_items` query parameter
        to **true.**\n\n### Related topics\n\n- [Searching for envelopes](/docs/esign-rest-api/esign101/concepts/envelopes/search/)\n-
        [Sharing templates](/docs/esign-rest-api/esign101/concepts/templates/sharing/)\n"
      operationId: Folders_GetFolderItems
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: folderId
          in: path
          description: The ID of the folder.
          required: true
          type: string
        - name: from_date
          in: query
          description: Reserved for DocuSign.
          required: false
          type: string
        - name: include_items
          in: query
          required: false
          type: string
          description:
            Indicates whether folder items are included in the response.
            If this parameter is omitted, the default is false.
        - name: owner_email
          in: query
          description: Reserved for DocuSign.
          required: false
          type: string
        - name: owner_name
          in: query
          description: Reserved for DocuSign.
          required: false
          type: string
        - name: search_text
          in: query
          description: Reserved for DocuSign.
          required: false
          type: string
        - name: start_position
          in: query
          description: Reserved for DocuSign.
          required: false
          type: string
        - name: status
          in: query
          description: Reserved for DocuSign.
          required: false
          type: string
        - name: to_date
          in: query
          description: Reserved for DocuSign.
          required: false
          type: string
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/folderItemsResponse"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: listItems
      x-ds-method: listItems
      x-ds-service: Folders
      x-ds-in-sdk: true
    put:
      tags:
        - Folders
      summary: Moves a set of envelopes from their current folder to another folder.
      description: |
        Moves a set of envelopes from their current folder to another folder.

        The `folderId` path parameter is the destination folder.
        The request body has an array of envelope IDs and the
        ID of the source folder.

        <ds-inlinemessage kind="warning"  markdown="1">
        Do not use the <code>folders</code> property in the request body.

        </ds-inlinemessage>

        If `folderId` is the special value **`recyclebin`**
        the envelopes are moved to the Deleted folder.
        Moving an in-process envelope
        (envelope status of `sent` or `delivered`)
        to the **`recyclebin`**
        voids the envelope.


        ### Related topics

        - [Searching for envelopes](/docs/esign-rest-api/esign101/concepts/envelopes/search/)
        - [Sharing templates](/docs/esign-rest-api/esign101/concepts/templates/sharing/)
      operationId: Folders_PutFolderById
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: folderId
          in: path
          description: The ID of the folder.
          required: true
          type: string
        - name: foldersRequest
          in: body
          required: false
          schema:
            "$ref": "#/definitions/foldersRequest"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/foldersResponse"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: moveEnvelopes
      x-ds-method: moveEnvelopes
      x-ds-service: Folders
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/groups":
    get:
      tags:
        - Groups
      summary: Gets information about groups associated with the account.
      description: |
        Gets information about groups associated with the account.


        <ds-inlinemessage kind="information" markdown="1">
        To get the users in a group:

        1. Use this endpoint to get the group ID.
        2. Use [listGroupUsers](/docs/esign-rest-api/reference/usergroups/groupusers/list/)
           to get the list of users.
        </ds-inlinemessage>

        ### Related topics

        - [How to set a permission profile](/docs/esign-rest-api/how-to/permission-profile-setting/)
      operationId: Groups_GetGroups
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: count
          in: query
          description: |-
            The maximum number of results to return.

            Use `start_position` to specify the number of results to skip.

            Valid values: `1` to `100`
          required: false
          type: string
        - name: group_type
          in: query
          required: false
          type: string
          description: |-
            The type of group to return. Valid values:

            * `AdminGroup`
            * `CustomGroup`
            * `EveryoneGroup`
        - name: include_usercount
          in: query
          required: false
          type: string
          description:
            When **true,** every group returned in the response includes
            a `userCount` property that contains the total number of users in the group.
            The default is **true.**
        - name: search_text
          in: query
          required: false
          type: string
          description:
            Filters the results of a GET request based on the text that you
            specify.
        - name: start_position
          in: query
          description: |
            The zero-based index of the
            result from which to start returning results.

            Use with `count` to limit the number
            of results.

            The default value is `0`.
          required: false
          type: string
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/groupInformation"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: listGroups
      x-ds-method: list
      x-ds-service: Groups
      x-ds-in-sdk: true
    put:
      tags:
        - Groups
      summary: Updates the group information for a group.
      description: |-
        Updates the group name and modifies, or sets, the permission profile for the group.

        ### Related topics

        - [How-To Set Up a Permission Profile](/docs/esign-rest-api/how-to/permission-profile-setting/)
      operationId: Groups_PutGroups
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: groupInformation
          in: body
          required: false
          schema:
            "$ref": "#/definitions/groupInformation"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/groupInformation"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: updateGroups
      x-ds-method: update
      x-ds-service: Groups
      x-ds-in-sdk: true
    post:
      tags:
        - Groups
      summary: Creates one or more groups for the account.
      description: |
        Creates one or more groups for the account.

        Groups help you manage users.
        For example, you can use groups
        to limit user access to templates.

        You can associate a group with a
        [permission profile](/docs/esign-rest-api/esign101/concepts/permissions/),
        which sets the user permissions for users in that group
        without having to set the `userSettings` property for each user.
        You are not required to set permission profiles for a group,
        but it makes it easier to manage user permissions
        for a large number of users.


        <ds-inlinemessage kind="warning" markdown="1">
        This endpoint uses only
        the <code>groupName</code> and
        <code>permissionProfileId</code>
        properties in the request body.
        All other properties are ignored.
        </ds-inlinemessage>


        Example request:
        ```json
        {
          "groups": [
            { "groupName": "montagues" },
            { "groupName": "capulets" },
            { "groupName": "nobles",
               "permissionProfileId": 1597 }
          ]
        }
        ```

        Use [AccountPermissionProfiles: list](/docs/esign-rest-api/reference/accounts/accountpermissionprofiles/list/)
        to get a list of permission profiles and their IDs.
        It is an error if the `permissionProfileId` does not exist.


        ### Related topics

        - [How-To Set Up a Permission Profile](/docs/esign-rest-api/how-to/permission-profile-setting/)
      operationId: Groups_PostGroups
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: groupInformation
          in: body
          required: false
          schema:
            "$ref": "#/definitions/groupInformation"
          description: ""
      responses:
        "201":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/groupInformation"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: createGroups
      x-ds-method: create
      x-ds-service: Groups
      x-ds-in-sdk: true
    delete:
      tags:
        - Groups
      summary: Deletes an existing user group.
      description: |
        Deletes an existing user group.

        When you delete a group, you include only the `groupId` in the request body.

        Example:

        ```
        {
          "groups": [
            {
              "groupId": "12345"
            }
        }
        ```
      operationId: Groups_DeleteGroups
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: groupInformation
          in: body
          required: false
          schema:
            "$ref": "#/definitions/groupInformation"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/groupInformation"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: deleteGroups
      x-ds-method: delete
      x-ds-service: Groups
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/groups/{groupId}/brands":
    get:
      tags:
        - GroupBrands
      summary: Gets the brand information for a group.
      description:
        This method returns information about the brands associated with
        a group.
      operationId: Brands_GetGroupBrands
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: groupId
          in: path
          description: The ID of the group.
          required: true
          type: string
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/GroupBrands"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getBrands
      x-ds-method: get
      x-ds-service: Groups
      x-ds-in-sdk: true
    put:
      tags:
        - GroupBrands
      summary: Adds an existing brand to a group.
      description:
        This method adds one or more existing brands to a group based on
        the `groupId`.
      operationId: Brands_PutGroupBrands
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: groupId
          in: path
          description: The ID of the group being accessed.
          required: true
          type: string
        - name: brandsRequest
          in: body
          required: false
          schema:
            "$ref": "#/definitions/brandsRequest"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/GroupBrands"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: updateBrands
      x-ds-method: update
      x-ds-service: Groups
      x-ds-in-sdk: true
    delete:
      tags:
        - GroupBrands
      summary: Deletes brand information from a group.
      description: This method deletes one or more brands from a group.
      operationId: Brands_DeleteGroupBrands
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: groupId
          in: path
          description: The ID of the group.
          required: true
          type: string
        - name: brandsRequest
          in: body
          required: false
          schema:
            "$ref": "#/definitions/brandsRequest"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/GroupBrands"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: deleteBrands
      x-ds-method: delete
      x-ds-service: Groups
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/groups/{groupId}/users":
    get:
      tags:
        - GroupUsers
      summary: Gets a list of users in a group.
      description: Retrieves a list of users in a group.
      operationId: Groups_GetGroupUsers
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: groupId
          in: path
          description: The ID of the group being accessed.
          required: true
          type: string
        - name: count
          in: query
          description: |
            The maximum number of results to return.

            Use `start_position` to specify the number of results to skip.

            Valid values: `1` to `100`
          required: false
          type: string
        - name: start_position
          in: query
          description: |
            The zero-based index of the
            result from which to start returning results.

            Use with `count` to limit the number
            of results.

            The default value is `0`.
          required: false
          type: string
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/usersResponse"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: listGroupUsers
      x-ds-method: list
      x-ds-service: Groups
      x-ds-in-sdk: true
    put:
      tags:
        - GroupUsers
      summary: Adds one or more users to an existing group.
      description: Adds one or more existing DocuSign users to an existing group.
      operationId: Groups_PutGroupUsers
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: groupId
          in: path
          description: The ID of the group being accessed.
          required: true
          type: string
        - name: userInfoList
          in: body
          required: false
          schema:
            "$ref": "#/definitions/userInfoList"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/usersResponse"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: updateGroupUsers
      x-ds-method: update
      x-ds-service: Groups
      x-ds-in-sdk: true
    delete:
      tags:
        - GroupUsers
      summary: Deletes one or more users from a group
      description:
        "Deletes one or more users from a group. This request takes a `userInfoList`
        that contains the users that you want to delete.

        "
      operationId: Groups_DeleteGroupUsers
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: groupId
          in: path
          description: The ID of the group being accessed.
          required: true
          type: string
        - name: userInfoList
          in: body
          required: false
          schema:
            "$ref": "#/definitions/userInfoList"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/usersResponse"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: deleteGroupUsers
      x-ds-method: delete
      x-ds-service: Groups
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/identity_verification":
    get:
      tags:
        - IdentityVerifications
      summary: Retrieves the Identity Verification workflows available to an account.
      operationId: AccountIdentityVerification_GetAccountIdentityVerification
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: identity_verification_workflow_status
          in: query
          required: false
          type: string
          description: |
            Filters the workflows returned according to status. Valid values:

            - `active`: Only active workflows are returned. This is the default.
            - `deactivated`: Only deactivated workflows are returned.
            - `all`: All workflows are returned.
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/accountIdentityVerificationResponse"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getAccountIdentityVerification
      description: |+
        This method returns a list of Identity Verification workflows that are available to an account.

        **Note:** To use this method, you must either be an account administrator or a sender.

        ### Related topics

        - [How to require ID Verification (IDV) for a recipient](/docs/esign-rest-api/how-to/id-verification/)

      x-ds-method: list
      x-ds-service: Uncategorized
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/payment_gateway_accounts":
    get:
      tags:
        - PaymentGatewayAccounts
      summary: List payment gateway accounts
      operationId: PaymentGatewayAccounts_GetAllPaymentGatewayAccounts
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/paymentGatewayAccountsInfo"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getAllPaymentGatewayAccounts
      x-ds-api-status: beta
      description:
        This method returns a list of payment gateway accounts and basic
        information about them.
      x-ds-method: list
      x-ds-service: Accounts
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/permission_profiles":
    get:
      tags:
        - AccountPermissionProfiles
      summary: Gets a list of permission profiles.
      description: |-
        This method returns a list of permission profiles that are associated with an account.

        Example:

        ```json
        {
          "permissionProfiles": [
            {
              "permissionProfileId": "1665536",
              "permissionProfileName": "Account Administrator",
              "modifiedDateTime": "2018-03-26T03:54:40.4470000Z",
              "modifiedByUsername": ""
            },
            {
              "permissionProfileId": "1665537",
              "permissionProfileName": "DocuSign Sender",
              "modifiedDateTime": "2018-03-26T03:54:40.4470000Z",
              "modifiedByUsername": ""
            },
            {
              "permissionProfileId": "1665538",
              "permissionProfileName": "DocuSign Viewer",
              "modifiedDateTime": "2016-06-02T01:53:15.6830000Z",
              "modifiedByUsername": ""
            },
            {
              "permissionProfileId": "10325926",
              "permissionProfileName": "DS Manage Company Member Accounts",
              "modifiedDateTime": "2020-05-15T00:28:36.8230000Z",
              "modifiedByUsername": "Nat Irving"
            }
          ]
        }
        ```
      operationId: PermissionProfiles_GetPermissionProfiles
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: include
          in: query
          required: false
          type: string
          description: |
            A comma-separated list of additional properties to return in the response. Valid values are:

            - `user_count`: The total number of users associated with the permission profile.
            - `closed_users`: Includes closed users in the `user_count`.
            - `account_management`: The account management settings.
            - `metadata`: Metadata indicating whether the properties associated with the account permission profile are editable.

            Example: `user_count,closed_users`
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/permissionProfileInformation"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: listPermissions
      x-ds-method: list
      x-ds-service: Accounts
      x-ds-in-sdk: true
    post:
      tags:
        - AccountPermissionProfiles
      summary: Creates a new permission profile for an account.
      operationId: PermissionProfiles_PostPermissionProfiles
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: include
          in: query
          required: false
          type: string
          description:
            A comma-separated list of additional properties to return in
            the response. The only valid value for this request is `metadata`, which
            returns metadata indicating whether the properties associated with the account
            permission profile are editable.
        - name: permissionProfile
          in: body
          required: false
          schema:
            "$ref": "#/definitions/permissionProfile"
          description: ""
      responses:
        "201":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/permissionProfile"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: createPermissionProfile
      description: |
        This method creates a new permission profile for an account.

        ### Related topics

        - [How to create a permission profile](/docs/esign-rest-api/how-to/permission-profile-creating/)
      x-ds-method: create
      x-ds-service: Accounts
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/permission_profiles/{permissionProfileId}":
    get:
      tags:
        - AccountPermissionProfiles
      summary: Returns a permission profile for an account.
      operationId: PermissionProfiles_GetPermissionProfile
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: permissionProfileId
          in: path
          required: true
          type: string
          description: |
            The ID of the permission profile.

            Use [AccountPermissionProfiles: list](/docs/esign-rest-api/reference/accounts/accountpermissionprofiles/list/)
            to get a list of permission profiles and their IDs.

            You can also download a CSV file of all permission profiles
            and their IDs from the **Settings > Permission Profiles** page
            of your eSignature account page.
        - name: include
          in: query
          required: false
          type: string
          description:
            A comma-separated list of additional properties to return in
            the response. The only valid value for this request is `metadata`, which
            returns metadata indicating whether the properties associated with the account
            permission profile are editable.
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/permissionProfile"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getPermissionProfile
      description: |
        This method returns information about a specific permission profile that is associated with an account.

        ### Related topics

        - [How to set a permission profile](/docs/esign-rest-api/how-to/permission-profile-setting/)
      x-ds-method: get
      x-ds-service: Accounts
      x-ds-in-sdk: true
    put:
      tags:
        - AccountPermissionProfiles
      summary: Updates a permission profile.
      operationId: PermissionProfiles_PutPermissionProfiles
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: permissionProfileId
          in: path
          required: true
          type: string
          description: |
            The ID of the permission profile.

            Use [AccountPermissionProfiles: list](/docs/esign-rest-api/reference/accounts/accountpermissionprofiles/list/)
            to get a list of permission profiles and their IDs.

            You can also download a CSV file of all permission profiles
            and their IDs from the **Settings > Permission Profiles** page
            of your eSignature account page.
        - name: include
          in: query
          required: false
          type: string
          description:
            A comma-separated list of additional properties to return in
            the response. The only valid value for this request is `metadata`, which
            returns metadata indicating whether the properties associated with the account
            permission profile are editable.
        - name: permissionProfile
          in: body
          required: false
          schema:
            "$ref": "#/definitions/permissionProfile"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/permissionProfile"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: updatePermissionProfile
      description: |
        This method updates an account permission profile.

        ### Related topics

        - [How to update individual permission settings](/docs/esign-rest-api/how-to/permission-profile-updating/)
      x-ds-method: update
      x-ds-service: Accounts
      x-ds-in-sdk: true
    delete:
      tags:
        - AccountPermissionProfiles
      summary: Deletes a permission profile from an account.
      operationId: PermissionProfiles_DeletePermissionProfiles
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: permissionProfileId
          in: path
          required: true
          type: string
          description: |
            The ID of the permission profile.

            Use [AccountPermissionProfiles: list](/docs/esign-rest-api/reference/accounts/accountpermissionprofiles/list/)
            to get a list of permission profiles and their IDs.

            You can also download a CSV file of all permission profiles
            and their IDs from the **Settings > Permission Profiles** page
            of your eSignature account page.
        - name: move_users_to
          in: query
          required: false
          type: string
          description: ""
      responses:
        "200":
          description: A successful response or an error.
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: deletePermissionProfile
      description: |-
        This method deletes a permission profile from an account.

        To delete a permission profile, it must not have any users associated with it. When you use this method to delete a permission profile, you can reassign the users associated with it to a new permission profile at the same time by using the `move_users_to` query parameter.


        ### Related topics

        - [How to delete a permission profile](/docs/esign-rest-api/how-to/permission-profile-deleting/)
      x-ds-method: delete
      x-ds-service: Accounts
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/powerforms":
    get:
      tags:
        - PowerForms
      summary: Returns a list of PowerForms.
      operationId: PowerForms_GetPowerFormsList
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: from_date
          in: query
          required: false
          type: string
          description: |-
            The start date for a date range.

            **Note:** If no value is provided, no date filtering is applied.
        - name: order
          in: query
          required: false
          type: string
          description:
            "The order in which to sort the results.\n\nValid values are:
            \n\n\n* `asc`: Ascending order.\n* `desc`: Descending order. "
        - name: order_by
          in: query
          required: false
          type: string
          description: |-
            The file attribute to use to sort the results.

            Valid values are:

            - `sender`
            - `auth`
            - `used`
            - `remaining`
            - `lastused`
            - `status`
            - `type`
            - `templatename`
            - `created`
        - name: search_fields
          in: query
          required: false
          type: string
          description: |
            A comma-separated list of additional properties to include in a search.

            - `sender`: Include sender name and email in the search.
            - `recipients`: Include recipient names and emails in the search.
            - `envelope`: Include envelope information in the search.
        - name: search_text
          in: query
          required: false
          type: string
          description: Use this parameter to search for specific text.
        - name: to_date
          in: query
          required: false
          type: string
          description: |-
            The end date for a date range.

            **Note:** If no value is provided, this property defaults to the current date.
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/powerFormsResponse"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: listPowerForms
      description:
        This method returns a list of PowerForms that are available to
        the user.
      x-ds-method: list
      x-ds-service: PowerForms
      x-ds-in-sdk: true
    post:
      tags:
        - PowerForms
      summary: Creates a new PowerForm
      operationId: PowerForms_PostPowerForm
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: powerForm
          in: body
          required: false
          schema:
            "$ref": "#/definitions/powerForm"
          description: Information about any PowerForms that are included in the envelope.
      responses:
        "201":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/powerForm"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: createPowerForm
      description: |+
        This method creates a new PowerForm.

        You create a PowerForm from an existing DocuSign [template](/docs/esign-rest-api/reference/templates/templates/create/), based on the `templateId` in the request body.

         PowerForms that you create from a template are referred to as *web PowerForms*.

        **Note:** The DocuSign Admin console also supports creating a PowerForm by uploading a PDF file that has active form fields (referred to as a *PDF PowerForm*). However, PDF PowerForms are deprecated and are not supported in the API.

        **Note:** A PowerForm can have only one sender. (Because PowerForms are not necessarily sent by email, this user is also referred to as the PowerForm *initiator*.) If you need to associate multiple senders with a PowerForm, create multiple copies of the PowerForm by using the same template (one copy for each sender). By default, the sender is the PowerForm Administrator who creates the PowerForm.


        ### Signing modes

        You can use one of the following signing modes for a PowerForm:

        **`email`**

        This mode verifies the recipient's identity by using email authentication before the recipient can sign a document. The recipient enters their email address on the landing page and then clicks **Begin Signing** to begin the signing process. The system then sends an email message with a validation code to the recipient. If the recipient does not provide a valid email address, they do not receive the email message containing the access code and are not able to open and sign the document.

        Alternatively, you can make the process easier for signers by using email authentication only and omitting the access code. To do this, you append the `activateonly` flag to the PowerForm URL and set it to true by passing in the value `1`.  When the flag is active, the first recipient receives an email with a link that initiates the signing session without having to enter access code.

        Example: `activateonly=1`

        **`direct`**

        This mode does not require any verification. After a recipient enters their email address on the landing page and clicks **Begin Signing,** a new browser tab opens and the recipient can immediately begin the signing process.

        Because the `direct` signing mode does not verify the recipient's identity by using email authentication, we strongly recommend that you use this mode only when the PowerForm is accessible behind a secure portal where the recipient's identity is already authenticated, or where another form of authentication is specified for the recipient in the DocuSign template (for example, an access code, phone authentication, or ID check).

        **Note:** In the account settings, `enablePowerFormDirect` must be **true** to use `direct` as the `signingMode`.

        ### Redirect URLs

        You can control the URL to which signers are redirected after signing your PowerForm. However, the URL is specified elsewhere, outside of the PowerForm creation process. For details, see [How do I specify a URL to redirect to when a PowerForm is completed?](https://support.docusign.com/s/articles/How-do-I-specify-a-URL-to-redirect-to-when-a-Powerform-is-completed).

        ### More information

        For more information about creating PowerForms, see [Create a PowerForm](https://support.docusign.com/en/guides/ndse-user-guide-create-a-powerform).

      x-ds-method: create
      x-ds-service: PowerForms
      x-ds-in-sdk: true
    delete:
      tags:
        - PowerForms
      summary: Deletes one or more PowerForms.
      operationId: PowerForms_DeletePowerFormsList
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: powerFormsRequest
          in: body
          required: false
          schema:
            "$ref": "#/definitions/powerFormsRequest"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/powerFormsResponse"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: deletePowerForms
      description:
        This method deletes one or more PowerForms. The request body takes
        an array of PowerForm objects that are deleted based on the `powerFormId`.
      x-ds-method: deleteList
      x-ds-service: PowerForms
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/powerforms/{powerFormId}":
    get:
      tags:
        - PowerForms
      summary: Returns a single PowerForm.
      operationId: PowerForms_GetPowerForm
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: powerFormId
          in: path
          required: true
          type: string
          description: The ID of the PowerForm.
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/powerForm"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getPowerForm
      description: This method returns detailed information about a specific PowerForm.
      x-ds-method: get
      x-ds-service: PowerForms
      x-ds-in-sdk: true
    put:
      tags:
        - PowerForms
      summary: Updates an existing PowerForm.
      operationId: PowerForms_PutPowerForm
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: powerFormId
          in: path
          required: true
          type: string
          description: The ID of the PowerForm.
        - name: powerForm
          in: body
          required: false
          schema:
            "$ref": "#/definitions/powerForm"
          description: Information about any PowerForms that are included in the envelope.
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/powerForm"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: updatePowerForm
      description: This method updates an existing PowerForm.
      x-ds-method: update
      x-ds-service: PowerForms
      x-ds-in-sdk: true
    delete:
      tags:
        - PowerForms
      summary: Deletes a PowerForm.
      operationId: PowerForms_DeletePowerForm
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: powerFormId
          in: path
          required: true
          type: string
          description: The ID of the PowerForm.
      responses:
        "200":
          description: A successful response or an error.
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: deletePowerForm
      description: This method deletes a PowerForm.
      x-ds-method: delete
      x-ds-service: PowerForms
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/powerforms/{powerFormId}/form_data":
    get:
      tags:
        - PowerFormData
      summary: Returns the data that users entered in a PowerForm.
      operationId: PowerForms_GetPowerFormFormData
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: powerFormId
          in: path
          required: true
          type: string
          description: The ID of the PowerForm.
        - name: data_layout
          in: query
          required: false
          type: string
          description: |-
            The layout in which to return the PowerForm data. Valid values are:

            - `Native`
            - `Csv_Classic`
            - `Csv_One_Envelope_Per_Line`
            - `Xml_Classic`
        - name: from_date
          in: query
          required: false
          type: string
          description: |-
            The start date for a date range in UTC DateTime format.

            **Note:** If this property is null, no date filtering is applied.
        - name: to_date
          in: query
          required: false
          type: string
          description:
            The end date of a date range in UTC DateTime format. The default
            value is `UtcNow`.
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/powerFormsFormDataResponse"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getPowerFormData
      description: |-
        This method enables Powerform Administrators or the sender of a PowerForm to download the data that recipients have entered into a PowerForm.

        You specify the format in which you want to retrieve the data in the `Accept` header. This header accepts the following values:


        - `application/json`: JSON format
        - `application/xml`: XML format
        - `text/csv`: Comma-separated value (CSV) format

        **Note:** Only PowerForm Administrators or the PowerForm Sender can download the data associated with a PowerForm.
      x-ds-method: list
      x-ds-service: PowerForms
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/powerforms/senders":
    get:
      tags:
        - PowerForms
      summary: Gets PowerForm senders.
      operationId: PowerForms_GetPowerFormsSenders
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: start_position
          in: query
          required: false
          type: string
          description:
            The position within the total result set from which to start
            returning values. The value **thumbnail** may be used to return the page
            image.
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/powerFormSendersResponse"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: listPowerFormSenders
      description: This method returns a list of users who have sent PowerForms.
      x-ds-method: listSenders
      x-ds-service: PowerForms
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/recipient_names":
    get:
      tags:
        - Accounts
      summary: Gets the recipient names associated with an email address.
      description:
        Retrieves a list of all of the names associated with the email
        address that you pass in. This list can include variants of a single recipient's
        name that are used for signing, as well as the names of multiple different
        recipients.
      operationId: RecipientNames_GetRecipientNames
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: email
          in: query
          description:
            "(Required) The email address for which you want to retrieve
            recipient names."
          required: false
          type: string
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/recipientNamesResponse"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: listRecipientNamesByEmail
      x-ds-method: listRecipientNamesByEmail
      x-ds-service: Accounts
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/seals":
    get:
      tags:
        - AccountSealProviders
      summary: Returns available seals for specified account.
      operationId: AccountSignatureProviders_GetSealProviders
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/AccountSealProviders"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getSealProviders
      description: ""
      x-ds-method: list
      x-ds-service: TrustServiceProviders
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/search_folders/{searchFolderId}":
    get:
      tags:
        - Folders
      summary: "Deprecated. Use Envelopes: listStatusChanges."
      description: |-
        <ds-inlinemessage kind="warning"  markdown="1">
        <strong>This method is deprecated in API v2.1</strong>

        Use  [Envelopes: listStatusChanges](/docs/esign-rest-api/reference/envelopes/envelopes/liststatuschanges/) instead.
        </ds-inlinemessage>


        Retrieves a list of items that match the criteria specified in the query.

        If the user ID of the user making the call is the
        same as the user ID for any returned recipient,
        then the `userId` property is added to the returned
        information for those recipients.
      operationId: SearchFolders_GetSearchFolderContents
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: searchFolderId
          in: path
          description:
            "Specifies the envelope group that is searched by the request.
            These are logical groupings, not actual folder names. Valid values are:
            drafts, awaiting_my_signature, completed, out_for_signature."
          required: true
          type: string
        - name: all
          in: query
          description: Specifies that all envelopes that match the criteria are returned.
          required: false
          type: string
        - name: count
          in: query
          description: |
            The maximum number of results to return.

            Use `start_position` to specify the number of results to skip.

            Valid values: `1` to `100`
          required: false
          type: string
        - name: from_date
          in: query
          description:
            Specifies the start of the date range to return. If no value
            is provided, the default search is the previous 30 days.
          required: false
          type: string
        - name: include_recipients
          in: query
          description: When **true,** the recipient information is returned in the response.
          required: false
          type: string
        - name: order
          in: query
          description:
            "Specifies the order in which the list is returned. Valid values
            are: `asc` for ascending order, and `desc` for descending order."
          required: false
          type: string
        - name: order_by
          in: query
          description:
            "Specifies the property used to sort the list. Valid values are:
            `action_required`, `created`, `completed`, `sent`, `signer_list`, `status`,
            or `subject`."
          required: false
          type: string
        - name: start_position
          in: query
          description: |
            The zero-based index of the
            result from which to start returning results.

            Use with `count` to limit the number
            of results.

            The default value is `0`.
          required: false
          type: string
        - name: to_date
          in: query
          description: Specifies the end of the date range to return.
          required: false
          type: string
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/folderItemResponse"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: search
      x-ds-method: search
      x-ds-service: Folders
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/settings":
    get:
      tags:
        - Accounts
      summary: Gets account settings information.
      description: Retrieves the account settings information for the specified account.
      operationId: Settings_GetSettings
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/accountSettingsInformation"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: listSettings
      x-ds-method: listSettings
      x-ds-service: Accounts
      x-ds-in-sdk: true
    put:
      tags:
        - Accounts
      summary: Updates the account settings for an account.
      description: |-
        Updates the account settings for the specified account.

        Although the request body for this method
        is a complete
        `accountSettingsInformation` object,
        you only need to provide
        the properties that
        you are updating.
      operationId: Settings_PutSettings
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: accountSettingsInformation
          in: body
          required: false
          schema:
            "$ref": "#/definitions/accountSettingsInformation"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: updateSettings
      x-ds-method: updateSettings
      x-ds-service: Accounts
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/settings/bcc_email_archives":
    get:
      tags:
        - BCCEmailArchive
      summary: Gets the BCC email archive configurations for an account.
      operationId: BCCEmailArchive_GetBCCEmailArchiveList
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: count
          in: query
          required: false
          type: string
          description: |
            The maximum number of results to return.

            Use `start_position` to specify the number of results to skip.
        - name: start_position
          in: query
          required: false
          type: string
          description: |
            The zero-based index of the
            result from which to start returning results.

            Use with `count` to limit the number
            of results.

            The default value is `0`.
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/bccEmailArchiveList"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: list
      description:
        This method retrieves all of the BCC email archive configurations
        associated with an account.
      x-ds-method: list
      x-ds-service: Uncategorized
      x-ds-in-sdk: true
    post:
      tags:
        - BCCEmailArchive
      summary: Creates a BCC email archive configuration.
      operationId: BCCEmailArchive_PostBCCEmailArchive
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: bccEmailArchive
          in: body
          required: false
          schema:
            "$ref": "#/definitions/bccEmailArchive"
          description:
            Boolean that specifies whether BCC for Email Archive is enabled
            for the account. BCC for Email Archive allows you to set up an archive email
            address so that a BCC copy of an envelope is sent only to that address.
      responses:
        "201":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/bccEmailArchive"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: create
      description: |
        This method creates a BCC email archive configuration for an account (adds a BCC email address to the account for archiving the emails that DocuSign generates).

        The only property that you must set in the request body is the BCC email address that you want to use.

        **Note:** An account can have up to five active and pending email archive addresses combined, but you must use this method to add them to the account one at a time. Each email address is considered a separate BCC email archive configuration.
      x-ds-method: create
      x-ds-service: Uncategorized
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/settings/bcc_email_archives/{bccEmailArchiveId}":
    get:
      tags:
        - BCCEmailArchive
      summary: Gets a BCC email archive configuration and its history.
      operationId: BCCEmailArchive_GetBCCEmailArchiveHistoryList
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: bccEmailArchiveId
          in: path
          required: true
          type: string
          description: The ID of the BCC email archive configuration.
        - name: count
          in: query
          required: false
          type: string
          description: |
            The maximum number of results to return.

            Use `start_position` to specify the number of items to skip.
        - name: start_position
          in: query
          required: false
          type: string
          description: |
            The zero-based index of the
            result from which to start returning results.

            Use with `count` to limit the number
            of results.

            The default value is `0`.
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/bccEmailArchiveHistoryList"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: get
      description:
        This method returns a specific BCC email archive configuration
        for an account, as well as the history of changes to the email address.
      x-ds-method: get
      x-ds-service: Uncategorized
      x-ds-in-sdk: true
    delete:
      tags:
        - BCCEmailArchive
      summary: Deletes a BCC email archive configuration.
      operationId: BCCEmailArchive_DeleteBCCEmailArchive
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: bccEmailArchiveId
          in: path
          required: true
          type: string
          description: The ID of the BCC email archive configuration.
      responses:
        "200":
          description: A successful response or an error.
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: delete
      description: |
        This method deletes a BCC email archive configuration from an account.

        When you use this method, the status of the BCC email archive configuration switches to `closed` and the BCC email address is no longer used to archive DocuSign-generated email messages.
      x-ds-method: delete
      x-ds-service: Uncategorized
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/settings/enote_configuration":
    get:
      tags:
        - ENoteConfigurations
      summary: Returns the configuration information for the eNote eOriginal integration.
      operationId: ENoteConfiguration_GetENoteConfiguration
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/eNoteConfiguration"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getENoteConfiguration
      x-ds-api-status: beta
      description: ""
      x-ds-method: get
      x-ds-service: Accounts
      x-ds-in-sdk: true
    put:
      tags:
        - ENoteConfigurations
      summary: Updates configuration information for the eNote eOriginal integration.
      operationId: ENoteConfiguration_PutENoteConfiguration
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: eNoteConfiguration
          in: body
          required: false
          schema:
            "$ref": "#/definitions/eNoteConfiguration"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/eNoteConfiguration"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: updateENoteConfiguration
      x-ds-api-status: beta
      description: ""
      x-ds-method: update
      x-ds-service: Accounts
      x-ds-in-sdk: true
    delete:
      tags:
        - ENoteConfigurations
      summary: Deletes configuration information for the eNote eOriginal integration.
      operationId: ENoteConfiguration_DeleteENoteConfiguration
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
      responses:
        "200":
          description: A successful response or an error.
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: deleteENoteConfiguration
      x-ds-api-status: beta
      description: ""
      x-ds-method: delete
      x-ds-service: Accounts
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/settings/envelope_purge_configuration":
    get:
      tags:
        - Accounts
      summary: Gets the envelope purge configuration for an account.
      operationId: EnvelopePurgeConfiguration_GetEnvelopePurgeConfiguration
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/envelopePurgeConfiguration"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getEnvelopePurgeConfiguration
      x-ds-api-status: beta
      description: |-
        An envelope purge configuration enables account administrators to permanently remove documents and their field data from completed and voided envelopes after a specified retention period (`retentionDays`). This method retrieves the current envelope purge configuration for your account.

        **Note:** To use this method, you must be an account administrator.
      x-ds-method: getEnvelopePurgeConfiguration
      x-ds-service: Uncategorized
      x-ds-in-sdk: true
    put:
      tags:
        - Accounts
      summary: Sets the envelope purge configuration for an account.
      operationId: EnvelopePurgeConfiguration_PutEnvelopePurgeConfiguration
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: envelopePurgeConfiguration
          in: body
          required: false
          schema:
            "$ref": "#/definitions/envelopePurgeConfiguration"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/envelopePurgeConfiguration"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: updateEnvelopePurgeConfiguration
      x-ds-api-status: beta
      description: |-
        An envelope purge configuration enables account administrators to permanently remove documents and their field data from completed and voided envelopes after a specified retention period (`retentionDays`). This method sets the envelope purge configuration for your account.

        **Note:** To use this method, you must be an account administrator.

        For more information, see [Purge Envelopes](https://support.docusign.com/s/document-item?bundleId=oeq1643226594604&topicId=edo1578456348066.html).
      x-ds-method: updateEnvelopePurgeConfiguration
      x-ds-service: Uncategorized
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/settings/notification_defaults":
    get:
      tags:
        - Accounts
      summary: Gets envelope notification defaults.
      operationId: NotificationDefaults_GetNotificationDefaults
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/notificationDefaults"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getNotificationDefaults
      description:
        This method returns the default settings for the email notifications
        that signers and senders receive about envelopes.
      x-ds-method: getNotificationDefaults
      x-ds-service: Uncategorized
      x-ds-in-sdk: true
    put:
      tags:
        - Accounts
      summary: Updates envelope notification default settings.
      operationId: NotificationDefaults_PutNotificationDefaults
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: notificationDefaults
          in: body
          required: false
          schema:
            "$ref": "#/definitions/notificationDefaults"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/notificationDefaults"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: updateNotificationDefaults
      description:
        This method changes the default settings for the email notifications
        that signers and senders receive about envelopes.
      x-ds-method: updateNotificationDefaults
      x-ds-service: Uncategorized
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/settings/password_rules":
    get:
      tags:
        - AccountPasswordRules
      summary: Gets the password rules for an account.
      operationId: AccountPasswordRules_GetAccountPasswordRules
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/accountPasswordRules"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getAccountPasswordRules
      description: This method retrieves the password rules for an account.
      x-ds-method: get
      x-ds-service: Accounts
      x-ds-in-sdk: true
    put:
      tags:
        - AccountPasswordRules
      summary: Updates the password rules for an account.
      operationId: AccountPasswordRules_PutAccountPasswordRules
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: accountPasswordRules
          in: body
          required: false
          schema:
            "$ref": "#/definitions/accountPasswordRules"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/accountPasswordRules"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: updateAccountPasswordRules
      description: |-
        This method updates the password rules for an account.

        **Note:** To update the password rules for an account, you must be an account administrator.
      x-ds-method: update
      x-ds-service: Accounts
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/settings/tabs":
    get:
      tags:
        - AccountTabSettings
      summary: Returns tab settings list for specified account
      operationId: TabSettings_GetTabSettings
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/tabAccountSettings"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getAccountTabSettings
      description:
        This method returns information about the tab types and tab functionality
        that is currently enabled for an account.
      x-ds-method: get
      x-ds-service: Accounts
      x-ds-in-sdk: true
    put:
      tags:
        - AccountTabSettings
      summary: Modifies tab settings for specified account
      operationId: TabSettings_PutSettings
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: tabAccountSettings
          in: body
          required: false
          schema:
            "$ref": "#/definitions/tabAccountSettings"
          description: Account-wide tab settings.
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/tabAccountSettings"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: updateAccountTabSettings
      description:
        This method modifies the tab types and tab functionality that is
        enabled for an account.
      x-ds-method: update
      x-ds-service: Accounts
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/shared_access":
    get:
      tags:
        - Accounts
      summary: "Reserved: Gets the shared item status for one or more users."
      description: |-
        Retrieves shared item status for one or more users and types of items.

        Users with account administration privileges can retrieve shared access information for all account users. Users without account administrator privileges can only retrieve shared access information for themselves, and the returned information is limited to retrieving the status of the members of the account that are sharing their folders to the user. This is equivalent to setting the `shared` parameter to `shared_from`.

        **Note:** This endpoint returns the shared status for the legacy Shared Envelopes feature. To use the new Shared Access feature, use the [Authorizations resource](/docs/esign-rest-api/reference/accounts/authorizations/).
      operationId: SharedAccess_GetSharedAccess
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: count
          in: query
          description: |
            The maximum number of results to return.

            Use `start_position` to specify the number of results to skip.

            Default: `1000`
          required: false
          type: string
        - name: envelopes_not_shared_user_status
          in: query
          required: false
          type: string
          description: |-
            This query parameter works in conjunction with `user_ids`. When you specify one of the following user statuses, the query limits the results to only users that match the specified status:
            - `ActivationRequired`: Membership Activation required
            - `ActivationSent`: Membership activation sent to user
            - `Active`: User Membership is active
            - `Closed`: User Membership is closed
            - `Disabled`: User Membership is disabled
        - name: folder_ids
          in: query
          required: false
          type: string
          description:
            A comma-separated list of folder IDs for which to return shared
            item information. If `item_type` is set to `folders`, at least one folder
            ID is required.
        - name: item_type
          in: query
          description: |
            Specifies the type of shared item being requested. Valid values:

            - `envelopes`: Get information about envelope sharing between users.
            - `templates`: Get information about template sharing among users and groups.
            - `folders`: Get information about folder sharing among users and groups.
          required: false
          type: string
        - name: search_text
          in: query
          description:
            Filter user names based on the specified string. The wild-card
            '*' (asterisk) can be used in the string.
          required: false
          type: string
        - name: shared
          in: query
          description:
            "A comma-separated list of sharing filters that specifies which
            users appear in the response. \n\n- `not_shared`: The response lists users
            who do not share items of `item_type` with the current user.\n\n- `shared_to`:
            The response lists users in `user_list` who are sharing items to current
            user.\n\n- `shared_from`: The response lists users in `user_list` who are
            sharing items from the current user.\n\n- `shared_to_and_from`: The response
            lists users in `user_list` who are sharing items to and from the current
            user.\n\nIf the current user does not have administrative privileges, only
            the `shared_to` option is valid."
          required: false
          type: string
        - name: start_position
          in: query
          description: |
            The zero-based index of the
            result from which to start returning results.

            Use with `count` to limit the number
            of results.

            The default value is `0`.
          required: false
          type: string
        - name: user_ids
          in: query
          description:
            A comma-separated list of user IDs for whom the shared item information
            is being requested.
          required: false
          type: string
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/accountSharedAccess"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: listSharedAccess
      x-ds-method: listSharedAccess
      x-ds-service: Accounts
      x-ds-in-sdk: true
    put:
      tags:
        - Accounts
      summary: "Reserved: Sets the shared access information for users."
      description: |+
        This sets the shared access status for one or more users or templates.

        When setting user shared access, only users with account administration privileges can set shared access status for envelopes.

        When setting template shared access, only users who own a template and have sharing permission or with account administration privileges can set shared access for templates.

        Changes to the shared items status are not additive. The change always replaces the current status.

        To change template shared access, add the query parameter `item_type` = `templates` to the request. When this is set, the user and envelopes properties are not required.

        **Note:** This functionality is a newer version of the [Update Group Share](/docs/esign-rest-api/reference/templates/templates/updategroupshare/) functionality.

      operationId: SharedAccess_PutSharedAccess
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: item_type
          in: query
          required: false
          type: string
          description: |
            Specifies the type of shared item being set:
            - `envelopes`: Set envelope sharing between users.
            - `templates`: Set information about template sharing among users and groups.
            - `folders`: Get information about folder sharing among users and groups.
        - name: preserve_existing_shared_access
          in: query
          required: false
          type: string
          description: When **true,** preserve the existing shared access settings.
        - name: user_ids
          in: query
          required: false
          type: string
          description:
            A comma-separated list of IDs for users whose shared item access
            is being set.
        - name: accountSharedAccess
          in: body
          required: false
          schema:
            "$ref": "#/definitions/accountSharedAccess"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/accountSharedAccess"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: updateSharedAccess
      x-ds-method: updateSharedAccess
      x-ds-service: Accounts
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/signatureProviders":
    get:
      tags:
        - AccountSignatureProviders
      summary: Gets the available signature providers for an account.
      operationId: AccountSignatureProviders_GetSignatureProviders
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/accountSignatureProviders"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: listSignatureProviders
      description:
        Returns a list of signature providers that the specified account
        can use.
      x-ds-method: list
      x-ds-service: Accounts
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/signatures":
    get:
      tags:
        - AccountSignatures
      summary: Returns a list of stamps available in the account.
      operationId: AccountSignatures_GetAccountSignatures
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: stamp_format
          in: query
          required: false
          type: string
          description: |-
            The format of the stamp to return. Valid values:
            - `NameDateHanko`
            - `NameHanko`
            - `PlaceholderHanko`
        - name: stamp_name
          in: query
          required: false
          type: string
          description:
            The name associated with the stamps to return. This value can
            be a Japanese surname (up to 5 characters) or a purchase order ID.
        - name: stamp_type
          in: query
          required: false
          type: string
          description: |-
            The type of the stamps to return. Valid values:
            - `name_stamp`
            - `stamp`
            - `signature`
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/accountSignaturesInformation"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getAccountSignatures
      description: Returns a list of stamps available in the account.
      x-ds-method: getAccountSignatures
      x-ds-service: Uncategorized
      x-ds-in-sdk: true
    put:
      tags:
        - AccountSignatures
      summary: Updates an account stamp.
      operationId: AccountSignatures_PutAccountSignature
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: accountSignaturesInformation
          in: body
          required: false
          schema:
            "$ref": "#/definitions/accountSignaturesInformation"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/accountSignaturesInformation"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: updateAccountSignature
      description:
        Adds or updates one or more account stamps. This request may include
        images in multi-part format.
      x-ds-method: updateAccountSignature
      x-ds-service: Uncategorized
      x-ds-in-sdk: true
    post:
      tags:
        - AccountSignatures
      summary: Adds or updates one or more account stamps.
      operationId: AccountSignatures_PostAccountSignatures
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: decode_only
          in: query
          required: false
          type: string
          description: ""
        - name: accountSignaturesInformation
          in: body
          required: false
          schema:
            "$ref": "#/definitions/accountSignaturesInformation"
          description: ""
      responses:
        "201":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/accountSignaturesInformation"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: createAccountSignatures
      description: "Adds or updates one or more account stamps.

        "
      x-ds-method: createAccountSignatures
      x-ds-service: Uncategorized
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/signatures/{signatureId}":
    get:
      tags:
        - AccountSignatures
      summary: Returns information about the specified stamp.
      operationId: AccountSignatures_GetAccountSignature
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: signatureId
          in: path
          description: The ID of the account stamp.
          required: true
          type: string
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/accountSignature"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getAccountSignature
      description: Returns information about the specified stamp.
      x-ds-method: getAccountSignature
      x-ds-service: Uncategorized
      x-ds-in-sdk: true
    put:
      tags:
        - AccountSignatures
      summary: Updates an account stamp by ID.
      operationId: AccountSignatures_PutAccountSignatureById
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: signatureId
          in: path
          description: The ID of the account stamp.
          required: true
          type: string
        - name: close_existing_signature
          in: query
          required: false
          type: string
          description: When **true,** closes the current signature.
        - name: accountSignatureDefinition
          in: body
          required: false
          schema:
            "$ref": "#/definitions/accountSignatureDefinition"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/accountSignature"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: updateAccountSignatureById
      description: Updates an account stamp specified by the `signatureId` query parameter.
      x-ds-method: updateAccountSignatureById
      x-ds-service: Uncategorized
      x-ds-in-sdk: true
    delete:
      tags:
        - AccountSignatures
      summary: Deletes an account stamp.
      operationId: AccountSignatures_DeleteAccountSignature
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: signatureId
          in: path
          description: The ID of the account stamp.
          required: true
          type: string
      responses:
        "200":
          description: A successful response or an error.
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: deleteAccountSignature
      description: "Deletes a stamp specified by `signatureId`.

        "
      x-ds-method: deleteAccountSignature
      x-ds-service: Uncategorized
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/signatures/{signatureId}/{imageType}":
    get:
      tags:
        - AccountSignatures
      summary: Returns the image for an account stamp.
      operationId: AccountSignatures_GetAccountSignatureImage
      consumes: []
      produces:
        - image/gif
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: imageType
          in: path
          description: |-
            Specificies the type of image. Valid values:

            - `stamp_image`
            - `signature_image`
            - `initials_image`
          required: true
          type: string
        - name: signatureId
          in: path
          description: The ID of the account stamp.
          required: true
          type: string
        - name: include_chrome
          in: query
          required: false
          type: string
          description:
            When **true,** the chrome (or frame containing the added line
            and identifier) is included with the signature image.
      responses:
        "200":
          description: A successful response or an error.
          schema:
            type: file
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getAccountSignatureImage
      description: Returns the image for an account stamp.
      x-ds-method: getAccountSignatureImage
      x-ds-service: Uncategorized
      x-ds-in-sdk: true
    put:
      tags:
        - AccountSignatures
      summary: Sets a signature image, initials, or stamp.
      operationId: AccountSignatures_PutAccountSignatureImage
      consumes:
        - image/gif
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: imageType
          in: path
          description: |-
            Specificies the type of image. Valid values:

            - `stamp_image`
            - `signature_image`
            - `initials_image`
          required: true
          type: string
        - name: signatureId
          in: path
          description: The ID of the account stamp.
          required: true
          type: string
        - name: transparent_png
          in: query
          required: false
          type: string
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/accountSignature"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: updateAccountSignatureImage
      description: Sets a signature image, initials, or stamp.
      x-ds-method: updateAccountSignatureImage
      x-ds-service: Uncategorized
      x-ds-in-sdk: true
    delete:
      tags:
        - AccountSignatures
      summary: Deletes the image for a stamp.
      operationId: AccountSignatures_DeleteAccountSignatureImage
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: imageType
          in: path
          description: |-
            Specificies the type of image. Valid values:

            - `stamp_image`
            - `signature_image`
            - `initials_image`
          required: true
          type: string
        - name: signatureId
          in: path
          description: The ID of the account stamp.
          required: true
          type: string
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/accountSignature"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: deleteAccountSignatureImage
      description: Deletes the image for a stamp specified by `signatureId`.
      x-ds-method: deleteAccountSignatureImage
      x-ds-service: Uncategorized
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/signing_groups":
    get:
      tags:
        - SigningGroups
      summary: Gets a list of the Signing Groups in an account.
      description: Retrieves a list of all signing groups in the specified account.
      operationId: SigningGroups_GetSigningGroups
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: group_type
          in: query
          required: false
          type: string
          description: |-
            Filters by the type of signing group. Valid values:
            * `sharedSigningGroup`
            * `privateSigningGroup`
            * `systemSigningGroup`
        - name: include_users
          in: query
          description: "When **true,** the response includes the signing group members. "
          required: false
          type: string
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/signingGroupInformation"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: list
      x-ds-method: list
      x-ds-service: SigningGroups
      x-ds-in-sdk: true
    put:
      tags:
        - SigningGroups
      summary: Updates signing group names.
      description: "Updates the name of one or more existing signing groups. "
      operationId: SigningGroups_PutSigningGroups
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: signingGroupInformation
          in: body
          required: false
          schema:
            "$ref": "#/definitions/signingGroupInformation"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/signingGroupInformation"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: updateList
      x-ds-method: updateList
      x-ds-service: SigningGroups
      x-ds-in-sdk: true
    post:
      tags:
        - SigningGroups
      summary: "Creates a signing group. "
      description:
        "Creates one or more signing groups. \n\nMultiple signing groups
        can be created in one call. Only users with account administrator privileges
        can create signing groups. \n\nAn account can have a maximum of 50 signing
        groups. Each signing group can have a maximum of 50 group members.\n \nSigning
        groups can be used by any account user."
      operationId: SigningGroups_PostSigningGroups
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: signingGroupInformation
          in: body
          required: false
          schema:
            "$ref": "#/definitions/signingGroupInformation"
          description: ""
      responses:
        "201":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/signingGroupInformation"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: createList
      x-ds-method: create
      x-ds-service: SigningGroups
      x-ds-in-sdk: true
    delete:
      tags:
        - SigningGroups
      summary: Deletes one or more signing groups.
      description: Deletes one or more signing groups in the specified account.
      operationId: SigningGroups_DeleteSigningGroups
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: signingGroupInformation
          in: body
          required: false
          schema:
            "$ref": "#/definitions/signingGroupInformation"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/signingGroupInformation"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: deleteList
      x-ds-method: delete
      x-ds-service: SigningGroups
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/signing_groups/{signingGroupId}":
    get:
      tags:
        - SigningGroups
      summary: "Gets information about a signing group. "
      description:
        "Retrieves information, including group member information, for
        the specified signing group. "
      operationId: SigningGroups_GetSigningGroup
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: signingGroupId
          in: path
          required: true
          type: string
          description:
            "The ID of the [signing group](https://support.docusign.com/s/document-item?bundleId=gav1643676262430&topicId=zgn1578456447934.html).

            "
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/signingGroup"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: get
      x-ds-method: get
      x-ds-service: SigningGroups
      x-ds-in-sdk: true
    put:
      tags:
        - SigningGroups
      summary: "Updates a signing group. "
      description:
        "Updates signing group name and member information. You can also
        add new members to the signing group. A signing group can have a maximum of
        50 members. "
      operationId: SigningGroups_PutSigningGroup
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: signingGroupId
          in: path
          required: true
          type: string
          description:
            "The ID of the [signing group](https://support.docusign.com/s/document-item?bundleId=gav1643676262430&topicId=zgn1578456447934.html).

            "
        - name: signingGroup
          in: body
          required: false
          schema:
            "$ref": "#/definitions/signingGroup"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/signingGroup"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: update
      x-ds-method: update
      x-ds-service: SigningGroups
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/signing_groups/{signingGroupId}/users":
    get:
      tags:
        - SigningGroupUsers
      summary: Gets a list of members in a Signing Group.
      description: Retrieves the list of members in the specified Signing Group.
      operationId: SigningGroups_GetSigningGroupUsers
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: signingGroupId
          in: path
          required: true
          type: string
          description: |-
            The ID of the [signing group](https://support.docusign.com/s/document-item?bundleId=gav1643676262430&topicId=zgn1578456447934.html).

            **Note:** When you send an envelope to a signing group,
            anyone in the group can open it and sign it with their own signature.
            For this reason, DocuSign recommends that
            you do not include non-signer recipients
            (such as carbon copy recipients)
            in the same signing group as signer recipients.
            However, you could create a second signing group
            for the non-signer recipients and change t
            he default action of Needs to Sign to a different value,
            such as Receives a Copy.
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/signingGroupUsers"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: listUsers
      x-ds-method: list
      x-ds-service: SigningGroups
      x-ds-in-sdk: true
    put:
      tags:
        - SigningGroupUsers
      summary: "Adds members to a signing group. "
      description:
        "Adds one or more new members to a signing group. A signing group
        can have a maximum of 50 members. "
      operationId: SigningGroups_PutSigningGroupUsers
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: signingGroupId
          in: path
          required: true
          type: string
          description: |-
            The ID of the [signing group](https://support.docusign.com/s/document-item?bundleId=gav1643676262430&topicId=zgn1578456447934.html).

            **Note:** When you send an envelope to a signing group,
            anyone in the group can open it and sign it with their own signature.
            For this reason, DocuSign recommends that
            you do not include non-signer recipients
            (such as carbon copy recipients)
            in the same signing group as signer recipients.
            However, you could create a second signing group
            for the non-signer recipients and change t
            he default action of Needs to Sign to a different value,
            such as Receives a Copy.
        - name: signingGroupUsers
          in: body
          required: false
          schema:
            "$ref": "#/definitions/signingGroupUsers"
          description:
            A complex type that contains information about users in the signing
            group.
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/signingGroupUsers"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: updateUsers
      x-ds-method: update
      x-ds-service: SigningGroups
      x-ds-in-sdk: true
    delete:
      tags:
        - SigningGroupUsers
      summary: Deletes  one or more members from a signing group.
      description: "Deletes  one or more members from the specified signing group. "
      operationId: SigningGroups_DeleteSigningGroupUsers
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: signingGroupId
          in: path
          required: true
          type: string
          description: |-
            The ID of the [signing group](https://support.docusign.com/s/document-item?bundleId=gav1643676262430&topicId=zgn1578456447934.html).

            **Note:** When you send an envelope to a signing group,
            anyone in the group can open it and sign it with their own signature.
            For this reason, DocuSign recommends that
            you do not include non-signer recipients
            (such as carbon copy recipients)
            in the same signing group as signer recipients.
            However, you could create a second signing group
            for the non-signer recipients and change t
            he default action of Needs to Sign to a different value,
            such as Receives a Copy.
        - name: signingGroupUsers
          in: body
          required: false
          schema:
            "$ref": "#/definitions/signingGroupUsers"
          description:
            A complex type that contains information about users in the signing
            group.
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/signingGroupUsers"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: deleteUsers
      x-ds-method: delete
      x-ds-service: SigningGroups
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/supported_languages":
    get:
      tags:
        - Accounts
      summary: Gets the supported languages for envelope recipients.
      operationId: SupportedLanguages_GetSupportedLanguages
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/supportedLanguages"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getSupportedLanguages
      description: |-
        Retrieves a list of supported languages that you can set for an individual recipient when creating an envelope, as well as their simple type enumeration values. These are the languages that you can set for the standard email format and signing view for each recipient.

        For example, in the recipient's email notification, this setting affects elements such as the standard introductory text describing the request to sign. It also determines the language used for buttons and tabs in both the email notification and the signing experience.

        **Note:** Setting a language for a recipient affects only the DocuSign standard text. Any custom text that you enter for the `emailBody` and `emailSubject` of the notification is not translated, and appears exactly as you enter it.

        For more information, see [Set Recipient Language and Specify Custom Email Messages](https://support.docusign.com/s/document-item?bundleId=gbo1643332197980&topicId=wxf1578456494201.html).
      x-ds-method: listSupportedLanguages
      x-ds-service: Accounts
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/tab_definitions":
    get:
      tags:
        - CustomTabs
      summary: Gets a list of all account tabs.
      description: Retrieves a list of all tabs associated with the account.
      operationId: Tabs_GetTabDefinitions
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: custom_tab_only
          in: query
          description: "When **true,** only custom tabs are returned in the response. "
          required: false
          type: string
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/tabMetadataList"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: list
      x-ds-method: list
      x-ds-service: CustomTabs
      x-ds-in-sdk: true
    post:
      tags:
        - CustomTabs
      summary: Creates a custom tab.
      description: |-
        Creates a tab with pre-defined properties, such as a text tab with a certain font type and validation pattern. Users can access the custom tabs when sending documents through the DocuSign web application.

        Custom tabs can be created for approve, checkbox, company, date, date signed, decline, email, email address, envelope ID, first name, formula, full name, initial here, last name, list, note, number, radio, sign here, signer attachment, SSN, text, title, and zip tabs.
      operationId: Tabs_PostTabDefinitions
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: tabMetadata
          in: body
          required: false
          schema:
            "$ref": "#/definitions/tabMetadata"
          description: ""
      responses:
        "201":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/tabMetadata"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: create
      x-ds-method: create
      x-ds-service: CustomTabs
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/tab_definitions/{customTabId}":
    get:
      tags:
        - CustomTabs
      summary: Gets custom tab information.
      description:
        Retrieves information about the requested custom tab on the specified
        account.
      operationId: Tab_GetCustomTab
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: customTabId
          in: path
          required: true
          type: string
          description:
            The DocuSign-generated custom tab ID for the custom tab to be
            applied. This can only be used when adding new tabs for a recipient. When
            used, the new tab inherits all the custom tab properties.
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/tabMetadata"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: get
      x-ds-method: get
      x-ds-service: CustomTabs
      x-ds-in-sdk: true
    put:
      tags:
        - CustomTabs
      summary: "Updates custom tab information.\n\n"
      description: Updates the information in a custom tab for the specified account.
      operationId: Tab_PutCustomTab
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: customTabId
          in: path
          required: true
          type: string
          description:
            The DocuSign-generated custom tab ID for the custom tab to be
            applied. This can only be used when adding new tabs for a recipient. When
            used, the new tab inherits all the custom tab properties.
        - name: tabMetadata
          in: body
          required: false
          schema:
            "$ref": "#/definitions/tabMetadata"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/tabMetadata"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: update
      x-ds-method: update
      x-ds-service: CustomTabs
      x-ds-in-sdk: true
    delete:
      tags:
        - CustomTabs
      summary: Deletes custom tab information.
      description: Deletes the custom from the specified account.
      operationId: Tab_DeleteCustomTab
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: customTabId
          in: path
          required: true
          type: string
          description:
            The DocuSign-generated custom tab ID for the custom tab to be
            applied. This can only be used when adding new tabs for a recipient. When
            used, the new tab inherits all the custom tab properties.
      responses:
        "200":
          description: A successful response or an error.
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: delete
      x-ds-method: delete
      x-ds-service: CustomTabs
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/templates":
    get:
      tags:
        - Templates
      summary: Gets the list of templates.
      description: |
        Retrieves the list of templates for the specified account. The request can be limited to a specific folder.

        ### Related topics

        - [How to create a template](/docs/esign-rest-api/how-to/create-template/)
      operationId: Templates_GetTemplates
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: count
          in: query
          description: |
            The maximum number of results to return.

            Use `start_position` to specify the number of results to skip.
          required: false
          type: string
        - name: created_from_date
          in: query
          required: false
          type: string
          description: Lists templates created on or after this date.
        - name: created_to_date
          in: query
          required: false
          type: string
          description: Lists templates modified before this date.
        - name: folder_ids
          in: query
          description: A comma-separated list of folder ID GUIDs.
          required: false
          type: string
        - name: folder_types
          in: query
          required: false
          type: string
          description: |
            The type of folder to return templates for. Possible values are:

            - `templates`: Templates in the **My Templates** folder.
              Templates in the **Shared Templates**  and **All Template** folders (if the request ID from and Admin) are excluded.
            - `templates_root`: Templates in the root level of the **My Templates** folder, but not in an actual folder. Note that the **My Templates** folder is not a real folder.
            - `recylebin`: Templates that have been deleted.
        - name: from_date
          in: query
          description:
            Start of the search date range. Only returns templates created
            on or after this date/time. If no value is specified, there is no limit
            on the earliest date created.
          required: false
          type: string
        - name: include
          in: query
          description: |-
            A comma-separated list
            of additional template attributes
            to include in the response.
            Valid values are:

            - `powerforms`: Includes details about the PowerForms associated with the templates.
            - `documents`: Includes information about template documents.
            - `folders`: Includes information about the folder that holds the template.
            - `favorite_template_status`: Includes the template `favoritedByMe` property. **Note:** You can mark a template as a favorite only in eSignature v2.1.
            - `advanced_templates`: Includes information about advanced templates.
            - `recipients`: Includes information about template recipients.
            - `custom_fields`: Includes information about template custom fields.
            - `notifications`: Includes information about the notification settings for templates.
          required: false
          type: string
        - name: is_deleted_template_only
          in: query
          required: false
          type: string
          description: |
            When **true,** retrieves templates that have been permanently deleted. The default is **false.**

            **Note:** After you delete a template, you can see it in the `Deleted` bin in the UI for 24 hours. After 24 hours, the template is permanently deleted.
        - name: is_download
          in: query
          required: false
          type: string
          description: |-
            When **true,** downloads the templates listed in `template_ids` as a collection of JSON definitions in a single zip file.

            The `Content-Disposition` header is set in the response. The value of the header provides the filename of the file.

            The default is **false.**

            **Note:** This parameter only works when you specify a list of templates in the `template_ids` parameter.
        - name: modified_from_date
          in: query
          required: false
          type: string
          description: Lists templates modified on or after this date.
        - name: modified_to_date
          in: query
          required: false
          type: string
          description: Lists templates modified before this date.
        - name: order
          in: query
          description: |-
            Specifies the sort order of the search results.
            Valid values are:

            - `asc`: Ascending (A to Z)
            - `desc`: Descending (Z to A)
          required: false
          type: string
        - name: order_by
          in: query
          description: |-
            Specifies how the search results are listed.
            Valid values are:

            - `name`: template name
            - `modified`: date/time template was last modified
            - `used`: date/time the template was last used.
          required: false
          type: string
        - name: search_fields
          in: query
          required: false
          type: string
          description: |
            A comma-separated list of additional template properties to search.


            - `sender`: Include sender name and email in the search.
            - `recipients`: Include recipient names and emails in the search.
            - `envelope`: Not used in template searches.
        - name: search_text
          in: query
          description: |-
            The text to use to search the names of templates.

            Limit: 48 characters.
          required: false
          type: string
        - name: shared_by_me
          in: query
          description:
            When **true,** the response only includes templates shared by
            the user. When **false,** the response only returns template not shared
            by the user. If not specified, templates are returned whether or not they
            have been shared by the user.
          required: false
          type: string
        - name: start_position
          in: query
          description: |
            The zero-based index of the
            result from which to start returning results.

            Use with `count` to limit the number
            of results.

            The default value is `0`.
          required: false
          type: string
        - name: template_ids
          in: query
          required: false
          type: string
          description:
            A comma-separated list of template IDs to download. This value
            is valid only when `is_download` is **true.**
        - name: to_date
          in: query
          description: |-
            The end of a search date range in UTC DateTime format. When you use this parameter, only templates created up to this date and time are returned.

            **Note:** If this property is null, the value defaults to the current date.
          required: false
          type: string
        - name: used_from_date
          in: query
          description:
            Start of the search date range. Only returns templates used or
            edited on or after this date/time. If no value is specified, there is no
            limit on the earliest date used.
          required: false
          type: string
        - name: used_to_date
          in: query
          description:
            End of the search date range. Only returns templates used or
            edited up to this date/time. If no value is provided, this defaults to the
            current date.
          required: false
          type: string
        - name: user_filter
          in: query
          description:
            "Filters the templates in the response. Valid values are: \n\n-
            `owned_by_me`: Results include only templates owned by the user.\n- `shared_with_me`:
            Results include only templates shared with the user.  \n- `all`:  Results
            include all templates owned or shared with the user."
          required: false
          type: string
        - name: user_id
          in: query
          required: false
          type: string
          description: The ID of the user.
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/envelopeTemplateResults"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: ListTemplates
      x-ds-method: list
      x-ds-service: Templates
      x-ds-in-sdk: true
    post:
      tags:
        - Templates
      summary: Creates one or more templates.
      description: |
        Creates one or more template definitions, using a multipart
        request for each template.

        [Templates](/docs/esign-rest-api/esign101/concepts/templates/)
        help streamline the sending process when you frequently
        send the same or similar documents, or send different documents
        to the same group of people.

        When you create a template, you define placeholder roles. Rather
        than specifying a person, you specify a role that regularly
        participates in a transaction that uses the template. Then, when
        you create or send an envelope based on the template, you assign
        actual recipients to the template roles. The recipients
        automatically inherit all of the workflow that is defined for
        that role in the template, such as the tabs and routing
        information.

        ## Template Email Subject Merge Fields

        Placeholder roles have associated merge fields that personalize
        the email notification that DocuSign sends. For example, the
        template automatically personalizes the email message by adding
        placeholders for the recipient's name and email address within
        the email subject line, based on the recipient's role. When the
        sender adds the name and email information for the recipient and
        sends the envelope, the recipient information is automatically
        merged into the appropriate fields in the email subject line.

        Both the sender and the recipients will see the information in
        the email subject line for any emails associated with the
        template. This provides an easy way for senders to organize their
        envelope emails without having to open an envelope to find out
        who the recipient is.



        Use the following placeholders
        to insert a recipient's name or
        email address in the subject line

        To insert a recipient's name into the subject line,
        use the `[[<roleName>_UserName]]` placeholder
        in the  `emailSubject` property when you create the
        template:

        To include a recipient's name
        or email address in the subject line,
        use the following placeholders
        in the `emailSubject` property:

        - `[[<roleName>_UserName]]`
        - `[[<roleName>_Email]]`


        For example, if the role name is `Signer 1`,
        you might set `emailSubject` to one of these strings:

        - `"[[Signer 1_UserName]], Please sign this NDA"`
        - `"[[Signer 1_Email]], Please sign this NDA"`


        **Note:** The maximum length of the
        subject line is 100 characters,
        including any merged text.


        ## Creating multiple templates

        To create multiple templates, you provide a zip file of JSON
        files. You can also use the Templates::ListTemplates method with
        the `is_download` query parameter to download a zip file
        containing your existing templates and use that as a guide. The
        API supports both .zip and .gzip file formats as input.

        You also need to set the
        `Content-Length`,
        `Content-Type`,
        and
        `Content-Disposition`
        headers:


        ```
        Content-Length: 71068
        Content-Type: application/zip
        Content-Disposition: file; filename="DocuSignTemplates_Nov_25_2019_20_40_21.zip"; fileExtension=.zip
        ```

        ### Related topics

        - [How to create a template](/docs/esign-rest-api/how-to/create-template/)
      operationId: Templates_PostTemplates
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: "(Required) The external account number (int) or account ID GUID."
          required: true
          type: string
        - name: envelopeTemplate
          in: body
          required: false
          schema:
            "$ref": "#/definitions/envelopeTemplate"
          description: ""
      responses:
        "201":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/templateSummary"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: createTemplate
      x-ds-method: create
      x-ds-service: Templates
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/templates/{templateId}":
    get:
      tags:
        - Templates
      summary: Gets a specific template associated with a specified account.
      description: Retrieves the definition of the specified template.
      operationId: Templates_GetTemplate
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: templateId
          in: path
          description: The ID of the template.
          required: true
          type: string
        - name: include
          in: query
          required: false
          type: string
          description: |-
            A comma-separated list
            of additional template attributes
            to include in the response.
            Valid values are:

            - `powerforms`: Includes information about PowerForms.
            - `tabs`: Includes information about tabs.
            - `documents`: Includes information about documents.
            - `favorite_template_status`: : Includes the template `favoritedByMe` property in the response. **Note:** You can mark a template as a favorite only in eSignature v2.1.
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/envelopeTemplate"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: get
      x-ds-method: get
      x-ds-service: Templates
      x-ds-in-sdk: true
    put:
      tags:
        - Templates
      summary: Updates an existing template.
      description: Updates an existing template.
      operationId: Templates_PutTemplate
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: templateId
          in: path
          description: The ID of the template.
          required: true
          type: string
        - name: envelopeTemplate
          in: body
          required: false
          schema:
            "$ref": "#/definitions/envelopeTemplate"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/templateUpdateSummary"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: update
      x-ds-method: update
      x-ds-service: Templates
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/templates/{templateId}/{templatePart}":
    put:
      tags:
        - Templates
      summary: Shares a template with a group.
      description: |-
        Shares a template with the specified members group.

        **Note:** For a newer version of this functionality, see [Accounts: Update Shared Access](/docs/esign-rest-api/reference/accounts/accounts/updatesharedaccess/).
      operationId: Templates_PutTemplatePart
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: templateId
          in: path
          description: The ID of the template.
          required: true
          type: string
        - name: templatePart
          in: path
          description: Currently, the only defined part is **groups.**
          required: true
          type: string
        - name: groupInformation
          in: body
          required: false
          schema:
            "$ref": "#/definitions/groupInformation"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/groupInformation"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: updateGroupShare
      x-ds-method: updateGroupShare
      x-ds-service: Templates
      x-ds-in-sdk: true
    delete:
      tags:
        - Templates
      summary: Removes a member group's sharing permissions for a template.
      description: Removes a member group's sharing permissions for a specified template.
      operationId: Templates_DeleteTemplatePart
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: templateId
          in: path
          description: The ID of the template.
          required: true
          type: string
        - name: templatePart
          in: path
          description: Currently, the only defined part is **groups.**
          required: true
          type: string
        - name: groupInformation
          in: body
          required: false
          schema:
            "$ref": "#/definitions/groupInformation"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/groupInformation"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: deleteGroupShare
      x-ds-method: deleteGroupShare
      x-ds-service: Templates
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/templates/{templateId}/custom_fields":
    get:
      tags:
        - TemplateCustomFields
      summary: Gets the custom document fields from a template.
      description:
        Retrieves the custom document field information from an existing
        template.
      operationId: CustomFields_GetTemplateCustomFields
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: templateId
          in: path
          description: The ID of the template.
          required: true
          type: string
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/customFields"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: listCustomFields
      x-ds-method: list
      x-ds-service: Templates
      x-ds-in-sdk: true
    put:
      tags:
        - TemplateCustomFields
      summary: Updates envelope custom fields in a template.
      description: |-
        Updates the custom fields in a template.

        Each custom field used in a template must have a unique name.
      operationId: CustomFields_PutTemplateCustomFields
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: templateId
          in: path
          description: The ID of the template.
          required: true
          type: string
        - name: templateCustomFields
          in: body
          required: false
          schema:
            "$ref": "#/definitions/templateCustomFields"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/customFields"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: updateCustomFields
      x-ds-method: update
      x-ds-service: Templates
      x-ds-in-sdk: true
    post:
      tags:
        - TemplateCustomFields
      summary: Creates custom document fields in an existing template document.
      description: Creates custom document fields in an existing template document.
      operationId: CustomFields_PostTemplateCustomFields
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: templateId
          in: path
          description: The ID of the template.
          required: true
          type: string
        - name: templateCustomFields
          in: body
          required: false
          schema:
            "$ref": "#/definitions/templateCustomFields"
          description: ""
      responses:
        "201":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/customFields"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: createCustomFields
      x-ds-method: create
      x-ds-service: Templates
      x-ds-in-sdk: true
    delete:
      tags:
        - TemplateCustomFields
      summary: Deletes envelope custom fields in a template.
      description: Deletes envelope custom fields in a template.
      operationId: CustomFields_DeleteTemplateCustomFields
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: templateId
          in: path
          description: The ID of the template.
          required: true
          type: string
        - name: templateCustomFields
          in: body
          required: false
          schema:
            "$ref": "#/definitions/templateCustomFields"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/customFields"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: deleteCustomFields
      x-ds-method: delete
      x-ds-service: Templates
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/templates/{templateId}/documents":
    get:
      tags:
        - TemplateDocuments
      summary: Gets a list of documents associated with a template.
      description: Retrieves a list of documents associated with the specified template.
      operationId: Documents_GetTemplateDocuments
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: templateId
          in: path
          description: The ID of the template.
          required: true
          type: string
        - name: include_tabs
          in: query
          required: false
          type: string
          description: Reserved for DocuSign.
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/templateDocumentsResult"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: listDocuments
      x-ds-method: list
      x-ds-service: Templates
      x-ds-in-sdk: true
    put:
      tags:
        - TemplateDocuments
      summary: Adds documents to a template document.
      description: Adds one or more documents to an existing template document.
      operationId: Documents_PutTemplateDocuments
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: templateId
          in: path
          description: The ID of the template.
          required: true
          type: string
        - name: envelopeDefinition
          in: body
          required: false
          schema:
            "$ref": "#/definitions/envelopeDefinition"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/templateDocumentsResult"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: updateDocuments
      x-ds-method: updateList
      x-ds-service: Templates
      x-ds-in-sdk: true
    delete:
      tags:
        - TemplateDocuments
      summary: Deletes documents from a template.
      description: |-
        This method deletes one or more documents from an existing template.

        To delete a document, use only the relevant parts of the [`envelopeDefinition`](#envelopeDefinition).
        For example, this request body specifies that you want to delete the document whose `documentId` is "1".


        ```text
        {
          "documents": [
            {
              "documentId": "1"
            }
          ]
        }
        ```
      operationId: Documents_DeleteTemplateDocuments
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: templateId
          in: path
          description: The ID of the template.
          required: true
          type: string
        - name: envelopeDefinition
          in: body
          required: false
          schema:
            "$ref": "#/definitions/envelopeDefinition"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/templateDocumentsResult"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: deleteDocuments
      x-ds-method: delete
      x-ds-service: Templates
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/templates/{templateId}/documents/{documentId}":
    get:
      tags:
        - TemplateDocuments
      summary: Gets PDF documents from a template.
      description: |-
        This method retrieves one or more PDF documents from the template that you specify.

        You can specify the ID of the document to retrieve, or pass in the value `combined` to retrieve all documents in the template as a single PDF file.
      operationId: Documents_GetTemplateDocument
      consumes: []
      produces:
        - application/pdf
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: documentId
          in: path
          description: |
            The unique ID of the document within the envelope.

            Unlike other IDs in the eSignature API,
            you specify the `documentId` yourself.
            Typically the first document has the ID
            `1`, the second document `2`, and so on,
            but you can use any numbering scheme
            that fits within a 32-bit signed integer
            (1 through 2147483647).


            Tab objects have a `documentId` property
            that specifies the document on which to place
            the tab.
          required: true
          type: string
        - name: templateId
          in: path
          description: The ID of the template.
          required: true
          type: string
        - name: encrypt
          in: query
          required: false
          type: string
          description:
            When **true,** the PDF bytes returned in the response are encrypted
            for all the key managers configured on your DocuSign account. You can decrypt
            the documents by using the Key Manager DecryptDocument API method. For more
            information about Key Manager, see the DocuSign Security Appliance Installation
            Guide that your organization received from DocuSign.
        - name: file_type
          in: query
          required: false
          type: string
          description: ""
        - name: show_changes
          in: query
          required: false
          type: string
          description:
            When **true,** any document fields that a recipient changed are
            highlighted in yellow in the returned PDF document, and optional signatures
            or initials are outlined in red.
      responses:
        "200":
          description: A successful response or an error.
          schema:
            type: file
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getDocument
      x-ds-method: get
      x-ds-service: Templates
      x-ds-in-sdk: true
    put:
      tags:
        - TemplateDocuments
      summary: Updates a template document.
      description: This methods updates an existing template document.
      operationId: Documents_PutTemplateDocument
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: documentId
          in: path
          description: |
            The unique ID of the document within the envelope.

            Unlike other IDs in the eSignature API,
            you specify the `documentId` yourself.
            Typically the first document has the ID
            `1`, the second document `2`, and so on,
            but you can use any numbering scheme
            that fits within a 32-bit signed integer
            (1 through 2147483647).


            Tab objects have a `documentId` property
            that specifies the document on which to place
            the tab.
          required: true
          type: string
        - name: templateId
          in: path
          description: The ID of the template.
          required: true
          type: string
        - name: is_envelope_definition
          in: query
          required: false
          type: string
          description: ""
        - name: envelopeDefinition
          in: body
          required: false
          schema:
            "$ref": "#/definitions/envelopeDefinition"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/envelopeDocument"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: updateDocument
      x-ds-method: update
      x-ds-service: Templates
      x-ds-in-sdk: true
    parameters: []
  ? "/v2.1/accounts/{accountId}/templates/{templateId}/documents/{documentId}/fields"
  : get:
      tags:
        - TemplateDocumentFields
      summary: Gets the custom document fields for a an existing template document.
      description:
        This method retrieves the custom document fields for an existing
        template document.
      operationId: DocumentFields_GetTemplateDocumentFields
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: documentId
          in: path
          description: |
            The unique ID of the document within the envelope.

            Unlike other IDs in the eSignature API,
            you specify the `documentId` yourself.
            Typically the first document has the ID
            `1`, the second document `2`, and so on,
            but you can use any numbering scheme
            that fits within a 32-bit signed integer
            (1 through 2147483647).


            Tab objects have a `documentId` property
            that specifies the document on which to place
            the tab.
          required: true
          type: string
        - name: templateId
          in: path
          description: The ID of the template.
          required: true
          type: string
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/documentFieldsInformation"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: listDocumentFields
      x-ds-method: list
      x-ds-service: Templates
      x-ds-in-sdk: true
    put:
      tags:
        - TemplateDocumentFields
      summary: Updates existing custom document fields in an existing template document.
      description:
        Updates existing custom document fields in an existing template
        document.
      operationId: DocumentFields_PutTemplateDocumentFields
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: documentId
          in: path
          description: |
            The unique ID of the document within the envelope.

            Unlike other IDs in the eSignature API,
            you specify the `documentId` yourself.
            Typically the first document has the ID
            `1`, the second document `2`, and so on,
            but you can use any numbering scheme
            that fits within a 32-bit signed integer
            (1 through 2147483647).


            Tab objects have a `documentId` property
            that specifies the document on which to place
            the tab.
          required: true
          type: string
        - name: templateId
          in: path
          description: The ID of the template.
          required: true
          type: string
        - name: documentFieldsInformation
          in: body
          required: false
          schema:
            "$ref": "#/definitions/documentFieldsInformation"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/documentFieldsInformation"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: updateDocumentFields
      x-ds-method: update
      x-ds-service: Templates
      x-ds-in-sdk: true
    post:
      tags:
        - TemplateDocumentFields
      summary: Creates custom document fields in an existing template document.
      description: Creates custom document fields in an existing template document.
      operationId: DocumentFields_PostTemplateDocumentFields
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: documentId
          in: path
          description: |
            The unique ID of the document within the envelope.

            Unlike other IDs in the eSignature API,
            you specify the `documentId` yourself.
            Typically the first document has the ID
            `1`, the second document `2`, and so on,
            but you can use any numbering scheme
            that fits within a 32-bit signed integer
            (1 through 2147483647).


            Tab objects have a `documentId` property
            that specifies the document on which to place
            the tab.
          required: true
          type: string
        - name: templateId
          in: path
          description: The ID of the template.
          required: true
          type: string
        - name: documentFieldsInformation
          in: body
          required: false
          schema:
            "$ref": "#/definitions/documentFieldsInformation"
          description: ""
      responses:
        "201":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/documentFieldsInformation"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: createDocumentFields
      x-ds-method: create
      x-ds-service: Templates
      x-ds-in-sdk: true
    delete:
      tags:
        - TemplateDocumentFields
      summary: Deletes custom document fields from an existing template document.
      description: Deletes custom document fields from an existing template document.
      operationId: DocumentFields_DeleteTemplateDocumentFields
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: documentId
          in: path
          description: |
            The unique ID of the document within the envelope.

            Unlike other IDs in the eSignature API,
            you specify the `documentId` yourself.
            Typically the first document has the ID
            `1`, the second document `2`, and so on,
            but you can use any numbering scheme
            that fits within a 32-bit signed integer
            (1 through 2147483647).


            Tab objects have a `documentId` property
            that specifies the document on which to place
            the tab.
          required: true
          type: string
        - name: templateId
          in: path
          description: The ID of the template.
          required: true
          type: string
        - name: documentFieldsInformation
          in: body
          required: false
          schema:
            "$ref": "#/definitions/documentFieldsInformation"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/documentFieldsInformation"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: deleteDocumentFields
      x-ds-method: delete
      x-ds-service: Templates
      x-ds-in-sdk: true
    parameters: []
  ? "/v2.1/accounts/{accountId}/templates/{templateId}/documents/{documentId}/html_definitions"
  : get:
      tags:
        - TemplateDocumentHtmlDefinitions
      summary:
        Gets the Original HTML Definition used to generate the Responsive HTML
        for a given document in a template.
      operationId: ResponsiveHtml_GetTemplateDocumentHtmlDefinitions
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: documentId
          in: path
          description: |
            The unique ID of the document within the envelope.

            Unlike other IDs in the eSignature API,
            you specify the `documentId` yourself.
            Typically the first document has the ID
            `1`, the second document `2`, and so on,
            but you can use any numbering scheme
            that fits within a 32-bit signed integer
            (1 through 2147483647).


            Tab objects have a `documentId` property
            that specifies the document on which to place
            the tab.
          required: true
          type: string
        - name: templateId
          in: path
          description: The ID of the template.
          required: true
          type: string
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/documentHtmlDefinitionOriginals"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getTemplateDocumentHtmlDefinitions
      description: ""
      x-ds-method: list
      x-ds-service: Uncategorized
      x-ds-in-sdk: true
    parameters: []
  ? "/v2.1/accounts/{accountId}/templates/{templateId}/documents/{documentId}/pages"
  : get:
      tags:
        - Templates
      summary: Returns document page images based on input.
      operationId: Pages_GetTemplatePageImages
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: "(Required) The external account number (int) or account ID GUID."
          required: true
          type: string
        - name: documentId
          in: path
          description: "(Required) The ID of the document."
          required: true
          type: string
        - name: templateId
          in: path
          description: "(Required) The ID of the template."
          required: true
          type: string
        - name: count
          in: query
          required: false
          type: string
          description: The maximum number of results to return.
        - name: dpi
          in: query
          required: false
          type: string
          description:
            The number of dots per inch (DPI) for the resulting images. Valid
            values are 1-310 DPI. The default value is 94.
        - name: max_height
          in: query
          required: false
          type: string
          description: Sets the maximum height of the returned images in pixels.
        - name: max_width
          in: query
          required: false
          type: string
          description: Sets the maximum width of the returned images in pixels.
        - name: nocache
          in: query
          required: false
          type: string
          description:
            "When **true,** using cache is disabled and image information
            is retrieved from a database. **True** is the default value. "
        - name: show_changes
          in: query
          required: false
          type: string
          description: When **true,** changes display in the user interface.
        - name: start_position
          in: query
          required: false
          type: string
          description:
            The position within the total result set from which to start
            returning values. The value **thumbnail** may be used to return the page
            image.
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/pageImages"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getDocumentPageImages
      description:
        Returns images of the pages in a template document for display
        based on the parameters that you specify.
      x-ds-method: getPageImages
      x-ds-service: Templates
      x-ds-in-sdk: true
    parameters: []
  ? "/v2.1/accounts/{accountId}/templates/{templateId}/documents/{documentId}/pages/{pageNumber}"
  : delete:
      tags:
        - Templates
      summary: Deletes a page from a document in an template.
      description:
        Deletes a page from a document in a template based on the page
        number.
      operationId: Pages_DeleteTemplatePage
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: documentId
          in: path
          description: |
            The unique ID of the document within the envelope.

            Unlike other IDs in the eSignature API,
            you specify the `documentId` yourself.
            Typically the first document has the ID
            `1`, the second document `2`, and so on,
            but you can use any numbering scheme
            that fits within a 32-bit signed integer
            (1 through 2147483647).


            Tab objects have a `documentId` property
            that specifies the document on which to place
            the tab.
          required: true
          type: string
        - name: pageNumber
          in: path
          description: The page number being accessed.
          required: true
          type: string
        - name: templateId
          in: path
          description: The ID of the template.
          required: true
          type: string
        - name: pageRequest
          in: body
          required: false
          schema:
            "$ref": "#/definitions/pageRequest"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: deleteDocumentPage
      x-ds-method: deleteDocumentPage
      x-ds-service: Templates
      x-ds-in-sdk: true
    parameters: []
  ? "/v2.1/accounts/{accountId}/templates/{templateId}/documents/{documentId}/pages/{pageNumber}/page_image"
  : get:
      tags:
        - Templates
      summary: Gets a page image from a template for display.
      description: Retrieves a page image for display from the specified template.
      operationId: Pages_GetTemplatePageImage
      consumes: []
      produces:
        - image/png
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: documentId
          in: path
          description: |
            The unique ID of the document within the envelope.

            Unlike other IDs in the eSignature API,
            you specify the `documentId` yourself.
            Typically the first document has the ID
            `1`, the second document `2`, and so on,
            but you can use any numbering scheme
            that fits within a 32-bit signed integer
            (1 through 2147483647).


            Tab objects have a `documentId` property
            that specifies the document on which to place
            the tab.
          required: true
          type: string
        - name: pageNumber
          in: path
          description: The page number being accessed.
          required: true
          type: string
        - name: templateId
          in: path
          description: The ID of the template.
          required: true
          type: string
        - name: dpi
          in: query
          required: false
          type: string
          description:
            The number of dots per inch (DPI) for the resulting images. Valid
            values are 1-310 DPI. The default value is 94.
        - name: max_height
          in: query
          required: false
          type: string
          description: Sets the maximum height of the returned images in pixels.
        - name: max_width
          in: query
          required: false
          type: string
          description: Sets the maximum width of the returned images in pixels.
        - name: show_changes
          in: query
          required: false
          type: string
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            type: file
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getDocumentPageImage
      x-ds-method: getDocumentPageImage
      x-ds-service: Templates
      x-ds-in-sdk: true
    put:
      tags:
        - Templates
      summary: Rotates page image from a template for display.
      description:
        Rotates page image from a template for display. The page image
        can be rotated to the left or right.
      operationId: Pages_PutTemplatePageImage
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: documentId
          in: path
          description: |
            The unique ID of the document within the envelope.

            Unlike other IDs in the eSignature API,
            you specify the `documentId` yourself.
            Typically the first document has the ID
            `1`, the second document `2`, and so on,
            but you can use any numbering scheme
            that fits within a 32-bit signed integer
            (1 through 2147483647).


            Tab objects have a `documentId` property
            that specifies the document on which to place
            the tab.
          required: true
          type: string
        - name: pageNumber
          in: path
          description: The page number being accessed.
          required: true
          type: string
        - name: templateId
          in: path
          description: The ID of the template.
          required: true
          type: string
        - name: pageRequest
          in: body
          required: false
          schema:
            "$ref": "#/definitions/pageRequest"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: rotateDocumentPage
      x-ds-method: rotateDocumentPage
      x-ds-service: Templates
      x-ds-in-sdk: true
    parameters: []
  ? "/v2.1/accounts/{accountId}/templates/{templateId}/documents/{documentId}/pages/{pageNumber}/tabs"
  : get:
      tags:
        - TemplateDocumentTabs
      summary: Returns tabs on the specified page.
      operationId: Tabs_GetTemplatePageTabs
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: documentId
          in: path
          description: |
            The unique ID of the document within the envelope.

            Unlike other IDs in the eSignature API,
            you specify the `documentId` yourself.
            Typically the first document has the ID
            `1`, the second document `2`, and so on,
            but you can use any numbering scheme
            that fits within a 32-bit signed integer
            (1 through 2147483647).


            Tab objects have a `documentId` property
            that specifies the document on which to place
            the tab.
          required: true
          type: string
        - name: pageNumber
          in: path
          description: The page number being accessed.
          required: true
          type: string
        - name: templateId
          in: path
          description: The ID of the template.
          required: true
          type: string
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/TemplateDocumentTabs"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getPageTabs
      description: |
        Returns the tabs from the page specified by `pageNumber` of the document specified by `documentId` in the
        template specified by `templateId`.
      x-ds-method: getByPage
      x-ds-service: Templates
      x-ds-in-sdk: true
    parameters: []
  ? "/v2.1/accounts/{accountId}/templates/{templateId}/documents/{documentId}/responsive_html_preview"
  : post:
      tags:
        - TemplateDocumentResponsiveHtmlPreview
      summary: Creates a preview of the responsive version of a template document.
      operationId: ResponsiveHtml_PostTemplateDocumentResponsiveHtmlPreview
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: documentId
          in: path
          description: |
            The unique ID of the document within the envelope.

            Unlike other IDs in the eSignature API,
            you specify the `documentId` yourself.
            Typically the first document has the ID
            `1`, the second document `2`, and so on,
            but you can use any numbering scheme
            that fits within a 32-bit signed integer
            (1 through 2147483647).


            Tab objects have a `documentId` property
            that specifies the document on which to place
            the tab.
          required: true
          type: string
        - name: templateId
          in: path
          description: The ID of the template.
          required: true
          type: string
        - name: documentHtmlDefinition
          in: body
          required: false
          schema:
            "$ref": "#/definitions/documentHtmlDefinition"
          description: ""
      responses:
        "201":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/documentHtmlDefinitions"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: createTemplateDocumentResponsiveHtmlPreview
      description: |-
        Creates a preview of the
        [responsive](/docs/esign-rest-api/esign101/concepts/responsive/),
        HTML version of a specific template document. This
        method enables you to preview a PDF document
        conversion to responsive HTML across device types
        prior to sending.

        The request body is a `documentHtmlDefinition`
        object, which holds the responsive signing
        parameters that define how to generate the HTML
        version of the signing document.
      x-ds-method: create
      x-ds-service: Uncategorized
      x-ds-in-sdk: true
    parameters: []
  ? "/v2.1/accounts/{accountId}/templates/{templateId}/documents/{documentId}/tabs"
  : get:
      tags:
        - TemplateDocumentTabs
      summary: Returns tabs on a template.
      operationId: Tabs_GetTemplateDocumentTabs
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: documentId
          in: path
          description: |
            The unique ID of the document within the envelope.

            Unlike other IDs in the eSignature API,
            you specify the `documentId` yourself.
            Typically the first document has the ID
            `1`, the second document `2`, and so on,
            but you can use any numbering scheme
            that fits within a 32-bit signed integer
            (1 through 2147483647).


            Tab objects have a `documentId` property
            that specifies the document on which to place
            the tab.
          required: true
          type: string
        - name: templateId
          in: path
          description: The ID of the template.
          required: true
          type: string
        - name: page_numbers
          in: query
          required: false
          type: string
          description: |-
            Filters for tabs that occur on the pages that you specify. Enter as a comma-separated list of page Guids.

            Example: `page_numbers=2,6`
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/TemplateDocumentTabs"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getDocumentTabs
      description: |+
        Returns the tabs on the document specified by `documentId` in the
        template specified by `templateId`.

      x-ds-method: get
      x-ds-service: Templates
      x-ds-in-sdk: true
    put:
      tags:
        - TemplateDocumentTabs
      summary: Updates the tabs for a template.
      operationId: Tabs_PutTemplateDocumentTabs
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: documentId
          in: path
          description: |
            The unique ID of the document within the envelope.

            Unlike other IDs in the eSignature API,
            you specify the `documentId` yourself.
            Typically the first document has the ID
            `1`, the second document `2`, and so on,
            but you can use any numbering scheme
            that fits within a 32-bit signed integer
            (1 through 2147483647).


            Tab objects have a `documentId` property
            that specifies the document on which to place
            the tab.
          required: true
          type: string
        - name: templateId
          in: path
          description: The ID of the template.
          required: true
          type: string
        - name: templateTabs
          in: body
          required: false
          schema:
            "$ref": "#/definitions/templateTabs"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/tabs"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: putDocumentTabs
      description: |
        Updates tabs in the document specified by `documentId` in the
        template specified by `templateId`.
      x-ds-method: update
      x-ds-service: Uncategorized
      x-ds-in-sdk: true
    post:
      tags:
        - TemplateDocumentTabs
      summary: Adds tabs to a document in a template.
      operationId: Tabs_PostTemplateDocumentTabs
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: documentId
          in: path
          description: |
            The unique ID of the document within the envelope.

            Unlike other IDs in the eSignature API,
            you specify the `documentId` yourself.
            Typically the first document has the ID
            `1`, the second document `2`, and so on,
            but you can use any numbering scheme
            that fits within a 32-bit signed integer
            (1 through 2147483647).


            Tab objects have a `documentId` property
            that specifies the document on which to place
            the tab.
          required: true
          type: string
        - name: templateId
          in: path
          description: The ID of the template.
          required: true
          type: string
        - name: templateTabs
          in: body
          required: false
          schema:
            "$ref": "#/definitions/templateTabs"
          description: ""
      responses:
        "201":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/tabs"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: postDocumentTabs
      description: |
        Adds tabs to the document specified by `documentId` in the
        template specified by `templateId`.

        In the request body, you only need to specify the tabs that your
        are adding. For example, to add a text
        [prefill tab](/docs/esign-rest-api/reference/templates/templatedocumenttabs/create/#definition__templatetabs_prefilltabs),
        your request body might look like this:

        ```
        {
          "prefillTabs": {
            "textTabs": [
              {
                "value": "a prefill text tab",
                "pageNumber": "1",
                "documentId": "1",
                "xPosition": 316,
                "yPosition": 97
              }
            ]
          }
        }
        ```
      x-ds-method: create
      x-ds-service: Uncategorized
      x-ds-in-sdk: true
    delete:
      tags:
        - TemplateDocumentTabs
      summary: Deletes tabs from a template.
      operationId: Tabs_DeleteTemplateDocumentTabs
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: documentId
          in: path
          description: |
            The unique ID of the document within the envelope.

            Unlike other IDs in the eSignature API,
            you specify the `documentId` yourself.
            Typically the first document has the ID
            `1`, the second document `2`, and so on,
            but you can use any numbering scheme
            that fits within a 32-bit signed integer
            (1 through 2147483647).


            Tab objects have a `documentId` property
            that specifies the document on which to place
            the tab.
          required: true
          type: string
        - name: templateId
          in: path
          description: The ID of the template.
          required: true
          type: string
        - name: templateTabs
          in: body
          required: false
          schema:
            "$ref": "#/definitions/templateTabs"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/tabs"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: deleteDocumentTabs
      description: |
        Deletes tabs from the document specified by `documentId` in the
        template specified by `templateId`.
      x-ds-method: delete
      x-ds-service: Uncategorized
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/templates/{templateId}/html_definitions":
    get:
      tags:
        - TemplateHtmlDefinitions
      summary:
        Gets the Original HTML Definition used to generate the Responsive HTML
        for the template.
      operationId: ResponsiveHtml_GetTemplateHtmlDefinitions
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: templateId
          in: path
          description: The ID of the template.
          required: true
          type: string
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/documentHtmlDefinitionOriginals"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getTemplateHtmlDefinitions
      description: ""
      x-ds-method: list
      x-ds-service: Uncategorized
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/templates/{templateId}/lock":
    get:
      tags:
        - TemplateLocks
      summary: Gets template lock information.
      description: |+
        Retrieves general information about a template lock.

        The user requesting the information must be the same user
        who locked the template.

        You can use this method to recover the lock information,
        including the `lockToken`,
        for a locked template.
        The `X-DocuSign-Edit` header is included in the response.

        See
        [TemplateLocks: create](/docs/esign-rest-api/reference/templates/templatelocks/create/)
        for a description of the `X-DocuSign-Edit` header.

        ### Related topics

        - [Common API Tasks: Locking and unlocking envelopes](https://www.docusign.com/blog/dsdev-common-api-tasks-locking-and-unlocking-envelopes)

      operationId: Lock_GetTemplateLock
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: templateId
          in: path
          description: The ID of the template.
          required: true
          type: string
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/lockInformation"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getLock
      x-ds-method: get
      x-ds-service: Templates
      x-ds-in-sdk: true
    put:
      tags:
        - TemplateLocks
      summary: Updates a template lock.
      description: |+
        Updates the lock information for a locked template.

        You must include the `X-DocuSign-Edit` header
        as described in
        [TemplateLocks: create](/docs/esign-rest-api/reference/templates/templatelocks/create/).


        Use this method to change the duration
        of the lock (`lockDurationInSeconds`)
        or the `lockedByApp` string.

        The request body is a full `lockRequest` object,
        but you only need to specify the
        properties that you are updating. For example:

        ```
        {
          "lockDurationInSeconds": "3600",
          "lockedByApp": "My Application"
        }
        ```

      operationId: Lock_PutTemplateLock
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: templateId
          in: path
          description: The ID of the template.
          required: true
          type: string
        - name: lockRequest
          in: body
          required: false
          schema:
            "$ref": "#/definitions/lockRequest"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/lockInformation"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: updateLock
      x-ds-method: update
      x-ds-service: Templates
      x-ds-in-sdk: true
    post:
      tags:
        - TemplateLocks
      summary: Locks a template.
      description: |+
        This method locks the specified template and sets the time until
        the lock expires to prevent other users or recipients from
        changing the template.

        The response to this request includes a `lockToken` parameter
        that you must use in the `X-DocuSign-Edit` header for
        every PUT method (typically a method that updates a template)
        while the template is locked.


        If you do not provide the `lockToken` when accessing
        a locked template, you will get the following
        error:

        ```
        {
           "errorCode": "EDIT_LOCK_NOT_LOCK_OWNER",
           "message": "The user is not the owner of the lock. The template is locked by another user or in another application"
        }
        ```


        ### The X-DocuSign-Edit header

        The `X-DocuSign-Edit` header looks like this
        and can be specified in either JSON or XML.

        **JSON**
        ```
        {
          "LockToken": "token-from-response",
          "LockDurationInSeconds": "600"
        }
        ```

        **XML**
        ```
        <DocuSignEdit>
          <LockToken>token-from-response</LockToken>
          <LockDurationInSeconds>600</LockDurationInSeconds>
        </DocuSignEdit>
        ```

        In the actual HTTP header, you would remove the linebreaks:

        ```
        X-DocuSign-Edit: {"LockToken": "token-from-response", "LockDurationInSeconds": "600" }
            or
        X-DocuSign-Edit:<DocuSignEdit><LockToken>token-from-response</LockToken><LockDurationInSeconds>600</LockDurationInSeconds></DocuSignEdit>
        ```


        ### Related topics

        - [Common API Tasks: Locking and unlocking envelopes](https://www.docusign.com/blog/dsdev-common-api-tasks-locking-and-unlocking-envelopes)

      operationId: Lock_PostTemplateLock
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: templateId
          in: path
          description: The ID of the template.
          required: true
          type: string
        - name: lockRequest
          in: body
          required: false
          schema:
            "$ref": "#/definitions/lockRequest"
          description: ""
      responses:
        "201":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/lockInformation"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: createLock
      x-ds-method: create
      x-ds-service: Templates
      x-ds-in-sdk: true
    delete:
      tags:
        - TemplateLocks
      summary: Deletes a template lock.
      description: |+
        Deletes the lock from the specified template.
        The user deleting the lock must be the same user
        who locked the template.

        You must include the `X-DocuSign-Edit` header
        as described in
        [TemplateLocks: create](/docs/esign-rest-api/reference/templates/templatelocks/create/).

        This method takes an optional query parameter
        that lets you specify whether
        changes made while the template was locked
        are kept or discarded.


        | Query Parameter | Description                                                                                                                                                                         |
        | :-------------- | :---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
        | `save_changes`  | When **true** (the default), any changes made while the lock was active are saved. When **false,** any changes made while the template was locked are discarded. |


        ### Related topics

        - [Common API Tasks: Locking and unlocking envelopes](https://www.docusign.com/blog/dsdev-common-api-tasks-locking-and-unlocking-envelopes)

      operationId: Lock_DeleteTemplateLock
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: templateId
          in: path
          description: The ID of the template.
          required: true
          type: string
        - name: lockRequest
          in: body
          required: false
          schema:
            "$ref": "#/definitions/lockRequest"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/lockInformation"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: deleteLock
      x-ds-method: delete
      x-ds-service: Templates
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/templates/{templateId}/notification":
    get:
      tags:
        - Templates
      summary: Gets template notification information.
      description:
        Retrieves the envelope notification, reminders and expirations,
        information for an existing template.
      operationId: Notification_GetTemplatesTemplateIdNotification
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: templateId
          in: path
          description: The ID of the template.
          required: true
          type: string
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/notification"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getNotificationSettings
      x-ds-method: getNotificationSettings
      x-ds-service: Templates
      x-ds-in-sdk: true
    put:
      tags:
        - Templates
      summary: Updates the notification  structure for an existing template.
      description:
        Updates the notification structure for an existing template. Use
        this endpoint to set reminder and expiration notifications.
      operationId: Notification_PutTemplatesTemplateIdNotification
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: templateId
          in: path
          description: The ID of the template.
          required: true
          type: string
        - name: templateNotificationRequest
          in: body
          required: false
          schema:
            "$ref": "#/definitions/templateNotificationRequest"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/notification"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: updateNotificationSettings
      x-ds-method: updateNotificationSettings
      x-ds-service: Templates
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/templates/{templateId}/recipients":
    get:
      tags:
        - TemplateRecipients
      summary: Gets recipient information from a template.
      description: Retrieves the information for all recipients in the specified template.
      operationId: Recipients_GetTemplateRecipients
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: templateId
          in: path
          description: The ID of the template.
          required: true
          type: string
        - name: include_anchor_tab_locations
          in: query
          description:
            " When **true** and `include_tabs` is set to **true,** all tabs
            with anchor tab properties are included in the response. "
          required: false
          type: string
        - name: include_extended
          in: query
          description:
            " When **true,** the extended properties are included in the
            response. "
          required: false
          type: string
        - name: include_tabs
          in: query
          description:
            When **true,** the tab information associated with the recipient
            is included in the response.
          required: false
          type: string
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/recipients"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: listRecipients
      x-ds-method: list
      x-ds-service: Templates
      x-ds-in-sdk: true
    put:
      tags:
        - TemplateRecipients
      summary: Updates recipients in a template.
      description:
        "Updates recipients in a template. \n\nYou can edit the following
        properties: `email`, `userName`, `routingOrder`, `faxNumber`, `deliveryMethod`,
        `accessCode`, and `requireIdLookup`."
      operationId: Recipients_PutTemplateRecipients
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: templateId
          in: path
          description: The ID of the template.
          required: true
          type: string
        - name: resend_envelope
          in: query
          required: false
          type: string
          description: |-
            When **true,**
            resends the envelope to the recipients
            that you specify in the request body.
            Use this parameter to resend the envelope
            to a recipient
            who deleted the original email notification.

            **Note:** Correcting an envelope is a different process.
            DocuSign always resends an envelope when you correct it,
            regardless of the value that you enter here.
        - name: templateRecipients
          in: body
          required: false
          schema:
            "$ref": "#/definitions/templateRecipients"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/recipientsUpdateSummary"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: updateRecipients
      x-ds-method: update
      x-ds-service: Templates
      x-ds-in-sdk: true
    post:
      tags:
        - TemplateRecipients
      summary: Adds tabs for a recipient.
      description: Adds one or more recipients to a template.
      operationId: Recipients_PostTemplateRecipients
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: templateId
          in: path
          description: The ID of the template.
          required: true
          type: string
        - name: resend_envelope
          in: query
          required: false
          type: string
          description: |-
            When **true,**
            resends the envelope to the recipients
            that you specify in the request body.
            Use this parameter to resend the envelope
            to a recipient
            who deleted the original email notification.

            **Note:** Correcting an envelope is a different process.
            DocuSign always resends an envelope when you correct it,
            regardless of the value that you enter here.
        - name: templateRecipients
          in: body
          required: false
          schema:
            "$ref": "#/definitions/templateRecipients"
          description: ""
      responses:
        "201":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/recipients"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: createRecipients
      x-ds-method: create
      x-ds-service: Templates
      x-ds-in-sdk: true
    delete:
      tags:
        - TemplateRecipients
      summary: Deletes recipients from a template.
      description:
        Deletes one or more recipients from a template. Recipients to be
        deleted are listed in the request, with the `recipientId` being used as the
        key for deleting recipients.
      operationId: Recipients_DeleteTemplateRecipients
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: templateId
          in: path
          description: The ID of the template.
          required: true
          type: string
        - name: templateRecipients
          in: body
          required: false
          schema:
            "$ref": "#/definitions/templateRecipients"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/recipients"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: deleteRecipients
      x-ds-method: deleteList
      x-ds-service: Templates
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/templates/{templateId}/recipients/{recipientId}":
    delete:
      tags:
        - TemplateRecipients
      summary: Deletes the specified recipient file from a template.
      description: Deletes the specified recipient file from the specified template.
      operationId: Recipients_DeleteTemplateRecipient
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: recipientId
          in: path
          description: |
            A local reference used to map
            recipients to other objects, such as specific
            document tabs.

            A `recipientId` must be
            either an integer or a GUID,
            and the `recipientId` must be
            unique within an envelope.

            For example, many envelopes assign the first recipient
            a `recipientId` of `1`.
          required: true
          type: string
        - name: templateId
          in: path
          description: The ID of the template.
          required: true
          type: string
        - name: templateRecipients
          in: body
          required: false
          schema:
            "$ref": "#/definitions/templateRecipients"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/recipients"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: deleteRecipient
      x-ds-method: delete
      x-ds-service: Templates
      x-ds-in-sdk: true
    parameters: []
  ? "/v2.1/accounts/{accountId}/templates/{templateId}/recipients/{recipientId}/document_visibility"
  : get:
      tags:
        - TemplateDocumentVisibility
      summary: Returns document visibility for a template recipient
      operationId: Recipients_GetTemplateRecipientDocumentVisibility
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: recipientId
          in: path
          description: |
            A local reference used to map
            recipients to other objects, such as specific
            document tabs.

            A `recipientId` must be
            either an integer or a GUID,
            and the `recipientId` must be
            unique within an envelope.

            For example, many envelopes assign the first recipient
            a `recipientId` of `1`.
          required: true
          type: string
        - name: templateId
          in: path
          description: The ID of the template.
          required: true
          type: string
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/documentVisibilityList"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getTemplateRecipientDocumentVisibility
      description:
        This method returns information about document visibility for a
        template recipient.
      x-ds-method: get
      x-ds-service: Envelopes
      x-ds-in-sdk: true
    put:
      tags:
        - TemplateDocumentVisibility
      summary: Updates document visibility for a template recipient
      operationId: Recipients_PutTemplateRecipientDocumentVisibility
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: recipientId
          in: path
          description: |
            A local reference used to map
            recipients to other objects, such as specific
            document tabs.

            A `recipientId` must be
            either an integer or a GUID,
            and the `recipientId` must be
            unique within an envelope.

            For example, many envelopes assign the first recipient
            a `recipientId` of `1`.
          required: true
          type: string
        - name: templateId
          in: path
          description: The ID of the template.
          required: true
          type: string
        - name: templateDocumentVisibilityList
          in: body
          required: false
          schema:
            "$ref": "#/definitions/templateDocumentVisibilityList"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/templateDocumentVisibilityList"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: updateTemplateRecipientDocumentVisibility
      description: |-
        This method updates the document visibility for a template recipient.

        **Note:** A document cannot be hidden from a recipient if the recipient has tabs assigned to them on the document. Carbon Copy, Certified Delivery (Needs to Sign), Editor, and Agent recipients can always see all documents.
      x-ds-method: update
      x-ds-service: Envelopes
      x-ds-in-sdk: true
    parameters: []
  ? "/v2.1/accounts/{accountId}/templates/{templateId}/recipients/{recipientId}/tabs"
  : get:
      tags:
        - TemplateRecipientTabs
      summary:
        Gets the tabs information for a signer or sign-in-person recipient
        in a template.
      description:
        Gets the tabs information for a signer or sign-in-person recipient
        in a template.
      operationId: Recipients_GetTemplateRecipientTabs
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: recipientId
          in: path
          description: |
            A local reference used to map
            recipients to other objects, such as specific
            document tabs.

            A `recipientId` must be
            either an integer or a GUID,
            and the `recipientId` must be
            unique within an envelope.

            For example, many envelopes assign the first recipient
            a `recipientId` of `1`.
          required: true
          type: string
        - name: templateId
          in: path
          description: The ID of the template.
          required: true
          type: string
        - name: include_anchor_tab_locations
          in: query
          description:
            When **true,** all tabs with anchor tab properties are included
            in the response. The default value is **false.**
          required: false
          type: string
        - name: include_metadata
          in: query
          required: false
          type: string
          description:
            When **true,** the response includes metadata indicating which
            properties are editable.
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/tabs"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: listTabs
      x-ds-method: list
      x-ds-service: Templates
      x-ds-in-sdk: true
    put:
      tags:
        - TemplateRecipientTabs
      summary: Updates the tabs for a recipient.
      description: Updates one or more tabs for a recipient in a template.
      operationId: Recipients_PutTemplateRecipientTabs
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: recipientId
          in: path
          description: |
            A local reference used to map
            recipients to other objects, such as specific
            document tabs.

            A `recipientId` must be
            either an integer or a GUID,
            and the `recipientId` must be
            unique within an envelope.

            For example, many envelopes assign the first recipient
            a `recipientId` of `1`.
          required: true
          type: string
        - name: templateId
          in: path
          description: The ID of the template.
          required: true
          type: string
        - name: templateTabs
          in: body
          required: false
          schema:
            "$ref": "#/definitions/templateTabs"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/tabs"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: updateTabs
      x-ds-method: update
      x-ds-service: Templates
      x-ds-in-sdk: true
    post:
      tags:
        - TemplateRecipientTabs
      summary: Adds tabs for a recipient.
      description: Adds one or more tabs for a recipient.
      operationId: Recipients_PostTemplateRecipientTabs
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: recipientId
          in: path
          description: |
            A local reference used to map
            recipients to other objects, such as specific
            document tabs.

            A `recipientId` must be
            either an integer or a GUID,
            and the `recipientId` must be
            unique within an envelope.

            For example, many envelopes assign the first recipient
            a `recipientId` of `1`.
          required: true
          type: string
        - name: templateId
          in: path
          description: The ID of the template.
          required: true
          type: string
        - name: templateTabs
          in: body
          required: false
          schema:
            "$ref": "#/definitions/templateTabs"
          description: ""
      responses:
        "201":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/tabs"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: createTabs
      x-ds-method: create
      x-ds-service: Templates
      x-ds-in-sdk: true
    delete:
      tags:
        - TemplateRecipientTabs
      summary: Deletes the tabs associated with a recipient in a template.
      description: Deletes one or more tabs associated with a recipient in a template.
      operationId: Recipients_DeleteTemplateRecipientTabs
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: recipientId
          in: path
          description: |
            A local reference used to map
            recipients to other objects, such as specific
            document tabs.

            A `recipientId` must be
            either an integer or a GUID,
            and the `recipientId` must be
            unique within an envelope.

            For example, many envelopes assign the first recipient
            a `recipientId` of `1`.
          required: true
          type: string
        - name: templateId
          in: path
          description: The ID of the template.
          required: true
          type: string
        - name: templateTabs
          in: body
          required: false
          schema:
            "$ref": "#/definitions/templateTabs"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/tabs"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: deleteTabs
      x-ds-method: delete
      x-ds-service: Templates
      x-ds-in-sdk: true
    parameters: []
  ? "/v2.1/accounts/{accountId}/templates/{templateId}/recipients/document_visibility"
  : put:
      tags:
        - TemplateDocumentVisibility
      summary: Updates document visibility for template recipients
      operationId: Recipients_PutTemplateRecipientsDocumentVisibility
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: templateId
          in: path
          description: The ID of the template.
          required: true
          type: string
        - name: templateDocumentVisibilityList
          in: body
          required: false
          schema:
            "$ref": "#/definitions/templateDocumentVisibilityList"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/templateDocumentVisibilityList"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: updateTemplateRecipientsDocumentVisibility
      description: |-
        This method updates document visibility for one or more template recipients based on the `recipientId` and `visible` values that you include in the request body.


        **Note:** A document cannot be hidden from a recipient if the recipient has tabs assigned to them on the document. Carbon Copy, Certified Delivery (Needs to Sign), Editor, and Agent recipients can always see all documents.
      x-ds-method: updateList
      x-ds-service: Envelopes
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/templates/{templateId}/responsive_html_preview":
    post:
      tags:
        - TemplateResponsiveHtmlPreview
      summary:
        Creates a preview of the responsive versions of all of the documents
        associated with a template.
      operationId: ResponsiveHtml_PostTemplateResponsiveHtmlPreview
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: templateId
          in: path
          description: The ID of the template.
          required: true
          type: string
        - name: documentHtmlDefinition
          in: body
          required: false
          schema:
            "$ref": "#/definitions/documentHtmlDefinition"
          description: ""
      responses:
        "201":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/documentHtmlDefinitions"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: createTemplateResponsiveHtmlPreview
      description: |-
        Creates a preview of the
        [responsive](/docs/esign-rest-api/esign101/concepts/responsive/),
        HTML versions of all of the documents associated
        with a template. This method enables you to
        preview the PDF document conversions to responsive
        HTML across device types prior to sending.

        The request body is a `documentHtmlDefinition`
        object, which holds the responsive signing
        parameters that define how to generate the HTML
        version of the documents.
      x-ds-method: create
      x-ds-service: Uncategorized
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/templates/{templateId}/views/edit":
    post:
      tags:
        - TemplateViews
      summary: Gets a URL for a template edit view.
      operationId: Views_PostTemplateEditView
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: templateId
          in: path
          description: The ID of the template.
          required: true
          type: string
        - name: returnUrlRequest
          in: body
          required: false
          schema:
            "$ref": "#/definitions/returnUrlRequest"
          description: ""
      responses:
        "201":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/viewUrl"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: createEditView
      description: |-
        This method returns a URL for starting an edit view of a template that uses the DocuSign Template UI. The URL can only be used once.

        To prevent the user from accessing the sending account, set the `returnUrl` value in the request body.

        ## Information security notice

        If the `returnUrl` value is not set, this method provides full access to the sending account. If the account has administrative privileges, then this method also provides administrator access.
      x-ds-method: createEdit
      x-ds-service: Templates
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/templates/{templateId}/views/recipient_preview":
    post:
      tags:
        - TemplateRecipients
      summary: Creates a template recipient preview.
      operationId: Views_PostTemplateRecipientPreview
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: templateId
          in: path
          description: The ID of the template.
          required: true
          type: string
        - name: recipientPreviewRequest
          in: body
          required: false
          schema:
            "$ref": "#/definitions/recipientPreviewRequest"
          description: ""
      responses:
        "201":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/viewUrl"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: createTemplateRecipientPreview
      description: |-
        This method returns a URL for a template recipient preview  in the DocuSign UI that you can embed in your application. You use this method to enable the sender to preview the recipients' experience.

        For more information, see [Preview and Send](https://support.docusign.com/s/document-item?bundleId=ulp1643236876813&topicId=oeg1578456408976.html).
      x-ds-method: createTemplateRecipientPreview
      x-ds-service: Uncategorized
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/templates/{templateId}/workflow":
    get:
      tags:
        - EnvelopeWorkflowDefinition
      summary: Returns the workflow definition for a template.
      operationId: TemplateWorkflowDefinition_GetTemplateWorkflowDefinition
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: templateId
          in: path
          description: The ID of the template.
          required: true
          type: string
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/workflow"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getTemplateWorkflowDefinition
      description:
        "Returns the workflow definition for the template specified by
        `templateId`. If the template does not have a workflow object, this method
        returns a 404.

        "
      x-ds-method: getTemplateWorkflowDefinition
      x-ds-service: Uncategorized
      x-ds-in-sdk: true
    put:
      tags:
        - EnvelopeWorkflowDefinition
      summary: Updates the workflow definition for a template.
      operationId: TemplateWorkflowDefinition_PutTemplateWorkflowDefinition
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: templateId
          in: path
          description: The ID of the template.
          required: true
          type: string
        - name: workflow
          in: body
          required: false
          schema:
            "$ref": "#/definitions/workflow"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/workflow"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: updateTemplateWorkflowDefinition
      description: Updates the specified template's workflow definition.
      x-ds-method: updateTemplateWorkflowDefinition
      x-ds-service: Uncategorized
      x-ds-in-sdk: true
    delete:
      tags:
        - EnvelopeWorkflowDefinition
      summary: Delete the workflow definition for a template.
      operationId: TemplateWorkflowDefinition_DeleteTemplateWorkflowDefinition
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: templateId
          in: path
          description: The ID of the template.
          required: true
          type: string
      responses:
        "200":
          description: A successful response or an error.
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: deleteTemplateWorkflowDefinition
      description: |-
        Deletes the specified template's workflow definition if it has one.

        **Note:** If the specified template does not have a workflow definition, this endpoint returns a 200 response.
      x-ds-method: deleteTemplateWorkflowDefinition
      x-ds-service: Uncategorized
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/templates/{templateId}/workflow/scheduledSending":
    get:
      tags:
        - EnvelopeWorkflowDefinition
      summary: Returns the scheduled sending rules for a template's workflow definition.
      operationId: TemplateWorkflowScheduledSending_GetTemplateScheduledSendingDefinition
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: templateId
          in: path
          description: The ID of the template.
          required: true
          type: string
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/scheduledSending"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getTemplateScheduledSendingDefinition
      x-ds-method: getTemplateScheduledSendingDefinition
      x-ds-service: Uncategorized
      description: |-
        Given a template specified by `templateId`, returns the scheduled sending rules for that template's workflow object.

        **Note:** If the template's workflow does not have a scheduled sending object, this method returns a 404.
      x-ds-in-sdk: true
    put:
      tags:
        - EnvelopeWorkflowDefinition
      summary: Updates the scheduled sending rules for a template's workflow definition.
      operationId: TemplateWorkflowScheduledSending_PutTemplateScheduledSendingDefinition
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: templateId
          in: path
          description: The ID of the template.
          required: true
          type: string
        - name: scheduledSending
          in: body
          required: false
          schema:
            "$ref": "#/definitions/scheduledSending"
          description: An object that describes the settings for scheduled sending.
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/scheduledSending"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: updateTemplateScheduledSendingDefinition
      x-ds-method: updateTemplateScheduledSendingDefinition
      x-ds-service: Uncategorized
      description: ""
      x-ds-in-sdk: true
    delete:
      tags:
        - EnvelopeWorkflowDefinition
      summary: Deletes the scheduled sending rules for the template's workflow.
      operationId: TemplateWorkflowScheduledSending_DeleteTemplateScheduledSendingDefinition
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: templateId
          in: path
          description: The ID of the template.
          required: true
          type: string
      responses:
        "200":
          description: A successful response or an error.
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: deleteTemplateScheduledSendingDefinition
      x-ds-method: deleteTemplateScheduledSendingDefinition
      x-ds-service: Uncategorized
      description: Deletes the scheduled sending rules for the template's workflow.
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/templates/{templateId}/workflow/steps":
    post:
      tags:
        - EnvelopeWorkflowDefinition
      summary: Adds a new step to a template's workflow.
      operationId: TemplateWorkflowStep_PostTemplateWorkflowStepDefinition
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: templateId
          in: path
          description: The ID of the template.
          required: true
          type: string
        - name: workflowStep
          in: body
          required: false
          schema:
            "$ref": "#/definitions/workflowStep"
          description: ""
      responses:
        "201":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/workflowStep"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: createTemplateWorkflowStepDefinition
      x-ds-method: createTemplateWorkflowStepDefinition
      x-ds-service: Uncategorized
      description: Adds a new step to a template's workflow.
      x-ds-in-sdk: true
    parameters: []
  ? "/v2.1/accounts/{accountId}/templates/{templateId}/workflow/steps/{workflowStepId}"
  : get:
      tags:
        - EnvelopeWorkflowDefinition
      summary: Returns a specified workflow step for a specified envelope.
      operationId: TemplateWorkflowStep_GetTemplateWorkflowStepDefinition
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: templateId
          in: path
          description: The ID of the template.
          required: true
          type: string
        - name: workflowStepId
          in: path
          required: true
          type: string
          description: The ID of the workflow step.
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/workflowStep"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getTemplateWorkflowStepDefinition
      x-ds-method: getTemplateWorkflowStepDefinition
      x-ds-service: Uncategorized
      description:
        Returns a workflow step specified by `workflowStepId` for a template
        specified by `templateId`.
      x-ds-in-sdk: true
    put:
      tags:
        - EnvelopeWorkflowDefinition
      summary: Updates a specified workflow step for a template.
      operationId: TemplateWorkflowStep_PutTemplateWorkflowStepDefinition
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: templateId
          in: path
          description: The ID of the template.
          required: true
          type: string
        - name: workflowStepId
          in: path
          required: true
          type: string
          description: The ID of the workflow step.
        - name: workflowStep
          in: body
          required: false
          schema:
            "$ref": "#/definitions/workflowStep"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/workflowStep"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: updateTemplateWorkflowStepDefinition
      x-ds-method: updateTemplateWorkflowStepDefinition
      x-ds-service: Uncategorized
      description: Updates a specified workflow step for a template.
      x-ds-in-sdk: true
    delete:
      tags:
        - EnvelopeWorkflowDefinition
      summary: Deletes a workflow step from an template's workflow definition.
      operationId: TemplateWorkflowStep_DeleteTemplateWorkflowStepDefinition
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: templateId
          in: path
          description: The ID of the template.
          required: true
          type: string
        - name: workflowStepId
          in: path
          required: true
          type: string
          description: The ID of the workflow step.
      responses:
        "200":
          description: A successful response or an error.
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: deleteTemplateWorkflowStepDefinition
      x-ds-method: deleteTemplateWorkflowStepDefinition
      x-ds-service: Uncategorized
      description: Deletes a workflow step from an template's workflow definition.
      x-ds-in-sdk: true
    parameters: []
  ? "/v2.1/accounts/{accountId}/templates/{templateId}/workflow/steps/{workflowStepId}/delayedRouting"
  : get:
      tags:
        - EnvelopeWorkflowDefinition
      summary: Returns the delayed routing rules for a template's workflow step definition.
      operationId: TemplateWorkflowDelayedRouting_GetTemplateDelayedRoutingDefinition
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: templateId
          in: path
          description: The ID of the template.
          required: true
          type: string
        - name: workflowStepId
          in: path
          required: true
          type: string
          description: The ID of the workflow step.
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/delayedRouting"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getTemplateDelayedRoutingDefinition
      x-ds-method: getTemplateDelayedRoutingDefinition
      x-ds-service: Uncategorized
      description: |-
        Given a template and a workflow step, returns the delayed routing rules for that workflow step.

        **Note:** If the workflow step does not have a delayed routing object, this method returns a 404.
      x-ds-in-sdk: true
    put:
      tags:
        - EnvelopeWorkflowDefinition
      summary: Updates the delayed routing rules for a template's workflow step.
      operationId: TemplateWorkflowDelayedRouting_PutTemplateDelayedRoutingDefinition
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: templateId
          in: path
          description: The ID of the template.
          required: true
          type: string
        - name: workflowStepId
          in: path
          required: true
          type: string
          description: The ID of the workflow step.
        - name: delayedRouting
          in: body
          required: false
          schema:
            "$ref": "#/definitions/delayedRouting"
          description:
            A complex element that specifies the delayed routing settings
            for the workflow step.
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/delayedRouting"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: updateTemplateDelayedRoutingDefinition
      x-ds-method: updateTemplateDelayedRoutingDefinition
      x-ds-service: Uncategorized
      description: Updates the scheduled sending rules for a template's workflow.
      x-ds-in-sdk: true
    delete:
      tags:
        - EnvelopeWorkflowDefinition
      summary:
        Deletes the delayed routing rules for the specified template workflow
        step.
      operationId: TemplateWorkflowDelayedRouting_DeleteTemplateDelayedRoutingDefinition
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: templateId
          in: path
          description: The ID of the template.
          required: true
          type: string
        - name: workflowStepId
          in: path
          required: true
          type: string
          description: The ID of the workflow step.
      responses:
        "200":
          description: A successful response or an error.
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: deleteTemplateDelayedRoutingDefinition
      x-ds-method: deleteTemplateDelayedRoutingDefinition
      x-ds-service: Uncategorized
      description:
        Deletes the delayed routing rules for the specified template workflow
        step.
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/unsupported_file_types":
    get:
      tags:
        - Accounts
      summary: Gets a list of unsupported file types.
      description:
        Retrieves a list of file types (mime-types and file-extensions)
        that are not supported for upload through the DocuSign system.
      operationId: UnsupportedFileTypes_GetUnsupportedFileTypes
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/fileTypeList"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: listUnsupportedFileTypes
      x-ds-method: listUnsupportedFileTypes
      x-ds-service: Accounts
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/users":
    get:
      tags:
        - Users
      summary: Retrieves the list of users for the specified account.
      description: |-
        Retrieves the list of users for the specified account.

        The response returns the list of users for the account, with information about the result set. If the `additional_info` query is added to the endpoint and set to **true,** full user information is returned for each user.
      operationId: Users_GetUsers
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: "(Required) The external account number (int) or account ID GUID."
          required: true
          type: string
        - name: additional_info
          in: query
          description:
            When **true,** the custom settings information is returned for
            each user in the account. If this parameter is omitted, the default behavior
            is **false.**
          required: false
          type: string
        - name: alternate_admins_only
          in: query
          required: false
          type: string
          description: ""
        - name: count
          in: query
          description: |
            The maximum number of results to return.

            Use `start_position` to specify the number of results to skip.

            Valid values: `1` to `100`
          required: false
          type: string
        - name: domain_users_only
          in: query
          required: false
          type: string
          description: ""
        - name: email
          in: query
          required: false
          type: string
          description:
            "Filters results based on the email address associated with the
            user that you want to return.\n\n**Note:** You can use either this parameter
            or the `email_substring` parameter, but not both. For older accounts, this
            parameter might return multiple users who are associated with a single email
            address. "
        - name: email_substring
          in: query
          description:
            "Filters results based on a fragment of an email address. For
            example, you could enter `gmail` to return all users who have Gmail addresses.\n\n**Note:**
            You do not use a wildcard character with this parameter. You can use either
            this parameter or the `email` parameter, but not both. "
          required: false
          type: string
        - name: group_id
          in: query
          description: Filters results based on one or more group IDs.
          required: false
          type: string
        - name: include_usersettings_for_csv
          in: query
          required: false
          type: string
          description:
            When **true,** the response includes the `userSettings` object
            data in CSV format.
        - name: login_status
          in: query
          required: false
          type: string
          description:
            When **true,** the response includes the login status of each
            user.
        - name: not_group_id
          in: query
          required: false
          type: string
          description: Return user records excluding the specified group IDs.
        - name: start_position
          in: query
          description: |
            The zero-based index of the
            result from which to start returning results.

            Use with `count` to limit the number
            of results.

            The default value is `0`.
          required: false
          type: string
        - name: status
          in: query
          required: false
          type: string
          description: |
            Filters results by user account status.
            A comma-separated list of any of the following:

            * `ActivationRequired`
            * `ActivationSent`
            * `Active`
            * `Closed`
            * `Disabled`
        - name: user_name_substring
          in: query
          description:
            Filters the user records returned by the user name or a sub-string
            of user name.
          required: false
          type: string
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/userInformationList"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: list
      x-ds-method: list
      x-ds-service: Users
      x-ds-in-sdk: true
    put:
      tags:
        - Users
      summary: Changes one or more users in the specified account.
      operationId: Users_PutUsers
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: allow_all_languages
          in: query
          required: false
          type: string
          description: ""
        - name: userInformationList
          in: body
          required: false
          schema:
            "$ref": "#/definitions/userInformationList"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/userInformationList"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: updateUsers
      description: This method updates the information about one or more account users.
      x-ds-method: updateList
      x-ds-service: Users
      x-ds-in-sdk: true
    post:
      tags:
        - Users
      summary: Adds new users to the specified account.
      description:
        "Adds new users to an account. \n\nThe body of this request is
        an array of `newUsers` objects. For each new user, you must provide at least
        the `userName` and `email` properties. The maximum number of users you can
        create in one request is 500 users. \n\nThe `userSettings` property specifies
        the actions users can perform. In the example below, Tal Mason will be able
        to send envelopes, and the activation email will be in French because the
        `locale` is set to `fr`.\n\n\n```\nPOST /restapi/v2.1/accounts/{accountId}/users\nContent-Type:
        application/json\n```\n```\n{\n  \"newUsers\": [\n    {\n      \"userName\":
        \"Claire Horace\",\n      \"email\": \"claire@example.com\"\n    },\n    {\n
        \     \"userName\": \"Tal Mason\",\n      \"email\": \"talmason@example.com\",\n
        \     \"company\": \"TeleSel\",\n      \"userSettings\": {\n        \"locale\":
        \"fr\",\n        \"canSendEnvelope\": true\n      }\n    }\n  ]\n}\n```\n\nA
        successful response is a `newUsers` array with information about the newly
        created users. If there was a problem in creating a user, that user entry
        will contain an `errorDetails` property that describes what went wrong.\n\n```json\n{\n
        \ \"newUsers\": [\n    {\n      \"userId\": \"18f3be12-xxxx-xxxx-xxxx-883d8f9b8ade\",\n
        \     \"uri\": \"/users/18f3be12-xxxx-xxxx-xxxx-883d8f9b8ade\",\n      \"email\":
        \"claire@example.com\",\n      \"userName\": \"Claire Horace\",\n      \"createdDateTime\":
        \"0001-01-01T08:00:00.0000000Z\",\n      \"errorDetails\": {\n        \"errorCode\":
        \"USER_ALREADY_EXISTS_IN_ACCOUNT\",\n        \"message\": \"Username and email
        combination already exists for this account.\"\n      }\n    },\n    {\n      \"userId\":
        \"be9899a3-xxxx-xxxx-xxxx-2c8dd7156e33\",\n      \"uri\": \"/users/be9899a3-xxxx-xxxx-xxxx-2c8dd7156e33\",\n
        \     \"email\": \"talmason@example.com\",\n      \"userName\": \"Tal Mason\",\n
        \     \"userStatus\": \"ActivationSent\",\n      \"createdDateTime\": \"2020-05-26T23:25:30.7330000Z\"\n
        \   }\n  ]\n}\n```\n"
      operationId: Users_PostUsers
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: newUsersDefinition
          in: body
          required: false
          schema:
            "$ref": "#/definitions/newUsersDefinition"
          description: ""
      responses:
        "201":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/newUsersSummary"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: create
      x-ds-method: create
      x-ds-service: Users
      x-ds-in-sdk: true
    delete:
      tags:
        - Users
      summary: Closes one or more users in the account.
      description: |+
        Closes one or more users in the account,
        preventing them from accessing account features.
        Users are not permanently deleted.

        The request body requires only
        the IDs of the users to close:

        ```json
        {
            "users": [
                { "userId": "6b67a1ee-xxxx-xxxx-xxxx-385763624163" },
                { "userId": "b6c74c52-xxxx-xxxx-xxxx-457a81d88926" },
                { "userId": "464f7988-xxxx-xxxx-xxxx-781ee556ab7a" }
            ]
        }
        ```

        You can use [`Users:update`](/docs/esign-rest-api/reference/users/users/update/)
        to re-open a closed user.

      operationId: Users_DeleteUsers
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: delete
          in: query
          required: false
          type: string
          description: |-
            A list of groups to remove the user from.
            A comma-separated list of the following:

            - `Groups`
            - `PermissionSet`
            - `SigningGroupsEmail`
        - name: userInfoList
          in: body
          required: false
          schema:
            "$ref": "#/definitions/userInfoList"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/usersResponse"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: delete
      x-ds-method: delete
      x-ds-service: Users
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/users/{userId}":
    get:
      tags:
        - Users
      summary: Gets the user information for a specified user.
      description: |+
        Retrieves the user information for the specified user.  For example:

        ```json
        {
          "userName": "Tania Morales",
          "userId": "6b67a1ee-xxxx-xxxx-xxxx-385763624163",
          "userType": "CompanyUser",
          "isAdmin": "False",
          "isNAREnabled": "false",
          "userStatus": "Active",
          "uri": "/users/6b67a1ee-xxxx-xxxx-xxxx-385763624163",
          "email": "examplename42@orobia.net",
          "createdDateTime": "2019-04-01T22:11:56.4570000Z",
          "userAddedToAccountDateTime": "0001-01-01T08:00:00.0000000Z",
          "firstName": "Tania",
          "lastName": "Morales",
          "jobTitle": "",
          "company": "Company",
          "permissionProfileId": "12345678",
          "permissionProfileName": "DocuSign Viewer",
          "userSettings": {. . .},
          "sendActivationOnInvalidLogin": "false",
          "enableConnectForUser": "false",
          "groupList": [. . .],
          "workAddress": {. . .},
          "homeAddress": {. . .},
          "signatureImageUri": "/users/6b67a1ee-xxxx-xxxx-xxxx-385763624163/signatures/0304c47b-xxxx-xxxx-xxxx-c9673963bb50/signature_image",
          "initialsImageUri": "/users/6b67a1ee-xxxx-xxxx-xxxx-385763624163/signatures/0304c47b-xxxx-xxxx-xxxx-c9673963bb50/initials_image",
          "defaultAccountId": "f636f297-xxxx-xxxx-xxxx-8e7a14715950"
        }
        ```

      operationId: User_GetUser
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: userId
          in: path
          description: |-
            The ID of the user to access.

            **Note:** Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.
          required: true
          type: string
        - name: additional_info
          in: query
          description: Setting this parameter has no effect in this operation.
          required: false
          type: string
        - name: email
          in: query
          required: false
          type: string
          description: Setting this parameter has no effect in this operation.
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/userInformation"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getInformation
      x-ds-method: get
      x-ds-service: Users
      x-ds-in-sdk: true
    put:
      tags:
        - Users
      summary: Updates user information for the specified user.
      operationId: User_PutUser
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: userId
          in: path
          description: |-
            The ID of the user to access.

            **Note:** Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.
          required: true
          type: string
        - name: allow_all_languages
          in: query
          required: false
          type: string
          description: ""
        - name: userInformation
          in: body
          required: false
          schema:
            "$ref": "#/definitions/userInformation"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/userInformation"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: updateUser
      description:
        To update user information for a specific user, submit a [Users](#Users)
        object with updated field values in the request body of this operation.
      x-ds-method: update
      x-ds-service: Users
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/users/{userId}/authorization":
    post:
      tags:
        - Authorizations
      summary: Creates a user authorization.
      operationId: UserAuthorization_CreateUserAuthorization
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: userId
          in: path
          description: The ID of the principal user.
          required: true
          type: string
        - name: userAuthorizationCreateRequest
          in: body
          required: false
          schema:
            "$ref": "#/definitions/userAuthorizationCreateRequest"
          description: ""
      responses:
        "201":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/userAuthorization"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: createUserAuthorization
      x-ds-method: createUserAuthorization
      x-ds-service: Uncategorized
      description: |-
        Creates an authorization allowing one user to send and/or manage envelopes on behalf of another user.

        The _agent_ user acts on behalf of the _principal_ user. The principal user is specified by the `userId` path parameter. The agent user is specified in the request body. Each principal user can only share signing permission with one agent user.

        Specify in the request the level of access to share with the agent user. If you share signing access, the agent user will receive an email notification.

        To call this endpoint:
        * You must be an account administrator or you must be the principal user.
        * The agent user and principal user must belong to the same account.
        * At least one of the following account settings must be enabled: `AllowDelegatedSigning`, `AllowManagingEnvelopesOnBehalfOfOthers`, `AllowEditingEnvelopesOnBehalfOfOthers`, `AllowSendingEnvelopesOnBehalfOfOthers`. These settings correspond to the level of access you can set for the authorization.
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/users/{userId}/authorization/{authorizationId}":
    get:
      tags:
        - Authorizations
      summary: "Returns the user authorization for a given authorization ID.

        "
      operationId: UserAuthorization_GetUserAuthorization
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: authorizationId
          in: path
          required: true
          type: string
          description: The ID of the user authorization.
        - name: userId
          in: path
          description: The ID of the principal user.
          required: true
          type: string
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/userAuthorization"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getUserAuthorization
      x-ds-method: getUserAuthorization
      x-ds-service: Uncategorized
      description: |-
        Returns the details for the user authorization specified by the `authorizationId`.

        To call this endpoint, you must be an account administrator or you must be the principal user for the specified authorization.
      x-ds-in-sdk: true
    put:
      tags:
        - Authorizations
      summary: Updates the start or end date for a user authorization.
      operationId: UserAuthorization_UpdateUserAuthorization
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: authorizationId
          in: path
          required: true
          type: string
          description: The ID of the user authorization.
        - name: userId
          in: path
          description: The ID of the principal user.
          required: true
          type: string
        - name: userAuthorizationUpdateRequest
          in: body
          required: false
          schema:
            "$ref": "#/definitions/userAuthorizationUpdateRequest"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/userAuthorization"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: updateUserAuthorization
      x-ds-method: updateUserAuthorization
      x-ds-service: Uncategorized
      description: |-
        Updates the start and/or end date for a given user authorization. Specify the user authorization and principal user with the path parameters.

        To call this endpoint, you must be an account administrator or you must be the principal user for the specified authorization.
      x-ds-in-sdk: true
    delete:
      tags:
        - Authorizations
      summary: "Deletes the user authorization.

        "
      operationId: UserAuthorization_DeleteUserAuthorization
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: authorizationId
          in: path
          required: true
          type: string
          description: The ID of the user authorization.
        - name: userId
          in: path
          description: The ID of the principal user.
          required: true
          type: string
      responses:
        "200":
          description: A successful response or an error.
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: deleteUserAuthorization
      x-ds-method: deleteUserAuthorization
      x-ds-service: Uncategorized
      description: |-
        Deletes the user authorization specified by the `authorizationId`.

        To call this endpoint, you must be an account administrator or you must be the principal user for the specified authorization.
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/users/{userId}/authorizations":
    get:
      tags:
        - Authorizations
      summary:
        Returns the authorizations for which the specified user is the principal
        user.
      operationId: UserAuthorizations_GetPrincipalUserAuthorizations
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: userId
          in: path
          description: The ID of the principal user.
          required: true
          type: string
        - name: active_only
          in: query
          required: false
          type: string
          description:
            When **true,** return only active authorizations. The default
            value is **true.**
        - name: count
          in: query
          required: false
          type: string
          description: The maximum number of results to return.
        - name: email_substring
          in: query
          description:
            Filters returned user records by full email address or a substring
            of email address.
          required: false
          type: string
        - name: include_closed_users
          in: query
          required: false
          type: string
          description:
            When **true,** returns active and scheduled authorizations of
            closed users. The default value is **true.** This value is only applied
            when `active_only` is **false.**
        - name: permissions
          in: query
          required: false
          type: string
          description: |-
            Filters results by authorization permission. Valid values:
            * `Send`
            * `Manage`
            * `Sign`
        - name: start_position
          in: query
          required: false
          type: string
          description:
            The position within the total result set from which to start
            returning values. The value **thumbnail** may be used to return the page
            image.
        - name: user_name_substring
          in: query
          required: false
          type: string
          description: |-
            Filters results based on a full or partial user name.

            **Note:** When you enter a partial user name, you do not use a wildcard character.
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/userAuthorizations"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getPrincipalUserAuthorizations
      x-ds-method: getPrincipalUserAuthorizations
      x-ds-service: Uncategorized
      description: |-
        Returns the user authorizations for which the user specified by `userId` is the principal user.

        To call this endpoint, you must be an account administrator or you must be the specified principal user.
      x-ds-in-sdk: true
    post:
      tags:
        - Authorizations
      summary: Create or update multiple user authorizations.
      operationId: UserAuthorizations_PostUserAuthorizations
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: userId
          in: path
          description: The ID of the principal user.
          required: true
          type: string
        - name: userAuthorizationsRequest
          in: body
          required: false
          schema:
            "$ref": "#/definitions/userAuthorizationsRequest"
          description: ""
      responses:
        "201":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/userAuthorizationsResponse"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: createUserAuthorizations
      x-ds-method: createUserAuthorizations
      x-ds-service: Uncategorized
      description: |
        Create or update multiple user authorizations in a single request. The body of the request is a list of userAuthorizationSomething objects. To create a new authorization, specify the `agentUser` and `permission` fields, with the optional `startDate` and `endDate` fields. To update an existing authorization, specify the `authorizationId` field and the `startDate` and/or `endDate` fields.

        For example, to create a new authorization and update the end date of an existing authorization, your request body might look like this:

        ```
        {
          "authorizations": [
            {
              "agentUser": {
                "userId": "1470ff66-xxxx-xxxx-xxxx-8c46f140da37",
                "accountId": "230546a7-xxxx-xxxx-xxxx-af205d5494ad"
              },
              "permission": "manage"
            },
            {
              "authorizationId": "b73ac983-xxxx-xxxx-xxxx-b3c0ea5b09d3",
              "endDate": "2023-05-09T21:36:27.0000000+00:00"
            }
          ]
        }
        ```

        The principal user is specified by the `userId` path parameter. To call this endpoint, you must be an account administrator or the principal user.

        **Note:** To create an authorization with signing permission, the `AllowDelegationSigning` setting must be enabled on the account. If you share signing access, the agent user will receive an email notification. Each principal user can only share signing permission with one agent user.
      x-ds-in-sdk: true
    delete:
      tags:
        - Authorizations
      summary: Delete multiple user authorizations.
      operationId: UserAuthorizations_DeleteUserAuthorizations
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: userId
          in: path
          description: The ID of the principal user.
          required: true
          type: string
        - name: userAuthorizationsDeleteRequest
          in: body
          required: false
          schema:
            "$ref": "#/definitions/userAuthorizationsDeleteRequest"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/userAuthorizationsDeleteResponse"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: deleteUserAuthorizations
      x-ds-method: deleteUserAuthorizations
      x-ds-service: Uncategorized
      description: |-
        Delete one or more user authorizations for a given principal user. The principal user is specified by the `userId` path parameter.

        To call this endpoint, you must be an account administrator or you must be the principal user for the specified authorizations.
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/users/{userId}/authorizations/agent":
    get:
      tags:
        - Authorizations
      summary:
        Returns the authorizations for which the specified user is the agent
        user.
      operationId: UserAgentAuthorizations_GetAgentUserAuthorizations
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: userId
          in: path
          description: The user who is acting as the agent.
          required: true
          type: string
        - name: active_only
          in: query
          required: false
          type: string
          description:
            When **true,** only active users are returned. The default value
            is **false.**
        - name: count
          in: query
          required: false
          type: string
          description: The maximum number of results to return.
        - name: email_substring
          in: query
          description:
            Filters returned user records by full email address or a substring
            of email address.
          required: false
          type: string
        - name: include_closed_users
          in: query
          required: false
          type: string
          description:
            When **true,** returns active and scheduled authorizations of
            closed users. The default value is **true.** This value is only applied
            when `active_only` is **false.**
        - name: permissions
          in: query
          required: false
          type: string
          description: ""
        - name: start_position
          in: query
          required: false
          type: string
          description:
            The position within the total result set from which to start
            returning values. The value **thumbnail** may be used to return the page
            image.
        - name: user_name_substring
          in: query
          required: false
          type: string
          description: |-
            Filters results based on a full or partial user name.

            **Note:** When you enter a partial user name, you do not use a wildcard character.
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/userAuthorizations"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getAgentUserAuthorizations
      x-ds-method: getAgentUserAuthorizations
      x-ds-service: Uncategorized
      description: |-
        Returns the user authorizations for which the user specified by `userId` is the agent user.

        If the calling user is an account administrator, the full results will be returned. Otherwise, only authorizations for which the calling user is the principal user will be returned.
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/users/{userId}/cloud_storage":
    get:
      tags:
        - CloudStorageProviders
      summary: Get the Cloud Storage Provider configuration for the specified user.
      description:
        "Retrieves the list of cloud storage providers enabled for the
        account and the configuration information for the user.

        "
      operationId: CloudStorage_GetCloudStorageProviders
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: userId
          in: path
          description: |-
            The ID of the user to access.

            **Note:** Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.
          required: true
          type: string
        - name: redirectUrl
          in: query
          description:
            " The URL the user is redirected to after the cloud storage provider
            authenticates the user. Using this will append the redirectUrl to the authenticationUrl.\n\nThe
            redirectUrl is restricted to URLs in the docusign.com or docusign.net domains.\n "
          required: false
          type: string
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/cloudStorageProviders"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: listProviders
      x-ds-method: list
      x-ds-service: CloudStorage
      x-ds-in-sdk: true
    post:
      tags:
        - CloudStorageProviders
      summary:
        Configures the redirect URL information  for one or more cloud storage
        providers for the specified user.
      description:
        Configures the redirect URL information  for one or more cloud
        storage providers for the specified user. The redirect URL is added to the
        authentication URL to complete the return route.
      operationId: CloudStorage_PostCloudStorage
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: userId
          in: path
          description: |-
            The ID of the user to access.

            **Note:** Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.
          required: true
          type: string
        - name: cloudStorageProviders
          in: body
          required: false
          schema:
            "$ref": "#/definitions/cloudStorageProviders"
          description: ""
      responses:
        "201":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/cloudStorageProviders"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: createProvider
      x-ds-method: create
      x-ds-service: CloudStorage
      x-ds-in-sdk: true
    delete:
      tags:
        - CloudStorageProviders
      summary:
        Deletes the user authentication information for one or more cloud storage
        providers.
      description:
        Deletes the user authentication information for one or more cloud
        storage providers. The next time the user tries to access the cloud storage
        provider, they must pass normal authentication.
      operationId: CloudStorage_DeleteCloudStorageProviders
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: userId
          in: path
          description: |-
            The ID of the user to access.

            **Note:** Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.
          required: true
          type: string
        - name: cloudStorageProviders
          in: body
          required: false
          schema:
            "$ref": "#/definitions/cloudStorageProviders"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/cloudStorageProviders"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: deleteProviders
      x-ds-method: deleteList
      x-ds-service: CloudStorage
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/users/{userId}/cloud_storage/{serviceId}":
    get:
      tags:
        - CloudStorageProviders
      summary: Gets the specified Cloud Storage Provider configuration for the User.
      description:
        Retrieves the list of cloud storage providers enabled for the account
        and the configuration information for the user.
      operationId: CloudStorage_GetCloudStorage
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: serviceId
          in: path
          description:
            "The ID of the service to access. \n\nValid values are the service
            name (\"Box\") or the numerical serviceId (\"4136\")."
          required: true
          type: string
        - name: userId
          in: path
          description: |-
            The ID of the user to access.

            **Note:** Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.
          required: true
          type: string
        - name: redirectUrl
          in: query
          description:
            " The URL the user is redirected to after the cloud storage provider
            authenticates the user. Using this will append the redirectUrl to the authenticationUrl.\n\nThe
            redirectUrl is restricted to URLs in the docusign.com or docusign.net domains.\n "
          required: false
          type: string
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/cloudStorageProviders"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getProvider
      x-ds-method: get
      x-ds-service: CloudStorage
      x-ds-in-sdk: true
    delete:
      tags:
        - CloudStorageProviders
      summary:
        Deletes the user authentication information for the specified cloud
        storage provider.
      description:
        Deletes the user authentication information for the specified cloud
        storage provider. The next time the user tries to access the cloud storage
        provider, they must pass normal authentication for this cloud storage provider.
      operationId: CloudStorage_DeleteCloudStorage
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: serviceId
          in: path
          description:
            "The ID of the service to access. \n\nValid values are the service
            name (\"Box\") or the numerical serviceId (\"4136\")."
          required: true
          type: string
        - name: userId
          in: path
          description: |-
            The ID of the user to access.

            **Note:** Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.
          required: true
          type: string
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/cloudStorageProviders"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: deleteProvider
      x-ds-method: delete
      x-ds-service: CloudStorage
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/users/{userId}/cloud_storage/{serviceId}/folders":
    get:
      tags:
        - CloudStorage
      summary:
        Retrieves a list of all the items in a specified folder from the specified
        cloud storage provider.
      description:
        "Retrieves a list of all the items in a specified folder from the
        specified cloud storage provider. "
      operationId: CloudStorageFolder_GetCloudStorageFolderAll
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: serviceId
          in: path
          description:
            "The ID of the service to access. \n\nValid values are the service
            name (\"Box\") or the numerical serviceId (\"4136\")."
          required: true
          type: string
        - name: userId
          in: path
          description: |-
            The ID of the user to access.

            **Note:** Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.
          required: true
          type: string
        - name: cloud_storage_folder_path
          in: query
          description: "A comma separated list of folder IDs included in the request. "
          required: false
          type: string
        - name: count
          in: query
          description: |
            The maximum number of results to return.

            Use `start_position` to specify the number of results to skip.

            Default: `25`
          required: false
          type: string
        - name: order
          in: query
          description:
            "The order in which to sort the results.\n\nValid values are:
            \n\n\n* `asc`: Ascending order.\n* `desc`: Descending order. "
          required: false
          type: string
        - name: order_by
          in: query
          description:
            "The file attribute to use to sort the results.\n\nValid values
            are: \n\n* `modified`\n* `name`"
          required: false
          type: string
        - name: search_text
          in: query
          required: false
          type: string
          description: Use this parameter to search for specific text.
        - name: start_position
          in: query
          description: |
            The zero-based index of the
            result from which to start returning results.

            Use with `count` to limit the number
            of results.

            The default value is `0`.
          required: false
          type: string
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/externalFolder"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: listFolders
      x-ds-method: listFolders
      x-ds-service: CloudStorage
      x-ds-in-sdk: true
    parameters: []
  ? "/v2.1/accounts/{accountId}/users/{userId}/cloud_storage/{serviceId}/folders/{folderId}"
  : get:
      tags:
        - CloudStorage
      summary: Gets a list of items from a cloud storage provider.
      description:
        "Retrieves a list of the user's items from the specified cloud
        storage provider. \n\nTo limit the scope of the items returned, provide a
        comma-separated list of folder IDs in the request."
      operationId: CloudStorageFolder_GetCloudStorageFolder
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: folderId
          in: path
          description: The ID of the folder.
          required: true
          type: string
        - name: serviceId
          in: path
          description:
            "The ID of the service to access. \n\nValid values are the service
            name (\"Box\") or the numerical serviceId (\"4136\")."
          required: true
          type: string
        - name: userId
          in: path
          description: |-
            The ID of the user to access.

            **Note:** Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.
          required: true
          type: string
        - name: cloud_storage_folder_path
          in: query
          required: false
          type: string
          description: The file path to a cloud storage folder.
        - name: cloud_storage_folderid_plain
          in: query
          required: false
          type: string
          description:
            A plain-text folder ID that you can use as an alternative to
            the existing folder id. This property is mainly used for rooms. Enter multiple
            folder IDs as a comma-separated list.
        - name: count
          in: query
          description: |
            The maximum number of results to return.

            Use `start_position` to specify the number of results to skip.

            Default: `25`
          required: false
          type: string
        - name: order
          in: query
          description:
            "The order in which to sort the results.\n\nValid values are:
            \n\n\n* `asc`: Ascending order.\n* `desc`: Descending order. "
          required: false
          type: string
        - name: order_by
          in: query
          description:
            "The file attribute to use to sort the results.\n\nValid values
            are: \n\n* `modified`\n* `name`"
          required: false
          type: string
        - name: search_text
          in: query
          required: false
          type: string
          description: Use this parameter to search for specific text.
        - name: start_position
          in: query
          description: |
            The zero-based index of the
            result from which to start returning results.

            Use with `count` to limit the number
            of results.

            The default value is `0`.
          required: false
          type: string
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/externalFolder"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: list
      x-ds-method: list
      x-ds-service: CloudStorage
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/users/{userId}/custom_settings":
    get:
      tags:
        - UserCustomSettings
      summary: Retrieves the custom user settings for a specified user.
      description: |-
        Retrieves a list of custom user settings for a single user.

        Custom settings provide a flexible way to store and retrieve
        custom user information that can be used in your own system.

        **Note:** Custom user settings are not the same as user account
        settings.


        If the custom user settings you want to retrieve are grouped, you
        must include the `X-DocuSign-User-Settings-Key` header
        in the request:

        `X-DocuSign-User-Settings-Key:group_name`

        Where the `group_name` is your designated name for the group of
        customer user settings.

        If the `X-DocuSign-User-Settings-Key` header is not included, only the custom
        user settings that were added without a group are retrieved.
      operationId: UserCustomSettings_GetCustomSettings
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: userId
          in: path
          description: |-
            The ID of the user to access.

            **Note:** Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.
          required: true
          type: string
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/customSettingsInformation"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: listCustomSettings
      x-ds-method: list
      x-ds-service: Users
      x-ds-in-sdk: true
    put:
      tags:
        - UserCustomSettings
      summary: Adds or updates custom user settings for the specified user.
      description: |
        Adds or updates custom user settings for the specified user.

        **Note:** Custom user settings are not the same as user account
        settings.

        Custom settings provide a flexible way to store and retrieve
        custom user information that you can use in your own system.

        **Important:** There is a limit on the size for all the custom
        user settings for a single user. The limit is 4,000 characters,
        which includes the XML and JSON structure for the settings.

        You can group custom user settings when adding them. Grouping
        allows you to retrieve settings that are in a specific group,
        instead of retrieving all the user custom settings.

        To group custom user settings, include the
        `X-DocuSign-User-Settings-Key` header in the request:

        `X-DocuSign-User-Settings-Key:group_name`

        Where the `group_name` is your designated name for the group of
        customer user settings.

        When getting or deleting grouped custom user settings, you must
        include the `X-DocuSign-User-Settings-Key` header information.

        Grouping custom user settings is not required and if the `X-DocuSign-User-Settings-Key`
        header information is not included, the custom user settings are
        added normally and can be retrieved or deleted without including
        the `X-DocuSign-User-Settings-Key` header.
      operationId: UserCustomSettings_PutCustomSettings
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: userId
          in: path
          description: |-
            The ID of the user to access.

            **Note:** Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.
          required: true
          type: string
        - name: customSettingsInformation
          in: body
          required: false
          schema:
            "$ref": "#/definitions/customSettingsInformation"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/customSettingsInformation"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: updateCustomSettings
      x-ds-method: update
      x-ds-service: Users
      x-ds-in-sdk: true
    delete:
      tags:
        - UserCustomSettings
      summary: Deletes custom user settings for a specified user.
      description: |-
        Deletes the specified custom user settings for a single user.

        If the custom user settings you want to delete are grouped, you
        must include the `X-DocuSign-User-Settings-Key` header
        in the request:

        `X-DocuSign-User-Settings-Key:group_name`

        Where the `group_name` is your designated name for the group of
        customer user settings.

        If the `X-DocuSign-User-Settings-Key` header is not included,
        only the custom user settings that were added without
        a group are deleted.
      operationId: UserCustomSettings_DeleteCustomSettings
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: userId
          in: path
          description: |-
            The ID of the user to access.

            **Note:** Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.
          required: true
          type: string
        - name: customSettingsInformation
          in: body
          required: false
          schema:
            "$ref": "#/definitions/customSettingsInformation"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/customSettingsInformation"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: deleteCustomSettings
      x-ds-method: delete
      x-ds-service: Users
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/users/{userId}/profile":
    get:
      tags:
        - UserProfiles
      summary: Retrieves the user profile for a specified user.
      description: |-
        Retrieves the user profile information, the privacy settings and personal information (address, phone number, etc.) for the specified user.

        The userId parameter specified in the endpoint must match the authenticated user's user ID and the user must be a member of the specified account.
      operationId: UserProfile_GetProfile
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: userId
          in: path
          description: |-
            The ID of the user to access.

            **Note:** Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.
          required: true
          type: string
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/userProfile"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getProfile
      x-ds-method: get
      x-ds-service: Users
      x-ds-in-sdk: true
    put:
      tags:
        - UserProfiles
      summary: Updates the user profile information for the specified user.
      description: |-
        Updates the user's detail information, profile information, privacy settings, and personal information in the user ID card.

        You can also change a user's name by changing the information in the `userDetails` property. When changing a user's name, you can either change the information in the `userName` property OR change the information in `firstName`, `middleName`, `lastName, suffixName`, and `title` properties. Changes to `firstName`, `middleName`, `lastName`, `suffixName`, and `title` properties take precedence over changes to the `userName` property.
      operationId: UserProfile_PutProfile
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: userId
          in: path
          description: |-
            The ID of the user to access.

            **Note:** Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.
          required: true
          type: string
        - name: userProfile
          in: body
          required: false
          schema:
            "$ref": "#/definitions/userProfile"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: updateProfile
      x-ds-method: update
      x-ds-service: Users
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/users/{userId}/profile/image":
    get:
      tags:
        - Users
      summary: Retrieves the user profile image for the specified user.
      description: |
        Retrieves the user profile picture for the specified user.

        The `userId` path parameter must match the authenticated user's user ID,
        and the user must be a member of the specified account.

        | Return value      | Meaning                                                                        |
        | :---------------- | :----------------------------------------------------------------------------- |
        | `200 OK`          | The response contains the profile image in the same format as it was uploaded. |
        | `404 Not found`   | The user does not have a profile image.                                        |
        | `400 Bad request` | There was an error in the request. The response has more information.          |
      operationId: UserProfileImage_GetUserProfileImage
      consumes: []
      produces:
        - image/gif
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: userId
          in: path
          description: |-
            The ID of the user to access.

            **Note:** Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.
          required: true
          type: string
        - name: encoding
          in: query
          required: false
          type: string
          description: Reserved for DocuSign.
      responses:
        "200":
          description: A successful response or an error.
          schema:
            type: file
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getProfileImage
      x-ds-method: getProfileImage
      x-ds-service: Users
      x-ds-in-sdk: true
    put:
      tags:
        - Users
      summary: Updates the user profile image for a specified user.
      description: |-
        Updates the user profile image by uploading an image to the user profile.

        The supported image formats are: gif, png, jpeg, and bmp. The file must be less than 200K. For best viewing results, DocuSign recommends that the image is no more than 79 pixels wide and high.
      operationId: UserProfileImage_PutUserProfileImage
      consumes:
        - image/gif
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: userId
          in: path
          description: |-
            The ID of the user to access.

            **Note:** Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.
          required: true
          type: string
      responses:
        "200":
          description: A successful response or an error.
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: updateProfileImage
      x-ds-method: updateProfileImage
      x-ds-service: Users
      x-ds-in-sdk: true
    delete:
      tags:
        - Users
      summary: Deletes the user profile image for the specified user.
      description: |-
        Deletes the user profile image from the  specified user's profile.

        The userId parameter specified in the endpoint must match the authenticated user's user ID and the user must be a member of the specified account.
      operationId: UserProfileImage_DeleteUserProfileImage
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: userId
          in: path
          description: |-
            The ID of the user to access.

            **Note:** Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.
          required: true
          type: string
      responses:
        "200":
          description: A successful response or an error.
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: deleteProfileImage
      x-ds-method: deleteProfileImage
      x-ds-service: Users
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/users/{userId}/settings":
    get:
      tags:
        - Users
      summary: Gets the user account settings for a specified user.
      description: |+
        Retrieves a list of the account settings and email
        notification information for the specified user.

        The response returns the account setting
        name/value information and the email notification
        settings for the specified user. For more
        information, see
        [Users:create](/docs/esign-rest-api/reference/users/users/create/).


      operationId: UserSettings_GetUserSettings
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: userId
          in: path
          description: |-
            The ID of the user to access.

            **Note:** Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.
          required: true
          type: string
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/userSettingsInformation"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getSettings
      x-ds-method: getSettings
      x-ds-service: Users
      x-ds-in-sdk: true
    put:
      tags:
        - Users
      summary: Updates the user account settings for a specified user.
      description:
        Updates the account settings list and email notification types
        for the specified user.
      operationId: UserSettings_PutUserSettings
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: userId
          in: path
          description: |-
            The ID of the user to access.

            **Note:** Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.
          required: true
          type: string
        - name: allow_all_languages
          in: query
          required: false
          type: string
          description: ""
        - name: userSettingsInformation
          in: body
          required: false
          schema:
            "$ref": "#/definitions/userSettingsInformation"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: updateSettings
      x-ds-method: updateSettings
      x-ds-service: Users
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/users/{userId}/signatures":
    get:
      tags:
        - UserSignatures
      summary: Retrieves a list of signature definitions for a user.
      description:
        "This method retrieves the signature definitions for the user that
        you specify.\n\nThe `userId` parameter specified in the endpoint must match
        the authenticated user's user ID, and the user must be a member of the account.\n\nThe
        `signatureId` parameter accepts a signature ID or a signature name. DocuSign
        recommends you use signature ID (`signatureId`), since some names contain
        characters that do not properly encode into a URL. If you use the user name,
        it is likely that the name includes spaces. In that case, URL encode the name
        before using it in the endpoint. \n\nFor example, encode \"Bob Smith\" as
        \"Bob%20Smith\"."
      operationId: UserSignatures_GetUserSignatures
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: userId
          in: path
          description: |-
            The ID of the user to access.

            **Note:** Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.
          required: true
          type: string
        - name: stamp_type
          in: query
          required: false
          type: string
          description: |-
            The type of stamps to return. Valid values are:

            - `signature`: Returns information about signature images only. This is the default value.
            - `stamp`: Returns information about eHanko and custom stamps only.
            - null
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/userSignaturesInformation"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: listSignatures
      x-ds-method: list
      x-ds-service: Users
      x-ds-in-sdk: true
    put:
      tags:
        - UserSignatures
      summary: Adds/updates a user signature.
      operationId: UserSignatures_PutUserSignature
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: userId
          in: path
          description: |-
            The ID of the user to access.

            **Note:** Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.
          required: true
          type: string
        - name: userSignaturesInformation
          in: body
          required: false
          schema:
            "$ref": "#/definitions/userSignaturesInformation"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/userSignaturesInformation"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: updateSignatures
      description: ""
      x-ds-method: updateList
      x-ds-service: Users
      x-ds-in-sdk: true
    post:
      tags:
        - UserSignatures
      summary: Adds user Signature and initials images to a Signature.
      description:
        "Adds a user signature image and/or user initials image to the
        specified user. \n\nThe userId property specified in the endpoint must match
        the authenticated user's `userId` and the user must be a member of the account.\n\nThe
        rules and processes associated with this are:\n\n* If `Content-Type` is set
        to `application/json`, then the default behavior for creating a default signature
        image, based on the name and a DocuSign font, is used.\n* If `Content-Type`
        is set to `multipart/form-data`, then the request must contain a first part
        with the user signature information, followed by parts that contain the images.\n\nFor
        each Image part, the Content-Disposition header has a \"filename\" value that
        is used to map to the `signatureName` and/or `signatureInitials` properties
        in the JSON to the image. \n\nFor example: \n`Content-Disposition: file; filename=\"Ron
        Test20121127083900\"`\n\nIf no matching image (by filename value) is found,
        then the image is not set. One, both, or neither of the signature and initials
        images can be set with this call.\n\nThe Content-Transfer-Encoding: base64
        header, set in the header for the part containing the image, can be set to
        indicate that the images are formatted as base64 instead of as binary.\n\nIf
        successful, 200-OK is returned, and a JSON structure containing the signature
        information is provided, note that the signatureId can change with each API
        POST, PUT, or DELETE since the changes to the signature structure cause the
        current signature to be closed, and a new signature record to be created."
      operationId: UserSignatures_PostUserSignatures
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: userId
          in: path
          description: |-
            The ID of the user to access.

            **Note:** Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.
          required: true
          type: string
        - name: userSignaturesInformation
          in: body
          required: false
          schema:
            "$ref": "#/definitions/userSignaturesInformation"
          description: ""
      responses:
        "201":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/userSignaturesInformation"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: createSignatures
      x-ds-method: create
      x-ds-service: Users
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/users/{userId}/signatures/{signatureId}":
    get:
      tags:
        - UserSignatures
      summary: Gets the user signature information for the specified user.
      description:
        "Retrieves the structure of a single signature with a known signature
        name.\n\nThe userId specified in the endpoint must match the authenticated
        user's user ID and the user must be a member of the account.\n\nThe `signatureId`
        parameter accepts a signature ID or a signature name. DocuSign recommends
        you use signature ID (`signatureId`), since some names contain characters
        that do not properly encode into a URL. If you use the user name, it is likely
        that the name includes spaces. In that case, URL encode the name before using
        it in the endpoint. \n\nFor example encode \"Bob Smith\" as \"Bob%20Smith\"."
      operationId: UserSignatures_GetUserSignature
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: signatureId
          in: path
          description: The ID of the account stamp.
          required: true
          type: string
        - name: userId
          in: path
          description: |-
            The ID of the user to access.

            **Note:** Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.
          required: true
          type: string
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/userSignature"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getSignature
      x-ds-method: get
      x-ds-service: Users
      x-ds-in-sdk: true
    put:
      tags:
        - UserSignatures
      summary: Updates the user signature for a specified user.
      description: |-
        Creates, or updates, the signature font and initials for the specified user. When creating a signature, you use this resource to create the signature name and then add the signature and initials images into the signature.

        **Note:** This will also create a default signature for the user when one does not exist.

        The userId property specified in the endpoint must match the authenticated user's user ID and the user must be a member of the account.

        The `signatureId` parameter accepts a signature ID. DocuSign recommends you use signature ID (`signatureId`), since some names contain characters that do not properly encode into a URL. If you use the user name, it is likely that the name includes spaces. In that case, URL encode the name before using it in the endpoint.

        For example encode "Bob Smith" as "Bob%20Smith".
      operationId: UserSignatures_PutUserSignatureById
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: signatureId
          in: path
          description: The ID of the account stamp.
          required: true
          type: string
        - name: userId
          in: path
          description: |-
            The ID of the user to access.

            **Note:** Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.
          required: true
          type: string
        - name: close_existing_signature
          in: query
          description: When **true,** closes the current signature.
          required: false
          type: string
        - name: userSignatureDefinition
          in: body
          required: false
          schema:
            "$ref": "#/definitions/userSignatureDefinition"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/userSignature"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: updateSignature
      x-ds-method: update
      x-ds-service: Users
      x-ds-in-sdk: true
    delete:
      tags:
        - UserSignatures
      summary: Removes removes signature information for the specified user.
      description:
        "Removes the signature information for the user.\n\nThe userId
        parameter specified in the endpoint must match the authenticated user's user
        ID and the user must be a member of the account.\n\nThe `signatureId` accepts
        a signature ID or a signature name. DocuSign recommends you use signature
        ID (`signatureId`), since some names contain characters that do not properly
        encode into a URL. If you use the user name, it is likely that the name includes
        spaces. In that case, URL encode the name before using it in the endpoint.
        \n\nFor example encode \"Bob Smith\" as \"Bob%20Smith\"."
      operationId: UserSignatures_DeleteUserSignature
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: signatureId
          in: path
          description: The ID of the account stamp.
          required: true
          type: string
        - name: userId
          in: path
          description: |-
            The ID of the user to access.

            **Note:** Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.
          required: true
          type: string
      responses:
        "200":
          description: A successful response or an error.
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: deleteSignature
      x-ds-method: delete
      x-ds-service: Users
      x-ds-in-sdk: true
    parameters: []
  ? "/v2.1/accounts/{accountId}/users/{userId}/signatures/{signatureId}/{imageType}"
  : get:
      tags:
        - UserSignatures
      summary:
        Retrieves the user initials image or the  user signature image for
        the specified user.
      description: |-
        Retrieves the specified initials image or signature image for the specified user. The image is returned in the same format in which it was uploaded. In the request you can specify if the chrome (the added line and identifier around the initial image) is returned with the image.

        The userId property specified in the endpoint must match the authenticated user's user ID and the user must be a member of the account.

        The `signatureId` parameter accepts a signature ID or a signature name. DocuSign recommends you use signature ID (`signatureId`), since some names contain characters that do not properly encode into a URL. If you use the user name, it is likely that the name includes spaces. In that case, URL encode the name before using it in the endpoint.

        For example encode "Bob Smith" as "Bob%20Smith".

        **Note:** Older envelopes might only have chromed images. If getting the non-chromed image fails, try getting the chromed image.
      operationId: UserSignatures_GetUserSignatureImage
      consumes: []
      produces:
        - image/gif
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: imageType
          in: path
          description: |-
            Specificies the type of image. Valid values:

            - `stamp_image`
            - `signature_image`
            - `initials_image`
          required: true
          type: string
        - name: signatureId
          in: path
          description: The ID of the account stamp.
          required: true
          type: string
        - name: userId
          in: path
          description: |-
            The ID of the user to access.

            **Note:** Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.
          required: true
          type: string
        - name: include_chrome
          in: query
          required: false
          type: string
          description:
            When **true,** the chrome (or frame containing the added line
            and identifier) is included with the signature image.
      responses:
        "200":
          description: A successful response or an error.
          schema:
            type: file
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getSignatureImage
      x-ds-method: getImage
      x-ds-service: Users
      x-ds-in-sdk: true
    put:
      tags:
        - UserSignatures
      summary:
        Updates the user signature image or user initials image for the specified
        user.
      description:
        "Updates the user signature image or user initials image for the
        specified user. The supported image formats for this file are: gif, png, jpeg,
        and bmp. The file must be less than 200K.\n\nThe userId property specified
        in the endpoint must match the authenticated user's user ID and the user must
        be a member of the account.\n\nThe `signatureId` parameter accepts a signature
        ID or a signature name. DocuSign recommends you use signature ID (`signatureId`),
        since some names contain characters that do not properly encode into a URL.
        If you use the user name, it is likely that the name includes spaces. In that
        case, URL encode the name before using it in the endpoint. \n\nFor example
        encode \"Bob Smith\" as \"Bob%20Smith\".\n"
      operationId: UserSignatures_PutUserSignatureImage
      consumes:
        - image/gif
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: imageType
          in: path
          description: |-
            Specificies the type of image. Valid values:

            - `stamp_image`
            - `signature_image`
            - `initials_image`
          required: true
          type: string
        - name: signatureId
          in: path
          description: The ID of the account stamp.
          required: true
          type: string
        - name: userId
          in: path
          description: |-
            The ID of the user to access.

            **Note:** Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.
          required: true
          type: string
        - name: transparent_png
          in: query
          required: false
          type: string
          description: ""
        - name: imageBytes
          in: body
          description: Image content.
          required: true
          schema:
            format: binary
            type: string
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/userSignature"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: updateSignatureImage
      x-ds-method: updateImage
      x-ds-service: Users
      x-ds-in-sdk: true
    delete:
      tags:
        - UserSignatures
      summary:
        Deletes the user initials image or the  user signature image for the
        specified user.
      description:
        "Deletes the specified initials image or signature image for the
        specified user.\n\nThe function deletes one or the other of the image types,
        to delete both the initials image and signature image you must call the endpoint
        twice.\n\nThe userId parameter specified in the endpoint must match the authenticated
        user's user ID and the user must be a member of the account.\n\nThe `signatureId`
        parameter accepts a signature ID or a signature name. DocuSign recommends
        you use signature ID (`signatureId`), since some names contain characters
        that do not properly encode into a URL. If you use the user name, it is likely
        that the name includes spaces. In that case, URL encode the name before using
        it in the endpoint. \n\nFor example encode \"Bob Smith\" as \"Bob%20Smith\"."
      operationId: UserSignatures_DeleteUserSignatureImage
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: imageType
          in: path
          description: |-
            Specificies the type of image. Valid values:

            - `stamp_image`
            - `signature_image`
            - `initials_image`
          required: true
          type: string
        - name: signatureId
          in: path
          description: The ID of the account stamp.
          required: true
          type: string
        - name: userId
          in: path
          description: |-
            The ID of the user to access.

            **Note:** Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.
          required: true
          type: string
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/userSignature"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: deleteSignatureImage
      x-ds-method: deleteImage
      x-ds-service: Users
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/views/console":
    post:
      tags:
        - EnvelopeViews
      summary: Returns a URL to the DocuSign UI.
      description: |
        Returns a URL that enables you to embed the DocuSign UI in your applications. To view a specific envelope, set the `envelopeId` property in the request body.

        ## Information security notice

        This method provides full access to the sending account.

        ### Related topics

        - [How to embed the DocuSign UI in your app](/docs/esign-rest-api/how-to/embed-ui/)
      operationId: Views_PostAccountConsoleView
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: consoleViewRequest
          in: body
          required: false
          schema:
            "$ref": "#/definitions/consoleViewRequest"
          description: ""
      responses:
        "201":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/EnvelopeViews"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: createConsoleView
      x-ds-method: createConsole
      x-ds-service: Envelopes
      x-ds-in-sdk: true
      x-ds-examples:
        - description: |+
            The response contains the URL
            of the account's console.

            The request body contains
            a `returnUrl`.
            This is the URL
            that the DocuSign platform
            will redirect the user to
            when the view is closed.

          direction: both
          format: json
          response:
            url: https://demo.docusign.net/Member/StartInSession.aspx?StartConsole=1&t=644ea697-xxxx-xxxx-xxxx-d95a5c23340b&accountid=624e3e00-xxxx-xxxx-xxxx-43918c520dab
          request:
            returnUrl: https://dsapp.example.com/return/from/console/view
          style: custom
          title: Getting a Console View URL and Setting a Return URL
    parameters: []
  "/v2.1/accounts/{accountId}/watermark":
    get:
      tags:
        - AccountWatermarks
      summary: Get watermark information.
      operationId: Watermark_GetWatermark
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/watermark"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getWatermark
      description: Enables you to preview a watermark specified by the request.
      x-ds-method: get
      x-ds-service: Accounts
      x-ds-in-sdk: true
    put:
      tags:
        - AccountWatermarks
      summary: Update watermark information.
      operationId: Watermark_PutWatermark
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: watermark
          in: body
          required: false
          schema:
            "$ref": "#/definitions/watermark"
          description:
            "When **true,** the account has the watermark feature enabled,
            and the envelope is not complete, then the watermark for the account is
            added to the PDF documents. This option can remove the watermark. "
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/watermark"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: updateWatermark
      description: Returns information about the watermark for the account.
      x-ds-method: update
      x-ds-service: Accounts
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/watermark/preview":
    put:
      tags:
        - AccountWatermarks
      summary: Get watermark preview.
      operationId: WatermarkPreview_PutWatermarkPreview
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: watermark
          in: body
          required: false
          schema:
            "$ref": "#/definitions/watermark"
          description:
            "When **true,** the account has the watermark feature enabled,
            and the envelope is not complete, then the watermark for the account is
            added to the PDF documents. This option can remove the watermark. "
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/watermark"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getWatermarkPreview
      description: |-
        Update the watermark for the account.

        **Note:** Many of the request fields must be set to specific values. If you use an invalid value for one of these fields, the endpoint may return 200 OK but set the field to a default value. See the request body for more information.
      x-ds-method: preview
      x-ds-service: Accounts
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/workspaces":
    get:
      tags:
        - Workspaces
      summary: List Workspaces
      description: Gets information about the Workspaces that have been created.
      operationId: Workspace_GetWorkspaces
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/workspaceList"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: listWorkspaces
      x-ds-method: list
      x-ds-service: Workspaces
      x-ds-in-sdk: true
    post:
      tags:
        - Workspaces
      summary: Create a Workspace
      description: This method creates a new workspace.
      operationId: Workspace_PostWorkspace
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: workspace
          in: body
          required: false
          schema:
            "$ref": "#/definitions/workspace"
          description: ""
      responses:
        "201":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/workspace"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: createWorkspace
      x-ds-method: create
      x-ds-service: Workspaces
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/workspaces/{workspaceId}":
    get:
      tags:
        - Workspaces
      summary: Get Workspace
      description: "Retrieves properties about a workspace given a unique workspaceId. "
      operationId: Workspace_GetWorkspace
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: workspaceId
          in: path
          description: The ID of the workspace.
          required: true
          type: string
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/workspace"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getWorkspace
      x-ds-method: get
      x-ds-service: Workspaces
      x-ds-in-sdk: true
    put:
      tags:
        - Workspaces
      summary: Update Workspace
      description: Updates information about a specific workspace.
      operationId: Workspace_PutWorkspace
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: workspaceId
          in: path
          description: The ID of the workspace.
          required: true
          type: string
        - name: workspace
          in: body
          required: false
          schema:
            "$ref": "#/definitions/workspace"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/workspace"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: updateWorkspace
      x-ds-method: update
      x-ds-service: Workspaces
      x-ds-in-sdk: true
    delete:
      tags:
        - Workspaces
      summary: Delete Workspace
      description: Deletes an existing workspace (logically).
      operationId: Workspace_DeleteWorkspace
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: workspaceId
          in: path
          description: The ID of the workspace.
          required: true
          type: string
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/workspace"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: deleteWorkspace
      x-ds-method: delete
      x-ds-service: Workspaces
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/{accountId}/workspaces/{workspaceId}/folders/{folderId}":
    get:
      tags:
        - WorkspaceItems
      summary: List workspace folder contents
      description:
        This method returns the contents of a workspace folder, which can
        include sub-folders and files.
      operationId: WorkspaceFolder_GetWorkspaceFolder
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: folderId
          in: path
          description: The ID of the folder.
          required: true
          type: string
        - name: workspaceId
          in: path
          description: The ID of the workspace.
          required: true
          type: string
        - name: count
          in: query
          description: |
            The maximum number of results to return.

            Use `start_position` to specify the number of results to skip.
          required: false
          type: string
        - name: include_files
          in: query
          description:
            When **true,** the response includes file information (in addition
            to folder information). The default is **false.**
          required: false
          type: string
        - name: include_sub_folders
          in: query
          description:
            When **true,** the response includes information about the sub-folders
            of the current folder. The default is **false.**
          required: false
          type: string
        - name: include_thumbnails
          in: query
          description:
            When **true,** the response returns thumbnails.  The default
            is **false.**
          required: false
          type: string
        - name: include_user_detail
          in: query
          description:
            When **true,** the response includes extended details about the
            user. The default is **false.**
          required: false
          type: string
        - name: start_position
          in: query
          description: |
            The zero-based index of the
            result from which to start returning results.

            Use with `count` to limit the number
            of results.

            The default value is `0`.
          required: false
          type: string
        - name: workspace_user_id
          in: query
          description:
            If set, the response only includes results associated with the
            `userId` that you specify.
          required: false
          type: string
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/workspaceFolderContents"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: listWorkspaceFolderItems
      x-ds-method: listFolderItems
      x-ds-service: Workspaces
      x-ds-in-sdk: true
    delete:
      tags:
        - WorkspaceItems
      summary: Deletes files or sub-folders from a workspace.
      operationId: WorkspaceFolder_DeleteWorkspaceItems
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: folderId
          in: path
          description: The ID of the folder.
          required: true
          type: string
        - name: workspaceId
          in: path
          description: The ID of the workspace.
          required: true
          type: string
        - name: workspaceItemList
          in: body
          required: false
          schema:
            "$ref": "#/definitions/workspaceItemList"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: deleteWorkspaceFolderItems
      description: |-
        This method deletes one or more files or sub-folders from a workspace folder or root.

        Note: To delete items from a workspace, the `status` of the workspace must be `active`.
      x-ds-method: deleteFolderItems
      x-ds-service: Workspaces
      x-ds-in-sdk: true
    parameters: []
  ? "/v2.1/accounts/{accountId}/workspaces/{workspaceId}/folders/{folderId}/files"
  : post:
      tags:
        - WorkspaceItems
      summary: Creates a workspace file.
      operationId: WorkspaceFile_PostWorkspaceFiles
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: folderId
          in: path
          description: The ID of the folder.
          required: true
          type: string
        - name: workspaceId
          in: path
          description: The ID of the workspace.
          required: true
          type: string
      responses:
        "201":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/workspaceItem"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: createWorkspaceFile
      description: This method adds a file to a workspace.
      x-ds-method: createFIle
      x-ds-service: Workspaces
      x-ds-in-sdk: true
    parameters: []
  ? "/v2.1/accounts/{accountId}/workspaces/{workspaceId}/folders/{folderId}/files/{fileId}"
  : get:
      tags:
        - WorkspaceItems
      summary: Gets a workspace file
      description: This method returns a binary version of a file in a workspace.
      operationId: WorkspaceFile_GetWorkspaceFile
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: fileId
          in: path
          description: The ID of the file.
          required: true
          type: string
        - name: folderId
          in: path
          description: The ID of the folder.
          required: true
          type: string
        - name: workspaceId
          in: path
          description: The ID of the workspace.
          required: true
          type: string
        - name: is_download
          in: query
          description:
            When **true,** the `Content-Disposition` header is set in the
            response. The value of the header provides the filename of the file. The
            default is **false.**
          required: false
          type: string
        - name: pdf_version
          in: query
          description: When **true** the file is returned in PDF format.
          required: false
          type: string
      responses:
        "200":
          description: A successful response or an error.
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getWorkspaceFile
      x-ds-method: getFile
      x-ds-service: Workspaces
      x-ds-in-sdk: true
    put:
      tags:
        - WorkspaceItems
      summary: Update workspace file or folder metadata
      description:
        This method updates the metadata for one or more specific files
        or folders in a workspace.
      operationId: WorkspaceFile_PutWorkspaceFile
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: fileId
          in: path
          description: The ID of the file.
          required: true
          type: string
        - name: folderId
          in: path
          description: The ID of the folder.
          required: true
          type: string
        - name: workspaceId
          in: path
          description: The ID of the workspace.
          required: true
          type: string
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/workspaceItem"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: updateWorkspaceFile
      x-ds-method: updateFile
      x-ds-service: Workspaces
      x-ds-in-sdk: true
    parameters: []
  ? "/v2.1/accounts/{accountId}/workspaces/{workspaceId}/folders/{folderId}/files/{fileId}/pages"
  : get:
      tags:
        - WorkspaceItems
      summary: List File Pages
      description: This method returns a workspace file as rasterized pages.
      operationId: WorkspaceFilePages_GetWorkspaceFilePages
      consumes: []
      produces: []
      parameters:
        - name: accountId
          in: path
          description: The external account number (int) or account ID GUID.
          required: true
          type: string
        - name: fileId
          in: path
          description: The ID of the file.
          required: true
          type: string
        - name: folderId
          in: path
          description: The ID of the folder.
          required: true
          type: string
        - name: workspaceId
          in: path
          description: The ID of the workspace.
          required: true
          type: string
        - name: count
          in: query
          description: |
            The maximum number of results to return.

            Use `start_position` to specify the number of results to skip.
          required: false
          type: string
        - name: dpi
          in: query
          description:
            The number of dots per inch (DPI) for the resulting images. Valid
            values are 1-310 DPI. The default value is 94.
          required: false
          type: string
        - name: max_height
          in: query
          description: Sets the maximum height of the returned images in pixels.
          required: false
          type: string
        - name: max_width
          in: query
          description: Sets the maximum width of the returned images in pixels.
          required: false
          type: string
        - name: start_position
          in: query
          description: |
            The zero-based index of the
            result from which to start returning results.

            Use with `count` to limit the number
            of results.

            The default value is `0`.
          required: false
          type: string
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/pageImages"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: listWorkspaceFilePages
      x-ds-method: listFilePages
      x-ds-service: Workspaces
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/accounts/provisioning":
    get:
      tags:
        - Accounts
      summary: Retrieves the account provisioning information for the account.
      description: Retrieves the account provisioning information for the account.
      operationId: Accounts_GetProvisioning
      consumes: []
      produces: []
      parameters: []
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/provisioningInformation"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getProvisioning
      x-ds-method: getProvisioning
      x-ds-service: Accounts
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/billing_plans":
    get:
      tags:
        - BillingPlans
      summary: Gets a list of available billing plans.
      description: Retrieves a list of the billing plans associated with a distributor.
      operationId: BillingPlans_GetBillingPlans
      consumes: []
      produces: []
      parameters: []
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/billingPlansResponse"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: listBillingPlans
      x-ds-method: list
      x-ds-service: Billing
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/billing_plans/{billingPlanId}":
    get:
      tags:
        - BillingPlans
      summary: Gets billing plan details.
      description:
        Retrieves the billing plan details for the specified billing plan
        ID.
      operationId: BillingPlans_GetBillingPlan
      consumes: []
      produces: []
      parameters:
        - name: billingPlanId
          in: path
          description: The ID of the billing plan being accessed.
          required: true
          type: string
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/billingPlanResponse"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getBillingPlan
      x-ds-method: get
      x-ds-service: Billing
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/current_user/notary":
    get:
      tags:
        - Notary
      summary: Gets settings for a  notary user.
      operationId: Notary_GetNotary
      consumes: []
      produces: []
      parameters:
        - name: include_jurisdictions
          in: query
          required: false
          type: string
          description:
            When **true,** the response will include a `jurisdiction` property
            that contains an array of all supported jurisdictions for the current user.
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/notaryResult"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getNotary
      description: |-
        Gets settings for a notary user.
        The current user must be a notary.
      x-ds-method: getNotary
      x-ds-service: Uncategorized
      x-ds-in-sdk: true
    put:
      tags:
        - Notary
      summary: Updates notary information for the current user.
      operationId: Notary_PutNotary
      consumes: []
      produces: []
      parameters:
        - name: notary
          in: body
          required: false
          schema:
            "$ref": "#/definitions/notary"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/notary"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: updateNotary
      description: Updates notary information for the current user.
      x-ds-method: updateNotary
      x-ds-service: Uncategorized
      x-ds-in-sdk: true
    post:
      tags:
        - Notary
      summary: Registers the current user as a notary.
      operationId: Notary_PostNotary
      consumes: []
      produces: []
      parameters:
        - name: notary
          in: body
          required: false
          schema:
            "$ref": "#/definitions/notary"
          description: ""
      responses:
        "201":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/notary"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: createNotary
      description: Registers the current user as a notary.
      x-ds-method: createNotary
      x-ds-service: Uncategorized
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/current_user/notary/journals":
    get:
      tags:
        - NotaryJournals
      summary: Gets notary jurisdictions for a user.
      operationId: NotaryJournals_GetNotaryJournals
      consumes: []
      produces: []
      parameters:
        - name: count
          in: query
          required: false
          type: string
          description: The maximum number of results to return.
        - name: search_text
          in: query
          required: false
          type: string
          description: Use this parameter to search for specific text.
        - name: start_position
          in: query
          required: false
          type: string
          description:
            The position within the total result set from which to start
            returning values. The value **thumbnail** may be used to return the page
            image.
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/notaryJournalList"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: listNotaryJournals
      description: ""
      x-ds-method: list
      x-ds-service: Notary
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/current_user/notary/jurisdictions":
    get:
      tags:
        - NotaryJurisdiction
      summary: Returns a list of jurisdictions that the notary is registered in.
      operationId: NotaryJurisdictions_GetNotaryJurisdictions
      consumes: []
      produces: []
      parameters: []
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/notaryJurisdictionList"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getNotaryJurisdictions
      description: |-
        Returns a list of jurisdictions that the notary is registered in.
        The current user must be a notary.
      x-ds-method: getNotaryJurisdictions
      x-ds-service: Uncategorized
      x-ds-in-sdk: true
    post:
      tags:
        - NotaryJurisdiction
      summary: Creates a jurisdiction object.
      operationId: NotaryJurisdictions_PostNotaryJurisdictions
      consumes: []
      produces: []
      parameters:
        - name: notaryJurisdiction
          in: body
          required: false
          schema:
            "$ref": "#/definitions/notaryJurisdiction"
          description: ""
      responses:
        "201":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/notaryJurisdiction"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: createNotaryJurisdictions
      description: Creates a jurisdiction object.
      x-ds-method: createNotaryJurisdictions
      x-ds-service: Uncategorized
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/current_user/notary/jurisdictions/{jurisdictionId}":
    get:
      tags:
        - NotaryJurisdiction
      summary:
        Gets a jurisdiction object for the current user. The user must be a
        notary.
      operationId: NotaryJurisdictions_GetNotaryJurisdiction
      consumes: []
      produces: []
      parameters:
        - name: jurisdictionId
          in: path
          required: true
          type: string
          description: |
            The ID of the jurisdiction.
            The following jurisdictions
            are supported:

            -  `5 - California`
            -  `6 - Colorado`
            -  `9 - Florida`
            -  `10 - Georgia`
            -  `12 - Idaho`
            -  `13 - Illinois`
            -  `14 - Indiana`
            -  `15 - Iowa`
            -  `17 - Kentucky`
            -  `23 - Minnesota`
            -  `25 - Missouri`
            -  `30 - New Jersey`
            -  `32 - New York`
            -  `33 - North Carolina`
            -  `35 - Ohio`
            -  `37 - Oregon`
            -  `38 - Pennsylvania`
            -  `40 - South Carolina`
            -  `43 - Texas`
            -  `44 - Utah`
            -  `47 - Washington`
            -  `48 - West Virginia`
            -  `49 - Wisconsin`
            -  `62 - Florida Commissioner of Deeds`
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/notaryJurisdiction"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getNotaryJurisdiction
      description: |
        Gets a jurisdiction object for the current user.  The following restrictions apply:

        - The current user must be a notary.
        - The `jurisdictionId` must be a jurisdiction that the notary is registered for.
      x-ds-method: getNotaryJurisdiction
      x-ds-service: Uncategorized
      x-ds-in-sdk: true
    put:
      tags:
        - NotaryJurisdiction
      summary: Updates the jurisdiction information about a notary.
      operationId: NotaryJurisdictions_PutNotaryJurisdiction
      consumes: []
      produces: []
      parameters:
        - name: jurisdictionId
          in: path
          required: true
          type: string
          description: |
            The ID of the jurisdiction.
            The following jurisdictions
            are supported:

            -  `5 - California`
            -  `6 - Colorado`
            -  `9 - Florida`
            -  `10 - Georgia`
            -  `12 - Idaho`
            -  `13 - Illinois`
            -  `14 - Indiana`
            -  `15 - Iowa`
            -  `17 - Kentucky`
            -  `23 - Minnesota`
            -  `25 - Missouri`
            -  `30 - New Jersey`
            -  `32 - New York`
            -  `33 - North Carolina`
            -  `35 - Ohio`
            -  `37 - Oregon`
            -  `38 - Pennsylvania`
            -  `40 - South Carolina`
            -  `43 - Texas`
            -  `44 - Utah`
            -  `47 - Washington`
            -  `48 - West Virginia`
            -  `49 - Wisconsin`
            -  `62 - Florida Commissioner of Deeds`
        - name: notaryJurisdiction
          in: body
          required: false
          schema:
            "$ref": "#/definitions/notaryJurisdiction"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/notaryJurisdiction"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: updateNotaryJurisdiction
      description: |
        Updates the jurisdiction information about a notary.

        The following restrictions apply:

        - The current user must be a notary.
        - The `jurisdictionId` path parameter must be a jurisdiction that the notary is registered for.
        - The `jurisdictionId` path parameter must match the request body's `jurisdiction.jurisdictionId`.

        The request body must have a full `jurisdiction` object for the jurisdiction property.
        The best way to do this is to use `getNotaryJurisdiction` to obtain the current values and update the properties you want to change.

        For example, assume `getNotaryJurisdiction` returns this:

        ```
        {
            "jurisdiction": {
                "jurisdictionId": "15",
                "name": "Iowa",
                "county": "",
                "enabled": "true",
                "countyInSeal": "false",
                "commissionIdInSeal": "true",
                "stateNameInSeal": "true",
                "notaryPublicInSeal": "true",
                "allowSystemCreatedSeal": "true",
                "allowUserUploadedSeal": "false"
            },
            "commissionId": "123456",
            "commissionExpiration": "2020-08-31T07:00:00.0000000Z",
            "registeredName": "Bob Notary",
            "county": "Adams",
            "sealType": "system_created"
        }
        ```

        If you want to change the name of the notary from "Bob Notary" to "Robert Notary", your request body would be:

        ```
        {
            "jurisdiction": {
                "jurisdictionId": "15",
                "name": "Iowa",
                "county": "",
                "enabled": "true",
                "countyInSeal": "false",
                "commissionIdInSeal": "true",
                "stateNameInSeal": "true",
                "notaryPublicInSeal": "true",
                "allowSystemCreatedSeal": "true",
                "allowUserUploadedSeal": "false"
            },
            "commissionId": "123456",
            "commissionExpiration": "2020-08-31T07:00:00.0000000Z",
            "registeredName": "Robert Notary",
            "county": "Adams",
            "sealType": "system_created"
        }
        ```
      x-ds-method: updateNotaryJurisdiction
      x-ds-service: Uncategorized
      x-ds-in-sdk: true
    delete:
      tags:
        - NotaryJurisdiction
      summary: Deletes the specified jurisdiction.
      operationId: NotaryJurisdictions_DeleteNotaryJurisdiction
      consumes: []
      produces: []
      parameters:
        - name: jurisdictionId
          in: path
          required: true
          type: string
          description: |
            The ID of the jurisdiction.
            The following jurisdictions
            are supported:

            -  `5 - California`
            -  `6 - Colorado`
            -  `9 - Florida`
            -  `10 - Georgia`
            -  `12 - Idaho`
            -  `13 - Illinois`
            -  `14 - Indiana`
            -  `15 - Iowa`
            -  `17 - Kentucky`
            -  `23 - Minnesota`
            -  `25 - Missouri`
            -  `30 - New Jersey`
            -  `32 - New York`
            -  `33 - North Carolina`
            -  `35 - Ohio`
            -  `37 - Oregon`
            -  `38 - Pennsylvania`
            -  `40 - South Carolina`
            -  `43 - Texas`
            -  `44 - Utah`
            -  `47 - Washington`
            -  `48 - West Virginia`
            -  `49 - Wisconsin`
            -  `62 - Florida Commissioner of Deeds`
      responses:
        "200":
          description: A successful response or an error.
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: deleteNotaryJurisdiction
      description: Deletes the specified jurisdiction.
      x-ds-method: deleteNotaryJurisdiction
      x-ds-service: Uncategorized
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/current_user/password_rules":
    get:
      tags:
        - AccountPasswordRules
      summary: Gets membership account password rules.
      operationId: PasswordRules_GetPasswordRules
      consumes: []
      produces: []
      parameters: []
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/userPasswordRules"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getPasswordRules
      description: ""
      x-ds-method: getForUser
      x-ds-service: Accounts
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/diagnostics/request_logs":
    get:
      tags:
        - RequestLogs
      summary: Gets the API request logging log files.
      description:
        "Retrieves a list of log entries as a JSON or XML object or as
        a zip file containing the entries.\n\nIf the Accept header is set to `application/zip`,
        the response is a zip file containing individual text files, each representing
        an API request.\n\nIf the Accept header is set to `application/json` or `application/xml`,
        the response returns list of log entries in either JSON or XML. An example
        JSON response body is shown below. "
      operationId: APIRequestLog_GetRequestLogs
      consumes: []
      produces: []
      parameters:
        - name: encoding
          in: query
          required: false
          type: string
          description: Reserved for DocuSign.
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/apiRequestLogsResult"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: listRequestLogs
      x-ds-method: list
      x-ds-service: Diagnostics
      x-ds-in-sdk: true
    delete:
      tags:
        - RequestLogs
      summary: Deletes the request log files.
      description: Deletes the request log files.
      operationId: APIRequestLog_DeleteRequestLogs
      consumes: []
      produces: []
      parameters: []
      responses:
        "200":
          description: A successful response or an error.
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: deleteRequestLogs
      x-ds-method: delete
      x-ds-service: Diagnostics
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/diagnostics/request_logs/{requestLogId}":
    get:
      tags:
        - RequestLogs
      summary: Gets a request logging log file.
      description: |-
        Retrieves information for a single log entry.

        **Request**
        The `requestLogId` property can be retrieved by getting the list of log entries. The Content-Transfer-Encoding header can be set to base64 to retrieve the API request/response as base 64 string. Otherwise the bytes of the request/response are returned.

        **Response**
        If the Content-Transfer-Encoding header was set to base64, the log is returned as a base64 string.
      operationId: APIRequestLog_GetRequestLog
      consumes: []
      produces:
        - text/plain
      parameters:
        - name: requestLogId
          in: path
          required: true
          type: string
          description: The ID of the log entry.
      responses:
        "200":
          description: A successful response or an error.
          schema:
            type: file
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getRequestLog
      x-ds-method: get
      x-ds-service: Diagnostics
      x-ds-in-sdk: true
    parameters: []
  "/v2.1/diagnostics/settings":
    get:
      tags:
        - RequestLogs
      summary: Gets the API request logging settings.
      description: |-
        Retrieves the current API request logging setting for the user and remaining log entries.

        **Response**
        The response includes the current API request logging setting for the user, along with the maximum log entries and remaining log entries.
      operationId: APIRequestLog_GetRequestLogSettings
      consumes: []
      produces: []
      parameters: []
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/diagnosticsSettingsInformation"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: getRequestLogSettings
      x-ds-method: getSettings
      x-ds-service: Diagnostics
      x-ds-in-sdk: true
    put:
      tags:
        - RequestLogs
      summary: Enables or disables API request logging for troubleshooting.
      description: |
        Enables or disables API request logging for troubleshooting.

        When enabled (`apiRequestLogging` is **true**),
        REST API requests and responses for the user are added to a log.
        A log can have up to 50 requests/responses
        and the current number of log entries can be determined
        by getting the settings.
        Logging is automatically disabled when the log limit of 50 is reached.

        You can call
        [Diagnostics: getRequestLog](/docs/esign-rest-api/reference/diagnostics/requestlogs/get/)
        or
        [Diagnostics: listRequestLogs](/docs/esign-rest-api/reference/diagnostics/requestlogs/list/)
        to download the log files (individually or as a zip file).
        Call [Diagnostics: deleteRequestLogs](/docs/esign-rest-api/reference/diagnostics/requestlogs/delete/)
        to clear the log by deleting current entries.

        Private information, such as passwords and integration key information,
        which is normally located in the call header is omitted from the request/response log.

        API request logging only captures requests from the authenticated user.
        Any call that does not authenticate the user and resolve a userId is not logged.
      operationId: APIRequestLog_PutRequestLogSettings
      consumes: []
      produces: []
      parameters:
        - name: diagnosticsSettingsInformation
          in: body
          required: false
          schema:
            "$ref": "#/definitions/diagnosticsSettingsInformation"
          description: ""
      responses:
        "200":
          description: A successful response or an error.
          schema:
            "$ref": "#/definitions/diagnosticsSettingsInformation"
        "400":
          description: Error encountered.
          schema:
            "$ref": "#/definitions/errorDetails"
      deprecated: false
      x-ds-methodname: updateRequestLogSettings
      x-ds-method: updateSettings
      x-ds-service: Diagnostics
      x-ds-in-sdk: true
    parameters: []
definitions:
  accessCodeFormat:
    type: object
    properties:
      formatRequired:
        description: Boolean specifying whether this format configuration is required.
        type: string
      formatRequiredMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          Metadata indicating whether the `formatRequired` property is
          editable.
      letterRequired:
        description:
          Boolean specifying whether alphabetical characters are required
          in the access code string.
        type: string
      letterRequiredMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          Metadata indicating whether the `letterRequired` property is
          editable.
      minimumLength:
        description: Minimum length of the access code string.
        type: string
      minimumLengthMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: Metadata indicating whether the `minimumLength` property is editable.
      numberRequired:
        description:
          Boolean specifying whether numerical characters (0-9) are required
          in the access code string.
        type: string
      numberRequiredMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          Metadata indicating whether the `numberRequired` property is
          editable.
      specialCharacterRequired:
        description:
          Boolean specifying whether special characters are required in
          the access code string. The string cannot contain the special characters
          '<', '>', '&', or '#'.
        type: string
      specialCharacterRequiredMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          Metadata indicating whether the `specialCharacterRequired` property
          is editable.
    description:
      Object specifying the format of the string provided to a recipient
      in order to access an envelope.
    x-ds-definition-name: accessCodeFormat
    x-ms-summary:
      Object specifying the format of the string provided to a recipient
      in order to access an envelope.
  accountAddress:
    description: Contains information about the address associated with the account.
    type: object
    properties:
      address1:
        description: "The first line of the address. Maximum length: 100 characters."
        type: string
      address2:
        description: "The second line of the address. Maximum length: 100 characters."
        type: string
      city:
        description: "The city associated with the address. Maximum length: 40 characters."
        type: string
      country:
        description:
          "The country associated with the address. Maximum length: 50
          characters."
        type: string
      email:
        description: The email address associated with the account.
        type: string
      fax:
        description: The fax number associated with the account.
        type: string
      firstName:
        description:
          "The first name of the user associated with the account. Maximum
          Length: 50 characters."
        type: string
      lastName:
        description: The last name of the user associated with the account.
        type: string
      phone:
        description: The phone number associated with the account.
        type: string
      postalCode:
        description:
          "The postal code associated with the address. Maximum length:
          20 characters."
        type: string
      state:
        description:
          "The state or province associated with the address. Maximum length:
          40 characters."
        type: string
      supportedCountries:
        description: An array of supported countries associated with the account.
        type: array
        items:
          "$ref": "#/definitions/country"
    x-ds-definition-name: accountAddress
    x-ms-summary: Contains information about the address associated with the account.
  accountBillingPlan:
    description: Contains information about an account billing plan.
    type: object
    properties:
      addOns:
        description: Reserved for DocuSign.
        type: array
        items:
          "$ref": "#/definitions/addOn"
      appStoreReceiptExpirationDate:
        description: ""
        type: string
      appStoreReceiptPurchaseDate:
        description: ""
        type: string
      canCancelRenewal:
        description: Reserved for DocuSign.
        type: string
      canUpgrade:
        description:
          When **true,** specifies that you can upgrade the account through
          the API. For GET methods, you must set the `include_metadata` query parameter
          to **true** for this property to appear in the response.
        type: string
      currencyCode:
        description:
          Specifies the [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217)
          currency code to use for the account.
        type: string
      downgradePlanInformation:
        "$ref": "#/definitions/downgradePlanUpdateResponse"
        description: ""
      enableSupport:
        description:
          When **true,** customer support is provided as part of the account
          plan.
        type: string
      includedSeats:
        description: The number of seats (users) included in the plan.
        type: string
      incrementalSeats:
        description: Reserved for DocuSign.
        type: string
      isDowngrade:
        description:
          When **true,** the account has been downgraded from a premium
          account type. Otherwise **false.**
        type: string
      notificationType:
        description: ""
        type: string
      otherDiscountPercent:
        description: " Any other percentage discount for the plan. "
        type: string
      paymentCycle:
        description:
          "The payment cycle associated with the plan. Valid values: \n\n-
          `Monthly`\n- `Annually` "
        type: string
      paymentMethod:
        description:
          " The payment method used with the plan. Valid values: CreditCard,
          PurchaseOrder, Premium, or Freemium. "
        type: string
      perSeatPrice:
        description: |-
          The per-seat price associated with the plan.

          Example: `"456.0000"`
        type: string
      planClassification:
        description:
          "Identifies the type of plan. Examples include:\n\n- `business`\n-
          `corporate`\n- `enterprise` \n- `free`"
        type: string
      planFeatureSets:
        description: |
          A complex type that sets the feature sets for the account. It contains the following information (all string content):

          * currencyFeatureSetPrices - Contains the currencyCode and currencySymbol for the alternate currency values for envelopeFee, fixedFee, seatFee that are configured for this plan feature set.
          * envelopeFee - An incremental envelope cost for plans with envelope overages (when isEnabled=true).
          * featureSetId - A unique ID for the feature set.
          * fixedFee - A one-time fee associated with the plan (when isEnabled=true).
          * isActive - Specifies whether the feature set is actively set as part of the plan.
          * isEnabled - Specifies whether the feature set is actively enabled as part of the plan.
          * name - The name of the feature set.
          * seatFee - An incremental seat cost for seat-based plans (when isEnabled=true).
        type: array
        items:
          "$ref": "#/definitions/featureSet"
      planId:
        description: DocuSign's ID for the account plan.
        type: string
      planName:
        description: The name of the Billing Plan.
        type: string
      planStartDate:
        description: The date that the Account started using the current plan.
        type: string
      productId:
        description: The Product ID from the AppStore.
        type: string
      renewalDate:
        description: ""
        type: string
      renewalStatus:
        description: |-
          The renewal status for the account. Valid values are:

          * `auto`: The account automatically renews.
          * `queued_for_close`: The account will be closed at the `billingPeriodEndDate`.
          * `queued_for_downgrade`: The account will be downgraded at the `billingPeriodEndDate`.

          **Note:** For GET methods, you must set the `include_metadata` query parameter to **true** for this property to appear in the response.
        type: string
      seatDiscounts:
        description:
          " A complex type that contains any seat discount information.
          Valid values:\n \n - `BeginSeatCount` \n - `EndSeatCount`\n - `SeatDiscountPercent`\n
          \n"
        type: array
        items:
          "$ref": "#/definitions/seatDiscount"
      subscriptionStartDate:
        description: ""
        type: string
      supportIncidentFee:
        description: |-
          The support incident fee charged for each support incident.

          Example: `"$0.00"`
        type: string
      supportPlanFee:
        description: |-
          The support plan fee charged for this plan.

          Example: `"$0.00"`
        type: string
      taxExemptId:
        description: ""
        type: string
    x-ds-definition-name: accountBillingPlan
    x-ms-summary: Contains information about an account billing plan.
  accountBillingPlanResponse:
    description: Defines an account billing plan response object.
    type: object
    properties:
      billingAddress:
        "$ref": "#/definitions/accountAddress"
        description: The billing address for the account.
      billingAddressIsCreditCardAddress:
        description:
          When **true,** the credit card address information is the same
          as that returned as the billing address. If false, then the billing address
          is considered a billing contact address, and the credit card address can
          be different.
        type: string
      billingPlan:
        "$ref": "#/definitions/accountBillingPlan"
        description: An object that contains details about the billing plan.
      creditCardInformation:
        "$ref": "#/definitions/creditCardInformation"
        description:
          A complex type that has information about the credit card used
          to pay for this account.
      directDebitProcessorInformation:
        "$ref": "#/definitions/directDebitProcessorInformation"
        description:
          Information about the bank that processes direct debits for the
          payment plan.
      downgradePlanInformation:
        "$ref": "#/definitions/downgradePlanUpdateResponse"
        description: ""
      downgradeRequestInformation:
        "$ref": "#/definitions/downgradeRequestInformation"
        description: ""
      entityInformation:
        "$ref": "#/definitions/billingEntityInformationResponse"
        description: ""
      paymentMethod:
        description: |-
          The payment method used for the billing plan. Valid values are:

          - `NotSupported`
          - `CreditCard`
          - `PurchaseOrder`
          - `Premium`
          - `Freemium`
          - `FreeTrial`
          - `AppStore`
          - `DigitalExternal`
          - `DirectDebit`
        type: string
      paymentProcessorInformation:
        "$ref": "#/definitions/paymentProcessorInformation"
        description:
          Information about the entity that processes payments for the
          billing plan.
      referralInformation:
        "$ref": "#/definitions/referralInformation"
        description:
          A complex type that contains properties for entering referral
          and discount information.
      successorPlans:
        description:
          A list of billing plans that the current billing plan can be
          rolled into.
        type: array
        items:
          "$ref": "#/definitions/billingPlan"
      taxExemptId:
        description: ""
        type: string
    x-ds-definition-name: accountBillingPlanResponse
    x-ms-summary: Defines an account billing plan response object.
  accountIdentityInputOption:
    type: object
    properties:
      isRequired:
        description: ""
        type: boolean
      optionName:
        description: ""
        type: string
      valueType:
        description: ""
        type: string
    x-ds-definition-name: accountIdentityInputOption
    description: ""
    x-ms-summary: ""
  accountIdentityVerificationResponse:
    type: object
    properties:
      identityVerification:
        description:
          Specifies the ID Verification workflow applied on an envelope
          by workflow ID. <br/>See the [list](/docs/esign-rest-api/reference/accounts/identityverifications/list/)
          method in the [IdentityVerifications](/docs/esign-rest-api/reference/accounts/identityverifications/)
          resource for more information on how to retrieve workflow IDs available
          for an account. <br/>This can be used in addition to other [recipient authentication](https://support.docusign.com/s/document-item?bundleId=gav1643676262430&topicId=kzp1578456318101.html)
          methods. <br/>Note that ID Verification and ID Check are two distinct methods.
          ID Verification checks recipients' identity by verifying their ID while
          ID Check relies on data available on public records (such as current and
          former address).
        type: array
        items:
          "$ref": "#/definitions/accountIdentityVerificationWorkflow"
    x-ds-definition-name: accountIdentityVerificationResponse
    description: ""
    x-ms-summary: ""
  accountIdentityVerificationStep:
    type: object
    properties:
      name:
        description: The name of the Identity Verification workflow step.
        type: string
      type:
        description: Reserved for DocuSign.
        type: string
    description: Information about a specific step in an Identity Verification workflow.
    x-ds-definition-name: accountIdentityVerificationStep
    x-ms-summary: Information about a specific step in an Identity Verification workflow.
  accountIdentityVerificationWorkflow:
    type: object
    properties:
      defaultDescription:
        description: Text describing the purpose of the Identity Verification workflow.
        type: string
      defaultName:
        description: The name of the Identity Verification workflow.
        type: string
      inputOptions:
        description: ""
        type: array
        items:
          "$ref": "#/definitions/accountIdentityInputOption"
      isDisabled:
        description: When **true,** the workflow is disabled.
        type: string
      ownerType:
        description: ""
        type: string
      signatureProvider:
        "$ref": "#/definitions/accountSignatureProvider"
        description:
          The signature provider associated with the Identity Verification
          workflow.
      workflowId:
        description: |-
          Workflow unique ID</br>This is the ID you must specify when setting ID Verification in an envelope using the `identityVerification`
          [core recipient parameter](/docs/esign-rest-api/reference/envelopes/enveloperecipients/#core-recipient-parameters)
        type: string
      workflowLabel:
        description: ""
        type: string
      workflowResourceKey:
        description: Reserved for DocuSign.
        type: string
    description: Specifies an Identity Verification workflow.
    x-ds-definition-name: accountIdentityVerificationWorkflow
    x-ms-summary: Specifies an Identity Verification workflow.
  accountInformation:
    description: Contains account Information.
    type: object
    properties:
      accountIdGuid:
        description: The GUID associated with the account ID.
        type: string
      accountName:
        description: The name of the current account.
        type: string
      accountSettings:
        "$ref": "#/definitions/accountSettingsInformation"
        description: |+
          The list of
          account settings accountsettings
          that determine
          the features available for the account.
          Note that some features are determined
          by the plan used to create the account and cannot be overridden.

      allowTransactionRooms:
        description:
          When **true,** the transaction rooms feature exposed through
          the Workspaces API is enabled.
        type: string
      billingPeriodDaysRemaining:
        description: Number of days remaining in the current billing period.
        type: string
      billingPeriodEndDate:
        description: The billing period end date in UTC timedate format.
        type: string
      billingPeriodEnvelopesAllowed:
        description:
          The number of envelopes that can be sent in the current billing
          period (can be unlimited).
        type: string
      billingPeriodEnvelopesSent:
        description:
          The number of envelopes that have been sent in the current billing
          period.
        type: string
      billingPeriodStartDate:
        description: The billing period start date in UTC timedate format.
        type: string
      billingProfile:
        description: "Reserved for DocuSign.

          "
        type: string
      brands:
        "$ref": "#/definitions/AccountBrands"
        description: A list of brands.
      canUpgrade:
        description:
          When **true,** specifies that you can upgrade the account through
          the API. For GET methods, you must set the `include_metadata` query parameter
          to **true** for this property to appear in the response.
        type: string
      connectPermission:
        description: ""
        type: string
      createdDate:
        description: The creation date of the account in UTC timedate format.
        type: string
      currencyCode:
        description:
          Specifies the [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217)
          currency code for the account.
        type: string
      currentPlanId:
        description: ID of the plan used to create this account.
        type: string
      displayApplianceStartUrl:
        description: ""
        type: string
      displayApplianceUrl:
        description: ""
        type: string
      distributorCode:
        description:
          The code that identifies the billing plan groups and plans for
          the new account.
        type: string
      docuSignLandingUrl:
        description: URL of the landing page used to create the account.
        type: string
      dssValues:
        description: ""
        type: object
        additionalProperties:
          type: string
      envelopeSendingBlocked:
        description:
          When **true,** the ability to send envelopes is blocked. When
          **false,** envelopes can be sent.
        type: string
      envelopeUnitPrice:
        description:
          The price of sending an envelope, represented in the account's
          local currency.
        type: string
      externalAccountId:
        description: The Account ID displayed on the user's Account page.
        type: string
      forgottenPasswordQuestionsCount:
        description:
          " A complex element that contains up to four Question/Answer
          pairs for forgotten password information for a user."
        type: string
      isDowngrade:
        description:
          When **true,** the account has been downgraded from a premium
          account type. Otherwise **false.**
        type: string
      paymentMethod:
        description: |-
          The payment method used for the billing plan. Valid values are:

          - `NotSupported`
          - `CreditCard`
          - `PurchaseOrder`
          - `Premium`
          - `Freemium`
          - `FreeTrial`
          - `AppStore`
          - `DigitalExternal`
          - `DirectDebit`
        type: string
      planClassification:
        description:
          "Identifies the type of plan. Examples include:\n\n- `business`\n-
          `corporate`\n- `enterprise` \n- `free`"
        type: string
      planEndDate:
        description: The date that the current plan will end.
        type: string
      planName:
        description: The name of the Billing Plan.
        type: string
      planStartDate:
        description: The date that the Account started using the current plan.
        type: string
      recipientDomains:
        description: ""
        type: array
        items:
          "$ref": "#/definitions/recipientDomain"
      seatsAllowed:
        description: The number of active users the account can have at one time.
        type: string
      seatsInUse:
        description: The number of users currently active on the account.
        type: string
      status21CFRPart11:
        description:
          The status of the account content per (Title 21 CFR Part 11)[https://www.fda.gov/regulatory-information/search-fda-guidance-documents/part-11-electronic-records-electronic-signatures-scope-and-application].
          This regulation defines the criteria under which electronic records and
          electronic signatures are considered trustworthy.
        type: string
      suspensionDate:
        description: The date on which the account was suspended.
        type: string
      suspensionStatus:
        description: Indicates whether the account is currently suspended.
        type: string
      useDisplayAppliance:
        description: ""
        type: boolean
    x-ds-definition-name: accountInformation
    x-ms-summary: Contains account Information.
  accountMinimumPasswordLength:
    type: object
    properties:
      maximumLength:
        description:
          The maximum number of entry characters supported by the custom
          tab.
        type: string
      minimumLength:
        description: Minimum length of the access code string.
        type: string
    x-ds-definition-name: accountMinimumPasswordLength
    description: ""
    x-ms-summary: ""
  accountNotification:
    type: object
    properties:
      expirations:
        "$ref": "#/definitions/expirations"
        description:
          A complex element that specifies the expiration settings for
          the envelope.
      reminders:
        "$ref": "#/definitions/reminders"
        description: A complex element that specifies reminder settings for the envelope.
      userOverrideEnabled:
        description: When **true,** the user can override envelope expirations.
        type: string
    description:
      A complex element that specifies notifications (expirations and reminders)
      for the envelope.
    x-ds-definition-name: accountNotification
    x-ms-summary:
      A complex element that specifies notifications (expirations and
      reminders) for the envelope.
  accountPasswordExpirePasswordDays:
    type: object
    properties:
      maximumDays:
        description: ""
        type: string
      minimumDays:
        description: ""
        type: string
    x-ds-definition-name: accountPasswordExpirePasswordDays
    description: ""
    x-ms-summary: ""
  accountPasswordLockoutDurationMinutes:
    type: object
    properties:
      maximumMinutes:
        description: ""
        type: string
      minimumMinutes:
        description: ""
        type: string
    x-ds-definition-name: accountPasswordLockoutDurationMinutes
    description: ""
    x-ms-summary: ""
  accountPasswordLockoutDurationType:
    type: object
    properties:
      options:
        description: An array of option strings supported by this setting.
        type: array
        items:
          type: string
    x-ds-definition-name: accountPasswordLockoutDurationType
    description: ""
    x-ms-summary: ""
  accountPasswordMinimumPasswordAgeDays:
    type: object
    properties:
      maximumAge:
        description: ""
        type: string
      minimumAge:
        description: ""
        type: string
    x-ds-definition-name: accountPasswordMinimumPasswordAgeDays
    description: ""
    x-ms-summary: ""
  accountPasswordQuestionsRequired:
    type: object
    properties:
      maximumQuestions:
        description:
          The maximum number of password reset questions allowed for the
          account. This number must be between `0` and `4`, and equal to or greater
          than `minimumQuestions`.
        type: string
      minimumQuestions:
        description:
          The minimum number of password reset questions allowed for the
          account. This number must be between `0` and `4`, and equal to or less than
          `maximumQuestions`.
        type: string
    description:
      Information about the number of password questions required (0 to
      4) to confirm a user's identity when a user needs to reset their password.
    x-ds-definition-name: accountPasswordQuestionsRequired
    x-ms-summary:
      Information about the number of password questions required (0 to
      4) to confirm a user's identity when a user needs to reset their password.
  accountPasswordRules:
    type: object
    properties:
      expirePassword:
        description: When **true,** passwords expire. The default value is `false`.
        type: string
      expirePasswordDays:
        description:
          The number of days before passwords expire. To use this property,
          the `expirePassword` property must be set to **true.**
        type: string
      expirePasswordDaysMetadata:
        "$ref": "#/definitions/accountPasswordExpirePasswordDays"
        description:
          "Metadata that indicates whether the `expirePasswordDays` property
          is editable.

          "
      lockoutDurationMinutes:
        description:
          The number of minutes a user is locked out of the system after
          three failed login attempts. The default value is `2`.
        type: string
      lockoutDurationMinutesMetadata:
        "$ref": "#/definitions/accountPasswordLockoutDurationMinutes"
        description:
          "Metadata that indicates whether the `lockoutDurationMinutes`
          property is editable.

          "
      lockoutDurationType:
        description: |-
          The interval associated with the user lockout after a failed login attempt.

          Possible values are:

          - `minutes` (default)
          - `hours`
          - `days`
        type: string
      lockoutDurationTypeMetadata:
        "$ref": "#/definitions/accountPasswordLockoutDurationType"
        description:
          "Metadata that indicates whether the `lockoutDurationType` property
          is editable.

          "
      minimumPasswordAgeDays:
        description:
          The minimum number of days after a password is set before it
          can be changed. This value can be `0` or more days. The default value is
          `0`.
        type: string
      minimumPasswordAgeDaysMetadata:
        "$ref": "#/definitions/accountPasswordMinimumPasswordAgeDays"
        description:
          "Metadata that indicates whether the `minimumPasswordAgeDays`
          property is editable.

          "
      minimumPasswordLength:
        description:
          The minimum number of characters in the password. This value
          must be a number between `6` and `15`. The default value is `6`.
        type: string
      minimumPasswordLengthMetadata:
        "$ref": "#/definitions/accountMinimumPasswordLength"
        description:
          "Metadata that indicates whether the `minimumPasswordLength`
          property is editable.

          "
      passwordIncludeDigit:
        description:
          When **true,** passwords must include a digit. The default value
          is `false`.
        type: string
      passwordIncludeDigitOrSpecialCharacter:
        description: |-
          When **true,** passwords must include either a digit or a special character. The default value is `false`.

          **Note:** Passwords cannot include angle brackets (`<` `>`) or spaces.
        type: string
      passwordIncludeLowerCase:
        description:
          When **true,** passwords must include a lowercase letter. The
          default value is `false`.
        type: string
      passwordIncludeSpecialCharacter:
        description: |-
          When **true,** passwords must include a special character. The default value is `false`.

          **Note:** Passwords cannot include angle brackets (`<` `>`) or spaces.
        type: string
      passwordIncludeUpperCase:
        description:
          When **true,** passwords must include an uppercase letter. The
          default value is `false`.
        type: string
      passwordStrengthType:
        description: |-
          The type of password strength. Possible values are:

          - `basic`: The minimum password length is 6 characters with no other password requirements.
          - `medium`: The minimum password length is 7 characters. Passwords must also have one uppercase letter, one lowercase letter, and one number or special character.
          - `strong`: The minimum password length is 9 characters. Passwords must also have one uppercase letter, one lowercase letter, one number, and one special character.
          - `custom`: This option enables you to customize password requirements, including the following properties:

             - `minimumPasswordLength`
             - `minimumPasswordAgeDays`
             - `passwordIncludeDigit`
             - `passwordIncludeDigitOrSpecialCharacter`
             - `passwordIncludeLowerCase`
             - `passwordIncludeSpecialCharacter`
             - `passwordIncludeUpperCase`
             - `questionsRequired`
        type: string
      passwordStrengthTypeMetadata:
        "$ref": "#/definitions/accountPasswordStrengthType"
        description:
          "Metadata that indicates whether the `passwordStrengthType` property
          is editable.

          "
      questionsRequired:
        description:
          The number of security questions required to confirm the user’s
          identity before the user can reset their password. The default value is
          `0`.
        type: string
      questionsRequiredMetadata:
        "$ref": "#/definitions/accountPasswordQuestionsRequired"
        description:
          "Metadata that indicates whether the `questionsRequired` property
          is editable.

          "
    x-ds-definition-name: accountPasswordRules
    description: ""
    x-ms-summary: ""
  accountPasswordStrengthType:
    type: object
    properties:
      options:
        description: An array of option strings supported by this setting.
        type: array
        items:
          "$ref": "#/definitions/accountPasswordStrengthTypeOption"
    x-ds-definition-name: accountPasswordStrengthType
    description: ""
    x-ms-summary: ""
  accountPasswordStrengthTypeOption:
    type: object
    properties:
      minimumLength:
        description: Minimum length of the access code string.
        type: string
      name:
        description: ""
        type: string
      passwordIncludeDigit:
        description:
          When **true,** passwords must include a digit. The default value
          is `false`.
        type: string
      passwordIncludeDigitOrSpecialCharacter:
        description: |-
          When **true,** passwords must include either a digit or a special character. The default value is `false`.

          **Note:** Passwords cannot include angle brackets (`<` `>`) or spaces.
        type: string
      passwordIncludeLowerCase:
        description:
          When **true,** passwords must include a lowercase letter. The
          default value is `false`.
        type: string
      passwordIncludeSpecialCharacter:
        description: |-
          When **true,** passwords must include a special character. The default value is `false`.

          **Note:** Passwords cannot include angle brackets (`<` `>`) or spaces.
        type: string
      passwordIncludeUpperCase:
        description:
          When **true,** passwords must include an uppercase letter. The
          default value is `false`.
        type: string
    x-ds-definition-name: accountPasswordStrengthTypeOption
    description: ""
    x-ms-summary: ""
  accountRoleSettings:
    type: object
    properties:
      allowAccountManagement:
        description: When **true,** users have full administrative access to the account.
        type: string
      allowAccountManagementMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `allowAccountManagement`
          property is editable.

          "
      allowApiAccess:
        description: When **true,** users can manage documents by using the API.
        type: string
      allowApiAccessMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `allowApiAccess` property
          is editable.

          "
      allowApiAccessToAccount:
        description:
          When **true,** users can access the account by using the eSignature
          API.
        type: string
      allowApiAccessToAccountMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `allowApiAccessToAccount`
          property is editable.

          "
      allowApiSendingOnBehalfOfOthers:
        description: When **true,** users can send envelopes on behalf of others.
        type: string
      allowApiSendingOnBehalfOfOthersMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `allowApiSendingOnBehalfOfOthers`
          property is editable.

          "
      allowApiSequentialSigning:
        description:
          When **true,** users may specify sequential signing recipients
          when they send documents by using the API.
        type: string
      allowApiSequentialSigningMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `allowApiSequentialSigning`
          property is editable.

          "
      allowAutoTagging:
        description: " When **true,** auto-tagging is enabled for the account."
        type: string
      allowAutoTaggingMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          Metadata that indicates whether the `allowAutoTagging` property
          is editable.
      allowBulkSending:
        description: When **true,** bulk sending is enabled for users.
        type: string
      allowBulkSendingMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `allowBulkSending` property
          is editable.

          "
      allowDocuSignDesktopClient:
        description:
          "When **true,** the DocuSign Desktop Client is enabled for users.

          "
        type: string
      allowDocuSignDesktopClientMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `allowDocuSignDesktopClient`
          property is editable.

          "
      allowedAddressBookAccess:
        description: |
          Specifies the level of access that users have to the account's address book. Valid values are:

          - `personal`
          - `useShared`
          - `usePersonalAndShared`
          - `personalAndShared`
        type: string
      allowedAddressBookAccessMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `allowedAddressBookAccess`
          property is editable.

          "
      allowedClickwrapsAccess:
        description: ""
        type: string
      allowedClickwrapsAccessMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      allowedOrchestrationAccess:
        description: ""
        type: string
      allowedOrchestrationAccessMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      allowedTemplateAccess:
        description:
          "Specifies the level of access that users have to account templates.
          Valid values are: \n\n- `none` \n- `use`\n- `create`\n- `share`"
        type: string
      allowedTemplateAccessMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `allowedTemplateAccess`
          property is editable.

          "
      allowedToBeEnvelopeTransferRecipient:
        description:
          "When **true,** users can be recipients of envelopes transferred
          to them by administrators of other accounts. "
        type: string
      allowedToBeEnvelopeTransferRecipientMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `allowedToBeEnvelopeTransferRecipient`
          property is editable.

          "
      allowEnvelopeSending:
        description: When **true,** users can send envelopes.
        type: string
      allowEnvelopeSendingMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `allowEnvelopeSending` property
          is editable.

          "
      allowESealRecipients:
        description:
          When **true,** users can add electronic seal ([eSeal](https://support.docusign.com/s/document-item?bundleId=xcm1643837555908&topicId=isl1578456577247.html))
          recipients.
        type: string
      allowESealRecipientsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          Metadata that indicates whether the `allowESealRecipients` property
          is editable.
      allowPowerFormsAdminToAccessAllPowerFormEnvelopes:
        description:
          When **true,** PowerForm Administrators can access all of the
          PowerForm envelopes associated with the account.
        type: string
      allowPowerFormsAdminToAccessAllPowerFormEnvelopesMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          Metadata that indicates whether the `allowPowerFormsAdminToAccessAllPowerFormEnvelopes`
          property is editable.
      allowSendersToSetRecipientEmailLanguage:
        description:
          When **true,** senders can set the language of the email that
          is sent to recipients.
        type: string
      allowSendersToSetRecipientEmailLanguageMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `allowSendersToSetRecipientEmailLanguage`
          property is editable.

          "
      allowSignerAttachments:
        description: When **true,** users can add requests for attachments from signers.
        type: string
      allowSignerAttachmentsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `allowSignerAttachments`
          property is editable.

          "
      allowSupplementalDocuments:
        description: When **true,** senders can include supplemental documents.
        type: string
      allowSupplementalDocumentsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          Metadata that indicates whether the `allowSupplementalDocuments`
          property is editable.
      allowTaggingInSendAndCorrect:
        description:
          When **true,** the tagger palette is visible during the sending
          and correct flows and users can add tabs to documents.
        type: string
      allowTaggingInSendAndCorrectMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `allowTaggingInSendAndCorrect`
          property is editable.

          "
      allowTransactions:
        description: ""
        type: string
      allowTransactionsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      allowVaulting:
        description: Reserved for DocuSign.
        type: string
      allowVaultingMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: Reserved for DocuSign.
      allowWetSigningOverride:
        description:
          When **true,** users can override the default account setting
          that controls whether recipients can sign documents on paper. The option
          to overrride this setting occurs during the sending process on a per-envelope
          basis.
        type: string
      allowWetSigningOverrideMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `allowWetSigningOverride`
          property is editable.

          "
      canCreateTransaction:
        description: ""
        type: string
      canCreateTransactionMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      canCreateWorkspaces:
        description: Reserved for DocuSign.
        type: string
      canCreateWorkspacesMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: Reserved for DocuSign.
      canDeleteDocumentsInTransaction:
        description: ""
        type: string
      canDeleteDocumentsInTransactionMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      canDeleteTransaction:
        description: ""
        type: string
      canDeleteTransactionMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      canSendEnvelopesViaSMS:
        description: ""
        type: string
      canSendEnvelopesViaSMSMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      disableDocumentUpload:
        description: When **true,** users cannot upload documents.
        type: string
      disableDocumentUploadMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `disableDocumentUpload`
          property is editable.

          "
      disableOtherActions:
        description: When **true,** users can access the **Other Actions** menu.
        type: string
      disableOtherActionsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `disableOtherActions` property
          is editable.

          "
      enableApiRequestLogging:
        description: |-
          When **true,** API request logging is enabled.

          **Note:** Logging limits apply.
        type: string
      enableApiRequestLoggingMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `enableApiRequestLogging`
          property is editable.

          "
      enableKeyTermsSuggestionsByDocumentType:
        description: ""
        type: string
      enableKeyTermsSuggestionsByDocumentTypeMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      enableRecipientViewingNotifications:
        description:
          When **true,** senders are notified when recipients view the
          documents that they send.
        type: string
      enableRecipientViewingNotificationsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `enableRecipientViewingNotifications`
          property is editable.

          "
      enableSequentialSigningInterface:
        description: When **true,** the sequential signing user interface is enabled.
        type: string
      enableSequentialSigningInterfaceMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `enableSequentialSigningInterface`
          property is editable.

          "
      enableTransactionPointIntegration:
        description: Reserved for DocuSign.
        type: string
      enableTransactionPointIntegrationMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: Reserved for DocuSign.
      powerFormRole:
        description:
          "The PowerForms rights associated with the account permission
          profile. Valid values are:\n\n- `none` \n- `user` \n- `admin`\n"
        type: string
      powerFormRoleMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `powerFormRole` property
          is editable.

          "
      receiveCompletedSelfSignedDocumentsAsEmailLinks:
        description:
          When **true,** senders receive emails about completed, self-signed
          documents that contain links to the completed documents instead of PDF attachments.
        type: string
      receiveCompletedSelfSignedDocumentsAsEmailLinksMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `receiveCompletedSelfSignedDocumentsAsEmailLinks`
          property is editable.

          "
      signingUiVersionMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: Reserved for DocuSign.
      supplementalDocumentsMustAccept:
        description:
          When **true,** senders can require recipients to accept supplemental
          documents.
        type: string
      supplementalDocumentsMustAcceptMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `supplementalDocumentsMustAccept`
          property is editable.

          "
      supplementalDocumentsMustRead:
        description:
          When **true,** senders can require recipients to read supplemental
          documents.
        type: string
      supplementalDocumentsMustReadMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `supplementalDocumentsMustRead`
          property is editable.

          "
      supplementalDocumentsMustView:
        description:
          When **true,** users can require recipients to view supplemental
          documents.
        type: string
      supplementalDocumentsMustViewMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `supplementalDocumentsMustView`
          property is editable.

          "
      useNewDocuSignExperienceInterface:
        description: Reserved for DocuSign.
        type: string
      useNewDocuSignExperienceInterfaceMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: Reserved for DocuSign.
      useNewSendingInterface:
        description: Reserved for DocuSign.
        type: string
      useNewSendingInterfaceMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: Reserved for DocuSign.
      vaultingMode:
        description: Reserved for DocuSign.
        type: string
      vaultingModeMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: Reserved for DocuSign.
      webForms:
        description: ""
        type: string
      webFormsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
    description:
      "This object defines account permissions for users who are associated
      with the account permission profile. "
    x-ds-definition-name: accountRoleSettings
    x-ms-summary:
      "This object defines account permissions for users who are associated
      with the account permission profile. "
  accountSeals:
    type: object
    properties:
      seals:
        description: A list of electronic seals to apply to documents.
        type: array
        items:
          "$ref": "#/definitions/sealIdentifier"
    x-ds-definition-name: accountSeals
    description: ""
    x-ms-summary: ""
  accountSettingsInformation:
    description:
      Contains account settings information. Used in requests to set property
      values. Used in responses to report property values.
    type: object
    properties:
      accessCodeFormat:
        "$ref": "#/definitions/accessCodeFormat"
        description:
          Format of the string provided to a recipient in order to access
          an envelope.
      accountDateTimeFormat:
        description: UTC date/time format for the account.
        type: string
      accountDateTimeFormatMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          Metadata that indicates whether the `accountDateTimeFormat` property
          is editable.
      accountDefaultLanguage:
        description: ""
        type: string
      accountDefaultLanguageMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      accountName:
        description: The name on the account.
        type: string
      accountNameMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          Metadata that indicates whether the `accountName` property is
          editable.
      accountNotification:
        "$ref": "#/definitions/accountNotification"
        description:
          An object that specifies notifications (expirations and reminders)
          for the envelope.
      accountUISettings:
        "$ref": "#/definitions/accountUISettings"
        description: An object that defines the settings to use in the UI.
      adoptSigConfig:
        description:
          "When **true,** [Signature Adoption Configuration](https://support.docusign.com/s/document-item?bundleId=pik1583277475390&topicId=dsz1583277358168.html)
          is enabled. \n\n**Note:** Only Admin users can change this setting."
        type: string
      adoptSigConfigMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `adoptSigConfig` property
          is editable.

          "
      advancedCorrect:
        description:
          When **true,** the Advanced Correction feature is enabled for
          this account.
        type: string
      advancedCorrectMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `advancedCorrect` property
          is editable.

          "
      advancedSearchEnableTabField:
        description: ""
        type: string
      advancedSearchEnableTabFieldMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      advancedSearchEnableTemplateIdField:
        description: ""
        type: string
      advancedSearchEnableTemplateIdFieldMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      advancedSearchEnableTemplateNameField:
        description: ""
        type: string
      advancedSearchEnableTemplateNameFieldMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      allowAccessCodeFormat:
        description: |-
          When **true,** the configured [Access Code Format](/docs/esign-rest-api/reference/accounts/accounts/get/#accessCodeFormat) page is enabled for account administrators.

          **Note:** Only Admin users can change this setting.
        type: string
      allowAccessCodeFormatMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `allowAccessCodeFormat`
          property is editable.

          "
      allowAccountManagementGranular:
        description: |-
          When **true,** the account can be managed on a per-user basis.

          **Note:** Only Admin users can change this setting.
        type: string
      allowAccountManagementGranularMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `allowAccountManagementGranular`
          property is editable.

          "
      allowAccountMemberNameChange:
        description:
          Boolean that specifies whether member names can be changed in
          the account.
        type: string
      allowAccountMemberNameChangeMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `allowAccountMemberNameChange`
          property is editable.

          "
      allowACE:
        description: ""
        type: string
      allowACEMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      allowAdvancedRecipientRoutingConditional:
        description:
          When **true,** [Conditional Routing](https://support.docusign.com/s/document-item?bundleId=gav1643676262430&topicId=aqm1578456487908.html)
          is enabled for the account as part of DocuSign's Advanced Recipient Routing
          feature.
        type: string
      allowAdvancedRecipientRoutingConditionalMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          Metadata that indicates whether the ` allowAdvancedRecipientRoutingConditional`
          property is editable.
      allowAgentNameEmailEdit:
        description:
          "  When **true,** an agent recipient can change the email addresses
          of recipients later in the signing order.\n"
        type: string
      allowAgentNameEmailEditMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `allowAgentNameEmailEdit`
          property is editable.

          "
      allowAgreementActions:
        description: ""
        type: string
      allowAgreementActionsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: Metadata about the `allowAgreementActions` property.
      allowAgreementOrchestrations:
        description: ""
        type: string
      allowAgreementOrchestrationsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      allowAutoNavSettings:
        description: "  When **true,** auto-navigation can be enabled for this account.\n"
        type: string
      allowAutoNavSettingsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `allowAutoNavSettings` property
          is editable.

          "
      allowAutoTagging:
        description: " When **true,** auto-tagging is enabled for the account."
        type: string
      allowAutoTaggingMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          Metadata that indicates whether the `allowAutoTagging` property
          is editable.
      allowBulkSend:
        description: |-
          When **true,** bulk send functionality is enabled for the account.

          **Note:** Only Admin users can change this setting.
        type: string
      allowBulkSendMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `allowBulkSend` property
          is editable.

          "
      allowCDWithdraw:
        description: |-
          When **true,** indicates that the customer can withdraw their consent to the consumer disclosure when they decline to sign documents. If these recipients sign documents sent to them from your account in the future, they will be required to agree to the terms in the disclosure. The default value is **false.**
          **Note:** Only Admin users can change this setting.
        type: string
      allowCDWithdrawMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `allowCDWithdraw` property
          is editable.

          "
      allowConnectHttpListenerConfigs:
        description:
          Boolean that specifies whether a Connect configuration can use
          HTTP listeners.
        type: string
      AllowConnectIdentityVerificationUI:
        description: ""
        type: string
      allowConnectOAuthUI:
        description: ""
        type: string
      allowConnectSendFinishLater:
        description: Reserved for DocuSign.
        type: string
      allowConnectSendFinishLaterMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `allowConnectSendFinishLater`
          property is editable.

          "
      allowConnectUnifiedPayloadUI:
        description: ""
        type: string
      allowConsumerDisclosureOverride:
        description: |
          When **true,**
          the account has the ability to change the
          [Consumer Disclosure](https://support.docusign.com/s/document-item?bundleId=pik1583277475390&topicId=aqg1583277336549.html)
          setting.
        type: string
      allowConsumerDisclosureOverrideMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `allowConsumerDisclosureOverride`
          property is editable.

          "
      allowDataDownload:
        description: |
          When **true,** senders can download form data from the envelopes that they send.

          **Note:** Only Admin users can change this setting.
        type: string
      allowDataDownloadMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `allowDataDownload` property
          is editable.

          "
      allowDelayedRouting:
        description:
          '"true" if the account has permission to use the scheduled sending
          feature to send envelopes at a specified datetime in the future, "false"
          otherwise.'
        type: string
      allowDelayedRoutingMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      allowDelegatedSigning:
        description: ""
        type: string
      allowDelegatedSigningMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      allowDocGenDocuments:
        description: ""
        type: string
      allowDocGenDocumentsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      allowDocumentDisclosures:
        description:
          Boolean that specifies whether disclosure documents can be included
          in envelopes.
        type: string
      allowDocumentDisclosuresMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `allowDocumentDisclosures`
          property is editable.

          "
      allowDocumentsOnSignedEnvelopes:
        description:
          Boolean that specifies whether notifications can include the
          envelope's signed document.
        type: string
      allowDocumentsOnSignedEnvelopesMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `allowDocumentsOnSignedEnvelopes`
          property is editable.

          "
      allowDocumentVisibility:
        description:
          "When **true,** the [Document Visibility](https://support.docusign.com/guides/ndse-user-guide-document-visibility)
          feature is enabled for the account.

          "
        type: string
      allowDocumentVisibilityMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `allowDocumentVisibility`
          property is editable.

          "
      allowEditingEnvelopesOnBehalfOfOthers:
        description: ""
        type: string
      allowEditingEnvelopesOnBehalfOfOthersMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      allowEHankoStamps:
        description: |
          When **true,**
          [eHanko stamps](https://support.docusign.com/s/document-item?bundleId=jux1643235969954&topicId=dys1578456666697.html)
          are enabled.
        type: string
      allowEHankoStampsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `allowEHankoStamps` property
          is editable.

          "
      allowENoteEOriginal:
        description: "Specifies whether eNote eOriginal integration is enabled.

          "
        type: string
      allowENoteEOriginalMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `allowENoteEOriginal` property
          is editable.

          "
      allowEnvelopeCorrect:
        description: |
          When **true,** the envelope correction feature is enabled.

          **Note:** Only Admin users can change this setting.
        type: string
      allowEnvelopeCorrectMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `allowEnvelopeCorrect` property
          is editable.

          "
      allowEnvelopeCustodyTransfer:
        description: |+
          Specifies whether the account is able to
          manage rules that [transfer ownership](https://support.docusign.com/s/document-item?bundleId=pik1583277475390&topicId=xqx1583277378404.html)
          of envelopes within the same account.



        type: string
      allowEnvelopeCustodyTransferMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `allowEnvelopeCustodyTransfer`
          property is editable.

          "
      allowEnvelopeCustomFields:
        description: |
          Specifies whether
          [envelope custom fields](https://support.docusign.com/s/document-item?bundleId=jux1643235969954&topicId=mns1578456285568.html)
          are enabled.
        type: string
      allowEnvelopeCustomFieldsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `allowEnvelopeCustomFields`
          property is editable.

          "
      allowEnvelopePublishReporting:
        description: |
          When **true,** envelope publishing reporting is enabled.

          **Note:** Only Admin users can change this setting.
        type: string
      allowEnvelopePublishReportingMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `allowEnvelopePublishReporting`
          property is editable.

          "
      allowEnvelopeReporting:
        description: "Specifies whether the account has access to reports.

          "
        type: string
      allowEnvelopeReportingMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `allowEnvelopeReporting`
          property is editable.

          "
      allowExpression:
        description:
          "If the account plan does not include calculated fields, this
          setting allows an account to use them.\n\n"
        type: string
      allowExpressionMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `allowExpression` property
          is editable.

          "
      allowExpressSignerCertificate:
        description: |
          When **true,** signers are required to use Express Digital Signatures.

          **Note:** Only Admin users can change this setting.
        type: string
      allowExpressSignerCertificateMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `allowExpressSignerCertificate`
          property is editable.

          "
      allowExtendedSendingResourceFile:
        description:
          Boolean that specifies whether resource files can be used for
          extended sending.
        type: string
      allowExtendedSendingResourceFileMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `allowExtendedSendingResourceFile`
          property is editable.

          "
      allowExternalLinkedAccounts:
        description: ""
        type: string
      allowExternalLinkedAccountsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      allowExternalSignaturePad:
        description: |
          When **true,** the account can
          configure and use signature pads for their recipients.

          **Note:** Only Admin users can change this setting.
        type: string
      allowExternalSignaturePadMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `allowExternalSignaturePad`
          property is editable.

          "
      allowIDVForEUQualifiedSignatures:
        description: ""
        type: string
      allowIDVForEUQualifiedSignaturesMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      allowIDVLevel1:
        description: When **true,** IDV Level 1 is allowed. The default value is **false.**
        type: string
      allowIDVLevel1Metadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          Metadata that indicates whether the `allowIDVLevel1` property
          is editable.
      allowIDVLevel1Trial:
        description: ""
        type: string
      allowIDVLevel1TrialMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      allowIDVLevel2:
        description: ""
        type: string
      allowIDVLevel2Metadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      allowIDVLevel3:
        description: ""
        type: string
      allowIDVLevel3Metadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      allowIDVPlatform:
        description: ""
        type: string
      allowIDVPlatformMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          Metadata that indicates whether the `allowIDVPlatform` property
          is editable.
      allowInPerson:
        description: |+
          When **true,** the account administrator can enable in-person signing.

          **Note:** Only SysAdmin users can change this setting.

        type: string
      allowInPersonElectronicNotary:
        description:
          "Account-level flag that determines the ability to perform In-Person
          Electronic Notary (IPEN) actions.

          "
        type: string
      allowInPersonElectronicNotaryMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: "Metadata for the `allowInPersonElectronicNotary` flag.

          "
      allowInPersonMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `allowInPerson` property
          is editable.

          "
      allowManagedStamps:
        description:
          When **true,** [Managed Stamps](https://support.docusign.com/s/document-item?bundleId=pik1583277475390&topicId=cex1583277417267.html)
          are enabled.
        type: string
      allowManagedStampsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `allowManagedStamps` property
          is editable.

          "
      allowManagingEnvelopesOnBehalfOfOthers:
        description: ""
        type: string
      allowManagingEnvelopesOnBehalfOfOthersMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      allowMarkup:
        description: |
          When **true,** the Document Markup feature is enabled.

          **Note:**  To use this feature, Document Markup must be enabled at both the account and envelope levels. Only Admin users can change this setting at the account level.
        type: string
      allowMarkupMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `allowMarkup` property is
          editable.

          "
      allowMemberTimeZone:
        description: |
          When **true,** account users can set their own
          [time zone settings](https://support.docusign.com/s/articles/How-do-I-modify-time-zone-settings-for-my-account).

          **Note:** Only Admin users can change this setting.
        type: string
      allowMemberTimeZoneMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `allowMemberTimeZone` property
          is editable.

          "
      allowMergeFields:
        description: |
          When **true,** the account can use
          [merge fields](https://support.docusign.com/s/document-item?bundleId=evk1581360654067&topicId=ipy1581360621906.html)
          with DocuSign for Salesforce.
        type: string
      allowMergeFieldsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `allowMergeFields` property
          is editable.

          "
      allowMultipleBrandProfiles:
        description: "Specifies whether the account supports multiple brands.

          "
        type: string
      allowMultipleBrandProfilesMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `allowMultipleBrandProfiles`
          property is editable.

          "
      allowMultipleSignerAttachments:
        description: |-
          When **true,** recipients can
          upload multiple signer attachments with a single attachment.

          **Note:** Only Admin users can change this setting.
        type: string
      allowMultipleSignerAttachmentsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `allowMultipleSignerAttachments`
          property is editable.

          "
      allowNonUSPhoneAuth:
        description: |
          Specifies whether users can use
          international numbers
          for phone authentication.
        type: string
      allowNonUSPhoneAuthMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `allowNonUSPhoneAuth` property
          is editable.

          "
      allowOcrOfEnvelopeDocuments:
        description: ""
        type: string
      allowOcrOfEnvelopeDocumentsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      allowOfflineSigning:
        description: |-
          When **true,**
          [offline signing](https://support.docusign.com/articles/Offline-access-with-the-DocuSign-Mobile-App-for-iOS-iPad-iPhone-iPod-Touch)
          is enabled for the account.

          **Note:** Only Admin users can change this setting.
        type: string
      allowOfflineSigningMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `allowOfflineSigning` property
          is editable.

          "
      allowOpenTrustSignerCertificate:
        description: |-
          When **true,** senders can use OpenTrust signer certificates.

          **Note:** Only Admin users can change this setting.
        type: string
      allowOpenTrustSignerCertificateMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `allowOpenTrustSignerCertificate`
          property is editable.

          "
      allowOrganizationDocusignMonitor:
        description: ""
        type: string
      allowOrganizationDocusignMonitorFree:
        description: ""
        type: string
      allowOrganizationDocusignMonitorFreeMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      allowOrganizationDocusignMonitorMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      allowOrganizationDomainUserManagement:
        description: ""
        type: string
      allowOrganizationDomainUserManagementMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      allowOrganizations:
        description:
          Boolean that specifies whether [DocuSign Admin](/docs/admin-api/)
          is enabled for the account.
        type: string
      allowOrganizationsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `allowOrganizations` property
          is editable.

          "
      allowOrganizationSsoManagement:
        description: ""
        type: string
      allowOrganizationSsoManagementMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      allowOrganizationToUseInPersonElectronicNotary:
        description:
          "Organization-level flag that determines the ability to perform
          In-Person Electronic Notary (IPEN) actions.

          "
        type: string
      allowOrganizationToUseInPersonElectronicNotaryMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata for the `allowOrganizationToUseInPersonElectronicNotary`
          flag.

          "
      allowOrganizationToUseRemoteNotary:
        description: ""
        type: string
      allowOrganizationToUseRemoteNotaryMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      allowOrganizationToUseThirdPartyElectronicNotary:
        description:
          Org level flag that determines the availability to perform Third
          Party Notary (3PN) actions.
        type: string
      allowOrganizationToUseThirdPartyElectronicNotaryMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata for the organization-level flag that determines the
          availablity to perform Third Party Notary (3PN) actions.

          "
      allowParticipantRecipientType:
        description: ""
        type: string
      allowParticipantRecipientTypeMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      allowPaymentProcessing:
        description: |-
          When **true,** payment processing is enabled for the account.

          **Note:** Only Admin users can change this setting.
        type: string
      allowPaymentProcessingMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `allowPaymentProcessing`
          property is editable.

          "
      allowPerformanceAnalytics:
        description: ""
        type: string
      allowPerformanceAnalyticsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      allowPhoneAuthentication:
        description:
          Boolean that specifies whether phone authentication is enabled
          for the account.
        type: string
      allowPhoneAuthenticationMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `allowPhoneAuthentication`
          property is editable.

          "
      allowPhoneAuthOverride:
        description: Boolean that specifies whether users can override phone authentication.
        type: string
      allowPhoneAuthOverrideMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `allowPhoneAuthOverride`
          property is editable.

          "
      allowPrivateSigningGroups:
        description:
          Reserved for DocuSign. This property returns the value **false**
          when listing account settings. This property is read-only.
        type: string
      allowPrivateSigningGroupsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `allowPrivateSigningGroups`
          property is editable.

          "
      allowRecipientConnect:
        description: ""
        type: string
      allowRecipientConnectMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      allowReminders:
        description: |
          When **true,**
          an account administrator can to turn on reminders
          and expiration defaults for the account.

          **Note:** Only Admin users can change this setting.
        type: string
      allowRemindersMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `allowReminders` property
          is editable.

          "
      allowRemoteNotary:
        description: ""
        type: string
      allowRemoteNotaryMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      allowResourceFileBranding:
        description: |
          When **true,**
          resource files can be uploaded in branding.
        type: string
      allowResourceFileBrandingMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `allowResourceFileBranding`
          property is editable.

          "
      allowSafeBioPharmaSignerCertificate:
        description: |
          When **true,**
          account administrators can
          specify that signers are
          required to use SAFE-BioPharma digital signatures.

          **Note:** Only Admin users can change this setting.
        type: string
      allowSafeBioPharmaSignerCertificateMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `allowSafeBioPharmaSignerCertificate`
          property is editable.

          "
      allowScheduledSending:
        description:
          '"true" if the account has permission to use the scheduled sending
          feature to send envelopes at a specified datetime in the future, "false"
          otherwise.'
        type: string
      allowScheduledSendingMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      allowSecurityAppliance:
        description:
          Boolean that specifies whether a DocuSign Signature Appliance
          can be used with the account.
        type: string
      allowSecurityApplianceMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `allowSecurityAppliance`
          property is editable.

          "
      allowSendingEnvelopesOnBehalfOfOthers:
        description: ""
        type: string
      allowSendingEnvelopesOnBehalfOfOthersMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      allowSendToCertifiedDelivery:
        description: |
          When **true,**
          the account admin can enable the
          Send to Certified Delivery
          feature on the account.
        type: string
      allowSendToCertifiedDeliveryMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `allowSendToCertifiedDelivery`
          property is editable.

          "
      allowSendToIntermediary:
        description: |
          When **true,**
          the account admin can enable the Send to Intermediary
          feature on the account.
        type: string
      allowSendToIntermediaryMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `allowSendToIntermediary`
          property is editable.

          "
      allowServerTemplates:
        description: |
          When **true,**
          the account can use templates.
        type: string
      allowServerTemplatesMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `allowServerTemplates` property
          is editable.

          "
      allowSetEmbeddedRecipientStartURL:
        description: ""
        type: string
      allowSetEmbeddedRecipientStartURLMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      allowSharedTabs:
        description: |
          When **true,**
          shared tabs are enabled for the account.

          **Note:** Only Admin users can change this setting.
        type: string
      allowSharedTabsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `allowSharedTabs` property
          is editable.

          "
      allowSignatureStamps:
        description: |-
          When **true,** Signature Stamps are enabled.

          **Note:** Only Admin users can change this setting.
        type: string
      allowSignatureStampsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `allowSignatureStamps` property
          is editable.

          "
      allowSignDocumentFromHomePage:
        description: |-
          When **true,** recipients can sign documents from the home page.

          **Note:** Only Admin users can change this setting.
        type: string
      allowSignDocumentFromHomePageMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `allowSignDocumentFromHomePage`
          property is editable.

          "
      allowSignerReassign:
        description: |
          When **true,** the recipient of an envelope sent from this account can reassign it to another person.

          **Note:** Only Admin users can change this setting.
        type: string
      allowSignerReassignMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `allowSignerReassign` property
          is editable.

          "
      allowSignerReassignOverride:
        description: |-
          When **true,** an account administrator can override the ability of an envelope recipient to reassign it to another person.

          **Note:** Only Admin users can change this setting.
        type: string
      allowSignerReassignOverrideMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `allowSignerReassignOverride`
          property is editable.

          "
      allowSigningExtensions:
        description:
          Boolean that specifies whether Signing and App Extensions are
          allowed.
        type: string
      allowSigningExtensionsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `allowSigningExtensions`
          property is editable.

          "
      allowSigningGroups:
        description:
          When **true,** the account allows signing groups. This setting
          is only shown in responses that list account settings. This property is
          read-only.
        type: string
      allowSigningGroupsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `allowSigningGroups` property
          is editable.

          "
      allowSigningInsights:
        description: ""
        type: string
      allowSigningInsightsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      allowSigningRadioDeselect:
        description:
          Boolean that specifies whether the account supports radio buttons
          on tabs [Radio CustomTabType](/docs/esign-soap-api/reference/sending-group/tab/).
        type: string
      allowSigningRadioDeselectMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `allowSigningRadioDeselect`
          property is editable.

          "
      allowSignNow:
        description: |
          When **true,**
          the account administrator can enable
          the Sign Now feature.
        type: string
      allowSignNowMetadata:
        description:
          "Metadata that indicates whether the `allowSignNow` property
          is editable.

          "
        type: string
      allowSMSDelivery:
        description: ""
        type: string
      allowSMSDeliveryMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      allowSocialIdLogin:
        description: Deprecated.
        type: string
      allowSocialIdLoginMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: Deprecated.
      allowSupplementalDocuments:
        description: When **true,** this user can include supplemental documents.
        type: string
      allowSupplementalDocumentsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          Metadata that indicates whether the `allowSupplementalDocuments`
          property is editable.
      allowThirdPartyElectronicNotary:
        description:
          Account level flag that determines the availability to perform
          Third Party Notary (3PN) actions.
        type: string
      allowThirdPartyElectronicNotaryMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      allowTransactionsWorkspace:
        description: ""
        type: string
      allowTransactionsWorkspaceMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      allowTransactionsWorkspaceOriginal:
        description: ""
        type: string
      allowTransactionsWorkspaceOriginalMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      allowUsersToAccessDirectory:
        description: ""
        type: string
      allowUsersToAccessDirectoryMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      allowValueInsights:
        description: ""
        type: string
      allowValueInsightsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      allowWebForms:
        description: ""
        type: string
      allowWebFormsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      allowWhatsAppDelivery:
        description: ""
        type: string
      allowWhatsAppDeliveryMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      anchorPopulationScope:
        description:
          "This property determines how template anchor tabs are applied.\n\nValid
          values are:\n\n- `document`: Anchor tabs are applied only to the document
          that you specify. \n- `envelope`: Anchor tabs are applied to all of the
          documents in the envelope associated with the template.\n\n**Note:** When
          you are using the `anchorPopulationScope` property with a Composite Template,
          the value `document` is supported only with a single server template and
          a single inline template.\n\n"
        type: string
      anchorPopulationScopeMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `anchorPopulationScope`
          property is editable.

          "
      anchorTagVersionedPlacementEnabled:
        description: "Reserved for DocuSign.

          "
        type: string
      anchorTagVersionedPlacementMetadataEnabled:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      attachCompletedEnvelope:
        description: |-
          When **true,** envelope documents are included as a PDF file attachment to "signing completed" emails.

          **Note:** Only SysAdmin users can change this setting.
        type: string
      attachCompletedEnvelopeMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          Metadata that indicates whether the `attachCompletedEnvelope`
          property is editable.
      authenticationCheck:
        description:
          "Sets when authentication checks are applied for recipient envelope
          access. This setting only applies to the following ID checks: \n\n- Phone
          Authentication\n- SMS Authentication\n- Knowledge-Based ID\n\nThis setting
          takes one of the following options: \n\n- `initial_access`: The authentication
          check always applies the first time a recipient accesses the documents.
          Recipients are not asked to authenticate again when they access the documents
          from the same browser on the same device. If the recipient attempts to access
          the documents from a different browser or a different device, the recipient
          must pass authentication again. Once authenticated, that recipient is not
          challenged again on the new device or browser. The ability for a recipient
          to skip authentication for documents is limited to documents sent from the
          same sending account.\n- `each_access`: Authentication checks apply every
          time a recipient attempts to access the envelope. However, you can configure
          the Authentication Expiration setting to allow recipients to skip authentication
          when they have recently passed authentication by setting a variable time
          frame.\n\n**Note:** Only Admin users can change this setting.\n"
        type: string
      authenticationCheckMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `authenticationCheck` property
          is editable.

          "
      autoNavRule:
        description: |
          Specifies how auto-navigation works.
          Valid values are:

          - `off`
          - `required_fields`
          - `required_and_blank_fields`
          - `all_fields`
          - `page_then_required_fields`
          - `page_then_required_and_blank_fields`
          - `page_then_all_fields`
        type: string
      autoNavRuleMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `autoNavRule` property is
          editable.

          "
      autoProvisionSignerAccount:
        description:
          Boolean that specifies whether to automatically provision a user
          membership in the account for accountless recipients. (Also known as Just-in-Time
          provisioning.)
        type: string
      autoProvisionSignerAccountMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `autoProvisionSignerAccount`
          property is editable.

          "
      bccEmailArchive:
        description:
          Boolean that specifies whether BCC for Email Archive is enabled
          for the account. BCC for Email Archive allows you to set up an archive email
          address so that a BCC copy of an envelope is sent only to that address.
        type: string
      bccEmailArchiveMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `bccEmailArchive` property
          is editable.

          "
      betaSwitchConfiguration:
        description: "Reserved for DocuSign.

          "
        type: string
      betaSwitchConfigurationMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: Reserved for DocuSign.
      billingAddress:
        "$ref": "#/definitions/addressInformation"
        description: The billing address for the account.
      billingAddressMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `billingAddress` property
          is editable.

          "
      bulkSend:
        description:
          When **true,** this user can use the bulk send feature for the
          account.
        type: string
      bulkSendActionResendLimit:
        description: ""
        type: string
      bulkSendMaxCopiesInBatch:
        description: ""
        type: string
      bulkSendMaxUnprocessedEnvelopesCount:
        description: ""
        type: string
      bulkSendMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `bulkSend` property is editable.

          "
      canSelfBrandSend:
        description:
          When **true,** account administrators can self-brand their sending
          console through the DocuSign console.
        type: string
      canSelfBrandSendMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `canSelfBrandSend` property
          is editable.

          "
      canSelfBrandSign:
        description:
          When **true,** account administrators can self-brand their signing
          console through the DocuSign console.
        type: string
      canSelfBrandSignMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `canSelfBrandSign` property
          is editable.

          "
      canUseSalesforceOAuth:
        description: ""
        type: string
      canUseSalesforceOAuthMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      captureVoiceRecording:
        description: Reserved for DocuSign.
        type: string
      captureVoiceRecordingMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: Reserved for DocuSign.
      cfr21SimplifiedSigningEnabled:
        description: ""
        type: string
      cfr21SimplifiedSigningEnabledMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      cfrUseWideImage:
        description:
          Boolean that specifies whether to use a shorter/wider format
          when generating the CFR Part 11 signature image.
        type: string
      cfrUseWideImageMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `cfrUseWideImage` property
          is editable.

          "
      checkForMultipleAdminsOnAccount:
        description: ""
        type: string
      checkForMultipleAdminsOnAccountMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          Metadata that indicates whether the `checkForMultipleAdminsOnAccount`
          property is editable.
      chromeSignatureEnabled:
        description:
          Boolean that specifies whether the signers of the envelopes from
          this account use a signature with a DocuSign chrome around it or not.
        type: string
      chromeSignatureEnabledMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `chromeSignatureEnabled`
          property is editable.

          "
      commentEmailShowMessageText:
        description: |-
          When **true,** the text of comments is included in email notifications when a comment is posted.

          **Note:**  If the envelope requires additional recipient authentication, comment text is not included.
        type: string
      commentEmailShowMessageTextMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `commentEmailShowMessageText`
          property is editable.

          "
      commentsAllowEnvelopeOverride:
        description:
          When **true** and comments are enabled for the account, senders
          can disable comments for an envelope through the **Advanced Options** menu
          that appears during the sending process.
        type: string
      commentsAllowEnvelopeOverrideMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `commentsAllowEnvelopeOverride`
          property is editable.

          "
      conditionalFieldsEnabled:
        description: |-
          When **true,** conditional fields can be used in documents.

          **Note:** Only Admin users can change this setting.
        type: string
      conditionalFieldsEnabledMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `conditionalFieldsEnabled`
          property is editable.

          "
      consumerDisclosureFrequency:
        description:
          "Speficies how often to display the consumer disclosure.\n\nValid
          values are:\n\n- `once`: Per account, the supplemental document is displayed
          once only per `userId`. \n- `always`: Per envelope, the supplemental document
          is displayed once only per `userId`. \n- `each_access`: Per envelope, the
          supplemental document is displayed once only per `recipientId`.\n"
        type: string
      consumerDisclosureFrequencyMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `consumerDisclosureFrequency`
          property is editable.

          "
      convertPdfFields:
        description:
          Boolean that specifies whether to enable PDF form fields to get
          converted to DocuSign secure fields when the document is added or uploaded
          to an envelope.
        type: string
      convertPdfFieldsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `convertPdfFields` property
          is editable.

          "
      dataPopulationScope:
        description: |-
          Specifies how data is shared for tabs with the same tabLabel. Valid values are:

          - `document`: Tabs in a document with the same label populate with the same data.
          - `envelope`: Tabs in all documents in the envelope with the same label populate with the same data.
          - `notset`:   Use the global account setting.

          This setting applies to the following tab types:

          - Check box
          - Company
          - Data field
          - Drop-down list
          - Full name
          - Formula
          - Note
          - Title

          **Note:** Only Admin users can change this setting. Changing this setting affects envelopes that have been sent but not completed.
        type: string
      dataPopulationScopeMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `dataPopulationScope` property
          is editable.

          "
      defaultToAdvancedEnvelopesFilterForm:
        description: ""
        type: string
      defaultToAdvancedEnvelopesFilterFormMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      disableAutoTemplateMatching:
        description: ""
        type: string
      disableAutoTemplateMatchingMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      disableMobileApp:
        description:
          When **true,** the mobile app distributor key is prevented from
          connecting for account users.
        type: string
      disableMobileAppMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `disableMobileApp` property
          is editable.

          "
      disableMobilePushNotifications:
        description: |-
          When **true,** push notifications are disabled for the account.

          **Note:** Only Admin users can change this setting.
        type: string
      disableMobilePushNotificationsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `disableMobilePushNotifications`
          property is editable.

          "
      disableMobileSending:
        description: |-
          When **true,** sending from a mobile application is disabled.

          **Note:** Only Admin users can change this setting.
        type: string
      disableMobileSendingMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `disableMobileSending` property
          is editable.

          "
      disableMultipleSessions:
        description: |-
          When **true,** account users cannot be logged into multiple sessions at the same time.

          **Note:** Only Admin users can change this setting.
        type: string
      disableMultipleSessionsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `disableMultipleSessions`
          property is editable.

          "
      disablePurgeNotificationsForSenderMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: Reserved for DocuSign.
      disableSignerCertView:
        description: When **true,** signers cannot view certificates of completion.
        type: string
      disableSignerCertViewMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `disableSignerCertView`
          property is editable.

          "
      disableSignerHistoryView:
        description: When **true,** signers cannot view envelope history.
        type: string
      disableSignerHistoryViewMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `disableSignerHistoryView`
          property is editable.

          "
      disableStyleSignature:
        description:
          "When **true,** the **Select Style** option is hidden from signers
          and they must draw their signature instead. "
        type: string
      disableStyleSignatureMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `disableStyleSignature`
          property is editable.

          "
      disableUploadSignature:
        description: |-
          When **true,** signers cannot upload custom image files of their signature and initials.

          **Note:** Only Admin users can change this setting.
        type: string
      disableUploadSignatureMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `disableUploadSignature`
          property is editable.

          "
      disableUserSharing:
        description: When **true,** the User Sharing feature is disabled for the account.
        type: string
      disableUserSharingMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `disableUserSharing` property
          is editable.

          "
      displayBetaSwitch:
        description:
          Boolean that specifies whether to display a Beta switch for your
          app.
        type: string
      displayBetaSwitchMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `displayBetaSwitch` property
          is editable.

          "
      documentConversionRestrictions:
        description: |
          Sets the account document upload restriction for non-account administrators. Valid values are:

          - `no_restrictions`: There are no restrictions on the type of documents that can be uploaded.
          - `allow_pdf_only`: Non-administrators can only upload PDF files.
          - `no_upload`: Non-administrators cannot upload files.

          **Note:** Only Admin users can change this setting.
        type: string
      documentConversionRestrictionsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `documentConversionRestrictions`
          property is editable.

          "
      documentRetention:
        description:
          Sets a document retention period, which controls the number of
          days that DocuSign retains documents after they have reached a completed,declined,
          or voided state. When document retention is enabled for the account, the
          default value is `356` days.
        type: string
      documentRetentionMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `documentRetention` property
          is editable.

          "
      documentRetentionPurgeTabs:
        description: |-
          When **true** and `documentRetention` is set, document fields and metadata are also purged after the document retention period ends. The default value is **false.**

          **Note:** Only Admins can change this setting.
        type: string
      documentVisibility:
        description: |-
          Configures the Document Visibility feature for the account. Valid values are:

          - `Off`: Document Visibility is not active for the account.
          - `MustSignToViewUnlessSenderAccount`: Document Visibility is enabled for all envelopes sent from the account. Any member of the sending account can view all of the documents in an envelope.
          - `MustSignToViewUnlessSender`: Document Visibility is enabled for all envelopes sent from the account. Only the sender can view all of the documents in an envelope.
          - `SenderCanSetMustSignToViewUnlessSenderAccount`: The sender has the option to enable Document Visibility for an envelope. When enabled for an envelope, all of the documents within it are still visible to any member of the sending account.
          Vd- `SenderCanSetMustSignToViewUnlessSender`: The sender has the option to enable Document Visibility for an envelope. When enabled for an envelope, all of the documents in the envelope are visible only to the sender.

          **Note:** For this configuration to take effect, `allowDocumentVisibility` must be set to **true.**
        type: string
      documentVisibilityMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `documentVisibility` property
          is editable.

          "
      draftEnvelopeRetention:
        description: ""
        type: string
      draftEnvelopeRetentionMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      dss_EnableProvisioningPenConfiguration_RadminOption:
        description: ""
        type: string
      dss_EnableSignatureTypeCustomTagRadmin_RadminOption:
        description: ""
        type: string
      dss_SIGN_28411_EnableLeavePagePrompt_RadminOption:
        description: ""
        type: string
      dss_SIGN_29182_SlideUpBar_RadminOption:
        description: ""
        type: string
      emailTemplateVersion:
        description:
          Specifies the version of the email templates used in an account.
          If new signing is selected in a member's Admin page, the user is updated
          to the newest version (1.1), the minimum version of email supported for
          the account.
        type: string
      emailTemplateVersionMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `emailTemplateVersion` property
          is editable.

          "
      enableAccessCodeGenerator:
        description: When **true,** enables Access Code Generator on the account.
        type: string
      enableAccessCodeGeneratorMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `enableAccessCodeGenerator`
          property is editable.

          "
      enableAccountWideSearch:
        description: ""
        type: string
      enableAccountWideSearchMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      enableAdmHealthcare:
        description:
          Account Level Flag that determines the availability to use ADM
          Healthcare fields
        type: string
      enableAdmHealthcareMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          Metadata for account Level Flag that determines the availability
          to use ADM Healthcare fields
      enableAdvancedEnvelopesSearch:
        description: ""
        type: string
      enableAdvancedEnvelopesSearchMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      enableAdvancedPayments:
        description: When **true,** enables Advanced Payments for the account.
        type: string
      enableAdvancedPaymentsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `enableAdvancedPayments`
          property is editable.

          "
      enableAdvancedPowerForms:
        description: When **true,** enables advanced PowerForms for the account.
        type: string
      enableAdvancedPowerFormsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `enableAdvancedPowerForms`
          property is editable.

          "
      enableAgreementActionsForCLM:
        description: ""
        type: string
      enableAgreementActionsForCLMMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      enableAgreementActionsForESign:
        description: ""
        type: string
      enableAgreementActionsForESignMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      enableAutoNav:
        description: |-
          When **true,** enables the account to set the AutoNav rule setting, which enables a sender to override the auto-navigation setting per envelope.

          **Note:** To change this setting, you must be a SysAdmin user or `EnableAutoNavByDSAdmin must be set.
        type: string
      enableAutoNavMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `enableAutoNav` property
          is editable.

          "
      enableBccDummyLink:
        description: ""
        type: string
      enableBccDummyLinkMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      enableCalculatedFields:
        description:
          "When **true,** calculated fields are enabled for the account.
          \n\n**Note:** This setting can be changed only by Admin users, and only
          if the account-level setting `allowExpression` is set to **true.**"
        type: string
      enableCalculatedFieldsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `enableCalculatedFields`
          property is editable.

          "
      enableClickPlus:
        description: ""
        type: string
      enableClickPlusConditionalContent:
        description: ""
        type: string
      enableClickPlusConditionalContentMetaData:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      enableClickPlusCustomFields:
        description: ""
        type: string
      enableClickPlusCustomFieldsMetaData:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      enableClickPlusCustomStyle:
        description: ""
        type: string
      enableClickPlusCustomStyleMetaData:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      enableClickPlusDynamicContent:
        description: ""
        type: string
      enableClickPlusDynamicContentMetaData:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      enableClickPlusMetaData:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      enableClickwraps:
        description:
          Boolean that specifies whether clickwraps are enabled in your
          app. A [clickwrap](/docs/click-api/click101/) is an iframe that you embed
          in your own website or app.
        type: string
      enableClickwrapsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `enableClickwraps` property
          is editable.

          "
      enableCombinedPDFDownloadForSBS:
        description: ""
        type: string
      enableCommentsHistoryDownloadInSigning:
        description: ""
        type: string
      enableCommentsHistoryDownloadInSigningMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      enableContactSuggestions:
        description: ""
        type: string
      enableContactSuggestionsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      enableCustomerSatisfactionMetricTracking:
        description:
          When **true,** enables customer satisfaction metric tracking
          for the account.
        type: string
      enableCustomerSatisfactionMetricTrackingMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `enableCustomerSatisfactionMetricTracking`
          property is editable.

          "
      enableDSigEUAdvancedPens:
        description: ""
        type: string
      enableDSigEUAdvancedPensMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      enableDSigExpressPens:
        description: ""
        type: string
      enableDSigExpressPensMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      enableDSigIDCheckForAESPens:
        description: ""
        type: string
      enableDSigIDCheckForAESPensMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      enableDSigIDCheckInPersonForQESPens:
        description: ""
        type: string
      enableDSigIDCheckInPersonForQESPensMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      enableDSigIDCheckRemoteForQESPens:
        description: ""
        type: string
      enableDSigIDCheckRemoteForQESPensMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      enableDSigIDVerificationPens:
        description: ""
        type: string
      enableDSigIDVerificationPensMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      enableDSigIDVerificationPremierPens:
        description: ""
        type: string
      enableDSigIDVerificationPremierPensMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      enableDSPro:
        description: Reserved for DocuSign.
        type: string
      enableDSProMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `enableDSPro` property is
          editable.

          "
      enableEnforceTlsEmailsSettingMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      enableEnvelopeStampingByAccountAdmin:
        description: |-
          When **true,** enables the account administrator
          to control envelope stamping for an account
          (stamping the `envelopeId` in the document margins).

          **Note:** This setting can be changed only
          by Admin users, and only if the account-level
          setting `enableEnvelopeStampingByDSAdmin` is set to **true.**
        type: string
      enableEnvelopeStampingByAccountAdminMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `enableEnvelopeStampingByAccountAdmin`
          property is editable.

          "
      enableEnvelopeStampingByDSAdmin:
        description:
          When **true,** enables the DocuSign administrator to control
          envelope stamping for an account (placement of the `envelopeId`).
        type: string
      enableEnvelopeStampingByDSAdminMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `enableEnvelopeStampingByDSAdmin`
          property is editable.

          "
      enableESignAPIHourlyLimitManagement:
        description: ""
        type: string
      enableESignAPIHourlyLimitManagementMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      enableEsignCommunities:
        description: ""
        type: string
      enableEsignCommunitiesMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      enableIDFxAccountlessSMSAuthForPart11:
        description: ""
        type: string
      enableIDFxAccountlessSMSAuthForPart11Metadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      enableIDFxIntuitKBA:
        description: ""
        type: string
      enableIDFxIntuitKBAMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      enableIDFxPhoneAuthentication:
        description: ""
        type: string
      enableIDFxPhoneAuthenticationMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      enableIdfxPhoneAuthSignatureAuthStatus:
        description: ""
        type: string
      enableIdfxPhoneAuthSignatureAuthStatusMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      enableInboxBrowseViewsPoweredByElasticSearch:
        description: ""
        type: string
      enableInboxBrowseViewsPoweredByElasticSearchMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      enableInboxRelevanceSort:
        description: ""
        type: string
      enableInboxRelevanceSortForRecentAccounts:
        description: ""
        type: string
      enableInboxRelevanceSortForRecentAccountsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      enableInboxRelevanceSortMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      enableInBrowserEditor:
        description: ""
        type: string
      enableInBrowserEditorMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      enableKeyTermsSuggestionsByDocumentType:
        description: ""
        type: string
      enableKeyTermsSuggestionsByDocumentTypeMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      enableLargeFileSupport:
        description: ""
        type: string
      enableLargeFileSupportMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      enableParticipantRecipientSettingMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      enablePaymentProcessing:
        description: |-
          When **true,** payment processing is enabled for this account.

          **Note:** This setting can be changed only by Admin users, and only if the account-level setting `allowPaymentProcessing` is set.
        type: string
      enablePaymentProcessingMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `enablePaymentProcessing`
          property is editable.

          "
      enablePDFAConversion:
        description: ""
        type: string
      enablePDFAConversionMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      enablePowerForm:
        description: |-
          When **true,** enables PowerForms for the account.

          **Note:** Only SysAdmin users can change this setting.
        type: string
      enablePowerFormDirect:
        description: |-
          When **true,** enables direct PowerForms for an account. Direct PowerForms are in-session PowerForms.

          **Note:** Only Admin users can change this setting.
        type: string
      enablePowerFormDirectMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `enablePowerFormDirect`
          property is editable.

          "
      enablePowerFormMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `enablePowerForm` property
          is editable.

          "
      enableRecipientDomainValidation:
        description: Reserved for DocuSign.
        type: string
      enableRecipientDomainValidationMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `enableRecipientDomainValidation`
          property is editable.

          "
      enableRecipientMayProvidePhoneNumber:
        description: ""
        type: string
      enableRecipientMayProvidePhoneNumberMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      enableReportLinks:
        description: |-
          Enables direct links to envelopes in reports for administrators in the following scopes:
          - `NoEnvelopes`
          - `AllEnvelopes`
          - `OnlyOwnEnvelopes`
        type: string
      enableReportLinksMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `enableReportLinks` property
          is editable.

          "
      enableRequireSignOnPaper:
        description: |
          When **true,** the account can use the `requireSignOnPaper` option.

          **Note:** Only Admin users can change this setting.
        type: string
      enableRequireSignOnPaperMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `enableRequireSignOnPaper`
          property is editable.

          "
      enableReservedDomain:
        description: |-
          When **true,** account administrators can reserve a web domain and users. Domains are organization-specific reserved internet domains, such as `@exampledomain.com`. You can define policy settings for users of each reserved domain within your organization, export lists of domain users for audit purposes, and manage domain users.

          - Domains may be claimed by an organization.
          - When a domain is claimed by an organization, all users within that domain are added to the organization, even if they have trial or free accounts.
          - You can set domain controls for all users of the domain.
          - You can export information about your organization’s users that are associated with your reserved domains.

          **Note:** Only SysAdmin users can change this setting.
        type: string
      enableReservedDomainMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `enableReservedDomain` property
          is editable.

          "
      enableResponsiveSigning:
        description: When **true,** enables responsive signing.
        type: string
      enableResponsiveSigningMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `enableResponsiveSigning`
          property is editable.

          "
      enableScheduledRelease:
        description:
          When **true,** scheduled releases are enabled. The default value
          is **false.**
        type: string
      enableScheduledReleaseMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `enableScheduledRelease`
          property is editable.

          "
      enableSearch:
        description: ""
        type: string
      enableSearchMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      enableSearchServiceAzureUri:
        description: ""
        type: string
      enableSearchServiceAzureUriMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      enableSearchSiteSpecificApi:
        description: ""
        type: string
      enableSearchSiteSpecificApiMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      enableSearchUI:
        description: ""
        type: string
      enableSearchUIMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      enableSendingTagsFontSettings:
        description: When **true,** enables fonts to be set on tags for the account.
        type: string
      enableSendingTagsFontSettingsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `enableSendingTagsFontSettings`
          property is editable.

          "
      enableSendToAgent:
        description: |
          When **true,** this account can use the Agent recipient type.

          **Note:** Only SysAdmin users can change this setting.
        type: string
      enableSendToAgentMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `enableSendToAgent` property
          is editable.

          "
      enableSendToIntermediary:
        description: |
          When **true,** this account can use the Intermediary recipient type.

          **Note:** Only Admin users can change this setting, and only if `allowSendToIntermediary` is set.
        type: string
      enableSendToIntermediaryMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `enableSendToIntermediary`
          property is editable.

          "
      enableSendToManage:
        description: |
          When **true,** this account can use the Editor recipient type.

          **Note:** Only Admin users can change this setting.
        type: string
      enableSendToManageMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `enableSendToManage` property
          is editable.

          "
      enableSequentialSigningAPI:
        description: |-
          When **true,** the account can define the routing
          order of recipients for envelopes sent by using the eSignature API.

          **Note:** Only SysAdmin users can change this setting.
        type: string
      enableSequentialSigningAPIMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `enableSequentialSigningAPI`
          property is editable.

          "
      enableSequentialSigningUI:
        description: |
          When **true,** the account can define the routing order
          of recipients for envelopes sent by using the DocuSign application.

          **Note:** Only SysAdmin users can change this setting.
        type: string
      enableSequentialSigningUIMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `enableSequentialSigningUI`
          property is editable.

          "
      enableSignerAttachments:
        description: |-
          When **true,** users can use the signing attachments feature to request attachments from signers.

          **Note:** Only Admin users can change this setting.
        type: string
      enableSignerAttachmentsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `enableSignerAttachments`
          property is editable.

          "
      enableSigningExtensionComments:
        description:
          When **true,** enables comments for the account so that signers
          and recipients can make and respond to comments in documents belonging to
          the envelopes that they are sent.
        type: string
      enableSigningExtensionCommentsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `enableSigningExtensionComments`
          property is editable.

          "
      enableSigningExtensionConversations:
        description: When **true,** enables conversation functionality.
        type: string
      enableSigningExtensionConversationsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `enableSigningExtensionConversations`
          property is editable.

          "
      enableSigningOrderSettingsForAccount:
        description:
          When **true,** switches Signing Order to On by default for new
          envelopes.
        type: string
      enableSigningOrderSettingsForAccountMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `enableSigningOrderSettingsForAccount`
          property is editable.

          "
      enableSignOnPaper:
        description: |
          When **true,** a sender can allow signers to use the sign on paper option.

          **Note:** Only Admin users can change this setting.
        type: string
      enableSignOnPaperMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `enableSignOnPaper` property
          is editable.

          "
      enableSignOnPaperOverride:
        description: |-
          When **true,** a user can override the default default account setting for the Sign on Paper option, which specifies whether signers can sign documents on paper as an option to signing electronically.

          **Note:** Only Admin users can change this setting.
        type: string
      enableSignOnPaperOverrideMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `enableSignOnPaperOverride`
          property is editable.

          "
      enableSignWithNotary:
        description: |-
          When **true,** Sign with Notary functionality is enabled for the account.

          **Note:** Only Admin users can change this setting.
        type: string
      enableSignWithNotaryMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `enableSignWithNotary` property
          is editable.

          "
      enableSmartContracts:
        description:
          When **true,** blockchain-based [Smart Contracts](https://www.docusign.com/products/blockchain)
          are enabled. The default value is **false.**
        type: string
      enableSmartContractsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          Metadata that indicates whether the `enableSmartContracts` property
          is editable.
      enableSMSAuthentication:
        description: |
          When **true,** the account can use SMS authentication.

          **Note:** Only Admin users can change this setting.
        type: string
      enableSMSAuthenticationMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `enableSMSAuthentication`
          property is editable.

          "
      enableSMSDeliveryAdditionalNotification:
        description: ""
        type: string
      enableSMSDeliveryAdditionalNotificationMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      enableSMSDeliveryPrimary:
        description: ""
        type: string
      enableSocialIdLogin:
        description: Deprecated.
        type: string
      enableSocialIdLoginMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: Deprecated.
      enableStrikeThrough:
        description: When **true,** enables strikethrough formatting in documents.
        type: string
      enableStrikeThroughMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `enableStrikeThrough` property
          is editable.

          "
      enableTransactionPoint:
        description: Reserved for DocuSign.
        type: string
      enableTransactionPointMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: Reserved for DocuSign.
      enableVaulting:
        description: When **true,** Vaulting is enabled for the account.
        type: string
      enableVaultingMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `enableVaulting` property
          is editable.

          "
      enableWebFormsSeparateUserPermissions:
        description: ""
        type: string
      enableWebFormsSeparateUserPermissionsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      enableWitnessing:
        description: Reserved for DocuSign.
        type: string
      enableWitnessingMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `enableWitnessing` property
          is editable.

          "
      enforceTemplateNameUniqueness:
        description: When **true,** the template name must be unique.
        type: string
      enforceTemplateNameUniquenessMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `enforceTemplateNameUniqueness`
          property is editable.

          "
      enforceTlsEmails:
        description: ""
        type: string
      enforceTlsEmailsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      envelopeIntegrationAllowed:
        description:
          "Shows the envelope integration rule for the account, which indicates
          whether custom admins can enable Connect for their accounts. Enumeration
          values are: \n\n- `not_allowed`\n- `full` \n\n**Note:** Only SysAdmin users
          can change this setting.                                                                                 "
        type: string
      envelopeIntegrationAllowedMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `envelopeIntegrationAllowed`
          property is editable.

          "
      envelopeIntegrationEnabled:
        description: |-
          When **true,** enables Connect for an account. Note that Connect integration requires additional configuration that must be set up for it to take effect; this switch is only the on/off control for the account.

          **Note:** Only Admin users can change this setting, and only when `envelopeIntegrationAllowed` is set.
        type: string
      envelopeIntegrationEnabledMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `envelopeIntegrationEnabled`
          property is editable.

          "
      EnvelopeLimitsTotalDocumentSizeAllowedInMB:
        description: ""
        type: string
      EnvelopeLimitsTotalDocumentSizeAllowedInMBEnabled:
        description: ""
        type: string
      EnvelopeLimitsTotalDocumentSizeAllowedInMBEnabledMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      EnvelopeLimitsTotalDocumentSizeAllowedInMBMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      envelopeSearchMode:
        description: ""
        type: string
      envelopeSearchModeMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      envelopeStampingDefaultValue:
        description:
          When **true,** envelopes sent by this account automatically have
          the envelope ID stamped in the document margins, unless the sender selects
          not to have the documents stamped.
        type: string
      envelopeStampingDefaultValueMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `envelopeStampingDefaultValue`
          property is editable.

          "
      exitPrompt:
        description: ""
        type: string
      exitPromptMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      expressSend:
        description:
          Boolean that specifies whether a member of an account can express
          send (without tags) or must send with tags on documents.
        type: string
      expressSendAllowTabs:
        description:
          Boolean that specifies whether a member of an account can send
          templates without the tags being stripped out, even when the account is
          configured to let its users express send only (they cannot use the tagger).
        type: string
      expressSendAllowTabsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `expressSendAllowTabs` property
          is editable.

          "
      expressSendMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `expressSend` property is
          editable.

          "
      externalDocumentSources:
        "$ref": "#/definitions/externalDocumentSources"
        description: A list of external document sources such as DropBox and OneDrive.
      externalSignaturePadType:
        description: |
          Specifies the signature pad type.
          Valid values are:

          - `none`
          - `topaz`
          - `e_padv9`
          - `e_pad_integrisign`
          - `topaz_sigplusextlite`

          **Note:** Only Admin users can change this setting.
        type: string
      externalSignaturePadTypeMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `externalSignaturePadType`
          property is editable.

          "
      faxOutEnabled:
        description: |-
          When **true,** fax delivery to recipients is allowed for the account.

          **Note:** Only Admin users can change this setting.
        type: string
      faxOutEnabledMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `faxOutEnabled` property
          is editable.

          "
      finishReminder:
        description: ""
        type: string
      finishReminderMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      guidedFormsHtmlAllowed:
        description:
          When **true,** HTML used to implement [Guided Forms](https://www.docusign.com/products/guided-forms)
          is enabled for the account.
        type: string
      guidedFormsHtmlAllowedMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      guidedFormsHtmlConversionPolicy:
        description: ""
        type: string
      guidedFormsHtmlConversionPolicyMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      hasRecipientConnectClaimedDomain:
        description: ""
        type: string
      hideAccountAddressInCoC:
        description:
          Boolean that specifies whether to hide the account address in
          the Certificate of Completion.
        type: string
      hideAccountAddressInCoCMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `hideAccountAddressInCoC`
          property is editable.

          "
      hidePricing:
        description:
          Boolean that specifies whether to hide the pricing functionality
          for an account.
        type: string
      hidePricingMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `hidePricing` property is
          editable.

          "
      idCheckConfigurations:
        description: A list of ID check configuration objects.
        type: array
        items:
          "$ref": "#/definitions/idCheckConfiguration"
      idCheckExpire:
        description: |-
          Determines when a user's authentication with the account expires. Valid values are:

          - `always`: Users are required to authenticate each time.
          - `variable`: If the authentication for a user is valid and falls within the value for the `idCheckExpireDays` property, the user is not required to authenticate again.

          **Note:** Only Admin users can change this setting.
        type: string
      idCheckExpireDays:
        description: |-
          The number of days before user authentication credentials expire. A value of `0` specifies that users must re-authenticate for each new session.

          **Note:** Only Admin users can change this setting.
        type: string
      idCheckExpireDaysMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `idCheckExpireDays` property
          is editable.

          "
      idCheckExpireMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `idCheckExpire` property
          is editable.

          "
      idCheckExpireMinutes:
        description:
          The number of minutes before user authentication credentials
          expire.
        type: string
      idCheckExpireMinutesMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `idCheckExpireMinutes` property
          is editable.

          "
      idCheckRequired:
        description: |-
          Indicates if authentication is configured for the account. Valid values are:

          - `always`: Authentication checks are performed on every envelope.
          - `never`: Authentication checks are not performed on any envelopes.
          - `optional`: Authentication is configurable per envelope.

          **Note:** Only Admin users can change this setting.
        type: string
      idCheckRequiredMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `idCheckRequired` property
          is editable.

          "
      identityVerification:
        description:
          Specifies the ID Verification workflow applied on an envelope
          by workflow ID. <br/>See the [list](/docs/esign-rest-api/reference/accounts/identityverifications/list/)
          method in the [IdentityVerifications](/docs/esign-rest-api/reference/accounts/identityverifications/)
          resource for more information on how to retrieve workflow IDs available
          for an account. <br/>This can be used in addition to other [recipient authentication](https://support.docusign.com/s/document-item?bundleId=gav1643676262430&topicId=kzp1578456318101.html)
          methods. <br/>Note that ID Verification and ID Check are two distinct methods.
          ID Verification checks recipients' identity by verifying their ID while
          ID Check relies on data available on public records (such as current and
          former address).
        type: array
        items:
          "$ref": "#/definitions/accountIdentityVerificationWorkflow"
      identityVerificationMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `identityVerification` property
          is editable.

          "
      idfxKBAAuthenticationOverride:
        description: ""
        type: string
      idfxKBAAuthenticationOverrideMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      idfxPhoneAuthenticationOverride:
        description: ""
        type: string
      idfxPhoneAuthenticationOverrideMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      ignoreErrorIfAnchorTabNotFound:
        description: Reserved for DocuSign.
        type: string
      ignoreErrorIfAnchorTabNotFoundMetadataEnabled:
        "$ref": "#/definitions/settingsMetadata"
        description: Reserved for DocuSign.
      inPersonIDCheckQuestion:
        description: |-
          A text field containing the question that an in-person signing host uses to collect personal information from the recipient. The recipient's response to this question is saved and can be viewed in the certificate associated with the envelope.

          **Note:** Only Admin users can change this setting.
        type: string
      inPersonIDCheckQuestionMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `inPersonIDCheckQuestion`
          property is editable.

          "
      inPersonSigningEnabled:
        description: When **true,** in-person signing is enabled for the account.
        type: string
      inPersonSigningEnabledMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `inPersonSigningEnabled`
          property is editable.

          "
      inSessionEnabled:
        description: |-
          When **true,** the account can send in-session (embedded) envelopes.

          **Note:** Only Admin users can change this setting.
        type: string
      inSessionEnabledMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `inSessionEnabled` property
          is editable.

          "
      inSessionSuppressEmails:
        description: |-
          When **true,** emails are not sent to the in-session (embedded) recipients on an envelope.

          **Note:** Only Admin users can change this setting.
        type: string
      inSessionSuppressEmailsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `inSessionSuppressEmails`
          property is editable.

          "
      isConnectDocumentFieldsEnabled:
        description: ""
        type: string
      linkedExternalPrimaryAccounts:
        description: ""
        type: array
        items:
          "$ref": "#/definitions/linkedExternalPrimaryAccount"
      maximumSigningGroups:
        description: |-
          The maximum number of signing groups allowed on the account. The default value is `50`. This setting is only shown in responses that list account settings.

          **Note:** Only SysAdmin users can change this setting.
        type: string
      maximumSigningGroupsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `maximumSigningGroups` property
          is editable.

          "
      maximumUsersPerSigningGroup:
        description: |-
          The maximum number of users per signing group. The default value is `50`. This setting is only shown in responses that list account settings.

          **Note:** Only SysAdmin users can change this setting.
        type: string
      maximumUsersPerSigningGroupMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `maximumUsersPerSigningGroup`
          property is editable.

          "
      maxNumberOfCustomStamps:
        description: The maximum number of custom stamps.
        type: string
      mergeMixedModeResults:
        description: ""
        type: string
      mergeMixedModeResultsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      mobileSessionTimeout:
        description: |-
          The number of minutes of inactivity before a mobile user is automatically logged out of the system. Valid values are `1` to `120` minutes. The default value is `20` minutes.

          **Note:** Only Admin users can change this setting.
        type: string
      mobileSessionTimeoutMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `mobileSessionTimeout` property
          is editable.

          "
      numberOfActiveCustomStamps:
        description:
          The number of active custom stamps associated with the account.
          DocuSign calculates this number automatically. This property is only visible
          to the DocuSign account manager.
        type: string
      optInMobileSigningV02:
        description:
          Boolean that specifies whether to opt in for Signing v02 on Mobile
          Devices functionality.
        type: string
      optInMobileSigningV02Metadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `optInMobileSigningV02`
          property is editable.

          "
      optInUniversalSignatures:
        description: ""
        type: string
      optOutAutoNavTextAndTabColorUpdates:
        description:
          Boolean that allows envelope senders to opt out of the recipient
          signing auto-navigation feature and opt out of updating tab font color.
        type: string
      optOutAutoNavTextAndTabColorUpdatesMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `optOutAutoNavTextAndTabColorUpdates`
          property is editable.

          "
      optOutNewPlatformSeal:
        description:
          Boolean that specifies whether to allow envelope senders to opt
          out of using the new platform seal.
        type: string
      optOutNewPlatformSealPlatformMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `optOutNewPlatformSealPlatform`
          property is editable.

          "
      pdfMaxChunkedUploadPartSize:
        description: ""
        type: string
      pdfMaxChunkedUploadPartSizeMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      pdfMaxChunkedUploadTotalSize:
        description: ""
        type: string
      pdfMaxChunkedUploadTotalSizeMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      pdfMaxIndividualUploadSize:
        description: ""
        type: string
      pdfMaxIndividualUploadSizeMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      phoneAuthRecipientMayProvidePhoneNumber:
        description: |-
          When **true,** senders can allow recipients to provide a phone number for the Phone Authentication process.

          **Note:** Only Admin users can change this setting.
        type: string
      phoneAuthRecipientMayProvidePhoneNumberMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `phoneAuthRecipientMayProvidePhoneNumber`
          property is editable.

          "
      pkiSignDownloadedPDFDocs:
        description:
          "The policy for adding a digital certificate to downloaded, printed,
          and emailed documents. \n\nPossible values are: \n\n- `no_sign`\n- `no_sign_allow_user_override`\n-
          `yes_sign` (Specifies that PDF files downloaded from the platform are signed.)\n\n**Note:**
          Only Admin users can change this setting.\n"
        type: string
      pkiSignDownloadedPDFDocsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `pkiSignDownloadedPDFDocs`
          property is editable.

          "
      readOnlyMode:
        description: ""
        type: string
      readOnlyModeMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      recipientsCanSignOffline:
        description: |
          When **true,**
          recipients receiving envelopes from this account
          can sign offline.

          **Note:** Only Admin users can change this setting.
        type: string
      recipientsCanSignOfflineMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `recipientsCanSignOffline`
          property is editable.

          "
      recipientSigningAutoNavigationControl:
        description: |
          When **true,** recipients receiving envelopes from this account can override auto-navigation functionality.

          **Note:** Only Admin users can change this setting.
        type: string
      recipientSigningAutoNavigationControlMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `recipientSigningAutoNavigationControl`
          property is editable.

          "
      require21CFRpt11Compliance:
        description: |
          When **true,**
          recipients are required
          to use a 21 CFR part 11-compliant signing experience.

          **Note:** Only Admin users can change this setting.
        type: string
      require21CFRpt11ComplianceMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `require21CFRpt11Compliance`
          property is editable.

          "
      requireDeclineReason:
        description: |
          When **true,** signers who decline to sign an envelope sent from this account
          are required to provide a reason for declining.

          **Note:** Only Admin users can change this setting.
        type: string
      requireDeclineReasonMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `requireDeclineReason` property
          is editable.

          "
      requireExternalUserManagement:
        description: |
          When **true,** the account requires external management of users.

          **Note:** Only Admin users can change this setting.
        type: string
      requireExternalUserManagementMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `requireExternalUserManagement`
          property is editable.

          "
      requireSignerCertificateType:
        description: |
          Sets the Digital Signature certificate requirements for sending envelopes.
          Valid values are:

          - `none`: A Digital Signature certificate is not required.
          - `docusign_express`: Signers must use a DocuSign Express certificate.
          - `docusign_personal`: Signers must use a DocuSign personal certificate.
          - `safe`
          - `open_trust`: Signers must use an OpenTrust certificate.
        type: string
      requireSignerCertificateTypeMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `requireSignerCertificateType`
          property is editable.

          "
      rsaVeridAccountName:
        description: |
          The RSA account name.

          **Note:**
          Only Admin users can change this setting. Modifying this value may disrupt
          your ID Check capability.
          Ensure you have the correct value before changing it.
        type: string
      rsaVeridPassword:
        description: |
          The password for the RSA account.


          **Note:**
          Only Admin users can change this setting. Modifying this value may disrupt
          your ID Check capability.
          Ensure you have the correct value before changing it.
        type: string
      rsaVeridRuleset:
        description: |
          The RSA rule set used with the account.

          **Note:**
          Only Admin users can change this setting. Modifying this value may disrupt
          your ID Check capability.
          Ensure you have the correct value before changing it.
        type: string
      rsaVeridUserId:
        description: |
          The user ID for the RSA account.

          **Note:**
          Only Admin users can change this setting. Modifying this value may disrupt
          your ID Check capability.
          Ensure you have the correct value before changing it.
        type: string
      sbsTransactionLevel:
        description: ""
        type: string
      selfSignedRecipientEmailDocument:
        description: |
          Sets how self-signed documents are presented to the email recipients.
          Valid values are:

          - `include_pdf`: A PDF of the completed document is attached to the email.
          - `include_link`: A secure link to the self-signed documents is included
             in the email.

          **Note:** Only Admin users can change this setting.
        type: string
      selfSignedRecipientEmailDocumentMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `selfSignedRecipientEmailDocument`
          property is editable.

          "
      selfSignedRecipientEmailDocumentUserOverride:
        description: |
          When **true,** the `selfSignedRecipientEmailDocument` user setting
          can be set for an individual user.
          The user setting overrides the account setting.

          **Note:** Only Admin users can change this account setting.
        type: string
      selfSignedRecipientEmailDocumentUserOverrideMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `selfSignedRecipientEmailDocumentUserOverride`
          property is editable.

          "
      senderCanSignInEachLocation:
        description: |
          When **true,** a signer can draw their signature in each
          location where a sign or initial tab exists. This functionality
          is typically used for mobile signing.

          **Note:** Only Admin users can change this setting.
        type: string
      senderCanSignInEachLocationMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `senderCanSignInEachLocation`
          property is editable.

          "
      senderMustAuthenticateSigning:
        description: |
          When **true,** a sender who is also a recipient of an envelope
          must follow the authentication requirements for the envelope.

          **Note:** Only Admin users can change this setting.
        type: string
      senderMustAuthenticateSigningMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `senderMustAuthenticateSigning`
          property is editable.

          "
      sendingTagsFontColor:
        description: |
          The account-wide default font color to use for the content of the tab.

          Valid values are:

          - `Black`
          - `BrightBlue`
          - `BrightRed`
          - `DarkGreen`
          - `DarkRed`
          - `Gold`
          - `Green`
          - `NavyBlue`
          - `Purple`
          - `White`
        type: string
      sendingTagsFontColorMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `sendingTagsFontColor` property
          is editable.

          "
      sendingTagsFontName:
        description: |-
          The account-wide default font to be used for the tab value. Supported fonts include:

          - `Default`
          - `Arial`
          - `ArialNarrow`
          - `Calibri`
          - `CourierNew`
          - `Garamond`
          - `Georgia`
          - `Helvetica`
          - `LucidaConsole`
          - `MSGothic`
          - `MSMincho`
          - `OCR-A`
          - `Tahoma`
          - `TimesNewRoman`
          - `Trebuchet`
          - `Verdana`
        type: string
      sendingTagsFontNameMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `sendingTagsFontName` property
          is editable.

          "
      sendingTagsFontSize:
        description: |-
          The account-wide default font size used for the information in the tab:

          - `Size7`
          - `Size8`
          - `Size9`
          - `Size10`
          - `Size11`
          - `Size12`
          - `Size14`
          - `Size16`
          - `Size18`
          - `Size20`
          - `Size22`
          - `Size24`
          - `Size26`
          - `Size28`
          - `Size36`
          - `Size48`
          - `Size72`
        type: string
      sendingTagsFontSizeMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `sendingTagsFontSize` property
          is editable.

          "
      sendLockoutRecipientNotification:
        description: ""
        type: string
      sendLockoutRecipientNotificationMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      sendToCertifiedDeliveryEnabled:
        description: |
          When true,
          the account can use the
          certified deliveries recipient type.
        type: string
      sendToCertifiedDeliveryEnabledMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `sendToCertifiedDeliveryEnabled`
          property is editable.

          "
      sessionTimeout:
        description:
          "The amount of idle activity time, in minutes, before a user
          is automatically logged out of the system. The minimum setting is 20 minutes
          and the maximum setting is 120 minutes.

          "
        type: string
      sessionTimeoutMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `sessionTimeout` property
          is editable.

          "
      setRecipEmailLang:
        description: |
          When **true,** senders can set the email language to use for
          each recipient.

          **Note:** Only Admin users can change this setting.
        type: string
      setRecipEmailLangMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `setRecipEmailLang` property
          is editable.

          "
      setRecipSignLang:
        description: |
          When **true,**
          setting a unique language for a recipient
          not only affects the email language, but also the signing
          language they are presented with. When **false,** only the email will
          be affected when the sender specifies a unique language for a
          recipient.

          **Note:** Only Admin users can change this setting.
        type: string
      setRecipSignLangMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `setRecipSignLang` property
          is editable.

          "
      sharedTemplateFolders:
        description:
          Boolean that specifies whether an account can use Shared Template
          Folders.
        type: string
      sharedTemplateFoldersMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `sharedTemplateFolders`
          property is editable.

          "
      showCompleteDialogInEmbeddedSession:
        description:
          Boolean that specifies whether complete dialogs are displayed
          directly within an application in embedded signing sessions.
        type: string
      showCompleteDialogInEmbeddedSessionMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `showCompleteDialogInEmbeddedSession`
          property is editable.

          "
      showConditionalRoutingOnSend:
        description:
          When **true,** Conditional Routing options display to senders
          during the sending experience.
        type: string
      showConditionalRoutingOnSendMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      showInitialConditionalFields:
        description:
          Boolean that specifies whether conditional field options are
          initially displayed (before a user makes entries).
        type: string
      showInitialConditionalFieldsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `showInitialConditionalFields`
          property is editable.

          "
      showLocalizedWatermarks:
        description: Boolean that specifies whether localized watermarks are displayed.
        type: string
      showLocalizedWatermarksMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `showLocalizedWatermarks`
          property is editable.

          "
      showMaskedFieldsWhenDownloadingDocumentAsSender:
        description: ""
        type: string
      showMaskedFieldsWhenDownloadingDocumentAsSenderMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      showTutorials:
        description: |
          When **true,**
          show tutorials.
        type: string
      showTutorialsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `showTutorials` property
          is editable.

          "
      signatureProviders:
        description:
          Names of electronic or digital signature providers that can be
          used.
        type: array
        items:
          type: string
      signatureProvidersMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `signatureProviders` property
          is editable.

          "
      signDateFormat:
        description: |
          The format for the signature date. Valid values are:

          - `d/M/yyyy`
          - `dd-MM-yy`
          - `dd-MMM-yy`
          - `dd-MM-yyyy`
          - `dd.MM.yyyy`
          - `dd-MMM-yyyy`
          - `dd MMMM yyyy`
          - `M/d/yyyy`
          - `MM-dd-yyyy`
          - `MM/dd/yyyy`
          - `MM/dd/yy`
          - `MMM-dd-yyyy`
          - `MMM d, yyyy`
          - `MMMM d, yyyy`
          - `yyyy-MM-dd`
          - `yyyy-MMM-dd`
          - `yyyy/MM/dd`
          - `yyyy MMMM d`

          **Note:** Only Admin users can change this setting.
        type: string
      signDateFormatMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `signDateFormat` property
          is editable.

          "
      signDateTimeAccountLanguageOverride:
        description: ""
        type: string
      signDateTimeAccountLanguageOverrideMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      signDateTimeAccountTimezoneOverride:
        description: ""
        type: string
      signDateTimeAccountTimezoneOverrideMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      signerAttachCertificateToEnvelopePDF:
        description: |
          When **true,**
          the Certificate of Completion is included in the PDF of the envelope documents
          when it is downloaded.

          **Note:** Only Admin users can change this setting.
        type: string
      signerAttachCertificateToEnvelopePDFMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `signerAttachCertificateToEnvelopePDF`
          property is editable.

          "
      signerAttachConcat:
        description: |
          When **true,** signer attachments are added to the parent document
          that contains the attachment.
          The default behavior creates
          a new document in the envelope for every signer attachment.

          **Note:** Only Admin users can change this setting.
        type: string
      signerAttachConcatMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `signerAttachConcat` property
          is editable.

          "
      signerCanCreateAccount:
        description: |
          When **true,**
          a signer can create a DocuSign account
          after signing.

          **Note:** Only Admin users can change this setting.
        type: string
      signerCanCreateAccountMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `signerCanCreateAccount`
          property is editable.

          "
      signerCanSignOnMobile:
        description: |
          When **true,** recipients can sign on a mobile device.

          **Note:** Only Admin users can change this setting.
        type: string
      signerCanSignOnMobileMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `signerCanSignOnMobile`
          property is editable.

          "
      signerInSessionUseEnvelopeCompleteEmail:
        description: |
          When **true,** an "envelope complete" email is sent to an in-session
          (embedded) or offline signer after DocuSign processes the envelope
          if in-session emails are not suppressed.

          **Note:** Only Admin users can change this setting.
        type: string
      signerInSessionUseEnvelopeCompleteEmailMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `signerInSessionUseEnvelopeCompleteEmail`
          property is editable.

          "
      signerLoginRequirements:
        description: |
          Sets the login requirements for signers. Valid values are:

          - `login_not_required`: Signers are not required to log in.
          - `login_required_if_account_holder`: If the signer has a DocuSign account,
            they must log in to sign the document.
          - `login_required_per_session`: The sender cannot send an envelope to anyone
            who does not have a DocuSign account.
          - `login_required_per_envelope`: The sender cannot send an envelope to anyone
            who does not have a DocuSign account, and the signer must also log in for
            each envelope they will sign.


          **Note:** Only Admin users can change this setting. If you use Direct PowerForms
          or captive (embedded signers), the "Account required" settings are bypassed for
          those signers. If your workflow requires that the signer have an account,
          you should not use those methods.
        type: string
      signerLoginRequirementsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `signerLoginRequirements`
          property is editable.

          "
      signerMustHaveAccount:
        description: |
          When **true,** senders can only send an envelope to a recipient
          that has a DocuSign account.

          **Note:** Only Account Administrators can change this setting.
        type: string
      signerMustHaveAccountMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `signerMustHaveAccount`
          property is editable.

          "
      signerMustLoginToSign:
        description: |
          When **true,**
          signers must log in to the DocuSign platform to sign an envelope.

          **Note:** Only Admin users can change this setting.
        type: string
      signerMustLoginToSignMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `signerMustLoginToSign`
          property is editable.

          "
      signerShowSecureFieldInitialValues:
        description: |
          When **true,** the initial values of all SecureFields are written
          to the document when it is sent.

          **Note:** Only Admin users can change this setting.
        type: string
      signerShowSecureFieldInitialValuesMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `signerShowSecureFieldInitialValues`
          property is editable.

          "
      signingSessionTimeout:
        description: |
          The number of minutes
          that a signing session stays
          alive without any activity.
        type: string
      signingSessionTimeoutMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `signingSessionTimeout`
          property is editable.

          "
      signingUiVersion:
        description: "Reserved for DocuSign.

          "
        type: string
      signingUiVersionMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: Reserved for DocuSign.
      signTimeFormat:
        description: |
          The format for the signature time. Valid values are:

          - `none`
          - `HH:mm`
          - `h:mm`
          - `HH:mm:ss`
          - `h:mm:ss`
        type: string
      signTimeFormatMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `signTimeFormat` property
          is editable.

          "
      signTimeShowAmPm:
        description: |
          When **true,**
          the time shows the AM or PM indicator.
        type: string
      signTimeShowAmPmMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `signTimeShowAmPm` property
          is editable.

          "
      simplifiedSendingEnabled:
        description:
          When **true,** simplified sending is enabled for the account.
          The default value is **false.**
        type: string
      simplifiedSendingEnabledMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `simplifiedSendingEnabled`
          property is editable.

          "
      singleSignOnEnabled:
        description: |
          When **true,**
          single sign-on (SSO) is enabled.
        type: string
      singleSignOnEnabledMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `singleSignOnEnabled` property
          is editable.

          "
      skipAuthCompletedEnvelopes:
        description: |
          When **true,**
          do not require authentication prompt for viewing completed envelopes
        type: string
      skipAuthCompletedEnvelopesMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `skipAuthCompletedEnvelopes`
          property is editable.

          "
      socialIdRecipAuth:
        description: |
          When **true,**
          recipients can use
          [social ids](https://support.docusign.com/guides/signer-authentication)
          when signing
        type: string
      socialIdRecipAuthMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `socialIdRecipAuth` property
          is editable.

          "
      specifyDocumentVisibility:
        description:
          "When **true,** senders can specify the visibility of the documents
          in an envelope at the recipient level.

          "
        type: string
      specifyDocumentVisibilityMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `specifyDocumentVisibility`
          property is editable.

          "
      startInAdvancedCorrect:
        description: |
          When **true,**
          when initiating correction of an in-flight envelope
          the sender starts in advanced correct mode.
        type: string
      startInAdvancedCorrectMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `startInAdvancedCorrect`
          property is editable.

          "
      supplementalDocumentsMustAccept:
        description:
          When **true,** account users must accept supplemental documents
          when signing.
        type: string
      supplementalDocumentsMustAcceptMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `supplementalDocumentsMustAccept`
          property is editable.

          "
      supplementalDocumentsMustRead:
        description:
          When **true,** account users must both view and accept supplemental
          documents when signing.
        type: string
      supplementalDocumentsMustReadMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `supplementalDocumentsMustRead`
          property is editable.

          "
      supplementalDocumentsMustView:
        description:
          When **true,** account users must view supplemental documents
          when signing.
        type: string
      supplementalDocumentsMustViewMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `supplementalDocumentsMustView`
          property is editable.

          "
      suppressCertificateEnforcement:
        description:
          Boolean that specifies whether or not API calls require a x509
          cert in the header of the call.
        type: string
      suppressCertificateEnforcementMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `suppressCertificateEnforcement`
          property is editable.

          "
      tabAccountSettings:
        "$ref": "#/definitions/tabAccountSettings"
        description: Account-wide tab settings.
      timezoneOffsetAPI:
        description: |
          Specifies the time zone
          to use with the API.

          Valid values are:

          - `TZ_01_AfghanistanStandardTime`
          - `TZ_02_AlaskanStandardTime`
          - `TZ_03_ArabStandardTime`
          - `TZ_04_ArabianStandardTime`
          - `TZ_05_ArabicStandardTime`
          - `TZ_06_ArgentinaStandardTime`
          - `TZ_07_AtlanticStandardTime`
          - `TZ_08_AUS_CentralStandardTime`
          - `TZ_09_AUS_EasternStandardTime`
          - `TZ_10_AzerbaijanStandardTime`
          - `TZ_11_AzoresStandardTime`
          - `TZ_12_BangladeshStandardTime`
          - `TZ_13_CanadaCentralStandardTime`
          - `TZ_14_CapeVerdeStandardTime`
          - `TZ_15_CaucasusStandardTime`
          - `TZ_16_CentralAustraliaStandardTime`
          - `TZ_17_CentralAmericaStandardTime`
          - `TZ_18_CentralAsiaStandardTime`
          - `TZ_19_CentralBrazilianStandardTime`
          - `TZ_20_CentralEuropeStandardTime`
          - `TZ_21_CentralEuropeanStandardTime`
          - `TZ_22_CentralPacificStandardTime`
          - `TZ_23_CentralStandardTime`
          - `TZ_24_CentralStandardTimeMexico`
          - `TZ_25_ChinaStandardTime`
          - `TZ_26_DatelineStandardTime`
          - `TZ_27_E_AfricaStandardTime`
          - `TZ_28_E_AustraliaStandardTime`
          - `TZ_29_E_EuropeStandardTime`
          - `TZ_30_E_SouthAmericaStandardTime`
          - `TZ_31_EasternStandardTime`
          - `TZ_32_EgyptStandardTime`
          - `TZ_33_EkaterinburgStandardTime`
          - `TZ_34_FijiStandardTime`
          - `TZ_35_FLE_StandardTime`
          - `TZ_36_GeorgianStandardTime`
          - `TZ_37_GMT_StandardTime`
          - `TZ_38_GreenlandStandardTime`
          - `TZ_39_GreenwichStandardTime`
          - `TZ_40_GTB_StandardTime`
          - `TZ_41_HawaiianStandardTime`
          - `TZ_42_IndiaStandardTime`
          - `TZ_43_IranStandardTime`
          - `TZ_44_IsraelStandardTime`
          - `TZ_45_JordanStandardTime`
          - `TZ_46_KaliningradStandardTime`
          - `TZ_47_KamchatkaStandardTime`
          - `TZ_48_KoreaStandardTime`
          - `TZ_49_MagadanStandardTime`
          - `TZ_50_MauritiusStandardTime`
          - `TZ_51_MidAtlanticStandardTime`
          - `TZ_52_MiddleEastStandardTime`
          - `TZ_53_MontevideoStandardTime`
          - `TZ_54_MoroccoStandardTime`
          - `TZ_55_MountainStandardTime`
          - `TZ_56_MountainStandardTimeMMexico`
          - `TZ_57_MyanmarStandardTime`
          - `TZ_58_N_CentralAsiaStandardTime`
          - `TZ_59_NamibiaStandardTime`
          - `TZ_60_NepalStandardTime`
          - `TZ_61_NewZealandStandardTime`
          - `TZ_62_NewfoundlandStandardTime`
          - `TZ_63_NorthAsiaEastStandardTime`
          - `TZ_64_NorthAsiaStandardTime`
          - `TZ_65_PacificSAStandardTime`
          - `TZ_66_PacificStandardTime`
          - `TZ_67_PacificStandardTimeMexico`
          - `TZ_68_PakistanStandardTime`
          - `TZ_69_ParaguayStandardTime`
          - `TZ_70_RomanceStandardTime`
          - `TZ_71_RussianStandardTime`
          - `TZ_72_SAEasternStandardTime`
          - `TZ_73_SAPacificStandardTime`
          - `TZ_74_SAWesternStandardTime`
          - `TZ_75_SamoaStandardTime`
          - `TZ_76_SE_AsiaStandardTime`
          - `TZ_77_SingaporeStandardTime`
          - `TZ_78_SouthAfricaStandardTime`
          - `TZ_79_SriLankaStandardTime`
          - `TZ_80_SyriaStandardTime`
          - `TZ_81_TaipeiStandardTime`
          - `TZ_82_TasmaniaStandardTime`
          - `TZ_83_TokyoStandardTime`
          - `TZ_84_TongaStandardTime`
          - `TZ_85_TurkeyStandardTime`
          - `TZ_86_UlaanbaatarStandardTime`
          - `TZ_87_US_EasternStandardTime`
          - `TZ_88_USMountainStandardTime`
          - `TZ_89_VenezuelaStandardTime`
          - `TZ_90_VladivostokStandardTime`
          - `TZ_91_W_AustraliaStandardTime`
          - `TZ_92_W_CentralAfricaStandardTime`
          - `TZ_93_W_EuropeStandardTime`
          - `TZ_94_WestAsiaStandardTime`
          - `TZ_95_WestPacificStandardTime`
          - `TZ_96_YakutskStandardTime`
        type: string
      timezoneOffsetAPIMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `timezoneOffsetAPI` property
          is editable.

          "
      timezoneOffsetUI:
        description: |
          Specifies the time zone
          to use in the UI.

          Valid values are:

          - `TZ_01_AfghanistanStandardTime`
          - `TZ_02_AlaskanStandardTime`
          - `TZ_03_ArabStandardTime`
          - `TZ_04_ArabianStandardTime`
          - `TZ_05_ArabicStandardTime`
          - `TZ_06_ArgentinaStandardTime`
          - `TZ_07_AtlanticStandardTime`
          - `TZ_08_AUS_CentralStandardTime`
          - `TZ_09_AUS_EasternStandardTime`
          - `TZ_10_AzerbaijanStandardTime`
          - `TZ_11_AzoresStandardTime`
          - `TZ_12_BangladeshStandardTime`
          - `TZ_13_CanadaCentralStandardTime`
          - `TZ_14_CapeVerdeStandardTime`
          - `TZ_15_CaucasusStandardTime`
          - `TZ_16_CentralAustraliaStandardTime`
          - `TZ_17_CentralAmericaStandardTime`
          - `TZ_18_CentralAsiaStandardTime`
          - `TZ_19_CentralBrazilianStandardTime`
          - `TZ_20_CentralEuropeStandardTime`
          - `TZ_21_CentralEuropeanStandardTime`
          - `TZ_22_CentralPacificStandardTime`
          - `TZ_23_CentralStandardTime`
          - `TZ_24_CentralStandardTimeMexico`
          - `TZ_25_ChinaStandardTime`
          - `TZ_26_DatelineStandardTime`
          - `TZ_27_E_AfricaStandardTime`
          - `TZ_28_E_AustraliaStandardTime`
          - `TZ_29_E_EuropeStandardTime`
          - `TZ_30_E_SouthAmericaStandardTime`
          - `TZ_31_EasternStandardTime`
          - `TZ_32_EgyptStandardTime`
          - `TZ_33_EkaterinburgStandardTime`
          - `TZ_34_FijiStandardTime`
          - `TZ_35_FLE_StandardTime`
          - `TZ_36_GeorgianStandardTime`
          - `TZ_37_GMT_StandardTime`
          - `TZ_38_GreenlandStandardTime`
          - `TZ_39_GreenwichStandardTime`
          - `TZ_40_GTB_StandardTime`
          - `TZ_41_HawaiianStandardTime`
          - `TZ_42_IndiaStandardTime`
          - `TZ_43_IranStandardTime`
          - `TZ_44_IsraelStandardTime`
          - `TZ_45_JordanStandardTime`
          - `TZ_46_KaliningradStandardTime`
          - `TZ_47_KamchatkaStandardTime`
          - `TZ_48_KoreaStandardTime`
          - `TZ_49_MagadanStandardTime`
          - `TZ_50_MauritiusStandardTime`
          - `TZ_51_MidAtlanticStandardTime`
          - `TZ_52_MiddleEastStandardTime`
          - `TZ_53_MontevideoStandardTime`
          - `TZ_54_MoroccoStandardTime`
          - `TZ_55_MountainStandardTime`
          - `TZ_56_MountainStandardTimeMMexico`
          - `TZ_57_MyanmarStandardTime`
          - `TZ_58_N_CentralAsiaStandardTime`
          - `TZ_59_NamibiaStandardTime`
          - `TZ_60_NepalStandardTime`
          - `TZ_61_NewZealandStandardTime`
          - `TZ_62_NewfoundlandStandardTime`
          - `TZ_63_NorthAsiaEastStandardTime`
          - `TZ_64_NorthAsiaStandardTime`
          - `TZ_65_PacificSAStandardTime`
          - `TZ_66_PacificStandardTime`
          - `TZ_67_PacificStandardTimeMexico`
          - `TZ_68_PakistanStandardTime`
          - `TZ_69_ParaguayStandardTime`
          - `TZ_70_RomanceStandardTime`
          - `TZ_71_RussianStandardTime`
          - `TZ_72_SAEasternStandardTime`
          - `TZ_73_SAPacificStandardTime`
          - `TZ_74_SAWesternStandardTime`
          - `TZ_75_SamoaStandardTime`
          - `TZ_76_SE_AsiaStandardTime`
          - `TZ_77_SingaporeStandardTime`
          - `TZ_78_SouthAfricaStandardTime`
          - `TZ_79_SriLankaStandardTime`
          - `TZ_80_SyriaStandardTime`
          - `TZ_81_TaipeiStandardTime`
          - `TZ_82_TasmaniaStandardTime`
          - `TZ_83_TokyoStandardTime`
          - `TZ_84_TongaStandardTime`
          - `TZ_85_TurkeyStandardTime`
          - `TZ_86_UlaanbaatarStandardTime`
          - `TZ_87_US_EasternStandardTime`
          - `TZ_88_USMountainStandardTime`
          - `TZ_89_VenezuelaStandardTime`
          - `TZ_90_VladivostokStandardTime`
          - `TZ_91_W_AustraliaStandardTime`
          - `TZ_92_W_CentralAfricaStandardTime`
          - `TZ_93_W_EuropeStandardTime`
          - `TZ_94_WestAsiaStandardTime`
          - `TZ_95_WestPacificStandardTime`
          - `TZ_96_YakutskStandardTime`
        type: string
      timezoneOffsetUIMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `timezoneOffsetUI` property
          is editable.

          "
      universalSignatureOptIn:
        description: "Reserved for DocuSign.

          "
        type: string
      useAccountLevelEmail:
        description: "Reserved for DocuSign.

          "
        type: string
      useAccountLevelEmailMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `useAccountLevelEmail` property
          is editable.

          "
      useConsumerDisclosure:
        description: |
          When **true,** the account uses an Electronic Record and
          Signature Disclosure Statement.

          **Note:** Only Admin users can change this setting.
        type: string
      useConsumerDisclosureMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `useConsumerDisclosure`
          property is editable.

          "
      useConsumerDisclosureWithinAccount:
        description:
          When **true,** specifies that recipients in the same account
          as the sender must agree to eSign an Electronic Record and Signature Disclosure
          Statement.
        type: string
      useConsumerDisclosureWithinAccountMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `useConsumerDisclosureWithinAccount`
          property is editable.

          "
      useDerivedKeys:
        description: "Reserved for DocuSign.

          "
        type: string
      useDerivedKeysMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `useDerivedKeys` property
          is editable.

          "
      useDocuSignExpressSignerCertificate:
        description: |
          When **true,**
          signers
          are required to use Express Digital Signatures.
        type: string
      useDocuSignExpressSignerCertificateMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `useDocuSignExpressSignerCertificate`
          property is editable.

          "
      useEnvelopeSearchMixedMode:
        description: ""
        type: string
      useEnvelopeSearchMixedModeMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      useMultiAppGroupsData:
        description: ""
        type: string
      useMultiAppGroupsDataMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      useNewBlobForPdf:
        description: "Reserved for DocuSign.

          "
        type: string
      useNewBlobForPdfMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `useNewBlobForPdf` property
          is editable.

          "
      useNewEnvelopeSearch:
        description: ""
        type: string
      useNewEnvelopeSearchMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      useNewEnvelopeSearchOnlyWhenSearchingAfterDate:
        description: ""
        type: string
      useNewEnvelopeSearchOnlyWhenSearchingAfterDateMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      useNewEnvelopeSearchOnlyWithSearchTerm:
        description: ""
        type: string
      useNewEnvelopeSearchOnlyWithSearchTermMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      useSAFESignerCertificates:
        description: |
          When **true,**
          signers are
          required to use SAFE digital signatures.
        type: string
      useSAFESignerCertificatesMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `useSAFESignerCertificates`
          property is editable.

          "
      usesAPI:
        description: |
          When **true,**
          the account can use the API.

          **Note:** Only SysAdmin users can change this setting.
        type: string
      usesAPIMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `usesAPI` property is editable.

          "
      useSignatureProviderPlatform:
        description:
          Boolean that specifies whether the account uses the digital signature
          provider platform to eSign.
        type: string
      useSignatureProviderPlatformMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `useSignatureProviderPlatform`
          property is editable.

          "
      useSmartContractsV1:
        description: ""
        type: string
      validationsAllowed:
        description:
          Boolean that specifies whether validations on recipient email
          domains are allowed.
        type: string
      validationsAllowedMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `validationsAllowed` property
          is editable.

          "
      validationsBrand:
        description: |
          Valid values are:

          - `docusign`
          - `account`
        type: string
      validationsBrandMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `validationsBrand` property
          is editable.

          "
      validationsCadence:
        description: |
          Valid values are:

          - `none`
          - `monthly`
        type: string
      validationsCadenceMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `validationsCadence` property
          is editable.

          "
      validationsEnabled:
        description: |
          When **true,**
          enables validations.
        type: string
      validationsEnabledMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `validationsEnabled` property
          is editable.

          "
      validationsReport:
        description: |
          Valid values are:

          - `none`
          - `life_sciences_part11`
        type: string
      validationsReportMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `validationsReport` property
          is editable.

          "
      waterMarkEnabled:
        description: |
          When **true,**
          the
          [watermark feature](https://support.docusign.com/s/articles/How-do-I-manage-the-watermark-for-In-Process-envelopes-sent-from-my-account)
          is enabled for the account.
        type: string
      waterMarkEnabledMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `waterMarkEnabled` property
          is editable.

          "
      writeReminderToEnvelopeHistory:
        description: |-
          When **true,**
          sent reminders are included in the envelope history.
        type: string
      writeReminderToEnvelopeHistoryMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `writeReminderToEnvelopeHistory`
          property is editable.

          "
      wurflMinAllowableScreenSize:
        description: The smallest screen allowed.
        type: string
      wurflMinAllowableScreenSizeMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `wurflMinAllowableScreenSize`
          property is editable.

          "
    x-ds-definition-name: accountSettingsInformation
    x-ms-summary:
      Contains account settings information. Used in requests to set property
      values. Used in responses to report property values.
  accountSharedAccess:
    description: Contains shared access information.
    type: object
    properties:
      accountId:
        description: The account ID associated with the envelope.
        type: string
      endPosition:
        description: "The last index position in the result set. "
        type: string
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          A complex type containing an errorCode and message identifying
          the error that occurred.
      nextUri:
        description:
          "The URI for the next chunk of records based on the search request.
          It is `null` if this is the last set of results for the search. "
        type: string
      previousUri:
        description:
          "The URI for the prior chunk of records based on the search request.
          It is `null` if this is the first set of results for the search. "
        type: string
      resultSetSize:
        description:
          The number of results in this response. Because you can filter
          which entries are included in the response, this value is always less than
          or equal to the `totalSetSize`.
        type: string
      sharedAccess:
        description:
          A list of shared access information of envelope and templates
          for the users specified in the request.
        type: array
        items:
          "$ref": "#/definitions/memberSharedItems"
      startPosition:
        description: The starting index position of the current result set.
        type: string
      totalSetSize:
        description:
          The total number of items in the result set. This value is always
          greater than or equal to the value of `resultSetSize`.
        type: string
    x-ds-definition-name: accountSharedAccess
    x-ms-summary: Contains shared access information.
  accountSignature:
    type: object
    properties:
      adoptedDateTime:
        description: The UTC date and time when the user adopted the signature.
        type: string
      createdDateTime:
        description: The UTC DateTime when the item was created.
        type: string
      customField:
        description: ""
        type: string
      dateStampProperties:
        "$ref": "#/definitions/dateStampProperties"
        description: |-
          Specifies the area in which a date stamp is placed. This parameter uses pixel positioning to draw a rectangle at the center of the stamp area. The stamp is superimposed on top of this central area.

          This property contains the following information about the central rectangle:

          - `DateAreaX`: The X axis position of the top-left corner.
          - `DateAreaY`: The Y axis position of the top-left corner.
          - `DateAreaWidth`: The width of the rectangle.
          - `DateAreaHeight`: The height of the rectangle.
      disallowUserResizeStamp:
        description: When **true,** users may not resize the stamp.
        type: string
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      externalID:
        description: Optionally specify an external identifier for the user's signature.
        type: string
      imageBase64:
        description: ""
        type: string
      imageType:
        description: |-
          Specificies the type of image. Valid values:

          - `stamp_image`
          - `signature_image`
          - `initials_image`
        type: string
      initials150ImageId:
        description: The ID of the user's initials image.
        type: string
      initialsImageUri:
        description: The URI for retrieving the image of the user's initials.
        type: string
      isDefault:
        description:
          Boolean that specifies whether the signature is the default signature
          for the user.
        type: string
      lastModifiedDateTime:
        description: The date and time that the item was last modified.
        type: string
      nrdsId:
        description:
          The National Association of Realtors (NAR) membership ID for
          a user who is a realtor.
        type: string
      nrdsLastName:
        description: The realtor's last name.
        type: string
      nrdsStatus:
        description: |-
          The realtor's NAR membership status. The value `active` verifies that the user is a current NAR member. Valid values are:

          - `Active`
          - `Inactive`
          - `Terminate`
          - `Provisional`
          - `Deceased`
          - `Suspend`
          - `Unknown`
        type: string
      phoneticName:
        description: The phonetic spelling of the `signatureName`.
        type: string
      signature150ImageId:
        description: The ID of the user's signature image.
        type: string
      signatureFont:
        description: |
          The font type to use for the signature if the signature is not drawn. The following font styles  are supported. The quotes are to indicate that these values are strings, not `enums`.

          - `"1_DocuSign"`
          - `"2_DocuSign"`
          - `"3_DocuSign"`
          - `"4_DocuSign"`
          - `"5_DocuSign"`
          - `"6_DocuSign"`
          - `"7_DocuSign"`
          - `"8_DocuSign"`
          - `"Mistral"`
          - `"Rage Italic"`
        type: string
      signatureGroups:
        description: ""
        type: array
        items:
          "$ref": "#/definitions/signatureGroup"
      signatureId:
        description:
          Specifies the signature ID associated with the signature name.
          You can use the signature ID in the URI in place of the signature name,
          and the value stored in the `signatureName` property in the body is used.
          This allows the use of special characters (such as "&", "<", ">") in a the
          signature name. Note that with each update to signatures, the returned signature
          ID might change, so the caller will need to trigger off the signature name
          to get the new signature ID.
        type: string
      signatureImageUri:
        description:
          An endpoint URI that you can use to retrieve the user's signature
          image.
        type: string
      signatureInitials:
        description: Specifies the user's signature in initials format.
        type: string
      signatureName:
        description: Specifies the user's signature name.
        type: string
      signatureRights:
        description: |-
          The rights that the user has to the signature. Valid values are:

          - `none`
          - `read`
          - `admin`
        type: string
      signatureType:
        description: Specifies the type of signature.
        type: string
      signatureUsers:
        description: ""
        type: array
        items:
          "$ref": "#/definitions/signatureUser"
      stampFormat:
        description:
          "The format of a stamp. Valid values are:\n\n- `NameHanko`: The
          stamp represents only the signer's name.\n- `NameDateHanko`: The stamp represents
          the signer's name and the date. "
        type: string
      stampImageUri:
        description: The URI for retrieving the image of the user's stamp.
        type: string
      stampSizeMM:
        description:
          The physical height of the stamp image (in millimeters) that
          the stamp vendor recommends for displaying the image in PDF documents.
        type: string
      stampType:
        description: |-
          The type of stamp. Valid values are:

          - `signature`: A signature image. This is the default value.
          - `stamp`: A stamp image.
          - null
        type: string
      status:
        description:
          "Indicates the envelope status. Valid values are:\n\n* sent -
          The envelope is sent to the recipients. \n* created - The envelope is saved
          as a draft and can be modified and sent later."
        type: string
    x-ds-definition-name: accountSignature
    description: ""
    x-ms-summary: ""
  accountSignatureDefinition:
    type: object
    properties:
      dateStampProperties:
        "$ref": "#/definitions/dateStampProperties"
        description: |-
          Specifies the area in which a date stamp is placed. This parameter uses pixel positioning to draw a rectangle at the center of the stamp area. The stamp is superimposed on top of this central area.

          This property contains the following information about the central rectangle:

          - `DateAreaX`: The X axis position of the top-left corner.
          - `DateAreaY`: The Y axis position of the top-left corner.
          - `DateAreaWidth`: The width of the rectangle.
          - `DateAreaHeight`: The height of the rectangle.
      disallowUserResizeStamp:
        description: When **true,** users may not resize the stamp.
        type: string
      externalID:
        description: Optionally specify an external identifier for the user's signature.
        type: string
      imageType:
        description: |-
          Specificies the type of image. Valid values:

          - `stamp_image`
          - `signature_image`
          - `initials_image`
        type: string
      isDefault:
        description:
          Boolean that specifies whether the signature is the default signature
          for the user.
        type: string
      nrdsId:
        description:
          The National Association of Realtors (NAR) membership ID for
          a user who is a realtor.
        type: string
      nrdsLastName:
        description: The realtor's last name.
        type: string
      phoneticName:
        description: The phonetic spelling of the `signatureName`.
        type: string
      signatureFont:
        description: |
          The font type to use for the signature if the signature is not drawn. The following font styles  are supported. The quotes are to indicate that these values are strings, not `enums`.

          - `"1_DocuSign"`
          - `"2_DocuSign"`
          - `"3_DocuSign"`
          - `"4_DocuSign"`
          - `"5_DocuSign"`
          - `"6_DocuSign"`
          - `"7_DocuSign"`
          - `"8_DocuSign"`
          - `"Mistral"`
          - `"Rage Italic"`
        type: string
      signatureGroups:
        description: ""
        type: array
        items:
          "$ref": "#/definitions/signatureGroupDef"
      signatureId:
        description:
          Specifies the signature ID associated with the signature name.
          You can use the signature ID in the URI in place of the signature name,
          and the value stored in the `signatureName` property in the body is used.
          This allows the use of special characters (such as "&", "<", ">") in a the
          signature name. Note that with each update to signatures, the returned signature
          ID might change, so the caller will need to trigger off the signature name
          to get the new signature ID.
        type: string
      signatureInitials:
        description: Specifies the user's signature in initials format.
        type: string
      signatureName:
        description: Specifies the user's signature name.
        type: string
      signatureType:
        description: Specifies the type of signature.
        type: string
      signatureUsers:
        description: ""
        type: array
        items:
          "$ref": "#/definitions/signatureUserDef"
      stampFormat:
        description:
          "The format of a stamp. Valid values are:\n\n- `NameHanko`: The
          stamp represents only the signer's name.\n- `NameDateHanko`: The stamp represents
          the signer's name and the date. "
        type: string
      stampSizeMM:
        description:
          The physical height of the stamp image (in millimeters) that
          the stamp vendor recommends for displaying the image in PDF documents.
        type: string
    x-ds-definition-name: accountSignatureDefinition
    description: ""
    x-ms-summary: ""
  accountSignatureProvider:
    type: object
    properties:
      isRequired:
        description: Reserved for DocuSign.
        type: string
      priority:
        description: Reserved for DocuSign.
        type: string
      signatureProviderDisplayName:
        description: Reserved for DocuSign.
        type: string
      signatureProviderId:
        description: Reserved for DocuSign.
        type: string
      signatureProviderName:
        description: |+
          The name of an Electronic or Standards Based Signature (digital signature) provider for the signer to use. For details, see [the current provider list](/docs/esign-rest-api/esign101/concepts/standards-based-signatures/). You can also retrieve the list by using the [AccountSignatureProviders: List](/docs/esign-rest-api/reference/accounts/accountsignatureproviders/list/) method.

          Example: `universalsignaturepen_default`

        type: string
      signatureProviderOptionsMetadata:
        description: Reserved for DocuSign.
        type: array
        items:
          "$ref": "#/definitions/accountSignatureProviderOption"
      signatureProviderRequiredOptions:
        description: Reserved for DocuSign.
        type: array
        items:
          "$ref": "#/definitions/signatureProviderRequiredOption"
    description: |
      Contains information about the signature provider associated with the Identity Verification workflow.
      If empty, then this specific workflow is not intended for signers.
    x-ds-definition-name: accountSignatureProvider
    x-ms-summary: |
      Contains information about the signature provider associated with the Identity Verification workflow.
      If empty, then this specific workflow is not intended for signers.
  accountSignatureProviderOption:
    type: object
    properties:
      signatureProviderOptionDisplayName:
        description: Reserved for DocuSign.
        type: string
      signatureProviderOptionId:
        description: Reserved for DocuSign.
        type: string
      signatureProviderOptionName:
        description: Reserved for DocuSign.
        type: string
    description: Reserved for DocuSign.
    x-ds-definition-name: accountSignatureProviderOption
    x-ms-summary: Reserved for DocuSign.
  accountSignatureProviders:
    type: object
    properties:
      signatureProviders:
        description:
          Names of electronic or digital signature providers that can be
          used.
        type: array
        items:
          "$ref": "#/definitions/accountSignatureProvider"
    x-ds-definition-name: accountSignatureProviders
    description: ""
    x-ms-summary: ""
  accountSignaturesInformation:
    type: object
    properties:
      accountSignatures:
        description: ""
        type: array
        items:
          "$ref": "#/definitions/accountSignature"
    x-ds-definition-name: accountSignaturesInformation
    description: ""
    x-ms-summary: ""
  accountUISettings:
    type: object
    properties:
      adminMessage:
        "$ref": "#/definitions/adminMessage"
        description: ""
      allowUsersToEditSharedAccess:
        description: ""
        type: string
      allowUsersToEditSharedAccessMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      askAnAdmin:
        "$ref": "#/definitions/askAnAdmin"
        description: ""
      clickwrapSchemaVersion:
        description: ""
        type: string
      clickwrapSchemaVersionMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      enableAdminMessage:
        description: ""
        type: string
      enableAdminMessageMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      enableEasySignCanUseMultiTemplateApply:
        description: ""
        type: string
      enableEasySignCanUseMultiTemplateApplyMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      enableEasySignTemplateUpload:
        description: ""
        type: string
      enableEasySignTemplateUploadMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      enableEnvelopeCopyWithData:
        description: ""
        type: string
      enableEnvelopeCopyWithDataMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      enableLegacySendflowLink:
        description: ""
        type: string
      enableLegacySendflowLinkMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      hasExternalLinkedAccounts:
        description: ""
        type: string
      hasExternalLinkedAccountsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      hideSendAnEnvelope:
        description: ""
        type: string
      hideSendAnEnvelopeMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      hideUseATemplate:
        description:
          When **true,** the **Templates** menu is hidden from account
          users who are not Admins. The default value is **false.**
        type: string
      hideUseATemplateInPrepare:
        description: ""
        type: string
      hideUseATemplateInPrepareMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      hideUseATemplateMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      orderBasedRecipientIdGeneration:
        description: ""
        type: string
      orderBasedRecipientIdGenerationMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      removeEnvelopeForwarding:
        description: ""
        type: string
      removeEnvelopeForwardingMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      shouldRedactAccessCode:
        description: ""
        type: string
      shouldRedactAccessCodeMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      uploadNewImageToSignOrInitial:
        description: ""
        type: string
      uploadNewImageToSignOrInitialMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
    description:
      An object that defines the options that are available to non-administrators
      in the UI.
    x-ds-definition-name: accountUISettings
    x-ms-summary:
      An object that defines the options that are available to non-administrators
      in the UI.
  addOn:
    description: Contains information about add ons.
    type: object
    properties:
      active:
        description: Reserved for DocuSign.
        type: string
      addOnId:
        description: Reserved for DocuSign.
        type: string
      id:
        description: A unique ID for the Salesforce object.
        type: string
      name:
        description: Reserved for DocuSign.
        type: string
    x-ds-definition-name: addOn
    x-ms-summary: Contains information about add ons.
  addressInformation:
    description: Contains address information.
    type: object
    properties:
      address1:
        description: |-
          The first line of the user's address.
          Maximum length: 100 characters.
        type: string
      address2:
        description: |-
          The second line of the user's address.
          Maximum length: 100 characters.
        type: string
      city:
        description: "The user's city. Maximum length: 40 characters."
        type: string
      country:
        description: "The user's country. Maximum length: 50 characters."
        type: string
      fax:
        description: A fax number associated with the address, if one is available.
        type: string
      phone:
        description: A phone number associated with the address.
        type: string
      postalCode:
        description: "The user's postal code. Maximum length: 20 characters."
        type: string
      stateOrProvince:
        description: "The user's state or province. Maximum length: 40 characters."
        type: string
      zipPlus4:
        description: ""
        type: string
    x-ds-definition-name: addressInformation
    x-ms-summary: Contains address information.
  addressInformationInput:
    description: Contains address input information.
    type: object
    properties:
      addressInformation:
        "$ref": "#/definitions/addressInformation"
        description: |-
          A complex type that contains the following information for the new account: `address1`, `address2`, `city`, `country`, `fax`, `phone`, `postalCode` and `stateOrProvince`.

          The maximum characters for the strings are:
          * `address1`, `address2`, `city`, `country` and `stateOrProvince`: 100 characters
          * `postalCode`, `phone`, and `fax`: 20 characters

          **Note:** If country is US (United States), `stateOrProvince` codes are validated. Otherwise, `stateOrProvince` is treated as a non-validated string used to specify a state, province, or region.
      displayLevelCode:
        description: |-
          Specifies the display level for the recipient. Valid values are:
          * `ReadOnly`
          * `Editable`
          * `DoNotDisplay`
        type: string
      receiveInResponse:
        description:
          A Boolean value that specifies whether the information must be
          returned in the response.
        type: string
    x-ds-definition-name: addressInformationInput
    x-ms-summary: Contains address input information.
  adminMessage:
    type: object
    properties:
      baseMessage:
        description: ""
        type: string
      moreInformation:
        description: ""
        type: string
    x-ds-definition-name: adminMessage
    description: ""
    x-ms-summary: ""
  agent:
    description:
      Contains information about an agent recipient. An agent is a recipient
      who can add name and email information for recipients that appear after the
      agent in routing order.
    type: object
    properties:
      accessCode:
        description:
          "If a value is provided, the recipient must enter the value as
          the access code to view and sign the envelope. \n\nMaximum Length: 50 characters
          and it must conform to the account's access code format setting.\n\nIf blank,
          but the signer `accessCode` property is set in the envelope, then that value
          is used.\n\nIf blank and the signer `accessCode` property is not set, then
          the access code is not required."
        type: string
      accessCodeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `accessCode` property is
          editable. This property is read-only.
      addAccessCodeToEmail:
        description:
          Optional. When **true,** the access code will be added to the
          email sent to the recipient. This nullifies the security measure of `accessCode`
          on the recipient.
        type: string
      additionalNotifications:
        description: An array of additional notification objects.
        type: array
        items:
          "$ref": "#/definitions/recipientAdditionalNotification"
      allowSystemOverrideForLockedRecipient:
        description:
          When **true,** if the recipient is locked on a template, advanced
          recipient routing can override the lock.
        type: string
      autoRespondedReason:
        description:
          "Error message provided by the destination email system. This
          field is only provided if the email notification to the recipient fails
          to send. This property is read-only.

          "
        type: string
      bulkSendV2Recipient:
        description: ""
        type: string
      clientUserId:
        description:
          "Specifies whether the recipient is embedded or remote. \n\nIf
          the `clientUserId` property is not null then the recipient is embedded.
          Use this field to associate the signer with their userId in your app. Authenticating
          the user is the responsibility of your app when you use embedded signing.\n\nIf
          the `clientUserId` property is set and either `SignerMustHaveAccount` or
          `SignerMustLoginToSign` property of the account settings is set to  **true,**
          an error is generated on sending.\n\n**Note:** This property is not returned
          by the [listStatusChanges](/docs/esign-rest-api/reference/envelopes/envelopes/liststatuschanges/)
          endpoint.\n\nMaximum length: 100 characters. \n"
        type: string
      completedCount:
        description:
          Indicates the number of times that the recipient has been through
          a signing completion for the envelope. If this number is greater than 0
          for a signing group, only the user who previously completed may sign again.
          This property is read-only.
        type: string
      consentDetailsList:
        description: ""
        type: array
        items:
          "$ref": "#/definitions/consentDetails"
      customFields:
        description:
          An optional array of strings that allows the sender to provide
          custom data about the recipient. This information is returned in the envelope
          status but otherwise not used by DocuSign. Each customField string can be
          a maximum of 100 characters.
        type: array
        items:
          type: string
      declinedDateTime:
        description:
          The date and time the recipient declined the document. This property
          is read-only.
        type: string
      declinedReason:
        description:
          The reason the recipient declined the document. This property
          is read-only.
        type: string
      deliveredDateTime:
        description:
          The date and time that the envelope was delivered to the recipient.
          This property is read-only.
        type: string
      deliveryMethod:
        description: |-
          The delivery method. One of:

          - `email`
          - `fax`
          - `SMS`
          - `WhatsApp`
          - `offline`

          The `SMS` and `WhatsApp` delivery methods
          are limited to `signer`, `carbonCopy`, and `certifiedDelivery`
          recipients.

          **Related topics**

          - [Using SMS delivery with the eSignature API][smsconcept]
          - [How to request a signature by SMS delivery][howto]

          [smsconcept]: /docs/esign-rest-api/esign101/concepts/sms-delivery/using-sms-esignature/
          [howto]: /docs/esign-rest-api/how-to/request-signature-sms/
        type: string
      deliveryMethodMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Reserved for DocuSign.
      designatorId:
        description: Reserved for DocuSign.
        type: string
      designatorIdGuid:
        description: Reserved for DocuSign.
        type: string
      documentVisibility:
        description:
          A list of `documentVisibility` objects. Each object in the list
          specifies whether a document in the envelope is visible to this recipient.
          For the envelope to use this functionality, Document Visibility must be
          enabled for the account and the `enforceSignerVisibility` property must
          be set to **true.**
        type: array
        items:
          "$ref": "#/definitions/documentVisibility"
      email:
        description:
          "The email ID of the agent. Notification of the document to sign
          is sent to this email id. \n\nMaximum length: 100 characters. "
        type: string
      emailMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `email` property is editable.
          This property is read-only.
      emailNotification:
        "$ref": "#/definitions/recipientEmailNotification"
        description: |-
          This optional property allows you to set a specific email subject and
          body for this recipient's notification email.

          **Note:** If you use this property, you _must_
          provide a value for the `supportedLanguage` sub-property.


          You can set the `emailNotification` property separately
          for each recipient. If you set the value only for certain
          recipients, the other recipients are assigned the values from
          the top-level `emailSubject` and `emailBlurb`.
      emailRecipientPostSigningURL:
        description: ""
        type: string
      embeddedRecipientStartURL:
        description:
          "Specifies a sender-provided valid URL string for redirecting
          an embedded recipient. When using this option, the embedded recipient still
          receives an email from DocuSign, just as a remote recipient would. When
          the document link in the email is clicked the recipient is redirected, through
          DocuSign, to the supplied URL to complete their actions. When routing to
          the URL, the sender's system (the server responding to the URL) must request
          a recipient token to launch a signing session. \n\nWhen `SIGN_AT_DOCUSIGN`,
          the recipient is directed to an embedded signing or viewing process directly
          at DocuSign. The signing or viewing action is initiated by the DocuSign
          system and the transaction activity and Certificate of Completion records
          will reflect this. In all other ways the process is identical to an embedded
          signing or viewing operation launched by a partner.\n\nIt is important to
          understand that in a typical embedded workflow, the authentication of an
          embedded recipient is the responsibility of the sending application. DocuSign
          expects that senders will follow their own processes for establishing the
          recipient's identity. In this workflow the recipient goes through the sending
          application before the embedded signing or viewing process is initiated.
          However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`,
          the recipient goes directly to the embedded signing or viewing process,
          bypassing the sending application and any authentication steps the sending
          application would use. In this case, DocuSign recommends that you use one
          of the normal DocuSign authentication features (Access Code, Phone Authentication,
          SMS Authentication, etc.) to verify the identity of the recipient.\n\nIf
          the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL`
          is set, DocuSign will ignore the redirect URL and launch the standard signing
          process for the email recipient. Information can be appended to the embedded
          recipient start URL using merge fields. The available merge fields items
          are: `envelopeId`, `recipientId`, `recipientName`, `recipientEmail`, and
          `customFields`. The `customFields` property must be set for the recipient
          or envelope. The merge fields are enclosed in double brackets. \n\n*Example*:
          \n\n`http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]` "
        type: string
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      excludedDocuments:
        description: |-
          Specifies the documents that are not visible to this recipient. Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to **true** for the envelope to use this.

          When enforce signer visibility is enabled, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.
        type: array
        items:
          type: string
      faxNumber:
        description: Reserved for DocuSign.
        type: string
      faxNumberMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Reserved for DocuSign.
      firstName:
        description: "The recipient's first name. Maximum Length: 50 characters."
        type: string
      firstNameMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `firstName` property is editable.
          This property is read-only.
      fullName:
        description: Reserved for DocuSign.
        type: string
      fullNameMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Reserved for DocuSign.
      idCheckConfigurationName:
        description:
          "The name of the authentication check to use. This value must
          match one of the authentication types that the account uses. The names of
          these authentication types appear in the web console sending interface in
          the Identify list for a recipient. This setting overrides any default authentication
          setting. Valid values are:\n\n- `Phone Auth $`: The recipient must authenticate
          by using two-factor authentication (2FA). You provide the phone number to
          use for 2FA in the `phoneAuthentication` object.\n- `SMS Auth $`: The recipient
          must authenticate via SMS. You provide the phone number to use in the `smsAuthentication`
          object.\n- `ID Check $`: The  recipient must answer detailed security questions.
          \n\n**Example:** Your account has ID Check and SMS Authentication available.
          In the web console Identify list, these appear as ID Check $ and SMS Auth
          $. To use ID Check in an envelope, the idCheckConfigurationName should be
          ID Check $. For SMS, you would use SMS Auth $, and you would also need to
          add a phone number to the smsAuthentication node."
        type: string
      idCheckConfigurationNameMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `idCheckConfigurationName`
          property is editable. This property is read-only.
      idCheckInformationInput:
        "$ref": "#/definitions/idCheckInformationInput"
        description:
          An object that contains input information related to a recipient
          ID check.
      identityVerification:
        "$ref": "#/definitions/recipientIdentityVerification"
        description:
          Specifies the ID Verification workflow applied on an envelope
          by workflow ID. <br/>See the [list](/docs/esign-rest-api/reference/accounts/identityverifications/list/)
          method in the [IdentityVerifications](/docs/esign-rest-api/reference/accounts/identityverifications/)
          resource for more information on how to retrieve workflow IDs available
          for an account. <br/>This can be used in addition to other [recipient authentication](https://support.docusign.com/s/document-item?bundleId=gav1643676262430&topicId=kzp1578456318101.html)
          methods. <br/>Note that ID Verification and ID Check are two distinct methods.
          ID Verification checks recipients' identity by verifying their ID while
          ID Check relies on data available on public records (such as current and
          former address).
      inheritEmailNotificationConfiguration:
        description:
          "When **true** and the envelope recipient creates a DocuSign
          account after signing, the Manage Account Email Notification settings are
          used as the default settings for the recipient's account. "
        type: string
      lastName:
        description: The recipient's last name.
        type: string
      lastNameMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `lastName` property is editable.
          This property is read-only.
      lockedRecipientPhoneAuthEditable:
        description: Reserved for DocuSign.
        type: string
      lockedRecipientSmsEditable:
        description: Reserved for DocuSign.
        type: string
      name:
        description: |-
          The full legal name of the recipient. Maximum Length: 100 characters.

          **Note:** You must always set a value for this property in requests, even if `firstName` and `lastName` are set.
        type: string
      nameMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `name` property is editable.
          This property is read-only.
      note:
        description: |
          A note sent to the recipient in the signing email.
          This note is unique to this recipient.
          In the user interface,
          it appears near the upper left corner
          of the document
          on the signing screen.

          Maximum Length: 1000 characters.
        type: string
      noteMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `note` property is editable.
          This property is read-only.
      phoneAuthentication:
        "$ref": "#/definitions/recipientPhoneAuthentication"
        description: |+
          When `idCheckConfigurationName` is set to `Phone Auth $`, you use this complex type to provide the recipient authentication method details. It contains the following elements:

          * `recipMayProvideNumber`: Boolean. When **true,** the recipient can use whatever phone number they choose.
          * `senderProvidedNumbers`: ArrayOfStrings.  A list of phone numbers the recipient can use.
          * `recordVoicePrint`: Reserved for DocuSign.
          * `validateRecipProvidedNumber`: Reserved for DocuSign.

      phoneNumber:
        "$ref": "#/definitions/recipientPhoneNumber"
        description: Describes the recipient phone number.
      recipientAttachments:
        description: Reserved for DocuSign.
        type: array
        items:
          "$ref": "#/definitions/recipientAttachment"
      recipientAuthenticationStatus:
        "$ref": "#/definitions/authenticationStatus"
        description:
          Information about the recipient's authentication status. This
          property is read-only.
      recipientFeatureMetadata:
        description:
          Metadata about the features that are supported for the recipient
          type. This property is read-only.
        type: array
        items:
          "$ref": "#/definitions/featureAvailableMetadata"
      recipientId:
        description: |-
          A local reference used to map
          recipients to other objects, such as specific
          document tabs.

          A `recipientId` must be
          either an integer or a GUID,
          and the `recipientId` must be
          unique within an envelope.

          For example, many envelopes assign the first recipient
          a `recipientId` of `1`.
        type: string
      recipientIdGuid:
        description:
          The globally-unique identifier (GUID) for a specific recipient
          on a specific envelope. If the same recipient is associated with multiple
          envelopes, they will have a different GUID for each one. This property is
          read-only.
        type: string
      recipientType:
        description: |-
          The recipient type, as specified by the following values:
          - `agent`: Agent recipients can add name and email information for recipients that appear after the agent in routing order.
          - `carbonCopy`: Carbon copy recipients get a copy of the envelope but don't need to sign, initial, date, or add information to any of the documents. This type of recipient can be used in any routing order.
          - `certifiedDelivery`: Certified delivery recipients must receive the completed documents for the envelope to be completed. They don't need to sign, initial, date, or add information to any of the documents.
          - `editor`: Editors have the same management and access rights for the envelope as the sender. Editors can add name and email information, add or change the routing order, set authentication options, and can edit signature/initial tabs and data fields for the remaining recipients.
          - `inPersonSigner`: In-person recipients are DocuSign users who act as signing hosts in the same physical location as the signer.
          - `intermediaries`: Intermediary recipients can optionally add name and email information for recipients at the same or subsequent level in the routing order.
          - `seal`: Electronic seal recipients represent legal entities.
          - `signer`: Signers are recipients who must sign, initial, date, or add data to form fields on the documents in the envelope.
          - `witness`: Witnesses are recipients whose signatures affirm that the identified signers have signed the documents in the envelope.
        type: string
      recipientTypeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `recipientType` property
          is editable. This property is read-only.
      requireIdLookup:
        description:
          "When **true,** the recipient is required to use the specified
          ID check method (including Phone and SMS authentication) to validate their
          identity. "
        type: string
      requireIdLookupMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `requireIdLookup` property
          is editable. This property is read-only.
      roleName:
        description:
          Optional element. Specifies the role name associated with the
          recipient.<br/><br/>This property is required when you are working with
          template recipients.
        type: string
      routingOrder:
        description: "Specifies the routing order of the recipient in the envelope. "
        type: string
      routingOrderMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `routingOrder` property is
          editable. This property is read-only.
      sentDateTime:
        description:
          The UTC DateTime when the envelope was sent. This property is
          read-only.
        type: string
      signedDateTime:
        description: Reserved for DocuSign.
        type: string
      signingGroupId:
        description:
          "The ID of the [signing group](https://support.docusign.com/s/document-item?bundleId=gav1643676262430&topicId=zgn1578456447934.html).

          "
        type: string
      signingGroupIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `signingGroupId` property
          is editable. This property is read-only.
      signingGroupName:
        description:
          "Optional. The name of the signing group. \n\nMaximum Length:
          100 characters. "
        type: string
      signingGroupUsers:
        description:
          A complex type that contains information about users in the signing
          group.
        type: array
        items:
          "$ref": "#/definitions/userInfo"
      smsAuthentication:
        "$ref": "#/definitions/recipientSMSAuthentication"
        description:
          "When `idCheckConfigurationName` is set to `SMS Auth $`, you
          use this complex type to provide the recipient authentication method details.
          It contains the element `senderProvidedNumbers`, which is an array of phone
          numbers that the recipient can use for SMS text authentication. \n\n"
      socialAuthentications:
        description: Deprecated.
        type: array
        items:
          "$ref": "#/definitions/socialAuthentication"
      status:
        description:
          "The recipient's status. This property is read-only. \n\nValid
          values:\n\n- `autoresponded`: The recipient's email system auto-responded
          to the email from DocuSign. This status is used in the web console to inform
          senders about the bounced-back email. This recipient status is only used
          if **Send-on-behalf-of** is turned off for the account.\n- `completed`:
          The recipient has completed their actions (signing or other required actions
          if not a signer) for an envelope.\n- `created`: The recipient is in a draft
          state. This value is only associated with draft envelopes (envelopes that
          have a status of `created`).\n- `declined`: The recipient declined to sign
          the documents in the envelope.\n- `delivered`: The recipient has viewed
          the documents in an envelope through the DocuSign signing website. This
          is not an email delivery of the documents in an envelope.\n- `faxPending`:
          The recipient has finished signing and the system is waiting for a fax attachment
          from the recipient before completing their signing step.\n- `sent`: The
          recipient has been sent an email notification that it is their turn to sign
          an envelope.\n- `signed`: The recipient has completed (signed) all required
          tags in an envelope. This is a temporary state during processing, after
          which the recipient's status automatically switches to `completed`."
        type: string
      statusCode:
        description:
          The code associated with the recipient's status. This property
          is read-only.
        type: string
      suppressEmails:
        description:
          When **true,** email notifications are suppressed for the recipient,
          and they must access envelopes and documents from their DocuSign inbox.
        type: string
      templateLocked:
        description:
          "When **true,** the sender cannot change any attributes of the
          recipient. Used only when working with template recipients. "
        type: string
      templateRequired:
        description:
          When **true,** the sender may not remove the recipient. Used
          only when working with template recipients.
        type: string
      totalTabCount:
        description: The total number of tabs in the documents. This property is read-only.
        type: string
      userId:
        description: |-
          The ID of the user to access.

          **Note:** Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.
        type: string
    x-ds-definition-name: agent
    x-ms-summary:
      Contains information about an agent recipient. An agent is a recipient
      who can add name and email information for recipients that appear after the
      agent in routing order.
  apiRequestLog:
    description: Contains API request log information.
    type: object
    properties:
      createdDateTime:
        description: The UTC DateTime when the item was created.
        type: string
      description:
        description: The API endpoint that was called.
        type: string
      requestLogId:
        description: The ID of the log entry.
        type: string
      status:
        description: The status of the API request.
        type: string
    x-ds-definition-name: apiRequestLog
    x-ms-summary: Contains API request log information.
  apiRequestLogsResult:
    description: Contains information about multiple API request logs.
    type: object
    properties:
      apiRequestLogs:
        description: Reserved for DocuSign.
        type: array
        items:
          "$ref": "#/definitions/apiRequestLog"
    x-ds-definition-name: apiRequestLogsResult
    x-ms-summary: Contains information about multiple API request logs.
  approve:
    type: object
    properties:
      anchorAllowWhiteSpaceInCharacters:
        description: |
          When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.

          First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.

          Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.

          The default value is **true.**
        type: string
      anchorAllowWhiteSpaceInCharactersMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorAllowWhiteSpaceInCharacters`
          property is editable.
      anchorCaseSensitive:
        description: |-
          This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**

          For example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.

          This functionality uses the following rules:

          - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:

            $~><|^+=

            For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`

          - Strings embedded in other strings are ignored during the matching process.

          - In words that have dashes, the parts separated by dashes are treated as distinct words.

            Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**

          - Letters with accent marks are treated as distinct characters from their unaccented counterparts.

          - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.

            Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.

          - Unlike punctuation, numbers are not ignored when finding anchor words.

            Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).

          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorCaseSensitiveMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorCaseSensitive` property
          is editable.
      anchorHorizontalAlignment:
        description: |
          This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :

          - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.
          - `right`: Aligns the tab’s left side with the last character of the matching anchor word.

          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorHorizontalAlignmentMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorHorizontalAlignment`
          property is editable.
      anchorIgnoreIfNotPresent:
        description:
          When **true,** this tab is ignored if the `anchorString` is not
          found in the document.
        type: string
      anchorIgnoreIfNotPresentMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorIgnoreIfNotPresent`
          property is editable.
      anchorMatchWholeWord:
        description: |
          When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**

          For example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.

          This functionality uses the following rules:

          - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:

            $~><|^+=

            For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`

          - Strings embedded in other strings are ignored during the matching process.

          - In words that have dashes, the parts separated by dashes are treated as distinct words.

            Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**

          - Letters with accent marks are treated as distinct characters from their unaccented counterparts.

          - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.

            Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.

          - Unlike punctuation, numbers are not ignored when finding anchor words.

            Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).


          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorMatchWholeWordMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorMatchWholeWord` property
          is editable.
      anchorString:
        description:
          Specifies the string to find in the document and use as the basis
          for tab placement.
        type: string
      anchorStringMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorString` property is
          editable.
      anchorTabProcessorVersion:
        description: Reserved for DocuSign.
        type: string
      anchorTabProcessorVersionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Reserved for DocuSign.
      anchorUnits:
        description: |
          Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:

          - `pixels` (default)
          - `inches`
          - `mms`
          - `cms`
        type: string
      anchorUnitsMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorUnits` property is
          editable.
      anchorXOffset:
        description:
          "Specifies the X axis location of the tab in `anchorUnits` relative
          to the `anchorString`.

          "
        type: string
      anchorXOffsetMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorXOffset` property
          is editable.
      anchorYOffset:
        description:
          "Specifies the Y axis location of the tab in `anchorUnits` relative
          to the `anchorString`.

          "
        type: string
      anchorYOffsetMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorYOffset` property
          is editable.
      bold:
        description: When **true,** the information in the tab is bold.
        type: string
      boldMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `bold` property is editable.
      buttonText:
        description: " Specifies the approval text that displays in the tab. "
        type: string
      buttonTextMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `buttonText` property is
          editable.
      caption:
        description: ""
        type: string
      captionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `caption` property is editable.
      conditionalParentLabel:
        description:
          For conditional fields this is the `tabLabel` of the parent tab
          that controls this tab's visibility.
        type: string
      conditionalParentLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `conditionalParentLabel`
          property is editable.
      conditionalParentValue:
        description: |
          For conditional fields, this is the value of the parent tab that controls the tab's visibility.

          If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use "on" as the value to show that the parent tab is active.
        type: string
      conditionalParentValueMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `conditionalParentValue`
          property is editable.
      customTabId:
        description:
          The DocuSign-generated custom tab ID for the custom tab to be
          applied. You can only use this when adding new tabs for a recipient. When
          used, the new tab inherits all of the properties of the custom tab.
        type: string
      customTabIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `customTabId` property is
          editable.
      documentId:
        description:
          Specifies the document ID number that the tab is placed on. This
          must refer to an existing Document's ID attribute.
        type: string
      documentIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `documentId` property is
          editable.
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      font:
        description: |
          The font to be used for the tab value. Supported fonts include:

          - Default
          - Arial
          - ArialNarrow
          - Calibri
          - CourierNew
          - Garamond
          - Georgia
          - Helvetica
          - LucidaConsole
          - MSGothic
          - MSMincho
          - OCR-A
          - Tahoma
          - TimesNewRoman
          - Trebuchet
          - Verdana
        type: string
      fontColor:
        description:
          "The font color to use for the information in the tab. Possible
          values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n-
          Gold\n- Green\n- NavyBlue\n- Purple\n- White\n"
        type: string
      fontColorMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `fontColor` property is editable.
      fontMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `font` property is editable.
      fontSize:
        description: |-
          The font size used for the information in the tab. Possible values are:

          - Size7
          - Size8
          - Size9
          - Size10
          - Size11
          - Size12
          - Size14
          - Size16
          - Size18
          - Size20
          - Size22
          - Size24
          - Size26
          - Size28
          - Size36
          - Size48
          - Size72
        type: string
      fontSizeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `fontSize` property is editable.
      formOrder:
        description:
          An integer specifying the order in which the guided form HTML
          should render. The order is relative to the `formPageLabel`, the group by
          which to place the guided form HTML block.
        type: string
      formOrderMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `formOrder` property is editable.
      formPageLabel:
        description:
          A string specifying the group in which to place the guided form
          HTML. Each group displays as a separate guided forms page in the signing
          experience.
        type: string
      formPageLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `formPageLabel` property
          is editable.
      formPageNumber:
        description:
          An integer specifying the order in which to present the guided
          form pages.
        type: string
      formPageNumberMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `fromPageNumber` property
          is editable.
      height:
        description: |-
          The height of the tab in pixels.
          Must be an integer.
        type: string
      heightMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `height` property is editable.
      italic:
        description: When **true,** the information in the tab is italic.
        type: string
      italicMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `italic` property is editable.
      localePolicy:
        "$ref": "#/definitions/localePolicyTab"
        description: Locale-specific settings.
      mergeField:
        "$ref": "#/definitions/mergeField"
        description:
          Contains the information necessary to map the tab to a field
          in SalesForce.
      mergeFieldXml:
        description: Reserved for DocuSign.
        type: string
      pageNumber:
        description:
          "Specifies the page number on which the tab is located. For supplemental
          documents, this value must be `1`.

          "
        type: string
      pageNumberMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `pageNumber` property is
          editable.
      recipientId:
        description:
          "The ID of the recipient to whom the tab will be assigned. This
          value should match the `recipientId` defined in the recipient object.

          "
        type: string
      recipientIdGuid:
        description:
          The globally-unique identifier (GUID) for a specific recipient
          on a specific envelope. If the same recipient is associated with multiple
          envelopes, they will have a different GUID for each one. This property is
          read-only.
        type: string
      recipientIdGuidMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `recipientIdGuid` property
          is editable.
      recipientIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `recipientId` property is
          editable.
      smartContractInformation:
        "$ref": "#/definitions/smartContractInformation"
        description: Reserved for DocuSign.
      source:
        description: Reserved for DocuSign.
        type: string
      status:
        description: |-
          The status of the tab. Possible values are:

          - `active`: The tab is active, but the recipient has not yet interacted with it.
          - `signed`: The recipient signed the tab.
          - `declined`: The recipient declined the envelope.
          - `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).
        type: string
      statusMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `status` property is editable.
      tabGroupLabels:
        description: |-
          An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.

          To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
        type: array
        items:
          type: string
      tabGroupLabelsMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `tabGroupLabels` property
          is editable.
      tabId:
        description: The unique identifier for the tab.
        type: string
      tabIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabId` property is editable.
      tabLabel:
        description: |
          The label associated with the tab. This value may be an empty string.
          If no value is provided, the tab type is used as the value.

          Maximum Length: 500 characters.
        type: string
      tabLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabLabel` property is editable.
      tabOrder:
        description: |-
          A positive integer that sets the order the tab is navigated to during signing.

          Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
        type: string
      tabOrderMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabOrder` property is editable.
      tabType:
        description: Indicates the type of tab (for example, `signHere` or `initialHere`).
        type: string
      tabTypeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabType` property is editable.
      templateLocked:
        description:
          "When **true,** the sender cannot change any attributes of the
          recipient. Used only when working with template recipients. "
        type: string
      templateLockedMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `templateLocked` property
          is editable.
      templateRequired:
        description:
          When **true,** the sender may not remove the recipient. Used
          only when working with template recipients.
        type: string
      templateRequiredMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `templateRequired` property
          is editable.
      tooltip:
        description: |
          **Note:** Approve tabs never display this tooltip in the signing interface.

          Although you can technically set a value via the API for this tab,
          it will not be displayed to the recipient.
        type: string
      toolTipMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          "Metadata that indicates whether the `toolTip` property is editable.

          "
      underline:
        description: When **true,** the information in the tab is underlined.
        type: string
      underlineMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `underline` property is editable.
      width:
        description: |-
          The width of the tab in pixels.
          Must be an integer.
        type: string
      widthMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `width` property is editable.
      xPosition:
        description: |
          This property indicates the horizontal offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. Must be an integer. May be zero.

          To improve the tab's position on the document,
          DocuSign recommends
          adjusting `xPosition`
          and `yPosition`
          coordinates
          by (-3, -2)
        type: string
      xPositionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `xPosition` property is editable.
      yPosition:
        description: |
          This property indicates the vertical offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. Must be an integer. May be zero.

          To improve the tab's position on the document,
          DocuSign recommends
          adjusting `xPosition`
          and `yPosition`
          coordinates
          by (-3, -2)
        type: string
      yPositionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `yPosition` property is editable.
    description: |
      A tab that allows the recipient to approve documents
      without placing a signature or initials on the
      document.
    x-ds-definition-name: approve
    x-ms-summary: |
      A tab that allows the recipient to approve documents
      without placing a signature or initials on the
      document.
  appStoreProduct:
    description: Contains information about an APP store product.
    type: object
    properties:
      marketPlace:
        description: ""
        type: string
      productId:
        description: The Product ID from the AppStore.
        type: string
    x-ds-definition-name: appStoreProduct
    x-ms-summary: Contains information about an APP store product.
  appStoreReceipt:
    description: Contains information about an APP store receipt.
    type: object
    properties:
      downgradeProductId:
        description: ""
        type: string
      isDowngradeCancellation:
        description: ""
        type: string
      productId:
        description: The Product ID from the AppStore.
        type: string
      receiptData:
        description: Reserved for DocuSign.
        type: string
    x-ds-definition-name: appStoreReceipt
    x-ms-summary: Contains information about an APP store receipt.
  askAnAdmin:
    type: object
    properties:
      email:
        description: ""
        type: string
      message:
        description: ""
        type: string
      name:
        description: ""
        type: string
      phone:
        description: ""
        type: string
    x-ds-definition-name: askAnAdmin
    description: ""
    x-ms-summary: ""
  attachment:
    description: Contains information about an attachment.
    type: object
    properties:
      accessControl:
        description: Valid values are `sender` and `senderAndAllRecipients`.
        type: string
      attachmentId:
        description: The unique identifier for the attachment.
        type: string
      attachmentType:
        description: Specifies the type of the attachment for the recipient.
        type: string
      data:
        description:
          A Base64-encoded representation of the attachment that is used
          to upload and download the file. File attachments may be up to 50 MB in
          size.
        type: string
      label:
        description:
          "A label for the attachment. Potential values include: \n\n-
          `guidedForm`: [Guided forms](https://www.docusign.com/products/guided-forms)
          provide a step-by-step, mobile-ready experience to help signers easily complete
          long or complex forms.\n- `eventNotifications`: A list of envelope-level
          event statuses that trigger Connect to send updates to the endpoint specified
          in the `url` property. \n"
        type: string
      name:
        description: The name of the attachment.
        type: string
      remoteUrl:
        description:
          The URL of a previously staged chunked upload. Using a chunked
          upload enables you to stage a large, chunkable temp file. You then use the
          `remoteUrl` property to reference the chunked upload as the content in attachment
          and document-related requests. The `remoteUrl` property cannot be used for
          downloads.
        type: string
    x-ds-definition-name: attachment
    x-ms-summary: Contains information about an attachment.
  authenticationMethod:
    description: Contains information about the method used for authentication.
    type: object
    properties:
      authenticationType:
        description:
          "Indicates the type of authentication. Valid values are: PhoneAuth,
          STAN, ISCheck, OFAC, AccessCode, AgeVerify, or SSOAuth. "
        type: string
      lastProvider:
        description: "The last provider that authenticated the user. "
        type: string
      lastTimestamp:
        description: " The data and time the user last used the authentication method. "
        type: string
      totalCount:
        description: "The number of times the authentication method was used. "
        type: string
    x-ds-definition-name: authenticationMethod
    x-ms-summary: Contains information about the method used for authentication.
  authenticationStatus:
    description:
      A complex element that contains information about a user's authentication
      status.
    type: object
    properties:
      accessCodeResult:
        "$ref": "#/definitions/eventResult"
        description:
          "The result of a user's attempt to authenticate by using an access
          code. It returns:\n\n- `Status`: `Pass` or `Fail`.\n- `dateTime`: The date
          and time that the event occurred.\n- `FailureDescription`: A string containing
          the details about a failed authentication.\n- `VendorFailureStatusCode`:
          A string containing the vendor's status code for a failed authentication. "
      ageVerifyResult:
        "$ref": "#/definitions/eventResult"
        description:
          "The result of an age verification check. It returns:\n\n- `Status`:
          `Pass` or `Fail`.\n- `dateTime`: The date and time that the event occurred.\n-
          `FailureDescription`: A string containing the details about a failed authentication.\n-
          `VendorFailureStatusCode`: A string containing the vendor's status code
          for a failed authentication. "
      anySocialIDResult:
        "$ref": "#/definitions/eventResult"
        description: Deprecated.
      facebookResult:
        "$ref": "#/definitions/eventResult"
        description: Deprecated.
      googleResult:
        "$ref": "#/definitions/eventResult"
        description: Deprecated.
      identityVerificationResult:
        "$ref": "#/definitions/eventResult"
        description: |-
          The result of an [Identity Verification][IDV] workflow.

          [IDV]: /docs/esign-rest-api/reference/accounts/identityverifications/
      idLookupResult:
        "$ref": "#/definitions/eventResult"
        description:
          "The result of an ID lookup authentication check. It returns:\n\n-
          `Status`: `Pass` or `Fail`.\n- `dateTime`: The date and time that the event
          occurred.\n- `FailureDescription`: A string containing the details about
          a failed authentication.\n- `VendorFailureStatusCode`: A string containing
          the vendor's status code for a failed authentication. "
      idQuestionsResult:
        "$ref": "#/definitions/eventResult"
        description:
          "The result of the user's answers to ID challenge questions.
          It returns:\n\n- `Status`: `Pass` or `Fail`.\n- `dateTime`: The date and
          time that the event occurred.\n- `FailureDescription`: A string containing
          the details about a failed authentication.\n- `VendorFailureStatusCode`:
          A string containing the vendor's status code for a failed authentication. "
      linkedinResult:
        "$ref": "#/definitions/eventResult"
        description: Deprecated.
      liveIDResult:
        "$ref": "#/definitions/eventResult"
        description: Deprecated.
      ofacResult:
        "$ref": "#/definitions/eventResult"
        description:
          "The result of an Office of Foreign Asset Control (OFAC) check.
          It returns:\n\n- `Status`: `Pass` or `Fail`.\n- `dateTime`: The date and
          time that the event occurred.\n- `FailureDescription`: A string containing
          the details about a failed authentication.\n- `VendorFailureStatusCode`:
          A string containing the vendor's status code for a failed authentication. "
      openIDResult:
        "$ref": "#/definitions/eventResult"
        description: Deprecated.
      phoneAuthResult:
        "$ref": "#/definitions/eventResult"
        description:
          "The result of the user's attempt to authenticate by using two-factor
          authentication (2FA) through phone messaging. It returns:\n\n- `Status`:
          `Pass` or `Fail`.\n- `dateTime`: The date and time that the event occurred.\n-
          `FailureDescription`: A string containing the details about a failed authentication.\n-
          `VendorFailureStatusCode`: A string containing the vendor's status code
          for a failed authentication. "
      salesforceResult:
        "$ref": "#/definitions/eventResult"
        description:
          "Success/failure result of authentication using sign-in with
          a Salesforce account. It returns:\n\n- `Status`: `Pass` or `Fail`.\n- `dateTime`:
          The date and time that the event occurred.\n- `FailureDescription`: A string
          containing the details about a failed authentication.\n- `VendorFailureStatusCode`:
          A string containing the vendor's status code for a failed authentication. "
      signatureProviderResult:
        "$ref": "#/definitions/eventResult"
        description:
          The result of the user's attempt to authenticate by using a signature
          provider.
      smsAuthResult:
        "$ref": "#/definitions/eventResult"
        description:
          The result of the user's attempt to authenticate by using two-factor
          authentication (2FA) through SMS messaging on a mobile phone.
      sTANPinResult:
        "$ref": "#/definitions/eventResult"
        description:
          "The result of a Student Authentication Network (STAN) authentication
          check. It returns:\n\n- `Status`: `Pass` or `Fail`.\n- `dateTime`: The date
          and time that the event occurred.\n- `FailureDescription`: A string containing
          the details about a failed authentication.\n- `VendorFailureStatusCode`:
          A string containing the vendor's status code for a failed authentication. "
      twitterResult:
        "$ref": "#/definitions/eventResult"
        description: Deprecated.
      yahooResult:
        "$ref": "#/definitions/eventResult"
        description: Deprecated.
    x-ds-definition-name: authenticationStatus
    x-ms-summary:
      A complex element that contains information about a user's authentication
      status.
  authorizationUser:
    type: object
    properties:
      accountId:
        description: The account ID.
        type: string
      email:
        description: The email address of the authorization user.
        type: string
      name:
        description: The name of the authorization user.
        type: string
      userId:
        description: The ID of the authorization user.
        type: string
    x-ds-definition-name: authorizationUser
    description: ""
    x-ms-summary: ""
  bccEmailAddress:
    description: Contains information about the BCC email address.
    type: object
    properties:
      bccEmailAddressId:
        description:
          "Only users with canManageAccount setting can use this option.
          An array of up to 5 email addresses the envelope is sent to as a BCC email.
          \n \nExample: If your account has BCC for Email Archive set up for the email
          address 'archive@mycompany.com' and you send an envelope using the BCC Email
          Override to send a BCC email to 'salesarchive@mycompany.com', then a copy
          of the envelope is only sent to the 'salesarchive@mycompany.com' email address."
        type: string
      email:
        description:
          "Specifies the BCC email address. DocuSign verifies that the
          email format is correct, but does not verify that the email is active.Using
          this overrides the BCC for Email Archive information setting for this envelope.\n\nMaximum
          of length: 100 characters. "
        type: string
    x-ds-definition-name: bccEmailAddress
    x-ms-summary: Contains information about the BCC email address.
  bccEmailArchive:
    type: object
    properties:
      accountId:
        description: The ID of the account that owns the BCC email archive configuration.
        type: string
      bccEmailArchiveId:
        description: The ID of the BCC email archive configuration.
        type: string
      created:
        description:
          The UTC DateTime when the BCC email archive configuration was
          created.
        type: string
      createdBy:
        "$ref": "#/definitions/userInfo"
        description: Details about the user who created the BCC email archive configuration.
      email:
        description: |-
          The BCC email address to use for archiving DocuSign messages.

          Example: customer_bcc@example.com
        type: string
      emailNotificationId:
        description:
          The GUID of the activation email message sent to the BCC email
          address.
        type: string
      modified:
        description:
          The UTC DateTime when the BCC email archive configuration was
          last modified.
        type: string
      modifiedBy:
        "$ref": "#/definitions/userInfo"
        description:
          Details about the user who last modified the BCC email archive
          configuration.
      status:
        description: |-
          The status of the BCC email address. Possible values are:

          - `activation_sent`: An activation link has been sent to the BCC email address.
          - `active`: The BCC email address is actively used for archiving.
          - `closed`: The BCC email address is no longer used for archiving.
        type: string
      uri:
        description: The helper URI for retrieving the BCC email archive.
        type: string
    description:
      This object contains information abut a BCC email archive configuration
      (a BCC email address used to archive DocuSign-generated emails).
    x-ds-definition-name: bccEmailArchive
    x-ms-summary:
      This object contains information abut a BCC email archive configuration
      (a BCC email address used to archive DocuSign-generated emails).
  bccEmailArchiveHistory:
    type: object
    properties:
      accountId:
        description: The ID of the account that owns the BCC email archive configuration.
        type: string
      action:
        description:
          "The action taken on the BCC email archive configuration.\n\nExamples:
          \n\n- `CREATED`: The BCC email archive configuration has been created.\n-
          `UPDATED`: The BCC email address has been activated by clicking on the activation
          link in the activation email message.\n- `CLOSED`: The BCC email address
          has been marked as closed is no longer used for archiving."
        type: string
      email:
        description:
          "The BCC email address used to archive the emails that DocuSign
          generates. \n\nExample: customer_bcc@example.com"
        type: string
      modified:
        description: The UTC DateTime when the BCC email address was last modified.
        type: string
      modifiedBy:
        "$ref": "#/definitions/userInfo"
        description:
          Details about the user who last modified the BCC email archive
          configuration.
      status:
        description: |-
          The status of the BCC email address. Possible values are:

          - `activation_sent`: An activation link has been sent to the BCC email address.
          - `active`: The BCC email address is actively used for archiving.
          - `closed`: The BCC email address is no longer used for archiving.
        type: string
    description: Contains details about the history of the BCC email archive configuration.
    x-ds-definition-name: bccEmailArchiveHistory
    x-ms-summary: Contains details about the history of the BCC email archive configuration.
  bccEmailArchiveHistoryList:
    type: object
    properties:
      bccEmailArchiveHistory:
        description: A list of changes to the BCC email archive configuration.
        type: array
        items:
          "$ref": "#/definitions/bccEmailArchiveHistory"
      endPosition:
        description: "The last index position in the result set. "
        type: string
      nextUri:
        description:
          "The URI for the next chunk of records based on the search request.
          It is `null` if this is the last set of results for the search. "
        type: string
      previousUri:
        description:
          "The URI for the prior chunk of records based on the search request.
          It is `null` if this is the first set of results for the search. "
        type: string
      resultSetSize:
        description:
          The number of results in this response. Because you can filter
          which entries are included in the response, this value is always less than
          or equal to the `totalSetSize`.
        type: string
      startPosition:
        description: The starting index position of the current result set.
        type: string
      totalSetSize:
        description:
          The total number of items in the result set. This value is always
          greater than or equal to the value of `resultSetSize`.
        type: string
    x-ds-definition-name: bccEmailArchiveHistoryList
    description: ""
    x-ms-summary: ""
  bccEmailArchiveList:
    type: object
    properties:
      bccEmailArchives:
        description: A list of  BCC email archive configurations.
        type: array
        items:
          "$ref": "#/definitions/bccEmailArchive"
      endPosition:
        description: "The last index position in the result set. "
        type: string
      nextUri:
        description:
          "The URI for the next chunk of records based on the search request.
          It is `null` if this is the last set of results for the search. "
        type: string
      previousUri:
        description:
          "The URI for the prior chunk of records based on the search request.
          It is `null` if this is the first set of results for the search. "
        type: string
      resultSetSize:
        description:
          The number of results in this response. Because you can filter
          which entries are included in the response, this value is always less than
          or equal to the `totalSetSize`.
        type: string
      startPosition:
        description: The starting index position of the current result set.
        type: string
      totalSetSize:
        description:
          The total number of items in the result set. This value is always
          greater than or equal to the value of `resultSetSize`.
        type: string
    description: Contains a list of BCC email archive configurations.
    x-ds-definition-name: bccEmailArchiveList
    x-ms-summary: Contains a list of BCC email archive configurations.
  billingCharge:
    description: Contains information about a billing charge.
    type: object
    properties:
      allowedQuantity:
        description: Reserved for DocuSign.
        type: string
      blocked:
        description: Reserved for DocuSign.
        type: string
      chargeName:
        description: |-
          Provides information on what services the charge item is for.

          The following table provides a description of the different chargeName values available at this time.

          | chargeName | Description |
          | --- | --- |
          | id_check | ID Check Charge |
          | in_person_signing | In Person Signing charge |
          | envelopes Included | Sent Envelopes for the account |
          | age_verify | Age verification check |
          | ofac | OFAC Check |
          | id_confirm | ID confirmation check |
          | student_authentication | STAN PIN authentication check |
          | wet_sign_fax | Pages for returning signed documents by fax |
          | attachment_fax | Pages for returning attachments by fax |
          | phone_authentication | Phone authentication charge |
          | powerforms | PowerForm envelopes sent |
          | signer_payments | Payment processing charge |
          | outbound_fax | Send by fax charge |
          | bulk_recipient_envelopes | Bulk Recipient Envelopes sent |
          | sms_authentications | SMS authentication charge |
          | saml_authentications | SAML authentication charge |
          | express_signer_certificate | DocuSign Express Certificate charge |
          | personal_signer_certificate | Personal Signer Certificate charge |
          | safe_certificate | SAFE BioPharma Signer Certificate charge |
          | seats | Included active seats charge |
          | open_trust_certificate | OpenTrust Signer Certificate charge |
        type: string
      chargeType:
        description: Reserved for DocuSign.
        type: string
      chargeUnitOfMeasure:
        description: Reserved for DocuSign.
        type: string
      discounts:
        description: ""
        type: array
        items:
          "$ref": "#/definitions/billingDiscount"
      firstEffectiveDate:
        description: ""
        type: string
      includedQuantity:
        description: ""
        type: string
      incrementalQuantity:
        description: Reserved for DocuSign.
        type: string
      lastEffectiveDate:
        description: ""
        type: string
      prices:
        description: ""
        type: array
        items:
          "$ref": "#/definitions/billingPrice"
      unitPrice:
        description: Reserved for DocuSign.
        type: string
      usedQuantity:
        description: ""
        type: string
    x-ds-definition-name: billingCharge
    x-ms-summary: Contains information about a billing charge.
  billingChargeResponse:
    description: Defines a billing charge response object.
    type: object
    properties:
      billingChargeItems:
        description: Reserved for DocuSign.
        type: array
        items:
          "$ref": "#/definitions/billingCharge"
    x-ds-definition-name: billingChargeResponse
    x-ms-summary: Defines a billing charge response object.
  billingDiscount:
    type: object
    properties:
      beginQuantity:
        description: Reserved for DocuSign.
        type: string
      discount:
        description: ""
        type: string
      endQuantity:
        description: ""
        type: string
    x-ds-definition-name: billingDiscount
    description: ""
    x-ms-summary: ""
  billingEntityInformationResponse:
    type: object
    properties:
      billingProfile:
        description:
          "The type of billing method on the account. Valid values are:
          \n\n- `direct`\n- `web`"
        type: string
      entityName:
        description: ""
        type: string
      externalEntityId:
        description: ""
        type: string
      isExternallyBilled:
        description: ""
        type: string
    x-ds-definition-name: billingEntityInformationResponse
    description: ""
    x-ms-summary: ""
  billingInvoice:
    description: Contains information about a billing invoice.
    type: object
    properties:
      amount:
        description: The total amount of the purchase.
        type: string
      balance:
        description: Reserved for DocuSign.
        type: string
      dueDate:
        description: Reserved for DocuSign.
        type: string
      invoiceId:
        description: Reserved for DocuSign.
        type: string
      invoiceItems:
        description: Reserved for DocuSign.
        type: array
        items:
          "$ref": "#/definitions/billingInvoiceItem"
      invoiceNumber:
        description: Reserved for DocuSign.
        type: string
      invoiceUri:
        description:
          Contains a URI for an endpoint that you can use to retrieve invoice
          information.
        type: string
      nonTaxableAmount:
        description: ""
        type: string
      pdfAvailable:
        description: ""
        type: string
      taxableAmount:
        description: ""
        type: string
    x-ds-definition-name: billingInvoice
    x-ms-summary: Contains information about a billing invoice.
  billingInvoiceItem:
    description: Contains information about an item on a billing invoice.
    type: object
    properties:
      chargeAmount:
        description: Reserved for DocuSign.
        type: string
      chargeName:
        description: Reserved for DocuSign.
        type: string
      invoiceItemId:
        description: Reserved for DocuSign.
        type: string
      quantity:
        description: The quantity of envelopes to add to the account.
        type: string
      taxAmount:
        description: ""
        type: string
      taxExemptAmount:
        description: ""
        type: string
      unitPrice:
        description: Reserved for DocuSign.
        type: string
    x-ds-definition-name: billingInvoiceItem
    x-ms-summary: Contains information about an item on a billing invoice.
  billingInvoicesResponse:
    description: Defines a billing invoice response object.
    type: object
    properties:
      billingInvoices:
        description: Reserved for DocuSign.
        type: array
        items:
          "$ref": "#/definitions/billingInvoice"
      nextUri:
        description:
          "The URI for the next chunk of records based on the search request.
          It is `null` if this is the last set of results for the search. "
        type: string
      previousUri:
        description:
          "The URI for the prior chunk of records based on the search request.
          It is `null` if this is the first set of results for the search. "
        type: string
    x-ds-definition-name: billingInvoicesResponse
    x-ms-summary: Defines a billing invoice response object.
  billingInvoicesSummary:
    type: object
    properties:
      accountBalance:
        description: ""
        type: string
      billingInvoices:
        description: Reserved for DocuSign.
        type: array
        items:
          "$ref": "#/definitions/billingInvoice"
      currencyCode:
        description:
          "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency
          code.

          "
        type: string
      pastDueBalance:
        description: ""
        type: string
      paymentAllowed:
        description: ""
        type: string
    x-ds-definition-name: billingInvoicesSummary
    description: ""
    x-ms-summary: ""
  billingPayment:
    description: Contains information on a billing plan.
    type: object
    properties:
      amount:
        description: Reserved for DocuSign.
        type: string
      invoiceId:
        description: Reserved for DocuSign.
        type: string
      paymentId:
        description: The ID of the payment.
        type: string
    x-ds-definition-name: billingPayment
    x-ms-summary: Contains information on a billing plan.
  billingPaymentItem:
    description: Defines a billing payment request object.
    type: object
    properties:
      amount:
        description: The total amount of the purchase.
        type: string
      description:
        description: "A sender-defined description of the line item.

          "
        type: string
      paymentDate:
        description: ""
        type: string
      paymentId:
        description: The ID of the payment.
        type: string
      paymentNumber:
        description:
          "When **true,** a PDF version of the invoice is available. \n\nTo
          get the PDF, make the call again and change \"Accept:\" in the header to
          \"Accept: application/pdf\"."
        type: string
    x-ds-definition-name: billingPaymentItem
    x-ms-summary: Defines a billing payment request object.
  billingPaymentRequest:
    type: object
    properties:
      paymentAmount:
        description:
          The payment amount for the past due invoices. This value must
          match the pastDueBalance value retrieved using Get Past Due Invoices.
        type: string
    x-ds-definition-name: billingPaymentRequest
    description: ""
    x-ms-summary: ""
  billingPaymentResponse:
    description: Defines an billing payment response object.
    type: object
    properties:
      billingPayments:
        description: Reserved for DocuSign.
        type: array
        items:
          "$ref": "#/definitions/billingPayment"
    x-ds-definition-name: billingPaymentResponse
    x-ms-summary: Defines an billing payment response object.
  billingPaymentsResponse:
    description: Defines a billing payments response object.
    type: object
    properties:
      billingPayments:
        description: Reserved for DocuSign.
        type: array
        items:
          "$ref": "#/definitions/billingPaymentItem"
      nextUri:
        description:
          "The URI for the next chunk of records based on the search request.
          It is `null` if this is the last set of results for the search. "
        type: string
      previousUri:
        description:
          "The URI for the prior chunk of records based on the search request.
          It is `null` if this is the first set of results for the search. "
        type: string
    x-ds-definition-name: billingPaymentsResponse
    x-ms-summary: Defines a billing payments response object.
  billingPlan:
    description: Contains information about a billing plan.
    type: object
    properties:
      appStoreProducts:
        description: Reserved for DocuSign.
        type: array
        items:
          "$ref": "#/definitions/appStoreProduct"
      currencyPlanPrices:
        description:
          Contains the `currencyCode` and `currencySymbol` for the alternate
          currency values for `envelopeFee`, `fixedFee`, and `seatFee` that are configured
          for this plan feature set.
        type: array
        items:
          "$ref": "#/definitions/currencyPlanPrice"
      enableSupport:
        description:
          When **true,** customer support is provided as part of the account
          plan.
        type: string
      includedSeats:
        description: The number of seats (users) included in the plan.
        type: string
      otherDiscountPercent:
        description: |-
          Any other percentage discount for the plan.

          Example: `"0.00"`
        type: string
      paymentCycle:
        description:
          " The payment cycle associated with the plan. Valid values: Monthly
          or Annually. "
        type: string
      paymentMethod:
        description: |-
          The payment method used for the billing plan. Valid values are:

          - `NotSupported`
          - `CreditCard`
          - `PurchaseOrder`
          - `Premium`
          - `Freemium`
          - `FreeTrial`
          - `AppStore`
          - `DigitalExternal`
          - `DirectDebit`
        type: string
      perSeatPrice:
        description: The per seat price for the plan.
        type: string
      planClassification:
        description:
          "Identifies the type of plan. Examples include:\n\n- `business`\n-
          `corporate`\n- `enterprise` \n- `free`"
        type: string
      planFeatureSets:
        description: Reserved for DocuSign.
        type: array
        items:
          "$ref": "#/definitions/featureSet"
      planId:
        description: DocuSign's ID for the account plan.
        type: string
      planName:
        description: "The name of the billing plan.

          "
        type: string
      seatDiscounts:
        description:
          A complex type that returns information about any seat discounts.
          It contains the information `BeginSeatCount`, `EndSeatCount` and `SeatDiscountPercent`.
        type: array
        items:
          "$ref": "#/definitions/seatDiscount"
      supportIncidentFee:
        description: |-
          The support incident fee charged for each support incident.

          Example: `"$0.00"`
        type: string
      supportPlanFee:
        description: |-
          The support plan fee charged for this plan.

          Example: `"$0.00"`
        type: string
    x-ds-definition-name: billingPlan
    x-ms-summary: Contains information about a billing plan.
  billingPlanInformation:
    type: object
    properties:
      appStoreReceipt:
        "$ref": "#/definitions/appStoreReceipt"
        description: ""
      billingAddress:
        "$ref": "#/definitions/accountAddress"
        description: The billing address for the account.
      creditCardInformation:
        "$ref": "#/definitions/creditCardInformation"
        description:
          A complex type that has information about the credit card used
          to pay for this account.
      directDebitProcessorInformation:
        "$ref": "#/definitions/directDebitProcessorInformation"
        description:
          Information about the bank that processes direct debits for the
          payment plan.
      downgradeReason:
        description: "(Optional) The user's reason for downgrading their billing plan."
        type: string
      enablePreAuth:
        description: ""
        type: string
      enableSupport:
        description:
          When **true,** customer support is provided as part of the account
          plan.
        type: string
      includedSeats:
        description: The number of seats (users) included in the plan.
        type: string
      incrementalSeats:
        description: Reserved for DocuSign.
        type: string
      paymentMethod:
        description: |-
          The payment method used for the billing plan. Valid values are:

          - `NotSupported`
          - `CreditCard`
          - `PurchaseOrder`
          - `Premium`
          - `Freemium`
          - `FreeTrial`
          - `AppStore`
          - `DigitalExternal`
          - `DirectDebit`
        type: string
      paymentProcessor:
        description: ""
        type: string
      paymentProcessorInformation:
        "$ref": "#/definitions/paymentProcessorInformation"
        description:
          Information about the entity that processes payments for the
          billing plan.
      planInformation:
        "$ref": "#/definitions/planInformation"
        description:
          An object used to identify the features and attributes of the
          account being created.
      processPayment:
        description: ""
        type: string
      referralInformation:
        "$ref": "#/definitions/referralInformation"
        description:
          A complex type that contains properties for entering referral
          and discount information.
      renewalStatus:
        description:
          "The renewal status of the account. Possible values are:\n\n-
          `auto`: The account automatically renews. \n- `queued_for_close`: The account
          will be closed at the billingPeriodEndDate. \n- queued_for_downgrade`: The
          account will be downgraded at the `billingPeriodEndDate`."
        type: string
      saleDiscountAmount:
        description: Reserved for DocuSign.
        type: string
      saleDiscountFixedAmount:
        description: Reserved for DocuSign.
        type: string
      saleDiscountPercent:
        description: Reserved for DocuSign.
        type: string
      saleDiscountPeriods:
        description: Reserved for DocuSign.
        type: string
      saleDiscountSeatPriceOverride:
        description: Reserved for DocuSign.
        type: string
      taxExemptId:
        description: ""
        type: string
    description: This object contains details about a billing plan.
    x-ds-definition-name: billingPlanInformation
    x-ms-summary: This object contains details about a billing plan.
  billingPlanPreview:
    description: Information used to provide a preview of a billing plan.
    type: object
    properties:
      currencyCode:
        description:
          Specifies the [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217)
          currency code for the account.
        type: string
      invoice:
        "$ref": "#/definitions/billingInvoice"
        description: ""
      isProrated:
        description: When **true,** the billing plan is prorated.
        type: string
      subtotalAmount:
        description: ""
        type: string
      taxAmount:
        description: ""
        type: string
      totalAmount:
        description: ""
        type: string
    x-ds-definition-name: billingPlanPreview
    x-ms-summary: Information used to provide a preview of a billing plan.
  billingPlanResponse:
    description: Defines a billing plan response object.
    type: object
    properties:
      billingPlan:
        "$ref": "#/definitions/billingPlan"
        description: An object that contains details about the billing plan.
      successorPlans:
        description:
          A list of billing plans that the current billing plan can be
          rolled into.
        type: array
        items:
          "$ref": "#/definitions/billingPlan"
    x-ds-definition-name: billingPlanResponse
    x-ms-summary: Defines a billing plan response object.
  billingPlansResponse:
    description: Defines a billing plans response object.
    type: object
    properties:
      billingPlans:
        description: Reserved for DocuSign.
        type: array
        items:
          "$ref": "#/definitions/billingPlan"
    x-ds-definition-name: billingPlansResponse
    x-ms-summary: Defines a billing plans response object.
  billingPlanUpdateResponse:
    description: Defines a billing plan update response object.
    type: object
    properties:
      accountPaymentMethod:
        description:
          "The type of payment method used for the account. Valid values
          are:\n\n- `credit_card`\n- "
        type: string
      billingPlanPreview:
        "$ref": "#/definitions/billingPlanPreview"
        description: ""
      currencyCode:
        description:
          Specifies the [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217)
          currency code for the account.
        type: string
      includedSeats:
        description: The number of seats (users) included in the plan.
        type: string
      paymentCycle:
        description:
          "The payment cycle associated with the plan. Valid values: \n\n-
          `Monthly`\n- `Annually` "
        type: string
      paymentMethod:
        description: |-
          The payment method used for the billing plan. Valid values are:

          - `NotSupported`
          - `CreditCard`
          - `PurchaseOrder`
          - `Premium`
          - `Freemium`
          - `FreeTrial`
          - `AppStore`
          - `DigitalExternal`
          - `DirectDebit`
        type: string
      planId:
        description: DocuSign's ID for the account plan.
        type: string
      planName:
        description:
          "The name of the billing plan used for the account.\n\nExamples:
          \n\n- `Personal - Annual`\n- `Unlimited Envelope Subscription - Annual Billing`"
        type: string
    x-ds-definition-name: billingPlanUpdateResponse
    x-ms-summary: Defines a billing plan update response object.
  billingPrice:
    type: object
    properties:
      beginQuantity:
        description: Reserved for DocuSign.
        type: string
      endQuantity:
        description: ""
        type: string
      unitPrice:
        description: Reserved for DocuSign.
        type: string
    x-ds-definition-name: billingPrice
    description: ""
    x-ms-summary: ""
  brand:
    type: object
    properties:
      brandCompany:
        description: The name of the company associated with the brand.
        type: string
      brandId:
        description: The ID used to identify a specific brand in API calls.
        type: string
      brandLanguages:
        description: |-
          An array of two-letter codes for the languages that you want to use with the brand. The supported languages are:

          - Arabic (`ar`)
          - Armenian (`hy`)
          - Bahasa Indonesia (`id`)
          - Bahasa Malay (`ms`)
          - Bulgarian (`bg`)
          - Chinese Simplified (`zh_CN`)
          - Chinese Traditional (`zh_TW`)
          - Croatian (`hr`)
          - Czech (`cs`)
          - Danish (`da`)
          - Dutch (`nl`)
          - English UK (`en_GB`)
          - English US (`en`)
          - Estonian (`et`)
          - Farsi (`fa`)
          - Finnish (`fi`)
          - French (`fr`)
          - French Canada (`fr_CA`)
          - German (`de`)
          - Greek (`el`)
          - Hebrew (`he`)
          - Hindi (`hi`)
          - Hungarian (`hu`)
          - Italian (`it`)
          - Japanese (`ja`)
          - Korean (`ko`)
          - Latvian (`lv`)
          - Lithuanian (`lt`)
          - Norwegian (`no`)
          - Polish (`pl`)
          - Portuguese (`pt`)
          - Portuguese Brasil (`pt_BR`)
          - Romanian (`ro`)
          - Russian (`ru`)
          - Serbian (`sr`)
          - Slovak (`sk`)
          - Slovenian (`sl`)
          - Spanish (`es`)
          - Spanish Latin America (`es_MX`)
          - Swedish (`sv`)
          - Thai (`th`)
          - Turkish (`tr`)
          - Ukranian (`uk`)
          - Vietnamese (`vi`)
        type: array
        items:
          type: string
      brandName:
        description: The name of the brand.
        type: string
      colors:
        description: |-
          An array of name-value pairs specifying the colors that the brand uses for the following elements:

          - Button background
          - Button text
          - Header background
          - Header text
        type: array
        items:
          "$ref": "#/definitions/nameValue"
      defaultBrandLanguage:
        description: |-
          The two-letter code for the language that you want to use as the brand default. The supported languages are:

          - Arabic (`ar`)
          - Armenian (`hy`)
          - Bahasa Indonesia (`id`)
          - Bahasa Malay (`ms`)
          - Bulgarian (`bg`)
          - Chinese Simplified (`zh_CN`)
          - Chinese Traditional (`zh_TW`)
          - Croatian (`hr`)
          - Czech (`cs`)
          - Danish (`da`)
          - Dutch (`nl`)
          - English UK (`en_GB`)
          - English US (`en`)
          - Estonian (`et`)
          - Farsi (`fa`)
          - Finnish (`fi`)
          - French (`fr`)
          - French Canada (`fr_CA`)
          - German (`de`)
          - Greek (`el`)
          - Hebrew (`he`)
          - Hindi (`hi`)
          - Hungarian (`hu`)
          - Italian (`it`)
          - Japanese (`ja`)
          - Korean (`ko`)
          - Latvian (`lv`)
          - Lithuanian (`lt`)
          - Norwegian (`no`)
          - Polish (`pl`)
          - Portuguese (`pt`)
          - Portuguese Brasil (`pt_BR`)
          - Romanian (`ro`)
          - Russian (`ru`)
          - Serbian (`sr`)
          - Slovak (`sk`)
          - Slovenian (`sl`)
          - Spanish (`es`)
          - Spanish Latin America (`es_MX`)
          - Swedish (`sv`)
          - Thai (`th`)
          - Turkish (`tr`)
          - Ukranian (`uk`)
          - Vietnamese (`vi`)
        type: string
      emailContent:
        description: Deprecated.
        type: array
        items:
          "$ref": "#/definitions/brandEmailContent"
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      isOrganizationBrand:
        description: ""
        type: string
      isOverridingCompanyName:
        description:
          When **true,** the `brandCompany` property is overriding the
          name of the company in the account settings.
        type: boolean
      isSendingDefault:
        description:
          When **true,** the sending brand is the default brand for sending
          new envelopes.
        type: boolean
      isSigningDefault:
        description:
          When **true,** the siging brand is the default brand for the
          signing experience.
        type: boolean
      landingPages:
        description: |-
          An array of name/value pairs specifying the pages to which the user is redirected after the following events occur:

          - Signing Completed
          - Viewed Exit
          - Finish Later
          - Decline
          - Session Timeout
          - Authentication Failure

          If you do not specify landing pages, the DocuSign default pages are used.
        type: array
        items:
          "$ref": "#/definitions/nameValue"
      links:
        description:
          An array of `brandLink` objects that contain information about
          the links that the brand uses.
        type: array
        items:
          "$ref": "#/definitions/brandLink"
      logos:
        "$ref": "#/definitions/brandLogos"
        description:
          The URIs for retrieving the logos that are associated with the
          brand.
      organizationBrandLogo:
        description: ""
        type: string
      resources:
        "$ref": "#/definitions/brandResourceUrls"
        description: |-
          An object containing the URLs for the four DocuSign master resource files that the brand uses for sending, signing, email messages, and captive (embedded) signing. You can modify the default email messages and formats in these file to customize the user experience.

          **Note:** This object is returned only when the `resourceContentType` is `sending`, `signing`, `email`, or `signing_captive`.
    description:
      Information about a brand that is associated with an account. A brand
      applies custom styles and text to an envelope.
    x-ds-definition-name: brand
    x-ms-summary:
      Information about a brand that is associated with an account. A
      brand applies custom styles and text to an envelope.
  brandEmailContent:
    type: object
    properties:
      content:
        description: Deprecated.
        type: string
      emailContentType:
        description: Deprecated.
        type: string
      emailToLink:
        description: Deprecated.
        type: string
      linkText:
        description: Deprecated.
        type: string
    description: Deprecated.
    x-ds-definition-name: brandEmailContent
    x-ms-summary: Deprecated.
  brandLink:
    type: object
    properties:
      linkText:
        description: The text used for the link.
        type: string
      linkType:
        description: |-
          The type of link. Valid values include:

          - `aboutDocusign`
          - `closeButton`
        type: string
      showLink:
        description: When **true,** the link displays to the recipient.
        type: string
      urlOrMailTo:
        description: The URL or mailto address of the link.
        type: string
    description: Information about a link that a brand uses.
    x-ds-definition-name: brandLink
    x-ms-summary: Information about a link that a brand uses.
  brandLogos:
    type: object
    properties:
      email:
        description: |
          The URI for the brand's secondary logo.

          This is a read-only property that provides a URI to the logo in use.
          To update a logo use
          [AccountBrands: updateLogo](/docs/esign-rest-api/reference/accounts/accountbrands/updatelogo/).
        type: string
      primary:
        description: |
          The URI for the brand's secondary logo.

          This is a read-only property that provides a URI to the logo in use.
          To update a logo use
          [AccountBrands: updateLogo](/docs/esign-rest-api/reference/accounts/accountbrands/updatelogo/).
        type: string
      secondary:
        description: |
          The URI for the brand's secondary logo.

          This is a read-only property that provides a URI to the logo in use.
          To update a logo use
          [AccountBrands: updateLogo](/docs/esign-rest-api/reference/accounts/accountbrands/updatelogo/).
        type: string
    description: |
      The URIs for retrieving the logos that are associated with the brand.

      These are read-only properties that provide a URI to logos in use.
      To update a logo use
      [AccountBrands: updateLogo](/docs/esign-rest-api/reference/accounts/accountbrands/updatelogo/).
    x-ds-definition-name: brandLogos
    x-ms-summary: |
      The URIs for retrieving the logos that are associated with the brand.

      These are read-only properties that provide a URI to logos in use.
      To update a logo use
      [AccountBrands: updateLogo](/docs/esign-rest-api/reference/accounts/accountbrands/updatelogo/).
  brandRequest:
    type: object
    properties:
      brandId:
        description: The ID of the brand used in API calls
        type: string
    description: This request object contains information about a specific brand.
    x-ds-definition-name: brandRequest
    x-ms-summary: This request object contains information about a specific brand.
  brandResources:
    type: object
    properties:
      createdByUserInfo:
        "$ref": "#/definitions/userInfo"
        description: The user ID of the user who created the brand resource.
      createdDate:
        description: The date and time that the brand resource was created.
        type: string
      dataNotSavedNotInMaster:
        description: Deprecated.
        type: array
        items:
          type: string
      modifiedByUserInfo:
        "$ref": "#/definitions/userInfo"
        description: Information about the user who last modified the brand resource.
      modifiedDate:
        description: The date on which this user record was last modified.
        type: string
      modifiedTemplates:
        description: |-
          This property is returned in the response to the [AccountBrands::listResources][listResources] request. It contains a list of any email templates that have been modified to differ from the master resource files.

          [listResources]: /docs/esign-rest-api/reference/accounts/accountbrands/listresources/
        type: array
        items:
          type: string
      resourcesContentType:
        description: |-
          The type of brand resource file. A brand uses a different resource file to control each of the following experiences:

          - Sending (`sending`)
          - Signing (`signing`)
          - Email messages (`email`)
          - Captive (embedded) signing (`signing_captive`)

          You can modify the default email messages and formats in these files and upload them to your brand to customize the user experience.
        type: string
      resourcesContentUri:
        description: The URI for the brand resource file.
        type: string
    description:
      Information about the resource files that the brand uses for the
      email, signing, sending, and captive (embedded) signing experiences.
    x-ds-definition-name: brandResources
    x-ms-summary:
      Information about the resource files that the brand uses for the
      email, signing, sending, and captive (embedded) signing experiences.
  brandResourcesList:
    type: object
    properties:
      resourcesContentTypes:
        description: A list of resources that the brand uses.
        type: array
        items:
          "$ref": "#/definitions/brandResources"
    x-ds-definition-name: brandResourcesList
    description: ""
    x-ms-summary: ""
  brandResourceUrls:
    type: object
    properties:
      email:
        description: The URI for the email resource file that the brand uses.
        type: string
      sending:
        description: The URI for the sending resource file that the brand uses.
        type: string
      signing:
        description: The URI for the signing resource file that the brand uses.
        type: string
      signingCaptive:
        description:
          The URI for the captive (embedded) signing resource file that
          the brand uses.
        type: string
    description:
      "Brands use resource files to style the following experiences: \n\n-
      Email\n- Sending\n- Signing\n- Captive (embedded) signing \n\nYou can modify
      these resource files to customize these experiences."
    x-ds-definition-name: brandResourceUrls
    x-ms-summary:
      "Brands use resource files to style the following experiences: \n\n-
      Email\n- Sending\n- Signing\n- Captive (embedded) signing \n\nYou can modify
      these resource files to customize these experiences."
  brandsRequest:
    type: object
    properties:
      brands:
        description: A list of brands.
        type: array
        items:
          "$ref": "#/definitions/brandRequest"
    description: Details about one or more brands.
    x-ds-definition-name: brandsRequest
    x-ms-summary: Details about one or more brands.
  brandsResponse:
    type: object
    properties:
      brands:
        description: A list of brands.
        type: array
        items:
          "$ref": "#/definitions/brand"
      recipientBrandIdDefault:
        description:
          The brand that envelope recipients see when a brand is not explicitly
          set.
        type: string
      senderBrandIdDefault:
        description:
          The brand that envelope senders see when a brand is not explicitly
          set.
        type: string
    x-ds-definition-name: brandsResponse
    description: ""
    x-ms-summary: ""
  bulkEnvelope:
    type: object
    properties:
      bulkRecipientRow:
        description:
          The row of the recipient in the CSV file used to create the bulk
          recipient list.
        type: string
      bulkStatus:
        description: |-
          Indicates the status of the bulk send operation. Returned values can be:
          - `queued`
          - `processing`
          - `sent`
          - `failed`
        type: string
      email:
        description:
          The email address of the recipient assigned to this envelope
          transaction.
        type: string
      envelopeId:
        description: GUID of the bulk envelope.
        type: string
      envelopeUri:
        description: The URI for retrieving the envelope or envelopes.
        type: string
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      name:
        description: The name of the recipient assigned to this envelope transaction.
        type: string
      submittedDateTime:
        description: The date and time on which the bulk envelope was created.
        type: string
      transactionId:
        description:
          Identifier for the envelope transaction. The ID is a sender-generated
          value and is valid in the DocuSign system for 7 days. DocuSign recommends
          that you use a transaction ID for offline signing to ensure that an envelope
          is not sent multiple times. You can use the transaction ID to determine
          an envelope's status (queued, processing, sent, or failed) in cases where
          the Internet connection is lost before envelope status is returned.
        type: string
    x-ds-definition-name: bulkEnvelope
    description: ""
    x-ms-summary: ""
  bulkEnvelopeStatus:
    type: object
    properties:
      batchId:
        description:
          Specifies an identifier which can be used to retrieve a more
          detailed status of individual bulk recipient batches.
        type: string
      batchSize:
        description: The number of items returned in this response.
        type: string
      bulkEnvelopes:
        description: A list of bulk envelope objects.
        type: array
        items:
          "$ref": "#/definitions/bulkEnvelope"
      bulkEnvelopesBatchUri:
        description: URI at which you can retrieve the batch envelopes.
        type: string
      endPosition:
        description: "The last index position in the result set. "
        type: string
      failed:
        description: "The number of entries with a status of failed. "
        type: string
      nextUri:
        description:
          "The URI for the next chunk of records based on the search request.
          It is `null` if this is the last set of results for the search. "
        type: string
      previousUri:
        description:
          "The URI for the prior chunk of records based on the search request.
          It is `null` if this is the first set of results for the search. "
        type: string
      queued:
        description: "The number of entries with a status of queued. "
        type: string
      resultSetSize:
        description:
          The number of results in this response. Because you can filter
          which entries are included in the response, this value is always less than
          or equal to the `totalSetSize`.
        type: string
      sent:
        description: The number of entries with a status of sent.
        type: string
      startPosition:
        description: The starting index position of the current result set.
        type: string
      submittedDate:
        description: The date on which the bulk envelope was created.
        type: string
      totalSetSize:
        description:
          The total number of items in the result set. This value is always
          greater than or equal to the value of `resultSetSize`.
        type: string
    x-ds-definition-name: bulkEnvelopeStatus
    description: ""
    x-ms-summary: ""
  bulkProcessingLists:
    type: object
    properties:
      bulkProcessListIds:
        description: ""
        type: array
        items:
          type: string
    x-ds-definition-name: bulkProcessingLists
    description: ""
    x-ms-summary: ""
  bulkProcessingListSummaries:
    type: object
    properties:
      bulkListSummaries:
        description:
          An array of `bulkSendingListSummary` objects where each summary
          provides basic information about a bulk send list that belongs to the current
          user.
        type: array
        items:
          "$ref": "#/definitions/bulkProcessingListSummary"
    x-ds-definition-name: bulkProcessingListSummaries
    description: ""
    x-ms-summary: ""
  bulkProcessingListSummary:
    type: object
    properties:
      bulkProcessListId:
        description: ""
        type: string
      createdByUser:
        description: ""
        type: string
      createdDate:
        description: The creation date of the account in UTC timedate format.
        type: string
      name:
        description: ""
        type: string
    x-ds-definition-name: bulkProcessingListSummary
    description: ""
    x-ms-summary: ""
  bulkProcessRequest:
    type: object
    properties:
      batchName:
        description: ""
        type: string
      envelopeOrTemplateId:
        description: The GUID of the envelope or template.
        type: string
    x-ds-definition-name: bulkProcessRequest
    description: ""
    x-ms-summary: ""
  bulkProcessResponse:
    type: object
    properties:
      batchId:
        description:
          Identifier used to query the status of an individual bulk recipient
          batch.
        type: string
      batchName:
        description: ""
        type: string
      batchSize:
        description: The total number of items in the batch being queried.
        type: string
      errorDetails:
        description: "Error details.

          "
        type: array
        items:
          type: string
      errors:
        description: ""
        type: array
        items:
          type: string
      queueLimit:
        description: ""
        type: string
      totalQueued:
        description: ""
        type: string
    x-ds-definition-name: bulkProcessResponse
    description: ""
    x-ms-summary: ""
  bulkProcessResult:
    type: object
    properties:
      errors:
        description: ""
        type: array
        items:
          "$ref": "#/definitions/bulkSendBatchError"
      listId:
        description: The GUID of the bulk send list.
        type: string
      success:
        description: ""
        type: string
    x-ds-definition-name: bulkProcessResult
    description: ""
    x-ms-summary: ""
  bulkSendBatchActionRequest:
    type: object
    properties:
      action:
        description: |
          The action to apply. Valid values:

          * `Resend`
          * `Correct`
          * `Void`

          This property is required and case-sensitive. The value must correspond to the `bulkAction` query parameter.
        type: string
      notification:
        "$ref": "#/definitions/notification"
        description:
          The notification settings to apply to the bulk send envelopes.
          This property is required if `action` is `Correct`.
      voidReason:
        description: |
          A string explaining why the envelope is voided. This value is shown in a message to the recipients.

          This property is required if `action` is `Void`.
        type: string
    x-ds-definition-name: bulkSendBatchActionRequest
    description: ""
    x-ms-summary: ""
  bulkSendBatchError:
    type: object
    properties:
      error:
        description: The server error associated with the Connect post failure.
        type: string
      errorDetail:
        description: ""
        type: string
    x-ds-definition-name: bulkSendBatchError
    description: ""
    x-ms-summary: ""
  bulkSendBatchRequest:
    type: object
    properties:
      batchName:
        description: |-
          The new name of the bulk send batch.

          This property is required. The maximum length of the string is 500 characters.
        type: string
    x-ds-definition-name: bulkSendBatchRequest
    description: ""
    x-ms-summary: ""
  bulkSendBatchStatus:
    type: object
    properties:
      action:
        description: ""
        type: string
      actionStatus:
        description: ""
        type: string
      batchId:
        description: The batch ID.
        type: string
      batchName:
        description: The batch name.
        type: string
      batchSize:
        description:
          "The number of of bulk envelopes submitted in the current batch

          "
        type: string
      bulkErrors:
        description: An array of error statuses.
        type: array
        items:
          "$ref": "#/definitions/bulkSendErrorStatus"
      envelopeIdOrTemplateId:
        description:
          "The ID of the draft envelope or template that was used to create
          the batch.

          "
        type: string
      envelopesInfo:
        "$ref": "#/definitions/bulkSendEnvelopesInfo"
        description: ""
      envelopesUri:
        description: "The URI to get all envelopes sent in the batch.

          "
        type: string
      failed:
        description: "The number of envelopes that failed to process or send.

          "
        type: string
      mailingListId:
        description: The ID of the mailing list used to create the batch.
        type: string
      mailingListName:
        description: ""
        type: string
      ownerUserId:
        description: ""
        type: string
      queued:
        description: "The number of envelopes waiting in pending queue

          "
        type: string
      resendsRemaining:
        description: ""
        type: string
      senderUserId:
        description: The ID of the sender.
        type: string
      sent:
        description: The number of envelopes sent successfully.
        type: string
      submittedDate:
        description: "The timestamp of  when the batch was submitted in ISO 8601 format.\n\n"
        type: string
    description: Result of `getBulkSendBatchStatus`
    x-ds-definition-name: bulkSendBatchStatus
    x-ms-summary: Result of `getBulkSendBatchStatus`
  bulkSendBatchSummaries:
    type: object
    properties:
      batchSizeLimit:
        description:
          The maximum number of envelopes the account is permitted to submit
          in a given batch.
        type: string
      bulkBatchSummaries:
        description: An array of batch summaries.
        type: array
        items:
          "$ref": "#/definitions/bulkSendBatchSummary"
      bulkProcessQueueLimit:
        description: ""
        type: string
      bulkProcessTotalQueued:
        description: ""
        type: string
      endPosition:
        description: "The last index position in the result set. "
        type: string
      nextUri:
        description:
          "The URI for the next chunk of records based on the search request.
          It is `null` if this is the last set of results for the search. "
        type: string
      previousUri:
        description:
          "The URI for the prior chunk of records based on the search request.
          It is `null` if this is the first set of results for the search. "
        type: string
      queueLimit:
        description:
          Maximum number of envelopes an account is permitted to have in
          the queue at any one time.
        type: string
      resultSetSize:
        description:
          The number of results in this response. Because you can filter
          which entries are included in the response, this value is always less than
          or equal to the `totalSetSize`.
        type: string
      startPosition:
        description: The starting index position of the current result set.
        type: string
      totalQueued:
        description:
          The number of envelopes currently pending processing for the
          entire account.
        type: string
      totalSetSize:
        description:
          The total number of items in the result set. This value is always
          greater than or equal to the value of `resultSetSize`.
        type: string
    description: "A list of bulk send batch summaries. "
    x-ds-definition-name: bulkSendBatchSummaries
    x-ms-summary: "A list of bulk send batch summaries. "
  bulkSendBatchSummary:
    type: object
    properties:
      action:
        description: ""
        type: string
      actionStatus:
        description: ""
        type: string
      batchId:
        description: The batch ID.
        type: string
      batchName:
        description: The name of the batch.
        type: string
      batchSize:
        description: The number of envelopes in the batch.
        type: string
      batchUri:
        description: The batch details URI.
        type: string
      failed:
        description: Number of envelopes that failed to send.
        type: string
      queued:
        description: "Number of envelopes peding processing.

          "
        type: string
      sent:
        description: Number of envelopes that have been sent.
        type: string
      submittedDate:
        description: The time stamp of when the batch was created in ISO 8601 format.
        type: string
    description: Summary status of a single batch.
    x-ds-definition-name: bulkSendBatchSummary
    x-ms-summary: Summary status of a single batch.
  bulkSendEnvelopesInfo:
    type: object
    properties:
      authoritativeCopy:
        description: |-
          When **true,** marks all of the documents in the envelope as authoritative copies.

          **Note:** You can override this value for a specific document. For example, you can set the `authoritativeCopy` property to **true** at the envelope level, but turn it off for a single document by setting the `authoritativeCopy` property for the document to **false.**
        type: string
      completed:
        description: ""
        type: string
      correct:
        description: ""
        type: string
      created:
        description: The UTC DateTime when the workspace user authorization was created.
        type: string
      declined:
        description: ""
        type: string
      deleted:
        description: ""
        type: string
      delivered:
        description: ""
        type: string
      digitalSignaturesPending:
        description: ""
        type: string
      sent:
        description: The number of entries with a status of `sent`.
        type: string
      signed:
        description: ""
        type: string
      timedOut:
        description: ""
        type: string
      transferCompleted:
        description: ""
        type: string
      voided:
        description: ""
        type: string
    x-ds-definition-name: bulkSendEnvelopesInfo
    description: ""
    x-ms-summary: ""
  bulkSendErrorStatus:
    type: object
    properties:
      created:
        description: The timestamp of when the error occurred in ISO 8601 format.
        type: string
      envelopeId:
        description: The envelope ID of the envelope status that failed to post.
        type: string
      errorMessage:
        description: "The error message generated during processing, if any.

          "
        type: string
      recipientEmails:
        description: |
          An array of email addresses for the failed bulk envelope.

          Recipient email/info of the failed bulk envelope.
        type: array
        items:
          type: string
    description: A single bulk send error report.
    x-ds-definition-name: bulkSendErrorStatus
    x-ms-summary: A single bulk send error report.
  bulkSendingCopy:
    type: object
    properties:
      customFields:
        description: |-
          The custom fields for this copy of the envelope.

          **Note:** These custom fields must also be included in the original envelope or template that you want to send.
        type: array
        items:
          "$ref": "#/definitions/bulkSendingCopyCustomField"
      docGenFormFields:
        description: ""
        type: array
        items:
          "$ref": "#/definitions/bulksendingCopyDocGenFormField"
      emailBlurb:
        description: The email body for this copy of the envelope.
        type: string
      emailSubject:
        description: |-
          The email subject line for this copy of the envelope.

          For information about adding merge field information to the email subject,
          see [Template Email Subject Merge Fields](/docs/esign-rest-api/reference/templates/templates/create/).

          **Note:** The subject line is limited to 100 characters, including any merged fields.It is not truncated. It is an error if the text is longer than 100 characters.
        type: string
      recipients:
        description:
          Information about the recipients associated with this copy of
          the envelope.
        type: array
        items:
          "$ref": "#/definitions/bulkSendingCopyRecipient"
    description:
      This object contains the details to use for a specific copy, or instance,
      of the envelope. When you send an envelope by using a bulk send list, you can
      customize these properties for each instance.
    x-ds-definition-name: bulkSendingCopy
    x-ms-summary:
      This object contains the details to use for a specific copy, or
      instance, of the envelope. When you send an envelope by using a bulk send list,
      you can customize these properties for each instance.
  bulkSendingCopyCustomField:
    type: object
    properties:
      name:
        description: The name of the custom field.
        type: string
      value:
        description: The value of the custom field.
        type: string
    description:
      This object contains details about a custom field for a bulk send
      copy. In a bulk send request, each custom field in the bulk send list must match
      a custom field in the envelope or template that you want to send.
    x-ds-definition-name: bulkSendingCopyCustomField
    x-ms-summary:
      This object contains details about a custom field for a bulk send
      copy. In a bulk send request, each custom field in the bulk send list must match
      a custom field in the envelope or template that you want to send.
  bulksendingCopyDocGenFormField:
    type: object
    properties:
      name:
        description: ""
        type: string
      value:
        description: "Specifies the value of the tab. "
        type: string
    x-ds-definition-name: bulksendingCopyDocGenFormField
    description: ""
    x-ms-summary: ""
  bulkSendingCopyRecipient:
    type: object
    properties:
      accessCode:
        description:
          "If a value is provided, the recipient must enter the value as
          the access code to view and sign the envelope. \n\nMaximum Length: 50 characters
          and it must conform to the account's access code format setting.\n\nIf blank,
          but the signer `accessCode` property is set in the envelope, then that value
          is used.\n\nIf blank and the signer `accessCode` property is not set, then
          the access code is not required."
        type: string
      clientUserId:
        description:
          "Specifies whether the recipient is embedded or remote. \n\nIf
          the `clientUserId` property is not null then the recipient is embedded.
          Use this field to associate the signer with their userId in your app. Authenticating
          the user is the responsibility of your app when you use embedded signing.\n\nIf
          the `clientUserId` property is set and either `SignerMustHaveAccount` or
          `SignerMustLoginToSign` property of the account settings is set to  **true,**
          an error is generated on sending.\n\n**Note:** This property is not returned
          by the [listStatusChanges](/docs/esign-rest-api/reference/envelopes/envelopes/liststatuschanges/)
          endpoint.\n\nMaximum length: 100 characters. \n"
        type: string
      customFields:
        description:
          An optional array of strings that allows the sender to provide
          custom data about the recipient. This information is returned in the envelope
          status but otherwise not used by DocuSign. Each customField string can be
          a maximum of 100 characters.
        type: array
        items:
          type: string
      deliveryMethod:
        description: |-
          The delivery method. One of:

          - `email`
          - `fax`
          - `SMS`
          - `WhatsApp`
          - `offline`

          The `SMS` and `WhatsApp` delivery methods
          are limited to `signer`, `carbonCopy`, and `certifiedDelivery`
          recipients.

          **Related topics**

          - [Using SMS delivery with the eSignature API][smsconcept]
          - [How to request a signature by SMS delivery][howto]

          [smsconcept]: /docs/esign-rest-api/esign101/concepts/sms-delivery/using-sms-esignature/
          [howto]: /docs/esign-rest-api/how-to/request-signature-sms/
        type: string
      email:
        description: The recipient's email address.
        type: string
      emailNotification:
        "$ref": "#/definitions/recipientEmailNotification"
        description: |-
          This optional property allows you to set a specific email subject and
          body for this recipient's notification email.

          **Note:** If you use this property, you _must_
          provide a value for the `supportedLanguage` sub-property.


          You can set the `emailNotification` property separately
          for each recipient. If you set the value only for certain
          recipients, the other recipients are assigned the values from
          the top-level `emailSubject` and `emailBlurb`.
      embeddedRecipientStartURL:
        description:
          "Specifies a sender-provided valid URL string for redirecting
          an embedded recipient. When using this option, the embedded recipient still
          receives an email from DocuSign, just as a remote recipient would. When
          the document link in the email is clicked the recipient is redirected, through
          DocuSign, to the supplied URL to complete their actions. When routing to
          the URL, the sender's system (the server responding to the URL) must request
          a recipient token to launch a signing session. \n\nWhen `SIGN_AT_DOCUSIGN`,
          the recipient is directed to an embedded signing or viewing process directly
          at DocuSign. The signing or viewing action is initiated by the DocuSign
          system and the transaction activity and Certificate of Completion records
          will reflect this. In all other ways the process is identical to an embedded
          signing or viewing operation launched by a partner.\n\nIt is important to
          understand that in a typical embedded workflow, the authentication of an
          embedded recipient is the responsibility of the sending application. DocuSign
          expects that senders will follow their own processes for establishing the
          recipient's identity. In this workflow the recipient goes through the sending
          application before the embedded signing or viewing process is initiated.
          However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`,
          the recipient goes directly to the embedded signing or viewing process,
          bypassing the sending application and any authentication steps the sending
          application would use. In this case, DocuSign recommends that you use one
          of the normal DocuSign authentication features (Access Code, Phone Authentication,
          SMS Authentication, etc.) to verify the identity of the recipient.\n\nIf
          the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL`
          is set, DocuSign will ignore the redirect URL and launch the standard signing
          process for the email recipient. Information can be appended to the embedded
          recipient start URL using merge fields. The available merge fields items
          are: `envelopeId`, `recipientId`, `recipientName`, `recipientEmail`, and
          `customFields`. The `customFields` property must be set for the recipient
          or envelope. The merge fields are enclosed in double brackets. \n\n*Example*:
          \n\n`http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]` "
        type: string
      faxNumber:
        description: Reserved for DocuSign.
        type: string
      hostEmail:
        description: |
          The email address of the signing host.
          This is the DocuSign user that is hosting the in-person signing session.

          Required when `inPersonSigningType` is `inPersonSigner`.
          For eNotary flow, use `email` instead.

          Maximum Length: 100 characters.
        type: string
      hostName:
        description: |
          The name of the signing host.
          This is the DocuSign user that is hosting the in-person signing session.

          Required when `inPersonSigningType` is `inPersonSigner`.
          For eNotary flow, use `name` instead.

          Maximum Length: 100 characters.
        type: string
      idCheckConfigurationName:
        description:
          "The name of the authentication check to use. This value must
          match one of the authentication types that the account uses. The names of
          these authentication types appear in the web console sending interface in
          the Identify list for a recipient. This setting overrides any default authentication
          setting. Valid values are:\n\n- `Phone Auth $`: The recipient must authenticate
          by using two-factor authentication (2FA). You provide the phone number to
          use for 2FA in the `phoneAuthentication` object.\n- `SMS Auth $`: The recipient
          must authenticate via SMS. You provide the phone number to use in the `smsAuthentication`
          object.\n- `ID Check $`: The  recipient must answer detailed security questions.
          \n\n**Example:** Your account has ID Check and SMS Authentication available.
          In the web console Identify list, these appear as ID Check $ and SMS Auth
          $. To use ID Check in an envelope, the idCheckConfigurationName should be
          ID Check $. For SMS, you would use SMS Auth $, and you would also need to
          add a phone number to the smsAuthentication node."
        type: string
      idCheckInformationInput:
        "$ref": "#/definitions/idCheckInformationInput"
        description:
          An object that contains input information related to a recipient
          ID check.
      identificationMethod:
        description: ""
        type: string
      identityVerification:
        "$ref": "#/definitions/recipientIdentityVerification"
        description:
          Specifies the ID Verification workflow applied on an envelope
          by workflow ID. <br/>See the [list](/docs/esign-rest-api/reference/accounts/identityverifications/list/)
          method in the [IdentityVerifications](/docs/esign-rest-api/reference/accounts/identityverifications/)
          resource for more information on how to retrieve workflow IDs available
          for an account. <br/>This can be used in addition to other [recipient authentication](https://support.docusign.com/s/document-item?bundleId=gav1643676262430&topicId=kzp1578456318101.html)
          methods. <br/>Note that ID Verification and ID Check are two distinct methods.
          ID Verification checks recipients' identity by verifying their ID while
          ID Check relies on data available on public records (such as current and
          former address).
      name:
        description: ""
        type: string
      note:
        description: |
          A note sent to the recipient in the signing email.
          This note is unique to this recipient.
          In the user interface,
          it appears near the upper left corner
          of the document
          on the signing screen.

          Maximum Length: 1000 characters.
        type: string
      phoneAuthentication:
        "$ref": "#/definitions/recipientPhoneAuthentication"
        description: |+
          When `idCheckConfigurationName` is set to `Phone Auth $`, you use this complex type to provide the recipient authentication method details. It contains the following elements:

          * `recipMayProvideNumber`: Boolean. When **true,** the recipient can use whatever phone number they choose.
          * `senderProvidedNumbers`: ArrayOfStrings.  A list of phone numbers the recipient can use.
          * `recordVoicePrint`: Reserved for DocuSign.
          * `validateRecipProvidedNumber`: Reserved for DocuSign.

      recipientId:
        description: |
          A local reference used to map
          recipients to other objects, such as specific
          document tabs.

          A `recipientId` must be
          either an integer or a GUID,
          and the `recipientId` must be
          unique within an envelope.

          For example, many envelopes assign the first recipient
          a `recipientId` of `1`.
        type: string
      recipientSignatureProviders:
        description:
          The default signature provider is the DocuSign Electronic signature
          system. This parameter is used to specify one or more Standards Based Signature
          (digital signature) providers for the signer to use. [More information.](/docs/esign-rest-api/esign101/concepts/standards-based-signatures/)
        type: array
        items:
          "$ref": "#/definitions/recipientSignatureProvider"
      roleName:
        description: |-
          The name of the role associated with the recipient.

          **Note:** Every recipient must be assigned either a `recipientId` or a `roleName` but not both. You cannot use `roleName` and `recipientId` in the same list.
        type: string
      signerName:
        description: |
          The in-person signer's full legal name.

          Required when `inPersonSigningType` is `inPersonSigner`.
          For eNotary flow, use `name` instead.

          Maximum Length: 100 characters.
        type: string
      signingGroupId:
        description:
          "The ID of the [signing group](https://support.docusign.com/s/document-item?bundleId=gav1643676262430&topicId=zgn1578456447934.html).

          "
        type: string
      smsAuthentication:
        "$ref": "#/definitions/recipientSMSAuthentication"
        description:
          "When `idCheckConfigurationName` is set to `SMS Auth $`, you
          use this complex type to provide the recipient authentication method details.
          It contains the element `senderProvidedNumbers`, which is an array of phone
          numbers that the recipient can use for SMS text authentication. \n\n"
      socialAuthentications:
        description: Deprecated.
        type: array
        items:
          "$ref": "#/definitions/socialAuthentication"
      tabs:
        description: |-
          A list of tabs associated with the recipient. In a bulk send request, each of these recipient tabs must match a recipient tab on the envelope or template that you want to send. To match up, the `tabLabel` for this tab and the `tabLabel` for the corresponding tab on the envelope or template must be the same.

          For example, if the envelope has a placeholder text tab with the `tabLabel` `childName`, you must assign the same `tabLabel` `childName` to the tab here that you are populating with that information.

           You can use the following types of tabs to match bulk send recipients to an envelope:

          - Text tabs
          - Radio group tabs (where the name of the `radioGroup` on the envelope is used as the `tabLabel` in the bulk send list)
          - List tabs
        type: array
        items:
          "$ref": "#/definitions/bulkSendingCopyTab"
    description: This object contains details about a bulk send recipient.
    x-ds-definition-name: bulkSendingCopyRecipient
    x-ms-summary: This object contains details about a bulk send recipient.
  bulkSendingCopyTab:
    type: object
    properties:
      initialValue:
        description: The initial value that you want to assign to the tab.
        type: string
      tabLabel:
        description: |-
          The label associated with the recipient tab. In a bulk send request, the `tabLabel` for this tab and the `tabLabel` for the corresponding tab on the envelope or template must be the same.

          Maximum Length: 500 characters.
        type: string
    description: |-
      A tab associated with the bulk send recipient. In a bulk send request, each recipient tab must match a recipient tab on the envelope or template that you want to send. To match up, the `tabLabel` for this tab and the `tabLabel` for the corresponding tab on the envelope or template must be the same.

      For example, if the envelope has a placeholder text tab with the `tabLabel` `childName`, you must assign the same `tabLabel` `childName` to the tab here that you are populating with that information.
    x-ds-definition-name: bulkSendingCopyTab
    x-ms-summary: |-
      A tab associated with the bulk send recipient. In a bulk send request, each recipient tab must match a recipient tab on the envelope or template that you want to send. To match up, the `tabLabel` for this tab and the `tabLabel` for the corresponding tab on the envelope or template must be the same.

      For example, if the envelope has a placeholder text tab with the `tabLabel` `childName`, you must assign the same `tabLabel` `childName` to the tab here that you are populating with that information.
  bulkSendingList:
    type: object
    properties:
      bulkCopies:
        description:
          An array of `bulkCopy` objects. Each object represents an instance
          or copy of an envelope and contains details such as the recipient, custom
          fields, tabs, and other information.
        type: array
        items:
          "$ref": "#/definitions/bulkSendingCopy"
      listId:
        description: The GUID of the bulk send list.
        type: string
      name:
        description: The name of the bulk send list.
        type: string
    description: This object contains the details for the bulk send list.
    x-ds-definition-name: bulkSendingList
    x-ms-summary: This object contains the details for the bulk send list.
  bulkSendingListSummaries:
    type: object
    properties:
      bulkListSummaries:
        description:
          An array of `bulkSendingListSummary` objects where each summary
          provides basic information about a bulk send list that belongs to the current
          user.
        type: array
        items:
          "$ref": "#/definitions/bulkSendingListSummary"
    description:
      This complex type contains summaries that provide basic information
      about the bulk send lists that belong to the current user.
    x-ds-definition-name: bulkSendingListSummaries
    x-ms-summary:
      This complex type contains summaries that provide basic information
      about the bulk send lists that belong to the current user.
  bulkSendingListSummary:
    type: object
    properties:
      bulkSendListId:
        description:
          The GUID of the bulk send list. This property is created after
          you post a new bulk send list.
        type: string
      createdByUser:
        description: The GUID of the user who created the bulk send list.
        type: string
      createdDate:
        description: The UTC DateTime that the bulk send list was created.
        type: string
      name:
        description: The name of the bulk send list.
        type: string
    description: This object contains basic information about a bulk send list.
    x-ds-definition-name: bulkSendingListSummary
    x-ms-summary: This object contains basic information about a bulk send list.
  bulkSendRequest:
    type: object
    properties:
      batchName:
        description:
          "The human-readable name of the batch. If you do not set this
          value, it defaults to the `name` property of the `bulkSendingList` object.

          "
        type: string
      envelopeOrTemplateId:
        description:
          The GUID of the envelope or template that you want to send in
          bulk.
        type: string
    description:
      This object contains information about the envelope or template that
      you want to send in bulk.
    x-ds-definition-name: bulkSendRequest
    x-ms-summary:
      This object contains information about the envelope or template
      that you want to send in bulk.
  bulkSendResponse:
    type: object
    properties:
      batchId:
        description:
          A batch identifier that you can use to get the status of the
          batch.
        type: string
      batchName:
        description: ""
        type: string
      batchSize:
        description: The total number of items in the batch being queried.
        type: string
      envelopeOrTemplateId:
        description: The GUID of the envelope or template that was sent.
        type: string
      errorDetails:
        description:
          A human-readable object that describes errors that occur. It
          is only valid for responses and ignored in requests.
        type: array
        items:
          type: string
      errors:
        description:
          A list of errors that occurred. This information is intended
          to be parsed by machine.
        type: array
        items:
          type: string
      queueLimit:
        description: ""
        type: string
      totalQueued:
        description: ""
        type: string
    description: The object contains the response to a bulk send request.
    x-ds-definition-name: bulkSendResponse
    x-ms-summary: The object contains the response to a bulk send request.
  bulkSendTestResponse:
    type: object
    properties:
      canBeSent:
        description: |
          When **true,** the envelope or template is compatible with the bulk send list and can be sent by using the [BulkSend: createBulkSendRequest][BulkSendRequest] method.

          **Note:** This property is only returned in responses and ignored in requests.

          [BulkSendRequest]:  /docs/esign-rest-api/reference/bulkenvelopes/bulksend/createbulksendrequest/
        type: boolean
      validationErrorDetails:
        description: Human-readable details about any validation errors that occurred.
        type: array
        items:
          type: string
      validationErrors:
        description: |-
          A list of validation errors that were encountered during the bulk send test.

          **Note:** This information is intended to be parsed by machine.
        type: array
        items:
          type: string
    description: This object contains the results of a bulk send test.
    x-ds-definition-name: bulkSendTestResponse
    x-ms-summary: This object contains the results of a bulk send test.
  captiveRecipient:
    type: object
    properties:
      clientUserId:
        description:
          "Specifies whether the recipient is embedded or remote. \n\nIf
          the `clientUserId` property is not null then the recipient is embedded.
          Use this field to associate the signer with their userId in your app. Authenticating
          the user is the responsibility of your app when you use embedded signing.\n\nIf
          the `clientUserId` property is set and either `SignerMustHaveAccount` or
          `SignerMustLoginToSign` property of the account settings is set to  **true,**
          an error is generated on sending.\n\n**Note:** This property is not returned
          by the [listStatusChanges](/docs/esign-rest-api/reference/envelopes/envelopes/liststatuschanges/)
          endpoint.\n\nMaximum length: 100 characters. \n"
        type: string
      email:
        description: The email address associated with the captive recipient.
        type: string
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      userName:
        description: The username associated with the captive recipient.
        type: string
    description: This object contains details about a captive (embedded) recipient.
    x-ds-definition-name: captiveRecipient
    x-ms-summary: This object contains details about a captive (embedded) recipient.
  captiveRecipientInformation:
    type: object
    properties:
      captiveRecipients:
        description:
          A complex type containing information about one or more captive
          recipients.
        type: array
        items:
          "$ref": "#/definitions/captiveRecipient"
    description: Contains information about captive (embedded) recipients.
    x-ds-definition-name: captiveRecipientInformation
    x-ms-summary: Contains information about captive (embedded) recipients.
  carbonCopy:
    type: object
    properties:
      accessCode:
        description:
          "If a value is provided, the recipient must enter the value as
          the access code to view and sign the envelope. \n\nMaximum Length: 50 characters
          and it must conform to the account's access code format setting.\n\nIf blank,
          but the signer `accessCode` property is set in the envelope, then that value
          is used.\n\nIf blank and the signer `accessCode` property is not set, then
          the access code is not required."
        type: string
      accessCodeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `accessCode` property is
          editable. This property is read-only.
      addAccessCodeToEmail:
        description:
          Optional. When **true,** the access code will be added to the
          email sent to the recipient. This nullifies the security measure of `accessCode`
          on the recipient.
        type: string
      additionalNotifications:
        description: An array of additional notification objects.
        type: array
        items:
          "$ref": "#/definitions/recipientAdditionalNotification"
      agentCanEditEmail:
        description:
          Optional element. When **true,** the agents recipient associated
          with this recipient can change the recipient's pre-populated email address.
          This element is only active if enabled for the account.
        type: string
      agentCanEditName:
        description:
          Optional element. When **true,** the agents recipient associated
          with this recipient can change the recipient's pre-populated name. This
          element is only active if enabled for the account.
        type: string
      allowSystemOverrideForLockedRecipient:
        description:
          When **true,** if the recipient is locked on a template, advanced
          recipient routing can override the lock.
        type: string
      autoRespondedReason:
        description:
          "Error message provided by the destination email system. This
          field is only provided if the email notification to the recipient fails
          to send. This property is read-only.

          "
        type: string
      bulkSendV2Recipient:
        description: ""
        type: string
      clientUserId:
        description: Not applicable for Carbon Copy recipients.
        type: string
      completedCount:
        description:
          Indicates the number of times that the recipient has been through
          a signing completion for the envelope. If this number is greater than 0
          for a signing group, only the user who previously completed may sign again.
          This property is read-only.
        type: string
      consentDetailsList:
        description: ""
        type: array
        items:
          "$ref": "#/definitions/consentDetails"
      customFields:
        description:
          An optional array of strings that allows the sender to provide
          custom data about the recipient. This information is returned in the envelope
          status but otherwise not used by DocuSign. Each customField string can be
          a maximum of 100 characters.
        type: array
        items:
          type: string
      declinedDateTime:
        description:
          The date and time the recipient declined the document. This property
          is read-only.
        type: string
      declinedReason:
        description:
          The reason the recipient declined the document. This property
          is read-only.
        type: string
      deliveredDateTime:
        description:
          The date and time that the envelope was delivered to the recipient.
          This property is read-only.
        type: string
      deliveryMethod:
        description: |-
          The delivery method. One of:

          - `email`
          - `fax`
          - `SMS`
          - `WhatsApp`
          - `offline`

          The `SMS` and `WhatsApp` delivery methods
          are limited to `signer`, `carbonCopy`, and `certifiedDelivery`
          recipients.

          **Related topics**

          - [Using SMS delivery with the eSignature API][smsconcept]
          - [How to request a signature by SMS delivery][howto]

          [smsconcept]: /docs/esign-rest-api/esign101/concepts/sms-delivery/using-sms-esignature/
          [howto]: /docs/esign-rest-api/how-to/request-signature-sms/
        type: string
      deliveryMethodMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Reserved for DocuSign.
      designatorId:
        description: Reserved for DocuSign.
        type: string
      designatorIdGuid:
        description: Reserved for DocuSign.
        type: string
      documentVisibility:
        description:
          A list of `documentVisibility` objects. Each object in the list
          specifies whether a document in the envelope is visible to this recipient.
          For the envelope to use this functionality, Document Visibility must be
          enabled for the account and the `enforceSignerVisibility` property must
          be set to **true.**
        type: array
        items:
          "$ref": "#/definitions/documentVisibility"
      email:
        description:
          "The recipient's email address. Notification of the document
          to sign is sent to this email address. \n\nMaximum length: 100 characters. "
        type: string
      emailMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `email` property is editable.
          This property is read-only.
      emailNotification:
        "$ref": "#/definitions/recipientEmailNotification"
        description: |-
          This optional property allows you to set a specific email subject and
          body for this recipient's notification email.

          **Note:** If you use this property, you _must_
          provide a value for the `supportedLanguage` sub-property.


          You can set the `emailNotification` property separately
          for each recipient. If you set the value only for certain
          recipients, the other recipients are assigned the values from
          the top-level `emailSubject` and `emailBlurb`.
      emailRecipientPostSigningURL:
        description: ""
        type: string
      embeddedRecipientStartURL:
        description:
          "Specifies a sender-provided valid URL string for redirecting
          an embedded recipient. When using this option, the embedded recipient still
          receives an email from DocuSign, just as a remote recipient would. When
          the document link in the email is clicked the recipient is redirected, through
          DocuSign, to the supplied URL to complete their actions. When routing to
          the URL, the sender's system (the server responding to the URL) must request
          a recipient token to launch a signing session. \n\nWhen `SIGN_AT_DOCUSIGN`,
          the recipient is directed to an embedded signing or viewing process directly
          at DocuSign. The signing or viewing action is initiated by the DocuSign
          system and the transaction activity and Certificate of Completion records
          will reflect this. In all other ways the process is identical to an embedded
          signing or viewing operation launched by a partner.\n\nIt is important to
          understand that in a typical embedded workflow, the authentication of an
          embedded recipient is the responsibility of the sending application. DocuSign
          expects that senders will follow their own processes for establishing the
          recipient's identity. In this workflow the recipient goes through the sending
          application before the embedded signing or viewing process is initiated.
          However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`,
          the recipient goes directly to the embedded signing or viewing process,
          bypassing the sending application and any authentication steps the sending
          application would use. In this case, DocuSign recommends that you use one
          of the normal DocuSign authentication features (Access Code, Phone Authentication,
          SMS Authentication, etc.) to verify the identity of the recipient.\n\nIf
          the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL`
          is set, DocuSign will ignore the redirect URL and launch the standard signing
          process for the email recipient. Information can be appended to the embedded
          recipient start URL using merge fields. The available merge fields items
          are: `envelopeId`, `recipientId`, `recipientName`, `recipientEmail`, and
          `customFields`. The `customFields` property must be set for the recipient
          or envelope. The merge fields are enclosed in double brackets. \n\n*Example*:
          \n\n`http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]` "
        type: string
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      excludedDocuments:
        description: |-
          Specifies the documents that are not visible to this recipient. Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to **true** for the envelope to use this.

          When enforce signer visibility is enabled, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.
        type: array
        items:
          type: string
      faxNumber:
        description: Reserved for DocuSign.
        type: string
      faxNumberMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Reserved for DocuSign.
      firstName:
        description: "The recipient's first name. Maximum Length: 50 characters."
        type: string
      firstNameMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `firstName` property is editable.
          This property is read-only.
      fullName:
        description: Reserved for DocuSign.
        type: string
      fullNameMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Reserved for DocuSign.
      idCheckConfigurationName:
        description:
          "The name of the authentication check to use. This value must
          match one of the authentication types that the account uses. The names of
          these authentication types appear in the web console sending interface in
          the Identify list for a recipient. This setting overrides any default authentication
          setting. Valid values are:\n\n- `Phone Auth $`: The recipient must authenticate
          by using two-factor authentication (2FA). You provide the phone number to
          use for 2FA in the `phoneAuthentication` object.\n- `SMS Auth $`: The recipient
          must authenticate via SMS. You provide the phone number to use in the `smsAuthentication`
          object.\n- `ID Check $`: The  recipient must answer detailed security questions.
          \n\n**Example:** Your account has ID Check and SMS Authentication available.
          In the web console Identify list, these appear as ID Check $ and SMS Auth
          $. To use ID Check in an envelope, the idCheckConfigurationName should be
          ID Check $. For SMS, you would use SMS Auth $, and you would also need to
          add a phone number to the smsAuthentication node."
        type: string
      idCheckConfigurationNameMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `idCheckConfigurationName`
          property is editable. This property is read-only.
      idCheckInformationInput:
        "$ref": "#/definitions/idCheckInformationInput"
        description:
          An object that contains input information related to a recipient
          ID check.
      identityVerification:
        "$ref": "#/definitions/recipientIdentityVerification"
        description:
          Specifies the ID Verification workflow applied on an envelope
          by workflow ID. <br/>See the [list](/docs/esign-rest-api/reference/accounts/identityverifications/list/)
          method in the [IdentityVerifications](/docs/esign-rest-api/reference/accounts/identityverifications/)
          resource for more information on how to retrieve workflow IDs available
          for an account. <br/>This can be used in addition to other [recipient authentication](https://support.docusign.com/s/document-item?bundleId=gav1643676262430&topicId=kzp1578456318101.html)
          methods. <br/>Note that ID Verification and ID Check are two distinct methods.
          ID Verification checks recipients' identity by verifying their ID while
          ID Check relies on data available on public records (such as current and
          former address).
      inheritEmailNotificationConfiguration:
        description:
          "When **true** and the envelope recipient creates a DocuSign
          account after signing, the Manage Account Email Notification settings are
          used as the default settings for the recipient's account. "
        type: string
      lastName:
        description: The recipient's last name.
        type: string
      lastNameMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `lastName` property is editable.
          This property is read-only.
      linkedAccountConfigurationId:
        description: ""
        type: string
      lockedRecipientPhoneAuthEditable:
        description: Reserved for DocuSign.
        type: string
      lockedRecipientSmsEditable:
        description: Reserved for DocuSign.
        type: string
      name:
        description: |-
          The full legal name of the recipient. Maximum Length: 100 characters.

          **Note:** You must always set a value for this property in requests, even if `firstName` and `lastName` are set.
        type: string
      nameMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `name` property is editable.
          This property is read-only.
      note:
        description: |
          A note sent to the recipient in the signing email.
          This note is unique to this recipient.
          In the user interface,
          it appears near the upper left corner
          of the document
          on the signing screen.

          Maximum Length: 1000 characters.
        type: string
      noteMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `note` property is editable.
          This property is read-only.
      phoneAuthentication:
        "$ref": "#/definitions/recipientPhoneAuthentication"
        description: |+
          When `idCheckConfigurationName` is set to `Phone Auth $`, you use this complex type to provide the recipient authentication method details. It contains the following elements:

          * `recipMayProvideNumber`: Boolean. When **true,** the recipient can use whatever phone number they choose.
          * `senderProvidedNumbers`: ArrayOfStrings.  A list of phone numbers the recipient can use.
          * `recordVoicePrint`: Reserved for DocuSign.
          * `validateRecipProvidedNumber`: Reserved for DocuSign.

      phoneNumber:
        "$ref": "#/definitions/recipientPhoneNumber"
        description: Describes the recipient phone number.
      proofFile:
        "$ref": "#/definitions/recipientProofFile"
        description: The proof file of the recipient.
      recipientAttachments:
        description: Reserved for DocuSign.
        type: array
        items:
          "$ref": "#/definitions/recipientAttachment"
      recipientAuthenticationStatus:
        "$ref": "#/definitions/authenticationStatus"
        description:
          Information about the recipient's authentication status. This
          property is read-only.
      recipientFeatureMetadata:
        description:
          Metadata about the features that are supported for the recipient
          type. This property is read-only.
        type: array
        items:
          "$ref": "#/definitions/featureAvailableMetadata"
      recipientId:
        description: |
          A local reference used to map
          recipients to other objects, such as specific
          document tabs.

          A `recipientId` must be
          either an integer or a GUID,
          and the `recipientId` must be
          unique within an envelope.

          For example, many envelopes assign the first recipient
          a `recipientId` of `1`.
        type: string
      recipientIdGuid:
        description:
          The globally-unique identifier (GUID) for a specific recipient
          on a specific envelope. If the same recipient is associated with multiple
          envelopes, they will have a different GUID for each one. This property is
          read-only.
        type: string
      recipientType:
        description: |-
          The recipient type, as specified by the following values:
          - `agent`: Agent recipients can add name and email information for recipients that appear after the agent in routing order.
          - `carbonCopy`: Carbon copy recipients get a copy of the envelope but don't need to sign, initial, date, or add information to any of the documents. This type of recipient can be used in any routing order.
          - `certifiedDelivery`: Certified delivery recipients must receive the completed documents for the envelope to be completed. They don't need to sign, initial, date, or add information to any of the documents.
          - `editor`: Editors have the same management and access rights for the envelope as the sender. Editors can add name and email information, add or change the routing order, set authentication options, and can edit signature/initial tabs and data fields for the remaining recipients.
          - `inPersonSigner`: In-person recipients are DocuSign users who act as signing hosts in the same physical location as the signer.
          - `intermediaries`: Intermediary recipients can optionally add name and email information for recipients at the same or subsequent level in the routing order.
          - `seal`: Electronic seal recipients represent legal entities.
          - `signer`: Signers are recipients who must sign, initial, date, or add data to form fields on the documents in the envelope.
          - `witness`: Witnesses are recipients whose signatures affirm that the identified signers have signed the documents in the envelope.
        type: string
      recipientTypeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `recipientType` property
          is editable. This property is read-only.
      requireIdLookup:
        description:
          "When **true,** the recipient is required to use the specified
          ID check method (including Phone and SMS authentication) to validate their
          identity. "
        type: string
      requireIdLookupMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `requireIdLookup` property
          is editable. This property is read-only.
      roleName:
        description:
          Optional element. Specifies the role name associated with the
          recipient.<br/><br/>This property is required when you are working with
          template recipients.
        type: string
      routingOrder:
        description: "Specifies the routing order of the recipient in the envelope. "
        type: string
      routingOrderMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `routingOrder` property is
          editable. This property is read-only.
      sentDateTime:
        description:
          The UTC DateTime when the envelope was sent. This property is
          read-only.
        type: string
      signedDateTime:
        description: Reserved for DocuSign.
        type: string
      signingGroupId:
        description:
          "The ID of the [signing group](https://support.docusign.com/s/document-item?bundleId=gav1643676262430&topicId=zgn1578456447934.html).

          "
        type: string
      signingGroupIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `signingGroupId` property
          is editable. This property is read-only.
      signingGroupName:
        description:
          "Optional. The name of the signing group. \n\nMaximum Length:
          100 characters. "
        type: string
      signingGroupUsers:
        description:
          A complex type that contains information about users in the signing
          group.
        type: array
        items:
          "$ref": "#/definitions/userInfo"
      smsAuthentication:
        "$ref": "#/definitions/recipientSMSAuthentication"
        description:
          "When `idCheckConfigurationName` is set to `SMS Auth $`, you
          use this complex type to provide the recipient authentication method details.
          It contains the element `senderProvidedNumbers`, which is an array of phone
          numbers that the recipient can use for SMS text authentication. \n\n"
      socialAuthentications:
        description: Deprecated.
        type: array
        items:
          "$ref": "#/definitions/socialAuthentication"
      status:
        description:
          "The recipient's status. This property is read-only. \n\nValid
          values:\n\n- `autoresponded`: The recipient's email system auto-responded
          to the email from DocuSign. This status is used in the web console to inform
          senders about the bounced-back email. This recipient status is only used
          if **Send-on-behalf-of** is turned off for the account.\n- `completed`:
          The recipient has completed their actions (signing or other required actions
          if not a signer) for an envelope.\n- `created`: The recipient is in a draft
          state. This value is only associated with draft envelopes (envelopes that
          have a status of `created`).\n- `declined`: The recipient declined to sign
          the documents in the envelope.\n- `delivered`: The recipient has viewed
          the documents in an envelope through the DocuSign signing website. This
          is not an email delivery of the documents in an envelope.\n- `faxPending`:
          The recipient has finished signing and the system is waiting for a fax attachment
          from the recipient before completing their signing step.\n- `sent`: The
          recipient has been sent an email notification that it is their turn to sign
          an envelope.\n- `signed`: The recipient has completed (signed) all required
          tags in an envelope. This is a temporary state during processing, after
          which the recipient's status automatically switches to `completed`."
        type: string
      statusCode:
        description:
          The code associated with the recipient's status. This property
          is read-only.
        type: string
      suppressEmails:
        description:
          When **true,** email notifications are suppressed for the recipient,
          and they must access envelopes and documents from their DocuSign inbox.
        type: string
      tabs:
        "$ref": "#/definitions/EnvelopeRecipientTabs"
        description:
          A list of `commentTabs` that contains the Carbon Copy recipient's
          comments.
      templateLocked:
        description:
          "When **true,** the sender cannot change any attributes of the
          recipient. Used only when working with template recipients. "
        type: string
      templateRequired:
        description:
          When **true,** the sender may not remove the recipient. Used
          only when working with template recipients.
        type: string
      totalTabCount:
        description: The total number of tabs in the documents. This property is read-only.
        type: string
      userId:
        description: |-
          The ID of the user to access.

          **Note:** Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.
        type: string
    description:
      "Contains information about a carbon copy recipient. Carbon copy
      recipients get a copy of the envelope but don't need to sign, initial, date
      or add information to any of the documents. "
    x-ds-definition-name: carbonCopy
    x-ms-summary:
      "Contains information about a carbon copy recipient. Carbon copy
      recipients get a copy of the envelope but don't need to sign, initial, date
      or add information to any of the documents. "
  certifiedDelivery:
    type: object
    properties:
      accessCode:
        description:
          "If a value is provided, the recipient must enter the value as
          the access code to view and sign the envelope. \n\nMaximum Length: 50 characters
          and it must conform to the account's access code format setting.\n\nIf blank,
          but the signer `accessCode` property is set in the envelope, then that value
          is used.\n\nIf blank and the signer `accessCode` property is not set, then
          the access code is not required."
        type: string
      accessCodeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `accessCode` property is
          editable. This property is read-only.
      addAccessCodeToEmail:
        description:
          Optional. When **true,** the access code will be added to the
          email sent to the recipient. This nullifies the security measure of `accessCode`
          on the recipient.
        type: string
      additionalNotifications:
        description: An array of additional notification objects.
        type: array
        items:
          "$ref": "#/definitions/recipientAdditionalNotification"
      agentCanEditEmail:
        description:
          Optional element. When **true,** the agents recipient associated
          with this recipient can change the recipient's pre-populated email address.
          This element is only active if enabled for the account.
        type: string
      agentCanEditName:
        description:
          Optional element. When **true,** the agents recipient associated
          with this recipient can change the recipient's pre-populated name. This
          element is only active if enabled for the account.
        type: string
      allowSystemOverrideForLockedRecipient:
        description:
          When **true,** if the recipient is locked on a template, advanced
          recipient routing can override the lock.
        type: string
      autoRespondedReason:
        description:
          "Error message provided by the destination email system. This
          field is only provided if the email notification to the recipient fails
          to send. This property is read-only.

          "
        type: string
      bulkSendV2Recipient:
        description: ""
        type: string
      clientUserId:
        description:
          "Specifies whether the recipient is embedded or remote. \n\nIf
          the `clientUserId` property is not null then the recipient is embedded.
          Use this field to associate the signer with their userId in your app. Authenticating
          the user is the responsibility of your app when you use embedded signing.\n\nIf
          the `clientUserId` property is set and either `SignerMustHaveAccount` or
          `SignerMustLoginToSign` property of the account settings is set to  **true,**
          an error is generated on sending.\n\n**Note:** This property is not returned
          by the [listStatusChanges](/docs/esign-rest-api/reference/envelopes/envelopes/liststatuschanges/)
          endpoint.\n\nMaximum length: 100 characters. \n"
        type: string
      completedCount:
        description:
          Indicates the number of times that the recipient has been through
          a signing completion for the envelope. If this number is greater than 0
          for a signing group, only the user who previously completed may sign again.
          This property is read-only.
        type: string
      consentDetailsList:
        description: ""
        type: array
        items:
          "$ref": "#/definitions/consentDetails"
      customFields:
        description:
          An optional array of strings that allows the sender to provide
          custom data about the recipient. This information is returned in the envelope
          status but otherwise not used by DocuSign. Each customField string can be
          a maximum of 100 characters.
        type: array
        items:
          type: string
      declinedDateTime:
        description:
          The date and time the recipient declined the document. This property
          is read-only.
        type: string
      declinedReason:
        description:
          The reason the recipient declined the document. This property
          is read-only.
        type: string
      deliveredDateTime:
        description:
          The date and time that the envelope was delivered to the recipient.
          This property is read-only.
        type: string
      deliveryMethod:
        description: |-
          The delivery method. One of:

          - `email`
          - `fax`
          - `SMS`
          - `WhatsApp`
          - `offline`

          The `SMS` and `WhatsApp` delivery methods
          are limited to `signer`, `carbonCopy`, and `certifiedDelivery`
          recipients.

          **Related topics**

          - [Using SMS delivery with the eSignature API][smsconcept]
          - [How to request a signature by SMS delivery][howto]

          [smsconcept]: /docs/esign-rest-api/esign101/concepts/sms-delivery/using-sms-esignature/
          [howto]: /docs/esign-rest-api/how-to/request-signature-sms/
        type: string
      deliveryMethodMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Reserved for DocuSign.
      designatorId:
        description: Reserved for DocuSign.
        type: string
      designatorIdGuid:
        description: Reserved for DocuSign.
        type: string
      documentVisibility:
        description:
          A list of `documentVisibility` objects. Each object in the list
          specifies whether a document in the envelope is visible to this recipient.
          For the envelope to use this functionality, Document Visibility must be
          enabled for the account and the `enforceSignerVisibility` property must
          be set to **true.**
        type: array
        items:
          "$ref": "#/definitions/documentVisibility"
      email:
        description: The recipient's email address.
        type: string
      emailMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `email` property is editable.
          This property is read-only.
      emailNotification:
        "$ref": "#/definitions/recipientEmailNotification"
        description: |-
          This optional property allows you to set a specific email subject and
          body for this recipient's notification email.

          **Note:** If you use this property, you _must_
          provide a value for the `supportedLanguage` sub-property.


          You can set the `emailNotification` property separately
          for each recipient. If you set the value only for certain
          recipients, the other recipients are assigned the values from
          the top-level `emailSubject` and `emailBlurb`.
      emailRecipientPostSigningURL:
        description: ""
        type: string
      embeddedRecipientStartURL:
        description:
          "Specifies a sender-provided valid URL string for redirecting
          an embedded recipient. When using this option, the embedded recipient still
          receives an email from DocuSign, just as a remote recipient would. When
          the document link in the email is clicked the recipient is redirected, through
          DocuSign, to the supplied URL to complete their actions. When routing to
          the URL, the sender's system (the server responding to the URL) must request
          a recipient token to launch a signing session. \n\nWhen `SIGN_AT_DOCUSIGN`,
          the recipient is directed to an embedded signing or viewing process directly
          at DocuSign. The signing or viewing action is initiated by the DocuSign
          system and the transaction activity and Certificate of Completion records
          will reflect this. In all other ways the process is identical to an embedded
          signing or viewing operation launched by a partner.\n\nIt is important to
          understand that in a typical embedded workflow, the authentication of an
          embedded recipient is the responsibility of the sending application. DocuSign
          expects that senders will follow their own processes for establishing the
          recipient's identity. In this workflow the recipient goes through the sending
          application before the embedded signing or viewing process is initiated.
          However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`,
          the recipient goes directly to the embedded signing or viewing process,
          bypassing the sending application and any authentication steps the sending
          application would use. In this case, DocuSign recommends that you use one
          of the normal DocuSign authentication features (Access Code, Phone Authentication,
          SMS Authentication, etc.) to verify the identity of the recipient.\n\nIf
          the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL`
          is set, DocuSign will ignore the redirect URL and launch the standard signing
          process for the email recipient. Information can be appended to the embedded
          recipient start URL using merge fields. The available merge fields items
          are: `envelopeId`, `recipientId`, `recipientName`, `recipientEmail`, and
          `customFields`. The `customFields` property must be set for the recipient
          or envelope. The merge fields are enclosed in double brackets. \n\n*Example*:
          \n\n`http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]` "
        type: string
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      excludedDocuments:
        description: |-
          Specifies the documents that are not visible to this recipient. Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to **true** for the envelope to use this.

          When enforce signer visibility is enabled, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.
        type: array
        items:
          type: string
      faxNumber:
        description: Reserved for DocuSign.
        type: string
      faxNumberMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Reserved for DocuSign.
      firstName:
        description: "The recipient's first name. Maximum Length: 50 characters."
        type: string
      firstNameMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `firstName` property is editable.
          This property is read-only.
      fullName:
        description: Reserved for DocuSign.
        type: string
      fullNameMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Reserved for DocuSign.
      idCheckConfigurationName:
        description:
          "The name of the authentication check to use. This value must
          match one of the authentication types that the account uses. The names of
          these authentication types appear in the web console sending interface in
          the Identify list for a recipient. This setting overrides any default authentication
          setting. Valid values are:\n\n- `Phone Auth $`: The recipient must authenticate
          by using two-factor authentication (2FA). You provide the phone number to
          use for 2FA in the `phoneAuthentication` object.\n- `SMS Auth $`: The recipient
          must authenticate via SMS. You provide the phone number to use in the `smsAuthentication`
          object.\n- `ID Check $`: The  recipient must answer detailed security questions.
          \n\n**Example:** Your account has ID Check and SMS Authentication available.
          In the web console Identify list, these appear as ID Check $ and SMS Auth
          $. To use ID Check in an envelope, the idCheckConfigurationName should be
          ID Check $. For SMS, you would use SMS Auth $, and you would also need to
          add a phone number to the smsAuthentication node."
        type: string
      idCheckConfigurationNameMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `idCheckConfigurationName`
          property is editable. This property is read-only.
      idCheckInformationInput:
        "$ref": "#/definitions/idCheckInformationInput"
        description:
          An object that contains input information related to a recipient
          ID check.
      identityVerification:
        "$ref": "#/definitions/recipientIdentityVerification"
        description:
          Specifies the ID Verification workflow applied on an envelope
          by workflow ID. <br/>See the [list](/docs/esign-rest-api/reference/accounts/identityverifications/list/)
          method in the [IdentityVerifications](/docs/esign-rest-api/reference/accounts/identityverifications/)
          resource for more information on how to retrieve workflow IDs available
          for an account. <br/>This can be used in addition to other [recipient authentication](https://support.docusign.com/s/document-item?bundleId=gav1643676262430&topicId=kzp1578456318101.html)
          methods. <br/>Note that ID Verification and ID Check are two distinct methods.
          ID Verification checks recipients' identity by verifying their ID while
          ID Check relies on data available on public records (such as current and
          former address).
      inheritEmailNotificationConfiguration:
        description:
          "When **true** and the envelope recipient creates a DocuSign
          account after signing, the Manage Account Email Notification settings are
          used as the default settings for the recipient's account. "
        type: string
      lastName:
        description: The recipient's last name.
        type: string
      lastNameMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `lastName` property is editable.
          This property is read-only.
      lockedRecipientPhoneAuthEditable:
        description: Reserved for DocuSign.
        type: string
      lockedRecipientSmsEditable:
        description: Reserved for DocuSign.
        type: string
      name:
        description: |-
          The full legal name of the recipient. Maximum Length: 100 characters.

          **Note:** You must always set a value for this property in requests, even if `firstName` and `lastName` are set.
        type: string
      nameMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `name` property is editable.
          This property is read-only.
      note:
        description: |
          A note sent to the recipient in the signing email.
          This note is unique to this recipient.
          In the user interface,
          it appears near the upper left corner
          of the document
          on the signing screen.

          Maximum Length: 1000 characters.
        type: string
      noteMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `note` property is editable.
          This property is read-only.
      phoneAuthentication:
        "$ref": "#/definitions/recipientPhoneAuthentication"
        description: |+
          When `idCheckConfigurationName` is set to `Phone Auth $`, you use this complex type to provide the recipient authentication method details. It contains the following elements:

          * `recipMayProvideNumber`: Boolean. When **true,** the recipient can use whatever phone number they choose.
          * `senderProvidedNumbers`: ArrayOfStrings.  A list of phone numbers the recipient can use.
          * `recordVoicePrint`: Reserved for DocuSign.
          * `validateRecipProvidedNumber`: Reserved for DocuSign.

      phoneNumber:
        "$ref": "#/definitions/recipientPhoneNumber"
        description: Describes the recipient phone number.
      proofFile:
        "$ref": "#/definitions/recipientProofFile"
        description: The proof file of the recipient.
      recipientAttachments:
        description: Reserved for DocuSign.
        type: array
        items:
          "$ref": "#/definitions/recipientAttachment"
      recipientAuthenticationStatus:
        "$ref": "#/definitions/authenticationStatus"
        description:
          Information about the recipient's authentication status. This
          property is read-only.
      recipientFeatureMetadata:
        description:
          Metadata about the features that are supported for the recipient
          type. This property is read-only.
        type: array
        items:
          "$ref": "#/definitions/featureAvailableMetadata"
      recipientId:
        description: |
          A local reference used to map
          recipients to other objects, such as specific
          document tabs.

          A `recipientId` must be
          either an integer or a GUID,
          and the `recipientId` must be
          unique within an envelope.

          For example, many envelopes assign the first recipient
          a `recipientId` of `1`.
        type: string
      recipientIdGuid:
        description:
          The globally-unique identifier (GUID) for a specific recipient
          on a specific envelope. If the same recipient is associated with multiple
          envelopes, they will have a different GUID for each one. This property is
          read-only.
        type: string
      recipientType:
        description: |-
          The recipient type, as specified by the following values:
          - `agent`: Agent recipients can add name and email information for recipients that appear after the agent in routing order.
          - `carbonCopy`: Carbon copy recipients get a copy of the envelope but don't need to sign, initial, date, or add information to any of the documents. This type of recipient can be used in any routing order.
          - `certifiedDelivery`: Certified delivery recipients must receive the completed documents for the envelope to be completed. They don't need to sign, initial, date, or add information to any of the documents.
          - `editor`: Editors have the same management and access rights for the envelope as the sender. Editors can add name and email information, add or change the routing order, set authentication options, and can edit signature/initial tabs and data fields for the remaining recipients.
          - `inPersonSigner`: In-person recipients are DocuSign users who act as signing hosts in the same physical location as the signer.
          - `intermediaries`: Intermediary recipients can optionally add name and email information for recipients at the same or subsequent level in the routing order.
          - `seal`: Electronic seal recipients represent legal entities.
          - `signer`: Signers are recipients who must sign, initial, date, or add data to form fields on the documents in the envelope.
          - `witness`: Witnesses are recipients whose signatures affirm that the identified signers have signed the documents in the envelope.
        type: string
      recipientTypeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `recipientType` property
          is editable. This property is read-only.
      requireIdLookup:
        description:
          "When **true,** the recipient is required to use the specified
          ID check method (including Phone and SMS authentication) to validate their
          identity. "
        type: string
      requireIdLookupMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `requireIdLookup` property
          is editable. This property is read-only.
      roleName:
        description:
          Optional element. Specifies the role name associated with the
          recipient.<br/><br/>This property is required when you are working with
          template recipients.
        type: string
      routingOrder:
        description: "Specifies the routing order of the recipient in the envelope. "
        type: string
      routingOrderMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `routingOrder` property is
          editable. This property is read-only.
      sentDateTime:
        description:
          The UTC DateTime when the envelope was sent. This property is
          read-only.
        type: string
      signedDateTime:
        description: Reserved for DocuSign.
        type: string
      signingGroupId:
        description:
          "The ID of the [signing group](https://support.docusign.com/s/document-item?bundleId=gav1643676262430&topicId=zgn1578456447934.html).

          "
        type: string
      signingGroupIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `signingGroupId` property
          is editable. This property is read-only.
      signingGroupName:
        description:
          "Optional. The name of the signing group. \n\nMaximum Length:
          100 characters. "
        type: string
      signingGroupUsers:
        description:
          A complex type that contains information about users in the signing
          group.
        type: array
        items:
          "$ref": "#/definitions/userInfo"
      smsAuthentication:
        "$ref": "#/definitions/recipientSMSAuthentication"
        description:
          "When `idCheckConfigurationName` is set to `SMS Auth $`, you
          use this complex type to provide the recipient authentication method details.
          It contains the element `senderProvidedNumbers`, which is an array of phone
          numbers that the recipient can use for SMS text authentication. \n\n"
      socialAuthentications:
        description: Deprecated.
        type: array
        items:
          "$ref": "#/definitions/socialAuthentication"
      status:
        description:
          "The status of the recipient. This property is read-only. \n\nValid
          values:\n\n- `autoresponded`: The recipient's email system auto-responded
          to the email from DocuSign. This status is used in the web console to inform
          senders about the bounced-back email. This recipient status is only used
          if **Send-on-behalf-of** is turned off for the account.\n- `completed`:
          The recipient has completed their actions (signing or other required actions
          if not a signer) for an envelope.\n- `created`: The recipient is in a draft
          state. This value is only associated with draft envelopes (envelopes that
          have a status of `created`).\n- `declined`: The recipient declined to sign
          the documents in the envelope.\n- `delivered`: The recipient has viewed
          the documents in an envelope through the DocuSign signing website. This
          is not an email delivery of the documents in an envelope.\n- `faxPending`:
          The recipient has finished signing and the system is waiting for a fax attachment
          from the recipient before completing their signing step.\n- `sent`: The
          recipient has been sent an email notification that it is their turn to sign
          an envelope.\n- `signed`: The recipient has completed (signed) all required
          tags in an envelope. This is a temporary state during processing, after
          which the recipient's status automatically switches to `completed`."
        type: string
      statusCode:
        description:
          The code associated with the recipient's status. This property
          is read-only.
        type: string
      suppressEmails:
        description:
          When **true,** email notifications are suppressed for the recipient,
          and they must access envelopes and documents from their DocuSign inbox.
        type: string
      templateLocked:
        description:
          "When **true,** the sender cannot change any attributes of the
          recipient. Used only when working with template recipients. "
        type: string
      templateRequired:
        description:
          When **true,** the sender may not remove the recipient. Used
          only when working with template recipients.
        type: string
      totalTabCount:
        description: The total number of tabs in the documents. This property is read-only.
        type: string
      userId:
        description: |-
          The ID of the user to access.

          **Note:** Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.
        type: string
    description:
      Contains information about a certified delivery recipient. Certified
      delivery recipients must receive the completed documents for the envelope to
      be completed. However, they don't need to sign, initial, date or add information
      to any of the documents.
    x-ds-definition-name: certifiedDelivery
    x-ms-summary:
      Contains information about a certified delivery recipient. Certified
      delivery recipients must receive the completed documents for the envelope to
      be completed. However, they don't need to sign, initial, date or add information
      to any of the documents.
  checkbox:
    type: object
    properties:
      anchorAllowWhiteSpaceInCharacters:
        description: |
          When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.

          First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.

          Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.

          The default value is **true.**
        type: string
      anchorAllowWhiteSpaceInCharactersMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorAllowWhiteSpaceInCharacters`
          property is editable.
      anchorCaseSensitive:
        description: |-
          This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**

          For example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.

          This functionality uses the following rules:

          - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:

            $~><|^+=

            For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`

          - Strings embedded in other strings are ignored during the matching process.

          - In words that have dashes, the parts separated by dashes are treated as distinct words.

            Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**

          - Letters with accent marks are treated as distinct characters from their unaccented counterparts.

          - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.

            Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.

          - Unlike punctuation, numbers are not ignored when finding anchor words.

            Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).

          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorCaseSensitiveMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorCaseSensitive` property
          is editable.
      anchorHorizontalAlignment:
        description: |
          This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :

          - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.
          - `right`: Aligns the tab’s left side with the last character of the matching anchor word.

          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorHorizontalAlignmentMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorHorizontalAlignment`
          property is editable.
      anchorIgnoreIfNotPresent:
        description:
          When **true,** this tab is ignored if the `anchorString` is not
          found in the document.
        type: string
      anchorIgnoreIfNotPresentMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorIgnoreIfNotPresent`
          property is editable.
      anchorMatchWholeWord:
        description: |
          When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**

          For example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.

          This functionality uses the following rules:

          - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:

            $~><|^+=

            For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`

          - Strings embedded in other strings are ignored during the matching process.

          - In words that have dashes, the parts separated by dashes are treated as distinct words.

            Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**

          - Letters with accent marks are treated as distinct characters from their unaccented counterparts.

          - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.

            Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.

          - Unlike punctuation, numbers are not ignored when finding anchor words.

            Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).


          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorMatchWholeWordMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorMatchWholeWord` property
          is editable.
      anchorString:
        description:
          Specifies the string to find in the document and use as the basis
          for tab placement.
        type: string
      anchorStringMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorString` property is
          editable.
      anchorTabProcessorVersion:
        description: Reserved for DocuSign.
        type: string
      anchorTabProcessorVersionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Reserved for DocuSign.
      anchorUnits:
        description: |
          Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:

          - `pixels` (default)
          - `inches`
          - `mms`
          - `cms`
        type: string
      anchorUnitsMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorUnits` property is
          editable.
      anchorXOffset:
        description:
          "Specifies the X axis location of the tab in `anchorUnits` relative
          to the `anchorString`.

          "
        type: string
      anchorXOffsetMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorXOffset` property
          is editable.
      anchorYOffset:
        description:
          "Specifies the Y axis location of the tab in `anchorUnits` relative
          to the `anchorString`.

          "
        type: string
      anchorYOffsetMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorYOffset` property
          is editable.
      bold:
        description: When **true,** the information in the tab is bold.
        type: string
      boldMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `bold` property is editable.
      caption:
        description: ""
        type: string
      captionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `caption` property is editable.
      conditionalParentLabel:
        description:
          For conditional fields this is the `tabLabel` of the parent tab
          that controls this tab's visibility.
        type: string
      conditionalParentLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `conditionalParentLabel`
          property is editable.
      conditionalParentValue:
        description: |
          For conditional fields, this is the value of the parent tab that controls the tab's visibility.

          If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use "on" as the value to show that the parent tab is active.
        type: string
      conditionalParentValueMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `conditionalParentValue`
          property is editable.
      customTabId:
        description:
          The DocuSign-generated custom tab ID for the custom tab to apply.
          This property can only be used when adding new tabs for a recipient. When
          used, the new tab inherits all custom tab properties.
        type: string
      customTabIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `customTabId` property is
          editable.
      documentId:
        description:
          Specifies the document ID number that the tab is placed on. This
          must refer to an existing Document's ID attribute.
        type: string
      documentIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `documentId` property is
          editable.
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      font:
        description: |
          The font to be used for the tab value. Supported fonts include:

          - Default
          - Arial
          - ArialNarrow
          - Calibri
          - CourierNew
          - Garamond
          - Georgia
          - Helvetica
          - LucidaConsole
          - MSGothic
          - MSMincho
          - OCR-A
          - Tahoma
          - TimesNewRoman
          - Trebuchet
          - Verdana
        type: string
      fontColor:
        description:
          "The font color to use for the information in the tab. Possible
          values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n-
          Gold\n- Green\n- NavyBlue\n- Purple\n- White\n"
        type: string
      fontColorMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `fontColor` property is editable.
      fontMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `font` property is editable.
      fontSize:
        description: |-
          The font size used for the information in the tab. Possible values are:

          - Size7
          - Size8
          - Size9
          - Size10
          - Size11
          - Size12
          - Size14
          - Size16
          - Size18
          - Size20
          - Size22
          - Size24
          - Size26
          - Size28
          - Size36
          - Size48
          - Size72
        type: string
      fontSizeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `fontSize` property is editable.
      formOrder:
        description:
          An integer specifying the order in which the guided form HTML
          should render. The order is relative to the `formPageLabel`, the group by
          which to place the guided form HTML block.
        type: string
      formOrderMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `formOrder` property is editable.
      formPageLabel:
        description:
          A string specifying the group in which to place the guided form
          HTML. Each group displays as a separate guided forms page in the signing
          experience.
        type: string
      formPageLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `formPageLabel` property
          is editable.
      formPageNumber:
        description:
          An integer specifying the order in which to present the guided
          form pages.
        type: string
      formPageNumberMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `fromPageNumber` property
          is editable.
      height:
        description: |-
          The height of the tab in pixels.
          Must be an integer.
        type: string
      heightMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `height` property is editable.
      italic:
        description: When **true,** the information in the tab is italic.
        type: string
      italicMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `italic` property is editable.
      locked:
        description:
          When **true,** the signer cannot change the data of the custom
          tab.
        type: string
      lockedMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `locked` property is editable.
      mergeField:
        "$ref": "#/definitions/mergeField"
        description:
          Contains the information necessary to map the tab to a field
          in SalesForce.
      mergeFieldXml:
        description: Reserved for DocuSign.
        type: string
      name:
        description: |-
          The name of the tab. For example, `Sign Here` or `Initial Here`.

          If the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.
        type: string
      nameMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `name` property is editable.
          This property is read-only.
      pageNumber:
        description: |-
          The page number on which the tab is located.
          For supplemental documents, this value must be `1`.
        type: string
      pageNumberMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `pageNumber` property is
          editable.
      recipientId:
        description:
          "The ID of the recipient to whom the tab will be assigned. This
          value should match the `recipientId` defined in the recipient object.

          "
        type: string
      recipientIdGuid:
        description:
          The globally-unique identifier (GUID) for a specific recipient
          on a specific envelope. If the same recipient is associated with multiple
          envelopes, they will have a different GUID for each one. This property is
          read-only.
        type: string
      recipientIdGuidMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `recipientIdGuid` property
          is editable.
      recipientIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `recipientId` property is
          editable.
      required:
        description: |
          This property does not apply to `checkbox` tabs.

          To require users to check
          at least one, or at most some number
          of checkboxes,
          associate the checkbox tabs
          with a [`tabGroup`][tabGroup].
          Then set the following `tabGroup` properties:

          - [`maximumAllowed`][maximumAllowed]
          - [`minimumRequired`][minimumRequired]
          - [`groupRule`][groupRule] specifies how the other two properties are interpreted.

          You can find an example
          at [Stack Overflow][so].

          [so]:               https://stackoverflow.com/questions/58209376/checkbox-validation-using-docusign-rest-api/58210277#58210277
          [tabGroup]:         /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/#definition__enveloperecipienttabs_tabgroups
          [groupRule]:        /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/#definition__enveloperecipienttabs_tabgroups_grouprule
          [maximumAllowed]:   /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/#definition__enveloperecipienttabs_tabgroups_maximumallowed
          [minimumRequired]:  /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/#definition__enveloperecipienttabs_tabgroups_minimumrequired
        type: string
      requiredMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `required` property is editable.
      requireInitialOnSharedChange:
        description:
          Optional element for field markup. When **true,** the signer
          is required to initial when they modify a shared field.
        type: string
      requireInitialOnSharedChangeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `requireInitialOnSharedChange`
          property is editable.
      selected:
        description: When **true,** the checkbox is selected.
        type: string
      selectedMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `selected` property is editable.
      selectedOriginal:
        description: ""
        type: string
      selectedOriginalMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: ""
      shared:
        description: When **true,** this tab is shared.
        type: string
      sharedMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          "Metadata that indicates whether the `shared` property is editable.

          "
      shareToRecipients:
        description: Reserved for DocuSign.
        type: string
      shareToRecipientsMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Reserved for DocuSign.
      smartContractInformation:
        "$ref": "#/definitions/smartContractInformation"
        description: Reserved for DocuSign.
      source:
        description: Reserved for DocuSign.
        type: string
      status:
        description: |-
          The status of the tab. Possible values are:

          - `active`: The tab is active, but the recipient has not yet interacted with it.
          - `signed`: The recipient signed the tab.
          - `declined`: The recipient declined the envelope.
          - `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).
        type: string
      statusMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `status` property is editable.
      tabGroupLabels:
        description: |-
          An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.

          To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
        type: array
        items:
          type: string
      tabGroupLabelsMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `tabGroupLabels` property
          is editable.
      tabId:
        description: The unique identifier for the tab.
        type: string
      tabIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabId` property is editable.
      tabLabel:
        description: |
          The label associated with the tab. This value may be an empty string.
          If no value is provided, the tab type is used as the value.

          Maximum Length: 500 characters.
        type: string
      tabLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabLabel` property is editable.
      tabOrder:
        description: |-
          A positive integer that sets the order the tab is navigated to during signing.

          Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
        type: string
      tabOrderMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabOrder` property is editable.
      tabType:
        description: Indicates the type of tab (for example, `signHere` or `initialHere`).
        type: string
      tabTypeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabType` property is editable.
      templateLocked:
        description:
          "When **true,** the sender cannot change any attributes of the
          recipient. Used only when working with template recipients. "
        type: string
      templateLockedMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `templateLocked` property
          is editable.
      templateRequired:
        description:
          When **true,** the sender may not remove the recipient. Used
          only when working with template recipients.
        type: string
      templateRequiredMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `templateRequired` property
          is editable.
      tooltip:
        description:
          "The text of a tooltip that appears when a user hovers over a
          form field or tab.

          "
        type: string
      toolTipMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          "Metadata that indicates whether the `toolTip` property is editable.

          "
      underline:
        description: When **true,** the information in the tab is underlined.
        type: string
      underlineMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `underline` property is editable.
      width:
        description: |-
          The width of the tab in pixels.
          Must be an integer.
        type: string
      widthMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `width` property is editable.
      xPosition:
        description: |
          This property indicates the horizontal offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. Must be an integer. May be zero.

          To improve the tab's position on the document,
          DocuSign recommends
          adjusting `xPosition`
          and `yPosition`
          coordinates
          by (-7, -6)
        type: string
      xPositionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `xPosition` property is editable.
      yPosition:
        description: |
          This property indicates the vertical offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. Must be an integer. May be zero.

          To improve the tab's position on the document,
          DocuSign recommends
          adjusting `xPosition`
          and `yPosition`
          coordinates
          by (-7, -6)
        type: string
      yPositionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `yPosition` property is editable.
    description:
      "A tab that allows the recipient to select a yes/no (on/off) option.

      "
    x-ds-definition-name: checkbox
    x-ms-summary:
      "A tab that allows the recipient to select a yes/no (on/off) option.

      "
  chunkedUploadPart:
    type: object
    properties:
      sequence:
        description: The order of the part in the chunked upload.
        type: string
      size:
        description:
          "The size of the part in bytes. \n\nDocuSign recommends that
          a chunked upload part is no larger than a few MB in size."
        type: string
    description: An object that contains information about the chunked upload part.
    x-ds-definition-name: chunkedUploadPart
    x-ms-summary: An object that contains information about the chunked upload part.
  chunkedUploadRequest:
    type: object
    properties:
      chunkedUploadId:
        description: |-
          The ID of the chunked upload.

          **Note:** This property is ignored in requests, and overridden with an auto-generated value in responses.
        type: string
      data:
        description:
          "A base64-encoded representation of the content that is used
          to upload the file. \n\nMaximum size: 50 MB. However, data is also subject
          to REST API limits regarding request sizes, and Internet Information Systems
          (IIS) might place further constraints on file size."
        type: string
    description: This is the request object for uploading a chunked upload.
    x-ds-definition-name: chunkedUploadRequest
    x-ms-summary: This is the request object for uploading a chunked upload.
  chunkedUploadResponse:
    type: object
    properties:
      checksum:
        description:
          A 64-byte, Secure Hash Algorithm 256 (SHA256) checksum that the
          caller computes across the entirety of the original content that has been
          uploaded to the chunked upload. DocuSign compares this value to its own
          computation. If the two values are not equal, the original content and received
          content are not the same and the commit action is refused.
        type: string
      chunkedUploadId:
        description: "The ID of the chunked upload. "
        type: string
      chunkedUploadParts:
        description:
          A list of the parts that compose the chunked upload, including
          their byte sizes. The list must be contiguous before you can commit the
          chunked upload.
        type: array
        items:
          "$ref": "#/definitions/chunkedUploadPart"
      chunkedUploadUri:
        description:
          "The URI that you use to reference the chunked upload in other
          API requests, such as envelope document and envelope attachment requests. "
        type: string
      committed:
        description:
          "When **true,** the chunked upload has been committed. A committed
          chunked upload can no longer receive any additional parts and is ready for
          use within other API requests. "
        type: string
      expirationDateTime:
        description:
          "The UTC time at which the chunked upload expires and is no longer
          addressable. \n\n**Note:** You must fully upload and use a chunked upload
          within 20 minutes of initializing it.\n"
        type: string
      maxChunkedUploadParts:
        description:
          "The maximum number of parts allowed for a chunked upload. This
          value is configurable per DocuSign environment, account, or integrator.
          The default value is 128. The maximum possible value is 256.  "
        type: string
      maxTotalSize:
        description:
          The maximum total size allowed for a chunked upload. This value
          is configured per DocuSign environment, account, or integrator. The default
          value is 50 MB.
        type: string
      totalSize:
        description: |-
          The total size of the parts of the chunked upload.

          **Note:** When a chunked upload is used as an envelope document, it is subject to the PDF size limit (25 MB) and page count limit that apply to all envelope documents.
        type: string
    description: This response object is returned after you upload a chunked upload.
    x-ds-definition-name: chunkedUploadResponse
    x-ms-summary: This response object is returned after you upload a chunked upload.
  cloudStorageProvider:
    type: object
    properties:
      authenticationUrl:
        description:
          "The authentication URL used for the cloud storage provider.
          This information is only included in the response if the user has not passed
          authentication for the cloud storage provider. If the redirectUrl query
          string is provided, the returnUrl is appended to the authenticationUrl. "
        type: string
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      redirectUrl:
        description: |-
          The URL the user is redirected to after the cloud storage provider authenticates the user. Using this will append the redirectUrl to the authenticationUrl.

          The redirectUrl is restricted to URLs in the docusign.com or docusign.net domains.
        type: string
      service:
        description: The service name for the cloud storage provider.
        type: string
      serviceId:
        description: The DocuSign-generated ID for the cloud storage provider.
        type: string
    description: Contains details about a specific cloud storage provider.
    x-ds-definition-name: cloudStorageProvider
    x-ms-summary: Contains details about a specific cloud storage provider.
  cloudStorageProviders:
    type: object
    properties:
      storageProviders:
        description:
          An Array containing the storage providers associated with the
          user.
        type: array
        items:
          "$ref": "#/definitions/cloudStorageProvider"
    x-ds-definition-name: cloudStorageProviders
    description: ""
    x-ms-summary: ""
  comment:
    type: object
    properties:
      envelopeId:
        description: The Guid of the envelope the comment thread belongs to.
        type: string
      hmac:
        description: Reserved for DocuSign.
        type: string
      id:
        description: The unique identifier for the comment.
        type: string
      mentions:
        description:
          An array of userIds that are mentioned directly in the body of
          a comment.
        type: array
        items:
          type: string
      read:
        description: When **true,** indicates that the comment was read.
        type: boolean
      sentByEmail:
        description: The email address of the user who created the comment.
        type: string
      sentByFullName:
        description: The full name of the user who created the comment.
        type: string
      sentByImageId:
        description: Reserved for DocuSign.
        type: string
      sentByInitials:
        description: The initials of the user who created the comment.
        type: string
      sentByRecipientId:
        description: The recipient ID of the user who created the comment.
        type: string
      sentByUserId:
        description: The user ID of the user who created the comment.
        type: string
      signingGroupId:
        description:
          The ID of the signing group that can view the comment or that
          created the comment.
        type: string
      signingGroupName:
        description:
          "Optional. The name of the signing group. \n\nMaximum Length:
          100 characters. "
        type: string
      subject:
        description: The subject of the envelope.
        type: string
      tabId:
        description:
          The unique identifier for the tab that represents the comment
          thread.
        type: string
      text:
        description:
          "The content of the comment, as UTF-8 text. \n\nMaximum Length:
          500 characters.\n\n**Note:** The maximum size allowed for the entire message
          body is 32 KB. "
        type: string
      threadId:
        description: The unique identifier for the comment thread.
        type: string
      threadOriginatorId:
        description: The userId of the user who created the thread.
        type: string
      timestamp:
        description: The time the comment was created.
        type: string
      timeStampFormatted:
        description:
          The time the comment was created, formatted according to the
          format of the user who created the comment.
        type: string
      visibleTo:
        description: The user IDs of the users that the comment is visible to.
        type: array
        items:
          type: string
    x-ds-definition-name: comment
    description: ""
    x-ms-summary: ""
  commentHistoryResult:
    type: object
    properties:
      comments:
        description:
          An array of comment tabs that contain information about users'
          comments on documents.
        type: array
        items:
          "$ref": "#/definitions/comment"
      count:
        format: int32
        description: The maximum number of results to return.
        type: integer
      endTimetoken:
        description: ""
        type: string
      startTimetoken:
        description: ""
        type: string
    x-ds-definition-name: commentHistoryResult
    description: ""
    x-ms-summary: ""
  commentPublish:
    type: object
    properties:
      id:
        description: A unique ID for the Salesforce object.
        type: string
      mentions:
        description:
          An array of userIds that are mentioned directly in the body of
          a comment.
        type: array
        items:
          type: string
      text:
        description: "Specifies the text that is shown in the dropdown list. "
        type: string
      threadAnchorKeys:
        description: ""
        type: object
        additionalProperties:
          type: string
      threadId:
        description: The unique identifier for the comment thread.
        type: string
      visibleTo:
        description: ""
        type: array
        items:
          type: string
    x-ds-definition-name: commentPublish
    description: ""
    x-ms-summary: ""
  commentsPublish:
    type: object
    properties:
      commentsToPublish:
        description: ""
        type: array
        items:
          "$ref": "#/definitions/commentPublish"
    x-ds-definition-name: commentsPublish
    description: ""
    x-ms-summary: ""
  commentThread:
    type: object
    properties:
      anchorAllowWhiteSpaceInCharacters:
        description: |
          When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.

          First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.

          Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.

          The default value is **true.**
        type: string
      anchorAllowWhiteSpaceInCharactersMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorAllowWhiteSpaceInCharacters`
          property is editable.
      anchorCaseSensitive:
        description: |-
          This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**

          For example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.

          This functionality uses the following rules:

          - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:

            $~><|^+=

            For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`

          - Strings embedded in other strings are ignored during the matching process.

          - In words that have dashes, the parts separated by dashes are treated as distinct words.

            Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**

          - Letters with accent marks are treated as distinct characters from their unaccented counterparts.

          - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.

            Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.

          - Unlike punctuation, numbers are not ignored when finding anchor words.

            Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).

          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorCaseSensitiveMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorCaseSensitive` property
          is editable.
      anchorHorizontalAlignment:
        description: |
          This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :

          - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.
          - `right`: Aligns the tab’s left side with the last character of the matching anchor word.

          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorHorizontalAlignmentMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorHorizontalAlignment`
          property is editable.
      anchorIgnoreIfNotPresent:
        description:
          When **true,** this tab is ignored if the `anchorString` is not
          found in the document.
        type: string
      anchorIgnoreIfNotPresentMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorIgnoreIfNotPresent`
          property is editable.
      anchorMatchWholeWord:
        description: |
          When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**

          For example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.

          This functionality uses the following rules:

          - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:

            $~><|^+=

            For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`

          - Strings embedded in other strings are ignored during the matching process.

          - In words that have dashes, the parts separated by dashes are treated as distinct words.

            Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**

          - Letters with accent marks are treated as distinct characters from their unaccented counterparts.

          - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.

            Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.

          - Unlike punctuation, numbers are not ignored when finding anchor words.

            Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).


          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorMatchWholeWordMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorMatchWholeWord` property
          is editable.
      anchorString:
        description:
          Specifies the string to find in the document and use as the basis
          for tab placement.
        type: string
      anchorStringMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorString` property is
          editable.
      anchorTabProcessorVersion:
        description: Reserved for DocuSign.
        type: string
      anchorTabProcessorVersionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Reserved for DocuSign.
      anchorUnits:
        description: |
          Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:

          - `pixels` (default)
          - `inches`
          - `mms`
          - `cms`
        type: string
      anchorUnitsMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorUnits` property is
          editable.
      anchorXOffset:
        description:
          "Specifies the X axis location of the tab in `anchorUnits` relative
          to the `anchorString`.

          "
        type: string
      anchorXOffsetMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorXOffset` property
          is editable.
      anchorYOffset:
        description:
          "Specifies the Y axis location of the tab in `anchorUnits` relative
          to the `anchorString`.

          "
        type: string
      anchorYOffsetMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorYOffset` property
          is editable.
      bold:
        description: When **true,** the information in the tab is bold.
        type: string
      boldMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `bold` property is editable.
      caption:
        description: ""
        type: string
      captionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `caption` property is editable.
      comments:
        description:
          An array of comment tabs that contain information about users'
          comments on documents.
        type: array
        items:
          "$ref": "#/definitions/comment"
      conditionalParentLabel:
        description:
          For conditional fields this is the `tabLabel` of the parent tab
          that controls this tab's visibility.
        type: string
      conditionalParentLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `conditionalParentLabel`
          property is editable.
      conditionalParentValue:
        description: |
          For conditional fields, this is the value of the parent tab that controls the tab's visibility.

          If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use "on" as the value to show that the parent tab is active.
        type: string
      conditionalParentValueMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `conditionalParentValue`
          property is editable.
      customTabId:
        description:
          The DocuSign generated custom tab ID for the custom tab to be
          applied. This can only be used when adding new tabs for a recipient. When
          used, the new tab inherits all the custom tab properties.
        type: string
      customTabIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `customTabId` property is
          editable.
      documentId:
        description:
          Specifies the document ID number that the tab is placed on. This
          must refer to an existing Document's ID attribute.
        type: string
      documentIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `documentId` property is
          editable.
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      font:
        description: |
          The font to be used for the tab value. Supported fonts include:

          - Default
          - Arial
          - ArialNarrow
          - Calibri
          - CourierNew
          - Garamond
          - Georgia
          - Helvetica
          - LucidaConsole
          - MSGothic
          - MSMincho
          - OCR-A
          - Tahoma
          - TimesNewRoman
          - Trebuchet
          - Verdana
        type: string
      fontColor:
        description:
          "The font color to use for the information in the tab. Possible
          values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n-
          Gold\n- Green\n- NavyBlue\n- Purple\n- White\n"
        type: string
      fontColorMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `fontColor` property is editable.
      fontMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `font` property is editable.
      fontSize:
        description: |-
          The font size used for the information in the tab. Possible values are:

          - Size7
          - Size8
          - Size9
          - Size10
          - Size11
          - Size12
          - Size14
          - Size16
          - Size18
          - Size20
          - Size22
          - Size24
          - Size26
          - Size28
          - Size36
          - Size48
          - Size72
        type: string
      fontSizeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `fontSize` property is editable.
      formOrder:
        description:
          An integer specifying the order in which the guided form HTML
          should render. The order is relative to the `formPageLabel`, the group by
          which to place the guided form HTML block.
        type: string
      formOrderMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `formOrder` property is editable.
      formPageLabel:
        description:
          A string specifying the group in which to place the guided form
          HTML. Each group displays as a separate guided forms page in the signing
          experience.
        type: string
      formPageLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `formPageLabel` property
          is editable.
      formPageNumber:
        description:
          An integer specifying the order in which to present the guided
          form pages.
        type: string
      formPageNumberMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `fromPageNumber` property
          is editable.
      height:
        description: |-
          The height of the tab in pixels.
          Must be an integer.
        type: string
      heightMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `height` property is editable.
      italic:
        description: When **true,** the information in the tab is italic.
        type: string
      italicMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `italic` property is editable.
      localePolicy:
        "$ref": "#/definitions/localePolicyTab"
        description: Locale-specific settings.
      mergeField:
        "$ref": "#/definitions/mergeField"
        description:
          Contains the information necessary to map the tab to a field
          in SalesForce.
      mergeFieldXml:
        description: Reserved for DocuSign.
        type: string
      pageNumber:
        description: Specifies the page number on which the tab is located.
        type: string
      pageNumberMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `pageNumber` property is
          editable.
      recipientId:
        description:
          "The ID of the recipient to whom the tab will be assigned. This
          value should match the `recipientId` defined in the recipient object.

          "
        type: string
      recipientIdGuid:
        description:
          The globally-unique identifier (GUID) for a specific recipient
          on a specific envelope. If the same recipient is associated with multiple
          envelopes, they will have a different GUID for each one. This property is
          read-only.
        type: string
      recipientIdGuidMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `recipientIdGuid` property
          is editable.
      recipientIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `recipientId` property is
          editable.
      smartContractInformation:
        "$ref": "#/definitions/smartContractInformation"
        description: Reserved for DocuSign.
      source:
        description: Reserved for DocuSign.
        type: string
      status:
        description: |-
          The status of the tab. Possible values are:

          - `active`: The tab is active, but the recipient has not yet interacted with it.
          - `signed`: The recipient signed the tab.
          - `declined`: The recipient declined the envelope.
          - `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).
        type: string
      statusMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `status` property is editable.
      tabGroupLabels:
        description: |-
          An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.

          To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
        type: array
        items:
          type: string
      tabGroupLabelsMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `tabGroupLabels` property
          is editable.
      tabId:
        description: The unique identifier for the tab.
        type: string
      tabIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabId` property is editable.
      tabLabel:
        description: |
          The label associated with the tab. This value may be an empty string.
          If no value is provided, the tab type is used as the value.

          Maximum Length: 500 characters.
        type: string
      tabLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabLabel` property is editable.
      tabOrder:
        description: |-
          A positive integer that sets the order the tab is navigated to during signing.

          Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
        type: string
      tabOrderMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabOrder` property is editable.
      tabType:
        description: Indicates the type of tab (for example, `signHere` or `initialHere`).
        type: string
      tabTypeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabType` property is editable.
      templateLocked:
        description:
          "When **true,** the sender cannot change any attributes of the
          recipient. Used only when working with template recipients. "
        type: string
      templateLockedMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `templateLocked` property
          is editable.
      templateRequired:
        description:
          When **true,** the sender may not remove the recipient. Used
          only when working with template recipients.
        type: string
      templateRequiredMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `templateRequired` property
          is editable.
      threadId:
        description: The unique identifier for the comment thread.
        type: string
      tooltip:
        description:
          "The text of a tooltip that appears when a user hovers over a
          form field or tab.

          "
        type: string
      toolTipMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          "Metadata that indicates whether the `toolTip` property is editable.

          "
      underline:
        description: When **true,** the information in the tab is underlined.
        type: string
      underlineMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `underline` property is editable.
      width:
        description: |-
          The width of the tab in pixels.
          Must be an integer.
        type: string
      widthMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `width` property is editable.
      xPosition:
        description: |
          This property indicates the horizontal offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. Must be an integer. May be zero.
        type: string
      xPositionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `xPosition` property is editable.
      yPosition:
        description: |
          This property indicates the vertical offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. Must be an integer. May be zero.
        type: string
      yPositionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `yPosition` property is editable.
    x-ds-definition-name: commentThread
    description: ""
    x-ms-summary: ""
  commissionCounty:
    type: object
    properties:
      anchorAllowWhiteSpaceInCharacters:
        description: |
          When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.

          First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.

          Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.

          The default value is **true.**
        type: string
      anchorAllowWhiteSpaceInCharactersMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorAllowWhiteSpaceInCharacters`
          property is editable.
      anchorCaseSensitive:
        description: |-
          This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**

          For example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.

          This functionality uses the following rules:

          - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:

            $~><|^+=

            For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`

          - Strings embedded in other strings are ignored during the matching process.

          - In words that have dashes, the parts separated by dashes are treated as distinct words.

            Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**

          - Letters with accent marks are treated as distinct characters from their unaccented counterparts.

          - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.

            Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.

          - Unlike punctuation, numbers are not ignored when finding anchor words.

            Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).

          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorCaseSensitiveMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorCaseSensitive` property
          is editable.
      anchorHorizontalAlignment:
        description: |
          This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :

          - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.
          - `right`: Aligns the tab’s left side with the last character of the matching anchor word.

          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorHorizontalAlignmentMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorHorizontalAlignment`
          property is editable.
      anchorIgnoreIfNotPresent:
        description:
          When **true,** this tab is ignored if the `anchorString` is not
          found in the document.
        type: string
      anchorIgnoreIfNotPresentMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorIgnoreIfNotPresent`
          property is editable.
      anchorMatchWholeWord:
        description: |
          When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**

          For example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.

          This functionality uses the following rules:

          - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:

            $~><|^+=

            For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`

          - Strings embedded in other strings are ignored during the matching process.

          - In words that have dashes, the parts separated by dashes are treated as distinct words.

            Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**

          - Letters with accent marks are treated as distinct characters from their unaccented counterparts.

          - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.

            Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.

          - Unlike punctuation, numbers are not ignored when finding anchor words.

            Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).


          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorMatchWholeWordMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorMatchWholeWord` property
          is editable.
      anchorString:
        description:
          Specifies the string to find in the document and use as the basis
          for tab placement.
        type: string
      anchorStringMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorString` property is
          editable.
      anchorTabProcessorVersion:
        description: Reserved for DocuSign.
        type: string
      anchorTabProcessorVersionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Reserved for DocuSign.
      anchorUnits:
        description: |
          Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:

          - `pixels` (default)
          - `inches`
          - `mms`
          - `cms`
        type: string
      anchorUnitsMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorUnits` property is
          editable.
      anchorXOffset:
        description:
          "Specifies the X axis location of the tab in `anchorUnits` relative
          to the `anchorString`.

          "
        type: string
      anchorXOffsetMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorXOffset` property
          is editable.
      anchorYOffset:
        description:
          "Specifies the Y axis location of the tab in `anchorUnits` relative
          to the `anchorString`.

          "
        type: string
      anchorYOffsetMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorYOffset` property
          is editable.
      bold:
        description: When **true,** the information in the tab is bold.
        type: string
      boldMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `bold` property is editable.
      caption:
        description: ""
        type: string
      captionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `caption` property is editable.
      concealValueOnDocument:
        description: |-
          When **true,** the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.

          When an envelope is completed the information is only available to the sender through the Form Data link in the DocuSign Console. The information on the downloaded document remains masked by asterisks.

          This setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.
        type: string
      concealValueOnDocumentMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `concealValueOnDocument`
          property is editable.
      conditionalParentLabel:
        description:
          For conditional fields this is the `tabLabel` of the parent tab
          that controls this tab's visibility.
        type: string
      conditionalParentLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `conditionalParentLabel`
          property is editable.
      conditionalParentValue:
        description: |
          For conditional fields, this is the value of the parent tab that controls the tab's visibility.

          If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use "on" as the value to show that the parent tab is active.
        type: string
      conditionalParentValueMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `conditionalParentValue`
          property is editable.
      customTabId:
        description:
          The DocuSign generated custom tab ID for the custom tab to be
          applied. This can only be used when adding new tabs for a recipient. When
          used, the new tab inherits all the custom tab properties.
        type: string
      customTabIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `customTabId` property is
          editable.
      disableAutoSize:
        description:
          When **true,** disables the auto sizing of single line text boxes
          in the signing screen when the signer enters data. If disabled users will
          only be able enter as much data as the text box can hold. By default this
          is false. This property only affects single line text boxes.
        type: string
      disableAutoSizeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `disableAutoSize` property
          is editable.
      documentId:
        description:
          Specifies the document ID number that the tab is placed on. This
          must refer to an existing Document's ID attribute.
        type: string
      documentIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `documentId` property is
          editable.
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      font:
        description: |
          The font to be used for the tab value. Supported fonts include:

          - Default
          - Arial
          - ArialNarrow
          - Calibri
          - CourierNew
          - Garamond
          - Georgia
          - Helvetica
          - LucidaConsole
          - MSGothic
          - MSMincho
          - OCR-A
          - Tahoma
          - TimesNewRoman
          - Trebuchet
          - Verdana
        type: string
      fontColor:
        description:
          "The font color to use for the information in the tab. Possible
          values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n-
          Gold\n- Green\n- NavyBlue\n- Purple\n- White\n"
        type: string
      fontColorMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `fontColor` property is editable.
      fontMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `font` property is editable.
      fontSize:
        description: |-
          The font size used for the information in the tab. Possible values are:

          - Size7
          - Size8
          - Size9
          - Size10
          - Size11
          - Size12
          - Size14
          - Size16
          - Size18
          - Size20
          - Size22
          - Size24
          - Size26
          - Size28
          - Size36
          - Size48
          - Size72
        type: string
      fontSizeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `fontSize` property is editable.
      formOrder:
        description:
          An integer specifying the order in which the guided form HTML
          should render. The order is relative to the `formPageLabel`, the group by
          which to place the guided form HTML block.
        type: string
      formOrderMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `formOrder` property is editable.
      formPageLabel:
        description:
          A string specifying the group in which to place the guided form
          HTML. Each group displays as a separate guided forms page in the signing
          experience.
        type: string
      formPageLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `formPageLabel` property
          is editable.
      formPageNumber:
        description:
          An integer specifying the order in which to present the guided
          form pages.
        type: string
      formPageNumberMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `fromPageNumber` property
          is editable.
      height:
        description: |-
          The height of the tab in pixels.
          Must be an integer.
        type: string
      heightMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `height` property is editable.
      italic:
        description: When **true,** the information in the tab is italic.
        type: string
      italicMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `italic` property is editable.
      localePolicy:
        "$ref": "#/definitions/localePolicyTab"
        description: Locale-specific settings.
      locked:
        description:
          When **true,** the signer cannot change the data of the custom
          tab.
        type: string
      lockedMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `locked` property is editable.
      maxLength:
        description:
          An optional value that describes the maximum length of the property
          when the property is a string.
        type: string
      maxLengthMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `maxLength` property is editable.
      mergeField:
        "$ref": "#/definitions/mergeField"
        description:
          Contains the information necessary to map the tab to a field
          in SalesForce.
      mergeFieldXml:
        description: Reserved for DocuSign.
        type: string
      name:
        description: ""
        type: string
      nameMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `name` property is editable.
          This property is read-only.
      originalValue:
        description: "The initial value of the tab. "
        type: string
      originalValueMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `originalValue` property
          is editable.
      pageNumber:
        description: Specifies the page number on which the tab is located.
        type: string
      pageNumberMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `pageNumber` property is
          editable.
      recipientId:
        description:
          "The ID of the recipient to whom the tab will be assigned. This
          value should match the `recipientId` defined in the recipient object.

          "
        type: string
      recipientIdGuid:
        description:
          The globally-unique identifier (GUID) for a specific recipient
          on a specific envelope. If the same recipient is associated with multiple
          envelopes, they will have a different GUID for each one. This property is
          read-only.
        type: string
      recipientIdGuidMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `recipientIdGuid` property
          is editable.
      recipientIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `recipientId` property is
          editable.
      required:
        description: When **true,** the signer is required to fill out this tab.
        type: string
      requiredMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `required` property is editable.
      smartContractInformation:
        "$ref": "#/definitions/smartContractInformation"
        description: Reserved for DocuSign.
      source:
        description: Reserved for DocuSign.
        type: string
      status:
        description:
          "Indicates the envelope status. Valid values are:\n\n* sent -
          The envelope is sent to the recipients. \n* created - The envelope is saved
          as a draft and can be modified and sent later."
        type: string
      statusMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `status` property is editable.
      tabGroupLabels:
        description: |-
          An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.

          To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
        type: array
        items:
          type: string
      tabGroupLabelsMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `tabGroupLabels` property
          is editable.
      tabId:
        description: The unique identifier for the tab.
        type: string
      tabIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabId` property is editable.
      tabLabel:
        description: |
          The label associated with the tab. This value may be an empty string.
          If no value is provided, the tab type is used as the value.

          Maximum Length: 500 characters.
        type: string
      tabLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabLabel` property is editable.
      tabOrder:
        description: |-
          A positive integer that sets the order the tab is navigated to during signing.

          Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
        type: string
      tabOrderMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabOrder` property is editable.
      tabType:
        description: Indicates the type of tab (for example, `signHere` or `initialHere`).
        type: string
      tabTypeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabType` property is editable.
      templateLocked:
        description:
          "When **true,** the sender cannot change any attributes of the
          recipient. Used only when working with template recipients. "
        type: string
      templateLockedMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `templateLocked` property
          is editable.
      templateRequired:
        description:
          When **true,** the sender may not remove the recipient. Used
          only when working with template recipients.
        type: string
      templateRequiredMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `templateRequired` property
          is editable.
      tooltip:
        description:
          "The text of a tooltip that appears when a user hovers over a
          form field or tab.

          "
        type: string
      toolTipMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          "Metadata that indicates whether the `toolTip` property is editable.

          "
      underline:
        description: When **true,** the information in the tab is underlined.
        type: string
      underlineMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `underline` property is editable.
      value:
        description: "Specifies the value of the tab. "
        type: string
      valueMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `value` property is editable.
      width:
        description: |-
          The width of the tab in pixels.
          Must be an integer.
        type: string
      widthMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `width` property is editable.
      xPosition:
        description: |
          This property indicates the horizontal offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. Must be an integer. May be zero.
        type: string
      xPositionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `xPosition` property is editable.
      yPosition:
        description: |
          This property indicates the vertical offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. Must be an integer. May be zero.
        type: string
      yPositionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `yPosition` property is editable.
    description:
      "A Commission County tab displays the county of a notary's commission.
      The tab is populated with the notary's commission information, but the recipient
      can also edit the value when notarizing. This tab can only be assigned to a
      remote notary recipient using [DocuSign Notary](/docs/notary-api/).

      "
    x-ds-definition-name: commissionCounty
    x-ms-summary:
      "A Commission County tab displays the county of a notary's commission.
      The tab is populated with the notary's commission information, but the recipient
      can also edit the value when notarizing. This tab can only be assigned to a
      remote notary recipient using [DocuSign Notary](/docs/notary-api/).

      "
  commissionExpiration:
    type: object
    properties:
      anchorAllowWhiteSpaceInCharacters:
        description: |
          When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.

          First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.

          Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.

          The default value is **true.**
        type: string
      anchorAllowWhiteSpaceInCharactersMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorAllowWhiteSpaceInCharacters`
          property is editable.
      anchorCaseSensitive:
        description: |-
          This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**

          For example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.

          This functionality uses the following rules:

          - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:

            $~><|^+=

            For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`

          - Strings embedded in other strings are ignored during the matching process.

          - In words that have dashes, the parts separated by dashes are treated as distinct words.

            Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**

          - Letters with accent marks are treated as distinct characters from their unaccented counterparts.

          - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.

            Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.

          - Unlike punctuation, numbers are not ignored when finding anchor words.

            Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).

          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorCaseSensitiveMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorCaseSensitive` property
          is editable.
      anchorHorizontalAlignment:
        description: |
          This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :

          - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.
          - `right`: Aligns the tab’s left side with the last character of the matching anchor word.

          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorHorizontalAlignmentMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorHorizontalAlignment`
          property is editable.
      anchorIgnoreIfNotPresent:
        description:
          When **true,** this tab is ignored if the `anchorString` is not
          found in the document.
        type: string
      anchorIgnoreIfNotPresentMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorIgnoreIfNotPresent`
          property is editable.
      anchorMatchWholeWord:
        description: |
          When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**

          For example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.

          This functionality uses the following rules:

          - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:

            $~><|^+=

            For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`

          - Strings embedded in other strings are ignored during the matching process.

          - In words that have dashes, the parts separated by dashes are treated as distinct words.

            Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**

          - Letters with accent marks are treated as distinct characters from their unaccented counterparts.

          - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.

            Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.

          - Unlike punctuation, numbers are not ignored when finding anchor words.

            Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).


          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorMatchWholeWordMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorMatchWholeWord` property
          is editable.
      anchorString:
        description:
          Specifies the string to find in the document and use as the basis
          for tab placement.
        type: string
      anchorStringMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorString` property is
          editable.
      anchorTabProcessorVersion:
        description: Reserved for DocuSign.
        type: string
      anchorTabProcessorVersionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Reserved for DocuSign.
      anchorUnits:
        description: |
          Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:

          - `pixels` (default)
          - `inches`
          - `mms`
          - `cms`
        type: string
      anchorUnitsMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorUnits` property is
          editable.
      anchorXOffset:
        description:
          "Specifies the X axis location of the tab in `anchorUnits` relative
          to the `anchorString`.

          "
        type: string
      anchorXOffsetMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorXOffset` property
          is editable.
      anchorYOffset:
        description:
          "Specifies the Y axis location of the tab in `anchorUnits` relative
          to the `anchorString`.

          "
        type: string
      anchorYOffsetMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorYOffset` property
          is editable.
      bold:
        description: When **true,** the information in the tab is bold.
        type: string
      boldMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `bold` property is editable.
      caption:
        description: ""
        type: string
      captionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `caption` property is editable.
      concealValueOnDocument:
        description: |-
          When **true,** the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.

          When an envelope is completed the information is only available to the sender through the Form Data link in the DocuSign Console. The information on the downloaded document remains masked by asterisks.

          This setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.
        type: string
      concealValueOnDocumentMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `concealValueOnDocument`
          property is editable.
      conditionalParentLabel:
        description:
          For conditional fields this is the `tabLabel` of the parent tab
          that controls this tab's visibility.
        type: string
      conditionalParentLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `conditionalParentLabel`
          property is editable.
      conditionalParentValue:
        description: |
          For conditional fields, this is the value of the parent tab that controls the tab's visibility.

          If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use "on" as the value to show that the parent tab is active.
        type: string
      conditionalParentValueMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `conditionalParentValue`
          property is editable.
      customTabId:
        description:
          The DocuSign generated custom tab ID for the custom tab to be
          applied. This can only be used when adding new tabs for a recipient. When
          used, the new tab inherits all the custom tab properties.
        type: string
      customTabIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `customTabId` property is
          editable.
      disableAutoSize:
        description:
          When **true,** disables the auto sizing of single line text boxes
          in the signing screen when the signer enters data. If disabled users will
          only be able enter as much data as the text box can hold. By default this
          is false. This property only affects single line text boxes.
        type: string
      disableAutoSizeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `disableAutoSize` property
          is editable.
      documentId:
        description:
          Specifies the document ID number that the tab is placed on. This
          must refer to an existing Document's ID attribute.
        type: string
      documentIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `documentId` property is
          editable.
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      font:
        description: |
          The font to be used for the tab value. Supported fonts include:

          - Default
          - Arial
          - ArialNarrow
          - Calibri
          - CourierNew
          - Garamond
          - Georgia
          - Helvetica
          - LucidaConsole
          - MSGothic
          - MSMincho
          - OCR-A
          - Tahoma
          - TimesNewRoman
          - Trebuchet
          - Verdana
        type: string
      fontColor:
        description:
          "The font color to use for the information in the tab. Possible
          values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n-
          Gold\n- Green\n- NavyBlue\n- Purple\n- White\n"
        type: string
      fontColorMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `fontColor` property is editable.
      fontMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `font` property is editable.
      fontSize:
        description: |-
          The font size used for the information in the tab. Possible values are:

          - Size7
          - Size8
          - Size9
          - Size10
          - Size11
          - Size12
          - Size14
          - Size16
          - Size18
          - Size20
          - Size22
          - Size24
          - Size26
          - Size28
          - Size36
          - Size48
          - Size72
        type: string
      fontSizeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `fontSize` property is editable.
      formOrder:
        description:
          An integer specifying the order in which the guided form HTML
          should render. The order is relative to the `formPageLabel`, the group by
          which to place the guided form HTML block.
        type: string
      formOrderMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `formOrder` property is editable.
      formPageLabel:
        description:
          A string specifying the group in which to place the guided form
          HTML. Each group displays as a separate guided forms page in the signing
          experience.
        type: string
      formPageLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `formPageLabel` property
          is editable.
      formPageNumber:
        description:
          An integer specifying the order in which to present the guided
          form pages.
        type: string
      formPageNumberMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `fromPageNumber` property
          is editable.
      height:
        description: |-
          The height of the tab in pixels.
          Must be an integer.
        type: string
      heightMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `height` property is editable.
      italic:
        description: When **true,** the information in the tab is italic.
        type: string
      italicMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `italic` property is editable.
      localePolicy:
        "$ref": "#/definitions/localePolicyTab"
        description: Locale-specific settings.
      locked:
        description:
          When **true,** the signer cannot change the data of the custom
          tab.
        type: string
      lockedMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `locked` property is editable.
      maxLength:
        description:
          An optional value that describes the maximum length of the property
          when the property is a string.
        type: string
      maxLengthMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `maxLength` property is editable.
      mergeField:
        "$ref": "#/definitions/mergeField"
        description:
          Contains the information necessary to map the tab to a field
          in SalesForce.
      mergeFieldXml:
        description: Reserved for DocuSign.
        type: string
      name:
        description: ""
        type: string
      nameMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `name` property is editable.
          This property is read-only.
      originalValue:
        description: "The initial value of the tab. "
        type: string
      originalValueMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `originalValue` property
          is editable.
      pageNumber:
        description: Specifies the page number on which the tab is located.
        type: string
      pageNumberMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `pageNumber` property is
          editable.
      recipientId:
        description:
          "The ID of the recipient to whom the tab will be assigned. This
          value should match the `recipientId` defined in the recipient object.

          "
        type: string
      recipientIdGuid:
        description:
          The globally-unique identifier (GUID) for a specific recipient
          on a specific envelope. If the same recipient is associated with multiple
          envelopes, they will have a different GUID for each one. This property is
          read-only.
        type: string
      recipientIdGuidMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `recipientIdGuid` property
          is editable.
      recipientIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `recipientId` property is
          editable.
      required:
        description: When **true,** the signer is required to fill out this tab.
        type: string
      requiredMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `required` property is editable.
      smartContractInformation:
        "$ref": "#/definitions/smartContractInformation"
        description: Reserved for DocuSign.
      source:
        description: Reserved for DocuSign.
        type: string
      status:
        description:
          "Indicates the envelope status. Valid values are:\n\n* sent -
          The envelope is sent to the recipients. \n* created - The envelope is saved
          as a draft and can be modified and sent later."
        type: string
      statusMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `status` property is editable.
      tabGroupLabels:
        description: |-
          An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.

          To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
        type: array
        items:
          type: string
      tabGroupLabelsMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `tabGroupLabels` property
          is editable.
      tabId:
        description: The unique identifier for the tab.
        type: string
      tabIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabId` property is editable.
      tabLabel:
        description: |
          The label associated with the tab. This value may be an empty string.
          If no value is provided, the tab type is used as the value.

          Maximum Length: 500 characters.
        type: string
      tabLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabLabel` property is editable.
      tabOrder:
        description: |-
          A positive integer that sets the order the tab is navigated to during signing.

          Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
        type: string
      tabOrderMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabOrder` property is editable.
      tabType:
        description: Indicates the type of tab (for example, `signHere` or `initialHere`).
        type: string
      tabTypeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabType` property is editable.
      templateLocked:
        description:
          "When **true,** the sender cannot change any attributes of the
          recipient. Used only when working with template recipients. "
        type: string
      templateLockedMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `templateLocked` property
          is editable.
      templateRequired:
        description:
          When **true,** the sender may not remove the recipient. Used
          only when working with template recipients.
        type: string
      templateRequiredMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `templateRequired` property
          is editable.
      tooltip:
        description:
          "The text of a tooltip that appears when a user hovers over a
          form field or tab.

          "
        type: string
      toolTipMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          "Metadata that indicates whether the `toolTip` property is editable.

          "
      underline:
        description: When **true,** the information in the tab is underlined.
        type: string
      underlineMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `underline` property is editable.
      value:
        description: "Specifies the value of the tab. "
        type: string
      valueMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `value` property is editable.
      width:
        description: |-
          The width of the tab in pixels.
          Must be an integer.
        type: string
      widthMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `width` property is editable.
      xPosition:
        description: |
          This property indicates the horizontal offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. Must be an integer. May be zero.
        type: string
      xPositionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `xPosition` property is editable.
      yPosition:
        description: |
          This property indicates the vertical offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. Must be an integer. May be zero.
        type: string
      yPositionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `yPosition` property is editable.
    description:
      "A Commission Expiration tab displays the expiration date of a notary's
      commission. The tab is populated with the notary's commission information,
      but the recipient can also edit the value when notarizing. This tab can only
      be assigned to a remote notary recipient using [DocuSign Notary](/docs/notary-api/).

      "
    x-ds-definition-name: commissionExpiration
    x-ms-summary:
      "A Commission Expiration tab displays the expiration date of a notary's
      commission. The tab is populated with the notary's commission information,
      but the recipient can also edit the value when notarizing. This tab can only
      be assigned to a remote notary recipient using [DocuSign Notary](/docs/notary-api/).

      "
  commissionNumber:
    type: object
    properties:
      anchorAllowWhiteSpaceInCharacters:
        description: |
          When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.

          First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.

          Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.

          The default value is **true.**
        type: string
      anchorAllowWhiteSpaceInCharactersMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorAllowWhiteSpaceInCharacters`
          property is editable.
      anchorCaseSensitive:
        description: |-
          This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**

          For example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.

          This functionality uses the following rules:

          - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:

            $~><|^+=

            For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`

          - Strings embedded in other strings are ignored during the matching process.

          - In words that have dashes, the parts separated by dashes are treated as distinct words.

            Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**

          - Letters with accent marks are treated as distinct characters from their unaccented counterparts.

          - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.

            Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.

          - Unlike punctuation, numbers are not ignored when finding anchor words.

            Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).

          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorCaseSensitiveMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorCaseSensitive` property
          is editable.
      anchorHorizontalAlignment:
        description: |
          This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :

          - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.
          - `right`: Aligns the tab’s left side with the last character of the matching anchor word.

          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorHorizontalAlignmentMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorHorizontalAlignment`
          property is editable.
      anchorIgnoreIfNotPresent:
        description:
          When **true,** this tab is ignored if the `anchorString` is not
          found in the document.
        type: string
      anchorIgnoreIfNotPresentMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorIgnoreIfNotPresent`
          property is editable.
      anchorMatchWholeWord:
        description: |
          When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**

          For example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.

          This functionality uses the following rules:

          - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:

            $~><|^+=

            For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`

          - Strings embedded in other strings are ignored during the matching process.

          - In words that have dashes, the parts separated by dashes are treated as distinct words.

            Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**

          - Letters with accent marks are treated as distinct characters from their unaccented counterparts.

          - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.

            Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.

          - Unlike punctuation, numbers are not ignored when finding anchor words.

            Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).


          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorMatchWholeWordMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorMatchWholeWord` property
          is editable.
      anchorString:
        description:
          Specifies the string to find in the document and use as the basis
          for tab placement.
        type: string
      anchorStringMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorString` property is
          editable.
      anchorTabProcessorVersion:
        description: Reserved for DocuSign.
        type: string
      anchorTabProcessorVersionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Reserved for DocuSign.
      anchorUnits:
        description: |
          Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:

          - `pixels` (default)
          - `inches`
          - `mms`
          - `cms`
        type: string
      anchorUnitsMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorUnits` property is
          editable.
      anchorXOffset:
        description:
          "Specifies the X axis location of the tab in `anchorUnits` relative
          to the `anchorString`.

          "
        type: string
      anchorXOffsetMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorXOffset` property
          is editable.
      anchorYOffset:
        description:
          "Specifies the Y axis location of the tab in `anchorUnits` relative
          to the `anchorString`.

          "
        type: string
      anchorYOffsetMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorYOffset` property
          is editable.
      bold:
        description: When **true,** the information in the tab is bold.
        type: string
      boldMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `bold` property is editable.
      caption:
        description: ""
        type: string
      captionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `caption` property is editable.
      concealValueOnDocument:
        description: |-
          When **true,** the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.

          When an envelope is completed the information is only available to the sender through the Form Data link in the DocuSign Console. The information on the downloaded document remains masked by asterisks.

          This setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.
        type: string
      concealValueOnDocumentMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `concealValueOnDocument`
          property is editable.
      conditionalParentLabel:
        description:
          For conditional fields this is the `tabLabel` of the parent tab
          that controls this tab's visibility.
        type: string
      conditionalParentLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `conditionalParentLabel`
          property is editable.
      conditionalParentValue:
        description: |
          For conditional fields, this is the value of the parent tab that controls the tab's visibility.

          If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use "on" as the value to show that the parent tab is active.
        type: string
      conditionalParentValueMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `conditionalParentValue`
          property is editable.
      customTabId:
        description:
          The DocuSign generated custom tab ID for the custom tab to be
          applied. This can only be used when adding new tabs for a recipient. When
          used, the new tab inherits all the custom tab properties.
        type: string
      customTabIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `customTabId` property is
          editable.
      disableAutoSize:
        description:
          When **true,** disables the auto sizing of single line text boxes
          in the signing screen when the signer enters data. If disabled users will
          only be able enter as much data as the text box can hold. By default this
          is false. This property only affects single line text boxes.
        type: string
      disableAutoSizeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `disableAutoSize` property
          is editable.
      documentId:
        description:
          Specifies the document ID number that the tab is placed on. This
          must refer to an existing Document's ID attribute.
        type: string
      documentIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `documentId` property is
          editable.
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      font:
        description: |
          The font to be used for the tab value. Supported fonts include:

          - Default
          - Arial
          - ArialNarrow
          - Calibri
          - CourierNew
          - Garamond
          - Georgia
          - Helvetica
          - LucidaConsole
          - MSGothic
          - MSMincho
          - OCR-A
          - Tahoma
          - TimesNewRoman
          - Trebuchet
          - Verdana
        type: string
      fontColor:
        description:
          "The font color to use for the information in the tab. Possible
          values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n-
          Gold\n- Green\n- NavyBlue\n- Purple\n- White\n"
        type: string
      fontColorMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `fontColor` property is editable.
      fontMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `font` property is editable.
      fontSize:
        description: |-
          The font size used for the information in the tab. Possible values are:

          - Size7
          - Size8
          - Size9
          - Size10
          - Size11
          - Size12
          - Size14
          - Size16
          - Size18
          - Size20
          - Size22
          - Size24
          - Size26
          - Size28
          - Size36
          - Size48
          - Size72
        type: string
      fontSizeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `fontSize` property is editable.
      formOrder:
        description:
          An integer specifying the order in which the guided form HTML
          should render. The order is relative to the `formPageLabel`, the group by
          which to place the guided form HTML block.
        type: string
      formOrderMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `formOrder` property is editable.
      formPageLabel:
        description:
          A string specifying the group in which to place the guided form
          HTML. Each group displays as a separate guided forms page in the signing
          experience.
        type: string
      formPageLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `formPageLabel` property
          is editable.
      formPageNumber:
        description:
          An integer specifying the order in which to present the guided
          form pages.
        type: string
      formPageNumberMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `fromPageNumber` property
          is editable.
      height:
        description: |-
          The height of the tab in pixels.
          Must be an integer.
        type: string
      heightMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `height` property is editable.
      italic:
        description: When **true,** the information in the tab is italic.
        type: string
      italicMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `italic` property is editable.
      localePolicy:
        "$ref": "#/definitions/localePolicyTab"
        description: Locale-specific settings.
      locked:
        description:
          When **true,** the signer cannot change the data of the custom
          tab.
        type: string
      lockedMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `locked` property is editable.
      maxLength:
        description:
          An optional value that describes the maximum length of the property
          when the property is a string.
        type: string
      maxLengthMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `maxLength` property is editable.
      mergeField:
        "$ref": "#/definitions/mergeField"
        description:
          Contains the information necessary to map the tab to a field
          in SalesForce.
      mergeFieldXml:
        description: Reserved for DocuSign.
        type: string
      name:
        description: ""
        type: string
      nameMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `name` property is editable.
          This property is read-only.
      originalValue:
        description: "The initial value of the tab. "
        type: string
      originalValueMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `originalValue` property
          is editable.
      pageNumber:
        description: Specifies the page number on which the tab is located.
        type: string
      pageNumberMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `pageNumber` property is
          editable.
      recipientId:
        description:
          "The ID of the recipient to whom the tab will be assigned. This
          value should match the `recipientId` defined in the recipient object.

          "
        type: string
      recipientIdGuid:
        description:
          The globally-unique identifier (GUID) for a specific recipient
          on a specific envelope. If the same recipient is associated with multiple
          envelopes, they will have a different GUID for each one. This property is
          read-only.
        type: string
      recipientIdGuidMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `recipientIdGuid` property
          is editable.
      recipientIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `recipientId` property is
          editable.
      required:
        description: When **true,** the signer is required to fill out this tab.
        type: string
      requiredMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `required` property is editable.
      smartContractInformation:
        "$ref": "#/definitions/smartContractInformation"
        description: Reserved for DocuSign.
      source:
        description: Reserved for DocuSign.
        type: string
      status:
        description:
          "Indicates the envelope status. Valid values are:\n\n* sent -
          The envelope is sent to the recipients. \n* created - The envelope is saved
          as a draft and can be modified and sent later."
        type: string
      statusMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `status` property is editable.
      tabGroupLabels:
        description: |-
          An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.

          To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
        type: array
        items:
          type: string
      tabGroupLabelsMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `tabGroupLabels` property
          is editable.
      tabId:
        description: The unique identifier for the tab.
        type: string
      tabIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabId` property is editable.
      tabLabel:
        description: |
          The label associated with the tab. This value may be an empty string.
          If no value is provided, the tab type is used as the value.

          Maximum Length: 500 characters.
        type: string
      tabLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabLabel` property is editable.
      tabOrder:
        description: |-
          A positive integer that sets the order the tab is navigated to during signing.

          Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
        type: string
      tabOrderMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabOrder` property is editable.
      tabType:
        description: Indicates the type of tab (for example, `signHere` or `initialHere`).
        type: string
      tabTypeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabType` property is editable.
      templateLocked:
        description:
          "When **true,** the sender cannot change any attributes of the
          recipient. Used only when working with template recipients. "
        type: string
      templateLockedMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `templateLocked` property
          is editable.
      templateRequired:
        description:
          When **true,** the sender may not remove the recipient. Used
          only when working with template recipients.
        type: string
      templateRequiredMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `templateRequired` property
          is editable.
      tooltip:
        description:
          "The text of a tooltip that appears when a user hovers over a
          form field or tab.

          "
        type: string
      toolTipMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          "Metadata that indicates whether the `toolTip` property is editable.

          "
      underline:
        description: When **true,** the information in the tab is underlined.
        type: string
      underlineMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `underline` property is editable.
      value:
        description: "Specifies the value of the tab. "
        type: string
      valueMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `value` property is editable.
      width:
        description: |-
          The width of the tab in pixels.
          Must be an integer.
        type: string
      widthMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `width` property is editable.
      xPosition:
        description: |
          This property indicates the horizontal offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. Must be an integer. May be zero.
        type: string
      xPositionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `xPosition` property is editable.
      yPosition:
        description: |
          This property indicates the vertical offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. Must be an integer. May be zero.
        type: string
      yPositionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `yPosition` property is editable.
    description: |
      A Commission Number tab displays a notary's commission number. The tab is populated with the notary's commission information, but the recipient can also edit the value when notarizing. This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary].

      [notary]: /docs/notary-api/
    x-ds-definition-name: commissionNumber
    x-ms-summary: |
      A Commission Number tab displays a notary's commission number. The tab is populated with the notary's commission information, but the recipient can also edit the value when notarizing. This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary].

      [notary]: /docs/notary-api/
  commissionState:
    type: object
    properties:
      anchorAllowWhiteSpaceInCharacters:
        description: |
          When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.

          First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.

          Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.

          The default value is **true.**
        type: string
      anchorAllowWhiteSpaceInCharactersMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorAllowWhiteSpaceInCharacters`
          property is editable.
      anchorCaseSensitive:
        description: |-
          This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**

          For example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.

          This functionality uses the following rules:

          - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:

            $~><|^+=

            For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`

          - Strings embedded in other strings are ignored during the matching process.

          - In words that have dashes, the parts separated by dashes are treated as distinct words.

            Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**

          - Letters with accent marks are treated as distinct characters from their unaccented counterparts.

          - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.

            Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.

          - Unlike punctuation, numbers are not ignored when finding anchor words.

            Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).

          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorCaseSensitiveMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorCaseSensitive` property
          is editable.
      anchorHorizontalAlignment:
        description: |
          This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :

          - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.
          - `right`: Aligns the tab’s left side with the last character of the matching anchor word.

          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorHorizontalAlignmentMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorHorizontalAlignment`
          property is editable.
      anchorIgnoreIfNotPresent:
        description:
          When **true,** this tab is ignored if the `anchorString` is not
          found in the document.
        type: string
      anchorIgnoreIfNotPresentMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorIgnoreIfNotPresent`
          property is editable.
      anchorMatchWholeWord:
        description: |
          When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**

          For example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.

          This functionality uses the following rules:

          - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:

            $~><|^+=

            For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`

          - Strings embedded in other strings are ignored during the matching process.

          - In words that have dashes, the parts separated by dashes are treated as distinct words.

            Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**

          - Letters with accent marks are treated as distinct characters from their unaccented counterparts.

          - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.

            Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.

          - Unlike punctuation, numbers are not ignored when finding anchor words.

            Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).


          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorMatchWholeWordMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorMatchWholeWord` property
          is editable.
      anchorString:
        description:
          Specifies the string to find in the document and use as the basis
          for tab placement.
        type: string
      anchorStringMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorString` property is
          editable.
      anchorTabProcessorVersion:
        description: Reserved for DocuSign.
        type: string
      anchorTabProcessorVersionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Reserved for DocuSign.
      anchorUnits:
        description: |
          Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:

          - `pixels` (default)
          - `inches`
          - `mms`
          - `cms`
        type: string
      anchorUnitsMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorUnits` property is
          editable.
      anchorXOffset:
        description:
          "Specifies the X axis location of the tab in `anchorUnits` relative
          to the `anchorString`.

          "
        type: string
      anchorXOffsetMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorXOffset` property
          is editable.
      anchorYOffset:
        description:
          "Specifies the Y axis location of the tab in `anchorUnits` relative
          to the `anchorString`.

          "
        type: string
      anchorYOffsetMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorYOffset` property
          is editable.
      bold:
        description: When **true,** the information in the tab is bold.
        type: string
      boldMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `bold` property is editable.
      caption:
        description: ""
        type: string
      captionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `caption` property is editable.
      concealValueOnDocument:
        description: |-
          When **true,** the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.

          When an envelope is completed the information is only available to the sender through the Form Data link in the DocuSign Console. The information on the downloaded document remains masked by asterisks.

          This setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.
        type: string
      concealValueOnDocumentMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `concealValueOnDocument`
          property is editable.
      conditionalParentLabel:
        description:
          For conditional fields this is the `tabLabel` of the parent tab
          that controls this tab's visibility.
        type: string
      conditionalParentLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `conditionalParentLabel`
          property is editable.
      conditionalParentValue:
        description: |
          For conditional fields, this is the value of the parent tab that controls the tab's visibility.

          If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use "on" as the value to show that the parent tab is active.
        type: string
      conditionalParentValueMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `conditionalParentValue`
          property is editable.
      customTabId:
        description:
          The DocuSign generated custom tab ID for the custom tab to be
          applied. This can only be used when adding new tabs for a recipient. When
          used, the new tab inherits all the custom tab properties.
        type: string
      customTabIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `customTabId` property is
          editable.
      disableAutoSize:
        description:
          When **true,** disables the auto sizing of single line text boxes
          in the signing screen when the signer enters data. If disabled users will
          only be able enter as much data as the text box can hold. By default this
          is false. This property only affects single line text boxes.
        type: string
      disableAutoSizeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `disableAutoSize` property
          is editable.
      documentId:
        description:
          Specifies the document ID number that the tab is placed on. This
          must refer to an existing Document's ID attribute.
        type: string
      documentIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `documentId` property is
          editable.
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      font:
        description: |
          The font to be used for the tab value. Supported fonts include:

          - Default
          - Arial
          - ArialNarrow
          - Calibri
          - CourierNew
          - Garamond
          - Georgia
          - Helvetica
          - LucidaConsole
          - MSGothic
          - MSMincho
          - OCR-A
          - Tahoma
          - TimesNewRoman
          - Trebuchet
          - Verdana
        type: string
      fontColor:
        description:
          "The font color to use for the information in the tab. Possible
          values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n-
          Gold\n- Green\n- NavyBlue\n- Purple\n- White\n"
        type: string
      fontColorMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `fontColor` property is editable.
      fontMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `font` property is editable.
      fontSize:
        description: |-
          The font size used for the information in the tab. Possible values are:

          - Size7
          - Size8
          - Size9
          - Size10
          - Size11
          - Size12
          - Size14
          - Size16
          - Size18
          - Size20
          - Size22
          - Size24
          - Size26
          - Size28
          - Size36
          - Size48
          - Size72
        type: string
      fontSizeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `fontSize` property is editable.
      formOrder:
        description:
          An integer specifying the order in which the guided form HTML
          should render. The order is relative to the `formPageLabel`, the group by
          which to place the guided form HTML block.
        type: string
      formOrderMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `formOrder` property is editable.
      formPageLabel:
        description:
          A string specifying the group in which to place the guided form
          HTML. Each group displays as a separate guided forms page in the signing
          experience.
        type: string
      formPageLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `formPageLabel` property
          is editable.
      formPageNumber:
        description:
          An integer specifying the order in which to present the guided
          form pages.
        type: string
      formPageNumberMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `fromPageNumber` property
          is editable.
      height:
        description: |-
          The height of the tab in pixels.
          Must be an integer.
        type: string
      heightMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `height` property is editable.
      italic:
        description: When **true,** the information in the tab is italic.
        type: string
      italicMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `italic` property is editable.
      localePolicy:
        "$ref": "#/definitions/localePolicyTab"
        description: Locale-specific settings.
      locked:
        description:
          When **true,** the signer cannot change the data of the custom
          tab.
        type: string
      lockedMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `locked` property is editable.
      maxLength:
        description:
          An optional value that describes the maximum length of the property
          when the property is a string.
        type: string
      maxLengthMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `maxLength` property is editable.
      mergeField:
        "$ref": "#/definitions/mergeField"
        description:
          Contains the information necessary to map the tab to a field
          in SalesForce.
      mergeFieldXml:
        description: Reserved for DocuSign.
        type: string
      name:
        description: ""
        type: string
      nameMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `name` property is editable.
          This property is read-only.
      originalValue:
        description: "The initial value of the tab. "
        type: string
      originalValueMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `originalValue` property
          is editable.
      pageNumber:
        description: Specifies the page number on which the tab is located.
        type: string
      pageNumberMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `pageNumber` property is
          editable.
      recipientId:
        description:
          "The ID of the recipient to whom the tab will be assigned. This
          value should match the `recipientId` defined in the recipient object.

          "
        type: string
      recipientIdGuid:
        description:
          The globally-unique identifier (GUID) for a specific recipient
          on a specific envelope. If the same recipient is associated with multiple
          envelopes, they will have a different GUID for each one. This property is
          read-only.
        type: string
      recipientIdGuidMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `recipientIdGuid` property
          is editable.
      recipientIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `recipientId` property is
          editable.
      required:
        description: When **true,** the signer is required to fill out this tab.
        type: string
      requiredMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `required` property is editable.
      smartContractInformation:
        "$ref": "#/definitions/smartContractInformation"
        description: Reserved for DocuSign.
      source:
        description: Reserved for DocuSign.
        type: string
      status:
        description:
          "Indicates the envelope status. Valid values are:\n\n* sent -
          The envelope is sent to the recipients. \n* created - The envelope is saved
          as a draft and can be modified and sent later."
        type: string
      statusMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `status` property is editable.
      tabGroupLabels:
        description: |-
          An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.

          To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
        type: array
        items:
          type: string
      tabGroupLabelsMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `tabGroupLabels` property
          is editable.
      tabId:
        description: The unique identifier for the tab.
        type: string
      tabIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabId` property is editable.
      tabLabel:
        description: |
          The label associated with the tab. This value may be an empty string.
          If no value is provided, the tab type is used as the value.

          Maximum Length: 500 characters.
        type: string
      tabLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabLabel` property is editable.
      tabOrder:
        description: |-
          A positive integer that sets the order the tab is navigated to during signing.

          Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
        type: string
      tabOrderMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabOrder` property is editable.
      tabType:
        description: Indicates the type of tab (for example, `signHere` or `initialHere`).
        type: string
      tabTypeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabType` property is editable.
      templateLocked:
        description:
          "When **true,** the sender cannot change any attributes of the
          recipient. Used only when working with template recipients. "
        type: string
      templateLockedMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `templateLocked` property
          is editable.
      templateRequired:
        description:
          When **true,** the sender may not remove the recipient. Used
          only when working with template recipients.
        type: string
      templateRequiredMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `templateRequired` property
          is editable.
      tooltip:
        description:
          "The text of a tooltip that appears when a user hovers over a
          form field or tab.

          "
        type: string
      toolTipMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          "Metadata that indicates whether the `toolTip` property is editable.

          "
      underline:
        description: When **true,** the information in the tab is underlined.
        type: string
      underlineMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `underline` property is editable.
      value:
        description: "Specifies the value of the tab. "
        type: string
      valueMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `value` property is editable.
      width:
        description: |-
          The width of the tab in pixels.
          Must be an integer.
        type: string
      widthMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `width` property is editable.
      xPosition:
        description: |
          This property indicates the horizontal offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. Must be an integer. May be zero.
        type: string
      xPositionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `xPosition` property is editable.
      yPosition:
        description: |
          This property indicates the vertical offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. Must be an integer. May be zero.
        type: string
      yPositionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `yPosition` property is editable.
    description: |
      A Commission State tab displays the state in which a notary's commission was granted. The tab is populated with the notary's commission information, but the recipient can also edit the value when notarizing. This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary].

      [notary]: /docs/notary-api/
    x-ds-definition-name: commissionState
    x-ms-summary: |
      A Commission State tab displays the state in which a notary's commission was granted. The tab is populated with the notary's commission information, but the recipient can also edit the value when notarizing. This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary].

      [notary]: /docs/notary-api/
  company:
    type: object
    properties:
      anchorAllowWhiteSpaceInCharacters:
        description: |
          When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.

          First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.

          Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.

          The default value is **true.**
        type: string
      anchorAllowWhiteSpaceInCharactersMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorAllowWhiteSpaceInCharacters`
          property is editable.
      anchorCaseSensitive:
        description: |-
          This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**

          For example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.

          This functionality uses the following rules:

          - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:

            $~><|^+=

            For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`

          - Strings embedded in other strings are ignored during the matching process.

          - In words that have dashes, the parts separated by dashes are treated as distinct words.

            Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**

          - Letters with accent marks are treated as distinct characters from their unaccented counterparts.

          - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.

            Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.

          - Unlike punctuation, numbers are not ignored when finding anchor words.

            Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).

          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorCaseSensitiveMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorCaseSensitive` property
          is editable.
      anchorHorizontalAlignment:
        description: |
          This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :

          - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.
          - `right`: Aligns the tab’s left side with the last character of the matching anchor word.

          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorHorizontalAlignmentMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorHorizontalAlignment`
          property is editable.
      anchorIgnoreIfNotPresent:
        description:
          When **true,** this tab is ignored if the `anchorString` is not
          found in the document.
        type: string
      anchorIgnoreIfNotPresentMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorIgnoreIfNotPresent`
          property is editable.
      anchorMatchWholeWord:
        description: |
          When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**

          For example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.

          This functionality uses the following rules:

          - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:

            $~><|^+=

            For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`

          - Strings embedded in other strings are ignored during the matching process.

          - In words that have dashes, the parts separated by dashes are treated as distinct words.

            Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**

          - Letters with accent marks are treated as distinct characters from their unaccented counterparts.

          - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.

            Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.

          - Unlike punctuation, numbers are not ignored when finding anchor words.

            Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).


          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorMatchWholeWordMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorMatchWholeWord` property
          is editable.
      anchorString:
        description:
          Specifies the string to find in the document and use as the basis
          for tab placement.
        type: string
      anchorStringMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorString` property is
          editable.
      anchorTabProcessorVersion:
        description: Reserved for DocuSign.
        type: string
      anchorTabProcessorVersionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Reserved for DocuSign.
      anchorUnits:
        description: |
          Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:

          - `pixels` (default)
          - `inches`
          - `mms`
          - `cms`
        type: string
      anchorUnitsMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorUnits` property is
          editable.
      anchorXOffset:
        description:
          "Specifies the X axis location of the tab in `anchorUnits` relative
          to the `anchorString`.

          "
        type: string
      anchorXOffsetMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorXOffset` property
          is editable.
      anchorYOffset:
        description:
          "Specifies the Y axis location of the tab in `anchorUnits` relative
          to the `anchorString`.

          "
        type: string
      anchorYOffsetMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorYOffset` property
          is editable.
      bold:
        description: When **true,** the information in the tab is bold.
        type: string
      boldMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `bold` property is editable.
      caption:
        description: ""
        type: string
      captionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `caption` property is editable.
      concealValueOnDocument:
        description: |-
          When **true,** the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.

          When an envelope is completed the information is only available to the sender through the Form Data link in the DocuSign Console. The information on the downloaded document remains masked by asterisks.

          This setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.
        type: string
      concealValueOnDocumentMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `concealValueOnDocument`
          property is editable.
      conditionalParentLabel:
        description:
          For conditional fields this is the `tabLabel` of the parent tab
          that controls this tab's visibility.
        type: string
      conditionalParentLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `conditionalParentLabel`
          property is editable.
      conditionalParentValue:
        description: |
          For conditional fields, this is the value of the parent tab that controls the tab's visibility.

          If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use "on" as the value to show that the parent tab is active.
        type: string
      conditionalParentValueMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `conditionalParentValue`
          property is editable.
      customTabId:
        description:
          The DocuSign generated custom tab ID for the custom tab to be
          applied. This can only be used when adding new tabs for a recipient. When
          used, the new tab inherits all the custom tab properties.
        type: string
      customTabIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `customTabId` property is
          editable.
      disableAutoSize:
        description:
          When **true,** disables the auto sizing of single line text boxes
          in the signing screen when the signer enters data. If disabled users will
          only be able enter as much data as the text box can hold. By default this
          is false. This property only affects single line text boxes.
        type: string
      disableAutoSizeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `disableAutoSize` property
          is editable.
      documentId:
        description:
          Specifies the document ID number that the tab is placed on. This
          must refer to an existing Document's ID attribute.
        type: string
      documentIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `documentId` property is
          editable.
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      font:
        description: |
          The font to be used for the tab value. Supported fonts include:

          - Default
          - Arial
          - ArialNarrow
          - Calibri
          - CourierNew
          - Garamond
          - Georgia
          - Helvetica
          - LucidaConsole
          - MSGothic
          - MSMincho
          - OCR-A
          - Tahoma
          - TimesNewRoman
          - Trebuchet
          - Verdana
        type: string
      fontColor:
        description:
          "The font color to use for the information in the tab. Possible
          values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n-
          Gold\n- Green\n- NavyBlue\n- Purple\n- White\n"
        type: string
      fontColorMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `fontColor` property is editable.
      fontMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `font` property is editable.
      fontSize:
        description: |-
          The font size used for the information in the tab. Possible values are:

          - Size7
          - Size8
          - Size9
          - Size10
          - Size11
          - Size12
          - Size14
          - Size16
          - Size18
          - Size20
          - Size22
          - Size24
          - Size26
          - Size28
          - Size36
          - Size48
          - Size72
        type: string
      fontSizeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `fontSize` property is editable.
      formOrder:
        description:
          An integer specifying the order in which the guided form HTML
          should render. The order is relative to the `formPageLabel`, the group by
          which to place the guided form HTML block.
        type: string
      formOrderMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `formOrder` property is editable.
      formPageLabel:
        description:
          A string specifying the group in which to place the guided form
          HTML. Each group displays as a separate guided forms page in the signing
          experience.
        type: string
      formPageLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `formPageLabel` property
          is editable.
      formPageNumber:
        description:
          An integer specifying the order in which to present the guided
          form pages.
        type: string
      formPageNumberMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `fromPageNumber` property
          is editable.
      height:
        description: |-
          The height of the tab in pixels.
          Must be an integer.
        type: string
      heightMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `height` property is editable.
      italic:
        description: When **true,** the information in the tab is italic.
        type: string
      italicMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `italic` property is editable.
      localePolicy:
        "$ref": "#/definitions/localePolicyTab"
        description: Locale-specific settings.
      locked:
        description:
          When **true,** the signer cannot change the data of the custom
          tab.
        type: string
      lockedMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `locked` property is editable.
      maxLength:
        description:
          An optional value that describes the maximum length of the property
          when the property is a string.
        type: string
      maxLengthMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `maxLength` property is editable.
      mergeField:
        "$ref": "#/definitions/mergeField"
        description:
          Contains the information necessary to map the tab to a field
          in SalesForce.
      mergeFieldXml:
        description: Reserved for DocuSign.
        type: string
      name:
        description: |-
          The name of the tab. For example, `Sign Here` or `Initial Here`.

          If the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.
        type: string
      nameMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `name` property is editable.
          This property is read-only.
      originalValue:
        description: "The initial value of the tab. "
        type: string
      originalValueMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `originalValue` property
          is editable.
      pageNumber:
        description: |-
          The page number on which the tab is located.
          For supplemental documents, this value must be `1`.
        type: string
      pageNumberMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `pageNumber` property is
          editable.
      recipientId:
        description:
          "The ID of the recipient to whom the tab will be assigned. This
          value should match the `recipientId` defined in the recipient object.

          "
        type: string
      recipientIdGuid:
        description:
          The globally-unique identifier (GUID) for a specific recipient
          on a specific envelope. If the same recipient is associated with multiple
          envelopes, they will have a different GUID for each one. This property is
          read-only.
        type: string
      recipientIdGuidMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `recipientIdGuid` property
          is editable.
      recipientIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `recipientId` property is
          editable.
      required:
        description: When **true,** the signer is required to fill out this tab.
        type: string
      requiredMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `required` property is editable.
      smartContractInformation:
        "$ref": "#/definitions/smartContractInformation"
        description: Reserved for DocuSign.
      source:
        description: Reserved for DocuSign.
        type: string
      status:
        description: |
          The status of the tab. Possible values are:

          - `active`: The tab is active, but the recipient has not yet interacted with it.
          - `signed`: The recipient signed the tab.
          - `declined`: The recipient declined the envelope.
          - `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).
        type: string
      statusMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `status` property is editable.
      tabGroupLabels:
        description: |-
          An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.

          To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
        type: array
        items:
          type: string
      tabGroupLabelsMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `tabGroupLabels` property
          is editable.
      tabId:
        description: The unique identifier for the tab.
        type: string
      tabIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabId` property is editable.
      tabLabel:
        description: |
          The label associated with the tab. This value may be an empty string.
          If no value is provided, the tab type is used as the value.

          Maximum Length: 500 characters.
        type: string
      tabLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabLabel` property is editable.
      tabOrder:
        description: |-
          A positive integer that sets the order the tab is navigated to during signing.

          Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
        type: string
      tabOrderMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabOrder` property is editable.
      tabType:
        description: Indicates the type of tab (for example, `signHere` or `initialHere`).
        type: string
      tabTypeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabType` property is editable.
      templateLocked:
        description:
          "When **true,** the sender cannot change any attributes of the
          recipient. Used only when working with template recipients. "
        type: string
      templateLockedMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `templateLocked` property
          is editable.
      templateRequired:
        description:
          When **true,** the sender may not remove the recipient. Used
          only when working with template recipients.
        type: string
      templateRequiredMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `templateRequired` property
          is editable.
      tooltip:
        description:
          "The text of a tooltip that appears when a user hovers over a
          form field or tab.

          "
        type: string
      toolTipMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          "Metadata that indicates whether the `toolTip` property is editable.

          "
      underline:
        description: When **true,** the information in the tab is underlined.
        type: string
      underlineMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `underline` property is editable.
      value:
        description: "Specifies the value of the tab. "
        type: string
      valueMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `value` property is editable.
      width:
        description: |-
          The width of the tab in pixels.
          Must be an integer.
        type: string
      widthMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `width` property is editable.
      xPosition:
        description: |
          This property indicates the horizontal offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. Must be an integer. May be zero.

          To improve the tab's position on the document,
          DocuSign recommends
          adjusting `xPosition`
          and `yPosition`
          coordinates
          by (-3, -2)
        type: string
      xPositionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `xPosition` property is editable.
      yPosition:
        description: |
          This property indicates the vertical offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. Must be an integer. May be zero.

          To improve the tab's position on the document,
          DocuSign recommends
          adjusting `xPosition`
          and `yPosition`
          coordinates
          by (-3, -2)
        type: string
      yPositionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `yPosition` property is editable.
    description: "A tab that displays the recipient's company name.

      "
    x-ds-definition-name: company
    x-ms-summary: "A tab that displays the recipient's company name.

      "
  compositeTemplate:
    type: object
    properties:
      compositeTemplateId:
        description:
          The ID of this composite template. This ID is used as a reference
          when adding document object information. If used, the document's `content-disposition`
          must include the composite template ID to which the document should be added.
          If a composite template ID is not specified in the content-disposition,
          the document is applied based on the value of the `documentId` property
          only. If no document object is specified, the composite template inherits
          the first document.
        type: string
      document:
        "$ref": "#/definitions/document"
        description:
          An optional document object that will act as the primary document
          in the composite template object. If the document node is present, it will
          take precedence over any server template or inline template documents. It
          always comes first. Only use this when you want to supply the document dynamically.
      inlineTemplates:
        description:
          " Zero or more inline templates and their position in the overlay.
          If supplied, they are overlaid into the envelope in the order of their Sequence
          value."
        type: array
        items:
          "$ref": "#/definitions/inlineTemplate"
      pdfMetaDataTemplateSequence:
        description: |-
          A number representing the sequence in which to apply the template that contains the PDF metadata.

          Example: `4`
        type: string
      serverTemplates:
        description:
          Zero or more server-side templates and their position in the
          overlay. If supplied, they are overlaid into the envelope in the order of
          their Sequence value.
        type: array
        items:
          "$ref": "#/definitions/serverTemplate"
    description: |-
      This object contains information about a [composite template][composite], which you can use to to apply multiple templates to a single envelope, combine templates with PDF forms, and combine templates with documents from cloud sources.

      [composite]: /docs/esign-rest-api/esign101/concepts/templates/composite/
    x-ds-definition-name: compositeTemplate
    x-ms-summary: |-
      This object contains information about a [composite template][composite], which you can use to to apply multiple templates to a single envelope, combine templates with PDF forms, and combine templates with documents from cloud sources.

      [composite]: /docs/esign-rest-api/esign101/concepts/templates/composite/
  conditionalRecipientRule:
    type: object
    properties:
      conditions:
        description:
          An array of conditions that define when the recipients will be
          used.
        type: array
        items:
          "$ref": "#/definitions/conditionalRecipientRuleCondition"
      order:
        description: |-
          An integer that specifies the order in which rules are processed.
          Lower values are processed before higher values.
        type: string
      recipientGroup:
        "$ref": "#/definitions/recipientGroup"
        description:
          A set of recipients that may be used for the envelope, depending
          on the `conditions` defined.
      recipientId:
        description:
          "The ID of the recipient to whom the condition will be applied.
          This value should match the `recipientId` defined in the recipient object.

          "
        type: string
    description:
      A rule that defines a set of recipients and the conditions under
      which they will be used for the envelope.
    x-ds-definition-name: conditionalRecipientRule
    x-ms-summary:
      A rule that defines a set of recipients and the conditions under
      which they will be used for the envelope.
  conditionalRecipientRuleCondition:
    type: object
    properties:
      filters:
        description: ""
        type: array
        items:
          "$ref": "#/definitions/conditionalRecipientRuleFilter"
      order:
        description: |-
          An integer that specifies the order in which rules are processed.
          Lower values are processed before higher values.
        type: string
      recipientLabel:
        description:
          "An identifier for the recipient. After assigning this value
          in a `recipient` object, you can reference it in the `conditions` object
          to set the recipient as a conditional recipient. For an example, see [How
          to use conditional recipients](/docs/esign-rest-api/how-to/use-conditional-recipients/).

          "
        type: string
    x-ds-definition-name: conditionalRecipientRuleCondition
    description: ""
    x-ms-summary: ""
  conditionalRecipientRuleFilter:
    type: object
    properties:
      operator:
        description: |-
          How the tab value is compared to the `value` property. Valid values:

          * `equals`
          * `greaterThan`
          * `greaterThanEquals`
          * `lessThan`
          * `lessThanEquals`
          * `filled`
          * `selected`
        type: string
      recipientId:
        description: |
          A local reference used to map
          recipients to other objects, such as specific
          document tabs.

          A `recipientId` must be
          either an integer or a GUID,
          and the `recipientId` must be
          unique within an envelope.

          For example, many envelopes assign the first recipient
          a `recipientId` of `1`.
        type: string
      scope:
        description: |-
          The scope under which the condition is evaluated. Valid values:

          * `tabs`
        type: string
      tabId:
        description: The unique identifier for the tab.
        type: string
      tabLabel:
        description: |
          The label associated with the tab. This value may be an empty string.
          If no value is provided, the tab type is used as the value.

          Maximum Length: 500 characters.
        type: string
      tabType:
        description: Indicates the type of tab (for example, `signHere` or `initialHere`).
        type: string
      value:
        description: A set value to which the tab's actual value is compared.
        type: string
    x-ds-definition-name: conditionalRecipientRuleFilter
    description: ""
    x-ms-summary: ""
  connectConfigResults:
    type: object
    properties:
      configurations:
        description: An array of DocuSign Connect configurations.
        type: array
        items:
          "$ref": "#/definitions/connectCustomConfiguration"
      totalRecords:
        description: The number of results.
        type: string
    description:
      This object contains the results of a ConnectConfigurations::GET
      method.
    x-ds-definition-name: connectConfigResults
    x-ms-summary:
      This object contains the results of a ConnectConfigurations::GET
      method.
  connectCustomConfiguration:
    type: object
    properties:
      allowEnvelopePublish:
        description:
          Set this value to **true** to enable the webhook. The default
          property is **false.**
        type: string
      allowSalesforcePublish:
        description:
          When **true,** DocuSign sends data to the designated Salesforce
          account through Connect. The default value is **true.**
        type: string
      allUsers:
        description: |-
          When **true,** the tracked envelope and recipient events for all users, including users that are added a later time, are sent through Connect. The default value is **false.**

          **Note:** If this property is **false,** make sure you set the `userIds` property to a non-empty array of user IDs.
        type: string
      allUsersExcept:
        description:
          This flag allows you to toggle between including and excluding
          specified users from the configuration. When **false,** the users corresponding
          to the IDs in `userIds` will be included in the configuration. Conversely,
          when **true,** the users will be excluded from the configuration. The default
          value is **false.**
        type: string
      configurationType:
        description: |-
          The type of the configuration. Valid values:

          * `custom`: Creates an account-level configuration
          * `customrecipient`: Creates a Recipient Connect configuration
          * `salesforce`
          * `eOriginal`

          This property is required.
        type: string
      connectId:
        description: |-
          The DocuSign-generated ID for the Connect configuration.

          This property is read-only.
        type: string
      deliveryMode:
        description: |-
          The delivery mode of the configuration. Valid values:

          * `SIM`
          * `Aggregate`
        type: string
      disabledBy:
        description: ""
        type: string
      enableLog:
        description:
          "When **true,** Connect logging is turned on. DocuSign recommends
          that you enable this functionality to help troubleshoot any issues. \n\nYou
          can have a maximum of 100 active logs in your account. You can view the
          entries in active logs in the **Logs** tab in the Connect console."
        type: string
      envelopeEvents:
        description: |-
          A list of envelope-level event statuses that will trigger Connect to send updates to the endpoint specified in the `url` property.

          When using any of [the legacy event message formats](/platform/webhooks/connect/legacy-message-formats/), you must include either the `envelopeEvents` property or the `recipientEvents` property. If you are instead using the [JSON SIM event model](]/platform/webhooks/connect/improved-json-sim-event-model/), use the `events` property.

          The [possible event statuses](/platform/webhooks/connect/event-triggers/) are:

          * `Sent`
          * `Delivered`
          * `Completed`
          * `Declined`
          * `Voided`

          **Note:** These values are case-sensitive.
        type: array
        items:
          type: string
      eventData:
        "$ref": "#/definitions/connectEventData"
        description:
          Allows you to specify the format of the information the Connect
          webhooks returns.
      events:
        description: |
          A comma-separated list of envelope-level event statuses that will trigger Connect to send updates to the endpoint specified in the `urlToPublishTo` property.

          Set this property when you are using the [JSON SIM event model](/platform/webhooks/connect/improved-json-sim-event-model/). If you are instead using any of [the legacy event message formats](/platform/webhooks/connect/legacy-message-formats/), set either the `envelopeEvents` property or the `recipientEvents` property.

          The [possible event statuses](/platform/webhooks/connect/improved-json-sim-event-model/#eventreference) are:

          * `envelope-created`
          * `envelope-sent`
          * `envelope-resent`
          * `envelope-delivered`
          * `envelope-completed`
          * `envelope-declined`
          * `envelope-voided`
          * `recipient-authenticationfailed`
          * `recipient-autoresponded`
          * `recipient-declined`
          * `recipient-delivered`
          * `recipient-completed`
          * `recipient-sent`
          * `recipient-resent`
          * `template-created`
          * `template-modified`
          * `template-deleted`
          * `envelope-corrected`
          * `envelope-purge`
          * `envelope-deleted`
          * `envelope-discard`
          * `recipient-reassign`
          * `recipient-delegate`
          * `recipient-finish-later`
          * `click-agreed`
          * `click-declined`
        type: array
        items:
          type: string
      externalFolderId:
        description: The ID of an external folder.
        type: string
      externalFolderLabel:
        description: The label for an external folder.
        type: string
      groupIds:
        description: ""
        type: array
        items:
          type: string
      includeCertificateOfCompletion:
        description:
          "When **true,** the Connect Service includes the Certificate
          of Completion with completed envelopes. "
        type: string
      includeCertSoapHeader:
        description: ""
        type: string
      includeDocumentFields:
        description:
          "When **true,** the Document Fields associated with the envelope's
          documents are included in the notification messages. Document Fields are
          optional custom name-value pairs added to documents using the API. "
        type: string
      includeDocuments:
        description: Reserved for DocuSign.
        type: string
      includeEnvelopeVoidReason:
        description:
          "When **true,** if the envelope is voided, the Connect Service
          notification will include the void reason, as entered by the person that
          voided the envelope. "
        type: string
      includeHMAC:
        description: ""
        type: string
      includeOAuth:
        description: ""
        type: string
      includeSenderAccountasCustomField:
        description:
          When **true,** Connect will include the sender account as Custom
          Field in the data.
        type: string
      includeTimeZoneInformation:
        description: When **true,** Connect will include the envelope time zone information.
        type: string
      integratorManaged:
        description: ""
        type: string
      name:
        description: |-
          The name of the Connect configuration.

          This property is required.
        type: string
      password:
        description: |
          The password for the Connect configuration.

          This property is not used for the `createHistoricalEnvelopePublishTransaction` endpoint.
        type: string
      recipientEvents:
        description:
          "An array of recipient event statuses that will trigger Connect
          to send notifications to your webhook listener at the URL endpoint specified
          in the `url` property. \n\nWhen using any of [the legacy event message formats](/platform/webhooks/connect/legacy-message-formats/),
          you must include either the `envelopeEvents` property or the `recipientEvents`
          property. If you are instead using the [JSON SIM event model](/platform/webhooks/connect/improved-json-sim-event-model/),
          use the `events` property.\n\nThe [possible event statuses](/platform/webhooks/connect/event-triggers/)
          are:\n\n* `Sent`\n* `AutoResponded`\n* `Delivered`\n* `Completed`\n* `Declined`\n*
          `AuthenticationFailed`\n\n**Note:** These values are case-sensitive."
        type: array
        items:
          type: string
      requireMutualTls:
        description:
          When **true,** [Mutual TLS](/platform/webhooks/mutual-tls/) authentication
          is enabled.
        type: string
      requiresAcknowledgement:
        description: |+
          When **true,** event delivery acknowledgements are enabled for your Connect configuration.

          DocuSign Connect awaits a valid 200 response from your application acknowledging that it received a message. If you do not acknowledge receiving an event notification message within 100 seconds, DocuSign treats the message as a failure and places it into a failure queue. It is imperative that you acknowledge successful receipt of Connect events as they occur by sending a 200 event back.

          #### When **true** and Send Individual Messages (SIM) mode is activated

          If the HTTP status response to a notification message is not in the range of 200-299,
          then the message delivery failed, and the configuration is marked as down.

          The message will be queued and retried once per day.
          While a Connect configuration is marked down, subsequent notifications will not be tried. Instead they will be immediately queued with the reason `Pending`.
          When a message succeeds, all queued messages for the configuration will be tried immediately, in order.

          There is a maximum of ten retries. Alternately, you can use **Republish Connect Information** to manually republish the notification.

          #### When **true** and SIM mode is not activated

          If the HTTP Status response to a notification message is not in the range of 200-299,  then the message delivery failed, and the message is queued.

          The message will be retried after at least a day the next time a subsequent message is successfully sent to this configuration (subscription).  Subsequent notifications will be tried when they occur.
          There is a maximum of ten retries. Alternately, you can use **Republish Connect Information** to manually republish the notification.

          #### When **false**

          When `requiresAcknowledgement` is set to **false** and you do not acknowledge receiving an event notification message within 100 seconds, DocuSign treats the message as a failure and determines that the server is unavailable. It does not retry to send the notification message, and you must handle the failure manually.

        type: string
      salesforceApiVersion:
        description: The version of the Salesforce API that you are using.
        type: string
      salesforceAuthcode:
        description: ""
        type: string
      salesforceCallBackUrl:
        description: ""
        type: string
      salesforceDocumentsAsContentFiles:
        description:
          When **true,** DocuSign can use documents in your Salesforce
          account for sending and signing.
        type: string
      senderOverride:
        description: ""
        type: string
      senderSelectableItems:
        description:
          "This property sets the items that are available for selection
          when adding or editing Connect objects. "
        type: array
        items:
          type: string
      sfObjects:
        description: An array of Salesforce objects.
        type: array
        items:
          "$ref": "#/definitions/connectSalesforceObject"
      signMessageWithX509Certificate:
        description:
          "When **true,** Mutual TLS will be enabled for notifications.
          Mutual TLS must be initiated by the listener (the customer's web server)
          during the TLS handshake protocol. "
        type: string
      soapNamespace:
        description: |-
          The namespace of the SOAP interface.

          **Note:** If `useSoapInterface` is set to **true,** you must set this value.
        type: string
      urlToPublishTo:
        description:
          The web address of the listener or retrieving service endpoint.
          It must be an HTTPS URL.
        type: string
      userIds:
        description: |-
          A comma-separated list of user IDs. This sets the users associated with the tracked envelope and recipient events. When a tracked event occurs for a set user, the a notification message is sent to your Connect listener.

          By default, the users will be included in the configuration. If you want to exclude the users, set the `allUsersExcept` property to **true.**

          **Note:** If `allUsers` is set to `false`, then you must provide a list of user IDs.
        type: array
        items:
          type: string
      userName:
        description: The name of the user.
        type: string
      useSoapInterface:
        description:
          "When **true,** the notifications are sent to your endpoint as
          SOAP requests. "
        type: string
    description:
      The `connectCustomConfiguration` object describes a Connect configuration
      for your account.
    x-ds-definition-name: connectCustomConfiguration
    x-ms-summary:
      The `connectCustomConfiguration` object describes a Connect configuration
      for your account.
  connectDebugLog:
    type: object
    properties:
      connectConfig:
        description: The name of the Connect configuration.
        type: string
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      eventDateTime:
        description: The UTC date and time of the event.
        type: string
      eventDescription:
        description: A description of the event.
        type: string
      payload:
        description: Log output.
        type: string
    x-ds-definition-name: connectDebugLog
    description: ""
    x-ms-summary: ""
  connectDeleteFailureResult:
    type: object
    x-ds-definition-name: connectDeleteFailureResult
    description: ""
    x-ms-summary: ""
  connectEventData:
    type: object
    properties:
      format:
        description: Reserved for DocuSign.
        type: string
      includeData:
        description: |
          A string array of the data to be included.
          The default is the empty array `[]`.

          - `attachments`: Include attachments associated with the envelope.
          - `custom_fields`: Include the custom fields associated with the envelope.
          - `documents`: Include the documents associated with the envelope.
          - `extensions`: Include information about the email settings associated with the envelope.
          - `folders`: Include the folder where the envelope exists.
          - `payment_tabs`: Include the payment tabs associated with the envelope.
          - `powerform`: Include the PowerForms associated with the envelope.
          - `prefill_tabs`: Include the [pre-filled tabs](/docs/esign-rest-api/esign101/concepts/tabs/prefilled-tabs/) associated with the envelope.
          - `recipients`: Include the recipients associated with the envelope.
          - `tabs`: Include the tabs associated with the envelope.
        type: array
        items:
          type: string
      version:
        description:
          Set this property to `restv2.1` to return event data in JSON.
          If the property is not set, the event data will be returned in XML by default.
        type: string
    description: This object lets you choose the data format of your Connect response.
    x-ds-definition-name: connectEventData
    x-ms-summary: This object lets you choose the data format of your Connect response.
  connectFailureFilter:
    type: object
    properties:
      envelopeIds:
        description: |
          An array of envelope GUIDs.

          Example: `93be49ab-xxxx-xxxx-xxxx-f752070d71ec`
        type: array
        items:
          type: string
      synchronous:
        description:
          Must be **false.** Setting this property to any other value will
          result in errors.
        type: string
    description: A list of failed envelope IDs to retry.
    x-ds-definition-name: connectFailureFilter
    x-ms-summary: A list of failed envelope IDs to retry.
  connectFailureResult:
    type: object
    properties:
      configId:
        description: Reserved for DocuSign.
        type: string
      configUrl:
        description: "Reserved for DocuSign.

          "
        type: string
      envelopeId:
        description: The envelope ID of the envelope status that failed to post.
        type: string
      status:
        description: The connection status.
        type: string
      statusMessage:
        description: A human-readable message describing the connection status.
        type: string
    description: This object contains details about a Connect failure result.
    x-ds-definition-name: connectFailureResult
    x-ms-summary: This object contains details about a Connect failure result.
  connectFailureResults:
    type: object
    properties:
      retryQueue:
        description: Details about a Connect failure result.
        type: array
        items:
          "$ref": "#/definitions/connectFailureResult"
    x-ds-definition-name: connectFailureResults
    description: ""
    x-ms-summary: ""
  connectHistoricalEnvelopeRepublish:
    type: object
    properties:
      config:
        "$ref": "#/definitions/connectCustomConfiguration"
        description: |-
          An object describing the ad hoc Connect configuration data. This object is required.

          **Note:** Regardless of the `eventData.version` parameter on this object, envelope data will always be transmitted in JSON format. XML is not supported.
      envelopes:
        description: |-
          An array of envelope IDs as comma-separated strings. This property is required.

          For example: `["4280f274-xxxx-xxxx-xxxx-b218b7eeda08","9586h293-xxxx-xxxx-xxxx-m923b8opre71","2347w948-xxxx-xxxx-xxxx-t096b8krno89"]`
        type: array
        items:
          type: string
    x-ds-definition-name: connectHistoricalEnvelopeRepublish
    description:
      The request body for the `createHistoricalEnvelopePublishTransaction`
      endpoint.
    x-ms-summary:
      The request body for the `createHistoricalEnvelopePublishTransaction`
      endpoint.
  connectLog:
    type: object
    properties:
      accountId:
        description: The account ID associated with the envelope.
        type: string
      configUrl:
        description:
          The web address of the listener or retrieving service endpoint
          for Connect.
        type: string
      connectDebugLog:
        description: |-
          A complex element containing information about the Connect configuration, error details, date/time, description and payload.
          This information is included in the response only when the `additional_info` query is set to **true.**
          This additional information is only available when retrieving general logs with [ConnectEvents:get](/docs/esign-rest-api/reference/connect/connectevents/get/), but not when retrieving failure logs with [ConnectEvents:listFailures](/docs/esign-rest-api/reference/connect/connectevents/listfailures/).
        type: array
        items:
          "$ref": "#/definitions/connectDebugLog"
      connectId:
        description:
          The ID of the Connect configuration that failed. If an account
          has multiple Connect configurations, this value is used to look up the Connect
          configuration for the failed post.
        type: string
      created:
        description: The UTC DateTime when the Connect post was created.
        type: string
      email:
        description: The email address of the envelope sender.
        type: string
      envelopeId:
        description: The ID of the envelope that failed to post.
        type: string
      error:
        description: The error that caused the Connect post to fail.
        type: string
      failureId:
        description: The failure log ID for the failure.
        type: string
      failureUri:
        description: The URI for the Connect post failure.
        type: string
      lastTry:
        description: The UTC DateTime of the last attempt to post.
        type: string
      logId:
        description: The Connect log ID for the entry.
        type: string
      logUri:
        description: The URI for the Connect log entry.
        type: string
      retryCount:
        description: The number of times the Connect post has been retried.
        type: string
      retryUri:
        description: A URI that you can use to retry to publish the Connect post.
        type: string
      status:
        description: |-
          The envelope status for the Connect post. Possible values are:
          - `Any`
          - `Voided`
          - `Created`
          - `Deleted`
          - `Sent`
          - `Delivered`
          - `Signed`
          - `Completed`
          - `Declined`
          - `TimedOut`
          - `Template`
          - `Processing`

          For details about these statuses, see [Envelope Status Code Descriptions](/docs/esign-rest-api/esign101/rules-and-limits/responses/).
        type: string
      subject:
        description: The subject of the envelope.
        type: string
      userName:
        description: The name of the sender of the envelope.
        type: string
    description: Contains information about a Connect log entry.
    x-ds-definition-name: connectLog
    x-ms-summary: Contains information about a Connect log entry.
  connectLogs:
    type: object
    properties:
      failures:
        description:
          An array of containing failure information from the Connect failure
          log.
        type: array
        items:
          "$ref": "#/definitions/connectLog"
      logs:
        description: A list of Connect general logs.
        type: array
        items:
          "$ref": "#/definitions/connectLog"
      totalRecords:
        description: The count of records in the log list.
        type: string
      type:
        description: |
          The type of this tab. Values are:

          - `Approve`
          - `CheckBox`
          - `Company`
          - `Date`
          - `DateSigned`
          - `Decline`
          - `Email`
          - `EmailAddress`
          - `EnvelopeId`
          - `FirstName`
          - `Formula`
          - `FullName`
          - `InitialHere`
          - `InitialHereOptional`
          - `LastName`
          - `List`
          - `Note`
          - `Number`
          - `Radio`
          - `SignerAttachment`
          - `SignHere`
          - `SignHereOptional`
          - `Ssn`
          - `Text`
          - `Title`
          - `Zip5`
          - `Zip5Dash4`
        type: string
    x-ds-definition-name: connectLogs
    description: ""
    x-ms-summary: ""
  connectOAuthConfig:
    type: object
    properties:
      authorizationServerUrl:
        description: |-
          The token URL for your authorization server or OAuth service.

          This property is required.
        type: string
      clientId:
        description: |-
          The client ID assigned to your app by your authorization server or OAuth service.

          This property is required.
        type: string
      clientSecret:
        description: |-
          The secret value provided by your authorization server.

          This property is required.
        type: string
      customParameters:
        description: ""
        type: string
        additionalProperties:
          type: string
      scope:
        description: |-
          The scopes that your app will request from the authorization server.

          This property is optional.

          **Note:** If you are using Azure, this value is the application ID URI of the secified resource affixed with the `.default`. For example: `api://{{clientId}}/.default`
        type: string
    x-ds-definition-name: connectOAuthConfig
    description: A complex object describing a Connect OAuth configuration.
    x-ms-summary: A complex object describing a Connect OAuth configuration.
  connectSalesforceField:
    type: object
    properties:
      dsAttribute:
        description: ""
        type: string
      dsLink:
        description: A URL that links to the information in the DocuSign field.
        type: string
      dsNode:
        description: ""
        type: string
      id:
        description: A unique ID for the Salesforce object.
        type: string
      sfField:
        description: ""
        type: string
      sfFieldName:
        description: The name of the Salesforce field.
        type: string
      sfFolder:
        description: The name of the Salesforce folder.
        type: string
      sfLockedValue:
        description: ""
        type: string
    description:
      This object is used to match a DocuSign field to a Salesforce field
      so that DocuSign can send information to your Salesforce account.
    x-ds-definition-name: connectSalesforceField
    x-ms-summary:
      This object is used to match a DocuSign field to a Salesforce field
      so that DocuSign can send information to your Salesforce account.
  connectSalesforceObject:
    type: object
    properties:
      active:
        description: When **true,** the `connectSalesforceObject` is active.
        type: string
      description:
        description: A description of the `connectSalesforceObject`.
        type: string
      id:
        description: The ID of the `connectSalesforceObject`.
        type: string
      insert:
        description: ""
        type: string
      onCompleteOnly:
        description:
          When **true,** Salesforce is updated only when the envelope is
          complete.
        type: string
      selectFields:
        description:
          The DocuSign and Salesforce fields that you want to use to match
          a Salesforce object with DocuSign information. This information tells Connect
          when to send updates to Salesforce.
        type: array
        items:
          "$ref": "#/definitions/connectSalesforceField"
      sfObject:
        description:
          The Salesforce.com object type, such as `case`, `contact`, or
          `opportunity`.
        type: string
      sfObjectName:
        description: |-
          A name for the Salesforce object.

          **Note:** You can enter any name for the object. It does not have to match the `sfObject` property.
        type: string
      updateFields:
        description:
          "The DocuSign and Salesforce fields that you want to update.
          \n\n**Note:** You can choose to update SalesForce (with information from
          DocuSign) only, update DocuSign only, or both."
        type: array
        items:
          "$ref": "#/definitions/connectSalesforceField"
    description:
      "A `connectSalesforceObject` is an object that updates envelope and
      document status or recipient status in your Salesforce account.\n\nWhen you
      install DocuSign Connect for Salesforce, the service automatically sets up two
      Connect objects: one that updates envelope status and documents and one that
      updates recipient status. You can also customize DocuSign Connect for Salesforce
      by associating DocuSign objects with Salesforce objects so that DocuSign Connect
      for Salesforce updates or inserts the information into the Salesforce object.
      For more information, see \n[DocuSign for Salesforce - Adding Completed Documents
      to the Notes and Attachments](https://support.docusign.com/s/articles/DocuSign-for-Salesforce-Adding-Completed-Documents-to-the-Notes-and-Attachments-New)."
    x-ds-definition-name: connectSalesforceObject
    x-ms-summary:
      "A `connectSalesforceObject` is an object that updates envelope
      and document status or recipient status in your Salesforce account.\n\nWhen
      you install DocuSign Connect for Salesforce, the service automatically sets
      up two Connect objects: one that updates envelope status and documents and one
      that updates recipient status. You can also customize DocuSign Connect for Salesforce
      by associating DocuSign objects with Salesforce objects so that DocuSign Connect
      for Salesforce updates or inserts the information into the Salesforce object.
      For more information, see \n[DocuSign for Salesforce - Adding Completed Documents
      to the Notes and Attachments](https://support.docusign.com/s/articles/DocuSign-for-Salesforce-Adding-Completed-Documents-to-the-Notes-and-Attachments-New)."
  connectUserInfo:
    type: object
    properties:
      email:
        description: ""
        type: string
      isIncluded:
        description: ""
        type: string
      userId:
        description: |-
          The ID of the user to access.

          **Note:** Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.
        type: string
      userName:
        description: The name of the user.
        type: string
    x-ds-definition-name: connectUserInfo
    description: ""
    x-ms-summary: ""
  connectUserObject:
    type: object
    properties:
      configurationtype:
        description: The type of custom Connect configuration being accessed.
        type: string
      connectId:
        description: The ID of the custom Connect configuration being accessed.
        type: string
      enabled:
        description:
          Boolean value that indicates whether the custom Connect configuration
          is enabled or not.
        type: string
      hasAccess:
        description: ""
        type: string
      senderSearchableItems:
        description: ""
        type: array
        items:
          type: string
    x-ds-definition-name: connectUserObject
    description: ""
    x-ms-summary: ""
  consentDetails:
    type: object
    properties:
      consentKey:
        description: ""
        type: string
      deliveryMethod:
        description: |-
          The delivery method. One of:

          - `email`
          - `fax`
          - `SMS`
          - `WhatsApp`
          - `offline`

          The `SMS` and `WhatsApp` delivery methods
          are limited to `signer`, `carbonCopy`, and `certifiedDelivery`
          recipients.

          **Related topics**

          - [Using SMS delivery with the eSignature API][smsconcept]
          - [How to request a signature by SMS delivery][howto]

          [smsconcept]: /docs/esign-rest-api/esign101/concepts/sms-delivery/using-sms-esignature/
          [howto]: /docs/esign-rest-api/how-to/request-signature-sms/
        type: string
      signerConsentStatus:
        description: ""
        type: string
    x-ds-definition-name: consentDetails
    description: ""
    x-ms-summary: ""
  consoleViewRequest:
    type: object
    properties:
      envelopeId:
        description: |-
          The ID of an envelope. If the envelope has been sent, the endpoint returns a URL for a view of the documents. If the envelope has not yet been sent, the endpoint returns a URL for the sender view.

          This property is optional. If no value is provided, the endpoint returns a URL for the front page of the demo UI.
        type: string
      returnUrl:
        description: |-
          The URL to which the user should be redirected. This is only used when the `envelopeId` is specified as a draft envelope. In this case, the endpoint returns a URL for the sender view. When the user exits the sender view, they will be redirected to the `returnUrl` value. If no value is provided, there is no option to leave the sender view.

          In other cases, the user is not redirected out of the console view.
        type: string
    description:
      "The request object for the [EnvelopeViews: createConsole](/docs/esign-rest-api/reference/envelopes/envelopeviews/createconsole/)
      method."
    x-ds-definition-name: consoleViewRequest
    x-ms-summary:
      "The request object for the [EnvelopeViews: createConsole](/docs/esign-rest-api/reference/envelopes/envelopeviews/createconsole/)
      method."
  consumerDisclosure:
    type: object
    properties:
      accountEsignId:
        description: The GUID of the account associated with the consumer disclosure.
        type: string
      allowCDWithdraw:
        description: |-
          When **true,** indicates that the customer can withdraw their consent to the consumer disclosure when they decline to sign documents. If these recipients sign documents sent to them from your account in the future, they will be required to agree to the terms in the disclosure. The default value is **false.**
          **Note:** Only Admin users can change this setting.
        type: string
      allowCDWithdrawMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `allowCDWithdraw` property
          is editable.

          "
      changeEmail:
        description: |-
          If the customer needs to change their email address, this is the email address to which they should the change request.

          Maximum length: 100 characters.
        type: string
      changeEmailOther:
        description:
          "Other information about the requirements for the user to change
          their email address.\n\nMaximum length: 255 characters.\n\nExample: \n\n`We
          do not require any other information from you to change your email address.`"
        type: string
      companyName:
        description: |-
          Specifies the company name used in the disclosure. The default value is the account name.

          However, if your account uses signing brands that specify a company name, you can substitute the brand's company name by setting the `useBrand` property to **true.** Whenever an envelope is sent from the account that uses a signing brand with a specified `companyName`, that value is used in email notifications and in the signing experience.

          **Note:** This substitution only works if you use the default legal disclosure or if you apply the `companyName` to the merge fields in a custom ERSD. You must also set the value of the `useBrand` property to **true.**
        type: string
      companyPhone:
        description:
          The phone number of the company associated with the consumer
          disclosure, as a free-formatted string.
        type: string
      copyCostPerPage:
        description:
          "The cost per page if the customer requests paper copies.\n\nExample:
          \n\n`0.0000`"
        type: string
      copyFeeCollectionMethod:
        description:
          "Specifies the fee collection method for cases in which the customer
          requires paper copies of the document.\n\nMaximum length: 255 characters.\n\nExample:
          \n\n`We will bill you for any fees at that time, if any.`"
        type: string
      copyRequestEmail:
        description: |-
          The email address to which the customer should send a request for copies of a document.

          Maximum length: 100 characters.
        type: string
      custom:
        description:
          When **true,** indicates that the consumer disclosure is a custom
          disclosure. The default is **false.**
        type: string
      enableEsign:
        description: When **true** (default), indicates that eSign is enabled.
        type: string
      esignAgreement:
        description:
          The final, assembled text of the Electronic Record and Signature
          Disclosure that includes the appropriate `companyName` and other specifics.
          It also includes the HTML tags used for formatting.
        type: string
      esignText:
        description: |-
          The template for the Electronic Record and Signature Disclosure, which contains placeholders for information such as the `companyName`. It also includes the HTML tags used for formatting.

          **Note:** If you are switching to or updating a custom disclosure, you can edit both the text and the HTML formatting.
        type: string
      languageCode:
        description:
          "The code for the language version of the disclosure. The following
          languages are supported:\n\n- Arabic (`ar`)\n- Bulgarian (`bg`)\n- Czech
          (`cs`)\n- Chinese Simplified (`zh_CN`)\n- Chinese Traditional (`zh_TW`)\n-
          Croatian (`hr`)\n- Danish (`da`)\n- Dutch (`nl`)\n- English US (`en`)\n-
          English UK (`en_GB`)\n- Estonian (`et`)\n- Farsi (`fa`)\n- Finnish (`fi`)\n-
          French (`fr`)\n- French Canadian (`fr_CA`)\n- German (`de`)\n- Greek (`el`)\n-
          Hebrew (`he`)\n- Hindi (`hi`)\n- Hungarian (`hu`)\n- Bahasa Indonesian (`id`)\n-
          Italian (`it`)\n- Japanese (`ja`)\n- Korean (`ko`)\n- Latvian (`lv`)\n-
          Lithuanian (`lt`)\n- Bahasa Melayu (`ms`)\n- Norwegian (`no`)\n- Polish
          (`pl`)\n- Portuguese (`pt`)\n- Portuguese Brazil (`pt_BR`)\n- Romanian (`ro`)\n-
          Russian (`ru`)\n- Serbian (`sr`)\n- Slovak (`sk`)\n- Slovenian (`sl`)\n-
          Spanish (`es`)\n- Spanish Latin America (`es_MX`)\n- Swedish (`sv`)\n- Thai
          (`th`)\n- Turkish (`tr`)\n- Ukrainian (`uk`) \n- Vietnamese (`vi`)\n\nAdditionally,
          you can automatically detect the browser language being used by the viewer
          and display the disclosure in that language by setting the value to `browser`."
        type: string
      mustAgreeToEsign:
        description:
          When **true,** the  recipient must agree to the consumer disclosure.
          The value of this property is read-only. It is calculated based on the account
          setting `consumerDisclosureFrequency` and the user's actions.
        type: string
      pdfId:
        description:
          "**Deprecated.** \n\nThe `pdfId` property in the consumer_disclosure
          PUT request is deprecated. For security reasons going forward, any value
          provided in the request packet must be ignored. "
        type: string
      useBrand:
        description:
          "When **true,** specifies that the company name in the signing
          brand is used for the disclosure. Whenever an envelope is sent from the
          account that uses a signing brand with a specified company name, that value
          is used in email notifications and in the signing experience.  \n\nWhen
          **false** (default), or if the signing brand does not specify a company
          name, the account name is used instead.\n\n**Note:** This substitution only
          works if you use the default legal disclosure or if you apply the `companyName`
          to the merge fields in a custom ERSD. "
        type: string
      useConsumerDisclosureWithinAccount:
        description:
          When **true,** specifies that recipients in the same account
          as the sender must agree to eSign an Electronic Record and Signature Disclosure
          Statement.
        type: string
      useConsumerDisclosureWithinAccountMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `useConsumerDisclosureWithinAccount`
          property is editable.

          "
      withdrawAddressLine1:
        description:
          "Contains the first address line of the postal address to which
          a customer can send a consent withdrawal notification.\n\nMaximum length:
          100 characters. "
        type: string
      withdrawAddressLine2:
        description:
          "Contains the second address line of the postal address to which
          a customer can send a consent withdrawal notification.\n\nMaximum length:
          100 characters. "
        type: string
      withdrawByEmail:
        description:
          When **true** (default), indicates that the customer can withdraw
          consent by email.
        type: string
      withdrawByMail:
        description:
          When **true,** indicates that the customer can withdraw consent
          by postal mail. The default is **false.**
        type: string
      withdrawByPhone:
        description:
          When **true,** indicates that the customer can withdraw consent
          by phone. The default is **false.**
        type: string
      withdrawCity:
        description:
          "Contains the city of the postal address to which a customer
          can send a consent withdrawal notification.\n\nMaximum length: 50 characters. "
        type: string
      withdrawConsequences:
        description: |-
          Text indicating the consequences of withdrawing consent.

          Maximum length: 255 characters.
        type: string
      withdrawEmail:
        description:
          "Contains the email address to which a customer can send a consent
          withdrawal notification.\n\nMaximum length: 100 characters. "
        type: string
      withdrawOther:
        description: |-
          Contains any other information needed to withdraw consent.

          Maximum length: 255 characters.

          Example:

          `We do not need any other information from you to withdraw consent.`
        type: string
      withdrawPhone:
        description:
          "Contains the phone number that a customer can call to register
          consent withdrawal notification as a free-formatted string.\n\nMaximum length:
          20 characters. "
        type: string
      withdrawPostalCode:
        description:
          "Contains the postal code of the postal address to which a customer
          can send a consent withdrawal notification.\n\nMaximum length: 20 characters. "
        type: string
      withdrawState:
        description: |-
          Contains the state of the postal address to which a customer can send a consent withdrawal notification.

          Example: `PA`
        type: string
    description: Details about consumer disclosures.
    x-ds-definition-name: consumerDisclosure
    x-ms-summary: Details about consumer disclosures.
  contact:
    type: object
    properties:
      cloudProvider:
        description: |-
          The cloud service that provided the contact. Valid values are:

          - `rooms`
          - `docusignCore` (default)

          <!-- Future:

          - `Box`
          - `GoogleDrive`
          - `Dropbox`
          - `SalesForce`
          - `SkyDrive`

          -->
        type: string
      cloudProviderContainerId:
        description:
          The ID of the container at the cloud provider. For example, this
          might be the room ID for a DocuSign Transaction Room.
        type: string
      contactId:
        description: The ID of a contact person in the account's address book.
        type: string
      contactPhoneNumbers:
        description: |-
          A list of the contact's phone numbers.

          **Note:** The phone numbers associated with shared contacts do not display to users other than the user who added the contact. Additionally, in the following scenarios, the phone number of a shared contact does not populate automatically for anyone other than the user who added the contact:

          - Sending an envelope by using SMS
          - Using phone authentication

          You must ask the user who added the contact for the phone number and then manually enter it into the authentication box.
        type: array
        items:
          "$ref": "#/definitions/contactPhoneNumber"
      contactUri:
        description: The URI for retrieving information about the contact.
        type: string
      emails:
        description: An array of email addresses.
        type: array
        items:
          type: string
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      isOwner:
        description: ""
        type: boolean
      name:
        description: The name of the contact.
        type: string
      notaryContactDetails:
        "$ref": "#/definitions/notaryContactDetails"
        description: ""
      organization:
        description: ""
        type: string
      roomContactType:
        description: ""
        type: string
      shared:
        description: When **true,** this contact is shared.
        type: string
      signingGroup:
        description: The ID of the signing group.
        type: string
      signingGroupName:
        description:
          "Optional. The name of the signing group. \n\nMaximum Length:
          100 characters. "
        type: string
    x-ds-definition-name: contact
    description: ""
    x-ms-summary: ""
  contactGetResponse:
    type: object
    properties:
      contacts:
        description: A list of contacts.
        type: array
        items:
          "$ref": "#/definitions/contact"
      endPosition:
        description: "The last index position in the result set. "
        type: string
      nextUri:
        description:
          "The URI for the next chunk of records based on the search request.
          It is `null` if this is the last set of results for the search. "
        type: string
      previousUri:
        description:
          "The URI for the prior chunk of records based on the search request.
          It is `null` if this is the first set of results for the search. "
        type: string
      resultSetSize:
        description:
          The number of results in this response. Because you can filter
          which entries are included in the response, this value is always less than
          or equal to the `totalSetSize`.
        type: string
      startPosition:
        description: The starting index position of the current result set.
        type: string
      totalSetSize:
        description:
          The total number of items in the result set. This value is always
          greater than or equal to the value of `resultSetSize`.
        type: string
    description:
      This response object contains information about the contacts associated
      with an account.
    x-ds-definition-name: contactGetResponse
    x-ms-summary:
      This response object contains information about the contacts associated
      with an account.
  contactModRequest:
    type: object
    properties:
      contactList:
        description: A list of contacts.
        type: array
        items:
          "$ref": "#/definitions/contact"
    description: The request object containing the new information for the contacts.
    x-ds-definition-name: contactModRequest
    x-ms-summary: The request object containing the new information for the contacts.
  contactPhoneNumber:
    type: object
    properties:
      phoneNumber:
        description: |-
          The contact's phone number.

          Example: `+12223334444`
        type: string
      phoneType:
        description: |-
          The type of phone number. Valid values are:

          - `home`
          - `mobile`
          - `work`
          - `other`
          - `fax`
        type: string
    description: Details about the phone numbers associated with a specific contact.
    x-ds-definition-name: contactPhoneNumber
    x-ms-summary: Details about the phone numbers associated with a specific contact.
  contactUpdateResponse:
    type: object
    properties:
      contacts:
        description: A list of contacts.
        type: array
        items:
          "$ref": "#/definitions/contact"
    description: This response objects shows the updated details for the contacts.
    x-ds-definition-name: contactUpdateResponse
    x-ms-summary: This response objects shows the updated details for the contacts.
  correctViewRequest:
    type: object
    properties:
      beginOnTagger:
        description: ""
        type: string
      returnUrl:
        description: |
          (Required) The URL to which the user should be redirected after
          the view session has ended.

          Maximum Length: 470 characters. If the `returnUrl` exceeds this
          limit, the user is redirected to a truncated URL
          Be sure to include `https://` in the URL
          or redirecting might fail on some browsers.

          When DocuSign redirects to
          this URL, it will include an `event` query parameter that your app can use:

          * `send`: User corrected and sent the envelope.
          * `save`: User saved the envelope.
          * `cancel`: User canceled the transaction.
          * `error`: There was an error when performing the correct or send.
          * `sessionEnd`: The session ended before the user completed a different action.
        type: string
      suppressNavigation:
        description: Specifies whether the window is displayed with or without dressing.
        type: string
      viewUrl:
        description: ""
        type: string
    description:
      "The request body for the [EnvelopeViews: createCorrect](/docs/esign-rest-api/reference/envelopes/envelopeviews/createcorrect/)
      method."
    x-ds-definition-name: correctViewRequest
    x-ms-summary:
      "The request body for the [EnvelopeViews: createCorrect](/docs/esign-rest-api/reference/envelopes/envelopeviews/createcorrect/)
      method."
  country:
    type: object
    properties:
      isoCode:
        description: ""
        type: string
      name:
        description: ""
        type: string
      provinces:
        description: ""
        type: array
        items:
          "$ref": "#/definitions/province"
      provinceValidated:
        description: ""
        type: string
    x-ds-definition-name: country
    description: ""
    x-ms-summary: ""
  creditCardInformation:
    type: object
    properties:
      address:
        "$ref": "#/definitions/addressInformation"
        description:
          A complex element containing the credit card billing address
          information.
      cardLastDigits:
        description: ""
        type: string
      cardNumber:
        description: The credit card number.
        type: string
      cardType:
        description:
          "The type of credit card. Valid values are: \n\n- `visa` \n-
          `mastercard` \n- `amex`"
        type: string
      cvNumber:
        description:
          The 3 or 4-digit card verification value (CVV) number associated
          with the credit card. CVV numbers are also referred to as card security
          codes (CSCs).
        type: string
      expirationMonth:
        description:
          The month that the credit card expires, expressed as a number
          from 1 to 12.
        type: string
      expirationYear:
        description: The year in which the credit card expires, in 4-digit format.
        type: string
      nameOnCard:
        description: The exact name as it appears on the credit card.
        type: string
      tokenizedCard:
        description: ""
        type: string
    description:
      This object contains information about a credit card that is associated
      with an account.
    x-ds-definition-name: creditCardInformation
    x-ms-summary:
      This object contains information about a credit card that is associated
      with an account.
  creditCardTypes:
    type: object
    properties:
      cardTypes:
        description: An array containing supported credit card types.
        type: array
        items:
          type: string
    x-ds-definition-name: creditCardTypes
    description: ""
    x-ms-summary: ""
  currencyFeatureSetPrice:
    type: object
    properties:
      currencyCode:
        description: "Specifies the alternate ISO currency code for the account. "
        type: string
      currencySymbol:
        description: Reserved for DocuSign.
        type: string
      envelopeFee:
        description: Reserved for DocuSign.
        type: string
      fixedFee:
        description: Reserved for DocuSign.
        type: string
      seatFee:
        description: Reserved for DocuSign.
        type: string
    description:
      Information about the price and currency associated with the feature
      set. Reserved for internal DocuSign use only.
    x-ds-definition-name: currencyFeatureSetPrice
    x-ms-summary:
      Information about the price and currency associated with the feature
      set. Reserved for internal DocuSign use only.
  currencyPlanPrice:
    type: object
    properties:
      currencyCode:
        description:
          Specifies the [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217)
          currency code for the account.
        type: string
      currencySymbol:
        description: |
          Specifies the currency symbol.
          Valid values:

          - `AED` <br>  "د.إ"
          - `AFN` <br>  "؋"
          - `ALL` <br>  "L"
          - `AMD` <br>  "֏"
          - `ANG` <br>  "ƒ"
          - `AOA` <br>  "Kz"
          - `ARS` <br>  "$"
          - `AUD` <br>  "$"
          - `AWG` <br>  "ƒ"
          - `AZN` <br>  "₼"
          - `BAM` <br>  "KM"
          - `BBD` <br>  "$"
          - `BDT` <br>  "৳"
          - `BGN` <br>  "лв"
          - `BHD` <br>  ".د.ب"
          - `BIF` <br>  "FBu"
          - `BMD` <br>  "$"
          - `BND` <br>  "$"
          - `BOB` <br>  "$b"
          - `BOV` <br>  "BOV"
          - `BRL` <br>  "R$"
          - `BSD` <br>  "$"
          - `BTN` <br>  "Nu."
          - `BWP` <br>  "P"
          - `BYN` <br>  "Br"
          - `BYR` <br>  "Br"
          - `BZD` <br>  "BZ$"
          - `CAD` <br>  "$"
          - `CDF` <br>  "FC"
          - `CHE` <br>  "CHE"
          - `CHF` <br>  "CHF"
          - `CHW` <br>  "CHW"
          - `CLF` <br>  "CLF"
          - `CLP` <br>  "$"
          - `CNY` <br>  "¥"
          - `COP` <br>  "$"
          - `COU` <br>  "COU"
          - `CRC` <br>  "₡"
          - `CUC` <br>  "$"
          - `CUP` <br>  "₱"
          - `CVE` <br>  "$"
          - `CZK` <br>  "Kč"
          - `DJF` <br>  "Fdj"
          - `DKK` <br>  "kr"
          - `DOP` <br>  "RD$"
          - `DZD` <br>  "دج"
          - `EGP` <br>  "£"
          - `ERN` <br>  "Nfk"
          - `ETB` <br>  "Br"
          - `EUR` <br>  "€"
          - `FJD` <br>  "$"
          - `FKP` <br>  "£"
          - `GBP` <br>  "£"
          - `GEL` <br>  "₾"
          - `GHS` <br>  "GH₵"
          - `GIP` <br>  "£"
          - `GMD` <br>  "D"
          - `GNF` <br>  "FG"
          - `GTQ` <br>  "Q"
          - `GYD` <br>  "$"
          - `HKD` <br>  "$"
          - `HNL` <br>  "L"
          - `HRK` <br>  "kn"
          - `HTG` <br>  "G"
          - `HUF` <br>  "Ft"
          - `IDR` <br>  "Rp"
          - `ILS` <br>  "₪"
          - `INR` <br>  "₹"
          - `IQD` <br>  "ع.د"
          - `IRR` <br>  "﷼"
          - `ISK` <br>  "kr"
          - `JMD` <br>  "J$"
          - `JOD` <br>  "JD"
          - `JPY` <br>  "¥"
          - `KES` <br>  "KSh"
          - `KGS` <br>  "лв"
          - `KHR` <br>  "៛"
          - `KMF` <br>  "CF"
          - `KPW` <br>  "₩"
          - `KRW` <br>  "₩"
          - `KWD` <br>  "KD"
          - `KYD` <br>  "$"
          - `KZT` <br>  "₸"
          - `LAK` <br>  "₭"
          - `LBP` <br>  "£"
          - `LKR` <br>  "₨"
          - `LRD` <br>  "$"
          - `LSL` <br>  "M"
          - `LYD` <br>  "LD"
          - `MAD` <br>  "MAD"
          - `MDL` <br>  "lei"
          - `MGA` <br>  "Ar"
          - `MKD` <br>  "ден"
          - `MMK` <br>  "K"
          - `MNT` <br>  "₮"
          - `MOP` <br>  "MOP$"
          - `MRO` <br>  "UM"
          - `MUR` <br>  "₨"
          - `MVR` <br>  "Rf"
          - `MWK` <br>  "MK"
          - `MXN` <br>  "$"
          - `MXV` <br>  "MXV"
          - `MYR` <br>  "RM"
          - `MZN` <br>  "MT"
          - `NAD` <br>  "$"
          - `NGN` <br>  "₦"
          - `NIO` <br>  "C$"
          - `NOK` <br>  "kr"
          - `NPR` <br>  "₨"
          - `NZD` <br>  "$"
          - `OMR` <br>  "﷼"
          - `PAB` <br>  "B/."
          - `PEN` <br>  "S/."
          - `PGK` <br>  "K"
          - `PHP` <br>  "₱"
          - `PKR` <br>  "₨"
          - `PLN` <br>  "zł"
          - `PYG` <br>  "Gs"
          - `QAR` <br>  "﷼"
          - `RON` <br>  "lei"
          - `RSD` <br>  "Дин."
          - `RUB` <br>  "₽"
          - `RWF` <br>  "R₣"
          - `SAR` <br>  "﷼"
          - `SBD` <br>  "$"
          - `SCR` <br>  "₨"
          - `SDG` <br>  "ج.س."
          - `SEK` <br>  "kr"
          - `SGD` <br>  "S$"
          - `SHP` <br>  "£"
          - `SLL` <br>  "Le"
          - `SOS` <br>  "S"
          - `SRD` <br>  "$"
          - `SSP` <br>  "£"
          - `STD` <br>  "Db"
          - `SVC` <br>  "$"
          - `SYP` <br>  "£"
          - `SZL` <br>  "E"
          - `THB` <br>  "฿"
          - `TJS` <br>  "SM"
          - `TMT` <br>  "T"
          - `TND` <br>  "د.ت"
          - `TOP` <br>  "T$"
          - `TRY` <br>  "₺"
          - `TTD` <br>  "TT$"
          - `TWD` <br>  "NT$"
          - `TZS` <br>  "TSh"
          - `UAH` <br>  "₴"
          - `UGX` <br>  "USh"
          - `USD` <br>  "$"
          - `USN` <br>  "$"
          - `UYI` <br>  "UYI"
          - `UYU` <br>  "$U"
          - `UZS` <br>  "лв"
          - `VEF` <br>  "Bs"
          - `VND` <br>  "₫"
          - `VUV` <br>  "VT"
          - `WST` <br>  "WS$"
          - `XAF` <br>  "FCFA"
          - `XAG` <br>  "XAG"  Silver
          - `XAU` <br>  "XAU"  Gold
          - `XBA` <br>  "XBA"  Bond Markets Units European Composite Unit (EURCO)
          - `XBB` <br>  "XBB"  European Monetary Unit (E.M.U.-6)
          - `XBC` <br>  "XBC"  European Unit of Account 9(E.U.A.-9)
          - `XBD` <br>  "XBD"  European Unit of Account 17(E.U.A.-17)
          - `XCD` <br>  "$"
          - `XDR` <br>  "XDR" }` <br>  // Special Drawing Rights (SDRs)` <br>  units of account for IMF
          - `XOF` <br>  "CFA"
          - `XPD` <br>  "XPD"  Palladium
          - `XPF` <br>  "₣"
          - `XPT` <br>  "XPT"  Platinum
          - `XSU` <br>  "Sucre"
          - `XTS` <br>  "XTS" Reserved for testing purposes
          - `XUA` <br>  "XUA"
          - `XXX` <br>  "XXX" Denotes transaction involving no currency
          - `YER` <br>  "﷼"
          - `ZAR` <br>  "R"
          - `ZMW` <br>  "ZK"
          - `ZWL` <br>  "$"
        type: string
      perSeatPrice:
        description: |-
          The per-seat price associated with the plan.

          Example: `"456.0000"`
        type: string
      supportedCardTypes:
        "$ref": "#/definitions/creditCardTypes"
        description:
          "A simple type enumeration of the language used. The supported
          languages, with the language value shown in parenthesis, are: Arabic (ar),
          Bahasa Indonesia (id), Bahasa Melayu (ms) Bulgarian (bg), Czech (cs), Chinese
          Simplified (zh_CN), Chinese Traditional (zh_TW), Croatian (hr), Danish (da),
          Dutch (nl), English US (en), English UK (en_GB), Estonian (et), Farsi (fa),
          Finnish (fi), French (fr), French Canada (fr_CA), German (de), Greek (el),
          Hebrew (he), Hindi (hi), Hungarian (hu), Italian (it), Japanese (ja), Korean
          (ko), Latvian (lv), Lithuanian (lt), Norwegian (no), Polish (pl), Portuguese
          (pt), Portuguese Brazil (pt_BR), Romanian (ro),Russian (ru), Serbian (sr),
          Slovak (sk), Slovenian (sl), Spanish (es),Spanish Latin America (es_MX),
          Swedish (sv), Thai (th), Turkish (tr), Ukrainian (uk) and Vietnamese (vi)."
      supportIncidentFee:
        description: |-
          The support incident fee charged for each support incident.

          Example: `"$0.00"`
        type: string
      supportPlanFee:
        description: |-
          The support plan fee charged for this plan.

          Example: `"$0.00"`
        type: string
    x-ds-definition-name: currencyPlanPrice
    description: ""
    x-ms-summary: ""
  customField:
    type: object
    properties:
      customFieldType:
        description: |-
          The type of custom field. Valid values are:

          - `text` (default)
          - `list`
        type: string
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      fieldId:
        description: The ID of the custom field.
        type: string
      listItems:
        description:
          "For a list custom field, this is an array of strings that represent
          the items in a list. \n\nMaximum Length: 2,000 characters."
        type: array
        items:
          type: string
      name:
        description: The name of the custom field.
        type: string
      required:
        description: When **true,** the signer must complete the custom field.
        type: string
      show:
        description:
          When **true,** the custom field displays at the top of the Certificate
          of Completion.
        type: string
      value:
        description:
          "Specifies the value of the custom field. \n\nMaximum Length:
          2,000 characters."
        type: string
    description: This object provides details about a custom field.
    x-ds-definition-name: customField
    x-ms-summary: This object provides details about a custom field.
  customFields:
    description: Contains information about custom fields.
    type: object
    properties:
      listCustomFields:
        description: An array of list custom fields.
        type: array
        items:
          "$ref": "#/definitions/listCustomField"
      textCustomFields:
        description: An array of text custom fields.
        type: array
        items:
          "$ref": "#/definitions/textCustomField"
    x-ds-definition-name: customFields
    x-ms-summary: Contains information about custom fields.
  customFieldsEnvelope:
    type: object
    properties:
      listCustomFields:
        description: An array of list custom fields.
        type: array
        items:
          "$ref": "#/definitions/listCustomField"
      textCustomFields:
        description: An array of text custom fields.
        type: array
        items:
          "$ref": "#/definitions/textCustomField"
    x-ds-definition-name: customFieldsEnvelope
    description: ""
    x-ms-summary: ""
  customSettingsInformation:
    type: object
    properties:
      customSettings:
        description: The name/value pair information for the user custom setting.
        type: array
        items:
          "$ref": "#/definitions/nameValue"
    x-ds-definition-name: customSettingsInformation
    description: ""
    x-ms-summary: ""
  date:
    type: object
    properties:
      anchorAllowWhiteSpaceInCharacters:
        description: |
          When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.

          First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.

          Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.

          The default value is **true.**
        type: string
      anchorAllowWhiteSpaceInCharactersMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorAllowWhiteSpaceInCharacters`
          property is editable.
      anchorCaseSensitive:
        description: |-
          This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**

          For example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.

          This functionality uses the following rules:

          - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:

            $~><|^+=

            For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`

          - Strings embedded in other strings are ignored during the matching process.

          - In words that have dashes, the parts separated by dashes are treated as distinct words.

            Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**

          - Letters with accent marks are treated as distinct characters from their unaccented counterparts.

          - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.

            Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.

          - Unlike punctuation, numbers are not ignored when finding anchor words.

            Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).

          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorCaseSensitiveMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorCaseSensitive` property
          is editable.
      anchorHorizontalAlignment:
        description: |
          This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :

          - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.
          - `right`: Aligns the tab’s left side with the last character of the matching anchor word.

          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorHorizontalAlignmentMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorHorizontalAlignment`
          property is editable.
      anchorIgnoreIfNotPresent:
        description:
          When **true,** this tab is ignored if the `anchorString` is not
          found in the document.
        type: string
      anchorIgnoreIfNotPresentMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorIgnoreIfNotPresent`
          property is editable.
      anchorMatchWholeWord:
        description: |
          When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**

          For example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.

          This functionality uses the following rules:

          - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:

            $~><|^+=

            For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`

          - Strings embedded in other strings are ignored during the matching process.

          - In words that have dashes, the parts separated by dashes are treated as distinct words.

            Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**

          - Letters with accent marks are treated as distinct characters from their unaccented counterparts.

          - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.

            Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.

          - Unlike punctuation, numbers are not ignored when finding anchor words.

            Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).


          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorMatchWholeWordMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorMatchWholeWord` property
          is editable.
      anchorString:
        description:
          Specifies the string to find in the document and use as the basis
          for tab placement.
        type: string
      anchorStringMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorString` property is
          editable.
      anchorTabProcessorVersion:
        description: Reserved for DocuSign.
        type: string
      anchorTabProcessorVersionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Reserved for DocuSign.
      anchorUnits:
        description: |
          Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:

          - `pixels` (default)
          - `inches`
          - `mms`
          - `cms`
        type: string
      anchorUnitsMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorUnits` property is
          editable.
      anchorXOffset:
        description:
          "Specifies the X axis location of the tab in `anchorUnits` relative
          to the `anchorString`.

          "
        type: string
      anchorXOffsetMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorXOffset` property
          is editable.
      anchorYOffset:
        description:
          "Specifies the Y axis location of the tab in `anchorUnits` relative
          to the `anchorString`.

          "
        type: string
      anchorYOffsetMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorYOffset` property
          is editable.
      bold:
        description: When **true,** the information in the tab is bold.
        type: string
      boldMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `bold` property is editable.
      caption:
        description: ""
        type: string
      captionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `caption` property is editable.
      concealValueOnDocument:
        description: |-
          When **true,** the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.

          When an envelope is completed the information is only available to the sender through the Form Data link in the DocuSign Console. The information on the downloaded document remains masked by asterisks.

          This setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.
        type: string
      concealValueOnDocumentMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `concealValueOnDocument`
          property is editable.
      conditionalParentLabel:
        description:
          For conditional fields this is the `tabLabel` of the parent tab
          that controls this tab's visibility.
        type: string
      conditionalParentLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `conditionalParentLabel`
          property is editable.
      conditionalParentValue:
        description: |
          For conditional fields, this is the value of the parent tab that controls the tab's visibility.

          If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use "on" as the value to show that the parent tab is active.
        type: string
      conditionalParentValueMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `conditionalParentValue`
          property is editable.
      customTabId:
        description:
          The DocuSign-generated custom tab ID for the custom tab to be
          applied. This can only be used when adding new tabs for a recipient. When
          used, the new tab inherits all the custom tab properties.
        type: string
      customTabIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `customTabId` property is
          editable.
      disableAutoSize:
        description:
          When **true,** disables the auto sizing of single line text boxes
          in the signing screen when the signer enters data. If disabled users will
          only be able enter as much data as the text box can hold. By default this
          is false. This property only affects single line text boxes.
        type: string
      disableAutoSizeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `disableAutoSize` property
          is editable.
      documentId:
        description:
          Specifies the document ID number that the tab is placed on. This
          must refer to an existing Document's ID attribute.
        type: string
      documentIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `documentId` property is
          editable.
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      font:
        description: |
          The font to be used for the tab value. Supported fonts include:

          - Default
          - Arial
          - ArialNarrow
          - Calibri
          - CourierNew
          - Garamond
          - Georgia
          - Helvetica
          - LucidaConsole
          - MSGothic
          - MSMincho
          - OCR-A
          - Tahoma
          - TimesNewRoman
          - Trebuchet
          - Verdana
        type: string
      fontColor:
        description:
          "The font color to use for the information in the tab. Possible
          values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n-
          Gold\n- Green\n- NavyBlue\n- Purple\n- White\n"
        type: string
      fontColorMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `fontColor` property is editable.
      fontMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `font` property is editable.
      fontSize:
        description: |-
          The font size used for the information in the tab. Possible values are:

          - Size7
          - Size8
          - Size9
          - Size10
          - Size11
          - Size12
          - Size14
          - Size16
          - Size18
          - Size20
          - Size22
          - Size24
          - Size26
          - Size28
          - Size36
          - Size48
          - Size72
        type: string
      fontSizeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `fontSize` property is editable.
      formOrder:
        description:
          An integer specifying the order in which the guided form HTML
          should render. The order is relative to the `formPageLabel`, the group by
          which to place the guided form HTML block.
        type: string
      formOrderMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `formOrder` property is editable.
      formPageLabel:
        description:
          A string specifying the group in which to place the guided form
          HTML. Each group displays as a separate guided forms page in the signing
          experience.
        type: string
      formPageLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `formPageLabel` property
          is editable.
      formPageNumber:
        description:
          An integer specifying the order in which to present the guided
          form pages.
        type: string
      formPageNumberMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `fromPageNumber` property
          is editable.
      height:
        description: |-
          The height of the tab in pixels.
          Must be an integer.
        type: string
      heightMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `height` property is editable.
      italic:
        description: When **true,** the information in the tab is italic.
        type: string
      italicMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `italic` property is editable.
      localePolicy:
        "$ref": "#/definitions/localePolicyTab"
        description: Locale-specific settings.
      locked:
        description:
          When **true,** the signer cannot change the data of the custom
          tab.
        type: string
      lockedMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `locked` property is editable.
      maxLength:
        description:
          An optional value that describes the maximum length of the property
          when the property is a string.
        type: string
      maxLengthMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `maxLength` property is editable.
      mergeField:
        "$ref": "#/definitions/mergeField"
        description:
          Contains the information necessary to map the tab to a field
          in SalesForce.
      mergeFieldXml:
        description: Reserved for DocuSign.
        type: string
      name:
        description: |-
          The name of the tab. For example, `Sign Here` or `Initial Here`.

          If the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.
        type: string
      nameMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `name` property is editable.
          This property is read-only.
      originalValue:
        description: "The initial value of the tab. "
        type: string
      originalValueMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `originalValue` property
          is editable.
      pageNumber:
        description: |-
          The page number on which the tab is located.
          For supplemental documents, this value must be `1`.
        type: string
      pageNumberMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `pageNumber` property is
          editable.
      recipientId:
        description:
          "The ID of the recipient to whom the tab will be assigned. This
          value should match the `recipientId` defined in the recipient object.

          "
        type: string
      recipientIdGuid:
        description:
          The globally-unique identifier (GUID) for a specific recipient
          on a specific envelope. If the same recipient is associated with multiple
          envelopes, they will have a different GUID for each one. This property is
          read-only.
        type: string
      recipientIdGuidMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `recipientIdGuid` property
          is editable.
      recipientIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `recipientId` property is
          editable.
      requireAll:
        description:
          "When **true** and shared is true, information must be entered
          in this field to complete the envelope. "
        type: string
      requireAllMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `requireAll` property is
          editable.
      required:
        description: When **true,** the signer is required to fill out this tab.
        type: string
      requiredMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `required` property is editable.
      requireInitialOnSharedChange:
        description:
          Optional element for field markup. When **true,** the signer
          is required to initial when they modify a shared field.
        type: string
      requireInitialOnSharedChangeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `requireInitialOnSharedChange`
          property is editable.
      senderRequired:
        description:
          "When **true,** the sender must populate the tab before an envelope
          can be sent using the template. \n\nThis value tab can only be changed by
          modifying (PUT) the template. \n\nTabs with a `senderRequired` value of
          true cannot be deleted from an envelope."
        type: string
      senderRequiredMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `senderRequired` property
          is editable.
      shared:
        description: When **true,** this custom tab is shared.
        type: string
      sharedMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `shared` property is editable.
      shareToRecipients:
        description: Reserved for DocuSign.
        type: string
      shareToRecipientsMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Reserved for DocuSign.
      smartContractInformation:
        "$ref": "#/definitions/smartContractInformation"
        description: Reserved for DocuSign.
      source:
        description: Reserved for DocuSign.
        type: string
      status:
        description: |
          The status of the tab. Possible values are:

          - `active`: The tab is active, but the recipient has not yet interacted with it.
          - `signed`: The recipient signed the tab.
          - `declined`: The recipient declined the envelope.
          - `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).
        type: string
      statusMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `status` property is editable.
      tabGroupLabels:
        description: |-
          An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.

          To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
        type: array
        items:
          type: string
      tabGroupLabelsMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `tabGroupLabels` property
          is editable.
      tabId:
        description: The unique identifier for the tab.
        type: string
      tabIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabId` property is editable.
      tabLabel:
        description: |
          The label associated with the tab. This value may be an empty string.
          If no value is provided, the tab type is used as the value.

          Maximum Length: 500 characters.
        type: string
      tabLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabLabel` property is editable.
      tabOrder:
        description: |-
          A positive integer that sets the order the tab is navigated to during signing.

          Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
        type: string
      tabOrderMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabOrder` property is editable.
      tabType:
        description: Indicates the type of tab (for example, `signHere` or `initialHere`).
        type: string
      tabTypeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabType` property is editable.
      templateLocked:
        description:
          "When **true,** the sender cannot change any attributes of the
          recipient. Used only when working with template recipients. "
        type: string
      templateLockedMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `templateLocked` property
          is editable.
      templateRequired:
        description:
          When **true,** the sender may not remove the recipient. Used
          only when working with template recipients.
        type: string
      templateRequiredMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `templateRequired` property
          is editable.
      tooltip:
        description:
          "The text of a tooltip that appears when a user hovers over a
          form field or tab.

          "
        type: string
      toolTipMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          "Metadata that indicates whether the `toolTip` property is editable.

          "
      underline:
        description: When **true,** the information in the tab is underlined.
        type: string
      underlineMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `underline` property is editable.
      validationMessage:
        description:
          The message displayed if the custom tab fails input validation
          (either custom of embedded).
        type: string
      validationMessageMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `validationMessage` property
          is editable.
      validationPattern:
        description: A regular expression used to validate input for the tab.
        type: string
      validationPatternMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `validationPattern` property
          is editable.
      value:
        description: "Specifies the value of the tab. "
        type: string
      valueMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `value` property is editable.
      width:
        description: |-
          The width of the tab in pixels.
          Must be an integer.
        type: string
      widthMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `width` property is editable.
      xPosition:
        description: |
          This property indicates the horizontal offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. Must be an integer. May be zero.

          To improve the tab's position on the document,
          DocuSign recommends
          adjusting `xPosition`
          and `yPosition`
          coordinates
          by (-3, -2)
        type: string
      xPositionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `xPosition` property is editable.
      yPosition:
        description: |
          This property indicates the vertical offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. Must be an integer. May be zero.

          To improve the tab's position on the document,
          DocuSign recommends
          adjusting `xPosition`
          and `yPosition`
          coordinates
          by (-3, -2)
        type: string
      yPositionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `yPosition` property is editable.
    description: |
      A tab that allows the recipient to enter a date. Date tabs
      are one-line fields that allow date information to be
      entered in any format. The tooltip for this tab recommends
      entering the date as MM/DD/YYYY, but this is not enforced.
      The format entered by the signer is retained. If you need a
      particular date format enforced, DocuSign recommends using a
      Text tab with a validation pattern and a validation message
      to enforce the format.
    x-ds-definition-name: date
    x-ms-summary: |
      A tab that allows the recipient to enter a date. Date tabs
      are one-line fields that allow date information to be
      entered in any format. The tooltip for this tab recommends
      entering the date as MM/DD/YYYY, but this is not enforced.
      The format entered by the signer is retained. If you need a
      particular date format enforced, DocuSign recommends using a
      Text tab with a validation pattern and a validation message
      to enforce the format.
  dateSigned:
    type: object
    properties:
      anchorAllowWhiteSpaceInCharacters:
        description: |
          When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.

          First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.

          Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.

          The default value is **true.**
        type: string
      anchorAllowWhiteSpaceInCharactersMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorAllowWhiteSpaceInCharacters`
          property is editable.
      anchorCaseSensitive:
        description: |-
          This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**

          For example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.

          This functionality uses the following rules:

          - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:

            $~><|^+=

            For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`

          - Strings embedded in other strings are ignored during the matching process.

          - In words that have dashes, the parts separated by dashes are treated as distinct words.

            Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**

          - Letters with accent marks are treated as distinct characters from their unaccented counterparts.

          - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.

            Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.

          - Unlike punctuation, numbers are not ignored when finding anchor words.

            Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).

          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorCaseSensitiveMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorCaseSensitive` property
          is editable.
      anchorHorizontalAlignment:
        description: |
          This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :

          - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.
          - `right`: Aligns the tab’s left side with the last character of the matching anchor word.

          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorHorizontalAlignmentMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorHorizontalAlignment`
          property is editable.
      anchorIgnoreIfNotPresent:
        description:
          When **true,** this tab is ignored if the `anchorString` is not
          found in the document.
        type: string
      anchorIgnoreIfNotPresentMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorIgnoreIfNotPresent`
          property is editable.
      anchorMatchWholeWord:
        description: |
          When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**

          For example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.

          This functionality uses the following rules:

          - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:

            $~><|^+=

            For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`

          - Strings embedded in other strings are ignored during the matching process.

          - In words that have dashes, the parts separated by dashes are treated as distinct words.

            Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**

          - Letters with accent marks are treated as distinct characters from their unaccented counterparts.

          - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.

            Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.

          - Unlike punctuation, numbers are not ignored when finding anchor words.

            Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).


          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorMatchWholeWordMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorMatchWholeWord` property
          is editable.
      anchorString:
        description:
          Specifies the string to find in the document and use as the basis
          for tab placement.
        type: string
      anchorStringMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorString` property is
          editable.
      anchorTabProcessorVersion:
        description: Reserved for DocuSign.
        type: string
      anchorTabProcessorVersionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Reserved for DocuSign.
      anchorUnits:
        description: |
          Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:

          - `pixels` (default)
          - `inches`
          - `mms`
          - `cms`
        type: string
      anchorUnitsMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorUnits` property is
          editable.
      anchorXOffset:
        description:
          "Specifies the X axis location of the tab in `anchorUnits` relative
          to the `anchorString`.

          "
        type: string
      anchorXOffsetMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorXOffset` property
          is editable.
      anchorYOffset:
        description:
          "Specifies the Y axis location of the tab in `anchorUnits` relative
          to the `anchorString`.

          "
        type: string
      anchorYOffsetMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorYOffset` property
          is editable.
      bold:
        description: When **true,** the information in the tab is bold.
        type: string
      boldMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `bold` property is editable.
      caption:
        description: ""
        type: string
      captionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `caption` property is editable.
      conditionalParentLabel:
        description:
          For conditional fields this is the `tabLabel` of the parent tab
          that controls this tab's visibility.
        type: string
      conditionalParentLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `conditionalParentLabel`
          property is editable.
      conditionalParentValue:
        description: |
          For conditional fields, this is the value of the parent tab that controls the tab's visibility.

          If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use "on" as the value to show that the parent tab is active.
        type: string
      conditionalParentValueMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `conditionalParentValue`
          property is editable.
      customTabId:
        description:
          The DocuSign generated custom tab ID for the custom tab to be
          applied. This can only be used when adding new tabs for a recipient. When
          used, the new tab inherits all the custom tab properties.
        type: string
      customTabIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `customTabId` property is
          editable.
      documentId:
        description:
          Specifies the document ID number that the tab is placed on. This
          must refer to an existing Document's ID attribute.
        type: string
      documentIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `documentId` property is
          editable.
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      font:
        description: |
          The font to be used for the tab value. Supported fonts include:

          - Default
          - Arial
          - ArialNarrow
          - Calibri
          - CourierNew
          - Garamond
          - Georgia
          - Helvetica
          - LucidaConsole
          - MSGothic
          - MSMincho
          - OCR-A
          - Tahoma
          - TimesNewRoman
          - Trebuchet
          - Verdana
        type: string
      fontColor:
        description:
          "The font color to use for the information in the tab. Possible
          values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n-
          Gold\n- Green\n- NavyBlue\n- Purple\n- White\n"
        type: string
      fontColorMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `fontColor` property is editable.
      fontMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `font` property is editable.
      fontSize:
        description: |-
          The font size used for the information in the tab. Possible values are:

          - Size7
          - Size8
          - Size9
          - Size10
          - Size11
          - Size12
          - Size14
          - Size16
          - Size18
          - Size20
          - Size22
          - Size24
          - Size26
          - Size28
          - Size36
          - Size48
          - Size72
        type: string
      fontSizeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `fontSize` property is editable.
      formOrder:
        description:
          An integer specifying the order in which the guided form HTML
          should render. The order is relative to the `formPageLabel`, the group by
          which to place the guided form HTML block.
        type: string
      formOrderMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `formOrder` property is editable.
      formPageLabel:
        description:
          A string specifying the group in which to place the guided form
          HTML. Each group displays as a separate guided forms page in the signing
          experience.
        type: string
      formPageLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `formPageLabel` property
          is editable.
      formPageNumber:
        description:
          An integer specifying the order in which to present the guided
          form pages.
        type: string
      formPageNumberMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `fromPageNumber` property
          is editable.
      height:
        description: |-
          The height of the tab in pixels.
          Must be an integer.
        type: string
      heightMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `height` property is editable.
      italic:
        description: When **true,** the information in the tab is italic.
        type: string
      italicMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `italic` property is editable.
      localePolicy:
        "$ref": "#/definitions/localePolicyTab"
        description: Locale-specific settings.
      mergeField:
        "$ref": "#/definitions/mergeField"
        description:
          Contains the information necessary to map the tab to a field
          in SalesForce.
      mergeFieldXml:
        description: Reserved for DocuSign.
        type: string
      name:
        description: |-
          The name of the tab. For example, `Sign Here` or `Initial Here`.

          If the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.
        type: string
      nameMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `name` property is editable.
          This property is read-only.
      pageNumber:
        description: |-
          The page number on which the tab is located.
          For supplemental documents, this value must be `1`.
        type: string
      pageNumberMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `pageNumber` property is
          editable.
      recipientId:
        description:
          "The ID of the recipient to whom the tab will be assigned. This
          value should match the `recipientId` defined in the recipient object.

          "
        type: string
      recipientIdGuid:
        description:
          The globally-unique identifier (GUID) for a specific recipient
          on a specific envelope. If the same recipient is associated with multiple
          envelopes, they will have a different GUID for each one. This property is
          read-only.
        type: string
      recipientIdGuidMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `recipientIdGuid` property
          is editable.
      recipientIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `recipientId` property is
          editable.
      smartContractInformation:
        "$ref": "#/definitions/smartContractInformation"
        description: Reserved for DocuSign.
      source:
        description: Reserved for DocuSign.
        type: string
      status:
        description: |-
          The status of the tab. Possible values are:

          - `active`: The tab is active, but the recipient has not yet interacted with it.
          - `signed`: The recipient signed the tab.
          - `declined`: The recipient declined the envelope.
          - `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).
        type: string
      statusMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `status` property is editable.
      tabGroupLabels:
        description: |-
          An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.

          To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
        type: array
        items:
          type: string
      tabGroupLabelsMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `tabGroupLabels` property
          is editable.
      tabId:
        description: The unique identifier for the tab.
        type: string
      tabIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabId` property is editable.
      tabLabel:
        description: |
          The label associated with the tab. This value may be an empty string.
          If no value is provided, the tab type is used as the value.

          Maximum Length: 500 characters.
        type: string
      tabLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabLabel` property is editable.
      tabOrder:
        description: |-
          A positive integer that sets the order the tab is navigated to during signing.

          Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
        type: string
      tabOrderMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabOrder` property is editable.
      tabType:
        description: Indicates the type of tab (for example, `signHere` or `initialHere`).
        type: string
      tabTypeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabType` property is editable.
      templateLocked:
        description:
          "When **true,** the sender cannot change any attributes of the
          recipient. Used only when working with template recipients. "
        type: string
      templateLockedMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `templateLocked` property
          is editable.
      templateRequired:
        description:
          When **true,** the sender may not remove the recipient. Used
          only when working with template recipients.
        type: string
      templateRequiredMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `templateRequired` property
          is editable.
      tooltip:
        description: |
          **Note:** Date Signed tabs never display this tooltip in the signing interface.

          Although you can technically set a value via the API for this tab,
          it will not be displayed to the recipient.
        type: string
      toolTipMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          "Metadata that indicates whether the `toolTip` property is editable.

          "
      underline:
        description: When **true,** the information in the tab is underlined.
        type: string
      underlineMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `underline` property is editable.
      value:
        description: "Specifies the value of the tab. "
        type: string
      valueMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `value` property is editable.
      width:
        description: |-
          The width of the tab in pixels.
          Must be an integer.
        type: string
      widthMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `width` property is editable.
      xPosition:
        description: |
          This property indicates the horizontal offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. Must be an integer. May be zero.

          To improve the tab's position on the document,
          DocuSign recommends
          adjusting `xPosition`
          and `yPosition`
          coordinates
          by (-3, -2)
        type: string
      xPositionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `xPosition` property is editable.
      yPosition:
        description: |
          This property indicates the vertical offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. Must be an integer. May be zero.

          To improve the tab's position on the document,
          DocuSign recommends
          adjusting `xPosition`
          and `yPosition`
          coordinates
          by (-3, -2)
        type: string
      yPositionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `yPosition` property is editable.
    description: |
      A tab that displays the date that the recipient signed the
      document.
    x-ds-definition-name: dateSigned
    x-ms-summary: |
      A tab that displays the date that the recipient signed the
      document.
  dateStampProperties:
    type: object
    properties:
      dateAreaHeight:
        description: The height of the rectangle.
        type: string
      dateAreaWidth:
        description: The width of the rectangle.
        type: string
      dateAreaX:
        description: The X axis position of the top-left corner.
        type: string
      dateAreaY:
        description: The Y axis position of the top-left corner.
        type: string
    description: |-
      Specifies the area in which a date stamp is placed. This parameter uses pixel positioning to draw a rectangle at the center of the stamp area. The stamp is superimposed on top of this central area.

      This property contains the following information about the central rectangle:

      - `DateAreaX`: The X axis position of the top-left corner.
      - `DateAreaY`: The Y axis position of the top-left corner.
      - `DateAreaWidth`: The width of the rectangle.
      - `DateAreaHeight`: The height of the rectangle.
    x-ds-definition-name: dateStampProperties
    x-ms-summary: |-
      Specifies the area in which a date stamp is placed. This parameter uses pixel positioning to draw a rectangle at the center of the stamp area. The stamp is superimposed on top of this central area.

      This property contains the following information about the central rectangle:

      - `DateAreaX`: The X axis position of the top-left corner.
      - `DateAreaY`: The Y axis position of the top-left corner.
      - `DateAreaWidth`: The width of the rectangle.
      - `DateAreaHeight`: The height of the rectangle.
  decline:
    type: object
    properties:
      anchorAllowWhiteSpaceInCharacters:
        description: |
          When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.

          First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.

          Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.

          The default value is **true.**
        type: string
      anchorAllowWhiteSpaceInCharactersMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorAllowWhiteSpaceInCharacters`
          property is editable.
      anchorCaseSensitive:
        description: |-
          This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**

          For example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.

          This functionality uses the following rules:

          - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:

            $~><|^+=

            For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`

          - Strings embedded in other strings are ignored during the matching process.

          - In words that have dashes, the parts separated by dashes are treated as distinct words.

            Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**

          - Letters with accent marks are treated as distinct characters from their unaccented counterparts.

          - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.

            Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.

          - Unlike punctuation, numbers are not ignored when finding anchor words.

            Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).

          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorCaseSensitiveMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorCaseSensitive` property
          is editable.
      anchorHorizontalAlignment:
        description: |
          This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :

          - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.
          - `right`: Aligns the tab’s left side with the last character of the matching anchor word.

          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorHorizontalAlignmentMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorHorizontalAlignment`
          property is editable.
      anchorIgnoreIfNotPresent:
        description:
          When **true,** this tab is ignored if the `anchorString` is not
          found in the document.
        type: string
      anchorIgnoreIfNotPresentMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorIgnoreIfNotPresent`
          property is editable.
      anchorMatchWholeWord:
        description: |
          When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**

          For example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.

          This functionality uses the following rules:

          - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:

            $~><|^+=

            For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`

          - Strings embedded in other strings are ignored during the matching process.

          - In words that have dashes, the parts separated by dashes are treated as distinct words.

            Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**

          - Letters with accent marks are treated as distinct characters from their unaccented counterparts.

          - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.

            Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.

          - Unlike punctuation, numbers are not ignored when finding anchor words.

            Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).


          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorMatchWholeWordMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorMatchWholeWord` property
          is editable.
      anchorString:
        description:
          Specifies the string to find in the document and use as the basis
          for tab placement.
        type: string
      anchorStringMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorString` property is
          editable.
      anchorTabProcessorVersion:
        description: Reserved for DocuSign.
        type: string
      anchorTabProcessorVersionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Reserved for DocuSign.
      anchorUnits:
        description: |
          Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:

          - `pixels` (default)
          - `inches`
          - `mms`
          - `cms`
        type: string
      anchorUnitsMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorUnits` property is
          editable.
      anchorXOffset:
        description:
          "Specifies the X axis location of the tab in `anchorUnits` relative
          to the `anchorString`.

          "
        type: string
      anchorXOffsetMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorXOffset` property
          is editable.
      anchorYOffset:
        description:
          "Specifies the Y axis location of the tab in `anchorUnits` relative
          to the `anchorString`.

          "
        type: string
      anchorYOffsetMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorYOffset` property
          is editable.
      bold:
        description: When **true,** the information in the tab is bold.
        type: string
      boldMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `bold` property is editable.
      buttonText:
        description: " Specifies the decline text displayed in the tab."
        type: string
      buttonTextMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `buttonText` property is
          editable.
      caption:
        description: ""
        type: string
      captionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `caption` property is editable.
      conditionalParentLabel:
        description:
          For conditional fields this is the `tabLabel` of the parent tab
          that controls this tab's visibility.
        type: string
      conditionalParentLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `conditionalParentLabel`
          property is editable.
      conditionalParentValue:
        description: |
          For conditional fields, this is the value of the parent tab that controls the tab's visibility.

          If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use "on" as the value to show that the parent tab is active.
        type: string
      conditionalParentValueMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `conditionalParentValue`
          property is editable.
      customTabId:
        description:
          The DocuSign generated custom tab ID for the custom tab to be
          applied. This can only be used when adding new tabs for a recipient. When
          used, the new tab inherits all the custom tab properties.
        type: string
      customTabIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `customTabId` property is
          editable.
      declineReason:
        description: The reason the recipient declined the document.
        type: string
      declineReasonMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `declineReason` property
          is editable.
      documentId:
        description:
          Specifies the document ID number that the tab is placed on. This
          must refer to an existing Document's ID attribute.
        type: string
      documentIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `documentId` property is
          editable.
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      font:
        description: |
          The font to be used for the tab value. Supported fonts include:

          - Default
          - Arial
          - ArialNarrow
          - Calibri
          - CourierNew
          - Garamond
          - Georgia
          - Helvetica
          - LucidaConsole
          - MSGothic
          - MSMincho
          - OCR-A
          - Tahoma
          - TimesNewRoman
          - Trebuchet
          - Verdana
        type: string
      fontColor:
        description:
          "The font color to use for the information in the tab. Possible
          values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n-
          Gold\n- Green\n- NavyBlue\n- Purple\n- White\n"
        type: string
      fontColorMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `fontColor` property is editable.
      fontMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `font` property is editable.
      fontSize:
        description: |-
          The font size used for the information in the tab. Possible values are:

          - Size7
          - Size8
          - Size9
          - Size10
          - Size11
          - Size12
          - Size14
          - Size16
          - Size18
          - Size20
          - Size22
          - Size24
          - Size26
          - Size28
          - Size36
          - Size48
          - Size72
        type: string
      fontSizeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `fontSize` property is editable.
      formOrder:
        description:
          An integer specifying the order in which the guided form HTML
          should render. The order is relative to the `formPageLabel`, the group by
          which to place the guided form HTML block.
        type: string
      formOrderMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `formOrder` property is editable.
      formPageLabel:
        description:
          A string specifying the group in which to place the guided form
          HTML. Each group displays as a separate guided forms page in the signing
          experience.
        type: string
      formPageLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `formPageLabel` property
          is editable.
      formPageNumber:
        description:
          An integer specifying the order in which to present the guided
          form pages.
        type: string
      formPageNumberMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `fromPageNumber` property
          is editable.
      height:
        description: |-
          The height of the tab in pixels.
          Must be an integer.
        type: string
      heightMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `height` property is editable.
      italic:
        description: When **true,** the information in the tab is italic.
        type: string
      italicMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `italic` property is editable.
      localePolicy:
        "$ref": "#/definitions/localePolicyTab"
        description: Locale-specific settings.
      mergeField:
        "$ref": "#/definitions/mergeField"
        description:
          Contains the information necessary to map the tab to a field
          in SalesForce.
      mergeFieldXml:
        description: Reserved for DocuSign.
        type: string
      pageNumber:
        description: |-
          The page number on which the tab is located.
          For supplemental documents, this value must be `1`.
        type: string
      pageNumberMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `pageNumber` property is
          editable.
      recipientId:
        description:
          "The ID of the recipient to whom the tab will be assigned. This
          value should match the `recipientId` defined in the recipient object.

          "
        type: string
      recipientIdGuid:
        description:
          The globally-unique identifier (GUID) for a specific recipient
          on a specific envelope. If the same recipient is associated with multiple
          envelopes, they will have a different GUID for each one. This property is
          read-only.
        type: string
      recipientIdGuidMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `recipientIdGuid` property
          is editable.
      recipientIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `recipientId` property is
          editable.
      smartContractInformation:
        "$ref": "#/definitions/smartContractInformation"
        description: Reserved for DocuSign.
      source:
        description: Reserved for DocuSign.
        type: string
      status:
        description: |-
          The status of the tab. Possible values are:

          - `active`: The tab is active, but the recipient has not yet interacted with it.
          - `signed`: The recipient signed the tab.
          - `declined`: The recipient declined the envelope.
          - `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).
        type: string
      statusMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `status` property is editable.
      tabGroupLabels:
        description: |-
          An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.

          To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
        type: array
        items:
          type: string
      tabGroupLabelsMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `tabGroupLabels` property
          is editable.
      tabId:
        description: The unique identifier for the tab.
        type: string
      tabIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabId` property is editable.
      tabLabel:
        description: |
          The label associated with the tab. This value may be an empty string.
          If no value is provided, the tab type is used as the value.

          Maximum Length: 500 characters.
        type: string
      tabLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabLabel` property is editable.
      tabOrder:
        description: |-
          A positive integer that sets the order the tab is navigated to during signing.

          Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
        type: string
      tabOrderMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabOrder` property is editable.
      tabType:
        description: Indicates the type of tab (for example, `signHere` or `initialHere`).
        type: string
      tabTypeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabType` property is editable.
      templateLocked:
        description:
          "When **true,** the sender cannot change any attributes of the
          recipient. Used only when working with template recipients. "
        type: string
      templateLockedMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `templateLocked` property
          is editable.
      templateRequired:
        description:
          When **true,** the sender may not remove the recipient. Used
          only when working with template recipients.
        type: string
      templateRequiredMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `templateRequired` property
          is editable.
      tooltip:
        description: |
          **Note:** Decline tabs never display this tooltip in the signing interface.

          Although you can technically set a value via the API for this tab,
          it will not be displayed to the recipient.
        type: string
      toolTipMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          "Metadata that indicates whether the `toolTip` property is editable.

          "
      underline:
        description: When **true,** the information in the tab is underlined.
        type: string
      underlineMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `underline` property is editable.
      width:
        description: |-
          The width of the tab in pixels.
          Must be an integer.
        type: string
      widthMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `width` property is editable.
      xPosition:
        description: |
          This property indicates the horizontal offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. Must be an integer. May be zero.

          To improve the tab's position on the document,
          DocuSign recommends
          adjusting `xPosition`
          and `yPosition`
          coordinates
          by (-3, -2)
        type: string
      xPositionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `xPosition` property is editable.
      yPosition:
        description: |
          This property indicates the vertical offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. Must be an integer. May be zero.

          To improve the tab's position on the document,
          DocuSign recommends
          adjusting `xPosition`
          and `yPosition`
          coordinates
          by (-3, -2)
        type: string
      yPositionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `yPosition` property is editable.
    description: |
      A tab that allows the recipient the option of declining an
      envelope. If the recipient clicks the tab during the signing
      process, the envelope is voided.
    x-ds-definition-name: decline
    x-ms-summary: |
      A tab that allows the recipient the option of declining an
      envelope. If the recipient clicks the tab during the signing
      process, the envelope is voided.
  delayedRouting:
    type: object
    properties:
      resumeDate:
        description: |
          The ISO 8601 timestamp of when the envelope is scheduled to be sent to the recipients associated with the workflow step. This property is `null` if the workflow step has not been initiated.

          This property is read-only.
        type: string
      rules:
        description:
          User-specified rules indicating how and when the envelope should
          sent for the workflow step and its associated recipients. Only one rule
          may be specified.
        type: array
        items:
          "$ref": "#/definitions/envelopeDelayRule"
      status:
        description: |-
          Status of the delayed routing step. Valid values:

          * `pending`: The workflow step has not been reached and the delay has not been initiated.
          * `started`: The workflow step has begun and the delay is in progress. The envelope has not yet been sent to the workflow step's recipients.
          * `completed`: The delay has elapsed and the envelope has been sent to the workflow step's recipients.

          This property is read-only.
        type: string
    x-ds-definition-name: delayedRouting
    description:
      A complex element that specifies the delayed routing settings for
      the workflow step.
    x-ms-summary:
      A complex element that specifies the delayed routing settings for
      the workflow step.
  delegationInfo:
    type: object
    properties:
      Email:
        description: ""
        type: string
      Name:
        description: ""
        type: string
      UserAuthorizationId:
        description: ""
        type: string
      UserId:
        description: ""
        type: string
    x-ds-definition-name: delegationInfo
    description: ""
    x-ms-summary: ""
  diagnosticsSettingsInformation:
    type: object
    properties:
      apiRequestLogging:
        description: " When **true,** enables API request logging for the user. "
        type: string
      apiRequestLogMaxEntries:
        description: Specifies the maximum number of API requests to log.
        type: string
      apiRequestLogRemainingEntries:
        description: Indicates the remaining number of API requests that can be logged.
        type: string
    x-ds-definition-name: diagnosticsSettingsInformation
    description: ""
    x-ms-summary: ""
  directDebitProcessorInformation:
    type: object
    properties:
      bankBranchCode:
        description: |-
          The branch code of the bank used for direct debit.

          Maximum Length: 10 characters.
        type: string
      bankCheckDigit:
        description: |-
          The check digit or digits in the international bank account number. These digits are used to confirm the validity of the account.

          Maximum Length: 4 characters.
        type: string
      bankCode:
        description: |-
          The code or number that identifies the bank. This is also known as the sort code.

          Example: `200000`

          Maximum Length: 18 characters.
        type: string
      bankName:
        description: |-
          The name of the direct debit bank.

          Maximum Length: 80 characters.
        type: string
      bankTransferAccountName:
        description: |-
          The name on the direct debit bank account. This field is required for POST and PUT requests.

          Maximum Length: 60 characters.
        type: string
      bankTransferAccountNumber:
        description: |-
          The customer's bank account number. This value will be obfuscated. This field is required for POST and PUT requests.

          Maximum Length: 30 characters.
        type: string
      bankTransferType:
        description: |-
          Specifies the type of direct debit transfer. The value of this field is dependent on the user's country. This field is required for POST and PUT requests. Possible values are:

          - `DirectDebitUK`
          - `DirectEntryAU`
          - `SEPA`
        type: string
      country:
        description: "The user's country. The system populates this value automatically.\n\n"
        type: string
      email:
        description: |-
          The email address of the user who is associated with the payment method. This field is required for POST and PUT requests.

          Maximum Length: 80 characters.
        type: string
      firstName:
        description: |-
          The user's first name. This field is required for POST and PUT requests.

          Maximum Length: 30 characters.
        type: string
      iBAN:
        description:
          "The International Bank Account Number (IBAN). \n\nExample: `DE89370400440532013000`\n\nFor
          more information, see [PeopleSoft's guide to Setting Up Banks](https://docs.oracle.com/cd/E16365_01/fscm91pbr0/eng/psbooks/fsbk/chapter.htm?File=fsbk/htm/fsbk03.htm).\n\n**Note:**
          This number will be obfuscated."
        type: string
      lastName:
        description: |-
          The user's last name. This field is required for POST and PUT requests.

          Maximum Length: 70 characters.
        type: string
    description:
      Contains information about a bank that processes a customer's direct
      debit payments.
    x-ds-definition-name: directDebitProcessorInformation
    x-ms-summary:
      Contains information about a bank that processes a customer's direct
      debit payments.
  dobInformationInput:
    description: |-
      Complex type containing:

      * dateOfBirth
      * displayLevelCode
      * receiveInResponse
    type: object
    properties:
      dateOfBirth:
        description: Specifies the recipient's date, month, and year of birth.
        type: string
      displayLevelCode:
        description: |-
          Specifies the display level for the recipient. Valid values are:
          * `ReadOnly`
          * `Editable`
          * `DoNotDisplay`
        type: string
      receiveInResponse:
        description:
          A Boolean value that specifies whether the information must be
          returned in the response.
        type: string
    x-ds-definition-name: dobInformationInput
    x-ms-summary: |-
      Complex type containing:

      * dateOfBirth
      * displayLevelCode
      * receiveInResponse
  docGenFormField:
    type: object
    properties:
      description:
        description: "A sender-defined description of the line item.

          "
        type: string
      label:
        description: Reserved for DocuSign.
        type: string
      name:
        description: |-
          The name of the form field. The name must be unique to the document.

          Required for PUT requests.
        type: string
      options:
        description: An array of option strings supported by this setting.
        type: array
        items:
          "$ref": "#/definitions/docGenFormFieldOption"
      predefinedValidation:
        description: ""
        type: string
      required:
        description:
          When **true,** the field is required. This value comes from the
          the document.
        type: string
      type:
        description: Always `TextBox`.  You do not need to provide this value.
        type: string
      validation:
        "$ref": "#/definitions/docGenFormFieldValidation"
        description: ""
      value:
        description: |-
          The value of the form field.

          Required for PUT requests.
        type: string
    x-ds-definition-name: docGenFormField
    description: |-
      The document fields available for document generation.

      This object is used in reponses (GET) and requests (PUT).
      When used with [DocumentGeneration: updateEnvelopeDocGenFormFields](/docs/esign-rest-api/reference/envelopes/documentgeneration/updateenvelopedocgenformfields/)
      (PUT) the `name` and `value` properties are required,
      and any other values are ignored.
    x-ms-summary: |-
      The document fields available for document generation.

      This object is used in reponses (GET) and requests (PUT).
      When used with [DocumentGeneration: updateEnvelopeDocGenFormFields](/docs/esign-rest-api/reference/envelopes/documentgeneration/updateenvelopedocgenformfields/)
      (PUT) the `name` and `value` properties are required,
      and any other values are ignored.
  docGenFormFieldOption:
    type: object
    properties:
      description:
        description: "A sender-defined description of the line item.

          "
        type: string
      label:
        description: ""
        type: string
      selected:
        description: When **true,** the radio button is selected.
        type: string
      value:
        description: "Specifies the value of the tab. "
        type: string
    x-ds-definition-name: docGenFormFieldOption
    description: ""
    x-ms-summary: ""
  docGenFormFieldRequest:
    type: object
    properties:
      docGenFormFields:
        description: A list of `docGenFormFields` objects.
        type: array
        items:
          "$ref": "#/definitions/docGenFormFields"
    x-ds-definition-name: docGenFormFieldRequest
    description: This object maps the document generation fields to their values.
    x-ms-summary: This object maps the document generation fields to their values.
  docGenFormFieldResponse:
    type: object
    properties:
      docGenFormFields:
        description: A list of `docGenFormFields` objects.
        type: array
        items:
          "$ref": "#/definitions/docGenFormFields"
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
    x-ds-definition-name: docGenFormFieldResponse
    description: An object for document generation responses.
    x-ms-summary: An object for document generation responses.
  docGenFormFields:
    type: object
    properties:
      docGenDocumentStatus:
        description: |
          The status of the document. This is a read-only property.
          Valid values:

          - `mergesuceeded`
          - `created`
          - `hassyntaxerror`
        type: string
      docGenErrors:
        description: A list of `docGenSyntaxError` objects.
        type: array
        items:
          "$ref": "#/definitions/docGenSyntaxError"
      docGenFormFieldList:
        description: A list of `docGenFormField` objects.
        type: array
        items:
          "$ref": "#/definitions/docGenFormField"
      documentId:
        description: The GUID of the document.
        type: string
    x-ds-definition-name: docGenFormFields
    description: A collection of document generation fields.
    x-ms-summary: A collection of document generation fields.
  docGenFormFieldValidation:
    type: object
    properties:
      errorMessage:
        description: ""
        type: string
      expression:
        description: ""
        type: string
    x-ds-definition-name: docGenFormFieldValidation
    description: ""
    x-ms-summary: ""
  docGenSyntaxError:
    type: object
    properties:
      errorCode:
        description: A code associated with the error condition.
        type: string
      message:
        description: The error message.
        type: string
      tagIdentifier:
        description: |-
          The tag that caused the syntax error.
          See [Document Generation Syntax](https://support.docusign.com/s/document-item?bundleId=als1679428547895&topicId=ftc1679700030026.html)
          to learn more about document generation syntax rules.
        type: string
    x-ds-definition-name: docGenSyntaxError
    description: Describes document generation errors.
    x-ms-summary: Describes document generation errors.
  document:
    type: object
    properties:
      applyAnchorTabs:
        description: Reserved for DocuSign.
        type: string
      assignTabsToRecipientId:
        description: ""
        type: string
      authoritativeCopy:
        description: |-
          When **true,** this document is considered an authoritative copy.

          If this property is not set, it gets its value from the envelope's `authoritativeCopyDefault` property if it's set, or the envelope's `authoritativeCopy` property.

          When **false,** this document is not an authoritative copy regardless of the envelope's `authoritativeCopyDefault` or `authoritativeCopy` property.
        type: boolean
      display:
        description:
          "This string sets the display and behavior properties of\nthe
          document during signing. Valid values:\n\n* `modal`<br>\n  The document
          is shown as a supplement action strip\n  and can be viewed, downloaded,
          or printed in a modal window.\n  This is the recommended value for supplemental
          documents. \n\n* `inline`<br>\n  The document is shown in the normal signing
          window.\n  This value is not used with supplemental documents,\n  but is
          the default value for all other documents.\n"
        type: string
      docGenFormFields:
        description: ""
        type: array
        items:
          "$ref": "#/definitions/docGenFormField"
      documentBase64:
        description:
          The document's bytes. This field can be used to include a base64
          version of the document bytes within an envelope definition instead of sending
          the document using a multi-part HTTP request. The maximum document size
          is smaller if this field is used due to the overhead of the base64 encoding.
        type: string
      documentFields:
        description:
          "The array of name/value custom data strings to be added to a
          document. Custom document field information is returned in the status, but
          otherwise is not used by DocuSign. The array contains the elements: \n\n*
          `name`: A string that can be a maximum of 50 characters. \n* `value`: A
          string that can be a maximum of 200 characters.\n\nIf you are using XML,
          the name/value pair is contained in a `nameValue` element. \n"
        type: array
        items:
          "$ref": "#/definitions/nameValue"
      documentId:
        description:
          Specifies the document ID of this document. This value is used
          by tabs to determine which document they appear in.
        type: string
      encryptedWithKeyManager:
        description:
          "When **true,** the document has been encrypted by the sender
          for use with the DocuSign Key Manager Security Appliance.\n "
        type: string
      fileExtension:
        description:
          "The file extension type of the document. Non-PDF documents are
          converted to PDF.\n\nIf the document is not a PDF, `fileExtension` is required.\n\nIf
          you try to upload a non-PDF document without a `fileExtension`, you will
          receive an \"unable to load document\" error message.  \n "
        type: string
      fileFormatHint:
        description: ""
        type: string
      htmlDefinition:
        "$ref": "#/definitions/documentHtmlDefinition"
        description: |-
          Defines how to generate the responsive-formatted HTML for the document.
          See [Responsive signing](/docs/esign-rest-api/esign101/concepts/responsive/)
          in the [eSignature concepts guide](/docs/esign-rest-api/esign101/concepts/).
      includeInDownload:
        description:
          "When **true,**\nthe document is included in the combined document
          download (`documentsCombinedUri`). \nThe default value is **true.**\n"
        type: string
      isDocGenDocument:
        description: ""
        type: string
      matchBoxes:
        description: |+
          Matchboxes define areas in a document for document matching when you are creating envelopes.
          They are only used when you upload and edit a template.

        type: array
        items:
          "$ref": "#/definitions/matchBox"
      name:
        description: The name of the document.
        type: string
      order:
        description:
          "The order in which to sort the results.\n\nValid values are:
          \n\n\n* `asc`: Ascending order.\n* `desc`: Descending order. "
        type: string
      pages:
        description: The number of pages in the document. This property is read-only.
        type: string
      password:
        description: The user's encrypted password hash.
        type: string
      pdfFormFieldOption:
        description: ""
        type: string
      remoteUrl:
        description: |
          The file ID from the cloud storage service where
          the document is located. This information is
          returned using
          [CloudStorage: listFolders](/docs/esign-rest-api/reference/cloudstorage/cloudstorage/listfolders/) or
          [CloudStorage: list](/docs/esign-rest-api/reference/cloudstorage/cloudstorage/list/).
        type: string
      signerMustAcknowledge:
        description: |+
          Sets how the signer interacts with the supplemental document.
          Valid values:

          * `no_interaction`<br>
            No recipient action is required.

          * `view`<br>
            The recipient is required to view the document.

          * `accept`<br>
            The recipient is required to accept the document by selecting accept during signing, but is not required to view the document.

          * `view_accept`<br>
            The recipient is required to view and accept the document.

        type: string
      signerMustAcknowledgeUseAccountDefault:
        description:
          When **true,** the account default setting for the required recipient
          option is used. If this property is set, `signerMustAcknowledge` cannot
          be set (and vice versa).
        type: boolean
      tabs:
        "$ref": "#/definitions/EnvelopeRecipientTabs"
        description:
          A list of tabs, which are represented graphically as symbols
          on documents at the time of signing. Tabs show recipients where to sign,
          initial, or enter data. They may also display data to the recipients.
      templateLocked:
        description:
          "When **true,** the sender cannot change any attributes of the
          recipient. Used only when working with template recipients. "
        type: string
      templateRequired:
        description:
          When **true,** the sender may not remove the recipient. Used
          only when working with template recipients.
        type: string
      transformPdfFields:
        description:
          "When **true,** PDF form field data is transformed into document
          tab values when the PDF form field name matches the DocuSign custom tab
          tabLabel. The resulting PDF form data is also returned in the PDF meta data
          when requesting the document PDF.

          "
        type: string
      uri:
        description: A URI containing the user ID.
        type: string
    description: A document object.
    x-ds-definition-name: document
    x-ms-summary: A document object.
  documentFieldsInformation:
    type: object
    properties:
      documentFields:
        description:
          "The array of name/value custom data strings to be added to a
          document. Custom document field information is returned in the status, but
          otherwise is not used by DocuSign. The array contains the elements: \n\n*
          `name`: A string that can be a maximum of 50 characters. \n* `value`: A
          string that can be a maximum of 200 characters.\n\nIf you are using XML,
          the name/value pair is contained in a `nameValue` element. \n"
        type: array
        items:
          "$ref": "#/definitions/nameValue"
    x-ds-definition-name: documentFieldsInformation
    description: ""
    x-ms-summary: ""
  documentHtmlCollapsibleDisplaySettings:
    type: object
    properties:
      arrowClosed:
        description: |
          Indicates the direction of the disclosure arrow
          when the collapsible section is in the closed state.

          One of the following:

          - `up`: In the closed state, the disclosure arrow points up.
          - `down`: In the closed state, the disclosure arrow points down.
          - `left`: In the closed state, the disclosure arrow points left.
          - `right`: In the closed state, the disclosure arrow points right.
        type: string
      arrowColor:
        description:
          "A CSS color value (such as `#DCF851`) that indicates the color
          of the arrow.

          "
        type: string
      arrowLocation:
        description: |
          The location of the arrow relative to the collapsible section's label. Possible values are:

          - `right` (default)
          - `left`
        type: string
      arrowOpen:
        description: |
          Indicates the direction of the disclosure arrow
          when the collapsible section is in the open state.

          One of the following:

          - `up`: In the open state, the disclosure arrow points up.
          - `down`: In the open state, the disclosure arrow points down.
          - `left`: In the open state, the disclosure arrow points left.
          - `right`: In the open state, the disclosure arrow points right.
        type: string
      arrowSize:
        description: |
          Indicates the size of the collapsible arrows. Possible values are:

          - `small`
          - `large` (default)
        type: string
      arrowStyle:
        description:
          "The name of the CSS style to be used on collapsible arrow section.

          "
        type: string
      containerStyle:
        description:
          "The name of the CSS style to be used for the collapsible container.

          "
        type: string
      labelStyle:
        description:
          The name of the CSS style to be used for the collapsible container's
          label.
        type: string
      onlyArrowIsClickable:
        description: |
          When **true,** only the arrow is clickable to expand or collapse the section.
          When **false** (the default), both the label and the arrow are clickable.

          If no arrow is used, this setting is ignored.
        type: boolean
      outerLabelAndArrowStyle:
        description:
          The name of the CSS style to be used for the collapsible container's
          outer label and arrow style.
        type: string
    description: Display settings for collapsible section.
    x-ds-definition-name: documentHtmlCollapsibleDisplaySettings
    x-ms-summary: Display settings for collapsible section.
  documentHtmlDefinition:
    type: object
    properties:
      displayAnchorPrefix:
        description:
          Contains text that all display anchors must start with. Using
          at least four characters will improve anchor processing performance.
        type: string
      displayAnchors:
        description: |-
          An object that defines how to handle a section of the HTML in signing. This property enables an incoming request to make a section of the HTML collapsible and expandable or hidden from view.

          A start anchor, end anchor, or both are required.
          If the anchors are not found, the display anchor will be ignored.

          For a list of the available types, see the
          [`display` property](/docs/esign-rest-api/reference/envelopes/envelopes/create/#schema__envelopedefinition_documents_htmldefinition_displayanchors_displaysettings_display)
          of the
          [`displaySettings` object.](/docs/esign-rest-api/reference/envelopes/envelopes/create/#schema__envelopedefinition_documents_htmldefinition_displayanchors_displaysettings)
        type: array
        items:
          "$ref": "#/definitions/documentHtmlDisplayAnchor"
      displayOrder:
        description: The position on the page where the display section appears.
        type: string
      displayPageNumber:
        description: The number of the page on which the display section appears.
        type: string
      documentGuid:
        description: The GUID of the document.
        type: string
      documentId:
        description:
          Specifies the document ID number that the tab is placed on. This
          must refer to an existing Document's ID attribute.
        type: string
      headerLabel:
        description:
          Header text or an HTML tag to place above the responsive HTML
          block.
        type: string
      maxScreenWidth:
        description: |
          If set, the responsive HTML version of the signing document will only display on screens with the specified pixel width or less. If the screen is larger than the value that you specify, the default PDF version of the content displays instead.

          This setting can also be configured at the account level.
        type: string
      removeEmptyTags:
        description:
          Holds a comma-separated list of HTML tags to remove if they have
          no text within their node (including child nodes).
        type: string
      showMobileOptimizedToggle:
        description: |
          When **true** (the default), the **Mobile-Friendly** toggle displays at the top of the screen on the user's mobile device. When **false,** the toggle will not be displayed.

          the **Mobile-Friendly** toggle lets the user switch between the mobile-friendly and the PDF versions of a document. For example, the recipient can use this toggle to review the document using the PDF view before they finish signing.
        type: string
      source:
        description: |-
          Specifies the type of responsive signing that will be used with the document.

          If the value of this property is valid HTML,
          and the [smart sections feature][] is enabled,
          the HTML code is used to display the signing page:

          ```
          source: "<html> ... <body><p>hello world</p></body></html>"
          ```

          If the value of this property is the string `document`,
          the HTML signing page is generated from the provided document.

          ```
          source: "document"
          ```

          **Related topics**

          - [How to create a signable HTML document](/docs/esign-rest-api/how-to/creating-signable-html/)
          - [How to convert a PDF file into a signable HTML document](/docs/esign-rest-api/how-to/converting-pdf/)
          - [Responsive signing](/docs/esign-rest-api/esign101/concepts/responsive/)


          [smart sections feature]: https://support.docusign.com/s/document-item?bundleId=gbo1643332197980&topicId=qlx1578456478178.html
        type: string
    description: |-
      Holds the properties that define how to generate the responsive-formatted HTML for the document.
      See [Responsive signing](/docs/esign-rest-api/esign101/concepts/responsive/)
      in the [eSignature concepts guide](/docs/esign-rest-api/esign101/concepts/).
    x-ds-definition-name: documentHtmlDefinition
    x-ms-summary: |-
      Holds the properties that define how to generate the responsive-formatted HTML for the document.
      See [Responsive signing](/docs/esign-rest-api/esign101/concepts/responsive/)
      in the [eSignature concepts guide](/docs/esign-rest-api/esign101/concepts/).
  documentHtmlDefinitionOriginal:
    type: object
    properties:
      documentId:
        description:
          Specifies the document ID number that the tab is placed on. This
          must refer to an existing Document's ID attribute.
        type: string
      documentIdGuid:
        description: The GUID of the document.
        type: string
      htmlDefinition:
        "$ref": "#/definitions/documentHtmlDefinition"
        description:
          Defines how to generate the responsive-formatted HTML for the
          document.
    x-ds-definition-name: documentHtmlDefinitionOriginal
    description: ""
    x-ms-summary: ""
  documentHtmlDefinitionOriginals:
    type: object
    properties:
      htmlDefinitions:
        description:
          Holds the properties that define how to generate the responsive-formatted
          HTML for the document.
        type: array
        items:
          "$ref": "#/definitions/documentHtmlDefinitionOriginal"
    x-ds-definition-name: documentHtmlDefinitionOriginals
    description: ""
    x-ms-summary: ""
  documentHtmlDefinitions:
    type: object
    properties:
      htmlDefinitions:
        description:
          Holds the properties that define how to generate the responsive-formatted
          HTML for the document.
        type: array
        items:
          type: string
    x-ds-definition-name: documentHtmlDefinitions
    description: ""
    x-ms-summary: ""
  documentHtmlDisplayAnchor:
    type: object
    properties:
      caseSensitive:
        description:
          When **true,** the start or end anchor strings must match the
          strings specified by the start and end anchor settings in case as well as
          in content.
        type: boolean
      displaySettings:
        "$ref": "#/definitions/documentHtmlDisplaySettings"
        description:
          This object defines how the HTML section inside the `startAnchor`
          and `endAnchor` displays.
      endAnchor:
        description: |-
          Specifies the end of the area in the HTML where the display settings will be applied. If you do not specify an end anchor, the end of the document will be used by default.

          **Note:** A start anchor, an end anchor, or both are required.
        type: string
      removeEndAnchor:
        description:
          When **true,** removes the end anchor string for the Smart Section
          from the HTML, preventing it from displaying.
        type: boolean
      removeStartAnchor:
        description:
          When **true,** removes the start anchor string for the Smart
          Section from the HTML, preventing it from displaying.
        type: boolean
      startAnchor:
        description: |-
          Specifies the beginning of the area in the HTML where the display settings will be applied. If you do not specify a start anchor, the beginning of the document will be used by default.

          **Note:** A start anchor, an end anchor, or both are required.
        type: string
    x-ds-definition-name: documentHtmlDisplayAnchor
    description: ""
    x-ms-summary: ""
  documentHtmlDisplaySettings:
    type: object
    properties:
      cellStyle:
        description:
          Specifies the valid CSS-formatted styles to use on responsive
          table cells. Only valid in display sections of `responsive_table` or `responsive_table_single_column`
          types.
        type: string
      collapsibleSettings:
        "$ref": "#/definitions/documentHtmlCollapsibleDisplaySettings"
        description:
          This object defines the appearance and function of a collapsible
          section or item.
      display:
        description: |+
          Sets the display and behavior properties. Possible  values are:

          - `inline`:
            Leaves the HTML where it is in the document.
            This property lets you add a label or present on a separate page.

          - `collapsible`:
            The HTML in this section may be expanded or collapsed.
            Initially this section is expanded.

          - `collapsed`:
            The HTML in this section may be expanded or collapsed.
            Initially this section is collapsed.

          - `continue_button`:
            Creates a stop point in the document to draw the reader's
            attention before proceeding to the next section.

          - `responsive_table`:
            Turns this section into a responsive table.
            Note that this is only used on HTML tables that fall within the anchor start and end positions.

          - `responsive_table_single_column`:
            Turns this section into a responsive single-column table.
            Note this is only used on HTML tables that fall within the anchor start and end positions.
            The table will be converted to one single column where each current column will become a row, then stacked.

          - `print_only`:
            Do not show this portion of the HTML in the responsive signing view.


        type: string
      displayLabel:
        description:
          "The label to add to this display section in the signing page.

          "
        type: string
      displayOrder:
        format: int32
        description: The position on the page where the display section appears.
        type: integer
      displayPageNumber:
        format: int32
        description: The number of the page on which the display section appears.
        type: integer
      hideLabelWhenOpened:
        description:
          When **true,** the `displayLabel` is hidden when the display
          section is expanded and the display section is no longer collapsible. This
          property is valid only when the value of the `display` property is `collapsed`.
        type: boolean
      inlineOuterStyle:
        description:
          Specifies the valid CSS-formatted styles to use on inline display
          sections. This property is valid only when the value of the `display` property
          is `inline`.
        type: string
      labelWhenOpened:
        description:
          The label for the display section when it is expanded from a
          collapsed state. This label displays only on the first opening and is only
          valid with the value of the `display` property is `collapsed`.
        type: string
      preLabel:
        description:
          Enables you to add descriptive text that appears before a collapsed
          section or continue button.
        type: string
      scrollToTopWhenOpened:
        description: |
          When **true** and the section is expanded,
          the position of the section-close control
          scrolls to the top of the screen. This property is only valid when the value of the `display` property is `collapsed`.
        type: boolean
      tableStyle:
        description:
          Specifies the valid CSS-formatted styles to use on responsive
          tables. This property is valid only when the value of the `display` property
          is `responsive_table` or `responsive_table_single_column`.
        type: string
    x-ds-definition-name: documentHtmlDisplaySettings
    description: |-
      This object defines how to display the HTML
      between the `startAnchor` and `endAnchor`.
    x-ms-summary: |-
      This object defines how to display the HTML
      between the `startAnchor` and `endAnchor`.
  documentTemplate:
    type: object
    properties:
      documentEndPage:
        description: ""
        type: string
      documentId:
        description:
          Specifies the document ID number that the tab is placed on. This
          must refer to an existing Document's ID attribute.
        type: string
      documentStartPage:
        description: ""
        type: string
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      templateId:
        description:
          The unique identifier of the template. If this is not provided,
          DocuSign generates an error and the call fails.
        type: string
    x-ds-definition-name: documentTemplate
    description: ""
    x-ms-summary: ""
  documentTemplateList:
    type: object
    properties:
      documentTemplates:
        description: ""
        type: array
        items:
          "$ref": "#/definitions/documentTemplate"
    x-ds-definition-name: documentTemplateList
    description: ""
    x-ms-summary: ""
  documentVisibility:
    type: object
    properties:
      documentId:
        description:
          Specifies the document ID number that the tab is placed on. This
          must refer to an existing Document's ID attribute.
        type: string
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      recipientId:
        description:
          "The ID of the recipient to whom the document visibility setting
          is applied. This value should match the `recipientId` defined in the recipient
          object.

          "
        type: string
      rights:
        description: |-
          Indicates whether the document is editable:

          - `editable`
          - `read_only`
        type: string
      visible:
        description: When **true,** the document is visible to the recipient.
        type: string
    description: This object configures a recipient's read/write access to a document.
    x-ds-definition-name: documentVisibility
    x-ms-summary: This object configures a recipient's read/write access to a document.
  documentVisibilityList:
    type: object
    properties:
      documentVisibility:
        description:
          An array of `documentVisibility` objects that specifies which
          documents are visible to which recipients.
        type: array
        items:
          "$ref": "#/definitions/documentVisibility"
    description:
      A list of `documentVisibility` objects that specify whether documents
      are visible to recipients.
    x-ds-definition-name: documentVisibilityList
    x-ms-summary:
      A list of `documentVisibility` objects that specify whether documents
      are visible to recipients.
  downgradeBillingPlanInformation:
    type: object
    properties:
      downgradeEventType:
        description: ""
        type: string
      planInformation:
        "$ref": "#/definitions/planInformation"
        description:
          An object used to identify the features and attributes of the
          account being created.
      promoCode:
        description: ""
        type: string
      saleDiscount:
        description: ""
        type: string
      saleDiscountPeriods:
        description: Reserved for DocuSign.
        type: string
      saleDiscountType:
        description: ""
        type: string
    x-ds-definition-name: downgradeBillingPlanInformation
    description: ""
    x-ms-summary: ""
  downgradePlanUpdateResponse:
    type: object
    properties:
      accountPaymentMethod:
        description:
          "The type of payment method used for the account. Valid values
          are:\n\n- `credit_card`\n- "
        type: string
      discountApplied:
        description: ""
        type: string
      downgradeEffectiveDate:
        description: ""
        type: string
      downgradePaymentCycle:
        description: ""
        type: string
      downgradePlanId:
        description: ""
        type: string
      downgradePlanName:
        description: ""
        type: string
      downgradeRequestStatus:
        description: ""
        type: string
      message:
        description: ""
        type: string
      productId:
        description: The Product ID from the AppStore.
        type: string
      promoCode:
        description: ""
        type: string
      saleDiscount:
        description: ""
        type: string
      saleDiscountPeriods:
        description: Reserved for DocuSign.
        type: string
      saleDiscountType:
        description: ""
        type: string
    x-ds-definition-name: downgradePlanUpdateResponse
    description: ""
    x-ms-summary: ""
  downgradeRequestInformation:
    type: object
    properties:
      downgradeRequestCreation:
        description: ""
        type: string
      downgradeRequestProductId:
        description: ""
        type: string
      downgradeRequestStatus:
        description: ""
        type: string
    x-ds-definition-name: downgradeRequestInformation
    description: ""
    x-ms-summary: ""
  downgradRequestBillingInfoResponse:
    type: object
    properties:
      downgradePlanInformation:
        "$ref": "#/definitions/downgradePlanUpdateResponse"
        description: ""
      paymentMethod:
        description: |-
          The payment method used for the billing plan. Valid values are:

          - `NotSupported`
          - `CreditCard`
          - `PurchaseOrder`
          - `Premium`
          - `Freemium`
          - `FreeTrial`
          - `AppStore`
          - `DigitalExternal`
          - `DirectDebit`
        type: string
    x-ds-definition-name: downgradRequestBillingInfoResponse
    description: ""
    x-ms-summary: ""
  draw:
    type: object
    properties:
      allowSignerUpload:
        description:
          When **true,** the recipient can upload an image to use as the
          background of the drawing field. The default value is **false.**
        type: string
      anchorAllowWhiteSpaceInCharacters:
        description: |
          When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.

          First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.

          Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.

          The default value is **true.**
        type: string
      anchorAllowWhiteSpaceInCharactersMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorAllowWhiteSpaceInCharacters`
          property is editable.
      anchorCaseSensitive:
        description: |-
          This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**

          For example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.

          This functionality uses the following rules:

          - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:

            $~><|^+=

            For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`

          - Strings embedded in other strings are ignored during the matching process.

          - In words that have dashes, the parts separated by dashes are treated as distinct words.

            Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**

          - Letters with accent marks are treated as distinct characters from their unaccented counterparts.

          - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.

            Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.

          - Unlike punctuation, numbers are not ignored when finding anchor words.

            Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).

          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorCaseSensitiveMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorCaseSensitive` property
          is editable.
      anchorHorizontalAlignment:
        description: |
          This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :

          - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.
          - `right`: Aligns the tab’s left side with the last character of the matching anchor word.

          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorHorizontalAlignmentMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorHorizontalAlignment`
          property is editable.
      anchorIgnoreIfNotPresent:
        description:
          When **true,** this tab is ignored if the `anchorString` is not
          found in the document.
        type: string
      anchorIgnoreIfNotPresentMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorIgnoreIfNotPresent`
          property is editable.
      anchorMatchWholeWord:
        description: |
          When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**

          For example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.

          This functionality uses the following rules:

          - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:

            $~><|^+=

            For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`

          - Strings embedded in other strings are ignored during the matching process.

          - In words that have dashes, the parts separated by dashes are treated as distinct words.

            Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**

          - Letters with accent marks are treated as distinct characters from their unaccented counterparts.

          - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.

            Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.

          - Unlike punctuation, numbers are not ignored when finding anchor words.

            Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).


          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorMatchWholeWordMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorMatchWholeWord` property
          is editable.
      anchorString:
        description:
          Specifies the string to find in the document and use as the basis
          for tab placement.
        type: string
      anchorStringMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorString` property is
          editable.
      anchorTabProcessorVersion:
        description: Reserved for DocuSign.
        type: string
      anchorTabProcessorVersionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Reserved for DocuSign.
      anchorUnits:
        description: |
          Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:

          - `pixels` (default)
          - `inches`
          - `mms`
          - `cms`
        type: string
      anchorUnitsMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorUnits` property is
          editable.
      anchorXOffset:
        description:
          "Specifies the X axis location of the tab in `anchorUnits` relative
          to the `anchorString`.

          "
        type: string
      anchorXOffsetMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorXOffset` property
          is editable.
      anchorYOffset:
        description:
          "Specifies the Y axis location of the tab in `anchorUnits` relative
          to the `anchorString`.

          "
        type: string
      anchorYOffsetMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorYOffset` property
          is editable.
      caption:
        description: ""
        type: string
      captionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `caption` property is editable.
      conditionalParentLabel:
        description:
          For conditional fields this is the `tabLabel` of the parent tab
          that controls this tab's visibility.
        type: string
      conditionalParentLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `conditionalParentLabel`
          property is editable.
      conditionalParentValue:
        description: |
          For conditional fields, this is the value of the parent tab that controls the tab's visibility.

          If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use "on" as the value to show that the parent tab is active.
        type: string
      conditionalParentValueMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `conditionalParentValue`
          property is editable.
      customTabId:
        description:
          The DocuSign generated custom tab ID for the custom tab to be
          applied. This can only be used when adding new tabs for a recipient. When
          used, the new tab inherits all the custom tab properties.
        type: string
      customTabIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `customTabId` property is
          editable.
      documentId:
        description:
          Specifies the document ID number that the tab is placed on. This
          must refer to an existing Document's ID attribute.
        type: string
      documentIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `documentId` property is
          editable.
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      formOrder:
        description:
          An integer specifying the order in which the guided form HTML
          should render. The order is relative to the `formPageLabel`, the group by
          which to place the guided form HTML block.
        type: string
      formOrderMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `formOrder` property is editable.
      formPageLabel:
        description:
          A string specifying the group in which to place the guided form
          HTML. Each group displays as a separate guided forms page in the signing
          experience.
        type: string
      formPageLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `formPageLabel` property
          is editable.
      formPageNumber:
        description:
          An integer specifying the order in which to present the guided
          form pages.
        type: string
      formPageNumberMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `fromPageNumber` property
          is editable.
      height:
        description: |-
          The height of the tab in pixels.
          Must be an integer.
        type: string
      heightMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `height` property is editable.
      locked:
        description:
          When **true,** the signer cannot change the data of the custom
          tab.
        type: string
      lockedMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `locked` property is editable.
      mergeField:
        "$ref": "#/definitions/mergeField"
        description:
          Contains the information necessary to map the tab to a field
          in SalesForce.
      mergeFieldXml:
        description: Reserved for DocuSign.
        type: string
      pageNumber:
        description: Specifies the page number on which the tab is located.
        type: string
      pageNumberMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `pageNumber` property is
          editable.
      recipientId:
        description:
          "The ID of the recipient to whom the tab will be assigned. This
          value should match the `recipientId` defined in the recipient object.

          "
        type: string
      recipientIdGuid:
        description:
          The globally-unique identifier (GUID) for a specific recipient
          on a specific envelope. If the same recipient is associated with multiple
          envelopes, they will have a different GUID for each one. This property is
          read-only.
        type: string
      recipientIdGuidMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `recipientIdGuid` property
          is editable.
      recipientIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `recipientId` property is
          editable.
      required:
        description: When **true,** the signer is required to fill out this tab.
        type: string
      requiredMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `required` property is editable.
      shared:
        description: When **true,** this custom tab is shared.
        type: string
      sharedMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `shared` property is editable.
      smartContractInformation:
        "$ref": "#/definitions/smartContractInformation"
        description: Reserved for DocuSign.
      source:
        description: Reserved for DocuSign.
        type: string
      status:
        description:
          "Indicates the envelope status. Valid values are:\n\n* sent -
          The envelope is sent to the recipients. \n* created - The envelope is saved
          as a draft and can be modified and sent later."
        type: string
      statusMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `status` property is editable.
      tabGroupLabels:
        description: |-
          An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.

          To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
        type: array
        items:
          type: string
      tabGroupLabelsMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `tabGroupLabels` property
          is editable.
      tabId:
        description: The unique identifier for the tab.
        type: string
      tabIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabId` property is editable.
      tabLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabLabel` property is editable.
      tabOrder:
        description: |-
          A positive integer that sets the order the tab is navigated to during signing.

          Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
        type: string
      tabOrderMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabOrder` property is editable.
      tabType:
        description: Indicates the type of tab (for example, `signHere` or `initialHere`).
        type: string
      tabTypeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabType` property is editable.
      templateLocked:
        description:
          "When **true,** the sender cannot change any attributes of the
          recipient. Used only when working with template recipients. "
        type: string
      templateLockedMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `templateLocked` property
          is editable.
      templateRequired:
        description:
          When **true,** the sender may not remove the recipient. Used
          only when working with template recipients.
        type: string
      templateRequiredMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `templateRequired` property
          is editable.
      tooltip:
        description:
          "The text of a tooltip that appears when a user hovers over a
          form field or tab.

          "
        type: string
      toolTipMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          "Metadata that indicates whether the `toolTip` property is editable.

          "
      useBackgroundAsCanvas:
        description: ""
        type: string
      width:
        description: |-
          The width of the tab in pixels.
          Must be an integer.
        type: string
      widthMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `width` property is editable.
      xPosition:
        description: |
          This property indicates the horizontal offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. Must be an integer. May be zero.
        type: string
      xPositionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `xPosition` property is editable.
      yPosition:
        description: |
          This property indicates the vertical offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. Must be an integer. May be zero.
        type: string
      yPositionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `yPosition` property is editable.
    description:
      A tab that allows the recipient to add a free-form drawing to the
      document.
    x-ds-definition-name: draw
    x-ms-summary:
      A tab that allows the recipient to add a free-form drawing to the
      document.
  editor:
    type: object
    properties:
      accessCode:
        description:
          "If a value is provided, the recipient must enter the value as
          the access code to view and sign the envelope. \n\nMaximum Length: 50 characters
          and it must conform to the account's access code format setting.\n\nIf blank,
          but the signer `accessCode` property is set in the envelope, then that value
          is used.\n\nIf blank and the signer `accessCode` property is not set, then
          the access code is not required."
        type: string
      accessCodeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `accessCode` property is
          editable. This property is read-only.
      addAccessCodeToEmail:
        description:
          Optional. When **true,** the access code will be added to the
          email sent to the recipient. This nullifies the security measure of `accessCode`
          on the recipient.
        type: string
      additionalNotifications:
        description: An array of additional notification objects.
        type: array
        items:
          "$ref": "#/definitions/recipientAdditionalNotification"
      allowSystemOverrideForLockedRecipient:
        description:
          When **true,** if the recipient is locked on a template, advanced
          recipient routing can override the lock.
        type: string
      autoRespondedReason:
        description:
          "Error message provided by the destination email system. This
          field is only provided if the email notification to the recipient fails
          to send. This property is read-only.

          "
        type: string
      bulkSendV2Recipient:
        description: ""
        type: string
      clientUserId:
        description:
          "Specifies whether the recipient is embedded or remote. \n\nIf
          the `clientUserId` property is not null then the recipient is embedded.
          Use this field to associate the signer with their userId in your app. Authenticating
          the user is the responsibility of your app when you use embedded signing.\n\nIf
          the `clientUserId` property is set and either `SignerMustHaveAccount` or
          `SignerMustLoginToSign` property of the account settings is set to  **true,**
          an error is generated on sending.\n\n**Note:** This property is not returned
          by the [listStatusChanges](/docs/esign-rest-api/reference/envelopes/envelopes/liststatuschanges/)
          endpoint.\n\nMaximum length: 100 characters. \n"
        type: string
      completedCount:
        description:
          Indicates the number of times that the recipient has been through
          a signing completion for the envelope. If this number is greater than 0
          for a signing group, only the user who previously completed may sign again.
          This property is read-only.
        type: string
      consentDetailsList:
        description: ""
        type: array
        items:
          "$ref": "#/definitions/consentDetails"
      customFields:
        description:
          An optional array of strings that allows the sender to provide
          custom data about the recipient. This information is returned in the envelope
          status but otherwise not used by DocuSign. Each customField string can be
          a maximum of 100 characters.
        type: array
        items:
          type: string
      declinedDateTime:
        description:
          The date and time the recipient declined the document. This property
          is read-only.
        type: string
      declinedReason:
        description:
          The reason the recipient declined the document. This property
          is read-only.
        type: string
      deliveredDateTime:
        description:
          The date and time that the envelope was delivered to the recipient.
          This property is read-only.
        type: string
      deliveryMethod:
        description: |-
          The delivery method. One of:

          - `email`
          - `fax`
          - `SMS`
          - `WhatsApp`
          - `offline`

          The `SMS` and `WhatsApp` delivery methods
          are limited to `signer`, `carbonCopy`, and `certifiedDelivery`
          recipients.

          **Related topics**

          - [Using SMS delivery with the eSignature API][smsconcept]
          - [How to request a signature by SMS delivery][howto]

          [smsconcept]: /docs/esign-rest-api/esign101/concepts/sms-delivery/using-sms-esignature/
          [howto]: /docs/esign-rest-api/how-to/request-signature-sms/
        type: string
      deliveryMethodMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Reserved for DocuSign.
      designatorId:
        description: Reserved for DocuSign.
        type: string
      designatorIdGuid:
        description: Reserved for DocuSign.
        type: string
      documentVisibility:
        description:
          A list of `documentVisibility` objects. Each object in the list
          specifies whether a document in the envelope is visible to this recipient.
          For the envelope to use this functionality, Document Visibility must be
          enabled for the account and the `enforceSignerVisibility` property must
          be set to **true.**
        type: array
        items:
          "$ref": "#/definitions/documentVisibility"
      email:
        description:
          "The recipient's email address. Notification of the document
          to sign is sent to this email address. \n\nMaximum length: 100 characters. "
        type: string
      emailMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `email` property is editable.
          This property is read-only.
      emailNotification:
        "$ref": "#/definitions/recipientEmailNotification"
        description: |-
          This optional property allows you to set a specific email subject and
          body for this recipient's notification email.

          **Note:** If you use this property, you _must_
          provide a value for the `supportedLanguage` sub-property.


          You can set the `emailNotification` property separately
          for each recipient. If you set the value only for certain
          recipients, the other recipients are assigned the values from
          the top-level `emailSubject` and `emailBlurb`.
      emailRecipientPostSigningURL:
        description: ""
        type: string
      embeddedRecipientStartURL:
        description:
          "Specifies a sender-provided valid URL string for redirecting
          an embedded recipient. When using this option, the embedded recipient still
          receives an email from DocuSign, just as a remote recipient would. When
          the document link in the email is clicked the recipient is redirected, through
          DocuSign, to the supplied URL to complete their actions. When routing to
          the URL, the sender's system (the server responding to the URL) must request
          a recipient token to launch a signing session. \n\nWhen `SIGN_AT_DOCUSIGN`,
          the recipient is directed to an embedded signing or viewing process directly
          at DocuSign. The signing or viewing action is initiated by the DocuSign
          system and the transaction activity and Certificate of Completion records
          will reflect this. In all other ways the process is identical to an embedded
          signing or viewing operation launched by a partner.\n\nIt is important to
          understand that in a typical embedded workflow, the authentication of an
          embedded recipient is the responsibility of the sending application. DocuSign
          expects that senders will follow their own processes for establishing the
          recipient's identity. In this workflow the recipient goes through the sending
          application before the embedded signing or viewing process is initiated.
          However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`,
          the recipient goes directly to the embedded signing or viewing process,
          bypassing the sending application and any authentication steps the sending
          application would use. In this case, DocuSign recommends that you use one
          of the normal DocuSign authentication features (Access Code, Phone Authentication,
          SMS Authentication, etc.) to verify the identity of the recipient.\n\nIf
          the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL`
          is set, DocuSign will ignore the redirect URL and launch the standard signing
          process for the email recipient. Information can be appended to the embedded
          recipient start URL using merge fields. The available merge fields items
          are: `envelopeId`, `recipientId`, `recipientName`, `recipientEmail`, and
          `customFields`. The `customFields` property must be set for the recipient
          or envelope. The merge fields are enclosed in double brackets. \n\n*Example*:
          \n\n`http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]` "
        type: string
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      faxNumber:
        description: Reserved for DocuSign.
        type: string
      faxNumberMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Reserved for DocuSign.
      firstName:
        description: "The recipient's first name. \n\nMaximum Length: 50 characters."
        type: string
      firstNameMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `firstName` property is editable.
          This property is read-only.
      fullName:
        description: Reserved for DocuSign.
        type: string
      fullNameMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Reserved for DocuSign.
      idCheckConfigurationName:
        description:
          "The name of the authentication check to use. This value must
          match one of the authentication types that the account uses. The names of
          these authentication types appear in the web console sending interface in
          the Identify list for a recipient. This setting overrides any default authentication
          setting. Valid values are:\n\n- `Phone Auth $`: The recipient must authenticate
          by using two-factor authentication (2FA). You provide the phone number to
          use for 2FA in the `phoneAuthentication` object.\n- `SMS Auth $`: The recipient
          must authenticate via SMS. You provide the phone number to use in the `smsAuthentication`
          object.\n- `ID Check $`: The  recipient must answer detailed security questions.
          \n\n**Example:** Your account has ID Check and SMS Authentication available.
          In the web console Identify list, these appear as ID Check $ and SMS Auth
          $. To use ID Check in an envelope, the idCheckConfigurationName should be
          ID Check $. For SMS, you would use SMS Auth $, and you would also need to
          add a phone number to the smsAuthentication node."
        type: string
      idCheckConfigurationNameMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `idCheckConfigurationName`
          property is editable. This property is read-only.
      idCheckInformationInput:
        "$ref": "#/definitions/idCheckInformationInput"
        description:
          An object that contains input information related to a recipient
          ID check.
      identityVerification:
        "$ref": "#/definitions/recipientIdentityVerification"
        description:
          Specifies the ID Verification workflow applied on an envelope
          by workflow ID. <br/>See the [list](/docs/esign-rest-api/reference/accounts/identityverifications/list/)
          method in the [IdentityVerifications](/docs/esign-rest-api/reference/accounts/identityverifications/)
          resource for more information on how to retrieve workflow IDs available
          for an account. <br/>This can be used in addition to other [recipient authentication](https://support.docusign.com/s/document-item?bundleId=gav1643676262430&topicId=kzp1578456318101.html)
          methods. <br/>Note that ID Verification and ID Check are two distinct methods.
          ID Verification checks recipients' identity by verifying their ID while
          ID Check relies on data available on public records (such as current and
          former address).
      inheritEmailNotificationConfiguration:
        description:
          "When **true** and the envelope recipient creates a DocuSign
          account after signing, the Manage Account Email Notification settings are
          used as the default settings for the recipient's account. "
        type: string
      lastName:
        description: The recipient's last name.
        type: string
      lastNameMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `lastName` property is editable.
          This property is read-only.
      lockedRecipientPhoneAuthEditable:
        description: Reserved for DocuSign.
        type: string
      lockedRecipientSmsEditable:
        description: Reserved for DocuSign.
        type: string
      name:
        description: |-
          The full legal name of the recipient. Maximum Length: 100 characters.

          **Note:** You must always set a value for this property in requests, even if `firstName` and `lastName` are set.
        type: string
      nameMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `name` property is editable.
          This property is read-only.
      note:
        description: |
          A note sent to the recipient in the signing email.
          This note is unique to this recipient.
          In the user interface,
          it appears near the upper left corner
          of the document
          on the signing screen.

          Maximum Length: 1000 characters.
        type: string
      noteMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `note` property is editable.
          This property is read-only.
      phoneAuthentication:
        "$ref": "#/definitions/recipientPhoneAuthentication"
        description: |+
          When `idCheckConfigurationName` is set to `Phone Auth $`, you use this complex type to provide the recipient authentication method details. It contains the following elements:

          * `recipMayProvideNumber`: Boolean. When **true,** the recipient can use whatever phone number they choose.
          * `senderProvidedNumbers`: ArrayOfStrings.  A list of phone numbers the recipient can use.
          * `recordVoicePrint`: Reserved for DocuSign.
          * `validateRecipProvidedNumber`: Reserved for DocuSign.

      phoneNumber:
        "$ref": "#/definitions/recipientPhoneNumber"
        description: Describes the recipient phone number.
      recipientAttachments:
        description: Reserved for DocuSign.
        type: array
        items:
          "$ref": "#/definitions/recipientAttachment"
      recipientAuthenticationStatus:
        "$ref": "#/definitions/authenticationStatus"
        description:
          Information about the recipient's authentication status. This
          property is read-only.
      recipientFeatureMetadata:
        description:
          Metadata about the features that are supported for the recipient
          type. This property is read-only.
        type: array
        items:
          "$ref": "#/definitions/featureAvailableMetadata"
      recipientId:
        description: |
          A local reference used to map
          recipients to other objects, such as specific
          document tabs.

          A `recipientId` must be
          either an integer or a GUID,
          and the `recipientId` must be
          unique within an envelope.

          For example, many envelopes assign the first recipient
          a `recipientId` of `1`.
        type: string
      recipientIdGuid:
        description:
          The globally-unique identifier (GUID) for a specific recipient
          on a specific envelope. If the same recipient is associated with multiple
          envelopes, they will have a different GUID for each one. This property is
          read-only.
        type: string
      recipientType:
        description: |-
          The recipient type, as specified by the following values:
          - `agent`: Agent recipients can add name and email information for recipients that appear after the agent in routing order.
          - `carbonCopy`: Carbon copy recipients get a copy of the envelope but don't need to sign, initial, date, or add information to any of the documents. This type of recipient can be used in any routing order.
          - `certifiedDelivery`: Certified delivery recipients must receive the completed documents for the envelope to be completed. They don't need to sign, initial, date, or add information to any of the documents.
          - `editor`: Editors have the same management and access rights for the envelope as the sender. Editors can add name and email information, add or change the routing order, set authentication options, and can edit signature/initial tabs and data fields for the remaining recipients.
          - `inPersonSigner`: In-person recipients are DocuSign users who act as signing hosts in the same physical location as the signer.
          - `intermediaries`: Intermediary recipients can optionally add name and email information for recipients at the same or subsequent level in the routing order.
          - `seal`: Electronic seal recipients represent legal entities.
          - `signer`: Signers are recipients who must sign, initial, date, or add data to form fields on the documents in the envelope.
          - `witness`: Witnesses are recipients whose signatures affirm that the identified signers have signed the documents in the envelope.
        type: string
      recipientTypeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `recipientType` property
          is editable. This property is read-only.
      requireIdLookup:
        description:
          "When **true,** the recipient is required to use the specified
          ID check method (including Phone and SMS authentication) to validate their
          identity. "
        type: string
      requireIdLookupMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `requireIdLookup` property
          is editable. This property is read-only.
      roleName:
        description:
          Optional element. Specifies the role name associated with the
          recipient.<br/><br/>This property is required when you are working with
          template recipients.
        type: string
      routingOrder:
        description: "Specifies the routing order of the recipient in the envelope. "
        type: string
      routingOrderMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `routingOrder` property is
          editable. This property is read-only.
      sentDateTime:
        description:
          The UTC DateTime when the envelope was sent. This property is
          read-only.
        type: string
      signedDateTime:
        description: Reserved for DocuSign.
        type: string
      signingGroupId:
        description:
          "The ID of the [signing group](https://support.docusign.com/s/document-item?bundleId=gav1643676262430&topicId=zgn1578456447934.html).

          "
        type: string
      signingGroupIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `signingGroupId` property
          is editable. This property is read-only.
      signingGroupName:
        description:
          "Optional. The name of the signing group. \n\nMaximum Length:
          100 characters. "
        type: string
      signingGroupUsers:
        description:
          A complex type that contains information about users in the signing
          group.
        type: array
        items:
          "$ref": "#/definitions/userInfo"
      smsAuthentication:
        "$ref": "#/definitions/recipientSMSAuthentication"
        description:
          "When `idCheckConfigurationName` is set to `SMS Auth $`, you
          use this complex type to provide the recipient authentication method details.
          It contains the element `senderProvidedNumbers`, which is an array of phone
          numbers that the recipient can use for SMS text authentication. \n\n"
      socialAuthentications:
        description: Deprecated.
        type: array
        items:
          "$ref": "#/definitions/socialAuthentication"
      status:
        description:
          "The recipient's status. This property is read-only. \n\nValid
          values:\n\n- `autoresponded`: The recipient's email system auto-responded
          to the email from DocuSign. This status is used in the web console to inform
          senders about the bounced-back email. This recipient status is only used
          if **Send-on-behalf-of** is turned off for the account.\n- `completed`:
          The recipient has completed their actions (signing or other required actions
          if not a signer) for an envelope.\n- `created`: The recipient is in a draft
          state. This value is only associated with draft envelopes (envelopes that
          have a status of `created`).\n- `declined`: The recipient declined to sign
          the documents in the envelope.\n- `delivered`: The recipient has viewed
          the documents in an envelope through the DocuSign signing website. This
          is not an email delivery of the documents in an envelope.\n- `faxPending`:
          The recipient has finished signing and the system is waiting for a fax attachment
          from the recipient before completing their signing step.\n- `sent`: The
          recipient has been sent an email notification that it is their turn to sign
          an envelope.\n- `signed`: The recipient has completed (signed) all required
          tags in an envelope. This is a temporary state during processing, after
          which the recipient's status automatically switches to `completed`.\n"
        type: string
      statusCode:
        description:
          The code associated with the recipient's status. This property
          is read-only.
        type: string
      suppressEmails:
        description:
          When **true,** email notifications are suppressed for the recipient,
          and they must access envelopes and documents from their DocuSign inbox.
        type: string
      templateLocked:
        description:
          "When **true,** the sender cannot change any attributes of the
          recipient. Used only when working with template recipients. "
        type: string
      templateRequired:
        description:
          When **true,** the sender may not remove the recipient. Used
          only when working with template recipients.
        type: string
      totalTabCount:
        description: The total number of tabs in the documents. This property is read-only.
        type: string
      userId:
        description: |-
          The ID of the user to access.

          **Note:** Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.
        type: string
    description:
      A complex type defining the management and access rights of a recipient
      assigned as an editor on the envelope. Editors have the same management and
      access rights for the envelope as the sender. They can make changes to the envelope
      as if they were using the Correct feature. This recipient can add name and email
      information, add or change the routing order and set authentication options
      for the remaining recipients. Additionally, this recipient can edit signature/initial
      tabs and text tabs for the remaining recipients.
    x-ds-definition-name: editor
    x-ms-summary:
      A complex type defining the management and access rights of a recipient
      assigned as an editor on the envelope. Editors have the same management and
      access rights for the envelope as the sender. They can make changes to the envelope
      as if they were using the Correct feature. This recipient can add name and email
      information, add or change the routing order and set authentication options
      for the remaining recipients. Additionally, this recipient can edit signature/initial
      tabs and text tabs for the remaining recipients.
  email:
    type: object
    properties:
      anchorAllowWhiteSpaceInCharacters:
        description: |
          When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.

          First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.

          Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.

          The default value is **true.**
        type: string
      anchorAllowWhiteSpaceInCharactersMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorAllowWhiteSpaceInCharacters`
          property is editable.
      anchorCaseSensitive:
        description: |-
          This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**

          For example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.

          This functionality uses the following rules:

          - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:

            $~><|^+=

            For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`

          - Strings embedded in other strings are ignored during the matching process.

          - In words that have dashes, the parts separated by dashes are treated as distinct words.

            Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**

          - Letters with accent marks are treated as distinct characters from their unaccented counterparts.

          - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.

            Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.

          - Unlike punctuation, numbers are not ignored when finding anchor words.

            Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).

          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorCaseSensitiveMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorCaseSensitive` property
          is editable.
      anchorHorizontalAlignment:
        description: |
          This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :

          - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.
          - `right`: Aligns the tab’s left side with the last character of the matching anchor word.

          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorHorizontalAlignmentMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorHorizontalAlignment`
          property is editable.
      anchorIgnoreIfNotPresent:
        description:
          When **true,** this tab is ignored if the `anchorString` is not
          found in the document.
        type: string
      anchorIgnoreIfNotPresentMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorIgnoreIfNotPresent`
          property is editable.
      anchorMatchWholeWord:
        description: |
          When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**

          For example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.

          This functionality uses the following rules:

          - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:

            $~><|^+=

            For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`

          - Strings embedded in other strings are ignored during the matching process.

          - In words that have dashes, the parts separated by dashes are treated as distinct words.

            Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**

          - Letters with accent marks are treated as distinct characters from their unaccented counterparts.

          - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.

            Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.

          - Unlike punctuation, numbers are not ignored when finding anchor words.

            Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).


          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorMatchWholeWordMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorMatchWholeWord` property
          is editable.
      anchorString:
        description:
          Specifies the string to find in the document and use as the basis
          for tab placement.
        type: string
      anchorStringMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorString` property is
          editable.
      anchorTabProcessorVersion:
        description: Reserved for DocuSign.
        type: string
      anchorTabProcessorVersionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Reserved for DocuSign.
      anchorUnits:
        description: |
          Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:

          - `pixels` (default)
          - `inches`
          - `mms`
          - `cms`
        type: string
      anchorUnitsMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorUnits` property is
          editable.
      anchorXOffset:
        description:
          "Specifies the X axis location of the tab in `anchorUnits` relative
          to the `anchorString`.

          "
        type: string
      anchorXOffsetMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorXOffset` property
          is editable.
      anchorYOffset:
        description:
          "Specifies the Y axis location of the tab in `anchorUnits` relative
          to the `anchorString`.

          "
        type: string
      anchorYOffsetMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorYOffset` property
          is editable.
      bold:
        description: When **true,** the information in the tab is bold.
        type: string
      boldMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `bold` property is editable.
      caption:
        description: ""
        type: string
      captionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `caption` property is editable.
      concealValueOnDocument:
        description: |-
          When **true,** the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.

          When an envelope is completed the information is only available to the sender through the Form Data link in the DocuSign Console. The information on the downloaded document remains masked by asterisks.

          This setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.
        type: string
      concealValueOnDocumentMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `concealValueOnDocument`
          property is editable.
      conditionalParentLabel:
        description:
          For conditional fields this is the `tabLabel` of the parent tab
          that controls this tab's visibility.
        type: string
      conditionalParentLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `conditionalParentLabel`
          property is editable.
      conditionalParentValue:
        description: |
          For conditional fields, this is the value of the parent tab that controls the tab's visibility.

          If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use "on" as the value to show that the parent tab is active.
        type: string
      conditionalParentValueMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `conditionalParentValue`
          property is editable.
      customTabId:
        description:
          The DocuSign generated custom tab ID for the custom tab to be
          applied. This can only be used when adding new tabs for a recipient. When
          used, the new tab inherits all the custom tab properties.
        type: string
      customTabIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `customTabId` property is
          editable.
      disableAutoSize:
        description:
          When **true,** disables the auto sizing of single line text boxes
          in the signing screen when the signer enters data. If disabled users will
          only be able enter as much data as the text box can hold. By default this
          is false. This property only affects single line text boxes.
        type: string
      disableAutoSizeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `disableAutoSize` property
          is editable.
      documentId:
        description:
          Specifies the document ID number that the tab is placed on. This
          must refer to an existing Document's ID attribute.
        type: string
      documentIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `documentId` property is
          editable.
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      font:
        description: |
          The font to be used for the tab value. Supported fonts include:

          - Default
          - Arial
          - ArialNarrow
          - Calibri
          - CourierNew
          - Garamond
          - Georgia
          - Helvetica
          - LucidaConsole
          - MSGothic
          - MSMincho
          - OCR-A
          - Tahoma
          - TimesNewRoman
          - Trebuchet
          - Verdana
        type: string
      fontColor:
        description:
          "The font color to use for the information in the tab. Possible
          values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n-
          Gold\n- Green\n- NavyBlue\n- Purple\n- White\n"
        type: string
      fontColorMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `fontColor` property is editable.
      fontMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `font` property is editable.
      fontSize:
        description: |-
          The font size used for the information in the tab. Possible values are:

          - Size7
          - Size8
          - Size9
          - Size10
          - Size11
          - Size12
          - Size14
          - Size16
          - Size18
          - Size20
          - Size22
          - Size24
          - Size26
          - Size28
          - Size36
          - Size48
          - Size72
        type: string
      fontSizeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `fontSize` property is editable.
      formOrder:
        description:
          An integer specifying the order in which the guided form HTML
          should render. The order is relative to the `formPageLabel`, the group by
          which to place the guided form HTML block.
        type: string
      formOrderMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `formOrder` property is editable.
      formPageLabel:
        description:
          A string specifying the group in which to place the guided form
          HTML. Each group displays as a separate guided forms page in the signing
          experience.
        type: string
      formPageLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `formPageLabel` property
          is editable.
      formPageNumber:
        description:
          An integer specifying the order in which to present the guided
          form pages.
        type: string
      formPageNumberMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `fromPageNumber` property
          is editable.
      height:
        description: |-
          The height of the tab in pixels.
          Must be an integer.
        type: string
      heightMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `height` property is editable.
      italic:
        description: When **true,** the information in the tab is italic.
        type: string
      italicMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `italic` property is editable.
      localePolicy:
        "$ref": "#/definitions/localePolicyTab"
        description: Locale-specific settings.
      locked:
        description:
          When **true,** the signer cannot change the data of the custom
          tab.
        type: string
      lockedMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `locked` property is editable.
      maxLength:
        description:
          An optional value that describes the maximum length of the property
          when the property is a string.
        type: string
      maxLengthMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `maxLength` property is editable.
      mergeField:
        "$ref": "#/definitions/mergeField"
        description:
          Contains the information necessary to map the tab to a field
          in SalesForce.
      mergeFieldXml:
        description: Reserved for DocuSign.
        type: string
      name:
        description: |-
          The name of the tab. For example, `Sign Here` or `Initial Here`.

          If the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.
        type: string
      nameMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `name` property is editable.
          This property is read-only.
      originalValue:
        description: "The initial value of the tab. "
        type: string
      originalValueMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `originalValue` property
          is editable.
      pageNumber:
        description: |-
          The page number on which the tab is located.
          For supplemental documents, this value must be `1`.
        type: string
      pageNumberMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `pageNumber` property is
          editable.
      recipientId:
        description:
          "The ID of the recipient to whom the tab will be assigned. This
          value should match the `recipientId` defined in the recipient object.

          "
        type: string
      recipientIdGuid:
        description:
          The globally-unique identifier (GUID) for a specific recipient
          on a specific envelope. If the same recipient is associated with multiple
          envelopes, they will have a different GUID for each one. This property is
          read-only.
        type: string
      recipientIdGuidMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `recipientIdGuid` property
          is editable.
      recipientIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `recipientId` property is
          editable.
      requireAll:
        description:
          "When **true** and shared is true, information must be entered
          in this field to complete the envelope. "
        type: string
      requireAllMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `requireAll` property is
          editable.
      required:
        description: When **true,** the signer is required to fill out this tab.
        type: string
      requiredMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `required` property is editable.
      requireInitialOnSharedChange:
        description:
          Optional element for field markup. When **true,** the signer
          is required to initial when they modify a shared field.
        type: string
      requireInitialOnSharedChangeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `requireInitialOnSharedChange`
          property is editable.
      senderRequired:
        description:
          "When **true,** the sender must populate the tab before an envelope
          can be sent using the template. \n\nThis value tab can only be changed by
          modifying (PUT) the template. \n\nTabs with a `senderRequired` value of
          true cannot be deleted from an envelope."
        type: string
      senderRequiredMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `senderRequired` property
          is editable.
      shared:
        description: When **true,** this tab is shared.
        type: string
      sharedMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `shared` property is editable.
      shareToRecipients:
        description: Reserved for DocuSign.
        type: string
      shareToRecipientsMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Reserved for DocuSign.
      smartContractInformation:
        "$ref": "#/definitions/smartContractInformation"
        description: Reserved for DocuSign.
      source:
        description: Reserved for DocuSign.
        type: string
      status:
        description: |
          The status of the tab. Possible values are:

          - `active`: The tab is active, but the recipient has not yet interacted with it.
          - `signed`: The recipient signed the tab.
          - `declined`: The recipient declined the envelope.
          - `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).
        type: string
      statusMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `status` property is editable.
      tabGroupLabels:
        description: |-
          An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.

          To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
        type: array
        items:
          type: string
      tabGroupLabelsMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `tabGroupLabels` property
          is editable.
      tabId:
        description: The unique identifier for the tab.
        type: string
      tabIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabId` property is editable.
      tabLabel:
        description: |
          The label associated with the tab. This value may be an empty string.
          If no value is provided, the tab type is used as the value.

          Maximum Length: 500 characters.
        type: string
      tabLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabLabel` property is editable.
      tabOrder:
        description: |-
          A positive integer that sets the order the tab is navigated to during signing.

          Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
        type: string
      tabOrderMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabOrder` property is editable.
      tabType:
        description: Indicates the type of tab (for example, `signHere` or `initialHere`).
        type: string
      tabTypeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabType` property is editable.
      templateLocked:
        description:
          "When **true,** the sender cannot change any attributes of the
          recipient. Used only when working with template recipients. "
        type: string
      templateLockedMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `templateLocked` property
          is editable.
      templateRequired:
        description:
          When **true,** the sender may not remove the recipient. Used
          only when working with template recipients.
        type: string
      templateRequiredMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `templateRequired` property
          is editable.
      tooltip:
        description:
          "The text of a tooltip that appears when a user hovers over a
          form field or tab.

          "
        type: string
      toolTipMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          "Metadata that indicates whether the `toolTip` property is editable.

          "
      underline:
        description: When **true,** the information in the tab is underlined.
        type: string
      underlineMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `underline` property is editable.
      validationMessage:
        description:
          The message displayed if the custom tab fails input validation
          (either custom of embedded).
        type: string
      validationMessageMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `validationMessage` property
          is editable.
      validationPattern:
        description: A regular expression used to validate input for the tab.
        type: string
      validationPatternMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `validationPattern` property
          is editable.
      value:
        description: "Specifies the value of the tab. "
        type: string
      valueMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `value` property is editable.
      width:
        description: |-
          The width of the tab in pixels.
          Must be an integer.
        type: string
      widthMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `width` property is editable.
      xPosition:
        description: |
          This property indicates the horizontal offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. Must be an integer. May be zero.

          To improve the tab's position on the document,
          DocuSign recommends
          adjusting `xPosition`
          and `yPosition`
          coordinates
          by (-3, -2)
        type: string
      xPositionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `xPosition` property is editable.
      yPosition:
        description: |
          This property indicates the vertical offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. Must be an integer. May be zero.

          To improve the tab's position on the document,
          DocuSign recommends
          adjusting `xPosition`
          and `yPosition`
          coordinates
          by (-3, -2)
        type: string
      yPositionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `yPosition` property is editable.
    description: |
      A tab that allows the recipient to enter an email address.
      This is a one-line field that checks that a valid email
      address is entered. It uses the same parameters as a Text
      tab, with the validation message and pattern set for email
      information.

      When getting information that includes
      this tab type, the original value of the tab when the
      associated envelope was sent is included in the response.
    x-ds-definition-name: email
    x-ms-summary: |
      A tab that allows the recipient to enter an email address.
      This is a one-line field that checks that a valid email
      address is entered. It uses the same parameters as a Text
      tab, with the validation message and pattern set for email
      information.

      When getting information that includes
      this tab type, the original value of the tab when the
      associated envelope was sent is included in the response.
  emailAddress:
    type: object
    properties:
      anchorAllowWhiteSpaceInCharacters:
        description: |
          When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.

          First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.

          Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.

          The default value is **true.**
        type: string
      anchorAllowWhiteSpaceInCharactersMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorAllowWhiteSpaceInCharacters`
          property is editable.
      anchorCaseSensitive:
        description: |-
          This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**

          For example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.

          This functionality uses the following rules:

          - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:

            $~><|^+=

            For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`

          - Strings embedded in other strings are ignored during the matching process.

          - In words that have dashes, the parts separated by dashes are treated as distinct words.

            Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**

          - Letters with accent marks are treated as distinct characters from their unaccented counterparts.

          - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.

            Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.

          - Unlike punctuation, numbers are not ignored when finding anchor words.

            Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).

          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorCaseSensitiveMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorCaseSensitive` property
          is editable.
      anchorHorizontalAlignment:
        description: |
          This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :

          - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.
          - `right`: Aligns the tab’s left side with the last character of the matching anchor word.

          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorHorizontalAlignmentMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorHorizontalAlignment`
          property is editable.
      anchorIgnoreIfNotPresent:
        description:
          When **true,** this tab is ignored if the `anchorString` is not
          found in the document.
        type: string
      anchorIgnoreIfNotPresentMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorIgnoreIfNotPresent`
          property is editable.
      anchorMatchWholeWord:
        description: |
          When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**

          For example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.

          This functionality uses the following rules:

          - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:

            $~><|^+=

            For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`

          - Strings embedded in other strings are ignored during the matching process.

          - In words that have dashes, the parts separated by dashes are treated as distinct words.

            Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**

          - Letters with accent marks are treated as distinct characters from their unaccented counterparts.

          - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.

            Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.

          - Unlike punctuation, numbers are not ignored when finding anchor words.

            Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).


          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorMatchWholeWordMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorMatchWholeWord` property
          is editable.
      anchorString:
        description:
          Specifies the string to find in the document and use as the basis
          for tab placement.
        type: string
      anchorStringMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorString` property is
          editable.
      anchorTabProcessorVersion:
        description: Reserved for DocuSign.
        type: string
      anchorTabProcessorVersionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Reserved for DocuSign.
      anchorUnits:
        description: |
          Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:

          - `pixels` (default)
          - `inches`
          - `mms`
          - `cms`
        type: string
      anchorUnitsMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorUnits` property is
          editable.
      anchorXOffset:
        description:
          "Specifies the X axis location of the tab in `anchorUnits` relative
          to the `anchorString`.

          "
        type: string
      anchorXOffsetMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorXOffset` property
          is editable.
      anchorYOffset:
        description:
          "Specifies the Y axis location of the tab in `anchorUnits` relative
          to the `anchorString`.

          "
        type: string
      anchorYOffsetMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorYOffset` property
          is editable.
      bold:
        description: When **true,** the information in the tab is bold.
        type: string
      boldMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `bold` property is editable.
      caption:
        description: ""
        type: string
      captionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `caption` property is editable.
      conditionalParentLabel:
        description:
          For conditional fields this is the `tabLabel` of the parent tab
          that controls this tab's visibility.
        type: string
      conditionalParentLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `conditionalParentLabel`
          property is editable.
      conditionalParentValue:
        description: |
          For conditional fields, this is the value of the parent tab that controls the tab's visibility.

          If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use "on" as the value to show that the parent tab is active.
        type: string
      conditionalParentValueMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `conditionalParentValue`
          property is editable.
      customTabId:
        description:
          The DocuSign-generated custom tab ID for the custom tab to be
          applied. This property can only be used when adding new tabs for a recipient.
          When used, the new tab inherits all the custom tab properties.
        type: string
      customTabIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `customTabId` property is
          editable.
      documentId:
        description:
          Specifies the document ID number that the tab is placed on. This
          must refer to an existing Document's ID attribute.
        type: string
      documentIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `documentId` property is
          editable.
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      font:
        description: |
          The font to be used for the tab value. Supported fonts include:

          - Default
          - Arial
          - ArialNarrow
          - Calibri
          - CourierNew
          - Garamond
          - Georgia
          - Helvetica
          - LucidaConsole
          - MSGothic
          - MSMincho
          - OCR-A
          - Tahoma
          - TimesNewRoman
          - Trebuchet
          - Verdana
        type: string
      fontColor:
        description:
          "The font color to use for the information in the tab. Possible
          values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n-
          Gold\n- Green\n- NavyBlue\n- Purple\n- White\n"
        type: string
      fontColorMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `fontColor` property is editable.
      fontMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `font` property is editable.
      fontSize:
        description: |-
          The font size used for the information in the tab. Possible values are:

          - Size7
          - Size8
          - Size9
          - Size10
          - Size11
          - Size12
          - Size14
          - Size16
          - Size18
          - Size20
          - Size22
          - Size24
          - Size26
          - Size28
          - Size36
          - Size48
          - Size72
        type: string
      fontSizeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `fontSize` property is editable.
      formOrder:
        description:
          An integer specifying the order in which the guided form HTML
          should render. The order is relative to the `formPageLabel`, the group by
          which to place the guided form HTML block.
        type: string
      formOrderMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `formOrder` property is editable.
      formPageLabel:
        description:
          A string specifying the group in which to place the guided form
          HTML. Each group displays as a separate guided forms page in the signing
          experience.
        type: string
      formPageLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `formPageLabel` property
          is editable.
      formPageNumber:
        description:
          An integer specifying the order in which to present the guided
          form pages.
        type: string
      formPageNumberMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `fromPageNumber` property
          is editable.
      height:
        description: |-
          The height of the tab in pixels.
          Must be an integer.
        type: string
      heightMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `height` property is editable.
      italic:
        description: When **true,** the information in the tab is italic.
        type: string
      italicMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `italic` property is editable.
      localePolicy:
        "$ref": "#/definitions/localePolicyTab"
        description: Locale-specific settings.
      mergeField:
        "$ref": "#/definitions/mergeField"
        description:
          Contains the information necessary to map the tab to a field
          in SalesForce.
      mergeFieldXml:
        description: Reserved for DocuSign.
        type: string
      name:
        description:
          "The name of the tab. For example, `Sign Here` or `Initial Here`.

          "
        type: string
      nameMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `name` property is editable.
          This property is read-only.
      pageNumber:
        description: |
          The page number on which the tab is located.
          For supplemental documents, this value must be `1`.
        type: string
      pageNumberMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `pageNumber` property is
          editable.
      recipientId:
        description:
          "The ID of the recipient to whom the tab will be assigned. This
          value should match the `recipientId` defined in the recipient object.

          "
        type: string
      recipientIdGuid:
        description:
          The globally-unique identifier (GUID) for a specific recipient
          on a specific envelope. If the same recipient is associated with multiple
          envelopes, they will have a different GUID for each one. This property is
          read-only.
        type: string
      recipientIdGuidMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `recipientIdGuid` property
          is editable.
      recipientIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `recipientId` property is
          editable.
      smartContractInformation:
        "$ref": "#/definitions/smartContractInformation"
        description: Reserved for DocuSign.
      source:
        description: Reserved for DocuSign.
        type: string
      status:
        description: |-
          The status of the tab. Possible values are:

          - `active`: The tab is active, but the recipient has not yet interacted with it.
          - `signed`: The recipient signed the tab.
          - `declined`: The recipient declined the envelope.
          - `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).
        type: string
      statusMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `status` property is editable.
      tabGroupLabels:
        description: |-
          An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.

          To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
        type: array
        items:
          type: string
      tabGroupLabelsMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `tabGroupLabels` property
          is editable.
      tabId:
        description: The unique identifier for the tab.
        type: string
      tabIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabId` property is editable.
      tabLabel:
        description: |
          The label associated with the tab. This value may be an empty string.
          If no value is provided, the tab type is used as the value.

          Maximum Length: 500 characters.
        type: string
      tabLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabLabel` property is editable.
      tabOrder:
        description: |-
          A positive integer that sets the order the tab is navigated to during signing.

          Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
        type: string
      tabOrderMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabOrder` property is editable.
      tabType:
        description: Indicates the type of tab (for example, `signHere` or `initialHere`).
        type: string
      tabTypeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabType` property is editable.
      templateLocked:
        description:
          "When **true,** the sender cannot change any attributes of the
          recipient. Used only when working with template recipients. "
        type: string
      templateLockedMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `templateLocked` property
          is editable.
      templateRequired:
        description:
          When **true,** the sender may not remove the recipient. Used
          only when working with template recipients.
        type: string
      templateRequiredMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `templateRequired` property
          is editable.
      tooltip:
        description: |
          **Note:** Email Address tabs never display this tooltip in the signing interface.

          Although you can technically set a value via the API for this tab,
          it will not be displayed to the recipient.
        type: string
      toolTipMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          "Metadata that indicates whether the `toolTip` property is editable.

          "
      underline:
        description: When **true,** the information in the tab is underlined.
        type: string
      underlineMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `underline` property is editable.
      value:
        description: "Specifies the value of the tab. "
        type: string
      valueMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `value` property is editable.
      width:
        description: |-
          The width of the tab in pixels.
          Must be an integer.
        type: string
      widthMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `width` property is editable.
      xPosition:
        description: |
          This property indicates the horizontal offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. Must be an integer. May be zero.

          To improve the tab's position on the document,
          DocuSign recommends
          adjusting `xPosition`
          and `yPosition`
          coordinates
          by (-3, -2)
        type: string
      xPositionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `xPosition` property is editable.
      yPosition:
        description: |
          This property indicates the vertical offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. Must be an integer. May be zero.

          To improve the tab's position on the document,
          DocuSign recommends
          adjusting `xPosition`
          and `yPosition`
          coordinates
          by (-3, -2)
        type: string
      yPositionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `yPosition` property is editable.
    description: |
      A tab that displays the recipient's email as entered in the
      recipient information.
    x-ds-definition-name: emailAddress
    x-ms-summary: |
      A tab that displays the recipient's email as entered in the
      recipient information.
  emailSettings:
    description:
      "A complex element that allows  the sender to override some envelope
      email setting information. This can be used to override the Reply To email address
      and name associated with the envelope and to override the BCC email addresses
      to which an envelope is sent. \n\nWhen the emailSettings information is used
      for an envelope, it only applies to that envelope. \n\n**IMPORTANT:** The emailSettings
      information is not returned in the GET for envelope status. Use GET /email_settings
      to return information about the emailSettings. \n\nEmailSettings consists of:
      \n\n* replyEmailAddressOverride - The Reply To email used for the envelope.
      DocuSign will verify that a correct email format is used, but does not verify
      that the email is active. Maximum Length: 100 characters.\n* replyEmailNameOverride
      - The name associated with the Reply To email address. Maximum Length: 100 characters.\n*
      bccEmailAddresses - An array of up to five email addresses to which the envelope
      is sent to as a BCC email. Only users with canManageAccount setting set to true
      can use this option. \nDocuSign verifies that the email format is correct, but
      does not verify that the email is active. Using this overrides the BCC for Email
      Archive information setting for this envelope. Maximum Length: 100 characters.\n*Example*:
      if your account has BCC for Email Archive set up for the email address 'archive@mycompany.com'
      and you send an envelope using the BCC Email Override to send a BCC email to
      'salesarchive@mycompany.com', then a copy of the envelope is only sent to the
      'salesarchive@mycompany.com' email address."
    type: object
    properties:
      bccEmailAddresses:
        description:
          "An array containing the email address that should receive a
          copy of all email communications related to an envelope for archiving purposes.
          Maximum Length: 100 characters.\n\nWhile this property is an array, note
          that it takes only a single email address.\n\n**Note:** Only users with
          the `canManageAccount` setting set to **true** can use this option. \n\nDocuSign
          verifies that the email format is correct, but does not verify that the
          email address is active. You can use this for archiving purposes. However,
          using this property overrides the BCC for Email Archive information setting
          for this envelope. \n\n**Example:** if your account has BCC for Email Archive
          set up for the email address archive@mycompany.com and you send an envelope
          using the BCC Email Override to send a BCC email to salesarchive@mycompany.com,
          then a copy of the envelope is only sent to the salesarchive@mycompany.com
          email address."
        type: array
        items:
          "$ref": "#/definitions/bccEmailAddress"
      replyEmailAddressOverride:
        description:
          "The Reply To email address to use for email replies, instead
          of the one that is configured at the account level. DocuSign verifies that
          the email address is in a correct format, but does not verify that it is
          active. Maximum Length: 100 characters."
        type: string
      replyEmailNameOverride:
        description:
          "The name to associate with the Reply To email address, instead
          of the name that is configured at the account level. Maximum Length: 100
          characters."
        type: string
    x-ds-definition-name: emailSettings
    x-ms-summary:
      "A complex element that allows  the sender to override some envelope
      email setting information. This can be used to override the Reply To email address
      and name associated with the envelope and to override the BCC email addresses
      to which an envelope is sent. \n\nWhen the emailSettings information is used
      for an envelope, it only applies to that envelope. \n\n**IMPORTANT:** The emailSettings
      information is not returned in the GET for envelope status. Use GET /email_settings
      to return information about the emailSettings. \n\nEmailSettings consists of:
      \n\n* replyEmailAddressOverride - The Reply To email used for the envelope.
      DocuSign will verify that a correct email format is used, but does not verify
      that the email is active. Maximum Length: 100 characters.\n* replyEmailNameOverride
      - The name associated with the Reply To email address. Maximum Length: 100 characters.\n*
      bccEmailAddresses - An array of up to five email addresses to which the envelope
      is sent to as a BCC email. Only users with canManageAccount setting set to true
      can use this option. \nDocuSign verifies that the email format is correct, but
      does not verify that the email is active. Using this overrides the BCC for Email
      Archive information setting for this envelope. Maximum Length: 100 characters.\n*Example*:
      if your account has BCC for Email Archive set up for the email address 'archive@mycompany.com'
      and you send an envelope using the BCC Email Override to send a BCC email to
      'salesarchive@mycompany.com', then a copy of the envelope is only sent to the
      'salesarchive@mycompany.com' email address."
  eNoteConfiguration:
    type: object
    properties:
      apiKey:
        description: ""
        type: string
      connectConfigured:
        description:
          When **false,** the user must configure Connect and eOriginal
          for the integration to work.
        type: string
      eNoteConfigured:
        description: |-
          When **false,** the user must configure eNote for the feature to work.

          **Note:** In the account settings, `allowENoteEOriginal` must be **true**
          to make changes to the configuration.
        type: string
      organization:
        description: The name of the organization.
        type: string
      password:
        description: The user's encrypted password hash.
        type: string
      userName:
        description: The user's username.
        type: string
    description: |
      This object contains information used to
      configure [eNote][eNote] functionality.
      To use eNote, the Allow eNote for eOriginal account plan item must be on,
      and the Connect configuration for eOriginal must be set correctly.

      [eNote]: https://support.docusign.com/s/document-item?bundleId=pik1583277475390&topicId=tsn1583277394951.html
    x-ds-definition-name: eNoteConfiguration
    x-ms-summary: |
      This object contains information used to
      configure [eNote][eNote] functionality.
      To use eNote, the Allow eNote for eOriginal account plan item must be on,
      and the Connect configuration for eOriginal must be set correctly.

      [eNote]: https://support.docusign.com/s/document-item?bundleId=pik1583277475390&topicId=tsn1583277394951.html
  envelope:
    type: object
    properties:
      accessControlListBase64:
        description: Reserved for DocuSign.
        type: string
      allowComments:
        description:
          When **true,** users can add comments to the documents in the
          envelope. For example, if a signer has a question about the text in the
          document, they can add a comment to the document.
        type: string
      allowMarkup:
        description: |
          When **true,** the Document Markup feature is enabled.

          **Note:**  To use this feature, Document Markup must be enabled at both the account and envelope levels. Only Admin users can change this setting at the account level.
        type: string
      allowReassign:
        description:
          When **true,** the recipient can redirect an envelope to a more
          appropriate recipient.
        type: string
      allowViewHistory:
        description: When **true,** recipients can view the history of the envelope.
        type: string
      anySigner:
        description: Deprecated. This feature has been replaced by signing groups.
        type: string
      asynchronous:
        description: |-
          When **true,** the envelope is queued for
          processing and the value of the `status` property
          is set to `Processing`. Additionally, GET status
          calls return `Processing` until completed.


          **Note:** A `transactionId` is required for this
          call to work correctly. When the envelope is
          created, the status is `Processing` and an
          `envelopeId` is not returned in the response. To
          get the `envelopeId`, use a GET envelope query by
          using the
          [transactionId](/docs/esign-rest-api/reference/envelopes/envelopes/create/) or by checking the
          Connect notification.
        type: string
      attachmentsUri:
        description:
          Contains a URL for retrieving the attachments that are associated
          with the envelope.
        type: string
      authoritativeCopy:
        description: |-
          When **true,** marks all of the documents in the envelope as authoritative copies.

          **Note:** You can override this value for a specific document. For example, you can set the `authoritativeCopy` property to **true** at the envelope level, but turn it off for a single document by setting the `authoritativeCopy` property for the document to **false.**
        type: string
      authoritativeCopyDefault:
        description: |-
          The default `authoritativeCopy` setting for documents in this envelope that do not have `authoritativeCopy` set.
          If this property is not set, each document defaults to the envelope's `authoritativeCopy`.
        type: string
      autoNavigation:
        description: "When **true,** autonavigation is set for the recipient.

          "
        type: string
      brandId:
        description: The ID of the brand.
        type: string
      brandLock:
        description:
          When **true,** the `brandId` for the envelope is locked and senders
          cannot change the brand used for the envelope.
        type: string
      burnDefaultTabData:
        description: ""
        type: string
      certificateUri:
        description: The URI for retrieving certificate information.
        type: string
      completedDateTime:
        description: Specifies the date and time this item was completed.
        type: string
      copyRecipientData:
        description: ""
        type: string
      createdDateTime:
        description: The UTC DateTime when the item was created.
        type: string
      customFields:
        "$ref": "#/definitions/AccountCustomFields"
        description:
          An optional array of strings that enables the sender to provide
          custom data about the envelope. This information is returned in the envelope
          status but otherwise not used by DocuSign. Each `customField` string can
          be a maximum of 100 characters.
      customFieldsUri:
        description: The URI for retrieving custom fields.
        type: string
      declinedDateTime:
        description:
          The date and time the recipient declined the document. This property
          is read-only.
        type: string
      deletedDateTime:
        description: Reserved for DocuSign.
        type: string
      deliveredDateTime:
        description:
          The date and time that the envelope was delivered to the recipient.
          This property is read-only.
        type: string
      disableResponsiveDocument:
        description: When **true,** responsive documents are disabled for the envelope.
        type: string
      documentBase64:
        description:
          The document's bytes. This field can be used to include a base64
          version of the document bytes within an envelope definition instead of sending
          the document using a multi-part HTTP request. The maximum document size
          is smaller if this field is used due to the overhead of the base64 encoding.
        type: string
      documentsCombinedUri:
        description:
          The URI for retrieving all of the documents associated with the
          envelope as a single PDF file.
        type: string
      documentsUri:
        description:
          The URI for retrieving all of the documents associated with the
          envelope as separate files.
        type: string
      emailBlurb:
        description:
          This is the same as the email body. If specified it is included
          in email body for all envelope recipients.
        type: string
      emailSettings:
        "$ref": "#/definitions/emailSettings"
        description: A complex type that contains email settings.
      emailSubject:
        description: |
          The subject line of the email message that is sent to all recipients.

          For information about adding merge field information to the email subject, see [Template Email Subject Merge Fields](/docs/esign-rest-api/reference/templates/templates/create/#template-email-subject-merge-fields).

          **Note:** The subject line is limited to 100 characters, including any merged fields.It is not truncated. It is an error if the text is longer than 100 characters.
        type: string
      enableWetSign:
        description:
          When **true,** the signer is allowed to print the document and
          sign it on paper.
        type: string
      enforceSignerVisibility:
        description: |-
          When **true,** signers can only view the documents on which they have tabs. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all of the documents in an envelope, unless they are specifically excluded by using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded by using this setting when an envelope is sent.

          **Note:** To use this functionality, [Document Visibility][docviz] must be enabled for the account by making the account setting `allowDocumentVisibility` **true.**

          [docviz]: /docs/esign-rest-api/reference/envelopes/envelopedocumentvisibility/
        type: string
      envelopeAttachments:
        description:
          An array of attachment objects that provide information about
          the attachments that are associated with the envelope.
        type: array
        items:
          "$ref": "#/definitions/attachment"
      envelopeCustomMetadata:
        "$ref": "#/definitions/envelopeCustomMetadata"
        description: ""
      envelopeDocuments:
        description:
          An array containing information about the documents that are
          included in the envelope.
        type: array
        items:
          "$ref": "#/definitions/envelopeDocument"
      envelopeId:
        description: The envelope ID of the envelope status that failed to post.
        type: string
      envelopeIdStamping:
        description: |-
          When **true,** [Envelope ID Stamping](https://support.docusign.com/s/document-item?bundleId=gbo1643332197980&topicId=tfm1578456367923.html) is enabled.
          After a document or attachment is stamped with an Envelope ID,
          the ID is seen by all recipients
          and becomes a permanent part of the document
          and cannot be removed.
        type: string
      envelopeLocation:
        description: Reserved for DocuSign.
        type: string
      envelopeMetadata:
        "$ref": "#/definitions/envelopeMetadata"
        description:
          Provides information about the features and services that are
          enabled for the envelope, including the Correct feature, the Advanced Correct
          feature, and DocuSign eNotary service.
      envelopeUri:
        description: The URI for retrieving the envelope or envelopes.
        type: string
      expireAfter:
        description: |-
          Not used. Use the
          [`expirations`](/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification_expirations)
          property in the [`notification`](/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification) object instead.
        type: string
      expireDateTime:
        description:
          "The date and time that the envelope is set to expire. This value
          is determined by the `InitialSentDateTime` of the envelope and the `expireAfter`
          property of the `notification` object. (Note that the `expireAfter` property
          of the envelope itself is not used.)

          "
        type: string
      expireEnabled:
        description: |-
          Not used. Use the
          [`expirations`](/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification_expirations)
          property in the [`notification`](/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification) object instead.
        type: string
      externalEnvelopeId:
        description: May contain an external identifier for the envelope.
        type: string
      folders:
        description: A list of folder objects.
        type: array
        items:
          "$ref": "#/definitions/folder"
      hasComments:
        description:
          When **true,** indicates that users have added comments to the
          envelope.
        type: string
      hasFormDataChanged:
        description:
          When **true,** indicates that the data collected through form
          fields on a document has changed.
        type: string
      hasWavFile:
        description:
          "When **true,** indicates that a .wav file used for voice authentication
          is included in the envelope. "
        type: string
      holder:
        description: Reserved for DocuSign.
        type: string
      initialSentDateTime:
        description: The date and time the envelope was initially sent.
        type: string
      is21CFRPart11:
        description:
          When **true,** indicates compliance with United States Food and
          Drug Administration (FDA) regulations on electronic records and electronic
          signatures (ERES).
        type: string
      isDynamicEnvelope:
        description: When **true,** indicates that the envelope is a dynamic envelope.
        type: string
      isSignatureProviderEnvelope:
        description:
          When **true,** indicates that the envelope is a signature-provided
          envelope.
        type: string
      lastModifiedDateTime:
        description: The date and time that the item was last modified.
        type: string
      location:
        description: Reserved for DocuSign.
        type: string
      lockInformation:
        "$ref": "#/definitions/EnvelopeLocks"
        description: Provides lock information about an envelope that a user has locked.
      messageLock:
        description:
          "When **true,** prevents senders from changing the contents of
          `emailBlurb` and `emailSubject` properties for the envelope. \n\nAdditionally,
          this prevents users from making changes to the contents of `emailBlurb`
          and `emailSubject` properties when correcting envelopes. \n\nHowever, if
          the `messageLock` node is set to **true** and the `emailSubject` property
          is empty, senders and correctors are able to add a subject to the envelope."
        type: string
      notification:
        "$ref": "#/definitions/notification"
        description: ""
      notificationUri:
        description: The URI for retrieving notifications.
        type: string
      powerForm:
        "$ref": "#/definitions/powerForm"
        description: Information about any PowerForms that are included in the envelope.
      purgeCompletedDate:
        description: The date that a purge was completed.
        type: string
      purgeRequestDate:
        description: The date that a purge was requested.
        type: string
      purgeState:
        description: |+
          Shows the current purge state for the envelope. Valid values:

          - `unpurged`: There has been no successful request to purge documents.
          - `documents_queued`: The envelope documents have been added to the purge queue, but have not been purged.
          - `documents_dequeued`: The envelope documents have been taken out of the purge queue.
          - `documents_purged`: The envelope documents have been successfully purged.
          - `documents_and_metadata_queued`: The envelope documents and metadata have been added to the purge queue, but have not yet been purged.
          - `documents_and_metadata_purged`: The envelope documents and metadata have been successfully purged.
          - `documents_and_metadata_and_redact_queued`: The envelope documents and metadata have been added to the purge queue, but have not yet been purged, nor has personal information been redacted.
          - `documents_and_metadata_and_redact_purged`: The envelope documents and metadata have been successfully purged, and personal information has been redacted.

          **Related topics**

          - [Purging documents (eSingature Concepts)](/docs/esign-rest-api/esign101/concepts/documents/purging/)
          - [Purging documents in an envelope (blog post)](https://www.docusign.com/blog/developers/purging-documents-envelope)

        type: string
      recipients:
        "$ref": "#/definitions/EnvelopeRecipients"
        description:
          An array of recipient objects that provides details about the
          recipients of the envelope.
      recipientsLock:
        description:
          When **true,** prevents senders from changing, correcting, or
          deleting the recipient information for the envelope.
        type: string
      recipientsUri:
        description:
          Contains a URI for an endpoint that you can use to retrieve the
          recipients.
        type: string
      sender:
        "$ref": "#/definitions/userInfo"
        description: Information about the sender of the envelope.
      sentDateTime:
        description:
          The UTC DateTime when the envelope was sent. This property is
          read-only.
        type: string
      signerCanSignOnMobile:
        description: |
          When **true,** recipients can sign on a mobile device.

          **Note:** Only Admin users can change this setting.
        type: string
      signingLocation:
        description:
          Specifies the physical location where the signing takes place.
          It can have two enumeration values; `inPerson` and `online`. The default
          value is `online`.
        type: string
      status:
        description: |
          Indicates the envelope status. Valid values are:

          * `completed`: The recipients have finished working with the envelope: the documents are signed and all required tabs are filled in.
          * `created`: The envelope is created as a draft. It can be modified and sent later.
          * `declined`: The envelope has been declined by the recipients.
          * `delivered`: The envelope has been delivered to the recipients.
          * `sent`: The envelope will be sent to the recipients after the envelope is created.
          * `signed`: The envelope has been signed by the recipients.
          * `voided`: The envelope is no longer valid and recipients cannot access or sign the envelope.
        type: string
      statusChangedDateTime:
        description: The data and time that the status changed.
        type: string
      statusDateTime:
        description:
          The DateTime that the envelope changed status (i.e. was created
          or sent.)
        type: string
      templatesUri:
        description: The URI for retrieving the templates.
        type: string
      transactionId:
        description: |2-
           Used to identify an envelope.

           The ID is a sender-generated value and is valid in the DocuSign system for 7 days.
           It is recommended that a transaction ID is used for offline
           signing to ensure that an envelope is not sent multiple times.
           The `transactionId` property can be used determine an envelope's
           status (i.e. was it created or not) in cases where the internet c
           onnection was lost before the envelope status was returned.
        type: string
      useDisclosure:
        description:
          "When **true,** the disclosure is shown to recipients in accordance
          with the account's Electronic Record and Signature Disclosure frequency
          setting. When **false,** the Electronic Record and Signature Disclosure
          is not shown to any envelope recipients. \n\nIf the `useDisclosure` property
          is not set, then the account's normal disclosure setting is used and the
          value of the `useDisclosure` property is not returned in responses when
          getting envelope information."
        type: string
      voidedDateTime:
        description: The date and time the envelope or template was voided.
        type: string
      voidedReason:
        description: |
          The reason the envelope or template was voided.

          **Note:** The string is truncated to the first 200 characters.
        type: string
      workflow:
        "$ref": "#/definitions/workflow"
        description: ""
    x-ds-definition-name: envelope
    description: ""
    x-ms-summary: ""
  envelopeAttachment:
    type: object
    properties:
      accessControl:
        description: Valid values are `sender` and `senderAndAllRecipients`.
        type: string
      attachmentId:
        description: The unique identifier for the attachment.
        type: string
      attachmentType:
        description: |-
          Specifies the type of the attachment for the recipient. Possible values are:

          - `.htm`
          - `.xml`
        type: string
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      label:
        description: ""
        type: string
      name:
        description: ""
        type: string
    x-ds-definition-name: envelopeAttachment
    description: ""
    x-ms-summary: ""
  envelopeAttachmentsRequest:
    type: object
    properties:
      attachments:
        description: An object that contains information about the attachment.
        type: array
        items:
          "$ref": "#/definitions/attachment"
    x-ds-definition-name: envelopeAttachmentsRequest
    description: ""
    x-ms-summary: ""
  envelopeAttachmentsResult:
    type: object
    properties:
      attachments:
        description:
          An array of attachment objects that contain information about
          the attachments.
        type: array
        items:
          "$ref": "#/definitions/envelopeAttachment"
    x-ds-definition-name: envelopeAttachmentsResult
    description: ""
    x-ms-summary: ""
  envelopeAuditEvent:
    type: object
    properties:
      eventFields:
        description: ""
        type: array
        items:
          "$ref": "#/definitions/nameValue"
    x-ds-definition-name: envelopeAuditEvent
    description: ""
    x-ms-summary: ""
  envelopeAuditEventResponse:
    type: object
    properties:
      auditEvents:
        description: Reserved for DocuSign.
        type: array
        items:
          "$ref": "#/definitions/envelopeAuditEvent"
    x-ds-definition-name: envelopeAuditEventResponse
    description: ""
    x-ms-summary: ""
  envelopeCustomMetadata:
    type: object
    properties:
      envelopeCustomMetadataDetails:
        description: ""
        type: array
        items:
          "$ref": "#/definitions/nameValue"
    x-ds-definition-name: envelopeCustomMetadata
    description: ""
    x-ms-summary: ""
  envelopeDefinition:
    type: object
    properties:
      accessControlListBase64:
        description: Reserved for DocuSign.
        type: string
      accessibility:
        description: |-
          Sets the document reading zones for screen reader applications.  This element can only be used if Document Accessibility is enabled for the account.

          **Note:** This information is currently generated from the DocuSign web console by setting the reading zones when creating a template, exporting the reading zone string information, and adding it here.
        type: string
      allowComments:
        description: When **true,** comments are allowed on the envelope.
        type: string
      allowMarkup:
        description: |
          When **true,** the Document Markup feature is enabled.

          **Note:**  To use this feature, Document Markup must be enabled at both the account and envelope levels. Only Admin users can change this setting at the account level.
        type: string
      allowReassign:
        description:
          When **true,** the recipient can redirect an envelope to a more
          appropriate recipient.
        type: string
      allowRecipientRecursion:
        description:
          When **true,** this enables the Recursive Recipients feature
          and allows a recipient to appear more than once in the routing order.
        type: string
      allowViewHistory:
        description: When **true,** users can view the history of the envelope.
        type: string
      anySigner:
        description: Deprecated. This feature has been replaced by signing groups.
        type: string
      asynchronous:
        description: |-
          When **true,** the envelope is queued for
          processing and the value of the `status` property
          is set to `Processing`. Additionally, GET status
          calls return `Processing` until completed.


          **Note:** A `transactionId` is required for this
          call to work correctly. When the envelope is
          created, the status is `Processing` and an
          `envelopeId` is not returned in the response. To
          get the `envelopeId`, use a GET envelope query by
          using the
          [transactionId](/docs/esign-rest-api/reference/envelopes/envelopes/create/) or by checking the
          Connect notification.
        type: string
      attachments:
        description:
          An array of attachment objects containing details about any envelope
          attachments.
        type: array
        items:
          "$ref": "#/definitions/attachment"
      attachmentsUri:
        description: The URI for retrieving the envelope attachments.
        type: string
      authoritativeCopy:
        description: |-
          When **true,** marks all of the documents in the envelope as authoritative copies.

          **Note:** You can override this value for a specific document. For example, you can set the `authoritativeCopy` property to **true** at the envelope level, but turn it off for a single document by setting the `authoritativeCopy` property for the document to **false.**
        type: string
      authoritativeCopyDefault:
        description: |-
          The default `authoritativeCopy` setting for documents in this envelope that do not have `authoritativeCopy` set.
          If this property is not set, each document defaults to the envelope's `authoritativeCopy`.
        type: string
      autoNavigation:
        description: "When **true,** autonavigation is set for the recipient.

          "
        type: string
      brandId:
        description: |-
          The ID of the brand, or text and formatting, to use for the envelope. To use brands, account branding must be enabled for the account.

          **Note:** When creating an envelope using a branded template, include this value to ensure that the brand is applied.
        type: string
      brandLock:
        description:
          When **true,** the `brandId` for the envelope is locked and senders
          cannot change the brand used for the envelope.
        type: string
      burnDefaultTabData:
        description: ""
        type: string
      certificateUri:
        description: The URI for retrieving certificate information.
        type: string
      completedDateTime:
        description: The date and time that the envelope was completed.
        type: string
      compositeTemplates:
        description:
          A complex type that can be added to create envelopes from a combination
          of DocuSign templates and PDF forms. The basic envelope remains the same,
          while the Composite Template adds new document and template overlays into
          the envelope. There can be any number of Composite Template structures in
          the envelope.
        type: array
        items:
          "$ref": "#/definitions/compositeTemplate"
      copyRecipientData:
        description: |-
          This value is only applicable when copying an existing envelope. Provide the ID of the envelope to clone in `envelopeId`.

          When **true,** the recipient field values of the existing envelope are included. Only values from data entry fields, like checkboxes and radio buttons, will be copied. Fields that require an action, like signatures and initials, will not be included.
        type: string
      createdDateTime:
        description: The date and time that the envelope was created.
        type: string
      customFields:
        "$ref": "#/definitions/AccountCustomFields"
        description: |
          An optional array of strings that enables the sender to provide
          custom data about the recipient. This information is returned in
          the envelope status but otherwise not used by DocuSign. Each
          `customField` string can be a maximum of 100 characters.


          **Note:** Any custom fields you set with this API method
          will _replace_ custom fields you have defined with
          [Envelope Custom Fields in Admin](https://support.docusign.com/s/document-item?bundleId=pik1583277475390&topicId=qor1583277385137.html),
          whether the
          **Show field to envelope creators**
          or
          **Make fields required for envelopes**
          options are checked or not.
      customFieldsUri:
        description: The URI for retrieving custom fields.
        type: string
      declinedDateTime:
        description: The date and time that the recipient declined the envelope.
        type: string
      deletedDateTime:
        description: The date and time that the envelope was deleted.
        type: string
      deliveredDateTime:
        description:
          The date and time that the envelope was delivered to the recipient.
          This property is read-only.
        type: string
      disableResponsiveDocument:
        description:
          When **true,** the responsive document feature is turned off
          for the envelope.
        type: string
      documentBase64:
        description:
          The document's bytes. This field can be used to include a base64
          version of the document bytes within an envelope definition instead of sending
          the document using a multi-part HTTP request. The maximum document size
          is smaller if this field is used due to the overhead of the base64 encoding.
        type: string
      documents:
        description:
          A complex element that contains details about the documents associated
          with the envelope.
        type: array
        items:
          "$ref": "#/definitions/document"
      documentsCombinedUri:
        description:
          The URI for retrieving all of the documents associated with the
          envelope as a single PDF file.
        type: string
      documentsUri:
        description:
          The URI for retrieving all of the documents associated with the
          envelope as separate files.
        type: string
      emailBlurb:
        description:
          "This optional element holds the body of the email message that
          is sent to all envelope recipients. \n\nMaximum Length: 10000 characters."
        type: string
      emailSettings:
        "$ref": "#/definitions/emailSettings"
        description: |-
          This optional complex element enables the sender to override some envelope email setting information. This can be used to override the Reply To email address and name associated with the envelope, as well as the BCC email addresses to which an envelope is sent. When the `emailSettings` information is used for an envelope, it only applies to that envelope.

          **Important Note:** The `emailSettings` information is not returned in the GET method for envelope status. Use GET /email_settings to return information about the emailSettings.
      emailSubject:
        description: |
          The subject line of the email message that is sent to all recipients.

          For information about adding merge field information to the email subject, see [Template Email Subject Merge Fields](/docs/esign-rest-api/reference/templates/templates/create/#template-email-subject-merge-fields).

          **Note:** The subject line is limited to 100 characters, including any merged fields.It is not truncated. It is an error if the text is longer than 100 characters.
        type: string
      enableWetSign:
        description:
          When **true,** the signer is allowed to print the document and
          sign it on paper.
        type: string
      enforceSignerVisibility:
        description: |-
          When **true,** signers can only view the documents on which they have tabs. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all of the documents in an envelope, unless they are specifically excluded by using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded by using this setting when an envelope is sent.

          **Note:** To use this functionality, [Document Visibility][docviz] must be enabled for the account by making the account setting `allowDocumentVisibility` **true.**

          [docviz]: /docs/esign-rest-api/reference/envelopes/envelopedocumentvisibility/
        type: string
      envelopeAttachments:
        description:
          An array of attachment objects that provide information about
          the attachments that are associated with the envelope.
        type: array
        items:
          "$ref": "#/definitions/attachment"
      envelopeCustomMetadata:
        "$ref": "#/definitions/envelopeCustomMetadata"
        description: ""
      envelopeDocuments:
        description:
          An array containing information about the documents that are
          included in the envelope.
        type: array
        items:
          "$ref": "#/definitions/envelopeDocument"
      envelopeId:
        description: |-
          The envelope ID.

          When used as a request body in [Envelopes: create](/docs/esign-rest-api/reference/envelopes/envelopes/create/), this is the ID of the envelope to clone.
        type: string
      envelopeIdStamping:
        description: |-
          When **true,** [Envelope ID Stamping](https://support.docusign.com/s/document-item?bundleId=gbo1643332197980&topicId=tfm1578456367923.html) is enabled.
          After a document or attachment is stamped with an Envelope ID,
          the ID is seen by all recipients
          and becomes a permanent part of the document
          and cannot be removed.
        type: string
      envelopeLocation:
        description: Reserved for DocuSign.
        type: string
      envelopeMetadata:
        "$ref": "#/definitions/envelopeMetadata"
        description: Metadata about the features that are enabled for the envelope.
      envelopeUri:
        description: The URI for retrieving the envelope or envelopes.
        type: string
      eventNotification:
        "$ref": "#/definitions/eventNotification"
        description:
          This optional object is used to register a webhook that will
          receive status changes for this envelope.
      expireAfter:
        description: |-
          Not used. Use the
          [`expirations`](/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification_expirations)
          property in the [`notification`](/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification) object instead.
        type: string
      expireDateTime:
        description: |-
          Not used. Use the
          [`expirations`](/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification_expirations)
          property in the [`notification`](/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification) object instead.
        type: string
      expireEnabled:
        description: |-
          Not used. Use the
          [`expirations`](/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification_expirations)
          property in the [`notification`](/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification) object instead.
        type: string
      externalEnvelopeId:
        description: May contain an external identifier for the envelope.
        type: string
      folders:
        description: An array of folders that the envelope belongs to.
        type: array
        items:
          "$ref": "#/definitions/folder"
      hasComments:
        description:
          When **true,** indicates that users have added comments to the
          envelope.
        type: string
      hasFormDataChanged:
        description:
          When **true,** indicates that the form data associated with the
          envelope has changed since it was sent. When **false,** this property does
          not appear in the response.
        type: string
      hasWavFile:
        description:
          When **true,** indicates that a wave file (voice recording) is
          part of the envelope.
        type: string
      holder:
        description: Reserved for DocuSign.
        type: string
      initialSentDateTime:
        description: The date and time that the envelope was first sent.
        type: string
      is21CFRPart11:
        description:
          When **true,** indicates compliance with United States Food and
          Drug Administration (FDA) regulations on electronic records and electronic
          signatures (ERES).
        type: string
      isDynamicEnvelope:
        description: When **true,** indicates that the envelope is a dynamic envelope.
        type: string
      isSignatureProviderEnvelope:
        description:
          When **true,** indicates that the envelope is a signature-provided
          envelope.
        type: string
      lastModifiedDateTime:
        description: The date and time that the item was last modified.
        type: string
      location:
        description: Reserved for DocuSign.
        type: string
      lockInformation:
        "$ref": "#/definitions/EnvelopeLocks"
        description: Provides lock information about an envelope that a user has locked.
      messageLock:
        description:
          "When **true,** prevents senders from changing the contents of
          `emailBlurb` and `emailSubject` properties for the envelope. \n\nAdditionally,
          this prevents users from making changes to the contents of `emailBlurb`
          and `emailSubject` properties when correcting envelopes. \n\nHowever, if
          the `messageLock` node is set to **true** and the `emailSubject` property
          is empty, senders and correctors are able to add a subject to the envelope."
        type: string
      notification:
        "$ref": "#/definitions/notification"
        description:
          An optional complex element that specifies the notification options
          for the envelope.
      notificationUri:
        description: The URI for retrieving notifications.
        type: string
      password:
        description: The user's encrypted password hash.
        type: string
      powerForm:
        "$ref": "#/definitions/powerForm"
        description: Information about any PowerForms that are included in the envelope.
      purgeCompletedDate:
        description: The date that a purge was completed.
        type: string
      purgeRequestDate:
        description: The date that a purge was requested.
        type: string
      purgeState:
        description: |
          Initiates a purge request. Valid values are:

          - `documents_queued`: Places envelope documents in the purge queue.
          - `documents_and_metadata_queued`: Places envelope documents
             and metadata in the purge queue.
          - `documents_and_metadata_and_redact_queued`: Places envelope documents
             and metadata in the purge queue and redacts personal information.

          **Related topics**

          - [Purging documents (eSingature Concepts)](/docs/esign-rest-api/esign101/concepts/documents/purging/)
          - [Purging documents in an envelope (blog post)](https://www.docusign.com/blog/developers/purging-documents-envelope)
        type: string
      recipients:
        "$ref": "#/definitions/EnvelopeRecipients"
        description: Specifies the envelope recipients.
      recipientsLock:
        description:
          When **true,** prevents senders from changing, correcting, or
          deleting the recipient information for the envelope.
        type: string
      recipientsUri:
        description:
          Contains a URI for an endpoint that you can use to retrieve the
          recipients.
        type: string
      recipientViewRequest:
        "$ref": "#/definitions/recipientViewRequest"
        description: ""
      sender:
        "$ref": "#/definitions/userInfo"
        description: Information about the sender of the envelope.
      sentDateTime:
        description:
          The UTC DateTime when the envelope was sent. This property is
          read-only.
        type: string
      signerCanSignOnMobile:
        description: |
          When **true,** recipients can sign on a mobile device.

          **Note:** Only Admin users can change this setting.
        type: string
      signingLocation:
        description:
          Specifies the physical location where the signing takes place.
          It can have two enumeration values; `inPerson` and `online`. The default
          value is `online`.
        type: string
      status:
        description:
          "Indicates the envelope status. Valid values when creating an
          envelope are: \n\n* `created`: The envelope is created as a draft. It can
          be modified and sent later.\n* `sent`: The envelope will be sent to the
          recipients after the envelope is created.\n\nYou can query these additional
          statuses once the recipients have interacted with the envelope.\n\n* `completed`:
          The recipients have finished working with the envelope: the documents are
          signed and all required tabs are filled in.\n* `declined`: The envelope
          has been declined by the recipients.\n* `delivered`: The envelope has been
          delivered to the recipients.\n* `signed`: The envelope has been signed by
          the recipients.\n* `voided`: The envelope is no longer valid and recipients
          cannot access or sign the envelope.\n"
        type: string
      statusChangedDateTime:
        description: The data and time that the status changed.
        type: string
      statusDateTime:
        description:
          The DateTime that the envelope changed status (i.e. was created
          or sent.)
        type: string
      templateId:
        description:
          "The ID of the template. If a value is not provided, DocuSign
          generates a value. "
        type: string
      templateRoles:
        description: |
          This object specifies the template recipients. Each `roleName` in the template must have a recipient assigned to it. This object is comprised of the following elements:

          * `email`: The recipient's email address.
          * `name`: The recipient's name.
          * `roleName`: The template roleName associated with the recipient.
          * `clientUserId`: An optional property that specifies whether the recipient is embedded or remote. If the `clientUserId` is not null, then the recipient is embedded. Note that if a `clientUserId` is used and the account settings `signerMustHaveAccount` or `signerMustLoginToSign` are **true,** an error is generated on sending.
          * `defaultRecipient`: Optional, When **true,** this recipient is the default recipient and any tabs generated by the `transformPdfFields` option are mapped to this recipient.
          * `routingOrder`: This specifies the routing order of the recipient in the envelope.
          * `accessCode`: This optional element specifies the access code a recipient has to enter to validate the identity. Maximum Length: 50 characters.
          * `inPersonSignerName`: Optional. If the template role is an in-person signer, this is the full legal name of the signer. Maximum Length: 100 characters.
          * `emailNotification`: This is an optional complex element that has a role-specific `emailSubject`, `emailBody`, and `language`. It follows the same format as the `emailNotification` property for recipients.
          * `tabs`: This property enables the tab values to be specified for matching to tabs in the template.
        type: array
        items:
          "$ref": "#/definitions/templateRole"
      templatesUri:
        description: The URI for retrieving any templates associated with the envelope.
        type: string
      transactionId:
        description:
          " Used to identify an envelope. The ID is a sender-generated
          value and is valid in the DocuSign system for 7 days. DocuSign recommends
          that you use a transaction ID for offline signing to ensure that an envelope
          is not sent multiple times. You can use the `transactionId` property to
          determine an envelope's status (i.e. was it created or not) in cases where
          the Internet connection was lost before the envelope status was returned."
        type: string
      useDisclosure:
        description:
          "When **true,** the disclosure is shown to recipients in accordance
          with the account's Electronic Record and Signature Disclosure frequency
          setting. When **false,** the Electronic Record and Signature Disclosure
          is not shown to any envelope recipients. \n\nIf the `useDisclosure` property
          is not set, then the account's normal disclosure setting is used and the
          value of the `useDisclosure` property is not returned in responses when
          getting envelope information."
        type: string
      voidedDateTime:
        description: The date and time the envelope or template was voided.
        type: string
      voidedReason:
        description: |
          The reason the envelope or template was voided.

          **Note:** The string is truncated to the first 200 characters.
        type: string
      workflow:
        "$ref": "#/definitions/workflow"
        description: Describes the workflow for this envelope.
    description: Envelope object definition.
    x-ds-definition-name: envelopeDefinition
    x-ms-summary: Envelope object definition.
  envelopeDelayRule:
    description: |-
      A user-specified object that describes the envelope delay.

      To indicate a relative delay, use `delay`. To indicate the exact datetime the envelope should be sent, use `resumeDate`. Only one of the two properties can be used.
    type: object
    properties:
      delay:
        description:
          A string timespan representing the duration of the sending delay.
          The timespan is in the format `d.hh:mm:ss` where `d` is the number of days,
          `hh` is the number of hours (measured on a 24-hour clock), `mm` is minutes,
          and `ss` is seconds. The maximum delay is 30 days.
        type: string
      resumeDate:
        description:
          An ISO 8601 formatted datetime string indicating the date and
          time that the envelope will be sent. The specified datetime must occur in
          the future. It must not exceed 30 days from the time that the request is
          made.
        type: string
    x-ds-definition-name: envelopeDelayRule
    x-ms-summary: |-
      A user-specified object that describes the envelope delay.

      To indicate a relative delay, use `delay`. To indicate the exact datetime the envelope should be sent, use `resumeDate`. Only one of the two properties can be used.
  envelopeDocument:
    type: object
    properties:
      addedRecipientIds:
        description:
          If recipients were added by converting form fields into tabs,
          their IDs appear here. This property is read-only.
        type: array
        items:
          type: string
      attachmentTabId:
        description:
          If this document is an attachment to another document in the
          envelope, this is the ID of the attachment tab it is associated with on
          the other document.
        type: string
      authoritativeCopy:
        description: |-
          When **true,** marks all of the documents in the envelope as authoritative copies.

          **Note:** You can override this value for a specific document. For example, you can set the `authoritativeCopy` property to **true** at the envelope level, but turn it off for a single document by setting the `authoritativeCopy` property for the document to **false.**
        type: string
      authoritativeCopyMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates if the sender can edit the `authoritativeCopy`
          property. Not applicable for template documents.
      availableDocumentTypes:
        description: ""
        type: array
        items:
          "$ref": "#/definitions/signatureType"
      containsPdfFormFields:
        description:
          When **true,** the document has editable form fields that are
          made available through a PDF format.
        type: string
      display:
        description:
          "This string sets the display and behavior properties of\nthe
          document during signing. Valid values:\n\n* `modal`<br>\n  The document
          is shown as a supplement action strip\n  and can be viewed, downloaded,
          or printed in a modal window.\n  This is the recommended value for supplemental
          documents. \n\n* `inline`<br>\n  The document is shown in the normal signing
          window.\n  This value is not used with supplemental documents,\n  but is
          the default value for all other documents.\n"
        type: string
      displayMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates if the sender can edit the `display`
          property. Not applicable for template documents.
      docGenDocumentStatus:
        description: ""
        type: string
      docGenErrors:
        description: ""
        type: array
        items:
          "$ref": "#/definitions/docGenSyntaxError"
      docGenFormFields:
        description: ""
        type: array
        items:
          "$ref": "#/definitions/docGenFormField"
      documentBase64:
        description:
          The document's bytes. This field can be used to include a base64
          version of the document bytes within an envelope definition instead of sending
          the document using a multi-part HTTP request. The maximum document size
          is smaller if this field is used due to the overhead of the base64 encoding.
        type: string
      documentFields:
        description:
          An object containing information about the custom fields on the
          document.
        type: array
        items:
          "$ref": "#/definitions/nameValue"
      documentId:
        description:
          The ID of the document that the tab is placed on. This value
          must refer to the ID of an existing document.
        type: string
      documentIdGuid:
        description: The GUID of the document.
        type: string
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      includeInDownload:
        description:
          "When **true,**\nthe document is included in the combined document
          download (`documentsCombinedUri`). \nThe default value is **true.**\n"
        type: string
      includeInDownloadMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates if the sender can edit the `includeInDownload`
          property. Not applicable for template documents.
      isAceGenDocument:
        description: ""
        type: string
      isDocGenDocument:
        description: ""
        type: string
      name:
        description: "The document's file name. \n\nExample: `Q1-Report.docx`"
        type: string
      nameMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates if the sender can edit the `name` property.
          Not applicable for template documents.
      order:
        description:
          "The order in which to sort the results.\n\nValid values are:
          \n\n\n* `asc`: Ascending order.\n* `desc`: Descending order. "
        type: string
      pages:
        description:
          An array of page objects that contain information about the pages
          in the document.
        type: array
        items:
          "$ref": "#/definitions/page"
      signerMustAcknowledge:
        description: |+
          Sets how the signer interacts with the supplemental document.
          Valid values:

          * `no_interaction`<br>
            No recipient action is required.

          * `view`<br>
            The recipient is required to view the document.

          * `accept`<br>
            The recipient is required to accept the document by selecting accept during signing, but is not required to view the document.

          * `view_accept`<br>
            The recipient is required to view and accept the document.

        type: string
      signerMustAcknowledgeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates if the sender can edit the `signerMustAcknowledge`
          property. Not applicable for template documents.
      sizeBytes:
        description: ""
        type: string
      templateLocked:
        description:
          "When **true,** the sender cannot change any attributes of the
          recipient. Used only when working with template recipients. "
        type: string
      templateRequired:
        description:
          When **true,** the sender may not remove the recipient. Used
          only when working with template recipients.
        type: string
      type:
        description: |
          The type of this tab. Values are:

          - `Approve`
          - `CheckBox`
          - `Company`
          - `Date`
          - `DateSigned`
          - `Decline`
          - `Email`
          - `EmailAddress`
          - `EnvelopeId`
          - `FirstName`
          - `Formula`
          - `FullName`
          - `InitialHere`
          - `InitialHereOptional`
          - `LastName`
          - `List`
          - `Note`
          - `Number`
          - `Radio`
          - `SignerAttachment`
          - `SignHere`
          - `SignHereOptional`
          - `Ssn`
          - `Text`
          - `Title`
          - `Zip5`
          - `Zip5Dash4`
        type: string
      uri:
        description: The URI for retrieving the document.
        type: string
    description: This object contains details about the envelope document.
    x-ds-definition-name: envelopeDocument
    x-ms-summary: This object contains details about the envelope document.
  envelopeDocumentsResult:
    type: object
    properties:
      envelopeDocuments:
        description:
          An array containing information about the documents that are
          included in the envelope.
        type: array
        items:
          "$ref": "#/definitions/envelopeDocument"
      envelopeId:
        description: The envelope ID.
        type: string
    x-ds-definition-name: envelopeDocumentsResult
    description: ""
    x-ms-summary: ""
  envelopeEvent:
    type: object
    properties:
      envelopeEventStatusCode:
        description:
          "An envelope status for which your webhook should be called.
          Valid values:\n\n* `Sent` \n* `Delivered`\n* `Completed`\n* `Declined`\n*
          `Voided`"
        type: string
      includeDocuments:
        description: |-
          When **true,**
          the Connect webhook messages
          will include the envelope's PDF documents.
          Including the PDF documents
          greatly increases the size of the notification messages.
          Ensure that your listener can handle
          incoming messages that are 25MB or larger.
        type: string
    description: For which envelope events should your webhook be called?
    x-ds-definition-name: envelopeEvent
    x-ms-summary: For which envelope events should your webhook be called?
  envelopeFormData:
    type: object
    properties:
      emailSubject:
        description: |
          The subject line of the email message that is sent to all recipients.

          For information about adding merge field information to the email subject, see [Template Email Subject Merge Fields](/docs/esign-rest-api/reference/templates/templates/create/#template-email-subject-merge-fields).

          **Note:** The subject line is limited to 100 characters, including any merged fields.It is not truncated. It is an error if the text is longer than 100 characters.
        type: string
      envelopeId:
        description: The envelope ID of the envelope status that failed to post.
        type: string
      formData:
        description: "An array of `formDataItem` objects. \n"
        type: array
        items:
          "$ref": "#/definitions/formDataItem"
      prefillFormData:
        "$ref": "#/definitions/prefillFormData"
        description: "An array of `formDataItem` objects for [prefill tabs](/docs/esign-rest-api/reference/envelopes/envelopedocumenttabs/create/#definition__tabs_prefilltabs). "
      recipientFormData:
        description: An array of form data for each recipient of the envelope.
        type: array
        items:
          "$ref": "#/definitions/recipientFormData"
      sentDateTime:
        description:
          The UTC DateTime when the envelope was sent. This property is
          read-only.
        type: string
      status:
        description:
          "Indicates the envelope status. Valid values are:\n\n* sent -
          The envelope is sent to the recipients. \n* created - The envelope is saved
          as a draft and can be modified and sent later."
        type: string
    description: Describes the form data of the envelope.
    x-ds-definition-name: envelopeFormData
    x-ms-summary: Describes the form data of the envelope.
  envelopeId:
    type: object
    properties:
      anchorAllowWhiteSpaceInCharacters:
        description: |
          When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.

          First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.

          Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.

          The default value is **true.**
        type: string
      anchorAllowWhiteSpaceInCharactersMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorAllowWhiteSpaceInCharacters`
          property is editable.
      anchorCaseSensitive:
        description: |-
          This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**

          For example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.

          This functionality uses the following rules:

          - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:

            $~><|^+=

            For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`

          - Strings embedded in other strings are ignored during the matching process.

          - In words that have dashes, the parts separated by dashes are treated as distinct words.

            Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**

          - Letters with accent marks are treated as distinct characters from their unaccented counterparts.

          - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.

            Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.

          - Unlike punctuation, numbers are not ignored when finding anchor words.

            Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).

          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorCaseSensitiveMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorCaseSensitive` property
          is editable.
      anchorHorizontalAlignment:
        description: |
          This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :

          - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.
          - `right`: Aligns the tab’s left side with the last character of the matching anchor word.

          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorHorizontalAlignmentMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorHorizontalAlignment`
          property is editable.
      anchorIgnoreIfNotPresent:
        description:
          When **true,** this tab is ignored if the `anchorString` is not
          found in the document.
        type: string
      anchorIgnoreIfNotPresentMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorIgnoreIfNotPresent`
          property is editable.
      anchorMatchWholeWord:
        description: |
          When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**

          For example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.

          This functionality uses the following rules:

          - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:

            $~><|^+=

            For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`

          - Strings embedded in other strings are ignored during the matching process.

          - In words that have dashes, the parts separated by dashes are treated as distinct words.

            Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**

          - Letters with accent marks are treated as distinct characters from their unaccented counterparts.

          - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.

            Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.

          - Unlike punctuation, numbers are not ignored when finding anchor words.

            Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).


          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorMatchWholeWordMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorMatchWholeWord` property
          is editable.
      anchorString:
        description:
          Specifies the string to find in the document and use as the basis
          for tab placement.
        type: string
      anchorStringMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorString` property is
          editable.
      anchorTabProcessorVersion:
        description: Reserved for DocuSign.
        type: string
      anchorTabProcessorVersionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Reserved for DocuSign.
      anchorUnits:
        description: |
          Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:

          - `pixels` (default)
          - `inches`
          - `mms`
          - `cms`
        type: string
      anchorUnitsMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorUnits` property is
          editable.
      anchorXOffset:
        description:
          "Specifies the X axis location of the tab in `anchorUnits` relative
          to the `anchorString`.

          "
        type: string
      anchorXOffsetMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorXOffset` property
          is editable.
      anchorYOffset:
        description:
          "Specifies the Y axis location of the tab in `anchorUnits` relative
          to the `anchorString`.

          "
        type: string
      anchorYOffsetMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorYOffset` property
          is editable.
      bold:
        description: When **true,** the information in the tab is bold.
        type: string
      boldMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `bold` property is editable.
      caption:
        description: ""
        type: string
      captionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `caption` property is editable.
      conditionalParentLabel:
        description:
          For conditional fields this is the `tabLabel` of the parent tab
          that controls this tab's visibility.
        type: string
      conditionalParentLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `conditionalParentLabel`
          property is editable.
      conditionalParentValue:
        description: |
          For conditional fields, this is the value of the parent tab that controls the tab's visibility.

          If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use "on" as the value to show that the parent tab is active.
        type: string
      conditionalParentValueMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `conditionalParentValue`
          property is editable.
      customTabId:
        description:
          The DocuSign generated custom tab ID for the custom tab to be
          applied. This can only be used when adding new tabs for a recipient. When
          used, the new tab inherits all the custom tab properties.
        type: string
      customTabIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `customTabId` property is
          editable.
      documentId:
        description:
          Specifies the document ID number that the tab is placed on. This
          must refer to an existing Document's ID attribute.
        type: string
      documentIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `documentId` property is
          editable.
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      font:
        description: |
          The font to be used for the tab value. Supported fonts include:

          - Default
          - Arial
          - ArialNarrow
          - Calibri
          - CourierNew
          - Garamond
          - Georgia
          - Helvetica
          - LucidaConsole
          - MSGothic
          - MSMincho
          - OCR-A
          - Tahoma
          - TimesNewRoman
          - Trebuchet
          - Verdana
        type: string
      fontColor:
        description:
          "The font color to use for the information in the tab. Possible
          values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n-
          Gold\n- Green\n- NavyBlue\n- Purple\n- White\n"
        type: string
      fontColorMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `fontColor` property is editable.
      fontMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `font` property is editable.
      fontSize:
        description: |-
          The font size used for the information in the tab. Possible values are:

          - Size7
          - Size8
          - Size9
          - Size10
          - Size11
          - Size12
          - Size14
          - Size16
          - Size18
          - Size20
          - Size22
          - Size24
          - Size26
          - Size28
          - Size36
          - Size48
          - Size72
        type: string
      fontSizeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `fontSize` property is editable.
      formOrder:
        description:
          An integer specifying the order in which the guided form HTML
          should render. The order is relative to the `formPageLabel`, the group by
          which to place the guided form HTML block.
        type: string
      formOrderMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `formOrder` property is editable.
      formPageLabel:
        description:
          A string specifying the group in which to place the guided form
          HTML. Each group displays as a separate guided forms page in the signing
          experience.
        type: string
      formPageLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `formPageLabel` property
          is editable.
      formPageNumber:
        description:
          An integer specifying the order in which to present the guided
          form pages.
        type: string
      formPageNumberMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `fromPageNumber` property
          is editable.
      height:
        description: |-
          The height of the tab in pixels.
          Must be an integer.
        type: string
      heightMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `height` property is editable.
      italic:
        description: When **true,** the information in the tab is italic.
        type: string
      italicMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `italic` property is editable.
      localePolicy:
        "$ref": "#/definitions/localePolicyTab"
        description: Locale-specific settings.
      mergeField:
        "$ref": "#/definitions/mergeField"
        description:
          Contains the information necessary to map the tab to a field
          in SalesForce.
      mergeFieldXml:
        description: Reserved for DocuSign.
        type: string
      name:
        description: |-
          The name of the tab. For example, `Sign Here` or `Initial Here`.

          If the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.
        type: string
      nameMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `name` property is editable.
          This property is read-only.
      pageNumber:
        description: |-
          The page number on which the tab is located.
          For supplemental documents, this value must be `1`.
        type: string
      pageNumberMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `pageNumber` property is
          editable.
      recipientId:
        description:
          "The ID of the recipient to whom the tab will be assigned. This
          value should match the `recipientId` defined in the recipient object.

          "
        type: string
      recipientIdGuid:
        description:
          The globally-unique identifier (GUID) for a specific recipient
          on a specific envelope. If the same recipient is associated with multiple
          envelopes, they will have a different GUID for each one. This property is
          read-only.
        type: string
      recipientIdGuidMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `recipientIdGuid` property
          is editable.
      recipientIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `recipientId` property is
          editable.
      smartContractInformation:
        "$ref": "#/definitions/smartContractInformation"
        description: Reserved for DocuSign.
      source:
        description: Reserved for DocuSign.
        type: string
      status:
        description: |-
          The status of the tab. Possible values are:

          - `active`: The tab is active, but the recipient has not yet interacted with it.
          - `signed`: The recipient signed the tab.
          - `declined`: The recipient declined the envelope.
          - `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).
        type: string
      statusMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `status` property is editable.
      tabGroupLabels:
        description: |-
          An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.

          To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
        type: array
        items:
          type: string
      tabGroupLabelsMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `tabGroupLabels` property
          is editable.
      tabId:
        description: The unique identifier for the tab.
        type: string
      tabIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabId` property is editable.
      tabLabel:
        description: |
          The label associated with the tab. This value may be an empty string.
          If no value is provided, the tab type is used as the value.

          Maximum Length: 500 characters.
        type: string
      tabLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabLabel` property is editable.
      tabOrder:
        description: |-
          A positive integer that sets the order the tab is navigated to during signing.

          Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
        type: string
      tabOrderMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabOrder` property is editable.
      tabType:
        description: Indicates the type of tab (for example, `signHere` or `initialHere`).
        type: string
      tabTypeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabType` property is editable.
      templateLocked:
        description:
          "When **true,** the sender cannot change any attributes of the
          recipient. Used only when working with template recipients. "
        type: string
      templateLockedMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `templateLocked` property
          is editable.
      templateRequired:
        description:
          When **true,** the sender may not remove the recipient. Used
          only when working with template recipients.
        type: string
      templateRequiredMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `templateRequired` property
          is editable.
      tooltip:
        description:
          "The text of a tooltip that appears when a user hovers over a
          form field or tab.

          "
        type: string
      toolTipMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          "Metadata that indicates whether the `toolTip` property is editable.

          "
      underline:
        description: When **true,** the information in the tab is underlined.
        type: string
      underlineMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `underline` property is editable.
      width:
        description: |-
          The width of the tab in pixels.
          Must be an integer.
        type: string
      widthMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `width` property is editable.
      xPosition:
        description: |
          This property indicates the horizontal offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. Must be an integer. May be zero.
        type: string
      xPositionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `xPosition` property is editable.
      yPosition:
        description: |
          This property indicates the vertical offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. Must be an integer. May be zero.
        type: string
      yPositionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `yPosition` property is editable.
    description: |
      A tab that displays the envelope ID.

      **Note:**  The eSignature API uses the name `envelopeId` two ways:

      - As a _property_ of type `string` used to identify an envelope  by its GUID.
      - As an _object_ used to represent an envelope tab that displays
        the envelope's GUID.
    x-ds-definition-name: envelopeId
    x-ms-summary: |
      A tab that displays the envelope ID.

      **Note:**  The eSignature API uses the name `envelopeId` two ways:

      - As a _property_ of type `string` used to identify an envelope  by its GUID.
      - As an _object_ used to represent an envelope tab that displays
        the envelope's GUID.
  envelopeIdsRequest:
    type: object
    properties:
      envelopeIds:
        description: A comma-separated list of envelope IDs to include in the results.
        type: array
        items:
          type: string
      transactionIds:
        description:
          A comma-separated list of transaction IDs to include in the results.
          Note that transaction IDs are valid for seven days.
        type: array
        items:
          type: string
    description: |
      Lists of envelope and transaction IDs to use in the results.

      If you use this request body with Envelopes: listStatus,
      you must set one or both of the following query parameters
      to the special value `request_body`:

      - `envelope_ids=request_body`
      - `transaction_ids=request_body`
    x-ds-definition-name: envelopeIdsRequest
    x-ms-summary: |
      Lists of envelope and transaction IDs to use in the results.

      If you use this request body with Envelopes: listStatus,
      you must set one or both of the following query parameters
      to the special value `request_body`:

      - `envelope_ids=request_body`
      - `transaction_ids=request_body`
  envelopeMetadata:
    type: object
    properties:
      allowAdvancedCorrect:
        description:
          Specifies if the Advanced Correct feature is enabled for the
          envelope. This feature enables you to correct the details of in process
          envelopes that you sent or are shared with you. It offers more functionality
          than the Correct feature.
        type: string
      allowCorrect:
        description:
          Specifies if the Correct feature is enabled for the envelope.
          This feature enables you to correct the details of in process envelopes
          that you sent or are shared with you, including the recipient, envelope,
          and document information.
        type: string
      enableSignWithNotary:
        description: Specifies if DocuSign eNotary service is enabled for the envelope.
        type: string
    x-ds-definition-name: envelopeMetadata
    description: ""
    x-ms-summary: ""
  envelopeNotificationRequest:
    type: object
    properties:
      expirations:
        "$ref": "#/definitions/expirations"
        description:
          A complex element that specifies the expiration settings for
          the envelope.
      reminders:
        "$ref": "#/definitions/reminders"
        description: A complex element that specifies reminder settings for the envelope.
      useAccountDefaults:
        description:
          When **true,** the account default notification settings are
          used for the envelope, overriding the reminders and expirations settings.
          When **false,** the reminders and expirations settings specified in this
          request are used. The default value is **false.**
        type: string
    description:
      A complex element that specifies the notification settings for the
      envelope.
    x-ds-definition-name: envelopeNotificationRequest
    x-ms-summary:
      A complex element that specifies the notification settings for the
      envelope.
  envelopePublishTransaction:
    type: object
    properties:
      applyConnectSettings:
        description: ""
        type: string
      envelopeCount:
        description: ""
        type: string
      envelopeLevelErrorRollups:
        description: ""
        type: array
        items:
          "$ref": "#/definitions/envelopePublishTransactionErrorRollup"
      envelopePublishTransactionId:
        description: The ID of the publish transaction.
        type: string
      errorCount:
        description: ""
        type: string
      fileLevelErrors:
        description: ""
        type: array
        items:
          type: string
      noActionRequiredEnvelopeCount:
        description: ""
        type: string
      processedEnvelopeCount:
        description: ""
        type: string
      processingStatus:
        description: |
          The status of the transaction. Valid values:

          * `unprocessed`
          * `processing`
          * `complete`
          * `fatal_error`
        type: string
      resultsUri:
        description: ""
        type: string
      submissionDate:
        description: ""
        type: string
      submittedByUserInfo:
        "$ref": "#/definitions/userInfo"
        description: ""
      submittedForPublishingEnvelopeCount:
        description: ""
        type: string
    x-ds-definition-name: envelopePublishTransaction
    description: ""
    x-ms-summary: ""
  envelopePublishTransactionErrorRollup:
    type: object
    properties:
      count:
        description: The maximum number of results to return.
        type: string
      errorType:
        description: ""
        type: string
    x-ds-definition-name: envelopePublishTransactionErrorRollup
    description: ""
    x-ms-summary: ""
  envelopePurgeConfiguration:
    type: object
    properties:
      purgeEnvelopes:
        description: When **true,** purging is enabled.
        type: string
      redactPII:
        description: |-
          When **true,** the system also redacts personally identifiable information (PII).

          **Note:** To redact PII, you must also set the property `removeTabsAndEnvelopeAttachments` to **true.**
        type: string
      removeTabsAndEnvelopeAttachments:
        description:
          "When **true,** the system also purges the tabs and attachments
          associated with the envelopes. "
        type: string
      retentionDays:
        description:
          The number of days to retain envelope documents before purging
          them. This value must be a number between `0` and `999`.
        type: string
    description:
      "Contains information about the current envelope purge configuration
      for an account, which enables account administrators to purge documents from
      completed and voided envelopes after a set number of days (`retentionDays`). "
    x-ds-definition-name: envelopePurgeConfiguration
    x-ms-summary:
      "Contains information about the current envelope purge configuration
      for an account, which enables account administrators to purge documents from
      completed and voided envelopes after a set number of days (`retentionDays`). "
  envelopesInformation:
    type: object
    properties:
      continuationToken:
        description: Reserved for DocuSign.
        type: string
      endPosition:
        description: "The last index position in the result set. "
        type: string
      envelopes:
        description: Array of envelope information.
        type: array
        items:
          "$ref": "#/definitions/envelope"
      envelopeSearchSource:
        description: ""
        type: string
      envelopeTransactionStatuses:
        description:
          Array of envelope statuses and transaction IDs in the result
          set.
        type: array
        items:
          "$ref": "#/definitions/envelopeTransactionStatus"
      folders:
        description: A list of folder objects.
        type: array
        items:
          "$ref": "#/definitions/folder"
      lastQueriedDateTime:
        description: The last time that a query was performed.
        type: string
      nextUri:
        description:
          "The URI for the next chunk of records based on the search request.
          It is `null` if this is the last set of results for the search. "
        type: string
      previousUri:
        description:
          "The URI for the prior chunk of records based on the search request.
          It is `null` if this is the first set of results for the search. "
        type: string
      resultSetSize:
        description:
          The number of results in this response. Because you can filter
          which entries are included in the response, this value is always less than
          or equal to the `totalSetSize`.
        type: string
      startPosition:
        description: The starting index position of the current result set.
        type: string
      totalSetSize:
        description:
          The total number of items in the result set. This value is always
          greater than or equal to the value of `resultSetSize`.
        type: string
    description: "Result set for the Envelopes: listStatusChanges method"
    x-ds-definition-name: envelopesInformation
    x-ms-summary: "Result set for the Envelopes: listStatusChanges method"
  envelopeSummary:
    type: object
    properties:
      bulkEnvelopeStatus:
        "$ref": "#/definitions/bulkEnvelopeStatus"
        description: An object that describes the status of the bulk send envelopes.
      envelopeId:
        description: The envelope ID of the envelope status that failed to post.
        type: string
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      recipientSigningUri:
        description: ""
        type: string
      recipientSigningUriError:
        description: ""
        type: string
      status:
        description:
          "Indicates the envelope status. Valid values are: \n\n* `completed`:
          The recipients have finished working with the envelope: the documents are
          signed and all required tabs are filled in.\n* `created`: The envelope is
          created as a draft. It can be modified and sent later.\n* `declined`: The
          envelope has been declined by the recipients.\n* `delivered`: The envelope
          has been delivered to the recipients.\n* `sent`: The envelope will be sent
          to the recipients after the envelope is created.\n* `signed`: The envelope
          has been signed by the recipients.\n* `voided`: The envelope is no longer
          valid and recipients cannot access or sign the envelope.\n"
        type: string
      statusDateTime:
        description:
          The DateTime that the envelope changed status (i.e. was created
          or sent.)
        type: string
      uri:
        description: A URI containing the user ID.
        type: string
    description: " This object describes an envelope."
    x-ds-definition-name: envelopeSummary
    x-ms-summary: " This object describes an envelope."
  envelopeTemplate:
    type: object
    properties:
      accessControlListBase64:
        description: Reserved for DocuSign.
        type: string
      allowComments:
        description:
          When **true,** users can add comments to the documents in the
          envelope. For example, if a signer has a question about the text in the
          document, they can add a comment to the document.
        type: string
      allowMarkup:
        description: |
          When **true,** the Document Markup feature is enabled.

          **Note:**  To use this feature, Document Markup must be enabled at both the account and envelope levels. Only Admin users can change this setting at the account level.
        type: string
      allowReassign:
        description:
          When **true,** the recipient can redirect an envelope to a more
          appropriate recipient.
        type: string
      allowViewHistory:
        description: When **true,** recipients can view the history of the envelope.
        type: string
      anySigner:
        description: Deprecated. This feature has been replaced by signing groups.
        type: string
      asynchronous:
        description: |-
          When **true,** the envelope is queued for
          processing and the value of the `status` property
          is set to `Processing`. Additionally, GET status
          calls return `Processing` until completed.


          **Note:** A `transactionId` is required for this
          call to work correctly. When the envelope is
          created, the status is `Processing` and an
          `envelopeId` is not returned in the response. To
          get the `envelopeId`, use a GET envelope query by
          using the
          [transactionId](/docs/esign-rest-api/reference/envelopes/envelopes/create/) or by checking the
          Connect notification.
        type: string
      attachmentsUri:
        description:
          Contains a URL for retrieving the attachments that are associated
          with the envelope.
        type: string
      authoritativeCopy:
        description: |-
          When **true,** marks all of the documents in the envelope as authoritative copies.

          **Note:** You can override this value for a specific document. For example, you can set the `authoritativeCopy` property to **true** at the envelope level, but turn it off for a single document by setting the `authoritativeCopy` property for the document to **false.**
        type: string
      authoritativeCopyDefault:
        description: |-
          The default `authoritativeCopy` setting for documents in this envelope that do not have `authoritativeCopy` set.
          If this property is not set, each document defaults to the envelope's `authoritativeCopy`.
        type: string
      autoMatch:
        description: |-
          By default, templates that have been used within
          the last 60 days are included in auto-matching.

          By explicitly setting `autoMatch`,
          you can permanently include or exclude the template
          in auto matching.

          When **true** the template is included in auto-matching
          regardless of when it was last used.

          When **false** the template is never included in auto-matching.
        type: string
      autoMatchSpecifiedByUser:
        description: |-
          When **true,** the template has been explicitly included in or excluded from auto-matching. The default is false.
          This is a read-only property.
        type: string
      autoNavigation:
        description: "When **true,** autonavigation is set for the recipient.

          "
        type: string
      brandId:
        description: The ID of the brand.
        type: string
      brandLock:
        description:
          When **true,** the `brandId` for the envelope is locked and senders
          cannot change the brand used for the envelope.
        type: string
      burnDefaultTabData:
        description: ""
        type: string
      certificateUri:
        description: The URI for retrieving certificate information.
        type: string
      completedDateTime:
        description: Specifies the date and time this item was completed.
        type: string
      copyRecipientData:
        description: ""
        type: string
      created:
        description: The UTC DateTime when the workspace user authorization was created.
        type: string
      createdDateTime:
        description: The UTC DateTime when the item was created.
        type: string
      customFields:
        "$ref": "#/definitions/AccountCustomFields"
        description:
          An optional array of strings that enables the sender to provide
          custom data about the recipient. This information is returned in the envelope
          status but otherwise not used by DocuSign. Each `customField` string can
          be a maximum of 100 characters.
      customFieldsUri:
        description: The URI for retrieving custom fields.
        type: string
      declinedDateTime:
        description:
          The date and time the recipient declined the document. This property
          is read-only.
        type: string
      deletedDateTime:
        description: Reserved for DocuSign.
        type: string
      deliveredDateTime:
        description:
          The date and time that the envelope was delivered to the recipient.
          This property is read-only.
        type: string
      description:
        description: "A sender-defined description of the line item.

          "
        type: string
      disableResponsiveDocument:
        description: When **true,** responsive documents are disabled for the envelope.
        type: string
      documentBase64:
        description:
          The document's bytes. This field can be used to include a base64
          version of the document bytes within an envelope definition instead of sending
          the document using a multi-part HTTP request. The maximum document size
          is smaller if this field is used due to the overhead of the base64 encoding.
        type: string
      documents:
        description:
          A complex element that contains details about the documents associated
          with the envelope.
        type: array
        items:
          "$ref": "#/definitions/document"
      documentsCombinedUri:
        description:
          The URI for retrieving all of the documents associated with the
          envelope as a single PDF file.
        type: string
      documentsUri:
        description:
          The URI for retrieving all of the documents associated with the
          envelope as separate files.
        type: string
      emailBlurb:
        description:
          This is the same as the email body. If the sender enters an email
          blurb, it is included in the email body for all envelope recipients.
        type: string
      emailSettings:
        "$ref": "#/definitions/emailSettings"
        description: A complex type that contains email settings.
      emailSubject:
        description: |
          The subject line of the email message that is sent to all recipients.

          For information about adding merge field information to the email subject, see [Template Email Subject Merge Fields](/docs/esign-rest-api/reference/templates/templates/create/#template-email-subject-merge-fields).

          **Note:** The subject line is limited to 100 characters, including any merged fields.It is not truncated. It is an error if the text is longer than 100 characters.
        type: string
      enableWetSign:
        description:
          When **true,** the signer is allowed to print the document and
          sign it on paper.
        type: string
      enforceSignerVisibility:
        description: |-
          When **true,** signers can only view the documents on which they have tabs. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all of the documents in an envelope, unless they are specifically excluded by using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded by using this setting when an envelope is sent.

          **Note:** To use this functionality, [Document Visibility][docviz] must be enabled for the account by making the account setting `allowDocumentVisibility` **true.**

          [docviz]: /docs/esign-rest-api/reference/envelopes/envelopedocumentvisibility/
        type: string
      envelopeAttachments:
        description:
          An array of attachment objects that provide information about
          the attachments that are associated with the envelope.
        type: array
        items:
          "$ref": "#/definitions/attachment"
      envelopeCustomMetadata:
        "$ref": "#/definitions/envelopeCustomMetadata"
        description: ""
      envelopeDocuments:
        description:
          An array containing information about the documents that are
          included in the envelope.
        type: array
        items:
          "$ref": "#/definitions/envelopeDocument"
      envelopeId:
        description: |+
          The envelope ID of an envelope that you want to use as
          the basis for the template. The state of the envelope
          can be `draft`, `sent`, or `completed`.

        type: string
      envelopeIdStamping:
        description: |-
          When **true,** [Envelope ID Stamping](https://support.docusign.com/s/document-item?bundleId=gbo1643332197980&topicId=tfm1578456367923.html) is enabled.
          After a document or attachment is stamped with an Envelope ID,
          the ID is seen by all recipients
          and becomes a permanent part of the document
          and cannot be removed.
        type: string
      envelopeLocation:
        description: Reserved for DocuSign.
        type: string
      envelopeMetadata:
        "$ref": "#/definitions/envelopeMetadata"
        description:
          Provides information about the features and services that are
          enabled for the envelope, including the Correct feature, the Advanced Correct
          feature, and DocuSign eNotary service.
      envelopeUri:
        description: The URI for retrieving the envelope or envelopes.
        type: string
      expireAfter:
        description: |-
          Not used. Use the
          [`expirations`](/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification_expirations)
          property in the [`notification`](/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification) object instead.
        type: string
      expireDateTime:
        description: |-
          Not used. Use the
          [`expirations`](/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification_expirations)
          property in the [`notification`](/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification) object instead.
        type: string
      expireEnabled:
        description: |-
          Not used. Use the
          [`expirations`](/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification_expirations)
          property in the [`notification`](/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification) object instead.
        type: string
      externalEnvelopeId:
        description: May contain an external identifier for the envelope.
        type: string
      favoritedByMe:
        description: ""
        type: string
      folderId:
        description: The ID of the folder.
        type: string
      folderIds:
        description: ""
        type: array
        items:
          type: string
      folderName:
        description: ""
        type: string
      folders:
        description: A list of folder objects.
        type: array
        items:
          "$ref": "#/definitions/folder"
      hasComments:
        description:
          When **true,** indicates that users have added comments to the
          envelope.
        type: string
      hasFormDataChanged:
        description:
          When **true,** indicates that the data collected through form
          fields on a document has changed.
        type: string
      hasWavFile:
        description:
          "When **true,** indicates that a .wav file used for voice authentication
          is included in the envelope. "
        type: string
      holder:
        description: Reserved for DocuSign.
        type: string
      initialSentDateTime:
        description: The date and time the envelope was initially sent.
        type: string
      is21CFRPart11:
        description:
          When **true,** indicates compliance with United States Food and
          Drug Administration (FDA) regulations on electronic records and electronic
          signatures (ERES).
        type: string
      isAceGenTemplate:
        description: ""
        type: string
      isDocGenTemplate:
        description: ""
        type: string
      isDynamicEnvelope:
        description: When **true,** indicates that the envelope is a dynamic envelope.
        type: string
      isSignatureProviderEnvelope:
        description:
          When **true,** indicates that the envelope is a signature-provided
          envelope.
        type: string
      lastModified:
        description: |-
          The UTC date and time that the comment was last updated.

          **Note:** This can only be done by the creator.
        type: string
      lastModifiedBy:
        "$ref": "#/definitions/userInfo"
        description: ""
      lastModifiedDateTime:
        description: The date and time that the item was last modified.
        type: string
      lastUsed:
        description: ""
        type: string
      location:
        description: Reserved for DocuSign.
        type: string
      lockInformation:
        "$ref": "#/definitions/EnvelopeLocks"
        description: Provides lock information about an envelope that a user has locked.
      messageLock:
        description:
          "When **true,** prevents senders from changing the contents of
          `emailBlurb` and `emailSubject` properties for the envelope. \n\nAdditionally,
          this prevents users from making changes to the contents of `emailBlurb`
          and `emailSubject` properties when correcting envelopes. \n\nHowever, if
          the `messageLock` node is set to **true** and the `emailSubject` property
          is empty, senders and correctors are able to add a subject to the envelope."
        type: string
      name:
        description: ""
        type: string
      newPassword:
        description: The user's new password.
        type: string
      notification:
        "$ref": "#/definitions/notification"
        description: ""
      notificationUri:
        description: The URI for retrieving notifications.
        type: string
      owner:
        "$ref": "#/definitions/userInfo"
        description: Information about the user who owns the template.
      pageCount:
        description:
          "An integer value specifying the number of document pages in
          the template. "
        type: string
      password:
        description: The user's encrypted password hash.
        type: string
      passwordProtected:
        description: ""
        type: string
      powerForm:
        "$ref": "#/definitions/powerForm"
        description: Information about any PowerForms that are included in the envelope.
      powerForms:
        description: An array of PowerForm objects.
        type: array
        items:
          "$ref": "#/definitions/powerForm"
      purgeCompletedDate:
        description: The date that a purge was completed.
        type: string
      purgeRequestDate:
        description: The date that a purge was requested.
        type: string
      purgeState:
        description: |+
          Shows the current purge state for the envelope. Valid values:

          - `unpurged`: There has been no successful request to purge documents.
          - `documents_queued`: The envelope documents have been added to the purge queue, but have not been purged.
          - `documents_dequeued`: The envelope documents have been taken out of the purge queue.
          - `documents_purged`: The envelope documents have been successfully purged.
          - `documents_and_metadata_queued`: The envelope documents and metadata have been added to the purge queue, but have not yet been purged.
          - `documents_and_metadata_purged`: The envelope documents and metadata have been successfully purged.
          - `documents_and_metadata_and_redact_queued`: The envelope documents and metadata have been added to the purge queue, but have not yet been purged, nor has personal information been redacted.
          - `documents_and_metadata_and_redact_purged`: The envelope documents and metadata have been successfully purged, and personal information has been redacted.

          **Related topics**

          - [Purging documents (eSingature Concepts)](/docs/esign-rest-api/esign101/concepts/documents/purging/)
          - [Purging documents in an envelope (blog post)](https://www.docusign.com/blog/developers/purging-documents-envelope)

        type: string
      recipients:
        "$ref": "#/definitions/EnvelopeRecipients"
        description:
          An array of recipient objects that provides details about the
          recipients of the envelope.
      recipientsLock:
        description:
          When **true,** prevents senders from changing, correcting, or
          deleting the recipient information for the envelope.
        type: string
      recipientsUri:
        description:
          Contains a URI for an endpoint that you can use to retrieve the
          recipients.
        type: string
      sender:
        "$ref": "#/definitions/userInfo"
        description: Information about the sender of the envelope.
      sentDateTime:
        description:
          The UTC DateTime when the envelope was sent. This property is
          read-only.
        type: string
      shared:
        description: |
          When **true,** indicates the template is shared with the **Everyone** group,
          which includes all users on the account.

          When **false,** the template is shared only with the groups you specify.
        type: string
      signerCanSignOnMobile:
        description: |
          When **true,** recipients can sign on a mobile device.

          **Note:** Only Admin users can change this setting.
        type: string
      signingLocation:
        description:
          Specifies the physical location where the signing takes place.
          It can have two enumeration values; `inPerson` and `online`. The default
          value is `online`.
        type: string
      status:
        description: |
          Indicates the envelope status. Valid values are:

          * `completed`: The recipients have finished working with the envelope: the documents are signed and all required tabs are filled in.
          * `created`: The envelope is created as a draft. It can be modified and sent later.
          * `declined`: The envelope has been declined by the recipients.
          * `delivered`: The envelope has been delivered to the recipients.
          * `sent`: The envelope will be sent to the recipients after the envelope is created.
          * `signed`: The envelope has been signed by the recipients.
          * `voided`: The envelope is no longer valid and recipients cannot access or sign the envelope.
        type: string
      statusChangedDateTime:
        description: The data and time that the status changed.
        type: string
      statusDateTime:
        description:
          The DateTime that the envelope changed status (i.e. was created
          or sent.)
        type: string
      templateId:
        description:
          "The unique identifier of the template. If this is not provided,
          DocuSign will generate a value. "
        type: string
      templatesUri:
        description: The URI for retrieving the templates.
        type: string
      transactionId:
        description: |2-
           Used to identify an envelope.

           The ID is a sender-generated value and is valid in the DocuSign system for 7 days.
           It is recommended that a transaction ID is used for offline
           signing to ensure that an envelope is not sent multiple times.
           The `transactionId` property can be used determine an envelope's
           status (i.e. was it created or not) in cases where the internet c
           onnection was lost before the envelope status was returned.
        type: string
      uri:
        description: A URI containing the user ID.
        type: string
      useDisclosure:
        description:
          "When **true,** the disclosure is shown to recipients in accordance
          with the account's Electronic Record and Signature Disclosure frequency
          setting. When **false,** the Electronic Record and Signature Disclosure
          is not shown to any envelope recipients. \n\nIf the `useDisclosure` property
          is not set, then the account's normal disclosure setting is used and the
          value of the `useDisclosure` property is not returned in responses when
          getting envelope information."
        type: string
      voidedDateTime:
        description: The date and time the envelope or template was voided.
        type: string
      voidedReason:
        description: |
          The reason the envelope or template was voided.

          **Note:** The string is truncated to the first 200 characters.
        type: string
      workflow:
        "$ref": "#/definitions/workflow"
        description: ""
    x-ds-definition-name: envelopeTemplate
    description: ""
    x-ms-summary: ""
  envelopeTemplateResults:
    type: object
    properties:
      endPosition:
        description: "The last index position in the result set. "
        type: string
      envelopeTemplates:
        description: The list of requested templates.
        type: array
        items:
          "$ref": "#/definitions/envelopeTemplate"
      folders:
        description: A list of folder objects.
        type: array
        items:
          "$ref": "#/definitions/folder"
      nextUri:
        description:
          "The URI for the next chunk of records based on the search request.
          It is `null` if this is the last set of results for the search. "
        type: string
      previousUri:
        description:
          "The URI for the prior chunk of records based on the search request.
          It is `null` if this is the first set of results for the search. "
        type: string
      resultSetSize:
        description:
          The number of results in this response. Because you can filter
          which entries are included in the response, this value is always less than
          or equal to the `totalSetSize`.
        type: string
      startPosition:
        description: The starting index position of the current result set.
        type: string
      totalSetSize:
        description:
          The total number of items in the result set. This value is always
          greater than or equal to the value of `resultSetSize`.
        type: string
    description: Information about templates.
    x-ds-definition-name: envelopeTemplateResults
    x-ms-summary: Information about templates.
  envelopeTransactionStatus:
    type: object
    properties:
      envelopeId:
        description: The envelope ID of the envelope status that failed to post.
        type: string
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      status:
        description: |
          Indicates the envelope status. Valid values are:

          * `completed`: The recipients have finished working with the envelope: the documents are signed and all required tabs are filled in.
          * `created`: The envelope is created as a draft. It can be modified and sent later.
          * `declined`: The envelope has been declined by the recipients.
          * `delivered`: The envelope has been delivered to the recipients.
          * `sent`: The envelope will be sent to the recipients after the envelope is created.
          * `signed`: The envelope has been signed by the recipients.
          * `voided`: The envelope is no longer valid and recipients cannot access or sign the envelope.
        type: string
      transactionId:
        description:
          " Used to identify an envelope. The ID is a sender-generated
          value and is valid in the DocuSign system for 7 days. It is recommended
          that a transaction ID is used for offline signing to ensure that an envelope
          is not sent multiple times. The `transactionId` property can be used determine
          an envelope's status (i.e. was it created or not) in cases where the internet
          connection was lost before the envelope status was returned."
        type: string
    x-ds-definition-name: envelopeTransactionStatus
    description: ""
    x-ms-summary: ""
  envelopeTransferRule:
    type: object
    properties:
      carbonCopyOriginalOwner:
        description:
          When **true,** the original owner is added as a carbon copy recipient
          after envelope transfer. The default value is **false.**
        type: string
      enabled:
        description: When **true,** the envelope transfer rule is active.
        type: string
      envelopeTransferRuleId:
        description:
          The ID of the envelope transfer rule. The system generates this
          ID when the rule is first created.
        type: string
      eventType:
        description:
          "The type of envelope event that triggers the transfer. Valid
          values are:\n\n- `sent`\n- `before sent` \n- `completed`"
        type: string
      fromGroup:
        "$ref": "#/definitions/group"
        description: Information about the group that triggers the transfer.
      fromUser:
        "$ref": "#/definitions/userInformation"
        description: Information about the user who triggers the transfer.
      modifiedDate:
        description:
          The UTC DateTime when the envelope transfer rule was last modified.
          This property is read-only.
        type: string
      modifiedUser:
        "$ref": "#/definitions/userInformation"
        description:
          Information about the user who last modified the envelope transfer
          rule.
      toFolder:
        "$ref": "#/definitions/folder"
        description:
          Information about the destination folder to which the envelope
          is transferred.
      toUser:
        "$ref": "#/definitions/userInformation"
        description: Information about the user to which the envelope is transferred.
    description: This object contains details about an envelope transfer rule.
    x-ds-definition-name: envelopeTransferRule
    x-ms-summary: This object contains details about an envelope transfer rule.
  envelopeTransferRuleInformation:
    type: object
    properties:
      endPosition:
        description: "The last index position in the result set. "
        type: string
      envelopeTransferRules:
        description: Contains information about a specific envelope transfer rule.
        type: array
        items:
          "$ref": "#/definitions/envelopeTransferRule"
      nextUri:
        description:
          "The URI for the next chunk of records based on the search request.
          It is `null` if this is the last set of results for the search. "
        type: string
      previousUri:
        description:
          "The URI for the prior chunk of records based on the search request.
          It is `null` if this is the first set of results for the search. "
        type: string
      resultSetSize:
        description:
          The number of results in this response. Because you can filter
          which entries are included in the response, this value is always less than
          or equal to the `totalSetSize`.
        type: string
      startPosition:
        description: The starting index position of the current result set.
        type: string
      totalSetSize:
        description:
          The total number of items in the result set. This value is always
          greater than or equal to the value of `resultSetSize`.
        type: string
    x-ds-definition-name: envelopeTransferRuleInformation
    description: ""
    x-ms-summary: ""
  envelopeTransferRuleRequest:
    type: object
    properties:
      carbonCopyOriginalOwner:
        description:
          When **true,** the original owner is added as a carbon copy recipient
          after envelope transfer. The default value is **false.**
        type: string
      enabled:
        description: When **true,** the envelope transfer rule is active.
        type: string
      envelopeTransferRuleId:
        description:
          The ID of the envelope transfer rule. The system generates this
          ID when the rule is first created.
        type: string
      eventType:
        description:
          "The type of envelope event that triggers the transfer. Valid
          values are:\n\n- `sent`\n- `before sent` \n- `completed`"
        type: string
      fromGroups:
        description: Information about the group that triggers the transfer.
        type: array
        items:
          "$ref": "#/definitions/group"
      fromUsers:
        description: Information about the user who triggers the transfer.
        type: array
        items:
          "$ref": "#/definitions/userInformation"
      modifiedDate:
        description:
          The UTC DateTime when the envelope transfer rule was last modified.
          This property is read-only.
        type: string
      modifiedUser:
        "$ref": "#/definitions/userInformation"
        description:
          Information about the user who last modified the envelope transfer
          rule.
      toFolder:
        "$ref": "#/definitions/folder"
        description:
          Information about the destination folder to which the envelope
          is transferred.
      toUser:
        "$ref": "#/definitions/userInformation"
        description: Information about the user to which the envelope is transferred.
    description:
      This object contains details about the envelope transfer rule that
      you want to create.
    x-ds-definition-name: envelopeTransferRuleRequest
    x-ms-summary:
      This object contains details about the envelope transfer rule that
      you want to create.
  envelopeUpdateSummary:
    type: object
    properties:
      bulkEnvelopeStatus:
        "$ref": "#/definitions/bulkEnvelopeStatus"
        description: An object that describes the status of the bulk send envelopes.
      envelopeId:
        description: The envelope ID of the envelope status that failed to post.
        type: string
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      listCustomFieldUpdateResults:
        description: ""
        type: array
        items:
          "$ref": "#/definitions/listCustomField"
      lockInformation:
        "$ref": "#/definitions/EnvelopeLocks"
        description: Provides lock information about an envelope that a user has locked.
      purgeState:
        description: |+
          Shows the current purge state for the envelope. Valid values:

          - `unpurged`: There has been no successful request to purge documents.
          - `documents_queued`: The envelope documents have been added to the purge queue, but have not been purged.
          - `documents_dequeued`: The envelope documents have been taken out of the purge queue.
          - `documents_purged`: The envelope documents have been successfully purged.
          - `documents_and_metadata_queued`: The envelope documents and metadata have been added to the purge queue, but have not yet been purged.
          - `documents_and_metadata_purged`: The envelope documents and metadata have been successfully purged.
          - `documents_and_metadata_and_redact_queued`: The envelope documents and metadata have been added to the purge queue, but have not yet been purged, nor has personal information been redacted.
          - `documents_and_metadata_and_redact_purged`: The envelope documents and metadata have been successfully purged, and personal information has been redacted.

          **Related topics**

          - [Purging documents (eSingature Concepts)](/docs/esign-rest-api/esign101/concepts/documents/purging/)
          - [Purging documents in an envelope (blog post)](https://www.docusign.com/blog/developers/purging-documents-envelope)

        type: string
      recipientUpdateResults:
        description:
          An array of `recipientUpdateResults` objects that contain details
          about the recipients.
        type: array
        items:
          "$ref": "#/definitions/recipientUpdateResponse"
      tabUpdateResults:
        "$ref": "#/definitions/EnvelopeRecipientTabs"
        description: ""
      textCustomFieldUpdateResults:
        description: ""
        type: array
        items:
          "$ref": "#/definitions/textCustomField"
    x-ds-definition-name: envelopeUpdateSummary
    description: ""
    x-ms-summary: ""
  errorDetails:
    description:
      This object describes errors that occur. It is only valid for responses
      and ignored in requests.
    type: object
    properties:
      errorCode:
        description: The code associated with the error condition.
        type: string
      message:
        description: A brief message describing the error condition.
        type: string
    x-ds-definition-name: errorDetails
    x-ms-summary:
      This object describes errors that occur. It is only valid for responses
      and ignored in requests.
  eventNotification:
    description: Use this object to configure a [DocuSign Connect webhook](/platform/webhooks/connect/).
    type: object
    properties:
      deliveryMode:
        description: ""
        type: string
      envelopeEvents:
        description:
          "A list of envelope-level event statuses that will trigger Connect
          to send updates to the endpoint specified in the `url` property. \n\nTo
          receive notifications, you must include either an `envelopeEvents` node
          or a `recipientEvents` node. You do not need to specify both."
        type: array
        items:
          "$ref": "#/definitions/envelopeEvent"
      eventData:
        "$ref": "#/definitions/connectEventData"
        description:
          Allows you to specify the format of the information the Connect
          webhooks returns.
      events:
        description: |
          A comma-separated list of envelope-level event statuses that will trigger Connect to send updates to the endpoint specified in the `urlToPublishTo` property.

          Set this property when you are using the [JSON SIM event model](/platform/webhooks/connect/improved-json-sim-event-model/). If you are instead using any of [the legacy event message formats](/platform/webhooks/connect/legacy-message-formats/), set either the `envelopeEvents` property or the `recipientEvents` property.

          The [possible event statuses](/platform/webhooks/connect/improved-json-sim-event-model/#eventreference) are:

          * `envelope-created`
          * `envelope-sent`
          * `envelope-resent`
          * `envelope-delivered`
          * `envelope-completed`
          * `envelope-declined`
          * `envelope-voided`
          * `recipient-authenticationfailed`
          * `recipient-autoresponded`
          * `recipient-declined`
          * `recipient-delivered`
          * `recipient-completed`
          * `recipient-sent`
          * `recipient-resent`
          * `template-created`
          * `template-modified`
          * `template-deleted`
          * `envelope-corrected`
          * `envelope-purge`
          * `envelope-deleted`
          * `envelope-discard`
          * `recipient-reassign`
          * `recipient-delegate`
          * `recipient-finish-later`
          * `click-agreed`
          * `click-declined`
        type: array
        items:
          type: string
      includeCertificateOfCompletion:
        description:
          "When **true,** the Connect Service includes the Certificate
          of Completion with completed envelopes. "
        type: string
      includeCertificateWithSoap:
        description: |-
          When **true,**
          the Connect service will digitally sign
          the data.
          The signature will be included in the message.
        type: string
      includeDocumentFields:
        description:
          "When **true,** the Document Fields associated with the envelope's
          documents are included in the notification messages. Document Fields are
          optional custom name-value pairs added to documents using the API. "
        type: string
      includeDocuments:
        description: |-
          When **true,**
          the Connect webhook messages
          will include the envelope's PDF documents.
          Including the PDF documents
          greatly increases the size of the notification messages.
          Ensure that your listener can handle
          incoming messages that are 25MB or larger.
        type: string
      includeEnvelopeVoidReason:
        description:
          "When **true,** this tells the Connect Service to include the
          void reason, as entered by the person that voided the envelope, in the message. "
        type: string
      includeHMAC:
        description: |-
          When **true,** HMAC headers will be included with the webhook notifications.

          **Note:** [HMAC must enabled](/platform/webhooks/connect/hmac/) at the account level with [one or more HMAC secrets](/platform/webhooks/connect/setting-up-hmac/).
        type: string
      includeOAuth:
        description: ""
        type: string
      includeSenderAccountAsCustomField:
        description:
          When **true,** Connect will include the sender account as Custom
          Field in the data.
        type: string
      includeTimeZone:
        description:
          "When **true,** the envelope's time zone information is included
          in the webhook messages. "
        type: string
      integratorManaged:
        description: ""
        type: string
      loggingEnabled:
        description:
          When **true,** the webhook messages are logged. They can be viewed
          on the DocuSign Administration Web Tool in the Connect section. Logged messages
          can also be downloaded via the [ConnectEvents resource](/docs/esign-rest-api/reference/connect/connectevents/).
        type: string
      recipientEvents:
        description: |-
          A list of recipient event statuses that will trigger Connect to send updates to   the endpoint specified in the URL property.

          To receive notifications, you must include either an `envelopeEvents` node or a `recipientEvents` node. You do not need to specify both.
        type: array
        items:
          "$ref": "#/definitions/recipientEvent"
      requireAcknowledgment:
        description:
          "When **true,** the DocuSign Connect service checks that the
          message was received and retries on failures. "
        type: string
      signMessageWithX509Cert:
        description:
          "When **true,** Mutual TLS will be enabled for notifications.
          Mutual TLS must be initiated by the listener (the customer's web server)
          during the TLS handshake protocol. "
        type: string
      soapNameSpace:
        description: |-
          The namespace of the SOAP interface.

          The namespace value must be set if useSoapInterface is set to true.
        type: string
      url:
        description: |
          The endpoint to which Connect should send webhook notification messages via an HTTPS POST request. The URL must start with `https`. The customer's web server must use an SSL/TLS certificate whose CA is in the Microsoft list of trusted CAs. Self-signed certificates are not acceptable, but you can use free certificates from Let's Encrypt.

          The maximum length of this property is 4096 bytes.
        type: string
      useSoapInterface:
        description:
          "When **true,** this tells the Connect service that the user's
          endpoint has implemented a SOAP interface. "
        type: string
    x-ds-definition-name: eventNotification
    x-ms-summary: Use this object to configure a [DocuSign Connect webhook](/platform/webhooks/connect/).
  eventResult:
    type: object
    properties:
      eventTimestamp:
        description: Date/time of the event.
        type: string
      failureDescription:
        description: Reason for failure, if the event failed.
        type: string
      status:
        description: Event status.
        type: string
      vendorFailureStatusCode:
        description: Failure status code, if the event failed.
        type: string
    description: Information about the result of an event.
    x-ds-definition-name: eventResult
    x-ms-summary: Information about the result of an event.
  expirations:
    description:
      "A complex element that specifies the expiration settings for the
      envelope. When an envelope expires, it is voided and no longer available for
      signing. **Note:** there is a short delay between when the envelope expires
      and when it is voided.

      "
    type: object
    properties:
      expireAfter:
        description:
          An integer that sets the number of days the envelope is active.
          For this value to be used, `expireEnabled` must be explicitly set to **true.**
        type: string
      expireEnabled:
        description:
          When **true,** the envelope expires in the number of days set
          by `expireAfter`. When **false** or not set, the envelope expires in the
          number of days specified by the [default expiration account setting](https://support.docusign.com/s/document-item?bundleId=pik1583277475390&topicId=rra1583277381176.html).
        type: string
      expireWarn:
        description:
          An integer that specifying the number of days before the envelope
          expires that an expiration warning email is sent to the recipient. When
          0 (zero), no warning email is sent.
        type: string
    x-ds-definition-name: expirations
    x-ms-summary:
      "A complex element that specifies the expiration settings for the
      envelope. When an envelope expires, it is voided and no longer available for
      signing. **Note:** there is a short delay between when the envelope expires
      and when it is voided.

      "
  externalDocServiceErrorDetails:
    type: object
    properties:
      authenticationUrl:
        description: Reserved for DocuSign.
        type: string
      errorCode:
        description: A code associated with the error condition.
        type: string
      message:
        description: ""
        type: string
    x-ds-definition-name: externalDocServiceErrorDetails
    description: ""
    x-ms-summary: ""
  externalDocumentSources:
    type: object
    properties:
      boxnetEnabled:
        description:
          The account is enabled to allow external documents to be attached
          from BoxNet.
        type: string
      boxnetMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: Metadata indicating whether the `boxnetEnabled` property is editable.
      dropboxEnabled:
        description:
          The account is enabled to allow external documents to be attached
          from DropBox.
        type: string
      dropboxMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          Metadata indicating whether the `dropboxEnabled` property is
          editable.
      googleDriveEnabled:
        description:
          The account is enabled to allow external documents to be attached
          from Google Drive.
        type: string
      googleDriveMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          Metadata indicating whether the `googleDriveEnabled` property
          is editable.
      oneDriveEnabled:
        description:
          The account is enabled to allow external documents to be attached
          from OneDrive.
        type: string
      oneDriveMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          Metadata indicating whether the `oneDriveEnabled` property is
          editable.
      salesforceEnabled:
        description:
          The account is enabled to allow external documents to be attached
          from Salesforce.
        type: string
      salesforceMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          Metadata indicating whether the `salesforceEnabled` property
          is editable.
    description: A complex object specifying the external document sources.
    x-ds-definition-name: externalDocumentSources
    x-ms-summary: A complex object specifying the external document sources.
  externalFile:
    type: object
    properties:
      date:
        description: The UTC date and time that the file or folder was last modified.
        type: string
      hasCompositeTemplate:
        description: ""
        type: string
      id:
        description: The storage provider's ID for the file or folder.
        type: string
      img:
        description: |-
          The file extension for a file.

          **Note:** If the item is a folder, this value is null.
        type: string
      name:
        description: The full name of a file.
        type: string
      ownerName:
        description: ""
        type: string
      size:
        description:
          The size of the file. The file size limit varies based on the
          cloud storage provider.
        type: string
      supported:
        description: When **true,** DocuSign supports the file type for upload.
        type: string
      type:
        description: |-
          The type of cloud storage item. Valid values are:

          - `file`
          - `folder`
        type: string
      uri:
        description: The URI for the file or folder.
        type: string
    description:
      This object contains information about a file or folder in cloud
      storage.
    x-ds-definition-name: externalFile
    x-ms-summary:
      This object contains information about a file or folder in cloud
      storage.
  externalFolder:
    type: object
    properties:
      endPosition:
        description: "The last index position in the result set. "
        type: string
      errorDetails:
        "$ref": "#/definitions/externalDocServiceErrorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      id:
        description: A unique ID for the Salesforce object.
        type: string
      items:
        description:
          If the tab is a list, this represents the values that are possible
          for the tab.
        type: array
        items:
          "$ref": "#/definitions/externalFile"
      name:
        description: ""
        type: string
      nextUri:
        description:
          "The URI for the next chunk of records based on the search request.
          It is `null` if this is the last set of results for the search. "
        type: string
      previousUri:
        description:
          "The URI for the prior chunk of records based on the search request.
          It is `null` if this is the first set of results for the search. "
        type: string
      resultSetSize:
        description:
          The number of results in this response. Because you can filter
          which entries are included in the response, this value is always less than
          or equal to the `totalSetSize`.
        type: string
      startPosition:
        description: The starting index position of the current result set.
        type: string
      totalSetSize:
        description:
          The total number of items in the result set. This value is always
          greater than or equal to the value of `resultSetSize`.
        type: string
    x-ds-definition-name: externalFolder
    description: ""
    x-ms-summary: ""
  externalPrimaryAccountRecipientAuthRequirements:
    type: object
    properties:
      accessCode:
        description:
          "If a value is provided, the recipient must enter the value as
          the access code to view and sign the envelope. \n\nMaximum Length: 50 characters
          and it must conform to the account's access code format setting.\n\nIf blank,
          but the signer `accessCode` property is set in the envelope, then that value
          is used.\n\nIf blank and the signer `accessCode` property is not set, then
          the access code is not required."
        type: string
      idVerification:
        description: ""
        type: string
      kba:
        description: ""
        type: string
      phone:
        description: ""
        type: string
    x-ds-definition-name: externalPrimaryAccountRecipientAuthRequirements
    description: ""
    x-ms-summary: ""
  favoriteTemplatesContentItem:
    type: object
    properties:
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      favoritedDate:
        description: Time at which the template was marked as favorite.
        type: string
      templateId:
        description: The ID of the template.
        type: string
    x-ds-definition-name: favoriteTemplatesContentItem
    description: ""
    x-ms-summary: ""
  favoriteTemplatesInfo:
    type: object
    properties:
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      favoriteTemplates:
        description: The favorite templates acted upon by the call.
        type: array
        items:
          "$ref": "#/definitions/favoriteTemplatesContentItem"
      templatesUpdatedCount:
        format: int32
        description:
          The number of templates successfully updated by the call. This
          property is read-only.
        type: integer
    x-ds-definition-name: favoriteTemplatesInfo
    description: ""
    x-ms-summary: ""
  featureAvailableMetadata:
    type: object
    properties:
      availabilty:
        description: ""
        type: string
      featureName:
        description: ""
        type: string
    x-ds-definition-name: featureAvailableMetadata
    description: ""
    x-ms-summary: ""
  featureSet:
    type: object
    properties:
      currencyFeatureSetPrices:
        description: Reserved for DocuSign.
        type: array
        items:
          "$ref": "#/definitions/currencyFeatureSetPrice"
      envelopeFee:
        description: Reserved for DocuSign.
        type: string
      featureSetId:
        description: Reserved for DocuSign.
        type: string
      fixedFee:
        description: Reserved for DocuSign.
        type: string
      is21CFRPart11:
        description: Reserved for DocuSign.
        type: string
      isActive:
        description: Reserved for DocuSign.
        type: string
      isEnabled:
        description:
          When **true,** the feature set is actively enabled as part of
          the plan.
        type: string
      name:
        description: Reserved for DocuSign.
        type: string
      seatFee:
        description: Reserved for DocuSign.
        type: string
    description:
      This object provides details about a feature set, or add-on product
      that is associated with an account. It is reserved for DocuSign internal use
      only.
    x-ds-definition-name: featureSet
    x-ms-summary:
      This object provides details about a feature set, or add-on product
      that is associated with an account. It is reserved for DocuSign internal use
      only.
  fileType:
    type: object
    properties:
      fileExtension:
        description: ""
        type: string
      mimeType:
        description: The mime-type of a file type listed in a fileTypes collection.
        type: string
    x-ds-definition-name: fileType
    description: ""
    x-ms-summary: ""
  fileTypeList:
    type: object
    properties:
      fileTypes:
        description: A collection of file types.
        type: array
        items:
          "$ref": "#/definitions/fileType"
    x-ds-definition-name: fileTypeList
    description: ""
    x-ms-summary: ""
  filter:
    type: object
    properties:
      actionRequired:
        description: When **true,** the current user needs to take action on the item.
        type: string
      expires:
        description: The number of days a sent envelope remains active before it expires.
        type: string
      folderIds:
        description: |-
          Filters for any combination of folder IDs and folder types. The possible folder types are:

          - `awaiting_my_signature`
          - `completed`
          - `draft`
          - `drafts`
          - `expiring_soon`
          - `inbox`
          - `out_for_signature`
          - `recyclebin`
          - `sentitems`
          - `waiting_for_others`
        type: string
      fromDateTime:
        description:
          The UTC DateTime of the beginning of a date range. If no value
          is provided, the default search is the previous 30 days.
        type: string
      isTemplate:
        description: When **true,** the item is a template.
        type: string
      order:
        description:
          "The order in which to sort the results.\n\nValid values are:
          \n\n\n* `asc`: Ascending order.\n* `desc`: Descending order. "
        type: string
      orderBy:
        description: |-
          The field used to sort the results.

          Example: `Created`
        type: string
      searchTarget:
        description: Reserved for DocuSign.
        type: string
      searchText:
        description:
          A free text search field for searching across the items in a
          folder. The search looks for the text that you enter in the recipient names
          and emails, envelope custom fields, sender name, and subject.
        type: string
      status:
        description: |-
          The status of the envelope. By default, all statuses are returned.

          For details, see [Envelope Status Code Descriptions](/docs/esign-rest-api/esign101/rules-and-limits/responses/).
        type: string
      toDateTime:
        description:
          The UTC DateTime of the end of a date range. If no value is provided,
          the default search is to the current date.
        type: string
    description: Use this object to create a filtered view of the items in a folder.
    x-ds-definition-name: filter
    x-ms-summary: Use this object to create a filtered view of the items in a folder.
  firstName:
    type: object
    properties:
      anchorAllowWhiteSpaceInCharacters:
        description: |
          When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.

          First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.

          Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.

          The default value is **true.**
        type: string
      anchorAllowWhiteSpaceInCharactersMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorAllowWhiteSpaceInCharacters`
          property is editable.
      anchorCaseSensitive:
        description: |-
          This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**

          For example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.

          This functionality uses the following rules:

          - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:

            $~><|^+=

            For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`

          - Strings embedded in other strings are ignored during the matching process.

          - In words that have dashes, the parts separated by dashes are treated as distinct words.

            Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**

          - Letters with accent marks are treated as distinct characters from their unaccented counterparts.

          - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.

            Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.

          - Unlike punctuation, numbers are not ignored when finding anchor words.

            Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).

          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorCaseSensitiveMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorCaseSensitive` property
          is editable.
      anchorHorizontalAlignment:
        description: |
          This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :

          - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.
          - `right`: Aligns the tab’s left side with the last character of the matching anchor word.

          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorHorizontalAlignmentMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorHorizontalAlignment`
          property is editable.
      anchorIgnoreIfNotPresent:
        description:
          When **true,** this tab is ignored if the `anchorString` is not
          found in the document.
        type: string
      anchorIgnoreIfNotPresentMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorIgnoreIfNotPresent`
          property is editable.
      anchorMatchWholeWord:
        description: |
          When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**

          For example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.

          This functionality uses the following rules:

          - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:

            $~><|^+=

            For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`

          - Strings embedded in other strings are ignored during the matching process.

          - In words that have dashes, the parts separated by dashes are treated as distinct words.

            Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**

          - Letters with accent marks are treated as distinct characters from their unaccented counterparts.

          - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.

            Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.

          - Unlike punctuation, numbers are not ignored when finding anchor words.

            Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).


          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorMatchWholeWordMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorMatchWholeWord` property
          is editable.
      anchorString:
        description:
          Specifies the string to find in the document and use as the basis
          for tab placement.
        type: string
      anchorStringMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorString` property is
          editable.
      anchorTabProcessorVersion:
        description: Reserved for DocuSign.
        type: string
      anchorTabProcessorVersionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Reserved for DocuSign.
      anchorUnits:
        description: |
          Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:

          - `pixels` (default)
          - `inches`
          - `mms`
          - `cms`
        type: string
      anchorUnitsMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorUnits` property is
          editable.
      anchorXOffset:
        description:
          "Specifies the X axis location of the tab in `anchorUnits` relative
          to the `anchorString`.

          "
        type: string
      anchorXOffsetMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorXOffset` property
          is editable.
      anchorYOffset:
        description:
          "Specifies the Y axis location of the tab in `anchorUnits` relative
          to the `anchorString`.

          "
        type: string
      anchorYOffsetMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorYOffset` property
          is editable.
      bold:
        description: When **true,** the information in the tab is bold.
        type: string
      boldMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `bold` property is editable.
      caption:
        description: ""
        type: string
      captionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `caption` property is editable.
      conditionalParentLabel:
        description:
          For conditional fields this is the `tabLabel` of the parent tab
          that controls this tab's visibility.
        type: string
      conditionalParentLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `conditionalParentLabel`
          property is editable.
      conditionalParentValue:
        description: |
          For conditional fields, this is the value of the parent tab that controls the tab's visibility.

          If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use "on" as the value to show that the parent tab is active.
        type: string
      conditionalParentValueMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `conditionalParentValue`
          property is editable.
      customTabId:
        description:
          The DocuSign-generated custom tab ID for the custom tab to be
          applied. This can only be used when adding new tabs for a recipient. When
          used, the new tab inherits all the custom tab properties.
        type: string
      customTabIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `customTabId` property is
          editable.
      documentId:
        description:
          Specifies the document ID number that the tab is placed on. This
          must refer to an existing Document's ID attribute.
        type: string
      documentIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `documentId` property is
          editable.
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      font:
        description: |
          The font to be used for the tab value. Supported fonts include:

          - Default
          - Arial
          - ArialNarrow
          - Calibri
          - CourierNew
          - Garamond
          - Georgia
          - Helvetica
          - LucidaConsole
          - MSGothic
          - MSMincho
          - OCR-A
          - Tahoma
          - TimesNewRoman
          - Trebuchet
          - Verdana
        type: string
      fontColor:
        description:
          "The font color to use for the information in the tab. Possible
          values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n-
          Gold\n- Green\n- NavyBlue\n- Purple\n- White\n"
        type: string
      fontColorMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `fontColor` property is editable.
      fontMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `font` property is editable.
      fontSize:
        description: |-
          The font size used for the information in the tab. Possible values are:

          - Size7
          - Size8
          - Size9
          - Size10
          - Size11
          - Size12
          - Size14
          - Size16
          - Size18
          - Size20
          - Size22
          - Size24
          - Size26
          - Size28
          - Size36
          - Size48
          - Size72
        type: string
      fontSizeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `fontSize` property is editable.
      formOrder:
        description:
          An integer specifying the order in which the guided form HTML
          should render. The order is relative to the `formPageLabel`, the group by
          which to place the guided form HTML block.
        type: string
      formOrderMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `formOrder` property is editable.
      formPageLabel:
        description:
          A string specifying the group in which to place the guided form
          HTML. Each group displays as a separate guided forms page in the signing
          experience.
        type: string
      formPageLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `formPageLabel` property
          is editable.
      formPageNumber:
        description:
          An integer specifying the order in which to present the guided
          form pages.
        type: string
      formPageNumberMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `fromPageNumber` property
          is editable.
      height:
        description: |-
          The height of the tab in pixels.
          Must be an integer.
        type: string
      heightMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `height` property is editable.
      italic:
        description: When **true,** the information in the tab is italic.
        type: string
      italicMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `italic` property is editable.
      localePolicy:
        "$ref": "#/definitions/localePolicyTab"
        description: Locale-specific settings.
      mergeField:
        "$ref": "#/definitions/mergeField"
        description:
          Contains the information necessary to map the tab to a field
          in SalesForce.
      mergeFieldXml:
        description: Reserved for DocuSign.
        type: string
      name:
        description: |-
          The name of the tab. For example, `Sign Here` or `Initial Here`.

          If the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.
        type: string
      nameMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `name` property is editable.
          This property is read-only.
      pageNumber:
        description:
          "The page number on which the tab is located. For supplemental
          documents, this value must be `1`.

          "
        type: string
      pageNumberMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `pageNumber` property is
          editable.
      recipientId:
        description:
          "The ID of the recipient to whom the tab will be assigned. This
          value should match the `recipientId` defined in the recipient object.

          "
        type: string
      recipientIdGuid:
        description:
          The globally-unique identifier (GUID) for a specific recipient
          on a specific envelope. If the same recipient is associated with multiple
          envelopes, they will have a different GUID for each one. This property is
          read-only.
        type: string
      recipientIdGuidMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `recipientIdGuid` property
          is editable.
      recipientIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `recipientId` property is
          editable.
      smartContractInformation:
        "$ref": "#/definitions/smartContractInformation"
        description: Reserved for DocuSign.
      source:
        description: Reserved for DocuSign.
        type: string
      status:
        description: |-
          The status of the tab. Possible values are:

          - `active`: The tab is active, but the recipient has not yet interacted with it.
          - `signed`: The recipient signed the tab.
          - `declined`: The recipient declined the envelope.
          - `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).
        type: string
      statusMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `status` property is editable.
      tabGroupLabels:
        description: |-
          An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.

          To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
        type: array
        items:
          type: string
      tabGroupLabelsMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `tabGroupLabels` property
          is editable.
      tabId:
        description: The unique identifier for the tab.
        type: string
      tabIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabId` property is editable.
      tabLabel:
        description: |
          The label associated with the tab. This value may be an empty string.
          If no value is provided, the tab type is used as the value.

          Maximum Length: 500 characters.
        type: string
      tabLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabLabel` property is editable.
      tabOrder:
        description: |-
          A positive integer that sets the order the tab is navigated to during signing.

          Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
        type: string
      tabOrderMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabOrder` property is editable.
      tabType:
        description: Indicates the type of tab (for example, `signHere` or `initialHere`).
        type: string
      tabTypeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabType` property is editable.
      templateLocked:
        description:
          "When **true,** the sender cannot change any attributes of the
          recipient. Used only when working with template recipients. "
        type: string
      templateLockedMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `templateLocked` property
          is editable.
      templateRequired:
        description:
          When **true,** the sender may not remove the recipient. Used
          only when working with template recipients.
        type: string
      templateRequiredMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `templateRequired` property
          is editable.
      tooltip:
        description:
          "The text of a tooltip that appears when a user hovers over a
          form field or tab.

          "
        type: string
      toolTipMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          "Metadata that indicates whether the `toolTip` property is editable.

          "
      underline:
        description: When **true,** the information in the tab is underlined.
        type: string
      underlineMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `underline` property is editable.
      value:
        description: "Specifies the value of the tab. "
        type: string
      valueMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `value` property is editable.
      width:
        description: |-
          The width of the tab in pixels.
          Must be an integer.
        type: string
      widthMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `width` property is editable.
      xPosition:
        description: |
          This property indicates the horizontal offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. Must be an integer. May be zero.

          To improve the tab's position on the document,
          DocuSign recommends
          adjusting `xPosition`
          and `yPosition`
          coordinates
          by (-3, -2)
        type: string
      xPositionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `xPosition` property is editable.
      yPosition:
        description: |
          This property indicates the vertical offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. Must be an integer. May be zero.

          To improve the tab's position on the document,
          DocuSign recommends
          adjusting `xPosition`
          and `yPosition`
          coordinates
          by (-3, -2)
        type: string
      yPositionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `yPosition` property is editable.
    description: |
      A tab that displays the recipient's first name. This tab
      takes the recipient's name as entered in the recipient
      information, splits it into sections based on spaces and
      uses the first section as the first name.
    x-ds-definition-name: firstName
    x-ms-summary: |
      A tab that displays the recipient's first name. This tab
      takes the recipient's name as entered in the recipient
      information, splits it into sections based on spaces and
      uses the first section as the first name.
  folder:
    type: object
    properties:
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      filter:
        "$ref": "#/definitions/filter"
        description: An object used to present a filtered view of the items in a folder.
      folderId:
        description: The ID of the folder.
        type: string
      folderItems:
        description: A list of envelopes and templates that the folder contains.
        type: array
        items:
          "$ref": "#/definitions/folderItem_v2"
      folders:
        description: A collection of folder objects returned in a response.
        type: array
        items:
          "$ref": "#/definitions/folder"
      hasAccess:
        description: When **true,** the current user has access to the folder.
        type: string
      hasSubFolders:
        description: When **true,** the folder has subfolders.
        type: string
      itemCount:
        description: The number of items in the folder.
        type: string
      name:
        description: The name of the folder.
        type: string
      owner:
        "$ref": "#/definitions/userInfo"
        description: Information about the user who owns the folder.
      parentFolderId:
        description:
          The ID of the parent folder, or the special value `root` for
          the root folder.
        type: string
      parentFolderUri:
        description: The URI of the parent folder.
        type: string
      subFolderCount:
        description: The number of subfolders.
        type: string
      type:
        description: |-
          The type of folder. Possible values include:

          - `draft`
          - `inbox`
          - `normal` (a system-generated folder)
          - `recyclebin`
          - `sentitems`
          - `custom` (a custom folder created by a user)
        type: string
      uri:
        description: The URI for the folder.
        type: string
    description: This object contains details about a folder.
    x-ds-definition-name: folder
    x-ms-summary: This object contains details about a folder.
  folderItem_v2:
    type: object
    properties:
      completedDateTime:
        description:
          If the item is an envelope, this is the UTC DateTime when the
          envelope was completed.
        type: string
      createdDateTime:
        description: The UTC DateTime when the item was created.
        type: string
      envelopeId:
        description: If the item is an envelope, this is the ID of the envelope.
        type: string
      envelopeUri:
        description: If the item is an envelope, this is the URI for retrieving it.
        type: string
      expireDateTime:
        description: The date and time the envelope is set to expire.
        type: string
      folderId:
        description: The ID of the folder.
        type: string
      folderUri:
        description: If the item is a subfolder, this is the URI for retrieving it.
        type: string
      is21CFRPart11:
        description:
          When **true,** indicates compliance with United States Food and
          Drug Administration (FDA) regulations on electronic records and electronic
          signatures (ERES).
        type: string
      lastModifiedDateTime:
        description: The date and time that the item was last modified.
        type: string
      ownerName:
        description: The name of the user who owns the folder.
        type: string
      recipients:
        "$ref": "#/definitions/EnvelopeRecipients"
        description:
          An array of recipient objects that provides details about the
          recipients of the envelope.
      recipientsUri:
        description:
          Contains a URI for an endpoint that you can use to retrieve the
          recipients.
        type: string
      senderCompany:
        description: The name of the sender's company.
        type: string
      senderEmail:
        description: The sender's email address.
        type: string
      senderName:
        description: The sender's name.
        type: string
      senderUserId:
        description: The sender's id.
        type: string
      sentDateTime:
        description:
          The UTC DateTime when the envelope was sent. This property is
          read-only.
        type: string
      status:
        description:
          "Indicates the envelope status. Valid values are:\n\n* sent -
          The envelope is sent to the recipients. \n* created - The envelope is saved
          as a draft and can be modified and sent later."
        type: string
      subject:
        description: The subject of the envelope.
        type: string
      templateId:
        description:
          "The unique identifier of the template. If this is not provided,
          DocuSign will generate a value. "
        type: string
      templateUri:
        description: The URI for retrieving the template.
        type: string
    description: Information about folder item results.
    x-ds-definition-name: folderItem_v2
    x-ms-summary: Information about folder item results.
  folderItemResponse:
    type: object
    properties:
      endPosition:
        description: "The last index position in the result set. "
        type: string
      folderItems:
        description: "A list of the envelopes in the specified folder or folders. "
        type: array
        items:
          "$ref": "#/definitions/folderItem_v2"
      nextUri:
        description:
          "The URI for the next chunk of records based on the search request.
          It is `null` if this is the last set of results for the search. "
        type: string
      previousUri:
        description:
          "The URI for the prior chunk of records based on the search request.
          It is `null` if this is the first set of results for the search. "
        type: string
      resultSetSize:
        description:
          The number of results in this response. Because you can filter
          which entries are included in the response, this value is always less than
          or equal to the `totalSetSize`.
        type: string
      startPosition:
        description: The starting index position of the current result set.
        type: string
      totalRows:
        description: The total number of items in the result.
        type: string
    description: Results from a folder item request.
    x-ds-definition-name: folderItemResponse
    x-ms-summary: Results from a folder item request.
  folderItemsResponse:
    type: object
    properties:
      endPosition:
        description: "The last index position in the result set. "
        type: string
      envelopes:
        description: ""
        type: array
        items:
          "$ref": "#/definitions/envelopeSummary"
      folders:
        description: A list of folder objects.
        type: array
        items:
          "$ref": "#/definitions/folder"
      nextUri:
        description:
          "The URI for the next chunk of records based on the search request.
          It is `null` if this is the last set of results for the search. "
        type: string
      previousUri:
        description:
          "The URI for the prior chunk of records based on the search request.
          It is `null` if this is the first set of results for the search. "
        type: string
      resultSetSize:
        description:
          The number of results in this response. Because you can filter
          which entries are included in the response, this value is always less than
          or equal to the `totalSetSize`.
        type: string
      startPosition:
        description: The starting index position of the current result set.
        type: string
      totalSetSize:
        description:
          The total number of items in the result set. This value is always
          greater than or equal to the value of `resultSetSize`.
        type: string
    x-ds-definition-name: folderItemsResponse
    description: ""
    x-ms-summary: ""
  folderSharedItem:
    type: object
    properties:
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      folderId:
        description: The ID of the folder.
        type: string
      name:
        description: The name of the folder.
        type: string
      owner:
        "$ref": "#/definitions/userInfo"
        description: Information about the user who owns the folder.
      parentFolderId:
        description: The ID of the parent folder.
        type: string
      parentFolderUri:
        description: The URI for the parent folder.
        type: string
      shared:
        description: |-
          Indicates how the folder is shared. Valid values are:

          - `not_shared`
          - `shared_to`
        type: string
      sharedGroups:
        description: A list of groups that share the folder.
        type: array
        items:
          "$ref": "#/definitions/memberGroupSharedItem"
      sharedUsers:
        description: A list of users that share the folder.
        type: array
        items:
          "$ref": "#/definitions/userSharedItem"
      uri:
        description: A URI containing the user ID.
        type: string
      user:
        "$ref": "#/definitions/userInfo"
        description: Information about the user associated with the folder.
    x-ds-definition-name: folderSharedItem
    description: ""
    x-ms-summary: ""
  foldersRequest:
    type: object
    properties:
      envelopeIds:
        description: An array of envelope ID GUIDs.
        type: array
        items:
          type: string
      folders:
        description: Not used.
        type: array
        items:
          "$ref": "#/definitions/folder"
      fromFolderId:
        description: " The ID of the folder that the envelope is being moved from."
        type: string
    description: Information for a folder request.
    x-ds-definition-name: foldersRequest
    x-ms-summary: Information for a folder request.
  foldersResponse:
    type: object
    properties:
      endPosition:
        description: "The last index position in the result set. "
        type: string
      envelopes:
        description: ""
        type: array
        items:
          "$ref": "#/definitions/envelopeSummary"
      folders:
        description: A list of folder objects.
        type: array
        items:
          "$ref": "#/definitions/folder"
      nextUri:
        description:
          "The URI for the next chunk of records based on the search request.
          It is `null` if this is the last set of results for the search. "
        type: string
      previousUri:
        description:
          "The URI for the prior chunk of records based on the search request.
          It is `null` if this is the first set of results for the search. "
        type: string
      resultSetSize:
        description:
          The number of results in this response. Because you can filter
          which entries are included in the response, this value is always less than
          or equal to the `totalSetSize`.
        type: string
      startPosition:
        description: The starting index position of the current result set.
        type: string
      totalSetSize:
        description:
          The total number of items in the result set. This value is always
          greater than or equal to the value of `resultSetSize`.
        type: string
    x-ds-definition-name: foldersResponse
    description: ""
    x-ms-summary: ""
  forgottenPasswordInformation:
    description:
      A complex element that has up to four Question/Answer pairs for forgotten
      password information.
    type: object
    properties:
      forgottenPasswordAnswer1:
        description: The answer to the first forgotten password challenge question.
        type: string
      forgottenPasswordAnswer2:
        description: The answer to the second forgotten password challenge question.
        type: string
      forgottenPasswordAnswer3:
        description: The answer to the third forgotten password challenge question.
        type: string
      forgottenPasswordAnswer4:
        description: The answer to the fourth forgotten password challenge question.
        type: string
      forgottenPasswordQuestion1:
        description:
          The first challenge question presented to a user who has forgotten
          their password.
        type: string
      forgottenPasswordQuestion2:
        description:
          The second challenge question presented to a user who has forgotten
          their password.
        type: string
      forgottenPasswordQuestion3:
        description:
          The third challenge question presented to a user who has forgotten
          their password.
        type: string
      forgottenPasswordQuestion4:
        description:
          The fourth challenge question presented to a user who has forgotten
          their password.
        type: string
    x-ds-definition-name: forgottenPasswordInformation
    x-ms-summary:
      A complex element that has up to four Question/Answer pairs for
      forgotten password information.
  formDataItem:
    type: object
    properties:
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      listSelectedValue:
        description: The selected value in a list.
        type: string
      name:
        description: The name of the form field.
        type: string
      numericalValue:
        description: ""
        type: string
      originalNumericalValue:
        description: ""
        type: string
      originalValue:
        description: The initial value associated with the form field.
        type: string
      value:
        description: The current value associated with the form field.
        type: string
    x-ds-definition-name: formDataItem
    description: ""
    x-ms-summary: ""
  formulaTab:
    type: object
    properties:
      anchorAllowWhiteSpaceInCharacters:
        description: |
          When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.

          First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.

          Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.

          The default value is **true.**
        type: string
      anchorAllowWhiteSpaceInCharactersMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorAllowWhiteSpaceInCharacters`
          property is editable.
      anchorCaseSensitive:
        description: |-
          This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**

          For example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.

          This functionality uses the following rules:

          - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:

            $~><|^+=

            For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`

          - Strings embedded in other strings are ignored during the matching process.

          - In words that have dashes, the parts separated by dashes are treated as distinct words.

            Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**

          - Letters with accent marks are treated as distinct characters from their unaccented counterparts.

          - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.

            Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.

          - Unlike punctuation, numbers are not ignored when finding anchor words.

            Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).

          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorCaseSensitiveMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorCaseSensitive` property
          is editable.
      anchorHorizontalAlignment:
        description: |
          This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :

          - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.
          - `right`: Aligns the tab’s left side with the last character of the matching anchor word.

          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorHorizontalAlignmentMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorHorizontalAlignment`
          property is editable.
      anchorIgnoreIfNotPresent:
        description:
          When **true,** this tab is ignored if the `anchorString` is not
          found in the document.
        type: string
      anchorIgnoreIfNotPresentMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorIgnoreIfNotPresent`
          property is editable.
      anchorMatchWholeWord:
        description: |
          When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**

          For example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.

          This functionality uses the following rules:

          - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:

            $~><|^+=

            For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`

          - Strings embedded in other strings are ignored during the matching process.

          - In words that have dashes, the parts separated by dashes are treated as distinct words.

            Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**

          - Letters with accent marks are treated as distinct characters from their unaccented counterparts.

          - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.

            Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.

          - Unlike punctuation, numbers are not ignored when finding anchor words.

            Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).


          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorMatchWholeWordMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorMatchWholeWord` property
          is editable.
      anchorString:
        description:
          Specifies the string to find in the document and use as the basis
          for tab placement.
        type: string
      anchorStringMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorString` property is
          editable.
      anchorTabProcessorVersion:
        description: Reserved for DocuSign.
        type: string
      anchorTabProcessorVersionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Reserved for DocuSign.
      anchorUnits:
        description: |
          Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:

          - `pixels` (default)
          - `inches`
          - `mms`
          - `cms`
        type: string
      anchorUnitsMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorUnits` property is
          editable.
      anchorXOffset:
        description:
          "Specifies the X axis location of the tab in `anchorUnits` relative
          to the `anchorString`.

          "
        type: string
      anchorXOffsetMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorXOffset` property
          is editable.
      anchorYOffset:
        description:
          "Specifies the Y axis location of the tab in `anchorUnits` relative
          to the `anchorString`.

          "
        type: string
      anchorYOffsetMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorYOffset` property
          is editable.
      bold:
        description: When **true,** the information in the tab is bold.
        type: string
      boldMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `bold` property is editable.
      caption:
        description: ""
        type: string
      captionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `caption` property is editable.
      concealValueOnDocument:
        description: |-
          When **true,** the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.

          When an envelope is completed the information is only available to the sender through the Form Data link in the DocuSign Console. The information on the downloaded document remains masked by asterisks.

          This setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.
        type: string
      concealValueOnDocumentMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `concealValueOnDocument`
          property is editable.
      conditionalParentLabel:
        description:
          For conditional fields this is the `tabLabel` of the parent tab
          that controls this tab's visibility.
        type: string
      conditionalParentLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `conditionalParentLabel`
          property is editable.
      conditionalParentValue:
        description: |
          For conditional fields, this is the value of the parent tab that controls the tab's visibility.

          If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use "on" as the value to show that the parent tab is active.
        type: string
      conditionalParentValueMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `conditionalParentValue`
          property is editable.
      customTabId:
        description:
          The DocuSign generated custom tab ID for the custom tab to be
          applied. This can only be used when adding new tabs for a recipient. When
          used, the new tab inherits all the custom tab properties.
        type: string
      customTabIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `customTabId` property is
          editable.
      disableAutoSize:
        description:
          When **true,** disables the auto sizing of single line text boxes
          in the signing screen when the signer enters data. If disabled users will
          only be able enter as much data as the text box can hold. By default this
          is false. This property only affects single line text boxes.
        type: string
      disableAutoSizeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `disableAutoSize` property
          is editable.
      documentId:
        description:
          Specifies the document ID number that the tab is placed on. This
          must refer to an existing Document's ID attribute.
        type: string
      documentIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `documentId` property is
          editable.
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      font:
        description: |
          The font to be used for the tab value. Supported fonts include:

          - Default
          - Arial
          - ArialNarrow
          - Calibri
          - CourierNew
          - Garamond
          - Georgia
          - Helvetica
          - LucidaConsole
          - MSGothic
          - MSMincho
          - OCR-A
          - Tahoma
          - TimesNewRoman
          - Trebuchet
          - Verdana
        type: string
      fontColor:
        description:
          "The font color to use for the information in the tab. Possible
          values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n-
          Gold\n- Green\n- NavyBlue\n- Purple\n- White\n"
        type: string
      fontColorMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `fontColor` property is editable.
      fontMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `font` property is editable.
      fontSize:
        description: |-
          The font size used for the information in the tab. Possible values are:

          - Size7
          - Size8
          - Size9
          - Size10
          - Size11
          - Size12
          - Size14
          - Size16
          - Size18
          - Size20
          - Size22
          - Size24
          - Size26
          - Size28
          - Size36
          - Size48
          - Size72
        type: string
      fontSizeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `fontSize` property is editable.
      formOrder:
        description:
          An integer specifying the order in which the guided form HTML
          should render. The order is relative to the `formPageLabel`, the group by
          which to place the guided form HTML block.
        type: string
      formOrderMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `formOrder` property is editable.
      formPageLabel:
        description:
          A string specifying the group in which to place the guided form
          HTML. Each group displays as a separate guided forms page in the signing
          experience.
        type: string
      formPageLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `formPageLabel` property
          is editable.
      formPageNumber:
        description:
          An integer specifying the order in which to present the guided
          form pages.
        type: string
      formPageNumberMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `fromPageNumber` property
          is editable.
      formula:
        description: |
          Contains the formula
          for calculating the value of
          this tab.

          Use a tab's `tabLabel`,
          enclosed in brackets,
          to refer to it.

          For example,
          you want to present the total cost
          of two items, tax included.

          The cost of each item is stored
          in number tabs labeled Item1 and Item2.
          The tax rate is in a number tab
          labeled TaxRate.

          The formula string for this property
          would be:
          `([Item1] + [Item2]) * (1 + [TaxRate])`

          See [Calculated Fields][calculatedfields]
          in the DocuSign Support Center
          to learn more about formulas.

          Maximum Length: 2000 characters

          [calculatedfields]: https://support.docusign.com/s/document-item?bundleId=gbo1643332197980&topicId=crs1578456361259.html
        type: string
      formulaMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata indicating if the sender can edit the `formula` property.
      height:
        description: |-
          The height of the tab in pixels.
          Must be an integer.
        type: string
      heightMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `height` property is editable.
      hidden:
        description: |
          If this is a regular formula (no `paymentDetails` property is present):

          * **true:** The tab is hidden.
          * **false:** The tab is shown.

          If the formula is payment item (a `paymentDetails` property is present):

          * **true:** The tab is displayed as a payment.
          * **false:** The tab is displayed as a regular formula.
        type: string
      hiddenMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `hidden` property is editable.
      isPaymentAmountMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Reserved for DocuSign.
      italic:
        description: When **true,** the information in the tab is italic.
        type: string
      italicMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `italic` property is editable.
      localePolicy:
        "$ref": "#/definitions/localePolicyTab"
        description: Locale-specific settings.
      locked:
        description:
          When **true,** the signer cannot change the data of the custom
          tab.
        type: string
      lockedMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `locked` property is editable.
      maxLength:
        description:
          An optional value that describes the maximum length of the property
          when the property is a string.
        type: string
      maxLengthMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `maxLength` property is editable.
      mergeField:
        "$ref": "#/definitions/mergeField"
        description:
          Contains the information necessary to map the tab to a field
          in SalesForce.
      mergeFieldXml:
        description: Reserved for DocuSign.
        type: string
      name:
        description: |-
          The name of the tab. For example, `Sign Here` or `Initial Here`.

          If the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.
        type: string
      nameMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `name` property is editable.
          This property is read-only.
      originalValue:
        description: "The initial value of the tab. "
        type: string
      originalValueMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `originalValue` property
          is editable.
      pageNumber:
        description:
          "The page number on which the tab is located. For supplemental
          documents, this value must be `1`.

          "
        type: string
      pageNumberMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `pageNumber` property is
          editable.
      paymentDetails:
        "$ref": "#/definitions/paymentDetails"
        description:
          "This property indicates \nthat this formula tab \nis a payment
          item.  \nSee [Requesting Payments Along with Signatures][paymentguide] \nin
          the DocuSign Support Center \nto learn more about payments. \n\n[paymentguide]:
          \    https://support.docusign.com/s/document-item?bundleId=juu1573854950452&topicId=fyw1573854935374.html\n"
      recipientId:
        description:
          "The ID of the recipient to whom the tab will be assigned. This
          value should match the `recipientId` defined in the recipient object.

          "
        type: string
      recipientIdGuid:
        description:
          The globally-unique identifier (GUID) for a specific recipient
          on a specific envelope. If the same recipient is associated with multiple
          envelopes, they will have a different GUID for each one. This property is
          read-only.
        type: string
      recipientIdGuidMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `recipientIdGuid` property
          is editable.
      recipientIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `recipientId` property is
          editable.
      requireAll:
        description:
          "When **true** and shared is true, information must be entered
          in this field to complete the envelope. "
        type: string
      requireAllMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `requireAll` property is
          editable.
      required:
        description: When **true,** the signer is required to fill out this tab.
        type: string
      requiredMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `required` property is editable.
      requireInitialOnSharedChange:
        description:
          Optional element for field markup. When **true,** the signer
          is required to initial when they modify a shared field.
        type: string
      requireInitialOnSharedChangeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `requireInitialOnSharedChange`
          property is editable.
      roundDecimalPlaces:
        description: The number of decimal places to round to.
        type: string
      roundDecimalPlacesMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `roundDecimalPlaces` property
          is editable.
      senderRequired:
        description:
          "When **true,** the sender must populate the tab before an envelope
          can be sent using the template. \n\nThis value tab can only be changed by
          modifying (PUT) the template. \n\nTabs with a `senderRequired` value of
          true cannot be deleted from an envelope."
        type: string
      senderRequiredMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `senderRequired` property
          is editable.
      shared:
        description: When **true,** this custom tab is shared.
        type: string
      sharedMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `shared` property is editable.
      shareToRecipients:
        description: Reserved for DocuSign.
        type: string
      shareToRecipientsMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Reserved for DocuSign.
      smartContractInformation:
        "$ref": "#/definitions/smartContractInformation"
        description: Reserved for DocuSign.
      source:
        description: Reserved for DocuSign.
        type: string
      status:
        description: |-
          The status of the tab. Possible values are:

          - `active`: The tab is active, but the recipient has not yet interacted with it.
          - `signed`: The recipient signed the tab.
          - `declined`: The recipient declined the envelope.
          - `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).
        type: string
      statusMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `status` property is editable.
      tabGroupLabels:
        description: |-
          An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.

          To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
        type: array
        items:
          type: string
      tabGroupLabelsMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `tabGroupLabels` property
          is editable.
      tabId:
        description: The unique identifier for the tab.
        type: string
      tabIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabId` property is editable.
      tabLabel:
        description: |
          The label associated with the tab. This value may be an empty string.
          If no value is provided, the tab type is used as the value.

          Maximum Length: 500 characters.
        type: string
      tabLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabLabel` property is editable.
      tabOrder:
        description: |-
          A positive integer that sets the order the tab is navigated to during signing.

          Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
        type: string
      tabOrderMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabOrder` property is editable.
      tabType:
        description: Indicates the type of tab (for example, `signHere` or `initialHere`).
        type: string
      tabTypeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabType` property is editable.
      templateLocked:
        description:
          "When **true,** the sender cannot change any attributes of the
          recipient. Used only when working with template recipients. "
        type: string
      templateLockedMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `templateLocked` property
          is editable.
      templateRequired:
        description:
          When **true,** the sender may not remove the recipient. Used
          only when working with template recipients.
        type: string
      templateRequiredMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `templateRequired` property
          is editable.
      tooltip:
        description:
          "The text of a tooltip that appears when a user hovers over a
          form field or tab.

          "
        type: string
      toolTipMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          "Metadata that indicates whether the `toolTip` property is editable.

          "
      underline:
        description: When **true,** the information in the tab is underlined.
        type: string
      underlineMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `underline` property is editable.
      validationMessage:
        description:
          The message displayed if the custom tab fails input validation
          (either custom of embedded).
        type: string
      validationMessageMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `validationMessage` property
          is editable.
      validationPattern:
        description: A regular expression used to validate input for the tab.
        type: string
      validationPatternMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `validationPattern` property
          is editable.
      value:
        description: "Specifies the value of the tab. "
        type: string
      valueMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `value` property is editable.
      width:
        description: |-
          The width of the tab in pixels.
          Must be an integer.
        type: string
      widthMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `width` property is editable.
      xPosition:
        description: |
          This property indicates the horizontal offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. Must be an integer. May be zero.

          To improve the tab's position on the document,
          DocuSign recommends
          adjusting `xPosition`
          and `yPosition`
          coordinates
          by (+35, -2)
        type: string
      xPositionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `xPosition` property is editable.
      yPosition:
        description: |
          This property indicates the vertical offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. Must be an integer. May be zero.

          To improve the tab's position on the document,
          DocuSign recommends
          adjusting `xPosition`
          and `yPosition`
          coordinates
          by (+35, -2)
        type: string
      yPositionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `yPosition` property is editable.
    description: |
      The value of a formula tab is calculated
      from the values of other
      number or date tabs in the document.
      When the recipient completes the underlying fields,
      the formula tab calculates and displays the result.

      The `formula` property of the tab
      contains the references
      to the underlying tabs.
      See [Calculated Fields][calculatedfields]
      in the DocuSign Support Center
      to learn more about formulas.

      If a formula tab contains
      a `paymentDetails` property,
      the tab is considered a payment item.
      See [Requesting Payments Along with Signatures][paymentguide]
      in the DocuSign Support Center
      to learn more about payments.

      [calculatedfields]: https://support.docusign.com/s/document-item?bundleId=gbo1643332197980&topicId=crs1578456361259.html
      [paymentguide]:     https://support.docusign.com/s/document-item?bundleId=juu1573854950452&topicId=fyw1573854935374.html
    x-ds-definition-name: formulaTab
    x-ms-summary: |
      The value of a formula tab is calculated
      from the values of other
      number or date tabs in the document.
      When the recipient completes the underlying fields,
      the formula tab calculates and displays the result.

      The `formula` property of the tab
      contains the references
      to the underlying tabs.
      See [Calculated Fields][calculatedfields]
      in the DocuSign Support Center
      to learn more about formulas.

      If a formula tab contains
      a `paymentDetails` property,
      the tab is considered a payment item.
      See [Requesting Payments Along with Signatures][paymentguide]
      in the DocuSign Support Center
      to learn more about payments.

      [calculatedfields]: https://support.docusign.com/s/document-item?bundleId=gbo1643332197980&topicId=crs1578456361259.html
      [paymentguide]:     https://support.docusign.com/s/document-item?bundleId=juu1573854950452&topicId=fyw1573854935374.html
  fullName:
    type: object
    properties:
      anchorAllowWhiteSpaceInCharacters:
        description: |
          When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.

          First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.

          Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.

          The default value is **true.**
        type: string
      anchorAllowWhiteSpaceInCharactersMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorAllowWhiteSpaceInCharacters`
          property is editable.
      anchorCaseSensitive:
        description: |-
          This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**

          For example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.

          This functionality uses the following rules:

          - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:

            $~><|^+=

            For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`

          - Strings embedded in other strings are ignored during the matching process.

          - In words that have dashes, the parts separated by dashes are treated as distinct words.

            Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**

          - Letters with accent marks are treated as distinct characters from their unaccented counterparts.

          - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.

            Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.

          - Unlike punctuation, numbers are not ignored when finding anchor words.

            Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).

          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorCaseSensitiveMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorCaseSensitive` property
          is editable.
      anchorHorizontalAlignment:
        description: |
          This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :

          - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.
          - `right`: Aligns the tab’s left side with the last character of the matching anchor word.

          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorHorizontalAlignmentMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorHorizontalAlignment`
          property is editable.
      anchorIgnoreIfNotPresent:
        description:
          When **true,** this tab is ignored if the `anchorString` is not
          found in the document.
        type: string
      anchorIgnoreIfNotPresentMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorIgnoreIfNotPresent`
          property is editable.
      anchorMatchWholeWord:
        description: |
          When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**

          For example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.

          This functionality uses the following rules:

          - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:

            $~><|^+=

            For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`

          - Strings embedded in other strings are ignored during the matching process.

          - In words that have dashes, the parts separated by dashes are treated as distinct words.

            Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**

          - Letters with accent marks are treated as distinct characters from their unaccented counterparts.

          - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.

            Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.

          - Unlike punctuation, numbers are not ignored when finding anchor words.

            Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).


          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorMatchWholeWordMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorMatchWholeWord` property
          is editable.
      anchorString:
        description:
          Specifies the string to find in the document and use as the basis
          for tab placement.
        type: string
      anchorStringMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorString` property is
          editable.
      anchorTabProcessorVersion:
        description: Reserved for DocuSign.
        type: string
      anchorTabProcessorVersionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Reserved for DocuSign.
      anchorUnits:
        description: |
          Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:

          - `pixels` (default)
          - `inches`
          - `mms`
          - `cms`
        type: string
      anchorUnitsMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorUnits` property is
          editable.
      anchorXOffset:
        description:
          "Specifies the X axis location of the tab in `anchorUnits` relative
          to the `anchorString`.

          "
        type: string
      anchorXOffsetMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorXOffset` property
          is editable.
      anchorYOffset:
        description:
          "Specifies the Y axis location of the tab in `anchorUnits` relative
          to the `anchorString`.

          "
        type: string
      anchorYOffsetMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorYOffset` property
          is editable.
      bold:
        description: When **true,** the information in the tab is bold.
        type: string
      boldMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `bold` property is editable.
      caption:
        description: ""
        type: string
      captionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `caption` property is editable.
      conditionalParentLabel:
        description:
          For conditional fields this is the `tabLabel` of the parent tab
          that controls this tab's visibility.
        type: string
      conditionalParentLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `conditionalParentLabel`
          property is editable.
      conditionalParentValue:
        description: |
          For conditional fields, this is the value of the parent tab that controls the tab's visibility.

          If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use "on" as the value to show that the parent tab is active.
        type: string
      conditionalParentValueMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `conditionalParentValue`
          property is editable.
      customTabId:
        description:
          The DocuSign-generated custom tab ID for the custom tab to be
          applied. This can only be used when adding new tabs for a recipient. When
          used, the new tab inherits all the custom tab properties.
        type: string
      customTabIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `customTabId` property is
          editable.
      documentId:
        description:
          Specifies the document ID number that the tab is placed on. This
          must refer to an existing Document's ID attribute.
        type: string
      documentIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `documentId` property is
          editable.
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      font:
        description: |
          The font to be used for the tab value. Supported fonts include:

          - Default
          - Arial
          - ArialNarrow
          - Calibri
          - CourierNew
          - Garamond
          - Georgia
          - Helvetica
          - LucidaConsole
          - MSGothic
          - MSMincho
          - OCR-A
          - Tahoma
          - TimesNewRoman
          - Trebuchet
          - Verdana
        type: string
      fontColor:
        description:
          "The font color to use for the information in the tab. Possible
          values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n-
          Gold\n- Green\n- NavyBlue\n- Purple\n- White\n"
        type: string
      fontColorMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `fontColor` property is editable.
      fontMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `font` property is editable.
      fontSize:
        description: |-
          The font size used for the information in the tab. Possible values are:

          - Size7
          - Size8
          - Size9
          - Size10
          - Size11
          - Size12
          - Size14
          - Size16
          - Size18
          - Size20
          - Size22
          - Size24
          - Size26
          - Size28
          - Size36
          - Size48
          - Size72
        type: string
      fontSizeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `fontSize` property is editable.
      formOrder:
        description:
          An integer specifying the order in which the guided form HTML
          should render. The order is relative to the `formPageLabel`, the group by
          which to place the guided form HTML block.
        type: string
      formOrderMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `formOrder` property is editable.
      formPageLabel:
        description:
          A string specifying the group in which to place the guided form
          HTML. Each group displays as a separate guided forms page in the signing
          experience.
        type: string
      formPageLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `formPageLabel` property
          is editable.
      formPageNumber:
        description:
          An integer specifying the order in which to present the guided
          form pages.
        type: string
      formPageNumberMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `fromPageNumber` property
          is editable.
      height:
        description: |-
          The height of the tab in pixels.
          Must be an integer.
        type: string
      heightMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `height` property is editable.
      italic:
        description: When **true,** the information in the tab is italic.
        type: string
      italicMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `italic` property is editable.
      localePolicy:
        "$ref": "#/definitions/localePolicyTab"
        description: Locale-specific settings.
      mergeField:
        "$ref": "#/definitions/mergeField"
        description:
          Contains the information necessary to map the tab to a field
          in SalesForce.
      mergeFieldXml:
        description: Reserved for DocuSign.
        type: string
      name:
        description: |-
          The name of the tab. For example, `Sign Here` or `Initial Here`.

          If the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.
        type: string
      nameMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `name` property is editable.
          This property is read-only.
      pageNumber:
        description:
          "The page number on which the tab is located. For supplemental
          documents, this value must be `1`.

          "
        type: string
      pageNumberMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `pageNumber` property is
          editable.
      recipientId:
        description:
          "The ID of the recipient to whom the tab will be assigned. This
          value should match the `recipientId` defined in the recipient object.

          "
        type: string
      recipientIdGuid:
        description:
          The globally-unique identifier (GUID) for a specific recipient
          on a specific envelope. If the same recipient is associated with multiple
          envelopes, they will have a different GUID for each one. This property is
          read-only.
        type: string
      recipientIdGuidMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `recipientIdGuid` property
          is editable.
      recipientIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `recipientId` property is
          editable.
      smartContractInformation:
        "$ref": "#/definitions/smartContractInformation"
        description: Reserved for DocuSign.
      source:
        description: Reserved for DocuSign.
        type: string
      status:
        description: |-
          The status of the tab. Possible values are:

          - `active`: The tab is active, but the recipient has not yet interacted with it.
          - `signed`: The recipient signed the tab.
          - `declined`: The recipient declined the envelope.
          - `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).
        type: string
      statusMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `status` property is editable.
      tabGroupLabels:
        description: |-
          An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.

          To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
        type: array
        items:
          type: string
      tabGroupLabelsMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `tabGroupLabels` property
          is editable.
      tabId:
        description: The unique identifier for the tab.
        type: string
      tabIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabId` property is editable.
      tabLabel:
        description: |
          The label associated with the tab. This value may be an empty string.
          If no value is provided, the tab type is used as the value.

          Maximum Length: 500 characters.
        type: string
      tabLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabLabel` property is editable.
      tabOrder:
        description: |-
          A positive integer that sets the order the tab is navigated to during signing.

          Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
        type: string
      tabOrderMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabOrder` property is editable.
      tabType:
        description: Indicates the type of tab (for example, `signHere` or `initialHere`).
        type: string
      tabTypeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabType` property is editable.
      templateLocked:
        description:
          "When **true,** the sender cannot change any attributes of the
          recipient. Used only when working with template recipients. "
        type: string
      templateLockedMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `templateLocked` property
          is editable.
      templateRequired:
        description:
          When **true,** the sender may not remove the recipient. Used
          only when working with template recipients.
        type: string
      templateRequiredMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `templateRequired` property
          is editable.
      tooltip:
        description:
          "The text of a tooltip that appears when a user hovers over a
          form field or tab.

          "
        type: string
      toolTipMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          "Metadata that indicates whether the `toolTip` property is editable.

          "
      underline:
        description: When **true,** the information in the tab is underlined.
        type: string
      underlineMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `underline` property is editable.
      value:
        description: "Specifies the value of the tab. "
        type: string
      valueMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `value` property is editable.
      width:
        description: |-
          The width of the tab in pixels.
          Must be an integer.
        type: string
      widthMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `width` property is editable.
      xPosition:
        description: |
          This property indicates the horizontal offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. Must be an integer. May be zero.

          To improve the tab's position on the document,
          DocuSign recommends
          adjusting `xPosition`
          and `yPosition`
          coordinates
          by (-3, -2)
        type: string
      xPositionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `xPosition` property is editable.
      yPosition:
        description: |
          This property indicates the vertical offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. Must be an integer. May be zero.

          To improve the tab's position on the document,
          DocuSign recommends
          adjusting `xPosition`
          and `yPosition`
          coordinates
          by (-3, -2)
        type: string
      yPositionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `yPosition` property is editable.
    description: "A tab that displays the recipient's full name.

      "
    x-ds-definition-name: fullName
    x-ms-summary: "A tab that displays the recipient's full name.

      "
  graphicsContext:
    type: object
    properties:
      fillColor:
        description:
          The fill color to use for the overlay. Colors are typically specified
          by their RGB hex values, but you can also use a [friendly CSS color name](https://developer.mozilla.org/en-US/docs/Web/CSS/color_value).
        type: string
      lineColor:
        description:
          The line color to use for the overlay. Colors are typically specified
          by their RGB hex values, but you can also use a [friendly CSS color name](https://developer.mozilla.org/en-US/docs/Web/CSS/color_value).
        type: string
      lineWeight:
        description: The line weight or thickness to use for the overlay.
        type: string
    x-ds-definition-name: graphicsContext
    description: ""
    x-ms-summary: ""
  group:
    type: object
    properties:
      dsGroupId:
        description: Reserved for DocuSign.
        type: string
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      groupId:
        description: |-
          The DocuSign group ID for the group.
          This is a read-only property.
        type: string
      groupName:
        description: The name of the group.
        type: string
      groupType:
        description: The group type.
        type: string
      permissionProfileId:
        description: |-
          The ID of the permission profile associated with the group.

          Use [AccountPermissionProfiles: list](/docs/esign-rest-api/reference/accounts/accountpermissionprofiles/list/)
          to get a list of permission profiles and their IDs.
        type: string
      users:
        description:
          "A list of the users in the group. This property is not used
          by [Groups: list](/docs/esign-rest-api/reference/usergroups/groups/list/).
          To get a list of users see [GroupUsers: list](/docs/esign-rest-api/reference/usergroups/groupusers/list/)

          "
        type: array
        items:
          "$ref": "#/definitions/userInfo"
      usersCount:
        description: The total number of users in the group.
        type: string
    description: This object contains information about a group.
    x-ds-definition-name: group
    x-ms-summary: This object contains information about a group.
  groupInformation:
    type: object
    properties:
      endPosition:
        description: "The last index position in the result set. "
        type: string
      groups:
        description: A collection group objects containing information about the groups.
        type: array
        items:
          "$ref": "#/definitions/group"
      nextUri:
        description:
          "The URI for the next chunk of records based on the search request.
          It is `null` if this is the last set of results for the search. "
        type: string
      previousUri:
        description:
          "The URI for the prior chunk of records based on the search request.
          It is `null` if this is the first set of results for the search. "
        type: string
      resultSetSize:
        description:
          The number of results in this response. Because you can filter
          which entries are included in the response, this value is always less than
          or equal to the `totalSetSize`.
        type: string
      startPosition:
        description: The starting index position of the current result set.
        type: string
      totalSetSize:
        description:
          The total number of items in the result set. This value is always
          greater than or equal to the value of `resultSetSize`.
        type: string
    x-ds-definition-name: groupInformation
    description:
      "This object is used for both requests and responses. Some properties
      (such as `endPosition`) only apply to the response of [Groups: list](/docs/esign-rest-api/reference/usergroups/groups/list/).

      "
    x-ms-summary:
      "This object is used for both requests and responses. Some properties
      (such as `endPosition`) only apply to the response of [Groups: list](/docs/esign-rest-api/reference/usergroups/groups/list/).

      "
  idCheckConfiguration:
    type: object
    properties:
      authSteps:
        description:
          A list of ID check security steps, each specifying an authorization
          type.
        type: array
        items:
          "$ref": "#/definitions/idCheckSecurityStep"
      isDefault:
        description:
          Boolean that specifies whether the signature is the default signature
          for the user.
        type: string
      name:
        description: The name of the signature.
        type: string
    description: A complex object specifying ID check configuration.
    x-ds-definition-name: idCheckConfiguration
    x-ms-summary: A complex object specifying ID check configuration.
  idCheckInformationInput:
    description:
      A complex element that contains input information related to a recipient
      ID check.
    type: object
    properties:
      addressInformationInput:
        "$ref": "#/definitions/addressInformationInput"
        description:
          An object that specifies recipient address information and how
          it is displayed.
      dobInformationInput:
        "$ref": "#/definitions/dobInformationInput"
        description:
          An object that specifies recipient date of birth information
          and how it is displayed.
      ssn4InformationInput:
        "$ref": "#/definitions/ssn4InformationInput"
        description:
          An object that specifies the last four digits of the recipient's
          Social Security Number (SSN).
      ssn9InformationInput:
        "$ref": "#/definitions/ssn9InformationInput"
        description:
          An object that specifies the recipient's Social Security Number
          (SSN) information. Note that ssn9 information cannot be returned in a response.
    x-ds-definition-name: idCheckInformationInput
    x-ms-summary:
      A complex element that contains input information related to a recipient
      ID check.
  idCheckSecurityStep:
    type: object
    properties:
      authType:
        description: Type of authorization used for the security check.
        type: string
    x-ds-definition-name: idCheckSecurityStep
    description: ""
    x-ms-summary: ""
  idEvidenceResourceToken:
    type: object
    properties:
      proofBaseURI:
        description: ""
        type: string
      resourceToken:
        description: ""
        type: string
    x-ds-definition-name: idEvidenceResourceToken
    description: ""
    x-ms-summary: ""
  idEvidenceViewLink:
    type: object
    properties:
      viewLink:
        description: ""
        type: string
    x-ds-definition-name: idEvidenceViewLink
    description: ""
    x-ms-summary: ""
  initialHere:
    type: object
    properties:
      anchorAllowWhiteSpaceInCharacters:
        description: |
          When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.

          First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.

          Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.

          The default value is **true.**
        type: string
      anchorAllowWhiteSpaceInCharactersMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorAllowWhiteSpaceInCharacters`
          property is editable.
      anchorCaseSensitive:
        description: |-
          This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**

          For example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.

          This functionality uses the following rules:

          - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:

            $~><|^+=

            For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`

          - Strings embedded in other strings are ignored during the matching process.

          - In words that have dashes, the parts separated by dashes are treated as distinct words.

            Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**

          - Letters with accent marks are treated as distinct characters from their unaccented counterparts.

          - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.

            Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.

          - Unlike punctuation, numbers are not ignored when finding anchor words.

            Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).

          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorCaseSensitiveMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorCaseSensitive` property
          is editable.
      anchorHorizontalAlignment:
        description: |
          This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :

          - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.
          - `right`: Aligns the tab’s left side with the last character of the matching anchor word.

          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorHorizontalAlignmentMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorHorizontalAlignment`
          property is editable.
      anchorIgnoreIfNotPresent:
        description:
          When **true,** this tab is ignored if the `anchorString` is not
          found in the document.
        type: string
      anchorIgnoreIfNotPresentMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorIgnoreIfNotPresent`
          property is editable.
      anchorMatchWholeWord:
        description: |
          When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**

          For example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.

          This functionality uses the following rules:

          - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:

            $~><|^+=

            For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`

          - Strings embedded in other strings are ignored during the matching process.

          - In words that have dashes, the parts separated by dashes are treated as distinct words.

            Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**

          - Letters with accent marks are treated as distinct characters from their unaccented counterparts.

          - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.

            Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.

          - Unlike punctuation, numbers are not ignored when finding anchor words.

            Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).


          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorMatchWholeWordMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorMatchWholeWord` property
          is editable.
      anchorString:
        description:
          Specifies the string to find in the document and use as the basis
          for tab placement.
        type: string
      anchorStringMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorString` property is
          editable.
      anchorTabProcessorVersion:
        description: Reserved for DocuSign.
        type: string
      anchorTabProcessorVersionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Reserved for DocuSign.
      anchorUnits:
        description: |
          Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:

          - `pixels` (default)
          - `inches`
          - `mms`
          - `cms`
        type: string
      anchorUnitsMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorUnits` property is
          editable.
      anchorXOffset:
        description:
          "Specifies the X axis location of the tab in `anchorUnits` relative
          to the `anchorString`.

          "
        type: string
      anchorXOffsetMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorXOffset` property
          is editable.
      anchorYOffset:
        description:
          "Specifies the Y axis location of the tab in `anchorUnits` relative
          to the `anchorString`.

          "
        type: string
      anchorYOffsetMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorYOffset` property
          is editable.
      caption:
        description: ""
        type: string
      captionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `caption` property is editable.
      conditionalParentLabel:
        description:
          For conditional fields this is the `tabLabel` of the parent tab
          that controls this tab's visibility.
        type: string
      conditionalParentLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `conditionalParentLabel`
          property is editable.
      conditionalParentValue:
        description: |
          For conditional fields, this is the value of the parent tab that controls the tab's visibility.

          If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use "on" as the value to show that the parent tab is active.
        type: string
      conditionalParentValueMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `conditionalParentValue`
          property is editable.
      customTabId:
        description:
          The DocuSign generated custom tab ID for the custom tab to be
          applied. This can only be used when adding new tabs for a recipient. When
          used, the new tab inherits all the custom tab properties.
        type: string
      customTabIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `customTabId` property is
          editable.
      documentId:
        description:
          Specifies the document ID number that the tab is placed on. This
          must refer to an existing Document's ID attribute.
        type: string
      documentIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `documentId` property is
          editable.
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      formOrder:
        description:
          An integer specifying the order in which the guided form HTML
          should render. The order is relative to the `formPageLabel`, the group by
          which to place the guided form HTML block.
        type: string
      formOrderMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `formOrder` property is editable.
      formPageLabel:
        description:
          A string specifying the group in which to place the guided form
          HTML. Each group displays as a separate guided forms page in the signing
          experience.
        type: string
      formPageLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `formPageLabel` property
          is editable.
      formPageNumber:
        description:
          An integer specifying the order in which to present the guided
          form pages.
        type: string
      formPageNumberMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `fromPageNumber` property
          is editable.
      handDrawRequired:
        description: Reserved for DocuSign.
        type: string
      height:
        description: |-
          The height of the tab in pixels.
          Must be an integer.
        type: string
      heightMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `height` property is editable.
      mergeField:
        "$ref": "#/definitions/mergeField"
        description:
          Contains the information necessary to map the tab to a field
          in SalesForce.
      mergeFieldXml:
        description: Reserved for DocuSign.
        type: string
      name:
        description: |-
          The name of the tab. For example, `Sign Here` or `Initial Here`.

          If the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.
        type: string
      nameMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `name` property is editable.
          This property is read-only.
      optional:
        description:
          When **true,** the recipient does not need to complete this tab
          to complete the signing process.
        type: string
      optionalMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `optional` property is editable.
      pageNumber:
        description:
          The page number on which the tab is located. For supplemental
          documents, this value must be `1`.
        type: string
      pageNumberMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `pageNumber` property is
          editable.
      recipientId:
        description:
          "The ID of the recipient to whom the tab will be assigned. This
          value should match the `recipientId` defined in the recipient object.

          "
        type: string
      recipientIdGuid:
        description:
          The globally-unique identifier (GUID) for a specific recipient
          on a specific envelope. If the same recipient is associated with multiple
          envelopes, they will have a different GUID for each one. This property is
          read-only.
        type: string
      recipientIdGuidMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `recipientIdGuid` property
          is editable.
      recipientIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `recipientId` property is
          editable.
      scaleValue:
        description:
          " Sets the size for the InitialHere tab. It can be value from
          0.5 to 1.0, where 1.0 represents full size and 0.5 is 50% size."
        type: string
      scaleValueMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `scaleValue` property is
          editable.
      smartContractInformation:
        "$ref": "#/definitions/smartContractInformation"
        description: Reserved for DocuSign.
      source:
        description: Reserved for DocuSign.
        type: string
      status:
        description: |-
          The status of the tab. Possible values are:

          - `active`: The tab is active, but the recipient has not yet interacted with it.
          - `signed`: The recipient signed the tab.
          - `declined`: The recipient declined the envelope.
          - `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).
        type: string
      statusMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `status` property is editable.
      tabGroupLabels:
        description: |-
          An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.

          To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
        type: array
        items:
          type: string
      tabGroupLabelsMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `tabGroupLabels` property
          is editable.
      tabId:
        description: The unique identifier for the tab.
        type: string
      tabIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabId` property is editable.
      tabLabel:
        description: |
          The label associated with the tab. This value may be an empty string.
          If no value is provided, the tab type is used as the value.

          Maximum Length: 500 characters.
        type: string
      tabLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabLabel` property is editable.
      tabOrder:
        description: |-
          A positive integer that sets the order the tab is navigated to during signing.

          Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
        type: string
      tabOrderMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabOrder` property is editable.
      tabType:
        description: Indicates the type of tab (for example, `signHere` or `initialHere`).
        type: string
      tabTypeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabType` property is editable.
      templateLocked:
        description:
          "When **true,** the sender cannot change any attributes of the
          recipient. Used only when working with template recipients. "
        type: string
      templateLockedMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `templateLocked` property
          is editable.
      templateRequired:
        description:
          When **true,** the sender may not remove the recipient. Used
          only when working with template recipients.
        type: string
      templateRequiredMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `templateRequired` property
          is editable.
      tooltip:
        description:
          "The text of a tooltip that appears when a user hovers over a
          form field or tab.

          "
        type: string
      toolTipMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          "Metadata that indicates whether the `toolTip` property is editable.

          "
      width:
        description: |-
          The width of the tab in pixels.
          Must be an integer.
        type: string
      widthMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `width` property is editable.
      xPosition:
        description: |
          This property indicates the horizontal offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. Must be an integer. May be zero.

          To improve the tab's position on the document,
          DocuSign recommends
          adjusting `xPosition`
          and `yPosition`
          coordinates
          by (+2, -7)
        type: string
      xPositionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `xPosition` property is editable.
      yPosition:
        description: |
          This property indicates the vertical offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. Must be an integer. May be zero.

          To improve the tab's position on the document,
          DocuSign recommends
          adjusting `xPosition`
          and `yPosition`
          coordinates
          by (+2, -7)
        type: string
      yPositionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `yPosition` property is editable.
    description: |
      A tab that allows the recipient to initial the document. May
      be optional.
    x-ds-definition-name: initialHere
    x-ms-summary: |
      A tab that allows the recipient to initial the document. May
      be optional.
  inlineTemplate:
    type: object
    properties:
      customFields:
        "$ref": "#/definitions/AccountCustomFields"
        description:
          An optional array of strings that enables the sender to provide
          custom data about the recipient. This information is returned in the envelope
          status but otherwise not used by DocuSign. Each `customField` string can
          be a maximum of 100 characters.
      documents:
        description:
          A complex element that contains details about the documents associated
          with the envelope.
        type: array
        items:
          "$ref": "#/definitions/document"
      envelope:
        "$ref": "#/definitions/envelope"
        description:
          A container used to send documents to recipients. The envelope
          carries information about the sender and timestamps to indicate the progress
          of the delivery procedure. It can contain collections of Documents, Tabs
          and Recipients.
      recipients:
        "$ref": "#/definitions/EnvelopeRecipients"
        description:
          An array of recipient objects that provides details about the
          recipients of the envelope.
      sequence:
        description: Specifies the order in which templates are overlaid.
        type: string
    x-ds-definition-name: inlineTemplate
    description: ""
    x-ms-summary: ""
  inPersonSigner:
    type: object
    properties:
      accessCode:
        description:
          "If a value is provided, the recipient must enter the value as
          the access code to view and sign the envelope. \n\nMaximum Length: 50 characters
          and it must conform to the account's access code format setting.\n\nIf blank,
          but the signer `accessCode` property is set in the envelope, then that value
          is used.\n\nIf blank and the signer `accessCode` property is not set, then
          the access code is not required."
        type: string
      accessCodeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `accessCode` property is
          editable. This property is read-only.
      addAccessCodeToEmail:
        description:
          Optional. When **true,** the access code will be added to the
          email sent to the recipient. This nullifies the security measure of `accessCode`
          on the recipient.
        type: string
      allowSystemOverrideForLockedRecipient:
        description:
          When **true,** if the recipient is locked on a template, advanced
          recipient routing can override the lock.
        type: string
      autoNavigation:
        description: "When **true,** autonavigation is set for the recipient.

          "
        type: string
      autoRespondedReason:
        description:
          "Error message provided by the destination email system. This
          field is only provided if the email notification to the recipient fails
          to send. This property is read-only.

          "
        type: string
      bulkSendV2Recipient:
        description: ""
        type: string
      canSignOffline:
        description:
          When **true,** specifies that the signer can perform the signing
          ceremony offline.
        type: string
      clientUserId:
        description:
          "Specifies whether the recipient is embedded or remote. \n\nIf
          the `clientUserId` property is not null then the recipient is embedded.
          Use this field to associate the signer with their userId in your app. Authenticating
          the user is the responsibility of your app when you use embedded signing.\n\nIf
          the `clientUserId` property is set and either `SignerMustHaveAccount` or
          `SignerMustLoginToSign` property of the account settings is set to  **true,**
          an error is generated on sending.\n\n**Note:** This property is not returned
          by the [listStatusChanges](/docs/esign-rest-api/reference/envelopes/envelopes/liststatuschanges/)
          endpoint.\n\nMaximum length: 100 characters. \n"
        type: string
      completedCount:
        description:
          "Indicates the number of times that the recipient has been through
          a signing completion. \n\nIf this number is greater than `0` for a signing
          group, only the user who previously completed may sign again."
        type: string
      creationReason:
        description:
          The reason why the recipient was created (for example, `sender`).
          This property is read-only.
        type: string
      customFields:
        description:
          An optional array of strings that allows the sender to provide
          custom data about the recipient. This information is returned in the envelope
          status but otherwise not used by DocuSign. Each customField string can be
          a maximum of 100 characters.
        type: array
        items:
          type: string
      declinedDateTime:
        description:
          The date and time the recipient declined the document. This property
          is read-only.
        type: string
      declinedReason:
        description:
          The reason the recipient declined the document. This property
          is read-only.
        type: string
      defaultRecipient:
        description: |
          When **true,**
          this is the default recipient for the envelope.
          This option is used when creating an envelope from a template.
        type: string
      deliveredDateTime:
        description:
          The date and time that the envelope was delivered to the recipient.
          This property is read-only.
        type: string
      deliveryMethod:
        description: |-
          The delivery method. One of:

          - `email`
          - `fax`
          - `SMS`
          - `WhatsApp`
          - `offline`

          The `SMS` and `WhatsApp` delivery methods
          are limited to `signer`, `carbonCopy`, and `certifiedDelivery`
          recipients.

          **Related topics**

          - [Using SMS delivery with the eSignature API][smsconcept]
          - [How to request a signature by SMS delivery][howto]

          [smsconcept]: /docs/esign-rest-api/esign101/concepts/sms-delivery/using-sms-esignature/
          [howto]: /docs/esign-rest-api/how-to/request-signature-sms/
        type: string
      deliveryMethodMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Reserved for DocuSign.
      designatorId:
        description: Reserved for DocuSign.
        type: string
      designatorIdGuid:
        description: Reserved for DocuSign.
        type: string
      documentVisibility:
        description:
          A list of `documentVisibility` objects. Each object in the list
          specifies whether a document in the envelope is visible to this recipient.
          For the envelope to use this functionality, Document Visibility must be
          enabled for the account and the `enforceSignerVisibility` property must
          be set to **true.**
        type: array
        items:
          "$ref": "#/definitions/documentVisibility"
      email:
        description: |
          The signer's email address in an eNotary flow.

          Use only when `inPersonSigningType` is `notary`.
          For regular in-person-signer flow, use `signerEmail` instead.
        type: string
      emailMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `email` property is editable.
          This property is read-only.
      emailNotification:
        "$ref": "#/definitions/recipientEmailNotification"
        description: |-
          This optional property allows you to set a specific email subject and
          body for this recipient's notification email.

          **Note:** If you use this property, you _must_
          provide a value for the `supportedLanguage` sub-property.


          You can set the `emailNotification` property separately
          for each recipient. If you set the value only for certain
          recipients, the other recipients are assigned the values from
          the top-level `emailSubject` and `emailBlurb`.
      embeddedRecipientStartURL:
        description:
          "Specifies a sender-provided valid URL string for redirecting
          an embedded recipient. When using this option, the embedded recipient still
          receives an email from DocuSign, just as a remote recipient would. When
          the document link in the email is clicked the recipient is redirected, through
          DocuSign, to the supplied URL to complete their actions. When routing to
          the URL, the sender's system (the server responding to the URL) must request
          a recipient token to launch a signing session. \n\nWhen `SIGN_AT_DOCUSIGN`,
          the recipient is directed to an embedded signing or viewing process directly
          at DocuSign. The signing or viewing action is initiated by the DocuSign
          system and the transaction activity and Certificate of Completion records
          will reflect this. In all other ways the process is identical to an embedded
          signing or viewing operation launched by a partner.\n\nIt is important to
          understand that in a typical embedded workflow, the authentication of an
          embedded recipient is the responsibility of the sending application. DocuSign
          expects that senders will follow their own processes for establishing the
          recipient's identity. In this workflow the recipient goes through the sending
          application before the embedded signing or viewing process is initiated.
          However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`,
          the recipient goes directly to the embedded signing or viewing process,
          bypassing the sending application and any authentication steps the sending
          application would use. In this case, DocuSign recommends that you use one
          of the normal DocuSign authentication features (Access Code, Phone Authentication,
          SMS Authentication, etc.) to verify the identity of the recipient.\n\nIf
          the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL`
          is set, DocuSign will ignore the redirect URL and launch the standard signing
          process for the email recipient. Information can be appended to the embedded
          recipient start URL using merge fields. The available merge fields items
          are: `envelopeId`, `recipientId`, `recipientName`, `recipientEmail`, and
          `customFields`. The `customFields` property must be set for the recipient
          or envelope. The merge fields are enclosed in double brackets. \n\n*Example*:
          \n\n`http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]` "
        type: string
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      excludedDocuments:
        description: |-
          Specifies the documents that are not visible to this recipient. Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to **true** for the envelope to use this.

          When enforce signer visibility is enabled, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.
        type: array
        items:
          type: string
      faxNumber:
        description: Reserved for DocuSign.
        type: string
      faxNumberMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Reserved for DocuSign.
      hostEmail:
        description: |
          The email address of the signing host.
          This is the DocuSign user that is hosting the in-person signing session.

          Required when `inPersonSigningType` is `inPersonSigner`.
          For eNotary flow, use `email` instead.

          Maximum Length: 100 characters.
        type: string
      hostEmailMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `hostEmail` property is editable.
      hostName:
        description: |
          The name of the signing host.
          This is the DocuSign user that is hosting the in-person signing session.

          Required when `inPersonSigningType` is `inPersonSigner`.
          For eNotary flow, use `name` instead.

          Maximum Length: 100 characters.
        type: string
      hostNameMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `hostName` property is editable.
      idCheckConfigurationName:
        description:
          "The name of the authentication check to use. This value must
          match one of the authentication types that the account uses. The names of
          these authentication types appear in the web console sending interface in
          the Identify list for a recipient. This setting overrides any default authentication
          setting. Valid values are:\n\n- `Phone Auth $`: The recipient must authenticate
          by using two-factor authentication (2FA). You provide the phone number to
          use for 2FA in the `phoneAuthentication` object.\n- `SMS Auth $`: The recipient
          must authenticate via SMS. You provide the phone number to use in the `smsAuthentication`
          object.\n- `ID Check $`: The  recipient must answer detailed security questions.
          \n\n**Example:** Your account has ID Check and SMS Authentication available.
          In the web console Identify list, these appear as ID Check $ and SMS Auth
          $. To use ID Check in an envelope, the idCheckConfigurationName should be
          ID Check $. For SMS, you would use SMS Auth $, and you would also need to
          add a phone number to the smsAuthentication node."
        type: string
      idCheckConfigurationNameMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `idCheckConfigurationName`
          property is editable. This property is read-only.
      idCheckInformationInput:
        "$ref": "#/definitions/idCheckInformationInput"
        description:
          An object that contains input information related to a recipient
          ID check.
      identityVerification:
        "$ref": "#/definitions/recipientIdentityVerification"
        description:
          Specifies the ID Verification workflow applied on an envelope
          by workflow ID. <br/>See the [list](/docs/esign-rest-api/reference/accounts/identityverifications/list/)
          method in the [IdentityVerifications](/docs/esign-rest-api/reference/accounts/identityverifications/)
          resource for more information on how to retrieve workflow IDs available
          for an account. <br/>This can be used in addition to other [recipient authentication](https://support.docusign.com/s/document-item?bundleId=gav1643676262430&topicId=kzp1578456318101.html)
          methods. <br/>Note that ID Verification and ID Check are two distinct methods.
          ID Verification checks recipients' identity by verifying their ID while
          ID Check relies on data available on public records (such as current and
          former address).
      inheritEmailNotificationConfiguration:
        description:
          "When **true** and the envelope recipient creates a DocuSign
          account after signing, the Manage Account Email Notification settings are
          used as the default settings for the recipient's account. "
        type: string
      inPersonSigningType:
        description: |
          Specifies whether the envelope uses the eNotary feature.
          Valid values:

          * `inPersonSigner`: The envelope uses the normal in-person signing flow.
          * `notary`: The envelope uses the eNotary in-person signing flow.
        type: string
      inPersonSigningTypeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `inPersonSigningType` property
          is editable.
      lockedRecipientPhoneAuthEditable:
        description: Reserved for DocuSign.
        type: string
      lockedRecipientSmsEditable:
        description: Reserved for DocuSign.
        type: string
      name:
        description: |
          The signer's full legal name in an eNotary flow.

          Required when `inPersonSigningType` is `notary`.
          For a regular in-person-signer flow, use `signerName` instead.

          Maximum Length: 100 characters.
        type: string
      nameMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `name` property is editable.
          This property is read-only.
      notaryHost:
        "$ref": "#/definitions/notaryHost"
        description: |-
          Information about the notary host. The following information is required when using the eNotary in-person signing flow:

          - `name`: The name of the notary.
          - `email`: The email address of the notary.
          - `recipientId`: A unique ID number for the notary signing host.
      notaryId:
        description: ""
        type: string
      note:
        description: |
          A note sent to the in-person signer in the signing email.
          This note is visible only to this recipient.

          Maximum Length: 1000 characters.
        type: string
      noteMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `note` property is editable.
          This property is read-only.
      offlineAttributes:
        "$ref": "#/definitions/offlineAttributes"
        description: Reserved for DocuSign.
      phoneAuthentication:
        "$ref": "#/definitions/recipientPhoneAuthentication"
        description: |+
          When `idCheckConfigurationName` is set to `Phone Auth $`, you use this complex type to provide the recipient authentication method details. It contains the following elements:

          * `recipMayProvideNumber`: Boolean. When **true,** the recipient can use whatever phone number they choose.
          * `senderProvidedNumbers`: ArrayOfStrings.  A list of phone numbers the recipient can use.
          * `recordVoicePrint`: Reserved for DocuSign.
          * `validateRecipProvidedNumber`: Reserved for DocuSign.

      recipientAttachments:
        description: Reserved for DocuSign.
        type: array
        items:
          "$ref": "#/definitions/recipientAttachment"
      recipientAuthenticationStatus:
        "$ref": "#/definitions/authenticationStatus"
        description:
          Information about the recipient's authentication status. This
          property is read-only.
      recipientFeatureMetadata:
        description:
          Metadata about the features that are supported for the recipient
          type. This property is read-only.
        type: array
        items:
          "$ref": "#/definitions/featureAvailableMetadata"
      recipientId:
        description: |
          A local reference used to map
          recipients to other objects, such as specific
          document tabs.

          A `recipientId` must be
          either an integer or a GUID,
          and the `recipientId` must be
          unique within an envelope.

          For example, many envelopes assign the first recipient
          a `recipientId` of `1`.
        type: string
      recipientIdGuid:
        description:
          The globally-unique identifier (GUID) for a specific recipient
          on a specific envelope. If the same recipient is associated with multiple
          envelopes, they will have a different GUID for each one. This property is
          read-only.
        type: string
      recipientSignatureProviders:
        description:
          The default signature provider is the DocuSign Electronic signature
          system. This parameter is used to specify one or more Standards Based Signature
          (digital signature) providers for the signer to use. [More information.](/docs/esign-rest-api/esign101/concepts/standards-based-signatures/)
        type: array
        items:
          "$ref": "#/definitions/recipientSignatureProvider"
      recipientSuppliesTabs:
        description: When **true,** specifies that the recipient creates the tabs.
        type: string
      recipientType:
        description: |-
          The recipient type, as specified by the following values:
          - `agent`: Agent recipients can add name and email information for recipients that appear after the agent in routing order.
          - `carbonCopy`: Carbon copy recipients get a copy of the envelope but don't need to sign, initial, date, or add information to any of the documents. This type of recipient can be used in any routing order.
          - `certifiedDelivery`: Certified delivery recipients must receive the completed documents for the envelope to be completed. They don't need to sign, initial, date, or add information to any of the documents.
          - `editor`: Editors have the same management and access rights for the envelope as the sender. Editors can add name and email information, add or change the routing order, set authentication options, and can edit signature/initial tabs and data fields for the remaining recipients.
          - `inPersonSigner`: In-person recipients are DocuSign users who act as signing hosts in the same physical location as the signer.
          - `intermediaries`: Intermediary recipients can optionally add name and email information for recipients at the same or subsequent level in the routing order.
          - `seal`: Electronic seal recipients represent legal entities.
          - `signer`: Signers are recipients who must sign, initial, date, or add data to form fields on the documents in the envelope.
          - `witness`: Witnesses are recipients whose signatures affirm that the identified signers have signed the documents in the envelope.
        type: string
      recipientTypeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `recipientType` property
          is editable. This property is read-only.
      requireIdLookup:
        description:
          "When **true,** the recipient is required to use the specified
          ID check method (including Phone and SMS authentication) to validate their
          identity. "
        type: string
      requireIdLookupMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `requireIdLookup` property
          is editable. This property is read-only.
      requireSignerCertificate:
        description:
          "By default, DocuSign signers create electronic signatures. This
          field can be used to require the signer to use a SAFE-BioPharma digital
          certificate for signing.\n\nThis parameter should only be used to select
          a SAFE-BioPharma certificate. New integrations should use the `recipientSignatureProviders`
          parameter for other types of digital certificates. \n\nSet this parameter
          to `safe` to use a SAFE-BioPharma certificate.\n\nThe signer must be enrolled
          in the SAFE program to sign with a SAFE certificate."
        type: string
      requireSignOnPaper:
        description:
          When **true,** the signer must print, sign, and upload or fax
          the signed documents to DocuSign.
        type: string
      requireUploadSignature:
        description:
          When **true,** the signer is required to upload a new signature,
          even if they have a pre-adopted signature in their personal DocuSign account.
        type: string
      roleName:
        description:
          Optional element. Specifies the role name associated with the
          recipient.<br/><br/>This property is required when you are working with
          template recipients.
        type: string
      routingOrder:
        description: "Specifies the routing order of the recipient in the envelope. "
        type: string
      routingOrderMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `routingOrder` property is
          editable. This property is read-only.
      sentDateTime:
        description:
          The UTC DateTime when the envelope was sent. This property is
          read-only.
        type: string
      signatureInfo:
        "$ref": "#/definitions/recipientSignatureInformation"
        description: |-
          Allows the sender to pre-specify the signature name, signature initials and signature font used in the signature stamp for the recipient.

          Used only with recipient types In Person Signers and Signers.
      signedDateTime:
        description: Reserved for DocuSign.
        type: string
      signerEmail:
        description: |+
          The in-person signer's email address.

          Required when `inPersonSigningType` is `inPersonSigner`.
          For eNotary flow, use `email` instead.

          Maximum Length: 100 characters.

        type: string
      signerEmailMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates if the sender can edit the in-person
          signer's email address.
      signerFirstName:
        description: The signer's first name.
        type: string
      signerFirstNameMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates if the `signerFirstName` property is
          editable.
      signerLastName:
        description: The signer's last name.
        type: string
      signerLastNameMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `signerLastName` property
          is editable.
      signerName:
        description:
          "Required. The full legal name of a signer for the envelope.
          \n\nMaximum Length: 100 characters.\n\n\n"
        type: string
      signerNameMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `signerName` property is
          editable.
      signInEachLocation:
        description:
          When **true** and the feature is enabled in the sender's account,
          the signing recipient is required to draw signatures and initials at each
          signature/initial tab (instead of adopting a signature/initial style or
          only drawing a signature/initial once).
        type: string
      signInEachLocationMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `signInEachLocation` property
          is editable. This property is read-only.
      signingGroupId:
        description:
          Not applicable. You cannot use a signing group for an in-person
          signer.
        type: string
      signingGroupIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Not applicable.
      signingGroupName:
        description: Not applicable.
        type: string
      signingGroupUsers:
        description: Not applicable.
        type: array
        items:
          "$ref": "#/definitions/userInfo"
      smsAuthentication:
        "$ref": "#/definitions/recipientSMSAuthentication"
        description:
          "When `idCheckConfigurationName` is set to `SMS Auth $`, you
          use this complex type to provide the recipient authentication method details.
          It contains the element `senderProvidedNumbers`, which is an array of phone
          numbers that the recipient can use for SMS text authentication. \n\n"
      socialAuthentications:
        description: Deprecated.
        type: array
        items:
          "$ref": "#/definitions/socialAuthentication"
      status:
        description:
          "The recipient's status. This property is read-only. \n\nValid
          values:\n\n- `autoresponded`: The recipient's email system auto-responded
          to the email from DocuSign. This status is used in the web console to inform
          senders about the bounced-back email. This recipient status is only used
          if **Send-on-behalf-of** is turned off for the account.\n- `completed`:
          The recipient has completed their actions (signing or other required actions
          if not a signer) for an envelope.\n- `created`: The recipient is in a draft
          state. This value is only associated with draft envelopes (envelopes that
          have a status of `created`).\n- `declined`: The recipient declined to sign
          the documents in the envelope.\n- `delivered`: The recipient has viewed
          the documents in an envelope through the DocuSign signing website. This
          is not an email delivery of the documents in an envelope.\n- `faxPending`:
          The recipient has finished signing and the system is waiting for a fax attachment
          from the recipient before completing their signing step.\n- `sent`: The
          recipient has been sent an email notification that it is their turn to sign
          an envelope.\n- `signed`: The recipient has completed (signed) all required
          tags in an envelope. This is a temporary state during processing, after
          which the recipient's status automatically switches to `completed`."
        type: string
      statusCode:
        description:
          The code associated with the recipient's status. This property
          is read-only.
        type: string
      suppressEmails:
        description:
          When **true,** email notifications are suppressed for the recipient,
          and they must access envelopes and documents from their DocuSign inbox.
        type: string
      tabs:
        "$ref": "#/definitions/EnvelopeRecipientTabs"
        description:
          A list of tabs, which are represented graphically as symbols
          on documents at the time of signing. Tabs show recipients where to sign,
          initial, or enter data. They may also display data to the recipients.
      templateLocked:
        description:
          "When **true,** the sender cannot change any attributes of the
          recipient. Used only when working with template recipients. "
        type: string
      templateRequired:
        description:
          When **true,** the sender may not remove the recipient. Used
          only when working with template recipients.
        type: string
      totalTabCount:
        description: The total number of tabs in the documents. This property is read-only.
        type: string
      userId:
        description: |-
          The ID of the user to access.

          **Note:** Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.
        type: string
    description: |
      Contains information about an in-person recipient. This is a DocuSign user,
      acting as a Signing Host,
      who is in the same physical location as the signer.
      To learn about the fields used
      for the eNotary feature,
      see the [EnvelopeRecipients resource][resource].

      [resource]: /docs/esign-rest-api/reference/envelopes/enveloperecipients/#in-person-signer-recipient
    x-ds-definition-name: inPersonSigner
    x-ms-summary: |
      Contains information about an in-person recipient. This is a DocuSign user,
      acting as a Signing Host,
      who is in the same physical location as the signer.
      To learn about the fields used
      for the eNotary feature,
      see the [EnvelopeRecipients resource][resource].

      [resource]: /docs/esign-rest-api/reference/envelopes/enveloperecipients/#in-person-signer-recipient
  integratedConnectUserInfoList:
    type: object
    properties:
      endPosition:
        description: "The last index position in the result set. "
        type: string
      nextUri:
        description:
          "The URI for the next chunk of records based on the search request.
          It is `null` if this is the last set of results for the search. "
        type: string
      previousUri:
        description:
          "The URI for the prior chunk of records based on the search request.
          It is `null` if this is the first set of results for the search. "
        type: string
      resultSetSize:
        description:
          The number of results in this response. Because you can filter
          which entries are included in the response, this value is always less than
          or equal to the `totalSetSize`.
        type: string
      startPosition:
        description: The starting index position of the current result set.
        type: string
      totalSetSize:
        description:
          The total number of items in the result set. This value is always
          greater than or equal to the value of `resultSetSize`.
        type: string
      users:
        description: User management information.
        type: array
        items:
          "$ref": "#/definitions/connectUserInfo"
    x-ds-definition-name: integratedConnectUserInfoList
    description: ""
    x-ms-summary: ""
  integratedUserInfoList:
    type: object
    properties:
      allUsersSelected:
        description: ""
        type: string
      endPosition:
        description: "The last index position in the result set. "
        type: string
      nextUri:
        description:
          "The URI for the next chunk of records based on the search request.
          It is `null` if this is the last set of results for the search. "
        type: string
      previousUri:
        description:
          "The URI for the prior chunk of records based on the search request.
          It is `null` if this is the first set of results for the search. "
        type: string
      resultSetSize:
        description:
          The number of results in this response. Because you can filter
          which entries are included in the response, this value is always less than
          or equal to the `totalSetSize`.
        type: string
      startPosition:
        description: The starting index position of the current result set.
        type: string
      totalSetSize:
        description:
          The total number of items in the result set. This value is always
          greater than or equal to the value of `resultSetSize`.
        type: string
      users:
        description: User management information.
        type: array
        items:
          "$ref": "#/definitions/userInfo"
    x-ds-definition-name: integratedUserInfoList
    description: ""
    x-ms-summary: ""
  intermediary:
    type: object
    properties:
      accessCode:
        description:
          "If a value is provided, the recipient must enter the value as
          the access code to view and sign the envelope. \n\nMaximum Length: 50 characters
          and it must conform to the account's access code format setting.\n\nIf blank,
          but the signer `accessCode` property is set in the envelope, then that value
          is used.\n\nIf blank and the signer `accessCode` property is not set, then
          the access code is not required."
        type: string
      accessCodeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `accessCode` property is
          editable. This property is read-only.
      addAccessCodeToEmail:
        description:
          Optional. When **true,** the access code will be added to the
          email sent to the recipient. This nullifies the security measure of `accessCode`
          on the recipient.
        type: string
      additionalNotifications:
        description: An array of additional notification objects.
        type: array
        items:
          "$ref": "#/definitions/recipientAdditionalNotification"
      allowSystemOverrideForLockedRecipient:
        description:
          When **true,** if the recipient is locked on a template, advanced
          recipient routing can override the lock.
        type: string
      autoRespondedReason:
        description:
          "Error message provided by the destination email system. This
          field is only provided if the email notification to the recipient fails
          to send. This property is read-only.

          "
        type: string
      bulkSendV2Recipient:
        description: ""
        type: string
      clientUserId:
        description:
          "Specifies whether the recipient is embedded or remote. \n\nIf
          the `clientUserId` property is not null then the recipient is embedded.
          Use this field to associate the signer with their userId in your app. Authenticating
          the user is the responsibility of your app when you use embedded signing.\n\nIf
          the `clientUserId` property is set and either `SignerMustHaveAccount` or
          `SignerMustLoginToSign` property of the account settings is set to  **true,**
          an error is generated on sending.\n\n**Note:** This property is not returned
          by the [listStatusChanges](/docs/esign-rest-api/reference/envelopes/envelopes/liststatuschanges/)
          endpoint.\n\nMaximum length: 100 characters. \n"
        type: string
      completedCount:
        description:
          Indicates the number of times that the recipient has been through
          a signing completion for the envelope. If this number is greater than 0
          for a signing group, only the user who previously completed may sign again.
          This property is read-only.
        type: string
      consentDetailsList:
        description: ""
        type: array
        items:
          "$ref": "#/definitions/consentDetails"
      customFields:
        description:
          An optional array of strings that allows the sender to provide
          custom data about the recipient. This information is returned in the envelope
          status but otherwise not used by DocuSign. Each customField string can be
          a maximum of 100 characters.
        type: array
        items:
          type: string
      declinedDateTime:
        description:
          The date and time the recipient declined the document. This property
          is read-only.
        type: string
      declinedReason:
        description:
          The reason the recipient declined the document. This property
          is read-only.
        type: string
      deliveredDateTime:
        description:
          The date and time that the envelope was delivered to the recipient.
          This property is read-only.
        type: string
      deliveryMethod:
        description: |-
          The delivery method. One of:

          - `email`
          - `fax`
          - `SMS`
          - `WhatsApp`
          - `offline`

          The `SMS` and `WhatsApp` delivery methods
          are limited to `signer`, `carbonCopy`, and `certifiedDelivery`
          recipients.

          **Related topics**

          - [Using SMS delivery with the eSignature API][smsconcept]
          - [How to request a signature by SMS delivery][howto]

          [smsconcept]: /docs/esign-rest-api/esign101/concepts/sms-delivery/using-sms-esignature/
          [howto]: /docs/esign-rest-api/how-to/request-signature-sms/
        type: string
      deliveryMethodMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Reserved for DocuSign.
      designatorId:
        description: Reserved for DocuSign.
        type: string
      designatorIdGuid:
        description: Reserved for DocuSign.
        type: string
      documentVisibility:
        description:
          A list of `documentVisibility` objects. Each object in the list
          specifies whether a document in the envelope is visible to this recipient.
          For the envelope to use this functionality, Document Visibility must be
          enabled for the account and the `enforceSignerVisibility` property must
          be set to **true.**
        type: array
        items:
          "$ref": "#/definitions/documentVisibility"
      email:
        description:
          "The recipient's email address. Notification of the document
          to sign is sent to this email address. \n\nMaximum length: 100 characters. "
        type: string
      emailMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `email` property is editable.
          This property is read-only.
      emailNotification:
        "$ref": "#/definitions/recipientEmailNotification"
        description: |-
          This optional property allows you to set a specific email subject and
          body for this recipient's notification email.

          **Note:** If you use this property, you _must_
          provide a value for the `supportedLanguage` sub-property.


          You can set the `emailNotification` property separately
          for each recipient. If you set the value only for certain
          recipients, the other recipients are assigned the values from
          the top-level `emailSubject` and `emailBlurb`.
      emailRecipientPostSigningURL:
        description: ""
        type: string
      embeddedRecipientStartURL:
        description:
          "Specifies a sender-provided valid URL string for redirecting
          an embedded recipient. When using this option, the embedded recipient still
          receives an email from DocuSign, just as a remote recipient would. When
          the document link in the email is clicked the recipient is redirected, through
          DocuSign, to the supplied URL to complete their actions. When routing to
          the URL, the sender's system (the server responding to the URL) must request
          a recipient token to launch a signing session. \n\nWhen `SIGN_AT_DOCUSIGN`,
          the recipient is directed to an embedded signing or viewing process directly
          at DocuSign. The signing or viewing action is initiated by the DocuSign
          system and the transaction activity and Certificate of Completion records
          will reflect this. In all other ways the process is identical to an embedded
          signing or viewing operation launched by a partner.\n\nIt is important to
          understand that in a typical embedded workflow, the authentication of an
          embedded recipient is the responsibility of the sending application. DocuSign
          expects that senders will follow their own processes for establishing the
          recipient's identity. In this workflow the recipient goes through the sending
          application before the embedded signing or viewing process is initiated.
          However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`,
          the recipient goes directly to the embedded signing or viewing process,
          bypassing the sending application and any authentication steps the sending
          application would use. In this case, DocuSign recommends that you use one
          of the normal DocuSign authentication features (Access Code, Phone Authentication,
          SMS Authentication, etc.) to verify the identity of the recipient.\n\nIf
          the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL`
          is set, DocuSign will ignore the redirect URL and launch the standard signing
          process for the email recipient. Information can be appended to the embedded
          recipient start URL using merge fields. The available merge fields items
          are: `envelopeId`, `recipientId`, `recipientName`, `recipientEmail`, and
          `customFields`. The `customFields` property must be set for the recipient
          or envelope. The merge fields are enclosed in double brackets. \n\n*Example*:
          \n\n`http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]` "
        type: string
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      excludedDocuments:
        description: |-
          Specifies the documents that are not visible to this recipient. Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to **true** for the envelope to use this.

          When enforce signer visibility is enabled, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.
        type: array
        items:
          type: string
      faxNumber:
        description: Reserved for DocuSign.
        type: string
      faxNumberMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Reserved for DocuSign.
      firstName:
        description: "The recipient's first name. Maximum Length: 50 characters."
        type: string
      firstNameMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `firstName` property is editable.
          This property is read-only.
      fullName:
        description: Reserved for DocuSign.
        type: string
      fullNameMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Reserved for DocuSign.
      idCheckConfigurationName:
        description:
          "The name of the authentication check to use. This value must
          match one of the authentication types that the account uses. The names of
          these authentication types appear in the web console sending interface in
          the Identify list for a recipient. This setting overrides any default authentication
          setting. Valid values are:\n\n- `Phone Auth $`: The recipient must authenticate
          by using two-factor authentication (2FA). You provide the phone number to
          use for 2FA in the `phoneAuthentication` object.\n- `SMS Auth $`: The recipient
          must authenticate via SMS. You provide the phone number to use in the `smsAuthentication`
          object.\n- `ID Check $`: The  recipient must answer detailed security questions.
          \n\n**Example:** Your account has ID Check and SMS Authentication available.
          In the web console Identify list, these appear as ID Check $ and SMS Auth
          $. To use ID Check in an envelope, the idCheckConfigurationName should be
          ID Check $. For SMS, you would use SMS Auth $, and you would also need to
          add a phone number to the smsAuthentication node."
        type: string
      idCheckConfigurationNameMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `idCheckConfigurationName`
          property is editable. This property is read-only.
      idCheckInformationInput:
        "$ref": "#/definitions/idCheckInformationInput"
        description:
          An object that contains input information related to a recipient
          ID check.
      identityVerification:
        "$ref": "#/definitions/recipientIdentityVerification"
        description:
          Specifies the ID Verification workflow applied on an envelope
          by workflow ID. <br/>See the [list](/docs/esign-rest-api/reference/accounts/identityverifications/list/)
          method in the [IdentityVerifications](/docs/esign-rest-api/reference/accounts/identityverifications/)
          resource for more information on how to retrieve workflow IDs available
          for an account. <br/>This can be used in addition to other [recipient authentication](https://support.docusign.com/s/document-item?bundleId=gav1643676262430&topicId=kzp1578456318101.html)
          methods. <br/>Note that ID Verification and ID Check are two distinct methods.
          ID Verification checks recipients' identity by verifying their ID while
          ID Check relies on data available on public records (such as current and
          former address).
      inheritEmailNotificationConfiguration:
        description:
          "When **true** and the envelope recipient creates a DocuSign
          account after signing, the Manage Account Email Notification settings are
          used as the default settings for the recipient's account. "
        type: string
      lastName:
        description: The recipient's last name.
        type: string
      lastNameMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `lastName` property is editable.
          This property is read-only.
      lockedRecipientPhoneAuthEditable:
        description: Reserved for DocuSign.
        type: string
      lockedRecipientSmsEditable:
        description: Reserved for DocuSign.
        type: string
      name:
        description: |-
          The full legal name of the recipient. Maximum Length: 100 characters.

          **Note:** You must always set a value for this property in requests, even if `firstName` and `lastName` are set.
        type: string
      nameMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `name` property is editable.
          This property is read-only.
      note:
        description: |
          A note sent to the recipient in the signing email.
          This note is unique to this recipient.
          In the user interface,
          it appears near the upper left corner
          of the document
          on the signing screen.

          Maximum Length: 1000 characters.
        type: string
      noteMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `note` property is editable.
          This property is read-only.
      phoneAuthentication:
        "$ref": "#/definitions/recipientPhoneAuthentication"
        description: |+
          When `idCheckConfigurationName` is set to `Phone Auth $`, you use this complex type to provide the recipient authentication method details. It contains the following elements:

          * `recipMayProvideNumber`: Boolean. When **true,** the recipient can use whatever phone number they choose.
          * `senderProvidedNumbers`: ArrayOfStrings.  A list of phone numbers the recipient can use.
          * `recordVoicePrint`: Reserved for DocuSign.
          * `validateRecipProvidedNumber`: Reserved for DocuSign.

      phoneNumber:
        "$ref": "#/definitions/recipientPhoneNumber"
        description: Describes the recipient phone number.
      recipientAttachments:
        description: Reserved for DocuSign.
        type: array
        items:
          "$ref": "#/definitions/recipientAttachment"
      recipientAuthenticationStatus:
        "$ref": "#/definitions/authenticationStatus"
        description:
          Information about the recipient's authentication status. This
          property is read-only.
      recipientFeatureMetadata:
        description:
          Metadata about the features that are supported for the recipient
          type. This property is read-only.
        type: array
        items:
          "$ref": "#/definitions/featureAvailableMetadata"
      recipientId:
        description: |
          A local reference used to map
          recipients to other objects, such as specific
          document tabs.

          A `recipientId` must be
          either an integer or a GUID,
          and the `recipientId` must be
          unique within an envelope.

          For example, many envelopes assign the first recipient
          a `recipientId` of `1`.
        type: string
      recipientIdGuid:
        description:
          The globally-unique identifier (GUID) for a specific recipient
          on a specific envelope. If the same recipient is associated with multiple
          envelopes, they will have a different GUID for each one. This property is
          read-only.
        type: string
      recipientType:
        description: |-
          The recipient type, as specified by the following values:
          - `agent`: Agent recipients can add name and email information for recipients that appear after the agent in routing order.
          - `carbonCopy`: Carbon copy recipients get a copy of the envelope but don't need to sign, initial, date, or add information to any of the documents. This type of recipient can be used in any routing order.
          - `certifiedDelivery`: Certified delivery recipients must receive the completed documents for the envelope to be completed. They don't need to sign, initial, date, or add information to any of the documents.
          - `editor`: Editors have the same management and access rights for the envelope as the sender. Editors can add name and email information, add or change the routing order, set authentication options, and can edit signature/initial tabs and data fields for the remaining recipients.
          - `inPersonSigner`: In-person recipients are DocuSign users who act as signing hosts in the same physical location as the signer.
          - `intermediaries`: Intermediary recipients can optionally add name and email information for recipients at the same or subsequent level in the routing order.
          - `seal`: Electronic seal recipients represent legal entities.
          - `signer`: Signers are recipients who must sign, initial, date, or add data to form fields on the documents in the envelope.
          - `witness`: Witnesses are recipients whose signatures affirm that the identified signers have signed the documents in the envelope.
        type: string
      recipientTypeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `recipientType` property
          is editable. This property is read-only.
      requireIdLookup:
        description:
          "When **true,** the recipient is required to use the specified
          ID check method (including Phone and SMS authentication) to validate their
          identity. "
        type: string
      requireIdLookupMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `requireIdLookup` property
          is editable. This property is read-only.
      roleName:
        description:
          Optional element. Specifies the role name associated with the
          recipient.<br/><br/>This property is required when you are working with
          template recipients.
        type: string
      routingOrder:
        description: "Specifies the routing order of the recipient in the envelope. "
        type: string
      routingOrderMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `routingOrder` property is
          editable. This property is read-only.
      sentDateTime:
        description:
          The UTC DateTime when the envelope was sent. This property is
          read-only.
        type: string
      signedDateTime:
        description: Reserved for DocuSign.
        type: string
      signingGroupId:
        description:
          "The ID of the [signing group](https://support.docusign.com/s/document-item?bundleId=gav1643676262430&topicId=zgn1578456447934.html).

          "
        type: string
      signingGroupIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `signingGroupId` property
          is editable. This property is read-only.
      signingGroupName:
        description:
          "Optional. The name of the signing group. \n\nMaximum Length:
          100 characters. "
        type: string
      signingGroupUsers:
        description:
          A complex type that contains information about users in the signing
          group.
        type: array
        items:
          "$ref": "#/definitions/userInfo"
      smsAuthentication:
        "$ref": "#/definitions/recipientSMSAuthentication"
        description:
          "When `idCheckConfigurationName` is set to `SMS Auth $`, you
          use this complex type to provide the recipient authentication method details.
          It contains the element `senderProvidedNumbers`, which is an array of phone
          numbers that the recipient can use for SMS text authentication. \n\n"
      socialAuthentications:
        description: Deprecated.
        type: array
        items:
          "$ref": "#/definitions/socialAuthentication"
      status:
        description:
          "The recipient's status. This property is read-only. \n\nValid
          values:\n\n- `autoresponded`: The recipientÃ¢Â\x80Â\x99s email system auto-responded
          to the email from DocuSign. This status is used in the web console to inform
          senders about the bounced-back email. This recipient status is only used
          if **Send-on-behalf-of** is turned off for the account.\n- `completed`:
          The recipient has completed their actions (signing or other required actions
          if not a signer) for an envelope.\n- `created`: The recipient is in a draft
          state. This value is only associated with draft envelopes (envelopes that
          have a status of `created`).\n- `declined`: The recipient declined to sign
          the documents in the envelope.\n- `delivered`: The recipient has viewed
          the documents in an envelope through the DocuSign signing website. This
          is not an email delivery of the documents in an envelope.\n- `faxPending`:
          The recipient has finished signing and the system is waiting for a fax attachment
          from the recipient before completing their signing step.\n- `sent`: The
          recipient has been sent an email notification that it is their turn to sign
          an envelope.\n- `signed`: The recipient has completed (signed) all required
          tags in an envelope. This is a temporary state during processing, after
          which the recipient's status automatically switches to `completed`.\n"
        type: string
      statusCode:
        description:
          The code associated with the recipient's status. This property
          is read-only.
        type: string
      suppressEmails:
        description:
          When **true,** email notifications are suppressed for the recipient,
          and they must access envelopes and documents from their DocuSign inbox.
        type: string
      templateLocked:
        description:
          "When **true,** the sender cannot change any attributes of the
          recipient. Used only when working with template recipients. "
        type: string
      templateRequired:
        description:
          When **true,** the sender may not remove the recipient. Used
          only when working with template recipients.
        type: string
      totalTabCount:
        description: The total number of tabs in the documents. This property is read-only.
        type: string
      userId:
        description: |-
          The ID of the user to access.

          **Note:** Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.
        type: string
    description:
      Contains information about an intermediary recipient. An intermediary
      is a recipient who can, but is not required to, add name and email information
      for recipients at the same or subsequent level in the routing order, unless
      subsequent agents, editors or intermediaries are added.
    x-ds-definition-name: intermediary
    x-ms-summary:
      Contains information about an intermediary recipient. An intermediary
      is a recipient who can, but is not required to, add name and email information
      for recipients at the same or subsequent level in the routing order, unless
      subsequent agents, editors or intermediaries are added.
  jurisdiction:
    type: object
    properties:
      allowSystemCreatedSeal:
        description: When **true,** the seal can be generated by the platform.
        type: string
      allowUserUploadedSeal:
        description: When **true,** the seal can be uploaded by the user.
        type: string
      commissionIdInSeal:
        description: When **true,** the notary's `comissionId` appears in the seal.
        type: string
      county:
        description: The county of the jurisdiction.
        type: string
      countyInSeal:
        description: When **true,** the county name appears in the seal.
        type: string
      enabled:
        description: When **true,** this jurisdiction is enabled.
        type: string
      jurisdictionId:
        description: |
          The ID of the jurisdiction.
          The following jurisdictions
          are supported:

          -  `5 - California`
          -  `6 - Colorado`
          -  `9 - Florida`
          -  `10 - Georgia`
          -  `12 - Idaho`
          -  `13 - Illinois`
          -  `14 - Indiana`
          -  `15 - Iowa`
          -  `17 - Kentucky`
          -  `23 - Minnesota`
          -  `25 - Missouri`
          -  `30 - New Jersey`
          -  `32 - New York`
          -  `33 - North Carolina`
          -  `35 - Ohio`
          -  `37 - Oregon`
          -  `38 - Pennsylvania`
          -  `40 - South Carolina`
          -  `43 - Texas`
          -  `44 - Utah`
          -  `47 - Washington`
          -  `48 - West Virginia`
          -  `49 - Wisconsin`
          -  `62 - Florida Commissioner of Deeds`
        type: string
      name:
        description: The name of the jurisdiction. Typically the state name.
        type: string
      notaryPublicInSeal:
        description: When **true,** the name of the notary appears in the seal.
        type: string
      stateNameInSeal:
        description: When **true,** the name of the state appears in the seal.
        type: string
    description: |-
      Describes the jurisdiction of a notary.
      This is read-only object.
    x-ds-definition-name: jurisdiction
    x-ms-summary: |-
      Describes the jurisdiction of a notary.
      This is read-only object.
  jurisdictionSummary:
    type: object
    properties:
      authorizedForIPen:
        description: ""
        type: string
      authorizedForRon:
        description: ""
        type: string
      jurisdictionId:
        description: |
          The ID of the jurisdiction.
          The following jurisdictions
          are supported:

          -  `5 - California`
          -  `6 - Colorado`
          -  `9 - Florida`
          -  `10 - Georgia`
          -  `12 - Idaho`
          -  `13 - Illinois`
          -  `14 - Indiana`
          -  `15 - Iowa`
          -  `17 - Kentucky`
          -  `23 - Minnesota`
          -  `25 - Missouri`
          -  `30 - New Jersey`
          -  `32 - New York`
          -  `33 - North Carolina`
          -  `35 - Ohio`
          -  `37 - Oregon`
          -  `38 - Pennsylvania`
          -  `40 - South Carolina`
          -  `43 - Texas`
          -  `44 - Utah`
          -  `47 - Washington`
          -  `48 - West Virginia`
          -  `49 - Wisconsin`
          -  `62 - Florida Commissioner of Deeds`
        type: string
      jurisdictionName:
        description: ""
        type: string
    x-ds-definition-name: jurisdictionSummary
    description: ""
    x-ms-summary: ""
  lastName:
    type: object
    properties:
      anchorAllowWhiteSpaceInCharacters:
        description: |
          When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.

          First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.

          Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.

          The default value is **true.**
        type: string
      anchorAllowWhiteSpaceInCharactersMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorAllowWhiteSpaceInCharacters`
          property is editable.
      anchorCaseSensitive:
        description: |-
          This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**

          For example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.

          This functionality uses the following rules:

          - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:

            $~><|^+=

            For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`

          - Strings embedded in other strings are ignored during the matching process.

          - In words that have dashes, the parts separated by dashes are treated as distinct words.

            Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**

          - Letters with accent marks are treated as distinct characters from their unaccented counterparts.

          - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.

            Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.

          - Unlike punctuation, numbers are not ignored when finding anchor words.

            Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).

          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorCaseSensitiveMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorCaseSensitive` property
          is editable.
      anchorHorizontalAlignment:
        description: |
          This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :

          - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.
          - `right`: Aligns the tab’s left side with the last character of the matching anchor word.

          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorHorizontalAlignmentMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorHorizontalAlignment`
          property is editable.
      anchorIgnoreIfNotPresent:
        description:
          When **true,** this tab is ignored if the `anchorString` is not
          found in the document.
        type: string
      anchorIgnoreIfNotPresentMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorIgnoreIfNotPresent`
          property is editable.
      anchorMatchWholeWord:
        description: |
          When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**

          For example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.

          This functionality uses the following rules:

          - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:

            $~><|^+=

            For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`

          - Strings embedded in other strings are ignored during the matching process.

          - In words that have dashes, the parts separated by dashes are treated as distinct words.

            Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**

          - Letters with accent marks are treated as distinct characters from their unaccented counterparts.

          - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.

            Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.

          - Unlike punctuation, numbers are not ignored when finding anchor words.

            Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).


          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorMatchWholeWordMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorMatchWholeWord` property
          is editable.
      anchorString:
        description:
          Specifies the string to find in the document and use as the basis
          for tab placement.
        type: string
      anchorStringMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorString` property is
          editable.
      anchorTabProcessorVersion:
        description: Reserved for DocuSign.
        type: string
      anchorTabProcessorVersionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Reserved for DocuSign.
      anchorUnits:
        description: |
          Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:

          - `pixels` (default)
          - `inches`
          - `mms`
          - `cms`
        type: string
      anchorUnitsMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorUnits` property is
          editable.
      anchorXOffset:
        description:
          "Specifies the X axis location of the tab in `anchorUnits` relative
          to the `anchorString`.

          "
        type: string
      anchorXOffsetMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorXOffset` property
          is editable.
      anchorYOffset:
        description:
          "Specifies the Y axis location of the tab in `anchorUnits` relative
          to the `anchorString`.

          "
        type: string
      anchorYOffsetMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorYOffset` property
          is editable.
      bold:
        description: When **true,** the information in the tab is bold.
        type: string
      boldMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `bold` property is editable.
      caption:
        description: ""
        type: string
      captionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `caption` property is editable.
      conditionalParentLabel:
        description:
          For conditional fields this is the `tabLabel` of the parent tab
          that controls this tab's visibility.
        type: string
      conditionalParentLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `conditionalParentLabel`
          property is editable.
      conditionalParentValue:
        description: |
          For conditional fields, this is the value of the parent tab that controls the tab's visibility.

          If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use "on" as the value to show that the parent tab is active.
        type: string
      conditionalParentValueMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `conditionalParentValue`
          property is editable.
      customTabId:
        description:
          The DocuSign generated custom tab ID for the custom tab to be
          applied. This can only be used when adding new tabs for a recipient. When
          used, the new tab inherits all the custom tab properties.
        type: string
      customTabIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `customTabId` property is
          editable.
      documentId:
        description:
          Specifies the document ID number that the tab is placed on. This
          must refer to an existing Document's ID attribute.
        type: string
      documentIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `documentId` property is
          editable.
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      font:
        description: |
          The font to be used for the tab value. Supported fonts include:

          - Default
          - Arial
          - ArialNarrow
          - Calibri
          - CourierNew
          - Garamond
          - Georgia
          - Helvetica
          - LucidaConsole
          - MSGothic
          - MSMincho
          - OCR-A
          - Tahoma
          - TimesNewRoman
          - Trebuchet
          - Verdana
        type: string
      fontColor:
        description:
          "The font color to use for the information in the tab. Possible
          values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n-
          Gold\n- Green\n- NavyBlue\n- Purple\n- White\n"
        type: string
      fontColorMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `fontColor` property is editable.
      fontMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `font` property is editable.
      fontSize:
        description: |-
          The font size used for the information in the tab. Possible values are:

          - Size7
          - Size8
          - Size9
          - Size10
          - Size11
          - Size12
          - Size14
          - Size16
          - Size18
          - Size20
          - Size22
          - Size24
          - Size26
          - Size28
          - Size36
          - Size48
          - Size72
        type: string
      fontSizeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `fontSize` property is editable.
      formOrder:
        description:
          An integer specifying the order in which the guided form HTML
          should render. The order is relative to the `formPageLabel`, the group by
          which to place the guided form HTML block.
        type: string
      formOrderMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `formOrder` property is editable.
      formPageLabel:
        description:
          A string specifying the group in which to place the guided form
          HTML. Each group displays as a separate guided forms page in the signing
          experience.
        type: string
      formPageLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `formPageLabel` property
          is editable.
      formPageNumber:
        description:
          An integer specifying the order in which to present the guided
          form pages.
        type: string
      formPageNumberMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `fromPageNumber` property
          is editable.
      height:
        description: |-
          The height of the tab in pixels.
          Must be an integer.
        type: string
      heightMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `height` property is editable.
      italic:
        description: When **true,** the information in the tab is italic.
        type: string
      italicMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `italic` property is editable.
      localePolicy:
        "$ref": "#/definitions/localePolicyTab"
        description: Locale-specific settings.
      mergeField:
        "$ref": "#/definitions/mergeField"
        description:
          Contains the information necessary to map the tab to a field
          in SalesForce.
      mergeFieldXml:
        description: Reserved for DocuSign.
        type: string
      name:
        description: |-
          The name of the tab. For example, `Sign Here` or `Initial Here`.

          If the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.
        type: string
      nameMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `name` property is editable.
          This property is read-only.
      pageNumber:
        description:
          "The page number on which the tab is located. For supplemental
          documents, this value must be `1`.

          "
        type: string
      pageNumberMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `pageNumber` property is
          editable.
      recipientId:
        description:
          "The ID of the recipient to whom the tab will be assigned. This
          value should match the `recipientId` defined in the recipient object.

          "
        type: string
      recipientIdGuid:
        description:
          The globally-unique identifier (GUID) for a specific recipient
          on a specific envelope. If the same recipient is associated with multiple
          envelopes, they will have a different GUID for each one. This property is
          read-only.
        type: string
      recipientIdGuidMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `recipientIdGuid` property
          is editable.
      recipientIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `recipientId` property is
          editable.
      smartContractInformation:
        "$ref": "#/definitions/smartContractInformation"
        description: Reserved for DocuSign.
      source:
        description: Reserved for DocuSign.
        type: string
      status:
        description: |-
          The status of the tab. Possible values are:

          - `active`: The tab is active, but the recipient has not yet interacted with it.
          - `signed`: The recipient signed the tab.
          - `declined`: The recipient declined the envelope.
          - `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).
        type: string
      statusMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `status` property is editable.
      tabGroupLabels:
        description: |-
          An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.

          To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
        type: array
        items:
          type: string
      tabGroupLabelsMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `tabGroupLabels` property
          is editable.
      tabId:
        description: The unique identifier for the tab.
        type: string
      tabIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabId` property is editable.
      tabLabel:
        description: |
          The label associated with the tab. This value may be an empty string.
          If no value is provided, the tab type is used as the value.

          Maximum Length: 500 characters.
        type: string
      tabLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabLabel` property is editable.
      tabOrder:
        description: |-
          A positive integer that sets the order the tab is navigated to during signing.

          Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
        type: string
      tabOrderMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabOrder` property is editable.
      tabType:
        description: Indicates the type of tab (for example, `signHere` or `initialHere`).
        type: string
      tabTypeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabType` property is editable.
      templateLocked:
        description:
          "When **true,** the sender cannot change any attributes of the
          recipient. Used only when working with template recipients. "
        type: string
      templateLockedMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `templateLocked` property
          is editable.
      templateRequired:
        description:
          When **true,** the sender may not remove the recipient. Used
          only when working with template recipients.
        type: string
      templateRequiredMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `templateRequired` property
          is editable.
      tooltip:
        description:
          "The text of a tooltip that appears when a user hovers over a
          form field or tab.

          "
        type: string
      toolTipMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          "Metadata that indicates whether the `toolTip` property is editable.

          "
      underline:
        description: When **true,** the information in the tab is underlined.
        type: string
      underlineMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `underline` property is editable.
      value:
        description: "Specifies the value of the tab. "
        type: string
      valueMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `value` property is editable.
      width:
        description: |-
          The width of the tab in pixels.
          Must be an integer.
        type: string
      widthMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `width` property is editable.
      xPosition:
        description: |
          This property indicates the horizontal offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. Must be an integer. May be zero.

          To improve the tab's position on the document,
          DocuSign recommends
          adjusting `xPosition`
          and `yPosition`
          coordinates
          by (-3, -2)
        type: string
      xPositionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `xPosition` property is editable.
      yPosition:
        description: |
          This property indicates the vertical offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. Must be an integer. May be zero.

          To improve the tab's position on the document,
          DocuSign recommends
          adjusting `xPosition`
          and `yPosition`
          coordinates
          by (-3, -2)
        type: string
      yPositionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `yPosition` property is editable.
    description: |
      A tab that displays the recipient's last name. This tab
      takes the recipient's name as entered in the recipient
      information, splits it into sections based on spaces and
      uses the last section as the last name.
    x-ds-definition-name: lastName
    x-ms-summary: |
      A tab that displays the recipient's last name. This tab
      takes the recipient's name as entered in the recipient
      information, splits it into sections based on spaces and
      uses the last section as the last name.
  linkedExternalPrimaryAccount:
    type: object
    properties:
      accountName:
        description: The name on the account.
        type: string
      configurationId:
        description: ""
        type: string
      email:
        description: ""
        type: string
      linkId:
        description: ""
        type: string
      pdfFieldHandlingOption:
        description: ""
        type: string
      recipientAuthRequirements:
        "$ref": "#/definitions/externalPrimaryAccountRecipientAuthRequirements"
        description: ""
      status:
        description:
          "Indicates the envelope status. Valid values are:\n\n* `sent`
          - The envelope is sent to the recipients. \n* `created` - The envelope is
          saved as a draft and can be modified to be sent later."
        type: string
      userId:
        description: |-
          The ID of the user to access.

          **Note:** Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.
        type: string
    x-ds-definition-name: linkedExternalPrimaryAccount
    description: ""
    x-ms-summary: ""
  list:
    type: object
    properties:
      anchorAllowWhiteSpaceInCharacters:
        description: |
          When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.

          First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.

          Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.

          The default value is **true.**
        type: string
      anchorAllowWhiteSpaceInCharactersMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorAllowWhiteSpaceInCharacters`
          property is editable.
      anchorCaseSensitive:
        description: |-
          This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**

          For example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.

          This functionality uses the following rules:

          - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:

            $~><|^+=

            For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`

          - Strings embedded in other strings are ignored during the matching process.

          - In words that have dashes, the parts separated by dashes are treated as distinct words.

            Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**

          - Letters with accent marks are treated as distinct characters from their unaccented counterparts.

          - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.

            Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.

          - Unlike punctuation, numbers are not ignored when finding anchor words.

            Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).

          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorCaseSensitiveMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorCaseSensitive` property
          is editable.
      anchorHorizontalAlignment:
        description: |
          This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :

          - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.
          - `right`: Aligns the tab’s left side with the last character of the matching anchor word.

          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorHorizontalAlignmentMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorHorizontalAlignment`
          property is editable.
      anchorIgnoreIfNotPresent:
        description:
          When **true,** this tab is ignored if the `anchorString` is not
          found in the document.
        type: string
      anchorIgnoreIfNotPresentMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorIgnoreIfNotPresent`
          property is editable.
      anchorMatchWholeWord:
        description: |
          When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**

          For example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.

          This functionality uses the following rules:

          - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:

            $~><|^+=

            For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`

          - Strings embedded in other strings are ignored during the matching process.

          - In words that have dashes, the parts separated by dashes are treated as distinct words.

            Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**

          - Letters with accent marks are treated as distinct characters from their unaccented counterparts.

          - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.

            Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.

          - Unlike punctuation, numbers are not ignored when finding anchor words.

            Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).


          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorMatchWholeWordMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorMatchWholeWord` property
          is editable.
      anchorString:
        description:
          Specifies the string to find in the document and use as the basis
          for tab placement.
        type: string
      anchorStringMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorString` property is
          editable.
      anchorTabProcessorVersion:
        description: Reserved for DocuSign.
        type: string
      anchorTabProcessorVersionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Reserved for DocuSign.
      anchorUnits:
        description: |
          Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:

          - `pixels` (default)
          - `inches`
          - `mms`
          - `cms`
        type: string
      anchorUnitsMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorUnits` property is
          editable.
      anchorXOffset:
        description:
          "Specifies the X axis location of the tab in `anchorUnits` relative
          to the `anchorString`.

          "
        type: string
      anchorXOffsetMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorXOffset` property
          is editable.
      anchorYOffset:
        description:
          "Specifies the Y axis location of the tab in `anchorUnits` relative
          to the `anchorString`.

          "
        type: string
      anchorYOffsetMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorYOffset` property
          is editable.
      bold:
        description: When **true,** the information in the tab is bold.
        type: string
      boldMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `bold` property is editable.
      caption:
        description: ""
        type: string
      captionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `caption` property is editable.
      conditionalParentLabel:
        description:
          For conditional fields this is the `tabLabel` of the parent tab
          that controls this tab's visibility.
        type: string
      conditionalParentLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `conditionalParentLabel`
          property is editable.
      conditionalParentValue:
        description: |
          For conditional fields, this is the value of the parent tab that controls the tab's visibility.

          If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use "on" as the value to show that the parent tab is active.
        type: string
      conditionalParentValueMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `conditionalParentValue`
          property is editable.
      customTabId:
        description:
          The DocuSign-generated custom tab ID for the custom tab to be
          applied. This can only be used when adding new tabs for a recipient. When
          used, the new tab inherits all the custom tab properties.
        type: string
      customTabIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `customTabId` property is
          editable.
      documentId:
        description:
          Specifies the document ID number that the tab is placed on. This
          must refer to an existing Document's ID attribute.
        type: string
      documentIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `documentId` property is
          editable.
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      font:
        description: |
          The font to be used for the tab value. Supported fonts include:

          - Default
          - Arial
          - ArialNarrow
          - Calibri
          - CourierNew
          - Garamond
          - Georgia
          - Helvetica
          - LucidaConsole
          - MSGothic
          - MSMincho
          - OCR-A
          - Tahoma
          - TimesNewRoman
          - Trebuchet
          - Verdana
        type: string
      fontColor:
        description:
          "The font color to use for the information in the tab. Possible
          values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n-
          Gold\n- Green\n- NavyBlue\n- Purple\n- White\n"
        type: string
      fontColorMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `fontColor` property is editable.
      fontMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `font` property is editable.
      fontSize:
        description: |-
          The font size used for the information in the tab. Possible values are:

          - Size7
          - Size8
          - Size9
          - Size10
          - Size11
          - Size12
          - Size14
          - Size16
          - Size18
          - Size20
          - Size22
          - Size24
          - Size26
          - Size28
          - Size36
          - Size48
          - Size72
        type: string
      fontSizeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `fontSize` property is editable.
      formOrder:
        description:
          An integer specifying the order in which the guided form HTML
          should render. The order is relative to the `formPageLabel`, the group by
          which to place the guided form HTML block.
        type: string
      formOrderMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `formOrder` property is editable.
      formPageLabel:
        description:
          A string specifying the group in which to place the guided form
          HTML. Each group displays as a separate guided forms page in the signing
          experience.
        type: string
      formPageLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `formPageLabel` property
          is editable.
      formPageNumber:
        description:
          An integer specifying the order in which to present the guided
          form pages.
        type: string
      formPageNumberMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `fromPageNumber` property
          is editable.
      height:
        description: |-
          The height of the tab in pixels.
          Must be an integer.
        type: string
      heightMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `height` property is editable.
      italic:
        description: When **true,** the information in the tab is italic.
        type: string
      italicMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `italic` property is editable.
      listItems:
        description:
          "The list of values that can be selected by senders. The list
          values are separated by semi-colons. Example: [one;two;three;four]\n\nMaximum
          Length of listItems:  2048 characters.\nMaximum Length of items in the list:
          100 characters. \n"
        type: array
        items:
          "$ref": "#/definitions/listItem"
      listSelectedValue:
        description: The value in the list that is selected by default.
        type: string
      listSelectedValueMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `listSelectedValue` property
          is editable.
      localePolicy:
        "$ref": "#/definitions/localePolicyTab"
        description: Locale-specific settings.
      locked:
        description:
          When **true,** the signer cannot change the data of the custom
          tab.
        type: string
      lockedMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `locked` property is editable.
      mergeField:
        "$ref": "#/definitions/mergeField"
        description:
          Contains the information necessary to map the tab to a field
          in SalesForce.
      mergeFieldXml:
        description: Reserved for DocuSign.
        type: string
      originalValue:
        description: "The initial value of the tab. "
        type: string
      originalValueMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `originalValue` property
          is editable.
      pageNumber:
        description:
          "The page number on which the tab is located. For supplemental
          documents, this value must be `1`.

          "
        type: string
      pageNumberMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `pageNumber` property is
          editable.
      recipientId:
        description:
          "The ID of the recipient to whom the tab will be assigned. This
          value should match the `recipientId` defined in the recipient object.

          "
        type: string
      recipientIdGuid:
        description:
          The globally-unique identifier (GUID) for a specific recipient
          on a specific envelope. If the same recipient is associated with multiple
          envelopes, they will have a different GUID for each one. This property is
          read-only.
        type: string
      recipientIdGuidMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `recipientIdGuid` property
          is editable.
      recipientIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `recipientId` property is
          editable.
      requireAll:
        description:
          "When **true** and shared is true, information must be entered
          in this field to complete the envelope. "
        type: string
      requireAllMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `requireAll` property is
          editable.
      required:
        description: When **true,** the signer is required to fill out this tab.
        type: string
      requiredMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `required` property is editable.
      requireInitialOnSharedChange:
        description:
          Optional element for field markup. When **true,** the signer
          is required to initial when they modify a shared field.
        type: string
      requireInitialOnSharedChangeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `requireInitialOnSharedChange`
          property is editable.
      senderRequired:
        description:
          "When **true,** the sender must populate the tab before an envelope
          can be sent using the template. \n\nThis value tab can only be changed by
          modifying (PUT) the template. \n\nTabs with a `senderRequired` value of
          true cannot be deleted from an envelope."
        type: string
      senderRequiredMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `senderRequired` property
          is editable.
      shared:
        description: When **true,** this custom tab is shared.
        type: string
      sharedMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `shared` property is editable.
      shareToRecipients:
        description: Reserved for DocuSign.
        type: string
      shareToRecipientsMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Reserved for DocuSign.
      smartContractInformation:
        "$ref": "#/definitions/smartContractInformation"
        description: Reserved for DocuSign.
      source:
        description: Reserved for DocuSign.
        type: string
      status:
        description: |-
          The status of the tab. Possible values are:

          - `active`: The tab is active, but the recipient has not yet interacted with it.
          - `signed`: The recipient signed the tab.
          - `declined`: The recipient declined the envelope.
          - `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).
        type: string
      statusMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `status` property is editable.
      tabGroupLabels:
        description: |-
          An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.

          To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
        type: array
        items:
          type: string
      tabGroupLabelsMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `tabGroupLabels` property
          is editable.
      tabId:
        description: The unique identifier for the tab.
        type: string
      tabIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabId` property is editable.
      tabLabel:
        description: |
          The label associated with the tab. This value may be an empty string.
          If no value is provided, the tab type is used as the value.

          Maximum Length: 500 characters.
        type: string
      tabLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabLabel` property is editable.
      tabOrder:
        description: |-
          A positive integer that sets the order the tab is navigated to during signing.

          Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
        type: string
      tabOrderMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabOrder` property is editable.
      tabType:
        description: Indicates the type of tab (for example, `signHere` or `initialHere`).
        type: string
      tabTypeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabType` property is editable.
      templateLocked:
        description:
          "When **true,** the sender cannot change any attributes of the
          recipient. Used only when working with template recipients. "
        type: string
      templateLockedMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `templateLocked` property
          is editable.
      templateRequired:
        description:
          When **true,** the sender may not remove the recipient. Used
          only when working with template recipients.
        type: string
      templateRequiredMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `templateRequired` property
          is editable.
      tooltip:
        description:
          "The text of a tooltip that appears when a user hovers over a
          form field or tab.

          "
        type: string
      toolTipMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          "Metadata that indicates whether the `toolTip` property is editable.

          "
      underline:
        description: When **true,** the information in the tab is underlined.
        type: string
      underlineMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `underline` property is editable.
      value:
        description: The value to use when the item is selected.
        type: string
      valueMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `value` property is editable.
      width:
        description: |-
          The width of the tab in pixels.
          Must be an integer.
        type: string
      widthMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `width` property is editable.
      xPosition:
        description: |
          This property indicates the horizontal offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. Must be an integer. May be zero.

          To improve the tab's position on the document,
          DocuSign recommends
          adjusting `xPosition`
          and `yPosition`
          coordinates
          by (-3, -2)
        type: string
      xPositionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `xPosition` property is editable.
      yPosition:
        description: |
          This property indicates the vertical offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. Must be an integer. May be zero.

          To improve the tab's position on the document,
          DocuSign recommends
          adjusting `xPosition`
          and `yPosition`
          coordinates
          by (-3, -2)
        type: string
      yPositionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `yPosition` property is editable.
    description: |
      This tab offers a list of options to choose from.
      The `listItems`
      property contains a list of
      [`listItem`](/docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/)
      objects to specify the selectable options.
    x-ds-definition-name: list
    x-ms-summary: |
      This tab offers a list of options to choose from.
      The `listItems`
      property contains a list of
      [`listItem`](/docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/)
      objects to specify the selectable options.
  listCustomField:
    type: object
    properties:
      configurationType:
        description:
          If you are using merge fields, this property specifies the type
          of the merge field. The only supported value is `salesforce`.
        type: string
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      fieldId:
        description: The ID of the custom field.
        type: string
      listItems:
        description: |-
          An array of strings that represents the options in a list.

          Maximum length: 2048 characters, but each individual option string can only be a maximum of 100 characters.
        type: array
        items:
          type: string
      name:
        description: The name of the custom field.
        type: string
      required:
        description:
          When **true,** senders are required to select an option from
          the list before they can send the envelope.
        type: string
      show:
        description:
          When **true,** the field displays in the **Envelope Custom Fields**
          section when a user creates or sends an envelope.
        type: string
      value:
        description:
          The value of the custom field. This is the value that the user
          who creates or sends the envelope selects from the list.
        type: string
    description:
      This object represents a list custom field from which envelope creators
      and senders can select custom data.
    x-ds-definition-name: listCustomField
    x-ms-summary:
      This object represents a list custom field from which envelope creators
      and senders can select custom data.
  listItem:
    type: object
    properties:
      selected:
        description:
          "When **true,** indicates that this item is the default selection
          shown to a signer. \n\nOnly one selection can be set as the default."
        type: string
      selectedMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `selected` property is editable.
      text:
        description: "Specifies the text that is shown in the dropdown list. "
        type: string
      textMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: ""
      value:
        description: Specifies the value that is used when the list item is selected.
        type: string
      valueMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `value` property is editable.
    description: |-
      One of the selectable items
      in the `listItems` property
      of a [`list`](/docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/) tab.
    x-ds-definition-name: listItem
    x-ms-summary: |-
      One of the selectable items
      in the `listItems` property
      of a [`list`](/docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/) tab.
  localePolicy:
    type: object
    properties:
      addressFormat:
        description: |
          Specifies the address format. Valid values:

          - `en_us`
          - `ja_jp`
          - `zh_cn_tw`
        type: string
      addressFormatMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: Metadata that indicates if the `addressFormat` property is editable.
      allowRegion:
        description: ""
        type: string
      calendarType:
        description: |
          Specifies the type of calendar. Valid values:

          - `gregorian`
          - `japanese`
          - `buddhist`
        type: string
      calendarTypeMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          Metadata that indicates whether the `calendarType` property is
          editable.
      cultureName:
        description:
          The two letter [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes)
          language code.
        type: string
      cultureNameMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          Metadata that indicates whether the `cultureName` property is
          editable.
      currencyCode:
        description:
          "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency
          code.

          "
        type: string
      currencyCodeMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          Metadata that indicates whether the `currencyCode` property is
          editable.
      currencyNegativeFormat:
        description: |
          Determines how negative currency values
          are displayed.

          In most cases, you should not need to change
          this value. See [Explicitly define formatting](/docs/esign-rest-api/esign101/concepts/tabs/number-fields/#explicitly-define-formatting).

          Valid values:

          - `Default`<br>
            `0`
          - `OPar_CSym_1_Comma_234_Comma_567_Period_89_CPar`<br>
            `($1,234,567.89)`
          - `Minus_CSym_1_Comma_234_Comma_567_Period_89`<br>
            `-$1,234,567.89`
          - `Minus_CSym_Space_1_Period_234_Period_567_Comma_89`<br>
            `-$ 1.234.567,89`
          - `CSym_Space_Minus_1_Period_234_Period_567_Comma_89`<br>
            `$ -1.234.567,89`
          - `Minus_1_Period_234_Period_567_Comma_89_Space_CSym`<br>
            `-1.234.567,89 $`
          - `OPar_1_Space_234_Space_567_Comma_89_Space_CSym_CPar`<br>
            `(1 234 567,89 $)`
          - `Minus_1_Space_234_Space_567_Comma_89_Space_CSym`<br>
            `-1 234 567,89 $`
          - `CSym_Minus_1_Quote_234_Quote_567_Period_89`<br>
            `$-1'234'567.89`
          - `Minus_CSym_1_Period_234_Period_567_Comma_89`<br>
            `-$1.234.567,89`
          - `Minus_CSym_1_Comma_234_Comma_567`<br>
            `-$1,234,567`
          - `Minus_CSym_12_Comma_34_Comma_567_Period_89`<br>
            `-$12,34,567.89`
          - `OPar_CSym_Space_1234_Comma_567_Period_89_CPar`<br>
            `($ 1234,567.89)`
          - `CSym_Space_Minus_12_Comma_34_Comma_567_Period_89`<br>
            `$ -12,34,567.89`
          - `CSym_Minus_12_Comma_34_Comma_567_Period_89`<br>
            `$-1,234,567.89`
          - `CSym_Space_Minus_1_Space_234_Space_567_Comma_89`<br>
            `$ -1 234 567,89`
          - `CSym_Space_Minus_1_Space_234_Space_567_Period_89`<br>
            `$ -1 234 567.89`
          - `Minus_CSym_Space_1_Space_234_Space_567_Comma_89`<br>
            `-$ 1 234 567,89`
          - `Minus_1_Space_234_Space_567_Comma_89_CSym`<br>
            `-1 234 567,89$`
          - `Minus_1_Space_234_Space_567_Period_89_Space_CSym`<br>
            `-1 234 567.89 $`
          - `OPar_CSym_1_Period_234_Period_567_CPar`<br>
            `(1.234.567)`
          - `OPar_CSym_1_Comma_234_Comma_567_CPar`<br>
            `($1,234,567)`
          - `Minus_1_Comma_234_Comma_567_Period_89_Space_CSym`<br>
            `-1,234,567.89 $`
          - `Minus_CSym_Space_1_Comma_234_Comma_567_Period_89`<br>
            `-$ 1,234,567.89`
          - `OPar_CSym_Space_1_Period_234_Period_567_Comma_89_CPar`<br>
            `($ 1.234.567,89)`
          - `OPar_CSym_Space_1_Quote_234_Quote_567_Period_89_CPar`<br>
            `($ 1'234'567.89)`
          - `OPar_CSym_Space_1_Space_234_Space_567_Comma_89_CPar`<br>
            `($ 1 234 567,89)`
          - `OPar_CSym_Space_1_Space_234_Space_567_Period_89_CPar`<br>
            `($ 1 234 567.89)`
          - `OPar_CSym_12_Comma_34_Comma_567_Period_89_CPar`<br>
            `($12,34,567.89)`
          - `OPar_CSym_Space_12_Comma_34_Comma_567_Period_89_CPar`<br>
            `($ 12,34,567.89)`
          - `OPar_1_Comma_234_Comma_567_Period_89_Space_CSym_CPar`<br>
            `(1,234,567.89 $)`
          - `OPar_1_Period_234_Period_567_Comma_89_Space_CSym_CPar`<br>
            `(1.234.567,89 $)`
          - `OPar_1_Space_234_Space_567_Comma_89_CSym_CPar`<br>
            `(1 234 567,89$)`
          - `OPar_1_Space_234_Space_567_Period_89_Space_CSym_CPar`<br>
            `(1 234 567.89 $)`
          - `OPar_CSym_Space_1_Comma_234_Comma_567_Period_89_CPar`<br>
            `($ 1,234,567.89)`
          - `Minus_CSym_1_Period_234_Period_567`<br>
            `-$ 1.234.567`
          - `Minus_CSym_Space_1_Quote_234_Quote_567_Period_89`<br>
            `-$ 1'234'567.89`
          - `Minus_CSym_Space_1_Space_234_Space_567_Period_89`<br>
            `-$ 1 234 567.89`
          - `CSym_Minus_1_Comma_234_Comma_567`<br>
            `$-1,234,567`
          - `CSym_Minus_1_Period_234_Period_567`<br>
            `$-1.234.567`
          - `CSym_Space_Minus_1_Quote_234_Quote_567_Period_89`<br>
            `$ -1'234'567.89`
          - `CSym_Space_Minus_1_Comma_234_Comma_567_Period_89`<br>
            `$ -1,234,567.89`
          - `Minus_CSym_Space_12_Comma_34_Comma_567_Period_89`<br>
            `-$ 12,34,567.89`
          - `Minus_1_Period_234_Period_567_Space_CSym`<br>
            `-123.456.789 $`
          - `CSym_Minus_1_Space_234_Space_567_Comma_89`<br>
            `$-123 456 789,00`
          - `Minus_1_Quote_234_Quote_567_Period_89_Space_CSym`<br>
            `-123'456'789.00 $`
          - `CSym_1_Comma_234_Comma_567_Period_89_Minus`<br>
            `$123,456,789.00-`
          - `CSym_Minus_1_Period_234_Period_567_Comma_89`<br>
            `$-123.456.789,00`
          - `OPar_CSym_1_Period_234_Period_567_Comma_89_CPar`<br>
            `($123.456.789,00)`
          - `Minus_CSym_1234_Comma_567_Period_89`<br>
            `-$123456,789.00`
          - `Minus_CSym_1_Space_234_Space_567_Comma_89`<br>
            `-$123 456 789,00`
        type: string
      currencyNegativeFormatMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          Metadata that indicates whether the `currencyNegativeFormat`
          property is editable.
      currencyPositiveFormat:
        description: |
          Determines how positive currency values
          are displayed.

          In most cases, you should not need to change
          this value. See [Explicitly define formatting](/docs/esign-rest-api/esign101/concepts/tabs/number-fields/#explicitly-define-formatting).

          Valid values:


          - `Default`<br>
            Uses the current locale.
          - `CSym_1_Comma_234_Comma_567_Period_89`<br>
            `$1,234,567.89`
          - `CSym_Space_1_Period_234_Period_567_Comma_89`<br>
            `$ 1.234.567,89`
          - `Leading_1_Period_234_Period_567_Comma_89_Space_CSym`<br>
            `1.234.567,89 $`
          - `Leading_1_Space_234_Space_567_Comma_89_Space_CSym`<br>
            `1 234 567,89 $`
          - `CSym_Space_1_Quote_234_Quote_567_Period_89`<br>
            `$ 1'234'567.89`
          - `CSym_1_Comma_234_Comma_567`<br>
            `$1,234,567`
          - `CSym_Space_12_Comma_34_Comma_567_Period_89`<br>
            `$ 12,34,567.89`
          - `CSym_12_Comma_34_Comma_567_Period_89`<br>
            `$12,34,567.89`
          - `CSym_Space_1234_Comma_567_Period_89`<br>
            `$ 1234,567.89`
          - `Leading_1_Space_234_Space_567_Period_89_Space_CSym`<br>
            `1 234 567.89 $`
          - `CSym_Space_1_Space_234_Space_567_Comma_89`<br>
            `$ 1 234 567,89`
          - `CSym_Space_1_Space_234_Space_567_Period_89`<br>
            `$ 1 234 567.89`
          - `Leading_1_Space_234_Space_567_Comma_89_CSym`<br>
            `1 234 567,89$`
          - `CSym_1_Period_234_Period_567`<br>
            `$1.234.567`
          - `Leading_1_Comma_234_Comma_567_Period_89_Space_CSym`<br>
            `1,234,567. $` (New Armenian)
          - `CSym_Space_1_Comma_234_Comma_567_Period_89`<br>
            `$ 1,234,567.89` (Persian)
          - `CSym_1_Period_234_Period_567_Comma_89`<br>
            `$123.456.789,00` (es-CO)
          - `Leading_1_Quote_234_Quote_567_Period_89_Space_CSym`<br>
            `123'456'789.00 $` (fr-ch)
          - `CSym_1234_Comma_567_Period_89`<br>
            `$123456,789.00` (es-PR)
          - `Leading_1_Period_234_Period_567_Space_CSym`<br>
            `123.456.789 $`
          - `CSym_1_Space_234_Space_567_Comma_89`<br>
            `$123 456 789,00` (en-ZA, es-CR)
        type: string
      currencyPositiveFormatMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          Metadata that indicates whether the `currencyPositiveFormat`
          property is editable.
      customDateFormat:
        description: ""
        type: string
      customSignDateFormat:
        description: ""
        type: string
      customSignTimeFormat:
        description: ""
        type: string
      customTimeFormat:
        description: ""
        type: string
      dateFormat:
        description:
          "Specifies the date format. Valid values:\n\n- `default` <br>
          used the UI's \n- `longformat` <br> use the UI's long format\n- `dd_mm_yy`
          <br> dd-MM-yy\n- `dd_mmm_yy` <br> dd-MMM-yy\n- `dd_mm_yyyy` <br> dd-MM-yyyy\n-
          `dd_mmm_yyyy` <br> dd-MMM-yyyy\n- `ddmmmmyyyy` <br> dd MMMM yyyy\n- `ddmmyyyy`
          <br> dd/MM/yyyy\n- `ddmmyyyy_de` <br> dd.MM.yyyy\n- `dmyyyy` <br> d/M/yyyy\n-
          `d_m_yyyy` <br> d-M-yyyy\n- `mmmd_yyyy` <br> MMM d, yyyy\n- `mmm_dd_yyyy`
          <br> MMM-dd-yyyy\n- `mmmmd_yyyy` <br> MMMM d, yyyy\n- `mm_dd_yyyy` <br>
          MM-dd-yyyy\n- `mdyyyy` <br> M/d/yyyy\n- `yyyy_mmm_dd` <br> yyyy-MMM-dd\n-
          `yyyy_mm_dd` <br> yyyy-MM-dd\n- `yyyymmdd` <br> yyyy/MM/dd\n- `yyyymd` <br>
          yyyy/M/d\n- `custom` <br> Customer set own value\n- `mmddyyyy` <br> MM/dd/yyyy\n-
          `mmddyy` <br> MM/dd/yy\n- `yyyy_mmmm_d` <br> yyyy MMMM d\n"
        type: string
      dateFormatMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          Metadata that indicates whether the `dateFormat` property is
          editable.
      effectiveAddressFormat:
        description: ""
        type: string
      effectiveCalendarType:
        description: ""
        type: string
      effectiveCurrencyCode:
        description: ""
        type: string
      effectiveCurrencyNegativeFormat:
        description: ""
        type: string
      effectiveCurrencyPositiveFormat:
        description: ""
        type: string
      effectiveCustomDateFormat:
        description: ""
        type: string
      effectiveCustomTimeFormat:
        description: ""
        type: string
      effectiveDateFormat:
        description: ""
        type: string
      effectiveInitialFormat:
        description: ""
        type: string
      effectiveNameFormat:
        description: ""
        type: string
      effectiveTimeFormat:
        description: ""
        type: string
      effectiveTimeZone:
        description: ""
        type: string
      initialFormat:
        description: |
          When a user is required to enter their initials,
          this property
          specifies how initials are rendered.
          The examples show the
          initials for "William Henry Gates".


          - `first1last1`<br> "WG"
          - `last2`<br> "GA"
          - `first2`<br> "WI"
          - `last2_cjk`<br> first two characters from last name in CJK characters.

          <!-- Components/BusinessObjects/Models/ConcealedApiRestModels/localePolicyEnums.cs -->
        type: string
      initialFormatMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          Metadata that indicates whether the `initialFormat` property
          is editable.
      nameFormat:
        description: |
          Describes how names are displayed. Valid values:

          - `first_middle_last`<br>William Henry Gates
          - `full`<br>Mr William Henry Gates III
          - `last_first`<br>Gates William
          - `lastfirst`<br>GatesWilliam
          - `last_first_cjk`<br>Gates William only with CJK characters
          - `lastfirst_cjk`<br>GatesWilliam only with CJK characters

          <!-- Web/RestApi/Models/v2_1/localePolicy.cs#L341-L366 -->
        type: string
      nameFormatMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          Metadata that indicates whether the `nameFormat` property is
          editable.
      signDateFormat:
        description: |
          The format for the signature date. Valid values are:

          - `d/M/yyyy`
          - `dd-MM-yy`
          - `dd-MMM-yy`
          - `dd-MM-yyyy`
          - `dd.MM.yyyy`
          - `dd-MMM-yyyy`
          - `dd MMMM yyyy`
          - `M/d/yyyy`
          - `MM-dd-yyyy`
          - `MM/dd/yyyy`
          - `MM/dd/yy`
          - `MMM-dd-yyyy`
          - `MMM d, yyyy`
          - `MMMM d, yyyy`
          - `yyyy-MM-dd`
          - `yyyy-MMM-dd`
          - `yyyy/MM/dd`
          - `yyyy MMMM d`

          **Note:** Only Admin users can change this setting.
        type: string
      signDateFormatMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `signDateFormat` property
          is editable.

          "
      signTimeFormat:
        description: |
          The format for the signature time. Valid values are:

          - `none`
          - `HH:mm`
          - `h:mm`
          - `HH:mm:ss`
          - `h:mm:ss`
        type: string
      signTimeFormatMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `signTimeFormat` property
          is editable.

          "
      timeFormat:
        description:
          "Specifies the time format. Valid values:\n\n- `none`      <br>None\n-
          `hh_mm`     <br>hh:mm \n- `hhmm`      <br>HH:mm\n- `hhmmss`    <br>HH:mm:ss\n-
          `hhmmsstt`  <br>HH:mm:ss tt\n- `hhmmtt`    <br> HH:mm tt\n- `hmm`       <br>h:mm\n-
          `hmmss`     <br>h:mm:ss\n- `hmmsstt`   <br>h:mm:ss tt\n- `hmmtt`     <br>h:mm
          tt\n- `custom`    <br>Customer-set format\n\n<!-- Web/RestApi/Models/v2_1/localePolicy.cs#L501-L546
          -->"
        type: string
      timeFormatMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          Metadata that indicates whether the `timeFormat` property is
          editable.
      timeZone:
        description: |
          Specifies the time zone. Valid values:

          - `TZ_01_AfghanistanStandardTime`
          - `TZ_02_AlaskanStandardTime`
          - `TZ_03_ArabStandardTime`
          - `TZ_04_ArabianStandardTime`
          - `TZ_05_ArabicStandardTime`
          - `TZ_06_ArgentinaStandardTime`
          - `TZ_07_AtlanticStandardTime`
          - `TZ_08_AUS_CentralStandardTime`
          - `TZ_09_AUS_EasternStandardTime`
          - `TZ_10_AzerbaijanStandardTime`
          - `TZ_11_AzoresStandardTime`
          - `TZ_12_BangladeshStandardTime`
          - `TZ_13_CanadaCentralStandardTime`
          - `TZ_14_CapeVerdeStandardTime`
          - `TZ_15_CaucasusStandardTime`
          - `TZ_16_CentralAustraliaStandardTime`
          - `TZ_17_CentralAmericaStandardTime`
          - `TZ_18_CentralAsiaStandardTime`
          - `TZ_19_CentralBrazilianStandardTime`
          - `TZ_20_CentralEuropeStandardTime`
          - `TZ_21_CentralEuropeanStandardTime`
          - `TZ_22_CentralPacificStandardTime`
          - `TZ_23_CentralStandardTime`
          - `TZ_24_CentralStandardTimeMexico`
          - `TZ_25_ChinaStandardTime`
          - `TZ_26_DatelineStandardTime`
          - `TZ_27_E_AfricaStandardTime`
          - `TZ_28_E_AustraliaStandardTime`
          - `TZ_29_E_EuropeStandardTime`
          - `TZ_30_E_SouthAmericaStandardTime`
          - `TZ_31_EasternStandardTime`
          - `TZ_32_EgyptStandardTime`
          - `TZ_33_EkaterinburgStandardTime`
          - `TZ_34_FijiStandardTime`
          - `TZ_35_FLE_StandardTime`
          - `TZ_36_GeorgianStandardTime`
          - `TZ_37_GMT_StandardTime`
          - `TZ_38_GreenlandStandardTime`
          - `TZ_39_GreenwichStandardTime`
          - `TZ_40_GTB_StandardTime`
          - `TZ_41_HawaiianStandardTime`
          - `TZ_42_IndiaStandardTime`
          - `TZ_43_IranStandardTime`
          - `TZ_44_IsraelStandardTime`
          - `TZ_45_JordanStandardTime`
          - `TZ_46_KaliningradStandardTime`
          - `TZ_47_KamchatkaStandardTime`
          - `TZ_48_KoreaStandardTime`
          - `TZ_49_MagadanStandardTime`
          - `TZ_50_MauritiusStandardTime`
          - `TZ_51_MidAtlanticStandardTime`
          - `TZ_52_MiddleEastStandardTime`
          - `TZ_53_MontevideoStandardTime`
          - `TZ_54_MoroccoStandardTime`
          - `TZ_55_MountainStandardTime`
          - `TZ_56_MountainStandardTimeMMexico`
          - `TZ_57_MyanmarStandardTime`
          - `TZ_58_N_CentralAsiaStandardTime`
          - `TZ_59_NamibiaStandardTime`
          - `TZ_60_NepalStandardTime`
          - `TZ_61_NewZealandStandardTime`
          - `TZ_62_NewfoundlandStandardTime`
          - `TZ_63_NorthAsiaEastStandardTime`
          - `TZ_64_NorthAsiaStandardTime`
          - `TZ_65_PacificSAStandardTime`
          - `TZ_66_PacificStandardTime`
          - `TZ_67_PacificStandardTimeMexico`
          - `TZ_68_PakistanStandardTime`
          - `TZ_69_ParaguayStandardTime`
          - `TZ_70_RomanceStandardTime`
          - `TZ_71_RussianStandardTime`
          - `TZ_72_SAEasternStandardTime`
          - `TZ_73_SAPacificStandardTime`
          - `TZ_74_SAWesternStandardTime`
          - `TZ_75_SamoaStandardTime`
          - `TZ_76_SE_AsiaStandardTime`
          - `TZ_77_SingaporeStandardTime`
          - `TZ_78_SouthAfricaStandardTime`
          - `TZ_79_SriLankaStandardTime`
          - `TZ_80_SyriaStandardTime`
          - `TZ_81_TaipeiStandardTime`
          - `TZ_82_TasmaniaStandardTime`
          - `TZ_83_TokyoStandardTime`
          - `TZ_84_TongaStandardTime`
          - `TZ_85_TurkeyStandardTime`
          - `TZ_86_UlaanbaatarStandardTime`
          - `TZ_87_US_EasternStandardTime`
          - `TZ_88_USMountainStandardTime`
          - `TZ_89_VenezuelaStandardTime`
          - `TZ_90_VladivostokStandardTime`
          - `TZ_91_W_AustraliaStandardTime`
          - `TZ_92_W_CentralAfricaStandardTime`
          - `TZ_93_W_EuropeStandardTime`
          - `TZ_94_WestAsiaStandardTime`
          - `TZ_95_WestPacificStandardTime`
          - `TZ_96_YakutskStandardTime`
        type: string
      timeZoneMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: Metadata that indicates whether the `timeZone` property is editable.
    x-ds-definition-name: localePolicy
    description: ""
    x-ms-summary: ""
  localePolicyTab:
    type: object
    properties:
      addressFormat:
        description: |
          Specifies the address format. Valid values:

          - `en_us`
          - `ja_jp`
          - `zh_cn_tw`
        type: string
      calendarType:
        description: |
          Specifies the type of calendar. Valid values:

          - `gregorian`
          - `japanese`
          - `buddhist`
        type: string
      cultureName:
        description:
          The two letter [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes)
          language code.
        type: string
      currencyCode:
        description: |
          The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code.

          Supported formats:

          - `AED`
          - `AFN`
          - `ALL`
          - `AMD`
          - `ANG`
          - `AOA`
          - `ARS`
          - `AUD`
          - `AWG`
          - `AZN`
          - `BAM`
          - `BBD`
          - `BDT`
          - `BGN`
          - `BHD`
          - `BIF`
          - `BMD`
          - `BND`
          - `BOB`
          - `BOV`
          - `BRL`
          - `BSD`
          - `BTN`
          - `BWP`
          - `BYN`
          - `BYR`
          - `BZD`
          - `CAD`
          - `CDF`
          - `CHE`
          - `CHF`
          - `CHW`
          - `CLF`
          - `CLP`
          - `CNY`
          - `COP`
          - `COU`
          - `CRC`
          - `CUC`
          - `CUP`
          - `CVE`
          - `CZK`
          - `DJF`
          - `DKK`
          - `DOP`
          - `DZD`
          - `EGP`
          - `ERN`
          - `ETB`
          - `EUR`
          - `FJD`
          - `FKP`
          - `GBP`
          - `GEL`
          - `GHS`
          - `GIP`
          - `GMD`
          - `GNF`
          - `GTQ`
          - `GYD`
          - `HKD`
          - `HNL`
          - `HRK`
          - `HTG`
          - `HUF`
          - `IDR`
          - `ILS`
          - `INR`
          - `IQD`
          - `IRR`
          - `ISK`
          - `JMD`
          - `JOD`
          - `JPY`
          - `KES`
          - `KGS`
          - `KHR`
          - `KMF`
          - `KPW`
          - `KRW`
          - `KWD`
          - `KYD`
          - `KZT`
          - `LAK`
          - `LBP`
          - `LKR`
          - `LRD`
          - `LSL`
          - `LYD`
          - `MAD`
          - `MDL`
          - `MGA`
          - `MKD`
          - `MMK`
          - `MNT`
          - `MOP`
          - `MRO`
          - `MUR`
          - `MVR`
          - `MWK`
          - `MXN`
          - `MXV`
          - `MYR`
          - `MZN`
          - `NAD`
          - `NGN`
          - `NIO`
          - `NOK`
          - `NPR`
          - `NZD`
          - `OMR`
          - `PAB`
          - `PEN`
          - `PGK`
          - `PHP`
          - `PKR`
          - `PLN`
          - `PYG`
          - `QAR`
          - `RON`
          - `RSD`
          - `RUB`
          - `RWF`
          - `SAR`
          - `SBD`
          - `SCR`
          - `SDG`
          - `SEK`
          - `SGD`
          - `SHP`
          - `SLL`
          - `SOS`
          - `SRD`
          - `SSP`
          - `STD`
          - `SVC`
          - `SYP`
          - `SZL`
          - `THB`
          - `TJS`
          - `TMT`
          - `TND`
          - `TOP`
          - `TRY`
          - `TTD`
          - `TWD`
          - `TZS`
          - `UAH`
          - `UGX`
          - `USD`
          - `USN`
          - `UYI`
          - `UYU`
          - `UZS`
          - `VEF`
          - `VND`
          - `VUV`
          - `WST`
          - `XAF`
          - `XAG`
          - `XAU`
          - `XBA`
          - `XBB`
          - `XBC`
          - `XBD`
          - `XCD`
          - `XDR`
          - `XOF`
          - `XPD`
          - `XPF`
          - `XPT`
          - `XSU`
          - `XTS`
          - `XUA`
          - `XXX`
          - `YER`
          - `ZAR`
          - `ZMW`
          - `ZWL`
        type: string
      currencyNegativeFormat:
        description: |
          Determines how negative currency values
          are displayed.

          In most cases, you should not need to change
          this value. See [Explicitly define formatting](/docs/esign-rest-api/esign101/concepts/tabs/number-fields/#explicitly-define-formatting).

          Valid values:

          - `Default`<br>
            `0`
          - `OPar_CSym_1_Comma_234_Comma_567_Period_89_CPar`<br>
            `($1,234,567.89)`
          - `Minus_CSym_1_Comma_234_Comma_567_Period_89`<br>
            `-$1,234,567.89`
          - `Minus_CSym_Space_1_Period_234_Period_567_Comma_89`<br>
            `-$ 1.234.567,89`
          - `CSym_Space_Minus_1_Period_234_Period_567_Comma_89`<br>
            `$ -1.234.567,89`
          - `Minus_1_Period_234_Period_567_Comma_89_Space_CSym`<br>
            `-1.234.567,89 $`
          - `OPar_1_Space_234_Space_567_Comma_89_Space_CSym_CPar`<br>
            `(1 234 567,89 $)`
          - `Minus_1_Space_234_Space_567_Comma_89_Space_CSym`<br>
            `-1 234 567,89 $`
          - `CSym_Minus_1_Quote_234_Quote_567_Period_89`<br>
            `$-1'234'567.89`
          - `Minus_CSym_1_Period_234_Period_567_Comma_89`<br>
            `-$1.234.567,89`
          - `Minus_CSym_1_Comma_234_Comma_567`<br>
            `-$1,234,567`
          - `Minus_CSym_12_Comma_34_Comma_567_Period_89`<br>
            `-$12,34,567.89`
          - `OPar_CSym_Space_1234_Comma_567_Period_89_CPar`<br>
            `($ 1234,567.89)`
          - `CSym_Space_Minus_12_Comma_34_Comma_567_Period_89`<br>
            `$ -12,34,567.89`
          - `CSym_Minus_12_Comma_34_Comma_567_Period_89`<br>
            `$-1,234,567.89`
          - `CSym_Space_Minus_1_Space_234_Space_567_Comma_89`<br>
            `$ -1 234 567,89`
          - `CSym_Space_Minus_1_Space_234_Space_567_Period_89`<br>
            `$ -1 234 567.89`
          - `Minus_CSym_Space_1_Space_234_Space_567_Comma_89`<br>
            `-$ 1 234 567,89`
          - `Minus_1_Space_234_Space_567_Comma_89_CSym`<br>
            `-1 234 567,89$`
          - `Minus_1_Space_234_Space_567_Period_89_Space_CSym`<br>
            `-1 234 567.89 $`
          - `OPar_CSym_1_Period_234_Period_567_CPar`<br>
            `(1.234.567)`
          - `OPar_CSym_1_Comma_234_Comma_567_CPar`<br>
            `($1,234,567)`
          - `Minus_1_Comma_234_Comma_567_Period_89_Space_CSym`<br>
            `-1,234,567.89 $`
          - `Minus_CSym_Space_1_Comma_234_Comma_567_Period_89`<br>
            `-$ 1,234,567.89`
          - `OPar_CSym_Space_1_Period_234_Period_567_Comma_89_CPar`<br>
            `($ 1.234.567,89)`
          - `OPar_CSym_Space_1_Quote_234_Quote_567_Period_89_CPar`<br>
            `($ 1'234'567.89)`
          - `OPar_CSym_Space_1_Space_234_Space_567_Comma_89_CPar`<br>
            `($ 1 234 567,89)`
          - `OPar_CSym_Space_1_Space_234_Space_567_Period_89_CPar`<br>
            `($ 1 234 567.89)`
          - `OPar_CSym_12_Comma_34_Comma_567_Period_89_CPar`<br>
            `($12,34,567.89)`
          - `OPar_CSym_Space_12_Comma_34_Comma_567_Period_89_CPar`<br>
            `($ 12,34,567.89)`
          - `OPar_1_Comma_234_Comma_567_Period_89_Space_CSym_CPar`<br>
            `(1,234,567.89 $)`
          - `OPar_1_Period_234_Period_567_Comma_89_Space_CSym_CPar`<br>
            `(1.234.567,89 $)`
          - `OPar_1_Space_234_Space_567_Comma_89_CSym_CPar`<br>
            `(1 234 567,89$)`
          - `OPar_1_Space_234_Space_567_Period_89_Space_CSym_CPar`<br>
            `(1 234 567.89 $)`
          - `OPar_CSym_Space_1_Comma_234_Comma_567_Period_89_CPar`<br>
            `($ 1,234,567.89)`
          - `Minus_CSym_1_Period_234_Period_567`<br>
            `-$ 1.234.567`
          - `Minus_CSym_Space_1_Quote_234_Quote_567_Period_89`<br>
            `-$ 1'234'567.89`
          - `Minus_CSym_Space_1_Space_234_Space_567_Period_89`<br>
            `-$ 1 234 567.89`
          - `CSym_Minus_1_Comma_234_Comma_567`<br>
            `$-1,234,567`
          - `CSym_Minus_1_Period_234_Period_567`<br>
            `$-1.234.567`
          - `CSym_Space_Minus_1_Quote_234_Quote_567_Period_89`<br>
            `$ -1'234'567.89`
          - `CSym_Space_Minus_1_Comma_234_Comma_567_Period_89`<br>
            `$ -1,234,567.89`
          - `Minus_CSym_Space_12_Comma_34_Comma_567_Period_89`<br>
            `-$ 12,34,567.89`
          - `Minus_1_Period_234_Period_567_Space_CSym`<br>
            `-123.456.789 $`
          - `CSym_Minus_1_Space_234_Space_567_Comma_89`<br>
            `$-123 456 789,00`
          - `Minus_1_Quote_234_Quote_567_Period_89_Space_CSym`<br>
            `-123'456'789.00 $`
          - `CSym_1_Comma_234_Comma_567_Period_89_Minus`<br>
            `$123,456,789.00-`
          - `CSym_Minus_1_Period_234_Period_567_Comma_89`<br>
            `$-123.456.789,00`
          - `OPar_CSym_1_Period_234_Period_567_Comma_89_CPar`<br>
            `($123.456.789,00)`
          - `Minus_CSym_1234_Comma_567_Period_89`<br>
            `-$123456,789.00`
          - `Minus_CSym_1_Space_234_Space_567_Comma_89`<br>
            `-$123 456 789,00`
        type: string
      currencyPositiveFormat:
        description: |
          Determines how positive currency values
          are displayed.

          In most cases, you should not need to change
          this value. See [Explicitly define formatting](/docs/esign-rest-api/esign101/concepts/tabs/number-fields/#explicitly-define-formatting).

          Valid values:


          - `Default`<br>
            Uses the current locale.
          - `CSym_1_Comma_234_Comma_567_Period_89`<br>
            `$1,234,567.89`
          - `CSym_Space_1_Period_234_Period_567_Comma_89`<br>
            `$ 1.234.567,89`
          - `Leading_1_Period_234_Period_567_Comma_89_Space_CSym`<br>
            `1.234.567,89 $`
          - `Leading_1_Space_234_Space_567_Comma_89_Space_CSym`<br>
            `1 234 567,89 $`
          - `CSym_Space_1_Quote_234_Quote_567_Period_89`<br>
            `$ 1'234'567.89`
          - `CSym_1_Comma_234_Comma_567`<br>
            `$1,234,567`
          - `CSym_Space_12_Comma_34_Comma_567_Period_89`<br>
            `$ 12,34,567.89`
          - `CSym_12_Comma_34_Comma_567_Period_89`<br>
            `$12,34,567.89`
          - `CSym_Space_1234_Comma_567_Period_89`<br>
            `$ 1234,567.89`
          - `Leading_1_Space_234_Space_567_Period_89_Space_CSym`<br>
            `1 234 567.89 $`
          - `CSym_Space_1_Space_234_Space_567_Comma_89`<br>
            `$ 1 234 567,89`
          - `CSym_Space_1_Space_234_Space_567_Period_89`<br>
            `$ 1 234 567.89`
          - `Leading_1_Space_234_Space_567_Comma_89_CSym`<br>
            `1 234 567,89$`
          - `CSym_1_Period_234_Period_567`<br>
            `$1.234.567`
          - `Leading_1_Comma_234_Comma_567_Period_89_Space_CSym`<br>
            `1,234,567. $` (New Armenian)
          - `CSym_Space_1_Comma_234_Comma_567_Period_89`<br>
            `$ 1,234,567.89` (Persian)
          - `CSym_1_Period_234_Period_567_Comma_89`<br>
            `$123.456.789,00` (es-CO)
          - `Leading_1_Quote_234_Quote_567_Period_89_Space_CSym`<br>
            `123'456'789.00 $` (fr-ch)
          - `CSym_1234_Comma_567_Period_89`<br>
            `$123456,789.00` (es-PR)
          - `Leading_1_Period_234_Period_567_Space_CSym`<br>
            `123.456.789 $`
          - `CSym_1_Space_234_Space_567_Comma_89`<br>
            `$123 456 789,00` (en-ZA, es-CR)
        type: string
      customDateFormat:
        description: ""
        type: string
      customTimeFormat:
        description: ""
        type: string
      dateFormat:
        description:
          "Specifies the date format. Valid values:\n\n- `default` <br>
          used the UI's \n- `longformat` <br> use the UI's long format\n- `dd_mm_yy`
          <br> dd-MM-yy\n- `dd_mmm_yy` <br> dd-MMM-yy\n- `dd_mm_yyyy` <br> dd-MM-yyyy\n-
          `dd_mmm_yyyy` <br> dd-MMM-yyyy\n- `ddmmmmyyyy` <br> dd MMMM yyyy\n- `ddmmyyyy`
          <br> dd/MM/yyyy\n- `ddmmyyyy_de` <br> dd.MM.yyyy\n- `dmyyyy` <br> d/M/yyyy\n-
          `d_m_yyyy` <br> d-M-yyyy\n- `mmmd_yyyy` <br> MMM d, yyyy\n- `mmm_dd_yyyy`
          <br> MMM-dd-yyyy\n- `mmmmd_yyyy` <br> MMMM d, yyyy\n- `mm_dd_yyyy` <br>
          MM-dd-yyyy\n- `mdyyyy` <br> M/d/yyyy\n- `yyyy_mmm_dd` <br> yyyy-MMM-dd\n-
          `yyyy_mm_dd` <br> yyyy-MM-dd\n- `yyyymmdd` <br> yyyy/MM/dd\n- `yyyymd` <br>
          yyyy/M/d\n- `custom` <br> Customer set own value\n- `mmddyyyy` <br> MM/dd/yyyy\n-
          `mmddyy` <br> MM/dd/yy\n- `yyyy_mmmm_d` <br> yyyy MMMM d\n"
        type: string
      initialFormat:
        description: |
          When a user is required to enter their initials,
          this property
          specifies how initials are rendered.
          The examples show the
          initials for "William Henry Gates".


          - `first1last1`<br> "WG"
          - `last2`<br> "GA"
          - `first2`<br> "WI"
          - `last2_cjk`<br> first two characters from last name in CJK characters.

          <!-- Components/BusinessObjects/Models/ConcealedApiRestModels/localePolicyEnums.cs -->
        type: string
      nameFormat:
        description: |
          Describes how names are displayed. Valid values:

          - `first_middle_last`<br>William Henry Gates
          - `full`<br>Mr William Henry Gates III
          - `last_first`<br>Gates William
          - `lastfirst`<br>GatesWilliam
          - `last_first_cjk`<br>Gates William only with CJK characters
          - `lastfirst_cjk`<br>GatesWilliam only with CJK characters

          <!-- Web/RestApi/Models/v2_1/localePolicy.cs#L341-L366 -->
        type: string
      timeFormat:
        description:
          "Specifies the time format. Valid values:\n\n- `none`      <br>None\n-
          `hh_mm`     <br>hh:mm \n- `hhmm`      <br>HH:mm\n- `hhmmss`    <br>HH:mm:ss\n-
          `hhmmsstt`  <br>HH:mm:ss tt\n- `hhmmtt`    <br> HH:mm tt\n- `hmm`       <br>h:mm\n-
          `hmmss`     <br>h:mm:ss\n- `hmmsstt`   <br>h:mm:ss tt\n- `hmmtt`     <br>h:mm
          tt\n- `custom`    <br>Customer-set format\n\n<!-- Web/RestApi/Models/v2_1/localePolicy.cs#L501-L546
          -->"
        type: string
      timeZone:
        description: |
          Specifies the time zone. Valid values:

          - `TZ_01_AfghanistanStandardTime`
          - `TZ_02_AlaskanStandardTime`
          - `TZ_03_ArabStandardTime`
          - `TZ_04_ArabianStandardTime`
          - `TZ_05_ArabicStandardTime`
          - `TZ_06_ArgentinaStandardTime`
          - `TZ_07_AtlanticStandardTime`
          - `TZ_08_AUS_CentralStandardTime`
          - `TZ_09_AUS_EasternStandardTime`
          - `TZ_10_AzerbaijanStandardTime`
          - `TZ_11_AzoresStandardTime`
          - `TZ_12_BangladeshStandardTime`
          - `TZ_13_CanadaCentralStandardTime`
          - `TZ_14_CapeVerdeStandardTime`
          - `TZ_15_CaucasusStandardTime`
          - `TZ_16_CentralAustraliaStandardTime`
          - `TZ_17_CentralAmericaStandardTime`
          - `TZ_18_CentralAsiaStandardTime`
          - `TZ_19_CentralBrazilianStandardTime`
          - `TZ_20_CentralEuropeStandardTime`
          - `TZ_21_CentralEuropeanStandardTime`
          - `TZ_22_CentralPacificStandardTime`
          - `TZ_23_CentralStandardTime`
          - `TZ_24_CentralStandardTimeMexico`
          - `TZ_25_ChinaStandardTime`
          - `TZ_26_DatelineStandardTime`
          - `TZ_27_E_AfricaStandardTime`
          - `TZ_28_E_AustraliaStandardTime`
          - `TZ_29_E_EuropeStandardTime`
          - `TZ_30_E_SouthAmericaStandardTime`
          - `TZ_31_EasternStandardTime`
          - `TZ_32_EgyptStandardTime`
          - `TZ_33_EkaterinburgStandardTime`
          - `TZ_34_FijiStandardTime`
          - `TZ_35_FLE_StandardTime`
          - `TZ_36_GeorgianStandardTime`
          - `TZ_37_GMT_StandardTime`
          - `TZ_38_GreenlandStandardTime`
          - `TZ_39_GreenwichStandardTime`
          - `TZ_40_GTB_StandardTime`
          - `TZ_41_HawaiianStandardTime`
          - `TZ_42_IndiaStandardTime`
          - `TZ_43_IranStandardTime`
          - `TZ_44_IsraelStandardTime`
          - `TZ_45_JordanStandardTime`
          - `TZ_46_KaliningradStandardTime`
          - `TZ_47_KamchatkaStandardTime`
          - `TZ_48_KoreaStandardTime`
          - `TZ_49_MagadanStandardTime`
          - `TZ_50_MauritiusStandardTime`
          - `TZ_51_MidAtlanticStandardTime`
          - `TZ_52_MiddleEastStandardTime`
          - `TZ_53_MontevideoStandardTime`
          - `TZ_54_MoroccoStandardTime`
          - `TZ_55_MountainStandardTime`
          - `TZ_56_MountainStandardTimeMMexico`
          - `TZ_57_MyanmarStandardTime`
          - `TZ_58_N_CentralAsiaStandardTime`
          - `TZ_59_NamibiaStandardTime`
          - `TZ_60_NepalStandardTime`
          - `TZ_61_NewZealandStandardTime`
          - `TZ_62_NewfoundlandStandardTime`
          - `TZ_63_NorthAsiaEastStandardTime`
          - `TZ_64_NorthAsiaStandardTime`
          - `TZ_65_PacificSAStandardTime`
          - `TZ_66_PacificStandardTime`
          - `TZ_67_PacificStandardTimeMexico`
          - `TZ_68_PakistanStandardTime`
          - `TZ_69_ParaguayStandardTime`
          - `TZ_70_RomanceStandardTime`
          - `TZ_71_RussianStandardTime`
          - `TZ_72_SAEasternStandardTime`
          - `TZ_73_SAPacificStandardTime`
          - `TZ_74_SAWesternStandardTime`
          - `TZ_75_SamoaStandardTime`
          - `TZ_76_SE_AsiaStandardTime`
          - `TZ_77_SingaporeStandardTime`
          - `TZ_78_SouthAfricaStandardTime`
          - `TZ_79_SriLankaStandardTime`
          - `TZ_80_SyriaStandardTime`
          - `TZ_81_TaipeiStandardTime`
          - `TZ_82_TasmaniaStandardTime`
          - `TZ_83_TokyoStandardTime`
          - `TZ_84_TongaStandardTime`
          - `TZ_85_TurkeyStandardTime`
          - `TZ_86_UlaanbaatarStandardTime`
          - `TZ_87_US_EasternStandardTime`
          - `TZ_88_USMountainStandardTime`
          - `TZ_89_VenezuelaStandardTime`
          - `TZ_90_VladivostokStandardTime`
          - `TZ_91_W_AustraliaStandardTime`
          - `TZ_92_W_CentralAfricaStandardTime`
          - `TZ_93_W_EuropeStandardTime`
          - `TZ_94_WestAsiaStandardTime`
          - `TZ_95_WestPacificStandardTime`
          - `TZ_96_YakutskStandardTime`
        type: string
      useLongCurrencyFormat:
        description: When **true,** use the long currency format for the locale.
        type: string
    x-ds-definition-name: localePolicyTab
    description: Allows you to customize locale settings.
    x-ms-summary: Allows you to customize locale settings.
  lockInformation:
    type: object
    properties:
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      lockDurationInSeconds:
        description:
          The number of seconds to lock the envelope for editing.  This
          value must be greater than `0` seconds.
        type: string
      lockedByApp:
        description:
          The human-readable name of the application that is locking the
          envelope or template. This value displays to the user in error messages
          when lock conflicts occur.
        type: string
      lockedByUser:
        "$ref": "#/definitions/userInfo"
        description:
          A complex type containing information about the user that has
          the envelope or template locked.
      lockedUntilDateTime:
        description: The date and time that the lock expires.
        type: string
      lockToken:
        description:
          A unique identifier provided to the owner of the lock. You must
          use this token with subsequent calls to prove ownership of the lock.
        type: string
      lockType:
        description: The type of lock.  Currently `edit` is the only supported type.
        type: string
      useScratchPad:
        description: "When **true,** a scratchpad is used to edit information.\n "
        type: string
    x-ds-definition-name: lockInformation
    description: ""
    x-ms-summary: ""
  lockRequest:
    type: object
    properties:
      lockDurationInSeconds:
        description:
          The number of seconds to lock the envelope for editing.  Must
          be greater than 0 seconds.
        type: string
      lockedByApp:
        description:
          A friendly name of the application used to lock the envelope.  Will
          be used in error messages to the user when lock conflicts occur.
        type: string
      lockType:
        description: The type of lock.  Currently `edit` is the only supported type.
        type: string
      templatePassword:
        description:
          The [password for the template](https://support.docusign.com/s/document-item?bundleId=xry1643227563338&topicId=xwo1578456395432.html).
          If you are using a lock for a template that has a password or an envelope
          that is based on a template that has a password, you must enter the `templatePassword`
          to save the changes.
        type: string
      useScratchPad:
        description: "When **true,** a scratchpad is used to edit information.\n "
        type: string
    description:
      This request object contains information about the lock that you
      want to create or update.
    x-ds-definition-name: lockRequest
    x-ms-summary:
      This request object contains information about the lock that you
      want to create or update.
  loginAccount:
    type: object
    properties:
      accountId:
        description: The account ID associated with the envelope.
        type: string
      accountIdGuid:
        description: The GUID associated with the account ID.
        type: string
      baseUrl:
        description:
          The URL that should be used for successive calls to this account.
          It includes the protocal (https), the DocuSign server where the account
          is located, and the account number. Use this Url to make API calls against
          this account. Many of the API calls provide Uri's that are relative to this
          baseUrl.
        type: string
      email:
        description: The email address for the user.
        type: string
      isDefault:
        description:
          This value is true if this is the default account for the user,
          otherwise false is returned.
        type: string
      loginAccountSettings:
        description:
          A list of settings on the account that indicate what features
          are available.
        type: array
        items:
          "$ref": "#/definitions/nameValue"
      loginUserSettings:
        description:
          A list of user-level settings that indicate what user-specific
          features are available.
        type: array
        items:
          "$ref": "#/definitions/nameValue"
      name:
        description: The name associated with the account.
        type: string
      siteDescription:
        description: An optional descirption of the site that hosts the account.
        type: string
      userId:
        description: |-
          The ID of the user to access.

          **Note:** Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.
        type: string
      userName:
        description: The name of this user as defined by the account.
        type: string
    x-ds-definition-name: loginAccount
    description: ""
    x-ms-summary: ""
  loginInformation:
    type: object
    properties:
      apiPassword:
        description:
          Contains a token that can be used for authentication in API calls
          instead of using the user name and password. Only returned if the `api_password=true`
          query string is added to the URL.
        type: string
      loginAccounts:
        description: The list of accounts that authenticating user is a member of.
        type: array
        items:
          "$ref": "#/definitions/loginAccount"
    x-ds-definition-name: loginInformation
    description: ""
    x-ms-summary: ""
  matchBox:
    type: object
    properties:
      height:
        description: |-
          The height of the tab in pixels.
          Must be an integer.
        type: string
      pageNumber:
        description: |
          Specifies the page number on which the tab is located.
          Must be 1 for supplemental documents.
        type: string
      width:
        description: |-
          The width of the tab in pixels.
          Must be an integer.
        type: string
      xPosition:
        description: |
          This property indicates the horizontal offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. Must be an integer. May be zero.
        type: string
      yPosition:
        description: |
          This property indicates the vertical offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. Must be an integer. May be zero.
        type: string
    x-ds-definition-name: matchBox
    description: ""
    x-ms-summary: ""
  memberGroupSharedItem:
    type: object
    properties:
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      group:
        "$ref": "#/definitions/group"
        description: The group sharing the item.
      shared:
        description: |-
          How the item is shared. One of:


          - `not_shared`: The item is not shared.

          - `shared_to`: The item is shared.
        type: string
    description: Information about items shared among groups.
    x-ds-definition-name: memberGroupSharedItem
    x-ms-summary: Information about items shared among groups.
  memberSharedItems:
    type: object
    properties:
      envelopes:
        description: List of information about shared envelopes.
        type: array
        items:
          "$ref": "#/definitions/sharedItem"
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      folders:
        description: List of information about shared folders.
        type: array
        items:
          "$ref": "#/definitions/folderSharedItem"
      templates:
        description: List of information about shared templates.
        type: array
        items:
          "$ref": "#/definitions/templateSharedItem"
      user:
        "$ref": "#/definitions/userInfo"
        description: Information about the user requesting sharing information.
    description: Information about shared items.
    x-ds-definition-name: memberSharedItems
    x-ms-summary: Information about shared items.
  mergeField:
    description:
      "Contains information for transferring values between Salesforce
      data fields and DocuSign tabs.

      "
    type: object
    properties:
      allowSenderToEdit:
        description:
          When **true,** the sender can modify the value of the `mergeField`
          tab during the sending process.
        type: string
      allowSenderToEditMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates if the sender can edit the `allowSenderToEdit`
          property.
      configurationType:
        description:
          If you are using merge fields, this property specifies the type
          of the merge field. The only supported value is `salesforce`.
        type: string
      configurationTypeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates if the sender can edit the `configurationType`
          property.
      path:
        description:
          Sets the object associated with the custom tab. Currently this
          is the Salesforce Object.
        type: string
      pathExtended:
        description: Reserved for DocuSign.
        type: array
        items:
          "$ref": "#/definitions/pathExtendedElement"
      pathExtendedMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Reserved for DocuSign.
      pathMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          "Metadata that indicates whether the `path` property is editable.

          "
      row:
        description:
          Specifies the row number in a Salesforce table that the merge
          field value corresponds to.
        type: string
      rowMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          "Metadata that indicates whether the `row` property is editable.

          "
      writeBack:
        description:
          When **true,** data entered into the merge field during Signing
          will update the mapped Salesforce field.
        type: string
      writeBackMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates if the sender can edit the `writeBack`
          property.
    x-ds-definition-name: mergeField
    x-ms-summary:
      "Contains information for transferring values between Salesforce
      data fields and DocuSign tabs.

      "
  mobileNotifierConfiguration:
    type: object
    properties:
      deviceId:
        description: ""
        type: string
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      platform:
        description: The Platform of the client application
        type: string
    x-ds-definition-name: mobileNotifierConfiguration
    description: ""
    x-ms-summary: ""
  mobileNotifierConfigurationInformation:
    type: object
    properties:
      mobileNotifierConfigurations:
        description: ""
        type: array
        items:
          "$ref": "#/definitions/mobileNotifierConfiguration"
    x-ds-definition-name: mobileNotifierConfigurationInformation
    description: ""
    x-ms-summary: ""
  money:
    type: object
    properties:
      amountInBaseUnit:
        description: |
          The total payment amount
          in the currency's base unit.
          For example, for USD
          the base currency is one cent.
        type: string
      currency:
        description: |
          The three-letter
          [ISO 4217][ISO 4217] currency code for the payment.

          For example:

          * AUD Australian dollar
          * CAD Canadian dollar
          * EUR Euro
          * GBP Great Britain pound
          * USD United States dollar

          This is a read-only property.

          [ISO 4217]:          https://en.wikipedia.org/wiki/ISO_4217
        type: string
      displayAmount:
        description: |
          The payment amount as displayed
          in the `currency`.

          For example, if the payment amount
          is USD 12.59,
          the `amountInBaseUnit` is 1259 (cents),
          and the displayed amount is `$12.59 USD`.

          This is a read-only property.
        type: string
    description: |
      Describes information
      about the `total` of a payment.
    x-ds-definition-name: money
    x-ms-summary: |
      Describes information
      about the `total` of a payment.
  nameValue:
    type: object
    properties:
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      name:
        description: The name of the item.
        type: string
      originalValue:
        description: The initial value of the item.
        type: string
      value:
        description: The current value of the item.
        type: string
    description:
      A name-value pair that describes an item and provides a value for
      the item.
    x-ds-definition-name: nameValue
    x-ms-summary:
      A name-value pair that describes an item and provides a value for
      the item.
  newAccountDefinition:
    type: object
    properties:
      accountName:
        description: The account name for the new account.
        type: string
      accountSettings:
        "$ref": "#/definitions/accountSettingsInformation"
        description: |+
          The list of
          account settings accountsettings
          that determine
          the features available for the account.
          Note that some features are determined
          by the plan used to create the account and cannot be overridden.

      addressInformation:
        "$ref": "#/definitions/accountAddress"
        description:
          "A complex type that contains the following information for the
          new account: `Street1`, `Street2`, `City`, `State`, `Zip`, `Phone`, and
          `Fax`."
      creditCardInformation:
        "$ref": "#/definitions/creditCardInformation"
        description:
          A complex type that has information about the credit card used
          to pay for this account.
      directDebitProcessorInformation:
        "$ref": "#/definitions/directDebitProcessorInformation"
        description:
          Information about the bank that processes direct debits for the
          payment plan.
      distributorCode:
        description: The Distributor Code that you received from DocuSign.
        type: string
      distributorPassword:
        description: The password for the `distributorCode`.
        type: string
      enablePreAuth:
        description: ""
        type: string
      envelopePartitionId:
        description: Reserved for DocuSign.
        type: string
      initialUser:
        "$ref": "#/definitions/userInformation"
        description:
          A complex type with the initial user information for the new
          account. Note that some user information is set internally based on the
          plan and cannot be overridden.
      paymentMethod:
        description: |-
          The payment method used for the billing plan. Valid values are:

          - `NotSupported`
          - `CreditCard`
          - `PurchaseOrder`
          - `Premium`
          - `Freemium`
          - `FreeTrial`
          - `AppStore`
          - `DigitalExternal`
          - `DirectDebit`
        type: string
      paymentProcessor:
        description: ""
        type: string
      paymentProcessorInformation:
        "$ref": "#/definitions/paymentProcessorInformation"
        description:
          Information about the entity that processes payments for the
          billing plan.
      planInformation:
        "$ref": "#/definitions/planInformation"
        description:
          An object used to identify the features and attributes of the
          account being created.
      processPayment:
        description: ""
        type: string
      referralInformation:
        "$ref": "#/definitions/referralInformation"
        description:
          A complex type that contains properties for entering referral
          and discount information.
      socialAccountInformation:
        "$ref": "#/definitions/socialAccountInformation"
        description:
          Contains properties that map a DocuSign user to a social account
          such as Facebook or Yahoo.
      taxExemptId:
        description: ""
        type: string
    x-ds-definition-name: newAccountDefinition
    description: ""
    x-ms-summary: ""
  newAccountSummary:
    type: object
    properties:
      accountId:
        description: The account ID associated with the envelope.
        type: string
      accountIdGuid:
        description: The GUID associated with the account ID.
        type: string
      accountName:
        description: The account name for the new account.
        type: string
      apiPassword:
        description:
          Contains a token that can be used for authentication in API calls
          instead of using the user name and password.
        type: string
      baseUrl:
        description:
          The URL that should be used for successive calls to this account.
          It includes the protocal (https), the DocuSign server where the account
          is located, and the account number. Use this Url to make API calls against
          this account. Many of the API calls provide Uri's that are relative to this
          baseUrl.
        type: string
      billingPlanPreview:
        "$ref": "#/definitions/billingPlanPreview"
        description: ""
      userId:
        description: Specifies the user ID of the new user.
        type: string
    x-ds-definition-name: newAccountSummary
    description: ""
    x-ms-summary: ""
  newUser:
    type: object
    properties:
      apiPassword:
        description:
          Contains a token that can be used for authentication in API calls
          instead of using the user name and password.
        type: string
      createdDateTime:
        description: The UTC DateTime when the item was created.
        type: string
      email:
        description: The user's email address.
        type: string
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      membershipId:
        description: The user's membership ID.
        type: string
      permissionProfileId:
        description: |
          The ID of the permission profile.

          Use [AccountPermissionProfiles: list](/docs/esign-rest-api/reference/accounts/accountpermissionprofiles/list/)
          to get a list of permission profiles and their IDs.

          You can also download a CSV file of all permission profiles
          and their IDs from the **Settings > Permission Profiles** page
          of your eSignature account page.
        type: string
      permissionProfileName:
        description:
          "The name of the account permission profile. \n\nExample: `Account
          Administrator`"
        type: string
      uri:
        description: A URI containing the user ID.
        type: string
      userId:
        description: Specifies the user ID for the new user.
        type: string
      userName:
        description: The name of the user.
        type: string
      userStatus:
        description: |
          Status of the user's account. One of:

          - `ActivationRequired`
          - `ActivationSent`
          - `Active`
          - `Closed`
          - `Disabled`
        type: string
    description: Object representing a new user.
    x-ds-definition-name: newUser
    x-ms-summary: Object representing a new user.
  newUsersDefinition:
    type: object
    properties:
      newUsers:
        description: A list of one or more new users.
        type: array
        items:
          "$ref": "#/definitions/userInformation"
    x-ds-definition-name: newUsersDefinition
    description: ""
    x-ms-summary: ""
  newUsersSummary:
    type: object
    properties:
      newUsers:
        description: A list of one or more new users.
        type: array
        items:
          "$ref": "#/definitions/newUser"
    description: Object representing a summary of data for new users.
    x-ds-definition-name: newUsersSummary
    x-ms-summary: Object representing a summary of data for new users.
  notarize:
    type: object
    properties:
      anchorAllowWhiteSpaceInCharacters:
        description: |
          When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.

          First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.

          Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.

          The default value is **true.**
        type: string
      anchorAllowWhiteSpaceInCharactersMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorAllowWhiteSpaceInCharacters`
          property is editable.
      anchorCaseSensitive:
        description: |-
          This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**

          For example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.

          This functionality uses the following rules:

          - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:

            $~><|^+=

            For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`

          - Strings embedded in other strings are ignored during the matching process.

          - In words that have dashes, the parts separated by dashes are treated as distinct words.

            Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**

          - Letters with accent marks are treated as distinct characters from their unaccented counterparts.

          - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.

            Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.

          - Unlike punctuation, numbers are not ignored when finding anchor words.

            Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).

          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorCaseSensitiveMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorCaseSensitive` property
          is editable.
      anchorHorizontalAlignment:
        description: |
          This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :

          - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.
          - `right`: Aligns the tab’s left side with the last character of the matching anchor word.

          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorHorizontalAlignmentMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorHorizontalAlignment`
          property is editable.
      anchorIgnoreIfNotPresent:
        description:
          When **true,** this tab is ignored if the `anchorString` is not
          found in the document.
        type: string
      anchorIgnoreIfNotPresentMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorIgnoreIfNotPresent`
          property is editable.
      anchorMatchWholeWord:
        description: |
          When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**

          For example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.

          This functionality uses the following rules:

          - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:

            $~><|^+=

            For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`

          - Strings embedded in other strings are ignored during the matching process.

          - In words that have dashes, the parts separated by dashes are treated as distinct words.

            Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**

          - Letters with accent marks are treated as distinct characters from their unaccented counterparts.

          - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.

            Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.

          - Unlike punctuation, numbers are not ignored when finding anchor words.

            Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).


          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorMatchWholeWordMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorMatchWholeWord` property
          is editable.
      anchorString:
        description:
          Specifies the string to find in the document and use as the basis
          for tab placement.
        type: string
      anchorStringMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorString` property is
          editable.
      anchorTabProcessorVersion:
        description: Reserved for DocuSign.
        type: string
      anchorTabProcessorVersionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Reserved for DocuSign.
      anchorUnits:
        description: |
          Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:

          - `pixels` (default)
          - `inches`
          - `mms`
          - `cms`
        type: string
      anchorUnitsMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorUnits` property is
          editable.
      anchorXOffset:
        description:
          "Specifies the X axis location of the tab in `anchorUnits` relative
          to the `anchorString`.

          "
        type: string
      anchorXOffsetMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorXOffset` property
          is editable.
      anchorYOffset:
        description:
          "Specifies the Y axis location of the tab in `anchorUnits` relative
          to the `anchorString`.

          "
        type: string
      anchorYOffsetMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorYOffset` property
          is editable.
      caption:
        description: ""
        type: string
      captionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `caption` property is editable.
      conditionalParentLabel:
        description:
          For conditional fields this is the `tabLabel` of the parent tab
          that controls this tab's visibility.
        type: string
      conditionalParentLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `conditionalParentLabel`
          property is editable.
      conditionalParentValue:
        description: |
          For conditional fields, this is the value of the parent tab that controls the tab's visibility.

          If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use "on" as the value to show that the parent tab is active.
        type: string
      conditionalParentValueMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `conditionalParentValue`
          property is editable.
      customTabId:
        description:
          The DocuSign generated custom tab ID for the custom tab to be
          applied. This can only be used when adding new tabs for a recipient. When
          used, the new tab inherits all the custom tab properties.
        type: string
      customTabIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `customTabId` property is
          editable.
      documentId:
        description:
          Specifies the document ID number that the tab is placed on. This
          must refer to an existing Document's ID attribute.
        type: string
      documentIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `documentId` property is
          editable.
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      formOrder:
        description:
          An integer specifying the order in which the guided form HTML
          should render. The order is relative to the `formPageLabel`, the group by
          which to place the guided form HTML block.
        type: string
      formOrderMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `formOrder` property is editable.
      formPageLabel:
        description:
          A string specifying the group in which to place the guided form
          HTML. Each group displays as a separate guided forms page in the signing
          experience.
        type: string
      formPageLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `formPageLabel` property
          is editable.
      formPageNumber:
        description:
          An integer specifying the order in which to present the guided
          form pages.
        type: string
      formPageNumberMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `fromPageNumber` property
          is editable.
      height:
        description: |-
          The height of the tab in pixels.
          Must be an integer.
        type: string
      heightMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `height` property is editable.
      locked:
        description:
          When **true,** the signer cannot change the data of the custom
          tab.
        type: string
      lockedMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `locked` property is editable.
      mergeField:
        "$ref": "#/definitions/mergeField"
        description:
          Contains the information necessary to map the tab to a field
          in SalesForce.
      mergeFieldXml:
        description: Reserved for DocuSign.
        type: string
      pageNumber:
        description: Specifies the page number on which the tab is located.
        type: string
      pageNumberMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `pageNumber` property is
          editable.
      recipientId:
        description:
          "The ID of the recipient to whom the tab will be assigned. This
          value should match the `recipientId` defined in the recipient object.

          "
        type: string
      recipientIdGuid:
        description:
          The globally-unique identifier (GUID) for a specific recipient
          on a specific envelope. If the same recipient is associated with multiple
          envelopes, they will have a different GUID for each one. This property is
          read-only.
        type: string
      recipientIdGuidMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `recipientIdGuid` property
          is editable.
      recipientIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `recipientId` property is
          editable.
      required:
        description: When **true,** the signer is required to fill out this tab.
        type: string
      requiredMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `required` property is editable.
      smartContractInformation:
        "$ref": "#/definitions/smartContractInformation"
        description: Reserved for DocuSign.
      source:
        description: Reserved for DocuSign.
        type: string
      status:
        description: |-
          The status of the tab. Possible values are:

          - `active`: The tab is active, but the recipient has not yet interacted with it.
          - `signed`: The recipient signed the tab.
          - `declined`: The recipient declined the envelope.
          - `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).
        type: string
      statusMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `status` property is editable.
      tabGroupLabels:
        description: |-
          An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.

          To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
        type: array
        items:
          type: string
      tabGroupLabelsMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `tabGroupLabels` property
          is editable.
      tabId:
        description: The unique identifier for the tab.
        type: string
      tabIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabId` property is editable.
      tabOrder:
        description: |-
          A positive integer that sets the order the tab is navigated to during signing.

          Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
        type: string
      tabOrderMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabOrder` property is editable.
      tabType:
        description: Indicates the type of tab (for example, `signHere` or `initialHere`).
        type: string
      tabTypeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabType` property is editable.
      templateLocked:
        description:
          "When **true,** the sender cannot change any attributes of the
          recipient. Used only when working with template recipients. "
        type: string
      templateLockedMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `templateLocked` property
          is editable.
      templateRequired:
        description:
          When **true,** the sender may not remove the recipient. Used
          only when working with template recipients.
        type: string
      templateRequiredMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `templateRequired` property
          is editable.
      tooltip:
        description:
          "The text of a tooltip that appears when a user hovers over a
          form field or tab.

          "
        type: string
      toolTipMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          "Metadata that indicates whether the `toolTip` property is editable.

          "
      width:
        description: |-
          The width of the tab in pixels.
          Must be an integer.
        type: string
      widthMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `width` property is editable.
      xPosition:
        description: |+
          This property indicates the horizontal offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. Must be an integer. May be zero.

        type: string
      xPositionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `xPosition` property is editable.
      yPosition:
        description: |+
          This property indicates the vertical offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. Must be an integer. May be zero.

        type: string
      yPositionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `yPosition` property is editable.
    description: |-
      A tab that alerts notary recipients that
      they must take action on the page.
      Only one notarize tab can appear on a page.
    x-ds-definition-name: notarize
    x-ms-summary: |-
      A tab that alerts notary recipients that
      they must take action on the page.
      Only one notarize tab can appear on a page.
  notary:
    type: object
    properties:
      createdDate:
        description: The creation date of the account in UTC timedate format.
        type: string
      enabled:
        description: The date the this object was created.
        type: string
      searchable:
        description: When **true,** this notary is searchable.
        type: string
      userInfo:
        "$ref": "#/definitions/userInformation"
        description: Information about the user registering to be a notary.
    x-ds-definition-name: notary
    description: ""
    x-ms-summary: ""
  notaryContactDetails:
    type: object
    properties:
      hasDocusignCertificate:
        description: ""
        type: string
      jurisdictions:
        description: ""
        type: array
        items:
          "$ref": "#/definitions/jurisdictionSummary"
    x-ds-definition-name: notaryContactDetails
    description: ""
    x-ms-summary: ""
  notaryHost:
    type: object
    properties:
      accessCode:
        description:
          "If a value is provided, the recipient must enter the value as
          the access code to view and sign the envelope. \n\nMaximum Length: 50 characters
          and it must conform to the account's access code format setting.\n\nIf blank,
          but the signer `accessCode` property is set in the envelope, then that value
          is used.\n\nIf blank and the signer `accessCode` property is not set, then
          the access code is not required."
        type: string
      accessCodeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `accessCode` property is
          editable. This property is read-only.
      addAccessCodeToEmail:
        description:
          Optional. When **true,** the access code will be added to the
          email sent to the recipient. This nullifies the security measure of `accessCode`
          on the recipient.
        type: string
      allowSystemOverrideForLockedRecipient:
        description:
          When **true,** if the recipient is locked on a template, advanced
          recipient routing can override the lock.
        type: string
      autoRespondedReason:
        description:
          "Error message provided by the destination email system. This
          field is only provided if the email notification to the recipient fails
          to send. This property is read-only.

          "
        type: string
      bulkSendV2Recipient:
        description: ""
        type: string
      clientUserId:
        description:
          "Specifies whether the recipient is embedded or remote. \n\nIf
          the `clientUserId` property is not null then the recipient is embedded.
          Use this field to associate the signer with their userId in your app. Authenticating
          the user is the responsibility of your app when you use embedded signing.\n\nIf
          the `clientUserId` property is set and either `SignerMustHaveAccount` or
          `SignerMustLoginToSign` property of the account settings is set to  **true,**
          an error is generated on sending.\n\n**Note:** This property is not returned
          by the [listStatusChanges](/docs/esign-rest-api/reference/envelopes/envelopes/liststatuschanges/)
          endpoint.\n\nMaximum length: 100 characters. \n"
        type: string
      completedCount:
        description:
          Indicates the number of times that the recipient has been through
          a signing completion for the envelope. If this number is greater than 0
          for a signing group, only the user who previously completed may sign again.
          This property is read-only.
        type: string
      customFields:
        description:
          An optional array of strings that allows the sender to provide
          custom data about the recipient. This information is returned in the envelope
          status but otherwise not used by DocuSign. Each customField string can be
          a maximum of 100 characters.
        type: array
        items:
          type: string
      declinedDateTime:
        description:
          The date and time the recipient declined the document. This property
          is read-only.
        type: string
      declinedReason:
        description:
          The reason the recipient declined the document. This property
          is read-only.
        type: string
      deliveredDateTime:
        description:
          The date and time that the envelope was delivered to the recipient.
          This property is read-only.
        type: string
      deliveryMethod:
        description: |-
          The delivery method. One of:

          - `email`
          - `fax`
          - `SMS`
          - `WhatsApp`
          - `offline`

          The `SMS` and `WhatsApp` delivery methods
          are limited to `signer`, `carbonCopy`, and `certifiedDelivery`
          recipients.

          **Related topics**

          - [Using SMS delivery with the eSignature API][smsconcept]
          - [How to request a signature by SMS delivery][howto]

          [smsconcept]: /docs/esign-rest-api/esign101/concepts/sms-delivery/using-sms-esignature/
          [howto]: /docs/esign-rest-api/how-to/request-signature-sms/
        type: string
      deliveryMethodMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Reserved for DocuSign.
      designatorId:
        description: Reserved for DocuSign.
        type: string
      designatorIdGuid:
        description: Reserved for DocuSign.
        type: string
      documentVisibility:
        description:
          A list of `documentVisibility` objects. Each object in the list
          specifies whether a document in the envelope is visible to this recipient.
          For the envelope to use this functionality, Document Visibility must be
          enabled for the account and the `enforceSignerVisibility` property must
          be set to **true.**
        type: array
        items:
          "$ref": "#/definitions/documentVisibility"
      email:
        description: |
          The notary's email address.

          Maximum Length: 100 characters.
        type: string
      emailMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `email` property is editable.
          This property is read-only.
      emailNotification:
        "$ref": "#/definitions/recipientEmailNotification"
        description: |-
          This optional property allows you to set a specific email subject and
          body for this recipient's notification email.

          **Note:** If you use this property, you _must_
          provide a value for the `supportedLanguage` sub-property.


          You can set the `emailNotification` property separately
          for each recipient. If you set the value only for certain
          recipients, the other recipients are assigned the values from
          the top-level `emailSubject` and `emailBlurb`.
      embeddedRecipientStartURL:
        description:
          "Specifies a sender-provided valid URL string for redirecting
          an embedded recipient. When using this option, the embedded recipient still
          receives an email from DocuSign, just as a remote recipient would. When
          the document link in the email is clicked the recipient is redirected, through
          DocuSign, to the supplied URL to complete their actions. When routing to
          the URL, the sender's system (the server responding to the URL) must request
          a recipient token to launch a signing session. \n\nWhen `SIGN_AT_DOCUSIGN`,
          the recipient is directed to an embedded signing or viewing process directly
          at DocuSign. The signing or viewing action is initiated by the DocuSign
          system and the transaction activity and Certificate of Completion records
          will reflect this. In all other ways the process is identical to an embedded
          signing or viewing operation launched by a partner.\n\nIt is important to
          understand that in a typical embedded workflow, the authentication of an
          embedded recipient is the responsibility of the sending application. DocuSign
          expects that senders will follow their own processes for establishing the
          recipient's identity. In this workflow the recipient goes through the sending
          application before the embedded signing or viewing process is initiated.
          However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`,
          the recipient goes directly to the embedded signing or viewing process,
          bypassing the sending application and any authentication steps the sending
          application would use. In this case, DocuSign recommends that you use one
          of the normal DocuSign authentication features (Access Code, Phone Authentication,
          SMS Authentication, etc.) to verify the identity of the recipient.\n\nIf
          the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL`
          is set, DocuSign will ignore the redirect URL and launch the standard signing
          process for the email recipient. Information can be appended to the embedded
          recipient start URL using merge fields. The available merge fields items
          are: `envelopeId`, `recipientId`, `recipientName`, `recipientEmail`, and
          `customFields`. The `customFields` property must be set for the recipient
          or envelope. The merge fields are enclosed in double brackets. \n\n*Example*:
          \n\n`http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]` "
        type: string
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      faxNumber:
        description: Reserved for DocuSign.
        type: string
      faxNumberMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Reserved for DocuSign.
      hostRecipientId:
        description: The host recipient ID.
        type: string
      idCheckConfigurationName:
        description:
          "The name of the authentication check to use. This value must
          match one of the authentication types that the account uses. The names of
          these authentication types appear in the web console sending interface in
          the Identify list for a recipient. This setting overrides any default authentication
          setting. Valid values are:\n\n- `Phone Auth $`: The recipient must authenticate
          by using two-factor authentication (2FA). You provide the phone number to
          use for 2FA in the `phoneAuthentication` object.\n- `SMS Auth $`: The recipient
          must authenticate via SMS. You provide the phone number to use in the `smsAuthentication`
          object.\n- `ID Check $`: The  recipient must answer detailed security questions.
          \n\n**Example:** Your account has ID Check and SMS Authentication available.
          In the web console Identify list, these appear as ID Check $ and SMS Auth
          $. To use ID Check in an envelope, the idCheckConfigurationName should be
          ID Check $. For SMS, you would use SMS Auth $, and you would also need to
          add a phone number to the smsAuthentication node."
        type: string
      idCheckConfigurationNameMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `idCheckConfigurationName`
          property is editable. This property is read-only.
      idCheckInformationInput:
        "$ref": "#/definitions/idCheckInformationInput"
        description:
          An object that contains input information related to a recipient
          ID check.
      identityVerification:
        "$ref": "#/definitions/recipientIdentityVerification"
        description:
          Specifies the ID Verification workflow applied on an envelope
          by workflow ID. <br/>See the [list](/docs/esign-rest-api/reference/accounts/identityverifications/list/)
          method in the [IdentityVerifications](/docs/esign-rest-api/reference/accounts/identityverifications/)
          resource for more information on how to retrieve workflow IDs available
          for an account. <br/>This can be used in addition to other [recipient authentication](https://support.docusign.com/s/document-item?bundleId=gav1643676262430&topicId=kzp1578456318101.html)
          methods. <br/>Note that ID Verification and ID Check are two distinct methods.
          ID Verification checks recipients' identity by verifying their ID while
          ID Check relies on data available on public records (such as current and
          former address).
      inheritEmailNotificationConfiguration:
        description:
          "When **true** and the envelope recipient creates a DocuSign
          account after signing, the Manage Account Email Notification settings are
          used as the default settings for the recipient's account. "
        type: string
      lockedRecipientPhoneAuthEditable:
        description: Reserved for DocuSign.
        type: string
      lockedRecipientSmsEditable:
        description: Reserved for DocuSign.
        type: string
      name:
        description: |
          The notary's full legal name.

          Maximum Length: 100 characters.
        type: string
      nameMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `name` property is editable.
          This property is read-only.
      note:
        description: |
          A note sent to the notary in the signing email.
          This note is visible only to this notary.

          Maximum Length: 1000 characters.
        type: string
      noteMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `note` property is editable.
          This property is read-only.
      phoneAuthentication:
        "$ref": "#/definitions/recipientPhoneAuthentication"
        description: |+
          When `idCheckConfigurationName` is set to `Phone Auth $`, you use this complex type to provide the recipient authentication method details. It contains the following elements:

          * `recipMayProvideNumber`: Boolean. When **true,** the recipient can use whatever phone number they choose.
          * `senderProvidedNumbers`: ArrayOfStrings.  A list of phone numbers the recipient can use.
          * `recordVoicePrint`: Reserved for DocuSign.
          * `validateRecipProvidedNumber`: Reserved for DocuSign.

      recipientAttachments:
        description: Reserved for DocuSign.
        type: array
        items:
          "$ref": "#/definitions/recipientAttachment"
      recipientAuthenticationStatus:
        "$ref": "#/definitions/authenticationStatus"
        description:
          Information about the recipient's authentication status. This
          property is read-only.
      recipientFeatureMetadata:
        description:
          Metadata about the features that are supported for the recipient
          type. This property is read-only.
        type: array
        items:
          "$ref": "#/definitions/featureAvailableMetadata"
      recipientId:
        description:
          Unique for the recipient. It is used by the tab element to indicate
          which recipient is to sign the Document.
        type: string
      recipientIdGuid:
        description:
          The globally-unique identifier (GUID) for a specific recipient
          on a specific envelope. If the same recipient is associated with multiple
          envelopes, they will have a different GUID for each one. This property is
          read-only.
        type: string
      recipientType:
        description: |-
          The recipient type, as specified by the following values:
          - `agent`: Agent recipients can add name and email information for recipients that appear after the agent in routing order.
          - `carbonCopy`: Carbon copy recipients get a copy of the envelope but don't need to sign, initial, date, or add information to any of the documents. This type of recipient can be used in any routing order.
          - `certifiedDelivery`: Certified delivery recipients must receive the completed documents for the envelope to be completed. They don't need to sign, initial, date, or add information to any of the documents.
          - `editor`: Editors have the same management and access rights for the envelope as the sender. Editors can add name and email information, add or change the routing order, set authentication options, and can edit signature/initial tabs and data fields for the remaining recipients.
          - `inPersonSigner`: In-person recipients are DocuSign users who act as signing hosts in the same physical location as the signer.
          - `intermediaries`: Intermediary recipients can optionally add name and email information for recipients at the same or subsequent level in the routing order.
          - `seal`: Electronic seal recipients represent legal entities.
          - `signer`: Signers are recipients who must sign, initial, date, or add data to form fields on the documents in the envelope.
          - `witness`: Witnesses are recipients whose signatures affirm that the identified signers have signed the documents in the envelope.
        type: string
      recipientTypeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `recipientType` property
          is editable. This property is read-only.
      requireIdLookup:
        description:
          "When **true,** the recipient is required to use the specified
          ID check method (including Phone and SMS authentication) to validate their
          identity. "
        type: string
      requireIdLookupMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `requireIdLookup` property
          is editable. This property is read-only.
      roleName:
        description:
          Optional element. Specifies the role name associated with the
          recipient.<br/><br/>This property is required when you are working with
          template recipients.
        type: string
      routingOrder:
        description: "Specifies the routing order of the recipient in the envelope. "
        type: string
      routingOrderMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `routingOrder` property is
          editable. This property is read-only.
      sentDateTime:
        description:
          The UTC DateTime when the envelope was sent. This property is
          read-only.
        type: string
      signedDateTime:
        description: Reserved for DocuSign.
        type: string
      signingGroupId:
        description:
          "The ID of the [signing group](https://support.docusign.com/s/document-item?bundleId=gav1643676262430&topicId=zgn1578456447934.html).

          "
        type: string
      signingGroupIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `signingGroupId` property
          is editable. This property is read-only.
      signingGroupName:
        description:
          "Optional. The name of the signing group. \n\nMaximum Length:
          100 characters. "
        type: string
      signingGroupUsers:
        description:
          A complex type that contains information about users in the signing
          group.
        type: array
        items:
          "$ref": "#/definitions/userInfo"
      smsAuthentication:
        "$ref": "#/definitions/recipientSMSAuthentication"
        description:
          "When `idCheckConfigurationName` is set to `SMS Auth $`, you
          use this complex type to provide the recipient authentication method details.
          It contains the element `senderProvidedNumbers`, which is an array of phone
          numbers that the recipient can use for SMS text authentication. \n\n"
      socialAuthentications:
        description: Deprecated.
        type: array
        items:
          "$ref": "#/definitions/socialAuthentication"
      status:
        description:
          "The recipient's status. This property is read-only. \n\nValid
          values:\n\n- `autoresponded`: The recipient's email system auto-responded
          to the email from DocuSign. This status is used in the web console to inform
          senders about the bounced-back email. This recipient status is only used
          if **Send-on-behalf-of** is turned off for the account.\n- `completed`:
          The recipient has completed their actions (signing or other required actions
          if not a signer) for an envelope.\n- `created`: The recipient is in a draft
          state. This value is only associated with draft envelopes (envelopes that
          have a status of `created`).\n- `declined`: The recipient declined to sign
          the documents in the envelope.\n- `delivered`: The recipient has viewed
          the documents in an envelope through the DocuSign signing website. This
          is not an email delivery of the documents in an envelope.\n- `faxPending`:
          The recipient has finished signing and the system is waiting for a fax attachment
          from the recipient before completing their signing step.\n- `sent`: The
          recipient has been sent an email notification that it is their turn to sign
          an envelope.\n- `signed`: The recipient has completed (signed) all required
          tags in an envelope. This is a temporary state during processing, after
          which the recipient's status automatically switches to `completed`."
        type: string
      statusCode:
        description:
          "The code associated with the recipient's status. This property
          is read-only. "
        type: string
      suppressEmails:
        description:
          When **true,** email notifications are suppressed for the recipient,
          and they must access envelopes and documents from their DocuSign inbox.
        type: string
      tabs:
        "$ref": "#/definitions/EnvelopeRecipientTabs"
        description:
          A list of tabs, which are represented graphically as symbols
          on documents at the time of signing. Tabs show recipients where to sign,
          initial, or enter data. They may also display data to the recipients.
      templateLocked:
        description:
          "When **true,** the sender cannot change any attributes of the
          recipient. Used only when working with template recipients. "
        type: string
      templateRequired:
        description:
          When **true,** the sender may not remove the recipient. Used
          only when working with template recipients.
        type: string
      totalTabCount:
        description: The total number of tabs in the documents. This property is read-only.
        type: string
      userId:
        description: |-
          The ID of the user to access.

          **Note:** Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.
        type: string
    description: |
      This object is used only when `inPersonSigningType` in the `inPersonSigner` object is `notary`.

      It describes information about the notary host.
      The following information is required
      when using the eNotary in-person signing flow:

      * `name`: Specifies the notary's full legal name.
      * `email`: Specifies the notary's email address.
      * `recipientId`: A unique ID number for the notary signing host.
    x-ds-definition-name: notaryHost
    x-ms-summary: |
      This object is used only when `inPersonSigningType` in the `inPersonSigner` object is `notary`.

      It describes information about the notary host.
      The following information is required
      when using the eNotary in-person signing flow:

      * `name`: Specifies the notary's full legal name.
      * `email`: Specifies the notary's email address.
      * `recipientId`: A unique ID number for the notary signing host.
  notaryJournal:
    type: object
    properties:
      createdDate:
        description: The creation date of the account in UTC timedate format.
        type: string
      documentName:
        description: The name of the document.
        type: string
      jurisdiction:
        "$ref": "#/definitions/jurisdiction"
        description: "The notary's jurisdiction.

          "
      notaryJournalId:
        description: A unique GUID for this journal entry.
        type: string
      notaryJournalMetaData:
        "$ref": "#/definitions/notaryJournalMetaData"
        description:
          Additional journal data such as the witness list and signature
          image.
      signerName:
        description: |
          The in-person signer's full legal name.

          Required when `inPersonSigningType` is `inPersonSigner`.
          For eNotary flow, use `name` instead.

          Maximum Length: 100 characters.
        type: string
    x-ds-definition-name: notaryJournal
    description: ""
    x-ms-summary: ""
  notaryJournalCredibleWitness:
    type: object
    properties:
      address:
        description: The address of the witness.
        type: string
      name:
        description: The name of the witness.
        type: string
      signatureImage:
        description: A base64-encoded image of the signature.
        type: string
    x-ds-definition-name: notaryJournalCredibleWitness
    description: ""
    x-ms-summary: ""
  notaryJournalList:
    type: object
    properties:
      endPosition:
        description: "The last index position in the result set. "
        type: string
      nextUri:
        description:
          "The URI for the next chunk of records based on the search request.
          It is `null` if this is the last set of results for the search. "
        type: string
      notaryJournals:
        description: ""
        type: array
        items:
          "$ref": "#/definitions/notaryJournal"
      previousUri:
        description:
          "The URI for the prior chunk of records based on the search request.
          It is `null` if this is the first set of results for the search. "
        type: string
      resultSetSize:
        description:
          The number of results in this response. Because you can filter
          which entries are included in the response, this value is always less than
          or equal to the `totalSetSize`.
        type: string
      startPosition:
        description: The starting index position of the current result set.
        type: string
      totalSetSize:
        description:
          The total number of items in the result set. This value is always
          greater than or equal to the value of `resultSetSize`.
        type: string
    x-ds-definition-name: notaryJournalList
    description: ""
    x-ms-summary: ""
  notaryJournalMetaData:
    type: object
    properties:
      comment:
        description: A freeform comment that the notary can add to the journal entry.
        type: string
      credibleWitnesses:
        description: An array of witnesses.
        type: array
        items:
          "$ref": "#/definitions/notaryJournalCredibleWitness"
      signatureImage:
        description: A base64-encoded image of the signature.
        type: string
      signerIdType:
        description:
          A string that describes the ID that the signer presented. For
          example `drivers license` or `military ID`.
        type: string
    x-ds-definition-name: notaryJournalMetaData
    description: ""
    x-ms-summary: ""
  notaryJurisdiction:
    type: object
    properties:
      commissionExpiration:
        description: "The expiration date of the notary's commission in format: `MM/DD/YYYY`."
        type: string
      commissionId:
        description:
          The notary's commission identification. This varies from jurisdiction
          to jurisdiction.
        type: string
      county:
        description: The county that the commission is valid in.
        type: string
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      jurisdiction:
        "$ref": "#/definitions/jurisdiction"
        description: |-
          Description of the jurisdiction for this notary.
          This is a read-only property.
      registeredName:
        description: The registered name of the notary.
        type: string
      sealType:
        description: |-
          The seal type used for this juridiction.

          - `not_available`
          - `system_created`
          - `user_uploaded`
        type: string
    description: A notary jurisdiction.
    x-ds-definition-name: notaryJurisdiction
    x-ms-summary: A notary jurisdiction.
  notaryJurisdictionList:
    type: object
    properties:
      endPosition:
        description: "The last index position in the result set. "
        type: string
      nextUri:
        description:
          "The URI for the next chunk of records based on the search request.
          It is `null` if this is the last set of results for the search. "
        type: string
      notaryJurisdictions:
        description: An array of jurisdictions.
        type: array
        items:
          "$ref": "#/definitions/notaryJurisdiction"
      previousUri:
        description:
          "The URI for the prior chunk of records based on the search request.
          It is `null` if this is the first set of results for the search. "
        type: string
      resultSetSize:
        description:
          The number of results in this response. Because you can filter
          which entries are included in the response, this value is always less than
          or equal to the `totalSetSize`.
        type: string
      startPosition:
        description: The starting index position of the current result set.
        type: string
      totalSetSize:
        description:
          The total number of items in the result set. This value is always
          greater than or equal to the value of `resultSetSize`.
        type: string
    description: A paged list of jurisdictions.
    x-ds-definition-name: notaryJurisdictionList
    x-ms-summary: A paged list of jurisdictions.
  notaryRecipient:
    type: object
    properties:
      accessCode:
        description:
          "If a value is provided, the recipient must enter the value as
          the access code to view and sign the envelope. \n\nMaximum Length: 50 characters
          and it must conform to the account's access code format setting.\n\nIf blank,
          but the signer `accessCode` property is set in the envelope, then that value
          is used.\n\nIf blank and the signer `accessCode` property is not set, then
          the access code is not required."
        type: string
      accessCodeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `accessCode` property is
          editable. This property is read-only.
      addAccessCodeToEmail:
        description:
          Optional. When **true,** the access code will be added to the
          email sent to the recipient. This nullifies the security measure of `accessCode`
          on the recipient.
        type: string
      additionalNotifications:
        description: An array of additional notification objects.
        type: array
        items:
          "$ref": "#/definitions/recipientAdditionalNotification"
      agentCanEditEmail:
        description:
          Optional element. When **true,** the agents recipient associated
          with this recipient can change the recipient's pre-populated email address.
          This element is only active if enabled for the account.
        type: string
      agentCanEditName:
        description:
          Optional element. When **true,** the agents recipient associated
          with this recipient can change the recipient's pre-populated name. This
          element is only active if enabled for the account.
        type: string
      allowSystemOverrideForLockedRecipient:
        description:
          When **true,** if the recipient is locked on a template, advanced
          recipient routing can override the lock.
        type: string
      autoNavigation:
        description: "When **true,** autonavigation is set for the recipient.

          "
        type: string
      autoRespondedReason:
        description:
          "Error message provided by the destination email system. This
          field is only provided if the email notification to the recipient fails
          to send. This property is read-only.

          "
        type: string
      bulkRecipientsUri:
        description: Reserved for DocuSign.
        type: string
      bulkSendV2Recipient:
        description: ""
        type: string
      canSignOffline:
        description:
          When **true,** specifies that the signer can perform the signing
          ceremony offline.
        type: string
      clientUserId:
        description:
          "Specifies whether the recipient is embedded or remote. \n\nIf
          the `clientUserId` property is not null then the recipient is embedded.
          Use this field to associate the signer with their userId in your app. Authenticating
          the user is the responsibility of your app when you use embedded signing.\n\nIf
          the `clientUserId` property is set and either `SignerMustHaveAccount` or
          `SignerMustLoginToSign` property of the account settings is set to  **true,**
          an error is generated on sending.\n\n**Note:** This property is not returned
          by the [listStatusChanges](/docs/esign-rest-api/reference/envelopes/envelopes/liststatuschanges/)
          endpoint.\n\nMaximum length: 100 characters. \n"
        type: string
      completedCount:
        description:
          Indicates the number of times that the recipient has been through
          a signing completion for the envelope. If this number is greater than 0
          for a signing group, only the user who previously completed may sign again.
          This property is read-only.
        type: string
      consentDetailsList:
        description: ""
        type: array
        items:
          "$ref": "#/definitions/consentDetails"
      creationReason:
        description: The reason why the item was created.
        type: string
      customFields:
        description:
          An optional array of strings that allows the sender to provide
          custom data about the recipient. This information is returned in the envelope
          status but otherwise not used by DocuSign. Each customField string can be
          a maximum of 100 characters.
        type: array
        items:
          type: string
      declinedDateTime:
        description:
          The date and time the recipient declined the document. This property
          is read-only.
        type: string
      declinedReason:
        description:
          The reason the recipient declined the document. This property
          is read-only.
        type: string
      defaultRecipient:
        description:
          When **true,** this recipient is the default recipient and any
          tabs generated by the transformPdfFields option are mapped to this recipient.
        type: string
      delegatedBy:
        "$ref": "#/definitions/delegationInfo"
        description: ""
      delegatedTo:
        description: ""
        type: array
        items:
          "$ref": "#/definitions/delegationInfo"
      deliveredDateTime:
        description:
          The date and time that the envelope was delivered to the recipient.
          This property is read-only.
        type: string
      deliveryMethod:
        description: |-
          The delivery method. One of:

          - `email`
          - `fax`
          - `SMS`
          - `WhatsApp`
          - `offline`

          The `SMS` and `WhatsApp` delivery methods
          are limited to `signer`, `carbonCopy`, and `certifiedDelivery`
          recipients.

          **Related topics**

          - [Using SMS delivery with the eSignature API][smsconcept]
          - [How to request a signature by SMS delivery][howto]

          [smsconcept]: /docs/esign-rest-api/esign101/concepts/sms-delivery/using-sms-esignature/
          [howto]: /docs/esign-rest-api/how-to/request-signature-sms/
        type: string
      deliveryMethodMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Reserved for DocuSign.
      designatorId:
        description: Reserved for DocuSign.
        type: string
      designatorIdGuid:
        description: Reserved for DocuSign.
        type: string
      documentVisibility:
        description:
          A list of `documentVisibility` objects. Each object in the list
          specifies whether a document in the envelope is visible to this recipient.
          For the envelope to use this functionality, Document Visibility must be
          enabled for the account and the `enforceSignerVisibility` property must
          be set to **true.**
        type: array
        items:
          "$ref": "#/definitions/documentVisibility"
      email:
        description: |-
          The recipient's email address. Notification of the document to sign is sent to this email address.

          Maximum length: 100 characters.
        type: string
      emailMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `email` property is editable.
          This property is read-only.
      emailNotification:
        "$ref": "#/definitions/recipientEmailNotification"
        description: |-
          This optional property allows you to set a specific email subject and
          body for this recipient's notification email.

          **Note:** If you use this property, you _must_
          provide a value for the `supportedLanguage` sub-property.


          You can set the `emailNotification` property separately
          for each recipient. If you set the value only for certain
          recipients, the other recipients are assigned the values from
          the top-level `emailSubject` and `emailBlurb`.
      emailRecipientPostSigningURL:
        description: ""
        type: string
      embeddedRecipientStartURL:
        description:
          "Specifies a sender-provided valid URL string for redirecting
          an embedded recipient. When using this option, the embedded recipient still
          receives an email from DocuSign, just as a remote recipient would. When
          the document link in the email is clicked the recipient is redirected, through
          DocuSign, to the supplied URL to complete their actions. When routing to
          the URL, the sender's system (the server responding to the URL) must request
          a recipient token to launch a signing session. \n\nWhen `SIGN_AT_DOCUSIGN`,
          the recipient is directed to an embedded signing or viewing process directly
          at DocuSign. The signing or viewing action is initiated by the DocuSign
          system and the transaction activity and Certificate of Completion records
          will reflect this. In all other ways the process is identical to an embedded
          signing or viewing operation launched by a partner.\n\nIt is important to
          understand that in a typical embedded workflow, the authentication of an
          embedded recipient is the responsibility of the sending application. DocuSign
          expects that senders will follow their own processes for establishing the
          recipient's identity. In this workflow the recipient goes through the sending
          application before the embedded signing or viewing process is initiated.
          However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`,
          the recipient goes directly to the embedded signing or viewing process,
          bypassing the sending application and any authentication steps the sending
          application would use. In this case, DocuSign recommends that you use one
          of the normal DocuSign authentication features (Access Code, Phone Authentication,
          SMS Authentication, etc.) to verify the identity of the recipient.\n\nIf
          the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL`
          is set, DocuSign will ignore the redirect URL and launch the standard signing
          process for the email recipient. Information can be appended to the embedded
          recipient start URL using merge fields. The available merge fields items
          are: `envelopeId`, `recipientId`, `recipientName`, `recipientEmail`, and
          `customFields`. The `customFields` property must be set for the recipient
          or envelope. The merge fields are enclosed in double brackets. \n\n*Example*:
          \n\n`http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]` "
        type: string
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      excludedDocuments:
        description: |-
          Specifies the documents that are not visible to this recipient. Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to **true** for the envelope to use this.

          When enforce signer visibility is enabled, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.
        type: array
        items:
          type: string
      faxNumber:
        description: Reserved for DocuSign.
        type: string
      faxNumberMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Reserved for DocuSign.
      firstName:
        description: "The user's first name. \nMaximum Length: 50 characters."
        type: string
      firstNameMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `firstName` property is editable.
          This property is read-only.
      fullName:
        description: Reserved for DocuSign.
        type: string
      fullNameMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Reserved for DocuSign.
      idCheckConfigurationName:
        description:
          "The name of the authentication check to use. This value must
          match one of the authentication types that the account uses. The names of
          these authentication types appear in the web console sending interface in
          the Identify list for a recipient. This setting overrides any default authentication
          setting. Valid values are:\n\n- `Phone Auth $`: The recipient must authenticate
          by using two-factor authentication (2FA). You provide the phone number to
          use for 2FA in the `phoneAuthentication` object.\n- `SMS Auth $`: The recipient
          must authenticate via SMS. You provide the phone number to use in the `smsAuthentication`
          object.\n- `ID Check $`: The  recipient must answer detailed security questions.
          \n\n**Example:** Your account has ID Check and SMS Authentication available.
          In the web console Identify list, these appear as ID Check $ and SMS Auth
          $. To use ID Check in an envelope, the idCheckConfigurationName should be
          ID Check $. For SMS, you would use SMS Auth $, and you would also need to
          add a phone number to the smsAuthentication node."
        type: string
      idCheckConfigurationNameMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `idCheckConfigurationName`
          property is editable. This property is read-only.
      idCheckInformationInput:
        "$ref": "#/definitions/idCheckInformationInput"
        description:
          An object that contains input information related to a recipient
          ID check.
      identityVerification:
        "$ref": "#/definitions/recipientIdentityVerification"
        description:
          Specifies the ID Verification workflow applied on an envelope
          by workflow ID. <br/>See the [list](/docs/esign-rest-api/reference/accounts/identityverifications/list/)
          method in the [IdentityVerifications](/docs/esign-rest-api/reference/accounts/identityverifications/)
          resource for more information on how to retrieve workflow IDs available
          for an account. <br/>This can be used in addition to other [recipient authentication](https://support.docusign.com/s/document-item?bundleId=gav1643676262430&topicId=kzp1578456318101.html)
          methods. <br/>Note that ID Verification and ID Check are two distinct methods.
          ID Verification checks recipients' identity by verifying their ID while
          ID Check relies on data available on public records (such as current and
          former address).
      inheritEmailNotificationConfiguration:
        description:
          "When **true** and the envelope recipient creates a DocuSign
          account after signing, the Manage Account Email Notification settings are
          used as the default settings for the recipient's account. "
        type: string
      isBulkRecipient:
        description: "Reserved for DocuSign.

          "
        type: string
      isBulkRecipientMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Reserved for DocuSign.
      lastName:
        description: "The user's last name. \nMaximum Length: 50 characters."
        type: string
      lastNameMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `lastName` property is editable.
          This property is read-only.
      liveOakStartURL:
        description:
          URL that directs the recipient to LiveOak to complete the remote
          online notarization process. This property is read-only.
        type: string
      lockedRecipientPhoneAuthEditable:
        description: Reserved for DocuSign.
        type: string
      lockedRecipientSmsEditable:
        description: Reserved for DocuSign.
        type: string
      name:
        description: |-
          The full legal name of the recipient. Maximum length: 100 characters.

          Note: You must always set a value for this property in requests, even if `firstName` and `lastName` are set.
        type: string
      nameMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `name` property is editable.
          This property is read-only.
      notaryId:
        description: Not applicable to Notary tab.
        type: string
      notarySignerEmailSent:
        description: ""
        type: string
      notarySigners:
        description:
          An array of strings that correspond to the `recipientId` of each
          signer in the notary group. This property is read-only.
        type: array
        items:
          type: string
      notarySourceType:
        description: ""
        type: string
      notaryThirdPartyPartner:
        description: ""
        type: string
      notaryType:
        description: |-
          The notary type. This property is read-only. Valid values:

          - `inperson`
          - `remote`
        type: string
      note:
        description: |
          A note sent to the recipient in the signing email.
          This note is unique to this recipient.
          In the user interface,
          it appears near the upper left corner
          of the document
          on the signing screen.

          Maximum Length: 1000 characters.
        type: string
      noteMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `note` property is editable.
          This property is read-only.
      offlineAttributes:
        "$ref": "#/definitions/offlineAttributes"
        description: Reserved for DocuSign.
      phoneAuthentication:
        "$ref": "#/definitions/recipientPhoneAuthentication"
        description: |+
          When `idCheckConfigurationName` is set to `Phone Auth $`, you use this complex type to provide the recipient authentication method details. It contains the following elements:

          * `recipMayProvideNumber`: Boolean. When **true,** the recipient can use whatever phone number they choose.
          * `senderProvidedNumbers`: ArrayOfStrings.  A list of phone numbers the recipient can use.
          * `recordVoicePrint`: Reserved for DocuSign.
          * `validateRecipProvidedNumber`: Reserved for DocuSign.

      phoneNumber:
        "$ref": "#/definitions/recipientPhoneNumber"
        description: Describes the recipient phone number.
      proofFile:
        "$ref": "#/definitions/recipientProofFile"
        description: The proof file of the recipient.
      recipientAttachments:
        description: Reserved for DocuSign.
        type: array
        items:
          "$ref": "#/definitions/recipientAttachment"
      recipientAuthenticationStatus:
        "$ref": "#/definitions/authenticationStatus"
        description:
          Information about the recipient's authentication status. This
          property is read-only.
      recipientFeatureMetadata:
        description:
          Metadata about the features that are supported for the recipient
          type. This property is read-only.
        type: array
        items:
          "$ref": "#/definitions/featureAvailableMetadata"
      recipientId:
        description: |
          A local reference used to map
          recipients to other objects, such as specific
          document tabs.

          A `recipientId` must be
          either an integer or a GUID,
          and the `recipientId` must be
          unique within an envelope.

          For example, many envelopes assign the first recipient
          a `recipientId` of `1`.
        type: string
      recipientIdGuid:
        description:
          The globally-unique identifier (GUID) for a specific recipient
          on a specific envelope. If the same recipient is associated with multiple
          envelopes, they will have a different GUID for each one. This property is
          read-only.
        type: string
      recipientSignatureProviders:
        description:
          The default signature provider is the DocuSign Electronic signature
          system. This parameter is used to specify one or more Standards Based Signature
          (digital signature) providers for the signer to use. [More information.](/docs/esign-rest-api/esign101/concepts/standards-based-signatures/)
        type: array
        items:
          "$ref": "#/definitions/recipientSignatureProvider"
      recipientSuppliesTabs:
        description: When **true,** specifies that the recipient creates the tabs.
        type: string
      recipientType:
        description: |-
          The recipient type, as specified by the following values:
          - `agent`: Agent recipients can add name and email information for recipients that appear after the agent in routing order.
          - `carbonCopy`: Carbon copy recipients get a copy of the envelope but don't need to sign, initial, date, or add information to any of the documents. This type of recipient can be used in any routing order.
          - `certifiedDelivery`: Certified delivery recipients must receive the completed documents for the envelope to be completed. They don't need to sign, initial, date, or add information to any of the documents.
          - `editor`: Editors have the same management and access rights for the envelope as the sender. Editors can add name and email information, add or change the routing order, set authentication options, and can edit signature/initial tabs and data fields for the remaining recipients.
          - `inPersonSigner`: In-person recipients are DocuSign users who act as signing hosts in the same physical location as the signer.
          - `intermediaries`: Intermediary recipients can optionally add name and email information for recipients at the same or subsequent level in the routing order.
          - `seal`: Electronic seal recipients represent legal entities.
          - `signer`: Signers are recipients who must sign, initial, date, or add data to form fields on the documents in the envelope.
          - `witness`: Witnesses are recipients whose signatures affirm that the identified signers have signed the documents in the envelope.
        type: string
      recipientTypeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `recipientType` property
          is editable. This property is read-only.
      requireIdLookup:
        description:
          "When **true,** the recipient is required to use the specified
          ID check method (including Phone and SMS authentication) to validate their
          identity. "
        type: string
      requireIdLookupMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `requireIdLookup` property
          is editable. This property is read-only.
      requireSignerCertificate:
        description:
          "By default, DocuSign signers create electronic signatures. This
          field can be used to require the signer to use a SAFE-BioPharma digital
          certificate for signing.\n\nThis parameter should only be used to select
          a SAFE-BioPharma certificate. New integrations should use the `recipientSignatureProviders`
          parameter for other types of digital certificates. \n\nSet this parameter
          to `safe` to use a SAFE-BioPharma certificate.\n\nThe signer must be enrolled
          in the SAFE program to sign with a SAFE certificate."
        type: string
      requireSignOnPaper:
        description:
          When **true,** the signer must print, sign, and upload or fax
          the signed documents to DocuSign.
        type: string
      requireUploadSignature:
        description:
          When **true,** the signer is required to upload a new signature,
          even if they have a pre-adopted signature in their personal DocuSign account.
        type: string
      roleName:
        description:
          Optional element. Specifies the role name associated with the
          recipient.<br/><br/>This property is required when you are working with
          template recipients.
        type: string
      routingOrder:
        description: "Specifies the routing order of the recipient in the envelope. "
        type: string
      routingOrderMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `routingOrder` property is
          editable. This property is read-only.
      sentDateTime:
        description:
          The UTC DateTime when the envelope was sent. This property is
          read-only.
        type: string
      signatureInfo:
        "$ref": "#/definitions/recipientSignatureInformation"
        description: |-
          Allows the sender to pre-specify the signature name, signature initials and signature font used in the signature stamp for the recipient.

          Used only with recipient types In Person Signers and Signers.
      signedDateTime:
        description: Reserved for DocuSign.
        type: string
      signInEachLocation:
        description:
          When **true** and the feature is enabled in the sender's account,
          the signing recipient is required to draw signatures and initials at each
          signature/initial tab (instead of adopting a signature/initial style or
          only drawing a signature/initial once).
        type: string
      signInEachLocationMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `signInEachLocation` property
          is editable. This property is read-only.
      signingGroupId:
        description:
          "The ID of the [signing group](https://support.docusign.com/s/document-item?bundleId=gav1643676262430&topicId=zgn1578456447934.html).

          "
        type: string
      signingGroupIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `signingGroupId` property
          is editable. This property is read-only.
      signingGroupName:
        description:
          "Optional. The name of the signing group. \n\nMaximum Length:
          100 characters. "
        type: string
      signingGroupUsers:
        description:
          A complex type that contains information about users in the signing
          group.
        type: array
        items:
          "$ref": "#/definitions/userInfo"
      smsAuthentication:
        "$ref": "#/definitions/recipientSMSAuthentication"
        description:
          "When `idCheckConfigurationName` is set to `SMS Auth $`, you
          use this complex type to provide the recipient authentication method details.
          It contains the element `senderProvidedNumbers`, which is an array of phone
          numbers that the recipient can use for SMS text authentication. \n\n"
      socialAuthentications:
        description: Deprecated.
        type: array
        items:
          "$ref": "#/definitions/socialAuthentication"
      status:
        description:
          "Indicates the envelope status. Valid values are:\n\n* sent -
          The envelope is sent to the recipients. \n* created - The envelope is saved
          as a draft and can be modified and sent later."
        type: string
      statusCode:
        description: Reserved for DocuSign.
        type: string
      suppressEmails:
        description:
          When **true,** email notifications are suppressed for the recipient,
          and they must access envelopes and documents from their DocuSign inbox.
        type: string
      tabs:
        "$ref": "#/definitions/EnvelopeRecipientTabs"
        description:
          A list of tabs, which are represented graphically as symbols
          on documents at the time of signing. Tabs show recipients where to sign,
          initial, or enter data. They may also display data to the recipients.
      templateLocked:
        description:
          "When **true,** the sender cannot change any attributes of the
          recipient. Used only when working with template recipients. "
        type: string
      templateRequired:
        description:
          When **true,** the sender may not remove the recipient. Used
          only when working with template recipients.
        type: string
      totalTabCount:
        description: The total number of tabs in the documents. This property is read-only.
        type: string
      userId:
        description: |-
          The ID of the user to access.

          **Note:** Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.
        type: string
    x-ds-definition-name: notaryRecipient
    description: ""
    x-ms-summary: ""
  notaryResult:
    type: object
    properties:
      jurisdictions:
        description: ""
        type: array
        items:
          "$ref": "#/definitions/jurisdiction"
      notary:
        "$ref": "#/definitions/notary"
        description: ""
    description: Describes a single notary jurisdiction.
    x-ds-definition-name: notaryResult
    x-ms-summary: Describes a single notary jurisdiction.
  notarySeal:
    type: object
    properties:
      anchorAllowWhiteSpaceInCharacters:
        description: |
          When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.

          First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.

          Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.

          The default value is **true.**
        type: string
      anchorAllowWhiteSpaceInCharactersMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorAllowWhiteSpaceInCharacters`
          property is editable.
      anchorCaseSensitive:
        description: |-
          This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**

          For example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.

          This functionality uses the following rules:

          - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:

            $~><|^+=

            For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`

          - Strings embedded in other strings are ignored during the matching process.

          - In words that have dashes, the parts separated by dashes are treated as distinct words.

            Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**

          - Letters with accent marks are treated as distinct characters from their unaccented counterparts.

          - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.

            Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.

          - Unlike punctuation, numbers are not ignored when finding anchor words.

            Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).

          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorCaseSensitiveMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorCaseSensitive` property
          is editable.
      anchorHorizontalAlignment:
        description: |
          This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :

          - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.
          - `right`: Aligns the tab’s left side with the last character of the matching anchor word.

          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorHorizontalAlignmentMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorHorizontalAlignment`
          property is editable.
      anchorIgnoreIfNotPresent:
        description:
          When **true,** this tab is ignored if the `anchorString` is not
          found in the document.
        type: string
      anchorIgnoreIfNotPresentMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorIgnoreIfNotPresent`
          property is editable.
      anchorMatchWholeWord:
        description: |
          When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**

          For example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.

          This functionality uses the following rules:

          - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:

            $~><|^+=

            For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`

          - Strings embedded in other strings are ignored during the matching process.

          - In words that have dashes, the parts separated by dashes are treated as distinct words.

            Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**

          - Letters with accent marks are treated as distinct characters from their unaccented counterparts.

          - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.

            Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.

          - Unlike punctuation, numbers are not ignored when finding anchor words.

            Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).


          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorMatchWholeWordMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorMatchWholeWord` property
          is editable.
      anchorString:
        description:
          Specifies the string to find in the document and use as the basis
          for tab placement.
        type: string
      anchorStringMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorString` property is
          editable.
      anchorTabProcessorVersion:
        description: Reserved for DocuSign.
        type: string
      anchorTabProcessorVersionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Reserved for DocuSign.
      anchorUnits:
        description: |
          Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:

          - `pixels` (default)
          - `inches`
          - `mms`
          - `cms`
        type: string
      anchorUnitsMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorUnits` property is
          editable.
      anchorXOffset:
        description:
          "Specifies the X axis location of the tab in `anchorUnits` relative
          to the `anchorString`.

          "
        type: string
      anchorXOffsetMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorXOffset` property
          is editable.
      anchorYOffset:
        description:
          "Specifies the Y axis location of the tab in `anchorUnits` relative
          to the `anchorString`.

          "
        type: string
      anchorYOffsetMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorYOffset` property
          is editable.
      caption:
        description: ""
        type: string
      captionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `caption` property is editable.
      conditionalParentLabel:
        description:
          For conditional fields this is the `tabLabel` of the parent tab
          that controls this tab's visibility.
        type: string
      conditionalParentLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `conditionalParentLabel`
          property is editable.
      conditionalParentValue:
        description: |
          For conditional fields, this is the value of the parent tab that controls the tab's visibility.

          If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use "on" as the value to show that the parent tab is active.
        type: string
      conditionalParentValueMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `conditionalParentValue`
          property is editable.
      customTabId:
        description:
          The DocuSign generated custom tab ID for the custom tab to be
          applied. This can only be used when adding new tabs for a recipient. When
          used, the new tab inherits all the custom tab properties.
        type: string
      customTabIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `customTabId` property is
          editable.
      documentId:
        description:
          Specifies the document ID number that the tab is placed on. This
          must refer to an existing Document's ID attribute.
        type: string
      documentIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `documentId` property is
          editable.
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      formOrder:
        description:
          An integer specifying the order in which the guided form HTML
          should render. The order is relative to the `formPageLabel`, the group by
          which to place the guided form HTML block.
        type: string
      formOrderMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `formOrder` property is editable.
      formPageLabel:
        description:
          A string specifying the group in which to place the guided form
          HTML. Each group displays as a separate guided forms page in the signing
          experience.
        type: string
      formPageLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `formPageLabel` property
          is editable.
      formPageNumber:
        description:
          An integer specifying the order in which to present the guided
          form pages.
        type: string
      formPageNumberMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `fromPageNumber` property
          is editable.
      height:
        description: |-
          The height of the tab in pixels.
          Must be an integer.
        type: string
      heightMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `height` property is editable.
      mergeField:
        "$ref": "#/definitions/mergeField"
        description:
          Contains the information necessary to map the tab to a field
          in SalesForce.
      mergeFieldXml:
        description: Reserved for DocuSign.
        type: string
      name:
        description: ""
        type: string
      nameMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `name` property is editable.
          This property is read-only.
      pageNumber:
        description: Specifies the page number on which the tab is located.
        type: string
      pageNumberMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `pageNumber` property is
          editable.
      recipientId:
        description:
          "The ID of the recipient to whom the tab will be assigned. This
          value should match the `recipientId` defined in the recipient object.

          "
        type: string
      recipientIdGuid:
        description:
          The globally-unique identifier (GUID) for a specific recipient
          on a specific envelope. If the same recipient is associated with multiple
          envelopes, they will have a different GUID for each one. This property is
          read-only.
        type: string
      recipientIdGuidMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `recipientIdGuid` property
          is editable.
      recipientIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `recipientId` property is
          editable.
      scaleValue:
        description:
          Sets the size of the tab. This field accepts values from `0.5`
          to `1.0`, where `1.0` represents full size and `0.5` is 50% of full size.
        type: string
      scaleValueMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `scaleValue` property is
          editable.
      smartContractInformation:
        "$ref": "#/definitions/smartContractInformation"
        description: Reserved for DocuSign.
      source:
        description: Reserved for DocuSign.
        type: string
      status:
        description:
          "Indicates the envelope status. Valid values are:\n\n* sent -
          The envelope is sent to the recipients. \n* created - The envelope is saved
          as a draft and can be modified and sent later."
        type: string
      statusMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `status` property is editable.
      tabGroupLabels:
        description: |-
          An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.

          To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
        type: array
        items:
          type: string
      tabGroupLabelsMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `tabGroupLabels` property
          is editable.
      tabId:
        description: The unique identifier for the tab.
        type: string
      tabIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabId` property is editable.
      tabLabel:
        description: |
          The label associated with the tab. This value may be an empty string.
          If no value is provided, the tab type is used as the value.

          Maximum Length: 500 characters.
        type: string
      tabLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabLabel` property is editable.
      tabOrder:
        description: |-
          A positive integer that sets the order the tab is navigated to during signing.

          Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
        type: string
      tabOrderMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabOrder` property is editable.
      tabType:
        description: Indicates the type of tab (for example, `signHere` or `initialHere`).
        type: string
      tabTypeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabType` property is editable.
      templateLocked:
        description:
          "When **true,** the sender cannot change any attributes of the
          recipient. Used only when working with template recipients. "
        type: string
      templateLockedMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `templateLocked` property
          is editable.
      templateRequired:
        description:
          When **true,** the sender may not remove the recipient. Used
          only when working with template recipients.
        type: string
      templateRequiredMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `templateRequired` property
          is editable.
      tooltip:
        description:
          "The text of a tooltip that appears when a user hovers over a
          form field or tab.

          "
        type: string
      toolTipMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          "Metadata that indicates whether the `toolTip` property is editable.

          "
      width:
        description: |-
          The width of the tab in pixels.
          Must be an integer.
        type: string
      widthMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `width` property is editable.
      xPosition:
        description: |
          This property indicates the horizontal offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. Must be an integer. May be zero.
        type: string
      xPositionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `xPosition` property is editable.
      yPosition:
        description: |
          This property indicates the vertical offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. Must be an integer. May be zero.
        type: string
      yPositionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `yPosition` property is editable.
    description: |-
      A Notary Seal tab enables the recipient to notarize a document. This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary].

      [notary]: /docs/notary-api/
    x-ds-definition-name: notarySeal
    x-ms-summary: |-
      A Notary Seal tab enables the recipient to notarize a document. This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary].

      [notary]: /docs/notary-api/
  note:
    type: object
    properties:
      anchorAllowWhiteSpaceInCharacters:
        description: |
          When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.

          First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.

          Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.

          The default value is **true.**
        type: string
      anchorAllowWhiteSpaceInCharactersMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorAllowWhiteSpaceInCharacters`
          property is editable.
      anchorCaseSensitive:
        description: |-
          This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**

          For example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.

          This functionality uses the following rules:

          - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:

            $~><|^+=

            For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`

          - Strings embedded in other strings are ignored during the matching process.

          - In words that have dashes, the parts separated by dashes are treated as distinct words.

            Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**

          - Letters with accent marks are treated as distinct characters from their unaccented counterparts.

          - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.

            Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.

          - Unlike punctuation, numbers are not ignored when finding anchor words.

            Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).

          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorCaseSensitiveMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorCaseSensitive` property
          is editable.
      anchorHorizontalAlignment:
        description: |
          This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :

          - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.
          - `right`: Aligns the tab’s left side with the last character of the matching anchor word.

          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorHorizontalAlignmentMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorHorizontalAlignment`
          property is editable.
      anchorIgnoreIfNotPresent:
        description:
          When **true,** this tab is ignored if the `anchorString` is not
          found in the document.
        type: string
      anchorIgnoreIfNotPresentMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorIgnoreIfNotPresent`
          property is editable.
      anchorMatchWholeWord:
        description: |
          When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**

          For example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.

          This functionality uses the following rules:

          - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:

            $~><|^+=

            For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`

          - Strings embedded in other strings are ignored during the matching process.

          - In words that have dashes, the parts separated by dashes are treated as distinct words.

            Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**

          - Letters with accent marks are treated as distinct characters from their unaccented counterparts.

          - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.

            Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.

          - Unlike punctuation, numbers are not ignored when finding anchor words.

            Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).


          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorMatchWholeWordMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorMatchWholeWord` property
          is editable.
      anchorString:
        description:
          Specifies the string to find in the document and use as the basis
          for tab placement.
        type: string
      anchorStringMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorString` property is
          editable.
      anchorTabProcessorVersion:
        description: Reserved for DocuSign.
        type: string
      anchorTabProcessorVersionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Reserved for DocuSign.
      anchorUnits:
        description: |
          Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:

          - `pixels` (default)
          - `inches`
          - `mms`
          - `cms`
        type: string
      anchorUnitsMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorUnits` property is
          editable.
      anchorXOffset:
        description:
          "Specifies the X axis location of the tab in `anchorUnits` relative
          to the `anchorString`.

          "
        type: string
      anchorXOffsetMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorXOffset` property
          is editable.
      anchorYOffset:
        description:
          "Specifies the Y axis location of the tab in `anchorUnits` relative
          to the `anchorString`.

          "
        type: string
      anchorYOffsetMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorYOffset` property
          is editable.
      bold:
        description: When **true,** the information in the tab is bold.
        type: string
      boldMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `bold` property is editable.
      caption:
        description: ""
        type: string
      captionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `caption` property is editable.
      conditionalParentLabel:
        description:
          For conditional fields this is the `tabLabel` of the parent tab
          that controls this tab's visibility.
        type: string
      conditionalParentLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `conditionalParentLabel`
          property is editable.
      conditionalParentValue:
        description: |
          For conditional fields, this is the value of the parent tab that controls the tab's visibility.

          If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use "on" as the value to show that the parent tab is active.
        type: string
      conditionalParentValueMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `conditionalParentValue`
          property is editable.
      customTabId:
        description:
          The DocuSign generated custom tab ID for the custom tab to be
          applied. This can only be used when adding new tabs for a recipient. When
          used, the new tab inherits all the custom tab properties.
        type: string
      customTabIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `customTabId` property is
          editable.
      documentId:
        description:
          Specifies the document ID number that the tab is placed on. This
          must refer to an existing Document's ID attribute.
        type: string
      documentIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `documentId` property is
          editable.
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      font:
        description: |
          The font to be used for the tab value. Supported fonts include:

          - Default
          - Arial
          - ArialNarrow
          - Calibri
          - CourierNew
          - Garamond
          - Georgia
          - Helvetica
          - LucidaConsole
          - MSGothic
          - MSMincho
          - OCR-A
          - Tahoma
          - TimesNewRoman
          - Trebuchet
          - Verdana
        type: string
      fontColor:
        description:
          "The font color to use for the information in the tab. Possible
          values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n-
          Gold\n- Green\n- NavyBlue\n- Purple\n- White\n"
        type: string
      fontColorMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `fontColor` property is editable.
      fontMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `font` property is editable.
      fontSize:
        description: |-
          The font size used for the information in the tab. Possible values are:

          - Size7
          - Size8
          - Size9
          - Size10
          - Size11
          - Size12
          - Size14
          - Size16
          - Size18
          - Size20
          - Size22
          - Size24
          - Size26
          - Size28
          - Size36
          - Size48
          - Size72
        type: string
      fontSizeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `fontSize` property is editable.
      formOrder:
        description:
          An integer specifying the order in which the guided form HTML
          should render. The order is relative to the `formPageLabel`, the group by
          which to place the guided form HTML block.
        type: string
      formOrderMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `formOrder` property is editable.
      formPageLabel:
        description:
          A string specifying the group in which to place the guided form
          HTML. Each group displays as a separate guided forms page in the signing
          experience.
        type: string
      formPageLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `formPageLabel` property
          is editable.
      formPageNumber:
        description:
          An integer specifying the order in which to present the guided
          form pages.
        type: string
      formPageNumberMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `fromPageNumber` property
          is editable.
      height:
        description: |-
          The height of the tab in pixels.
          Must be an integer.
        type: string
      heightMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `height` property is editable.
      italic:
        description: When **true,** the information in the tab is italic.
        type: string
      italicMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `italic` property is editable.
      localePolicy:
        "$ref": "#/definitions/localePolicyTab"
        description: Locale-specific settings.
      mergeField:
        "$ref": "#/definitions/mergeField"
        description:
          Contains the information necessary to map the tab to a field
          in SalesForce.
      mergeFieldXml:
        description: Reserved for DocuSign.
        type: string
      name:
        description: |-
          The name of the tab. For example, `Sign Here` or `Initial Here`.

          If the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.
        type: string
      nameMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `name` property is editable.
          This property is read-only.
      pageNumber:
        description:
          "The page number on which the tab is located. For supplemental
          documents, this value must be `1`.

          "
        type: string
      pageNumberMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `pageNumber` property is
          editable.
      recipientId:
        description:
          "The ID of the recipient to whom the tab will be assigned. This
          value should match the `recipientId` defined in the recipient object.

          "
        type: string
      recipientIdGuid:
        description:
          The globally-unique identifier (GUID) for a specific recipient
          on a specific envelope. If the same recipient is associated with multiple
          envelopes, they will have a different GUID for each one. This property is
          read-only.
        type: string
      recipientIdGuidMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `recipientIdGuid` property
          is editable.
      recipientIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `recipientId` property is
          editable.
      shared:
        description: When **true,** this custom tab is shared.
        type: string
      sharedMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `shared` property is editable.
      smartContractInformation:
        "$ref": "#/definitions/smartContractInformation"
        description: Reserved for DocuSign.
      source:
        description: Reserved for DocuSign.
        type: string
      status:
        description: |-
          The status of the tab. Possible values are:

          - `active`: The tab is active, but the recipient has not yet interacted with it.
          - `signed`: The recipient signed the tab.
          - `declined`: The recipient declined the envelope.
          - `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).
        type: string
      statusMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `status` property is editable.
      tabGroupLabels:
        description: |-
          An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.

          To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
        type: array
        items:
          type: string
      tabGroupLabelsMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `tabGroupLabels` property
          is editable.
      tabId:
        description: The unique identifier for the tab.
        type: string
      tabIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabId` property is editable.
      tabLabel:
        description: |
          The label associated with the tab. This value may be an empty string.
          If no value is provided, the tab type is used as the value.

          Maximum Length: 500 characters.
        type: string
      tabLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabLabel` property is editable.
      tabOrder:
        description: |-
          A positive integer that sets the order the tab is navigated to during signing.

          Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
        type: string
      tabOrderMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabOrder` property is editable.
      tabType:
        description: Indicates the type of tab (for example, `signHere` or `initialHere`).
        type: string
      tabTypeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabType` property is editable.
      templateLocked:
        description:
          "When **true,** the sender cannot change any attributes of the
          recipient. Used only when working with template recipients. "
        type: string
      templateLockedMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `templateLocked` property
          is editable.
      templateRequired:
        description:
          When **true,** the sender may not remove the recipient. Used
          only when working with template recipients.
        type: string
      templateRequiredMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `templateRequired` property
          is editable.
      tooltip:
        description: |
          **Note:** Note tabs never display this tooltip in the signing interface.

          Although you can technically set a value via the API for this tab,
          it will not be displayed to the recipient.
        type: string
      toolTipMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          "Metadata that indicates whether the `toolTip` property is editable.

          "
      underline:
        description: When **true,** the information in the tab is underlined.
        type: string
      underlineMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `underline` property is editable.
      value:
        description: "Specifies the value of the tab. "
        type: string
      valueMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `value` property is editable.
      width:
        description: |-
          The width of the tab in pixels.
          Must be an integer.
        type: string
      widthMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `width` property is editable.
      xPosition:
        description: |
          This property indicates the horizontal offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. Must be an integer. May be zero.

          To improve the tab's position on the document,
          DocuSign recommends
          adjusting `xPosition`
          and `yPosition`
          coordinates
          by (-3, -2)
        type: string
      xPositionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `xPosition` property is editable.
      yPosition:
        description: |
          This property indicates the vertical offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. Must be an integer. May be zero.

          To improve the tab's position on the document,
          DocuSign recommends
          adjusting `xPosition`
          and `yPosition`
          coordinates
          by (-3, -2)
        type: string
      yPositionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `yPosition` property is editable.
    description: |
      A tab that displays additional information, in the form of a
      note, for the recipient.
    x-ds-definition-name: note
    x-ms-summary: |
      A tab that displays additional information, in the form of a
      note, for the recipient.
  notification:
    description:
      A complex element that specifies the notification settings for the
      envelope.
    type: object
    properties:
      expirations:
        "$ref": "#/definitions/expirations"
        description:
          A complex element that specifies the expiration settings for
          the envelope.
      reminders:
        "$ref": "#/definitions/reminders"
        description: A complex element that specifies reminder settings for the envelope.
      useAccountDefaults:
        description:
          When **true,** the account default notification settings are
          used for the envelope, overriding the reminders and expirations settings.
          When **false,** the reminders and expirations settings specified in this
          request are used. The default value is **false.**
        type: string
    x-ds-definition-name: notification
    x-ms-summary:
      A complex element that specifies the notification settings for the
      envelope.
  notificationDefaults:
    type: object
    properties:
      apiEmailNotifications:
        "$ref": "#/definitions/notificationDefaultSettings"
        description:
          The default notification settings for envelopes sent by using
          the console.
      emailNotifications:
        "$ref": "#/definitions/notificationDefaultSettings"
        description:
          The default notification settings for envelopes sent by using
          the API.
    x-ds-definition-name: notificationDefaults
    description: ""
    x-ms-summary: ""
  notificationDefaultSettings:
    type: object
    properties:
      senderEmailNotifications:
        "$ref": "#/definitions/senderEmailNotifications"
        description:
          " \nAn array of email notifications that sets the email the user
          receives when they are a sender. When the specific email notification is
          set to true, the user will receive those types of email notifications from
          DocuSign. \n\nThe user inherits the default account sender email notification
          settings when the user is created. The email notifications are:\n\n* envelopeComplete\n*
          changedSigner \n* senderEnvelopeDeclined \n* withdrawnConsent \n* recipientViewed
          \n* deliveryFailed \n "
      signerEmailNotifications:
        "$ref": "#/definitions/signerEmailNotifications"
        description:
          "An array of email notifications that specifies the email the
          user receives when they are a recipient. When the specific email notification
          is set to true, the user receives those types of email notifications from
          DocuSign. The user inherits the default account email notification settings
          when the user is created.

          "
    description:
      Contains details about the default notification settings for the
      envelope notifications that senders and signers receive.
    x-ds-definition-name: notificationDefaultSettings
    x-ms-summary:
      Contains details about the default notification settings for the
      envelope notifications that senders and signers receive.
  number:
    type: object
    properties:
      anchorAllowWhiteSpaceInCharacters:
        description: |
          When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.

          First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.

          Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.

          The default value is **true.**
        type: string
      anchorAllowWhiteSpaceInCharactersMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorAllowWhiteSpaceInCharacters`
          property is editable.
      anchorCaseSensitive:
        description: |-
          This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**

          For example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.

          This functionality uses the following rules:

          - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:

            $~><|^+=

            For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`

          - Strings embedded in other strings are ignored during the matching process.

          - In words that have dashes, the parts separated by dashes are treated as distinct words.

            Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**

          - Letters with accent marks are treated as distinct characters from their unaccented counterparts.

          - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.

            Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.

          - Unlike punctuation, numbers are not ignored when finding anchor words.

            Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).

          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorCaseSensitiveMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorCaseSensitive` property
          is editable.
      anchorHorizontalAlignment:
        description: |
          This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :

          - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.
          - `right`: Aligns the tab’s left side with the last character of the matching anchor word.

          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorHorizontalAlignmentMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorHorizontalAlignment`
          property is editable.
      anchorIgnoreIfNotPresent:
        description:
          When **true,** this tab is ignored if the `anchorString` is not
          found in the document.
        type: string
      anchorIgnoreIfNotPresentMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorIgnoreIfNotPresent`
          property is editable.
      anchorMatchWholeWord:
        description: |
          When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**

          For example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.

          This functionality uses the following rules:

          - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:

            $~><|^+=

            For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`

          - Strings embedded in other strings are ignored during the matching process.

          - In words that have dashes, the parts separated by dashes are treated as distinct words.

            Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**

          - Letters with accent marks are treated as distinct characters from their unaccented counterparts.

          - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.

            Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.

          - Unlike punctuation, numbers are not ignored when finding anchor words.

            Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).


          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorMatchWholeWordMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorMatchWholeWord` property
          is editable.
      anchorString:
        description:
          Specifies the string to find in the document and use as the basis
          for tab placement.
        type: string
      anchorStringMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorString` property is
          editable.
      anchorTabProcessorVersion:
        description: Reserved for DocuSign.
        type: string
      anchorTabProcessorVersionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Reserved for DocuSign.
      anchorUnits:
        description: |
          Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:

          - `pixels` (default)
          - `inches`
          - `mms`
          - `cms`
        type: string
      anchorUnitsMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorUnits` property is
          editable.
      anchorXOffset:
        description:
          "Specifies the X axis location of the tab in `anchorUnits` relative
          to the `anchorString`.

          "
        type: string
      anchorXOffsetMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorXOffset` property
          is editable.
      anchorYOffset:
        description:
          "Specifies the Y axis location of the tab in `anchorUnits` relative
          to the `anchorString`.

          "
        type: string
      anchorYOffsetMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorYOffset` property
          is editable.
      bold:
        description: When **true,** the information in the tab is bold.
        type: string
      boldMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `bold` property is editable.
      caption:
        description: ""
        type: string
      captionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `caption` property is editable.
      concealValueOnDocument:
        description: |-
          When **true,** the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.

          When an envelope is completed the information is only available to the sender through the Form Data link in the DocuSign Console. The information on the downloaded document remains masked by asterisks.

          This setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.
        type: string
      concealValueOnDocumentMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `concealValueOnDocument`
          property is editable.
      conditionalParentLabel:
        description:
          For conditional fields this is the `tabLabel` of the parent tab
          that controls this tab's visibility.
        type: string
      conditionalParentLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `conditionalParentLabel`
          property is editable.
      conditionalParentValue:
        description: |
          For conditional fields, this is the value of the parent tab that controls the tab's visibility.

          If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use "on" as the value to show that the parent tab is active.
        type: string
      conditionalParentValueMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `conditionalParentValue`
          property is editable.
      customTabId:
        description:
          The DocuSign generated custom tab ID for the custom tab to be
          applied. This can only be used when adding new tabs for a recipient. When
          used, the new tab inherits all the custom tab properties.
        type: string
      customTabIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `customTabId` property is
          editable.
      disableAutoSize:
        description:
          When **true,** disables the auto sizing of single line text boxes
          in the signing screen when the signer enters data. If disabled users will
          only be able enter as much data as the text box can hold. By default this
          is false. This property only affects single line text boxes.
        type: string
      disableAutoSizeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `disableAutoSize` property
          is editable.
      documentId:
        description:
          Specifies the document ID number that the tab is placed on. This
          must refer to an existing Document's ID attribute.
        type: string
      documentIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `documentId` property is
          editable.
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      font:
        description: |
          The font to be used for the tab value. Supported fonts include:

          - Default
          - Arial
          - ArialNarrow
          - Calibri
          - CourierNew
          - Garamond
          - Georgia
          - Helvetica
          - LucidaConsole
          - MSGothic
          - MSMincho
          - OCR-A
          - Tahoma
          - TimesNewRoman
          - Trebuchet
          - Verdana
        type: string
      fontColor:
        description:
          "The font color to use for the information in the tab. Possible
          values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n-
          Gold\n- Green\n- NavyBlue\n- Purple\n- White\n"
        type: string
      fontColorMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `fontColor` property is editable.
      fontMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `font` property is editable.
      fontSize:
        description: |-
          The font size used for the information in the tab. Possible values are:

          - Size7
          - Size8
          - Size9
          - Size10
          - Size11
          - Size12
          - Size14
          - Size16
          - Size18
          - Size20
          - Size22
          - Size24
          - Size26
          - Size28
          - Size36
          - Size48
          - Size72
        type: string
      fontSizeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `fontSize` property is editable.
      formOrder:
        description:
          An integer specifying the order in which the guided form HTML
          should render. The order is relative to the `formPageLabel`, the group by
          which to place the guided form HTML block.
        type: string
      formOrderMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `formOrder` property is editable.
      formPageLabel:
        description:
          A string specifying the group in which to place the guided form
          HTML. Each group displays as a separate guided forms page in the signing
          experience.
        type: string
      formPageLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `formPageLabel` property
          is editable.
      formPageNumber:
        description:
          An integer specifying the order in which to present the guided
          form pages.
        type: string
      formPageNumberMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `fromPageNumber` property
          is editable.
      formula:
        description: |
          Contains the formula
          for calculating the value of
          this tab.

          Use a tab's `tabLabel`,
          enclosed in brackets,
          to refer to it.

          For example,
          you want to present the total cost
          of two items, tax included.

          The cost of each item is stored
          in number tabs labeled Item1 and Item2.
          The tax rate is in a number tab
          labeled TaxRate.

          The formula string for this property
          would be:
          `([Item1] + [Item2]) * (1 + [TaxRate])`

          See [Calculated Fields][calculatedfields]
          in the DocuSign Support Center
          to learn more about formulas.

          Maximum Length: 2000 characters

          [calculatedfields]: https://support.docusign.com/s/document-item?bundleId=gbo1643332197980&topicId=crs1578456361259.html
        type: string
      formulaMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata indicating if the sender can edit the `formula` property.
      height:
        description: |-
          The height of the tab in pixels.
          Must be an integer.
        type: string
      heightMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `height` property is editable.
      italic:
        description: When **true,** the information in the tab is italic.
        type: string
      italicMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `italic` property is editable.
      localePolicy:
        "$ref": "#/definitions/localePolicyTab"
        description: Locale-specific settings.
      locked:
        description:
          When **true,** the signer cannot change the data of the custom
          tab.
        type: string
      lockedMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `locked` property is editable.
      maxLength:
        description:
          An optional value that describes the maximum length of the property
          when the property is a string.
        type: string
      maxLengthMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `maxLength` property is editable.
      mergeField:
        "$ref": "#/definitions/mergeField"
        description:
          Contains the information necessary to map the tab to a field
          in SalesForce.
      mergeFieldXml:
        description: Reserved for DocuSign.
        type: string
      name:
        description: |-
          The name of the tab. For example, `Sign Here` or `Initial Here`.

          If the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.
        type: string
      nameMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `name` property is editable.
          This property is read-only.
      originalValue:
        description: "The initial value of the tab. "
        type: string
      originalValueMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `originalValue` property
          is editable.
      pageNumber:
        description:
          "The page number on which the tab is located. For supplemental
          documents, this value must be `1`.

          "
        type: string
      pageNumberMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `pageNumber` property is
          editable.
      recipientId:
        description:
          "The ID of the recipient to whom the tab will be assigned. This
          value should match the `recipientId` defined in the recipient object.

          "
        type: string
      recipientIdGuid:
        description:
          The globally-unique identifier (GUID) for a specific recipient
          on a specific envelope. If the same recipient is associated with multiple
          envelopes, they will have a different GUID for each one. This property is
          read-only.
        type: string
      recipientIdGuidMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `recipientIdGuid` property
          is editable.
      recipientIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `recipientId` property is
          editable.
      requireAll:
        description:
          "When **true** and shared is true, information must be entered
          in this field to complete the envelope. "
        type: string
      requireAllMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `requireAll` property is
          editable.
      required:
        description: When **true,** the signer is required to fill out this tab.
        type: string
      requiredMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `required` property is editable.
      requireInitialOnSharedChange:
        description:
          Optional element for field markup. When **true,** the signer
          is required to initial when they modify a shared field.
        type: string
      requireInitialOnSharedChangeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `requireInitialOnSharedChange`
          property is editable.
      senderRequired:
        description:
          "When **true,** the sender must populate the tab before an envelope
          can be sent using the template. \n\nThis value tab can only be changed by
          modifying (PUT) the template. \n\nTabs with a `senderRequired` value of
          true cannot be deleted from an envelope."
        type: string
      senderRequiredMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `senderRequired` property
          is editable.
      shared:
        description: When **true,** this custom tab is shared.
        type: string
      sharedMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `shared` property is editable.
      shareToRecipients:
        description: Reserved for DocuSign.
        type: string
      shareToRecipientsMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Reserved for DocuSign.
      smartContractInformation:
        "$ref": "#/definitions/smartContractInformation"
        description: Reserved for DocuSign.
      source:
        description: Reserved for DocuSign.
        type: string
      status:
        description: |-
          The status of the tab. Possible values are:

          - `active`: The tab is active, but the recipient has not yet interacted with it.
          - `signed`: The recipient signed the tab.
          - `declined`: The recipient declined the envelope.
          - `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).
        type: string
      statusMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `status` property is editable.
      tabGroupLabels:
        description: |-
          An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.

          To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
        type: array
        items:
          type: string
      tabGroupLabelsMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `tabGroupLabels` property
          is editable.
      tabId:
        description: The unique identifier for the tab.
        type: string
      tabIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabId` property is editable.
      tabLabel:
        description: |
          The label associated with the tab. This value may be an empty string.
          If no value is provided, the tab type is used as the value.

          Maximum Length: 500 characters.
        type: string
      tabLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabLabel` property is editable.
      tabOrder:
        description: |-
          A positive integer that sets the order the tab is navigated to during signing.

          Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
        type: string
      tabOrderMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabOrder` property is editable.
      tabType:
        description: Indicates the type of tab (for example, `signHere` or `initialHere`).
        type: string
      tabTypeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabType` property is editable.
      templateLocked:
        description:
          "When **true,** the sender cannot change any attributes of the
          recipient. Used only when working with template recipients. "
        type: string
      templateLockedMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `templateLocked` property
          is editable.
      templateRequired:
        description:
          When **true,** the sender may not remove the recipient. Used
          only when working with template recipients.
        type: string
      templateRequiredMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `templateRequired` property
          is editable.
      tooltip:
        description:
          "The text of a tooltip that appears when a user hovers over a
          form field or tab.

          "
        type: string
      toolTipMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          "Metadata that indicates whether the `toolTip` property is editable.

          "
      underline:
        description: When **true,** the information in the tab is underlined.
        type: string
      underlineMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `underline` property is editable.
      validationMessage:
        description:
          The message displayed if the custom tab fails input validation
          (either custom of embedded).
        type: string
      validationMessageMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `validationMessage` property
          is editable.
      validationPattern:
        description: A regular expression used to validate input for the tab.
        type: string
      validationPatternMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `validationPattern` property
          is editable.
      value:
        description: "Specifies the value of the tab. "
        type: string
      valueMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `value` property is editable.
      width:
        description: |-
          The width of the tab in pixels.
          Must be an integer.
        type: string
      widthMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `width` property is editable.
      xPosition:
        description: |
          This property indicates the horizontal offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. Must be an integer. May be zero.

          To improve the tab's position on the document,
          DocuSign recommends
          adjusting `xPosition`
          and `yPosition`
          coordinates
          by (-3, -2)
        type: string
      xPositionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `xPosition` property is editable.
      yPosition:
        description: |
          This property indicates the vertical offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. Must be an integer. May be zero.

          To improve the tab's position on the document,
          DocuSign recommends
          adjusting `xPosition`
          and `yPosition`
          coordinates
          by (-3, -2)
        type: string
      yPositionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `yPosition` property is editable.
    description: |
      Number tabs validate that the entered value is a number.
      They do not support advanced validation or display options.
      See [Number fields](/docs/esign-rest-api/esign101/concepts/tabs/number-fields/)
      to learn more about this tab type.
    x-ds-definition-name: number
    x-ms-summary: |
      Number tabs validate that the entered value is a number.
      They do not support advanced validation or display options.
      See [Number fields](/docs/esign-rest-api/esign101/concepts/tabs/number-fields/)
      to learn more about this tab type.
  numerical:
    type: object
    properties:
      anchorAllowWhiteSpaceInCharacters:
        description: |
          When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.

          First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.

          Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.

          The default value is **true.**
        type: string
      anchorAllowWhiteSpaceInCharactersMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorAllowWhiteSpaceInCharacters`
          property is editable.
      anchorCaseSensitive:
        description: |-
          This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**

          For example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.

          This functionality uses the following rules:

          - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:

            $~><|^+=

            For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`

          - Strings embedded in other strings are ignored during the matching process.

          - In words that have dashes, the parts separated by dashes are treated as distinct words.

            Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**

          - Letters with accent marks are treated as distinct characters from their unaccented counterparts.

          - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.

            Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.

          - Unlike punctuation, numbers are not ignored when finding anchor words.

            Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).

          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorCaseSensitiveMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorCaseSensitive` property
          is editable.
      anchorHorizontalAlignment:
        description: |
          This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :

          - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.
          - `right`: Aligns the tab’s left side with the last character of the matching anchor word.

          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorHorizontalAlignmentMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorHorizontalAlignment`
          property is editable.
      anchorIgnoreIfNotPresent:
        description:
          When **true,** this tab is ignored if the `anchorString` is not
          found in the document.
        type: string
      anchorIgnoreIfNotPresentMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorIgnoreIfNotPresent`
          property is editable.
      anchorMatchWholeWord:
        description: |
          When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**

          For example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.

          This functionality uses the following rules:

          - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:

            $~><|^+=

            For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`

          - Strings embedded in other strings are ignored during the matching process.

          - In words that have dashes, the parts separated by dashes are treated as distinct words.

            Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**

          - Letters with accent marks are treated as distinct characters from their unaccented counterparts.

          - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.

            Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.

          - Unlike punctuation, numbers are not ignored when finding anchor words.

            Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).


          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorMatchWholeWordMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorMatchWholeWord` property
          is editable.
      anchorString:
        description:
          Specifies the string to find in the document and use as the basis
          for tab placement.
        type: string
      anchorStringMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorString` property is
          editable.
      anchorTabProcessorVersion:
        description: Reserved for DocuSign.
        type: string
      anchorTabProcessorVersionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Reserved for DocuSign.
      anchorUnits:
        description: |
          Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:

          - `pixels` (default)
          - `inches`
          - `mms`
          - `cms`
        type: string
      anchorUnitsMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorUnits` property is
          editable.
      anchorXOffset:
        description:
          "Specifies the X axis location of the tab in `anchorUnits` relative
          to the `anchorString`.

          "
        type: string
      anchorXOffsetMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorXOffset` property
          is editable.
      anchorYOffset:
        description:
          "Specifies the Y axis location of the tab in `anchorUnits` relative
          to the `anchorString`.

          "
        type: string
      anchorYOffsetMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorYOffset` property
          is editable.
      bold:
        description: When **true,** the information in the tab is bold.
        type: string
      boldMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `bold` property is editable.
      caption:
        description: ""
        type: string
      captionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `caption` property is editable.
      concealValueOnDocument:
        description: |-
          When **true,** the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.

          When an envelope is completed the information is only available to the sender through the Form Data link in the DocuSign Console. The information on the downloaded document remains masked by asterisks.

          This setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.
        type: string
      concealValueOnDocumentMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `concealValueOnDocument`
          property is editable.
      conditionalParentLabel:
        description:
          For conditional fields this is the `tabLabel` of the parent tab
          that controls this tab's visibility.
        type: string
      conditionalParentLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `conditionalParentLabel`
          property is editable.
      conditionalParentValue:
        description: |
          For conditional fields, this is the value of the parent tab that controls the tab's visibility.

          If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use "on" as the value to show that the parent tab is active.
        type: string
      conditionalParentValueMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `conditionalParentValue`
          property is editable.
      customTabId:
        description: |-
          The DocuSign-generated custom tab ID for the custom tab to be applied.
          This can only be used when adding new tabs for a recipient.
          When used, the new tab inherits all the custom tab properties.
        type: string
      customTabIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `customTabId` property is
          editable.
      disableAutoSize:
        description:
          When **true,** disables the auto sizing of single line text boxes
          in the signing screen when the signer enters data. If disabled users will
          only be able enter as much data as the text box can hold. By default this
          is false. This property only affects single line text boxes.
        type: string
      disableAutoSizeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `disableAutoSize` property
          is editable.
      documentId:
        description:
          "Specifies the document ID number that the tab is placed on.
          This ID must refer to an existing document.

          "
        type: string
      documentIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `documentId` property is
          editable.
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      font:
        description: |
          The font to be used for the tab value. Supported fonts include:

          - Default
          - Arial
          - ArialNarrow
          - Calibri
          - CourierNew
          - Garamond
          - Georgia
          - Helvetica
          - LucidaConsole
          - MSGothic
          - MSMincho
          - OCR-A
          - Tahoma
          - TimesNewRoman
          - Trebuchet
          - Verdana
        type: string
      fontColor:
        description:
          "The font color to use for the information in the tab. Possible
          values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n-
          Gold\n- Green\n- NavyBlue\n- Purple\n- White\n"
        type: string
      fontColorMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `fontColor` property is editable.
      fontMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `font` property is editable.
      fontSize:
        description: |-
          The font size used for the information in the tab. Possible values are:

          - Size7
          - Size8
          - Size9
          - Size10
          - Size11
          - Size12
          - Size14
          - Size16
          - Size18
          - Size20
          - Size22
          - Size24
          - Size26
          - Size28
          - Size36
          - Size48
          - Size72
        type: string
      fontSizeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `fontSize` property is editable.
      formOrder:
        description:
          An integer specifying the order in which the guided form HTML
          should render. The order is relative to the `formPageLabel`, the group by
          which to place the guided form HTML block.
        type: string
      formOrderMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `formOrder` property is editable.
      formPageLabel:
        description:
          A string specifying the group in which to place the guided form
          HTML. Each group displays as a separate guided forms page in the signing
          experience.
        type: string
      formPageLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `formPageLabel` property
          is editable.
      formPageNumber:
        description:
          An integer specifying the order in which to present the guided
          form pages.
        type: string
      formPageNumberMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `fromPageNumber` property
          is editable.
      height:
        description: |-
          The height of the tab in pixels.
          Must be an integer.
        type: string
      heightMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `height` property is editable.
      italic:
        description: When **true,** the information in the tab is italic.
        type: string
      italicMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `italic` property is editable.
      localePolicy:
        "$ref": "#/definitions/localePolicyTab"
        description: Locale-specific settings.
      locked:
        description:
          When **true,** the signer cannot change the data of the custom
          tab.
        type: string
      lockedMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `locked` property is editable.
      maxLength:
        description:
          An optional value that describes the maximum length of the property
          when the property is a string.
        type: string
      maxLengthMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `maxLength` property is editable.
      maxNumericalValue:
        description: |-
          The maximum value that the numerical tab can take on.
          The largest value allowed, and the default if not specified, is
          `999999999.99`
        type: string
      mergeField:
        "$ref": "#/definitions/mergeField"
        description:
          Contains the information necessary to map the tab to a field
          in SalesForce.
      mergeFieldXml:
        description: Reserved for DocuSign.
        type: string
      minNumericalValue:
        description: |-
          The minimum value that the numerical tab can take on.
          The smallest value allowed, and the default if not specified, is
          `-999999999.99`
        type: string
      name:
        description: |-
          The name of the tab. For example, `Sign Here` or `Initial Here`.

          If the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.
        type: string
      nameMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `name` property is editable.
          This property is read-only.
      numericalValue:
        description: |
          The raw numerical value of the tab.

          For example,
          if the locale policy is `en-US`
          and the `numericalValue` is `-1234.56`,
          the `value` property will contain the string
          `"($ 1,234.56)"`.
        type: string
      originalNumericalValue:
        description: The original value of the tab.
        type: string
      originalValue:
        description: "The initial value of the tab. "
        type: string
      originalValueMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `originalValue` property
          is editable.
      pageNumber:
        description: Specifies the page number on which the tab is located.
        type: string
      pageNumberMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `pageNumber` property is
          editable.
      recipientId:
        description:
          "The ID of the recipient to whom the tab will be assigned. This
          value should match the `recipientId` defined in the recipient object.

          "
        type: string
      recipientIdGuid:
        description:
          The globally-unique identifier (GUID) for a specific recipient
          on a specific envelope. If the same recipient is associated with multiple
          envelopes, they will have a different GUID for each one. This property is
          read-only.
        type: string
      recipientIdGuidMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `recipientIdGuid` property
          is editable.
      recipientIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `recipientId` property is
          editable.
      requireAll:
        description:
          "When **true** and shared is true, information must be entered
          in this field to complete the envelope. "
        type: string
      requireAllMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `requireAll` property is
          editable.
      required:
        description: When **true,** the signer is required to fill out this tab.
        type: string
      requiredMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `required` property is editable.
      requireInitialOnSharedChange:
        description:
          Optional element for field markup. When **true,** the signer
          is required to initial when they modify a shared field.
        type: string
      requireInitialOnSharedChangeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `requireInitialOnSharedChange`
          property is editable.
      senderRequired:
        description:
          "When **true,** the sender must populate the tab before an envelope
          can be sent using the template. \n\nThis value tab can only be changed by
          modifying (PUT) the template. \n\nTabs with a `senderRequired` value of
          true cannot be deleted from an envelope."
        type: string
      senderRequiredMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `senderRequired` property
          is editable.
      shared:
        description: "When **true,** this tab is shared.

          "
        type: string
      sharedMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `shared` property is editable.
      shareToRecipients:
        description: Reserved for DocuSign.
        type: string
      shareToRecipientsMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Reserved for DocuSign.
      smartContractInformation:
        "$ref": "#/definitions/smartContractInformation"
        description: Reserved for DocuSign.
      source:
        description: ""
        type: string
      status:
        description:
          "Indicates the envelope status. Valid values are:\n\n* sent -
          The envelope is sent to the recipients. \n* created - The envelope is saved
          as a draft and can be modified and sent later."
        type: string
      statusMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `status` property is editable.
      tabGroupLabels:
        description: |-
          An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.

          To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
        type: array
        items:
          type: string
      tabGroupLabelsMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `tabGroupLabels` property
          is editable.
      tabId:
        description: The unique identifier for the tab.
        type: string
      tabIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabId` property is editable.
      tabLabel:
        description: |
          The label associated with the tab. This value may be an empty string.
          If no value is provided, the tab type is used as the value.

          Maximum Length: 500 characters.
        type: string
      tabLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabLabel` property is editable.
      tabOrder:
        description: |-
          A positive integer that sets the order the tab is navigated to during signing.

          Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
        type: string
      tabOrderMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabOrder` property is editable.
      tabType:
        description: Indicates the type of tab (for example, `signHere` or `initialHere`).
        type: string
      tabTypeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabType` property is editable.
      templateLocked:
        description:
          "When **true,** the sender cannot change any attributes of the
          recipient. Used only when working with template recipients. "
        type: string
      templateLockedMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `templateLocked` property
          is editable.
      templateRequired:
        description:
          When **true,** the sender may not remove the recipient. Used
          only when working with template recipients.
        type: string
      templateRequiredMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `templateRequired` property
          is editable.
      tooltip:
        description:
          "The text of a tooltip that appears when a user hovers over a
          form field or tab.

          "
        type: string
      toolTipMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          "Metadata that indicates whether the `toolTip` property is editable.

          "
      underline:
        description: When **true,** the information in the tab is underlined.
        type: string
      underlineMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `underline` property is editable.
      validationType:
        description: |
          Specifies how numerical data is validated. Valid values:

          - `number`
          - `currency`
        type: string
      value:
        description: |+
          The `numericalValue` of the tab
          displayed according to its locale policy.

          For example,
          if the locale policy is `en-US`
          and the `numericalValue` is `-1234.56`,
          this property will contain the string
          `"($ 1,234.56)"`.

        type: string
      valueMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `value` property is editable.
      width:
        description: |-
          The width of the tab in pixels.
          Must be an integer.
        type: string
      widthMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `width` property is editable.
      xPosition:
        description: |
          This property indicates the horizontal offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. Must be an integer. May be zero.
        type: string
      xPositionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `xPosition` property is editable.
      yPosition:
        description: |
          This property indicates the vertical offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. Must be an integer. May be zero.
        type: string
      yPositionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `yPosition` property is editable.
    x-ds-definition-name: numerical
    description: |
      Numerical tabs provide robust display and validation features,
      including formatting for different regions and currencies,
      and minimum and maximum value validation.
      See [Number fields](/docs/esign-rest-api/esign101/concepts/tabs/number-fields/)
      to learn more about this tab type.
    x-ms-summary: |
      Numerical tabs provide robust display and validation features,
      including formatting for different regions and currencies,
      and minimum and maximum value validation.
      See [Number fields](/docs/esign-rest-api/esign101/concepts/tabs/number-fields/)
      to learn more about this tab type.
  oauthAccess:
    type: object
    properties:
      access_token:
        description: Access token information.
        type: string
      data:
        description:
          A Base64-encoded representation of the attachment that is used
          to upload and download the file. File attachments may be up to 50 MB in
          size.
        type: array
        items:
          "$ref": "#/definitions/nameValue"
      expires_in:
        description: ""
        type: string
      refresh_token:
        description: ""
        type: string
      scope:
        description: Must be set to "api".
        type: string
      token_type:
        description: ""
        type: string
    x-ds-definition-name: oauthAccess
    description: ""
    x-ms-summary: ""
  offlineAttributes:
    description: Reserved for DocuSign.
    type: object
    properties:
      accountEsignId:
        description: Reserved for DocuSign.
        type: string
      deviceModel:
        description: Reserved for DocuSign.
        type: string
      deviceName:
        description: Reserved for DocuSign.
        type: string
      gpsLatitude:
        description: Reserved for DocuSign.
        type: string
      gpsLongitude:
        description: Reserved for DocuSign.
        type: string
      offlineSigningHash:
        description: Reserved for DocuSign.
        type: string
    x-ds-definition-name: offlineAttributes
    x-ms-summary: Reserved for DocuSign.
  page:
    description: Description of a page of a document.
    type: object
    properties:
      dpi:
        description: The number of dots per inch used for the page image.
        type: string
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description: If an error occurs, this property describes the error.
      height:
        description: |-
          The height of the page in pixels.
          Must be an integer.
        type: string
      imageBytes:
        description: The number of image bytes.
        type: string
      mimeType:
        description: The MIME type.
        type: string
      pageId:
        description: The ID of the page.
        type: string
      sequence:
        description: The sequence of the page in the document, or page number.
        type: string
      width:
        description: |-
          The width of the page in pixels.
          Must be an integer.
        type: string
    x-ds-definition-name: page
    x-ms-summary: Description of a page of a document.
  pageImages:
    type: object
    properties:
      endPosition:
        description: "The last index position in the result set. "
        type: string
      nextUri:
        description:
          "The URI for the next chunk of records based on the search request.
          It is `null` if this is the last set of results for the search. "
        type: string
      pages:
        description: An array of page objects.
        type: array
        items:
          "$ref": "#/definitions/page"
      previousUri:
        description:
          "The URI for the prior chunk of records based on the search request.
          It is `null` if this is the first set of results for the search. "
        type: string
      resultSetSize:
        description:
          The number of results in this response. Because you can filter
          which entries are included in the response, this value is always less than
          or equal to the `totalSetSize`.
        type: string
      startPosition:
        description: The starting index position of the current result set.
        type: string
      totalSetSize:
        description:
          The total number of items in the result set. This value is always
          greater than or equal to the value of `resultSetSize`.
        type: string
    x-ds-definition-name: pageImages
    description: ""
    x-ms-summary: ""
  pageRequest:
    type: object
    properties:
      password:
        description: The user's encrypted password hash.
        type: string
      rotate:
        description:
          "Sets the direction the page image is rotated. The possible settings
          are: left or right"
        type: string
    x-ds-definition-name: pageRequest
    description: ""
    x-ms-summary: ""
  participant:
    type: object
    properties:
      accessCode:
        description:
          "If a value is provided, the recipient must enter the value as
          the access code to view and sign the envelope. \n\nMaximum Length: 50 characters
          and it must conform to the account's access code format setting.\n\nIf blank,
          but the signer `accessCode` property is set in the envelope, then that value
          is used.\n\nIf blank and the signer `accessCode` property is not set, then
          the access code is not required."
        type: string
      accessCodeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `accessCode` property is
          editable. This property is read-only.
      addAccessCodeToEmail:
        description:
          Optional. When **true,** the access code will be added to the
          email sent to the recipient. This nullifies the security measure of `accessCode`
          on the recipient.
        type: string
      additionalNotifications:
        description: An array of additional notification objects.
        type: array
        items:
          "$ref": "#/definitions/recipientAdditionalNotification"
      allowSystemOverrideForLockedRecipient:
        description:
          When **true,** if the recipient is locked on a template, advanced
          recipient routing can override the lock.
        type: string
      autoRespondedReason:
        description:
          "Error message provided by the destination email system. This
          field is only provided if the email notification to the recipient fails
          to send. This property is read-only.

          "
        type: string
      bulkSendV2Recipient:
        description: ""
        type: string
      clientUserId:
        description:
          "Specifies whether the recipient is embedded or remote. \n\nIf
          the `clientUserId` property is not null then the recipient is embedded.
          Use this field to associate the signer with their userId in your app. Authenticating
          the user is the responsibility of your app when you use embedded signing.\n\nIf
          the `clientUserId` property is set and either `SignerMustHaveAccount` or
          `SignerMustLoginToSign` property of the account settings is set to  **true,**
          an error is generated on sending.\n\n**Note:** This property is not returned
          by the [listStatusChanges](/docs/esign-rest-api/reference/envelopes/envelopes/liststatuschanges/)
          endpoint.\n\nMaximum length: 100 characters. \n"
        type: string
      completedCount:
        description:
          Indicates the number of times that the recipient has been through
          a signing completion for the envelope. If this number is greater than 0
          for a signing group, only the user who previously completed may sign again.
          This property is read-only.
        type: string
      consentDetailsList:
        description: ""
        type: array
        items:
          "$ref": "#/definitions/consentDetails"
      customFields:
        description:
          "An optional array of strings that allows the sender to provide
          custom data about the recipient. This information is returned in the envelope
          status but otherwise not used by DocuSign. Each string can be a maximum
          of 100 characters.

          "
        type: array
        items:
          type: string
      declinedDateTime:
        description:
          The date and time the recipient declined the document. This property
          is read-only.
        type: string
      declinedReason:
        description:
          The reason the recipient declined the document. This property
          is read-only.
        type: string
      deliveredDateTime:
        description:
          The date and time that the envelope was delivered to the recipient.
          This property is read-only.
        type: string
      deliveryMethod:
        description: |-
          The delivery method. One of:

          - `email`
          - `fax`
          - `SMS`
          - `WhatsApp`
          - `offline`

          The `SMS` and `WhatsApp` delivery methods
          are limited to `signer`, `carbonCopy`, and `certifiedDelivery`
          recipients.

          **Related topics**

          - [Using SMS delivery with the eSignature API][smsconcept]
          - [How to request a signature by SMS delivery][howto]

          [smsconcept]: /docs/esign-rest-api/esign101/concepts/sms-delivery/using-sms-esignature/
          [howto]: /docs/esign-rest-api/how-to/request-signature-sms/
        type: string
      deliveryMethodMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Reserved for DocuSign.
      designatorId:
        description: Reserved for DocuSign.
        type: string
      designatorIdGuid:
        description: Reserved for DocuSign.
        type: string
      documentVisibility:
        description:
          A list of `documentVisibility` objects. Each object in the list
          specifies whether a document in the envelope is visible to this recipient.
          For the envelope to use this functionality, Document Visibility must be
          enabled for the account and the `enforceSignerVisibility` property must
          be set to **true.**
        type: array
        items:
          "$ref": "#/definitions/documentVisibility"
      email:
        description: ""
        type: string
      emailMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `email` property is editable.
          This property is read-only.
      emailNotification:
        "$ref": "#/definitions/recipientEmailNotification"
        description: |-
          This optional property allows you to set a specific email subject and
          body for this recipient's notification email.

          **Note:** If you use this property, you _must_
          provide a value for the `supportedLanguage` sub-property.


          You can set the `emailNotification` property separately
          for each recipient. If you set the value only for certain
          recipients, the other recipients are assigned the values from
          the top-level `emailSubject` and `emailBlurb`.
      emailRecipientPostSigningURL:
        description: ""
        type: string
      embeddedRecipientStartURL:
        description:
          "Specifies a sender-provided valid URL string for redirecting
          an embedded recipient. When using this option, the embedded recipient still
          receives an email from DocuSign, just as a remote recipient would. When
          the document link in the email is clicked the recipient is redirected, through
          DocuSign, to the supplied URL to complete their actions. When routing to
          the URL, the sender's system (the server responding to the URL) must request
          a recipient token to launch a signing session. \n\nWhen `SIGN_AT_DOCUSIGN`,
          the recipient is directed to an embedded signing or viewing process directly
          at DocuSign. The signing or viewing action is initiated by the DocuSign
          system and the transaction activity and Certificate of Completion records
          will reflect this. In all other ways the process is identical to an embedded
          signing or viewing operation launched by a partner.\n\nIt is important to
          understand that in a typical embedded workflow, the authentication of an
          embedded recipient is the responsibility of the sending application. DocuSign
          expects that senders will follow their own processes for establishing the
          recipient's identity. In this workflow the recipient goes through the sending
          application before the embedded signing or viewing process is initiated.
          However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`,
          the recipient goes directly to the embedded signing or viewing process,
          bypassing the sending application and any authentication steps the sending
          application would use. In this case, DocuSign recommends that you use one
          of the normal DocuSign authentication features (Access Code, Phone Authentication,
          SMS Authentication, etc.) to verify the identity of the recipient.\n\nIf
          the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL`
          is set, DocuSign will ignore the redirect URL and launch the standard signing
          process for the email recipient. Information can be appended to the embedded
          recipient start URL using merge fields. The available merge fields items
          are: `envelopeId`, `recipientId`, `recipientName`, `recipientEmail`, and
          `customFields`. The `customFields` property must be set for the recipient
          or envelope. The merge fields are enclosed in double brackets. \n\n*Example*:
          \n\n`http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]` "
        type: string
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      faxNumber:
        description: Reserved for DocuSign.
        type: string
      faxNumberMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Reserved for DocuSign.
      firstName:
        description: "The user's first name. \nMaximum Length: 50 characters."
        type: string
      firstNameMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `firstName` property is editable.
          This property is read-only.
      fullName:
        description: Reserved for DocuSign.
        type: string
      fullNameMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Reserved for DocuSign.
      idCheckConfigurationName:
        description:
          "The name of the authentication check to use. This value must
          match one of the authentication types that the account uses. The names of
          these authentication types appear in the web console sending interface in
          the Identify list for a recipient. This setting overrides any default authentication
          setting. Valid values are:\n\n- `Phone Auth $`: The recipient must authenticate
          by using two-factor authentication (2FA). You provide the phone number to
          use for 2FA in the `phoneAuthentication` object.\n- `SMS Auth $`: The recipient
          must authenticate via SMS. You provide the phone number to use in the `smsAuthentication`
          object.\n- `ID Check $`: The  recipient must answer detailed security questions.
          \n\n**Example:** Your account has ID Check and SMS Authentication available.
          In the web console Identify list, these appear as ID Check $ and SMS Auth
          $. To use ID Check in an envelope, the idCheckConfigurationName should be
          ID Check $. For SMS, you would use SMS Auth $, and you would also need to
          add a phone number to the smsAuthentication node."
        type: string
      idCheckConfigurationNameMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `idCheckConfigurationName`
          property is editable. This property is read-only.
      idCheckInformationInput:
        "$ref": "#/definitions/idCheckInformationInput"
        description:
          An object that contains input information related to a recipient
          ID check.
      identityVerification:
        "$ref": "#/definitions/recipientIdentityVerification"
        description:
          Specifies the ID Verification workflow applied on an envelope
          by workflow ID. <br/>See the [list](/docs/esign-rest-api/reference/accounts/identityverifications/list/)
          method in the [IdentityVerifications](/docs/esign-rest-api/reference/accounts/identityverifications/)
          resource for more information on how to retrieve workflow IDs available
          for an account. <br/>This can be used in addition to other [recipient authentication](https://support.docusign.com/s/document-item?bundleId=gav1643676262430&topicId=kzp1578456318101.html)
          methods. <br/>Note that ID Verification and ID Check are two distinct methods.
          ID Verification checks recipients' identity by verifying their ID while
          ID Check relies on data available on public records (such as current and
          former address).
      inheritEmailNotificationConfiguration:
        description:
          "When **true** and the envelope recipient creates a DocuSign
          account after signing, the Manage Account Email Notification settings are
          used as the default settings for the recipient's account. "
        type: string
      lastName:
        description: "The user's last name. \nMaximum Length: 50 characters."
        type: string
      lastNameMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `lastName` property is editable.
          This property is read-only.
      lockedRecipientPhoneAuthEditable:
        description: Reserved for DocuSign.
        type: string
      lockedRecipientSmsEditable:
        description: Reserved for DocuSign.
        type: string
      name:
        description: ""
        type: string
      nameMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `name` property is editable.
          This property is read-only.
      note:
        description: |
          A note sent to the recipient in the signing email.
          This note is unique to this recipient.
          In the user interface,
          it appears near the upper left corner
          of the document
          on the signing screen.

          Maximum Length: 1000 characters.
        type: string
      noteMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `note` property is editable.
          This property is read-only.
      participateFor:
        description: ""
        type: string
      participateForGuid:
        description: ""
        type: string
      phoneAuthentication:
        "$ref": "#/definitions/recipientPhoneAuthentication"
        description: |+
          When `idCheckConfigurationName` is set to `Phone Auth $`, you use this complex type to provide the recipient authentication method details. It contains the following elements:

          * `recipMayProvideNumber`: Boolean. When **true,** the recipient can use whatever phone number they choose.
          * `senderProvidedNumbers`: ArrayOfStrings.  A list of phone numbers the recipient can use.
          * `recordVoicePrint`: Reserved for DocuSign.
          * `validateRecipProvidedNumber`: Reserved for DocuSign.

      phoneNumber:
        "$ref": "#/definitions/recipientPhoneNumber"
        description: Describes the recipient phone number.
      recipientAttachments:
        description: Reserved for DocuSign.
        type: array
        items:
          "$ref": "#/definitions/recipientAttachment"
      recipientAuthenticationStatus:
        "$ref": "#/definitions/authenticationStatus"
        description:
          Information about the recipient's authentication status. This
          property is read-only.
      recipientFeatureMetadata:
        description:
          Metadata about the features that are supported for the recipient
          type. This property is read-only.
        type: array
        items:
          "$ref": "#/definitions/featureAvailableMetadata"
      recipientId:
        description: |
          A local reference used to map
          recipients to other objects, such as specific
          document tabs.

          A `recipientId` must be
          either an integer or a GUID,
          and the `recipientId` must be
          unique within an envelope.

          For example, many envelopes assign the first recipient
          a `recipientId` of `1`.
        type: string
      recipientIdGuid:
        description:
          The globally-unique identifier (GUID) for a specific recipient
          on a specific envelope. If the same recipient is associated with multiple
          envelopes, they will have a different GUID for each one. This property is
          read-only.
        type: string
      recipientType:
        description: |-
          The recipient type, as specified by the following values:
          - `agent`: Agent recipients can add name and email information for recipients that appear after the agent in routing order.
          - `carbonCopy`: Carbon copy recipients get a copy of the envelope but don't need to sign, initial, date, or add information to any of the documents. This type of recipient can be used in any routing order.
          - `certifiedDelivery`: Certified delivery recipients must receive the completed documents for the envelope to be completed. They don't need to sign, initial, date, or add information to any of the documents.
          - `editor`: Editors have the same management and access rights for the envelope as the sender. Editors can add name and email information, add or change the routing order, set authentication options, and can edit signature/initial tabs and data fields for the remaining recipients.
          - `inPersonSigner`: In-person recipients are DocuSign users who act as signing hosts in the same physical location as the signer.
          - `intermediaries`: Intermediary recipients can optionally add name and email information for recipients at the same or subsequent level in the routing order.
          - `seal`: Electronic seal recipients represent legal entities.
          - `signer`: Signers are recipients who must sign, initial, date, or add data to form fields on the documents in the envelope.
          - `witness`: Witnesses are recipients whose signatures affirm that the identified signers have signed the documents in the envelope.
        type: string
      recipientTypeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `recipientType` property
          is editable. This property is read-only.
      requireIdLookup:
        description:
          "When **true,** the recipient is required to use the specified
          ID check method (including Phone and SMS authentication) to validate their
          identity. "
        type: string
      requireIdLookupMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `requireIdLookup` property
          is editable. This property is read-only.
      roleName:
        description:
          Optional element. Specifies the role name associated with the
          recipient.<br/><br/>This property is required when you are working with
          template recipients.
        type: string
      routingOrder:
        description: "Specifies the routing order of the recipient in the envelope. "
        type: string
      routingOrderMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `routingOrder` property is
          editable. This property is read-only.
      sentDateTime:
        description:
          The UTC DateTime when the envelope was sent. This property is
          read-only.
        type: string
      signedDateTime:
        description: Reserved for DocuSign.
        type: string
      signingGroupId:
        description:
          "The ID of the [signing group](https://support.docusign.com/s/document-item?bundleId=gav1643676262430&topicId=zgn1578456447934.html).

          "
        type: string
      signingGroupIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `signingGroupId` property
          is editable. This property is read-only.
      signingGroupName:
        description:
          "Optional. The name of the signing group. \n\nMaximum Length:
          100 characters. "
        type: string
      signingGroupUsers:
        description:
          A complex type that contains information about users in the signing
          group.
        type: array
        items:
          "$ref": "#/definitions/userInfo"
      smsAuthentication:
        "$ref": "#/definitions/recipientSMSAuthentication"
        description:
          "When `idCheckConfigurationName` is set to `SMS Auth $`, you
          use this complex type to provide the recipient authentication method details.
          It contains the element `senderProvidedNumbers`, which is an array of phone
          numbers that the recipient can use for SMS text authentication. \n\n"
      socialAuthentications:
        description: Deprecated.
        type: array
        items:
          "$ref": "#/definitions/socialAuthentication"
      status:
        description:
          "Indicates the envelope status. Valid values are:\n\n* sent -
          The envelope is sent to the recipients. \n* created - The envelope is saved
          as a draft and can be modified and sent later."
        type: string
      statusCode:
        description: Reserved for DocuSign.
        type: string
      suppressEmails:
        description:
          When **true,** email notifications are suppressed for the recipient,
          and they must access envelopes and documents from their DocuSign inbox.
        type: string
      templateLocked:
        description:
          "When **true,** the sender cannot change any attributes of the
          recipient. Used only when working with template recipients. "
        type: string
      templateRequired:
        description:
          When **true,** the sender may not remove the recipient. Used
          only when working with template recipients.
        type: string
      totalTabCount:
        description: The total number of tabs in the documents. This property is read-only.
        type: string
      userId:
        description: |-
          The ID of the user to access.

          **Note:** Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.
        type: string
    x-ds-definition-name: participant
    description: ""
    x-ms-summary: ""
  pathExtendedElement:
    type: object
    properties:
      name:
        description: ""
        type: string
      type:
        description: |
          The type of this tab. Values are:

          - `Approve`
          - `CheckBox`
          - `Company`
          - `Date`
          - `DateSigned`
          - `Decline`
          - `Email`
          - `EmailAddress`
          - `EnvelopeId`
          - `FirstName`
          - `Formula`
          - `FullName`
          - `InitialHere`
          - `InitialHereOptional`
          - `LastName`
          - `List`
          - `Note`
          - `Number`
          - `Radio`
          - `SignerAttachment`
          - `SignHere`
          - `SignHereOptional`
          - `Ssn`
          - `Text`
          - `Title`
          - `Zip5`
          - `Zip5Dash4`
        type: string
      typeName:
        description: ""
        type: string
    x-ds-definition-name: pathExtendedElement
    description: ""
    x-ms-summary: ""
  paymentDetails:
    type: object
    properties:
      allowedPaymentMethods:
        description: |
          An array of accepted payment methods:

          * `CreditCard`
          * `ApplePay`
          * `AndroidPay`
          * `BankAccount`

          For example, if you only accept credit cards and ACH transfers, you would set this property to:

          `'["BankAccount", "CreditCard"]'`

          Do not specify `BankAccount` (ACH) if you are also using in-person signing.
        type: array
        items:
          type: string
      chargeId:
        description:
          The GUID set by the payment gateway (such as Stripe) that identifies
          a transaction. The `chargeId` is created when authorizing a payment and
          must be referenced when completing a payment.
        type: string
      currencyCode:
        description: |
          Specifies the three-letter
          [ISO 4217][ISO 4217] currency code for the payment.

          Supported currencies are:

          * AUD: Australian dollar
          * CAD: Canadian dollar
          * EUR: Euro
          * GBP: Great Britain pound
          * USD: United States dollar

          Specifying any other ISO 4217 code for payments is an error.

          [ISO 4217]:          https://en.wikipedia.org/wiki/ISO_4217
        type: string
      currencyCodeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `currencyCode` property is
          editable.
      customerId:
        description: The customer ID.
        type: string
      customMetadata:
        description:
          "This is a sender-defined field that passes any extra metadata
          about the payment that will show up in the Authorize.net transaction under
          **Description** in the merchant gateway portal. The custom metadata will
          be recorded in downloaded Authorize.net reports. \n\nThe following example
          shows what the **Description** field of the transaction will look like:
          \n\n`<envelopeID>, <customMetadata>`"
        type: string
      customMetadataRequired:
        description:
          A sender-defined field that specifies whether custom metadata
          is required for the transaction. When **true,** custom metadata is required.
          This property only applies if you are using an Authorize.net payment gateway
          account.
        type: boolean
      gatewayAccountId:
        description: |
          A GUID that identifies the payment gateway
          connected to the sender's DocuSign account.

          There is no public API
          for connecting payment gateway accounts
          You must connect and manage payment gateway accounts
          through the DocuSign Admin console
          and through your chosen payment gateway.

          You can get the gateway account ID
          in the Payments section
          of the DocuSign Admin console.


          [paymentgateways]:  https://support.docusign.com/s/document-item?bundleId=juu1573854950452&topicId=knc1573854895499.html
        type: string
      gatewayAccountIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `gatewayAccountId` property
          is editable.
      gatewayDisplayName:
        description: |-
          Display name of the gateway connected to sender's DocuSign account.

          Possible values are: Stripe, Braintree, Authorize.Net, CyberSource, Zuora, Elavon.
        type: string
      gatewayName:
        description: |-
          Name of the gateway connected to sender's DocuSign account.

          Possible values are:

          * `Stripe`
          * `Braintree`
          * `AuthorizeDotNet`
          * `CyberSource`
          * `Zuora`
          * `Elavon`
        type: string
      lineItems:
        description: |
          A payment formula can have
          one or more line items
          that provide detail about
          individual items in a payment request.

          The list of line items
          are returned as metadata
          to the payment gateway.
        type: array
        items:
          "$ref": "#/definitions/paymentLineItem"
      paymentOption:
        description: |-
          This property specifies how the signer's collected payment details will be used.

          Valid values:

          - `authorize`: The payment details will be used to collect payment. This is the default value.
          - `save`: The signer's payment method (credit card or bank account) will be saved to the sender's payment gateway.
          - `save_and_authorize`: The signer's payment method (credit card or bank account) will be saved to the sender's payment gateway and will also be used to collect payment.
        type: string
      paymentSourceId:
        description: The payment source ID.
        type: string
      signerValues:
        "$ref": "#/definitions/paymentSignerValues"
        description: ""
      status:
        description: |
          This read-only property describes the status of a payment.

          * `new`<br>
            This is a new payment request.
            The envelope has been created,
            but no payment authorizations have been made.

          * `auth_complete`<br>
            A recipient has entered their credit card information,
            but the envelope has not been completed.
            The card has not been charged.

          * `payment_complete`<br>
            The recipient's card has been charged.

          * `payment_capture_failed`<br>
            Final charge failed.
            This can happen when too much time
            passes between authorizing the payment
            and completing the document.

          * `future_payment_saved` <br>
          The recipient's payment method has been saved to the sender's payment gateway.
        type: string
      subGatewayName:
        description: ""
        type: string
      total:
        "$ref": "#/definitions/money"
        description: |
          This read-only property
          is a currency-formatted string
          that represents the total
          of all the line items.
          The total is available
          only after the document is completed,
          which is when all recipients have paid and
          have completed all required fields.
    description: |
      When a formula tab
      has a `paymentDetails` property,
      the formula tab
      is a payment item.
      See [Requesting Payments Along with Signatures][paymentguide]
      in the DocuSign Support Center
      to learn more about payments.

      [paymentguide]:     https://support.docusign.com/s/document-item?bundleId=juu1573854950452&topicId=fyw1573854935374.html
    x-ds-definition-name: paymentDetails
    x-ms-summary: |
      When a formula tab
      has a `paymentDetails` property,
      the formula tab
      is a payment item.
      See [Requesting Payments Along with Signatures][paymentguide]
      in the DocuSign Support Center
      to learn more about payments.

      [paymentguide]:     https://support.docusign.com/s/document-item?bundleId=juu1573854950452&topicId=fyw1573854935374.html
  paymentGatewayAccount:
    type: object
    properties:
      allowCustomMetadata:
        description:
          "When **true,** the sender can pass custom metadata about the
          payment to the payment gateway. You pass in this metadata on an EnvelopeRecipientTab,
          in the `customMetadata` property under `paymentDetails`. \n\nFor example,
          this property is set to **true** for the Authorize.net gateway by default.
          As a result, the extra metadata that you send displays for the Authorize.net
          transaction in the merchant gateway portal under **Description.**\n\n**Note:**
          This property is read-only and cannot be changed."
        type: boolean
      config:
        "$ref": "#/definitions/paymentGatewayAccountSetting"
        description:
          This property contains metadata about the payment gateway account's
          configuration such as the API key, `userId`, and `merchantId` details.
      displayName:
        description: |-
          A user-defined name for a connected gateway account.

          This name is used in the Admin panel in the list of connected accounts and in Tagger in the payment gateway selector.

          The human-readable version of `paymentGatewayAccountId`.
        type: string
      isEnabled:
        description: When **true,** the payment gateway account is enabled.
        type: string
      isLegacy:
        description: Reserved for DocuSign.
        type: string
      lastModified:
        description: The UTC DateTime that the payment gateway account was last updated.
        type: string
      paymentGateway:
        description: |-
          Payment gateway used by the connected gateway account.
          This is the name used by the API.
          For a human-readable version use `paymentGatewayDisplayName`.

          Possible values are:

          * `Stripe`
          * `Braintree`
          * `AuthorizeDotNet`
          * `CyberSource`
          * `Zuora`
          * `Elavon`
        type: string
      paymentGatewayAccountId:
        description:
          A GUID that identifies the payment gateway account. For a human-readable
          version use `displayName`.
        type: string
      paymentGatewayDisplayName:
        description: |-
          The display name of the payment gateway that the connected gateway account uses.
          This is the human-readable version of `paymentGateway`.

          Possible values are:

          * Stripe
          * Braintree
          * Authorize.Net
          * CyberSource
          * Zuora
          * Elavon
        type: string
      payPalLegacySettings:
        "$ref": "#/definitions/payPalLegacySettings"
        description: Reserved for DocuSign.
      supportedCurrencies:
        description:
          "A list of ISO 4217 currency codes for the currencies that the
          payment gateway account supports.\n\nExamples: \n\n- `USD`\n- `CAD`\n- `EUR`\n-
          `HKD`"
        type: array
        items:
          type: string
      supportedPaymentMethods:
        description:
          An array of paymentMethodWithOptions objects that specify the
          payment methods that are available for the gateway.
        type: array
        items:
          type: string
      supportedPaymentMethodsWithOptions:
        description:
          An array of `paymentMethodWithOptions` objects that specify the
          payment methods that are available for the gateway, as well as the payment
          options that are compatible with each payment method.
        type: array
        items:
          "$ref": "#/definitions/paymentMethodWithOptions"
      zeroDecimalCurrencies:
        description: ""
        type: array
        items:
          type: string
    description: This object contains details about a payment gateway account.
    x-ds-definition-name: paymentGatewayAccount
    x-ms-summary: This object contains details about a payment gateway account.
  paymentGatewayAccountSetting:
    type: object
    properties:
      apiFields:
        description: ""
        type: string
      authorizationCode:
        description: ""
        type: string
      credentialStatus:
        description: ""
        type: string
      merchantId:
        description: ""
        type: string
    x-ds-definition-name: paymentGatewayAccountSetting
    description: ""
    x-ms-summary: ""
  paymentGatewayAccountsInfo:
    type: object
    properties:
      paymentGatewayAccounts:
        description: A list of payment gateway accounts.
        type: array
        items:
          "$ref": "#/definitions/paymentGatewayAccount"
    description: Holds information about connected payment accounts.
    x-ds-definition-name: paymentGatewayAccountsInfo
    x-ms-summary: Holds information about connected payment accounts.
  paymentLineItem:
    type: object
    properties:
      amountReference:
        description: |+
          This is a the `tabLabel`
          that specifies the amount paid
          for the line items.

        type: string
      description:
        description: "A sender-defined description of the line item.

          "
        type: string
      itemCode:
        description: |
          This is the sender-defined
          SKU, inventory number, or other item code
          for the line item.
        type: string
      name:
        description: |
          This is a sender-defined
          product name, service name,
          or other designation for the line item.
        type: string
    description: |+
      A line item describes details
      about an individual line item
      in a payment request.

    x-ds-definition-name: paymentLineItem
    x-ms-summary: |+
      A line item describes details
      about an individual line item
      in a payment request.

  paymentMethodWithOptions:
    type: object
    properties:
      supportedCurrencies:
        description:
          "A list of ISO 4217 currency codes for the currencies that the
          payment gateway account supports.\n\nExamples: \n\n- `USD`\n- `CAD`\n- `EUR`\n-
          `HKD`"
        type: array
        items:
          type: string
      supportedOptions:
        description:
          "The payment options that are compatible with the payment method
          in the `type` property.\n\nPossible values are:\n\n- `save` \n- `save_and_authorize`\n-
          `authorize`"
        type: array
        items:
          type: string
      type:
        description: |-
          The name of a payment method that the gateway accepts.

          Possible values are:

          - `CreditCard`
          - `ApplePay`
          - `AndroidPay`
          - `BankAccount`
          - `PayPal`
        type: string
    description:
      This object contains information about a payment method that the
      gateway accepts and the payment options that are compatible with it.
    x-ds-definition-name: paymentMethodWithOptions
    x-ms-summary:
      This object contains information about a payment method that the
      gateway accepts and the payment options that are compatible with it.
  paymentProcessorInformation:
    type: object
    properties:
      address:
        "$ref": "#/definitions/addressInformation"
        description: The mailing address associated with the payment processor.
      billingAgreementId:
        description: The ID of the billing agreement.
        type: string
      email:
        description: The email address associated with the payment processor.
        type: string
    x-ds-definition-name: paymentProcessorInformation
    description: ""
    x-ms-summary: ""
  paymentSignerValues:
    type: object
    properties:
      paymentOption:
        description: |-
          This property specifies how the signer's collected payment details will be used.

          Valid values:

          - `authorize`: The payment details will be used to collect payment. This is the default value.
          - `save`: The signer's payment method (credit card or bank account) will be saved to the sender's payment gateway.
          - `save_and_authorize`: The signer's payment method (credit card or bank account) will be saved to the sender's payment gateway and will also be used to collect payment.
        type: string
    x-ds-definition-name: paymentSignerValues
    description: ""
    x-ms-summary: ""
  payPalLegacySettings:
    type: object
    properties:
      currency:
        description: |
          The three-letter
          [ISO 4217][ISO 4217] currency code for the payment.

          For example:

          * AUD Australian dollar
          * CAD Canadian dollar
          * EUR Euro
          * GBP Great Britain pound
          * USD United States dollar

          This is a read-only property.

          [ISO 4217]:          https://en.wikipedia.org/wiki/ISO_4217
        type: string
      partner:
        description: ""
        type: string
      password:
        description: The user's encrypted password hash.
        type: string
      userName:
        description: The name of the user.
        type: string
      vendor:
        description: ""
        type: string
    x-ds-definition-name: payPalLegacySettings
    description: ""
    x-ms-summary: ""
  permissionProfile:
    type: object
    properties:
      modifiedByUsername:
        description: The username of the user who last modified the permission profile.
        type: string
      modifiedDateTime:
        description: The date and time when the permission profile was last modified.
        type: string
      permissionProfileId:
        description: |
          The ID of the permission profile.

          Use [AccountPermissionProfiles: list](/docs/esign-rest-api/reference/accounts/accountpermissionprofiles/list/)
          to get a list of permission profiles and their IDs.

          You can also download a CSV file of all permission profiles
          and their IDs from the **Settings > Permission Profiles** page
          of your eSignature account page.
        type: string
      permissionProfileName:
        description:
          "The name of the account permission profile. \n\nExample: `Account
          Administrator`"
        type: string
      settings:
        "$ref": "#/definitions/accountRoleSettings"
        description:
          This object specifies the permissions that are associated with
          the account permission profile.
      userCount:
        description:
          The total number of users in the group associated with the account
          permission profile.
        type: string
      users:
        description:
          A list of user objects containing information about the users
          who are associated with the account permission profile.
        type: array
        items:
          "$ref": "#/definitions/userInformation"
    description:
      This object defines the account permissions for a profile that you
      can apply to a group of users.
    x-ds-definition-name: permissionProfile
    x-ms-summary:
      This object defines the account permissions for a profile that you
      can apply to a group of users.
  permissionProfileInformation:
    type: object
    properties:
      permissionProfiles:
        description: A complex type containing a collection of permission profiles.
        type: array
        items:
          "$ref": "#/definitions/permissionProfile"
    description:
      Contains details about the permission profiles associated with an
      account.
    x-ds-definition-name: permissionProfileInformation
    x-ms-summary:
      Contains details about the permission profiles associated with an
      account.
  phoneNumber:
    type: object
    properties:
      anchorAllowWhiteSpaceInCharacters:
        description: |
          When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.

          First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.

          Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.

          The default value is **true.**
        type: string
      anchorAllowWhiteSpaceInCharactersMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorAllowWhiteSpaceInCharacters`
          property is editable.
      anchorCaseSensitive:
        description: |-
          This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**

          For example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.

          This functionality uses the following rules:

          - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:

            $~><|^+=

            For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`

          - Strings embedded in other strings are ignored during the matching process.

          - In words that have dashes, the parts separated by dashes are treated as distinct words.

            Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**

          - Letters with accent marks are treated as distinct characters from their unaccented counterparts.

          - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.

            Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.

          - Unlike punctuation, numbers are not ignored when finding anchor words.

            Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).

          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorCaseSensitiveMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorCaseSensitive` property
          is editable.
      anchorHorizontalAlignment:
        description: |
          This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :

          - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.
          - `right`: Aligns the tab’s left side with the last character of the matching anchor word.

          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorHorizontalAlignmentMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorHorizontalAlignment`
          property is editable.
      anchorIgnoreIfNotPresent:
        description:
          When **true,** this tab is ignored if the `anchorString` is not
          found in the document.
        type: string
      anchorIgnoreIfNotPresentMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorIgnoreIfNotPresent`
          property is editable.
      anchorMatchWholeWord:
        description: |
          When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**

          For example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.

          This functionality uses the following rules:

          - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:

            $~><|^+=

            For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`

          - Strings embedded in other strings are ignored during the matching process.

          - In words that have dashes, the parts separated by dashes are treated as distinct words.

            Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**

          - Letters with accent marks are treated as distinct characters from their unaccented counterparts.

          - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.

            Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.

          - Unlike punctuation, numbers are not ignored when finding anchor words.

            Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).


          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorMatchWholeWordMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorMatchWholeWord` property
          is editable.
      anchorString:
        description:
          Specifies the string to find in the document and use as the basis
          for tab placement.
        type: string
      anchorStringMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorString` property is
          editable.
      anchorTabProcessorVersion:
        description: Reserved for DocuSign.
        type: string
      anchorTabProcessorVersionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Reserved for DocuSign.
      anchorUnits:
        description: |
          Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:

          - `pixels` (default)
          - `inches`
          - `mms`
          - `cms`
        type: string
      anchorUnitsMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorUnits` property is
          editable.
      anchorXOffset:
        description:
          "Specifies the X axis location of the tab in `anchorUnits` relative
          to the `anchorString`.

          "
        type: string
      anchorXOffsetMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorXOffset` property
          is editable.
      anchorYOffset:
        description:
          "Specifies the Y axis location of the tab in `anchorUnits` relative
          to the `anchorString`.

          "
        type: string
      anchorYOffsetMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorYOffset` property
          is editable.
      bold:
        description: When **true,** the information in the tab is bold.
        type: string
      boldMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `bold` property is editable.
      caption:
        description: ""
        type: string
      captionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `caption` property is editable.
      concealValueOnDocument:
        description: |-
          When **true,** the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.

          When an envelope is completed the information is only available to the sender through the Form Data link in the DocuSign Console. The information on the downloaded document remains masked by asterisks.

          This setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.
        type: string
      concealValueOnDocumentMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `concealValueOnDocument`
          property is editable.
      conditionalParentLabel:
        description:
          For conditional fields this is the `tabLabel` of the parent tab
          that controls this tab's visibility.
        type: string
      conditionalParentLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `conditionalParentLabel`
          property is editable.
      conditionalParentValue:
        description: |
          For conditional fields, this is the value of the parent tab that controls the tab's visibility.

          If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use "on" as the value to show that the parent tab is active.
        type: string
      conditionalParentValueMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `conditionalParentValue`
          property is editable.
      customTabId:
        description:
          The DocuSign generated custom tab ID for the custom tab to be
          applied. This can only be used when adding new tabs for a recipient. When
          used, the new tab inherits all the custom tab properties.
        type: string
      customTabIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `customTabId` property is
          editable.
      disableAutoSize:
        description:
          When **true,** disables the auto sizing of single line text boxes
          in the signing screen when the signer enters data. If disabled users will
          only be able enter as much data as the text box can hold. By default this
          is false. This property only affects single line text boxes.
        type: string
      disableAutoSizeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `disableAutoSize` property
          is editable.
      documentId:
        description:
          Specifies the document ID number that the tab is placed on. This
          must refer to an existing Document's ID attribute.
        type: string
      documentIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `documentId` property is
          editable.
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      font:
        description: |
          The font to be used for the tab value. Supported fonts include:

          - Default
          - Arial
          - ArialNarrow
          - Calibri
          - CourierNew
          - Garamond
          - Georgia
          - Helvetica
          - LucidaConsole
          - MSGothic
          - MSMincho
          - OCR-A
          - Tahoma
          - TimesNewRoman
          - Trebuchet
          - Verdana
        type: string
      fontColor:
        description:
          "The font color to use for the information in the tab. Possible
          values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n-
          Gold\n- Green\n- NavyBlue\n- Purple\n- White\n"
        type: string
      fontColorMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `fontColor` property is editable.
      fontMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `font` property is editable.
      fontSize:
        description: |-
          The font size used for the information in the tab. Possible values are:

          - Size7
          - Size8
          - Size9
          - Size10
          - Size11
          - Size12
          - Size14
          - Size16
          - Size18
          - Size20
          - Size22
          - Size24
          - Size26
          - Size28
          - Size36
          - Size48
          - Size72
        type: string
      fontSizeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `fontSize` property is editable.
      formOrder:
        description:
          An integer specifying the order in which the guided form HTML
          should render. The order is relative to the `formPageLabel`, the group by
          which to place the guided form HTML block.
        type: string
      formOrderMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `formOrder` property is editable.
      formPageLabel:
        description:
          A string specifying the group in which to place the guided form
          HTML. Each group displays as a separate guided forms page in the signing
          experience.
        type: string
      formPageLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `formPageLabel` property
          is editable.
      formPageNumber:
        description:
          An integer specifying the order in which to present the guided
          form pages.
        type: string
      formPageNumberMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `fromPageNumber` property
          is editable.
      height:
        description: |-
          The height of the tab in pixels.
          Must be an integer.
        type: string
      heightMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `height` property is editable.
      italic:
        description: When **true,** the information in the tab is italic.
        type: string
      italicMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `italic` property is editable.
      localePolicy:
        "$ref": "#/definitions/localePolicyTab"
        description: Locale-specific settings.
      locked:
        description:
          When **true,** the signer cannot change the data of the custom
          tab.
        type: string
      lockedMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `locked` property is editable.
      maxLength:
        description:
          An optional value that describes the maximum length of the property
          when the property is a string.
        type: string
      maxLengthMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `maxLength` property is editable.
      mergeField:
        "$ref": "#/definitions/mergeField"
        description:
          Contains the information necessary to map the tab to a field
          in SalesForce.
      mergeFieldXml:
        description: Reserved for DocuSign.
        type: string
      name:
        description: ""
        type: string
      nameMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `name` property is editable.
          This property is read-only.
      originalValue:
        description: "The initial value of the tab. "
        type: string
      originalValueMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `originalValue` property
          is editable.
      pageNumber:
        description: Specifies the page number on which the tab is located.
        type: string
      pageNumberMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `pageNumber` property is
          editable.
      recipientId:
        description:
          "The ID of the recipient to whom the tab will be assigned. This
          value should match the `recipientId` defined in the recipient object.

          "
        type: string
      recipientIdGuid:
        description:
          The globally-unique identifier (GUID) for a specific recipient
          on a specific envelope. If the same recipient is associated with multiple
          envelopes, they will have a different GUID for each one. This property is
          read-only.
        type: string
      recipientIdGuidMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `recipientIdGuid` property
          is editable.
      recipientIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `recipientId` property is
          editable.
      required:
        description: When **true,** the signer is required to fill out this tab.
        type: string
      requiredMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `required` property is editable.
      smartContractInformation:
        "$ref": "#/definitions/smartContractInformation"
        description: Reserved for DocuSign.
      source:
        description: Reserved for DocuSign.
        type: string
      status:
        description:
          "Indicates the envelope status. Valid values are:\n\n* sent -
          The envelope is sent to the recipients. \n* created - The envelope is saved
          as a draft and can be modified and sent later."
        type: string
      statusMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `status` property is editable.
      tabGroupLabels:
        description: |-
          An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.

          To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
        type: array
        items:
          type: string
      tabGroupLabelsMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `tabGroupLabels` property
          is editable.
      tabId:
        description: The unique identifier for the tab.
        type: string
      tabIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabId` property is editable.
      tabLabel:
        description: |
          The label associated with the tab. This value may be an empty string.
          If no value is provided, the tab type is used as the value.

          Maximum Length: 500 characters.
        type: string
      tabLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabLabel` property is editable.
      tabOrder:
        description: |-
          A positive integer that sets the order the tab is navigated to during signing.

          Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
        type: string
      tabOrderMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabOrder` property is editable.
      tabType:
        description: Indicates the type of tab (for example, `signHere` or `initialHere`).
        type: string
      tabTypeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabType` property is editable.
      templateLocked:
        description:
          "When **true,** the sender cannot change any attributes of the
          recipient. Used only when working with template recipients. "
        type: string
      templateLockedMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `templateLocked` property
          is editable.
      templateRequired:
        description:
          When **true,** the sender may not remove the recipient. Used
          only when working with template recipients.
        type: string
      templateRequiredMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `templateRequired` property
          is editable.
      tooltip:
        description:
          "The text of a tooltip that appears when a user hovers over a
          form field or tab.

          "
        type: string
      toolTipMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          "Metadata that indicates whether the `toolTip` property is editable.

          "
      underline:
        description: When **true,** the information in the tab is underlined.
        type: string
      underlineMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `underline` property is editable.
      value:
        description: "Specifies the value of the tab. "
        type: string
      valueMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `value` property is editable.
      width:
        description: |-
          The width of the tab in pixels.
          Must be an integer.
        type: string
      widthMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `width` property is editable.
      xPosition:
        description: |
          This property indicates the horizontal offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. Must be an integer. May be zero.
        type: string
      xPositionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `xPosition` property is editable.
      yPosition:
        description: |
          This property indicates the vertical offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. Must be an integer. May be zero.
        type: string
      yPositionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `yPosition` property is editable.
    description: |-
      A Phone Number tab enables a recipient to enter a phone number.

      **Note:** This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary].

      [notary]: /docs/notary-api/
    x-ds-definition-name: phoneNumber
    x-ms-summary: |-
      A Phone Number tab enables a recipient to enter a phone number.

      **Note:** This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary].

      [notary]: /docs/notary-api/
  planInformation:
    description:
      An object used to identify the features and attributes of the account
      being created.
    type: object
    properties:
      addOns:
        description: Reserved for DocuSign.
        type: array
        items:
          "$ref": "#/definitions/addOn"
      currencyCode:
        description:
          Specifies the [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217)
          currency code for the account.
        type: string
      freeTrialDaysOverride:
        description: Reserved for DocuSign.
        type: string
      planFeatureSets:
        description: Reserved for DocuSign.
        type: array
        items:
          "$ref": "#/definitions/featureSet"
      planId:
        description: DocuSign's ID for the account plan.
        type: string
      recipientDomains:
        description: ""
        type: array
        items:
          "$ref": "#/definitions/recipientDomain"
    x-ds-definition-name: planInformation
    x-ms-summary:
      An object used to identify the features and attributes of the account
      being created.
  polyLine:
    type: object
    properties:
      x1:
        description: ""
        type: string
      x2:
        description: ""
        type: string
      y1:
        description: ""
        type: string
      y2:
        description: ""
        type: string
    x-ds-definition-name: polyLine
    description: ""
    x-ms-summary: ""
  polyLineOverlay:
    type: object
    properties:
      anchorAllowWhiteSpaceInCharacters:
        description: |
          When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.

          First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.

          Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.

          The default value is **true.**
        type: string
      anchorAllowWhiteSpaceInCharactersMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorAllowWhiteSpaceInCharacters`
          property is editable.
      anchorCaseSensitive:
        description: |-
          This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**

          For example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.

          This functionality uses the following rules:

          - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:

            $~><|^+=

            For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`

          - Strings embedded in other strings are ignored during the matching process.

          - In words that have dashes, the parts separated by dashes are treated as distinct words.

            Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**

          - Letters with accent marks are treated as distinct characters from their unaccented counterparts.

          - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.

            Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.

          - Unlike punctuation, numbers are not ignored when finding anchor words.

            Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).

          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorCaseSensitiveMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorCaseSensitive` property
          is editable.
      anchorHorizontalAlignment:
        description: |
          This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :

          - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.
          - `right`: Aligns the tab’s left side with the last character of the matching anchor word.

          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorHorizontalAlignmentMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorHorizontalAlignment`
          property is editable.
      anchorIgnoreIfNotPresent:
        description:
          When **true,** this tab is ignored if the `anchorString` is not
          found in the document.
        type: string
      anchorIgnoreIfNotPresentMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorIgnoreIfNotPresent`
          property is editable.
      anchorMatchWholeWord:
        description: |
          When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**

          For example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.

          This functionality uses the following rules:

          - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:

            $~><|^+=

            For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`

          - Strings embedded in other strings are ignored during the matching process.

          - In words that have dashes, the parts separated by dashes are treated as distinct words.

            Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**

          - Letters with accent marks are treated as distinct characters from their unaccented counterparts.

          - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.

            Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.

          - Unlike punctuation, numbers are not ignored when finding anchor words.

            Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).


          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorMatchWholeWordMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorMatchWholeWord` property
          is editable.
      anchorString:
        description:
          Specifies the string to find in the document and use as the basis
          for tab placement.
        type: string
      anchorStringMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorString` property is
          editable.
      anchorTabProcessorVersion:
        description: Reserved for DocuSign.
        type: string
      anchorTabProcessorVersionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Reserved for DocuSign.
      anchorUnits:
        description: |
          Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:

          - `pixels` (default)
          - `inches`
          - `mms`
          - `cms`
        type: string
      anchorUnitsMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorUnits` property is
          editable.
      anchorXOffset:
        description:
          "Specifies the X axis location of the tab in `anchorUnits` relative
          to the `anchorString`.

          "
        type: string
      anchorXOffsetMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorXOffset` property
          is editable.
      anchorYOffset:
        description:
          "Specifies the Y axis location of the tab in `anchorUnits` relative
          to the `anchorString`.

          "
        type: string
      anchorYOffsetMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorYOffset` property
          is editable.
      caption:
        description: ""
        type: string
      captionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `caption` property is editable.
      conditionalParentLabel:
        description:
          For conditional fields this is the `tabLabel` of the parent tab
          that controls this tab's visibility.
        type: string
      conditionalParentLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `conditionalParentLabel`
          property is editable.
      conditionalParentValue:
        description: |
          For conditional fields, this is the value of the parent tab that controls the tab's visibility.

          If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use "on" as the value to show that the parent tab is active.
        type: string
      conditionalParentValueMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `conditionalParentValue`
          property is editable.
      customTabId:
        description:
          The DocuSign generated custom tab ID for the custom tab to be
          applied. This can only be used when adding new tabs for a recipient. When
          used, the new tab inherits all the custom tab properties.
        type: string
      customTabIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `customTabId` property is
          editable.
      documentId:
        description:
          Specifies the document ID number that the tab is placed on. This
          must refer to an existing Document's ID attribute.
        type: string
      documentIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `documentId` property is
          editable.
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      formOrder:
        description:
          An integer specifying the order in which the guided form HTML
          should render. The order is relative to the `formPageLabel`, the group by
          which to place the guided form HTML block.
        type: string
      formOrderMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `formOrder` property is editable.
      formPageLabel:
        description:
          A string specifying the group in which to place the guided form
          HTML. Each group displays as a separate guided forms page in the signing
          experience.
        type: string
      formPageLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `formPageLabel` property
          is editable.
      formPageNumber:
        description:
          An integer specifying the order in which to present the guided
          form pages.
        type: string
      formPageNumberMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `fromPageNumber` property
          is editable.
      graphicsContext:
        "$ref": "#/definitions/graphicsContext"
        description:
          Contains details about the style used for the strike through
          graphic.
      height:
        description: |-
          The height of the tab in pixels.
          Must be an integer.
        type: string
      heightMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `height` property is editable.
      locked:
        description:
          When **true,** the signer cannot change the data of the custom
          tab.
        type: string
      lockedMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `locked` property is editable.
      mergeField:
        "$ref": "#/definitions/mergeField"
        description:
          Contains the information necessary to map the tab to a field
          in SalesForce.
      mergeFieldXml:
        description: Reserved for DocuSign.
        type: string
      overlayType:
        description:
          The type of overlay to use. The API currently supports only the
          `outline` overlay type.
        type: string
      overlayTypeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          "Metadata that indicates whether the `overlayType` property is
          editable.

          "
      pageNumber:
        description: Specifies the page number on which the tab is located.
        type: string
      pageNumberMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `pageNumber` property is
          editable.
      polyLines:
        description:
          An array of `polyLine` objects that contain x- and y-coordinates
          representing the locations of the lines.
        type: array
        items:
          "$ref": "#/definitions/polyLine"
      recipientId:
        description:
          "The ID of the recipient to whom the tab will be assigned. This
          value should match the `recipientId` defined in the recipient object.

          "
        type: string
      recipientIdGuid:
        description:
          The globally-unique identifier (GUID) for a specific recipient
          on a specific envelope. If the same recipient is associated with multiple
          envelopes, they will have a different GUID for each one. This property is
          read-only.
        type: string
      recipientIdGuidMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `recipientIdGuid` property
          is editable.
      recipientIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `recipientId` property is
          editable.
      shared:
        description: When **true,** indicates that the tab is shared.
        type: string
      sharedMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `shared` property is editable.
      smartContractInformation:
        "$ref": "#/definitions/smartContractInformation"
        description: Reserved for DocuSign.
      source:
        description: Reserved for DocuSign.
        type: string
      status:
        description: |-
          The status of the tab. Possible values are:

          - `active`: The tab is active, but the recipient has not yet interacted with it.
          - `signed`: The recipient signed the tab.
          - `declined`: The recipient declined the envelope.
          - `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).
        type: string
      statusMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `status` property is editable.
      tabGroupLabels:
        description: |-
          An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.

          To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
        type: array
        items:
          type: string
      tabGroupLabelsMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `tabGroupLabels` property
          is editable.
      tabId:
        description: The unique identifier for the tab.
        type: string
      tabIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabId` property is editable.
      tabLabel:
        description: |
          The label associated with the tab. This value may be an empty string.
          If no value is provided, the tab type is used as the value.

          Maximum Length: 500 characters.
        type: string
      tabOrder:
        description: |-
          A positive integer that sets the order the tab is navigated to during signing.

          Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
        type: string
      tabOrderMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabOrder` property is editable.
      tabType:
        description: Indicates the type of tab (for example, `signHere` or `initialHere`).
        type: string
      tabTypeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabType` property is editable.
      templateLocked:
        description:
          "When **true,** the sender cannot change any attributes of the
          recipient. Used only when working with template recipients. "
        type: string
      templateLockedMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `templateLocked` property
          is editable.
      templateRequired:
        description:
          When **true,** the sender may not remove the recipient. Used
          only when working with template recipients.
        type: string
      templateRequiredMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `templateRequired` property
          is editable.
      tooltip:
        description:
          "The text of a tooltip that appears when a user hovers over a
          form field or tab.

          "
        type: string
      toolTipMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          "Metadata that indicates whether the `toolTip` property is editable.

          "
      width:
        description: |-
          The width of the tab in pixels.
          Must be an integer.
        type: string
      widthMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `width` property is editable.
      xPosition:
        description: |
          This property indicates the horizontal offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. Must be an integer. May be zero.
        type: string
      xPositionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `xPosition` property is editable.
      yPosition:
        description: |
          This property indicates the vertical offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. Must be an integer. May be zero.
        type: string
      yPositionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `yPosition` property is editable.
    description:
      This tab enables users to strike through the text of a document.
      The tab is implemented as a line represented as a pair of x and y coordinates.
    x-ds-definition-name: polyLineOverlay
    x-ms-summary:
      This tab enables users to strike through the text of a document.
      The tab is implemented as a line represented as a pair of x and y coordinates.
  powerForm:
    type: object
    properties:
      createdBy:
        description: The ID of the user who created the PowerForm.
        type: string
      createdDateTime:
        description: The UTC DateTime when the item was created.
        type: string
      emailBody:
        description:
          "The body of the email message sent to the recipients. \n\nMaximum
          length: 10000 characters."
        type: string
      emailSubject:
        description: |
          The subject line of the email message that is sent to all recipients.

          For information about adding merge field information to the email subject, see [Template Email Subject Merge Fields](/docs/esign-rest-api/reference/templates/templates/create/#template-email-subject-merge-fields).

          **Note:** The subject line is limited to 100 characters, including any merged fields.It is not truncated. It is an error if the text is longer than 100 characters.
        type: string
      envelopes:
        description: ""
        type: array
        items:
          "$ref": "#/definitions/envelope"
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      instructions:
        description:
          "The instructions that display on the landing page for the first
          recipient. These instructions are important if the recipient accesses the
          PowerForm by a method other than email. If instructions are entered, they
          display as an introduction after the recipient accesses the PowerForm.  Limit:
          2000 characters."
        type: string
      isActive:
        description:
          "When **true,** indicates that the PowerForm is active and can
          be sent to recipients. This is the default value.\n\nWhen **false,** the
          PowerForm cannot be emailed or accessed by a recipient, even if they arrive
          at the PowerForm URL. \n\nIf a recipient attempts to sign an inactive PowerForm,
          an error message informs the recipient that the document is not active and
          suggests that they contact the sender.\n"
        type: string
      lastUsed:
        description: The UTC DateTime when the PowerForm was last used.
        type: string
      limitUseInterval:
        description:
          The length of time before the same recipient can sign the same
          PowerForm. This property is used in combination with the `limitUseIntervalUnits`
          property.
        type: string
      limitUseIntervalEnabled:
        description: When **true,** the `limitUseInterval` is enabled.
        type: string
      limitUseIntervalUnits:
        description: |
          The units associated with the `limitUseInterval`. Valid values are:

          - `minutes`
          - `hours
          - `days`
          - `weeks`
          - `months`

          For example, to limit a recipient to signing once per year, set the `limitUseInterval` to 365 and the `limitUseIntervalUnits` to `days`.
        type: string
      maxUseEnabled:
        description: When **true,** you can set a maximum number of uses for the PowerForm.
        type: string
      name:
        description: The name of the PowerForm.
        type: string
      powerFormId:
        description: The ID of the PowerForm.
        type: string
      powerFormUrl:
        description: The URL for the PowerForm.
        type: string
      recipients:
        description:
          An array of recipient objects that provides details about the
          recipients of the envelope.
        type: array
        items:
          "$ref": "#/definitions/powerFormRecipient"
      senderName:
        description: The sender's name.
        type: string
      senderUserId:
        description: The ID of the sender.
        type: string
      signingMode:
        description:
          "The signing mode to use. Valid values are:\n \n- `email`: Verifies
          the recipient's identity using email authentication before the recipient
          can sign a document. The recipient enters their email address and then clicks
          **Begin Signing** to begin the signing process. The system then sends an
          email message with a validation code for the PowerForm to the recipient.
          If the recipient does not provide a valid email address, they cannot open
          and sign the document.  \n- `direct`: Does not require any verification.
          After a recipient enters their email address and clicks **Begin Signing,**
          a new browser tab opens and the recipient can immediately begin the signing
          process. Because the recipient's identity is not verified by using email
          authentication, we strongly recommend that you only use the `direct` signing
          mode when the PowerForm is accessible behind a secure portal where the recipient's
          identity is already authenticated, or where another form of authentication
          is specified for the recipient in the DocuSign template (for example, an
          access code, phone authentication, or ID check).  \n\n**Note:** In the account
          settings, `enablePowerFormDirect` must be **true** to use `direct` as the
          `signingMode`."
        type: string
      templateId:
        description: The ID of the template used to create the PowerForm.
        type: string
      templateName:
        description: The name of the template used to create the PowerForm.
        type: string
      timesUsed:
        description: "The number of times the PowerForm has been used. "
        type: string
      uri:
        description: The URI for the PowerForm.
        type: string
      usesRemaining:
        description: The number of times the PowerForm can still be used.
        type: string
    description: Contains details about a PowerForm.
    x-ds-definition-name: powerForm
    x-ms-summary: Contains details about a PowerForm.
  powerFormFormDataEnvelope:
    type: object
    properties:
      envelopeId:
        description: The envelope ID of the envelope status that failed to post.
        type: string
      recipients:
        description:
          An array of recipient objects that provides details about the
          recipients of the envelope.
        type: array
        items:
          "$ref": "#/definitions/powerFormFormDataRecipient"
    x-ds-definition-name: powerFormFormDataEnvelope
    description: ""
    x-ms-summary: ""
  powerFormFormDataRecipient:
    type: object
    properties:
      email:
        description: ""
        type: string
      formData:
        description: ""
        type: array
        items:
          "$ref": "#/definitions/nameValue"
      name:
        description: The name of the recipient.
        type: string
      recipientId:
        description:
          Unique for the recipient. It is used by the tab element to indicate
          which recipient is to sign the Document.
        type: string
    x-ds-definition-name: powerFormFormDataRecipient
    description: ""
    x-ms-summary: ""
  powerFormRecipient:
    type: object
    properties:
      accessCode:
        description: |-
          (Optional) The access code that the recipient must enter to access the PowerForm.

          Maximum Length: 50 characters. The code must also conform to the account's access code format setting.

          If blank but the signer accessCode property is set in the envelope, then that value is used.

          If blank and the signer accessCode property is not set, then the access code is not required.
        type: string
      accessCodeLocked:
        description:
          When **true,** the `accessCode` property is locked and cannot
          be edited.
        type: string
      accessCodeRequired:
        description:
          When **true,** the recipient must enter the `accessCode` to access
          the PowerForm.
        type: string
      email:
        description: |-
          The email address of the recipient.

          **Note:** For self-service documents where you do not know who the recipients are in advance, you can leave this property blank.
        type: string
      emailLocked:
        description:
          When **true,** the recipient's email address is locked and cannot
          be edited.
        type: string
      idCheckConfigurationName:
        description:
          "The name of the authentication check to use. This value must
          match one of the authentication types that the account uses. The names of
          these authentication types appear in the web console sending interface in
          the Identify list for a recipient. This setting overrides any default authentication
          setting. Valid values are:\n\n- `Phone Auth $`: The recipient must authenticate
          by using two-factor authentication (2FA). You provide the phone number to
          use for 2FA in the `phoneAuthentication` object.\n- `SMS Auth $`: The recipient
          must authenticate via SMS. You provide the phone number to use in the `smsAuthentication`
          object.\n- `ID Check $`: The  recipient must answer detailed security questions.
          \n\n**Example:** Your account has ID Check and SMS Authentication available.
          In the web console Identify list, these appear as ID Check $ and SMS Auth
          $. To use ID Check in an envelope, the idCheckConfigurationName should be
          ID Check $. For SMS, you would use SMS Auth $, and you would also need to
          add a phone number to the smsAuthentication node."
        type: string
      idCheckRequired:
        description:
          "Indicates if authentication is configured for the account. Valid
          values are:\n\n- `always`: Authentication checks are performed on every
          envelope. \n- `never`: Authentication checks are not performed on any envelopes.
          \n- `optional:` Authentication is configurable per envelope."
        type: string
      name:
        description: |-
          The name of the PowerForm recipient.

          **Note:** For self-service documents where you do not know who the recipients are in advance, you can leave this property blank.
        type: string
      recipientType:
        description: |-
          The recipient type, as specified by the following values:
          - `agent`: Agent recipients can add name and email information for recipients that appear after the agent in routing order.
          - `carbonCopy`: Carbon copy recipients get a copy of the envelope but don't need to sign, initial, date, or add information to any of the documents. This type of recipient can be used in any routing order.
          - `certifiedDelivery`: Certified delivery recipients must receive the completed documents for the envelope to be completed. They don't need to sign, initial, date, or add information to any of the documents.
          - `editor`: Editors have the same management and access rights for the envelope as the sender. Editors can add name and email information, add or change the routing order, set authentication options, and can edit signature/initial tabs and data fields for the remaining recipients.
          - `inPersonSigner`: In-person recipients are DocuSign users who act as signing hosts in the same physical location as the signer.
          - `intermediaries`: Intermediary recipients can optionally add name and email information for recipients at the same or subsequent level in the routing order.
          - `seal`: Electronic seal recipients represent legal entities.
          - `signer`: Signers are recipients who must sign, initial, date, or add data to form fields on the documents in the envelope.
          - `witness`: Witnesses are recipients whose signatures affirm that the identified signers have signed the documents in the envelope.
        type: string
      roleName:
        description: |-
          The role associated with the recipient (for example, `Member`).

          This property is required when you are working with template recipients and PowerForm recipients.
        type: string
      routingOrder:
        description: "Specifies the routing order of the recipient in the envelope. "
        type: string
      templateRequiresIdLookup:
        description:
          When **true,** the template used to create the PowerForm requires
          ID lookup for the recipient.
        type: string
      userNameLocked:
        description:
          When **true,** the `userName` property for the recipient is locked
          and cannot be edited.
        type: string
    description:
      "**Note:** For a self-service PowerForm on a website, you can specify
      the intended recipients generically (for example, use `Member` as the `Name`),
      and omit personal details such as `email`."
    x-ds-definition-name: powerFormRecipient
    x-ms-summary:
      "**Note:** For a self-service PowerForm on a website, you can specify
      the intended recipients generically (for example, use `Member` as the `Name`),
      and omit personal details such as `email`."
  powerFormSendersResponse:
    type: object
    properties:
      endPosition:
        format: int32
        description: "The last index position in the result set. "
        type: integer
      nextUri:
        description:
          "The URI for the next chunk of records based on the search request.
          It is `null` if this is the last set of results for the search. "
        type: string
      powerFormSenders:
        description:
          An array of `userInfo` objects containing information about users
          who have sent PowerForms.
        type: array
        items:
          "$ref": "#/definitions/userInfo"
      previousUri:
        description:
          "The URI for the prior chunk of records based on the search request.
          It is `null` if this is the first set of results for the search. "
        type: string
      resultSetSize:
        format: int32
        description:
          The number of results in this response. Because you can filter
          which entries are included in the response, this value is always less than
          or equal to the `totalSetSize`.
        type: integer
      startPosition:
        format: int32
        description: The starting index position of the current result set.
        type: integer
      totalSetSize:
        format: int32
        description:
          The total number of items in the result set. This value is always
          greater than or equal to the value of `resultSetSize`.
        type: integer
    description: This object includes information about the users who have sent PowerForms.
    x-ds-definition-name: powerFormSendersResponse
    x-ms-summary: This object includes information about the users who have sent PowerForms.
  powerFormsFormDataResponse:
    type: object
    properties:
      envelopes:
        description: ""
        type: array
        items:
          "$ref": "#/definitions/powerFormFormDataEnvelope"
    x-ds-definition-name: powerFormsFormDataResponse
    description: ""
    x-ms-summary: ""
  powerFormsRequest:
    type: object
    properties:
      powerForms:
        description: An array of PowerForm objects.
        type: array
        items:
          "$ref": "#/definitions/powerForm"
    x-ds-definition-name: powerFormsRequest
    description: ""
    x-ms-summary: ""
  powerFormsResponse:
    type: object
    properties:
      endPosition:
        format: int32
        description: "The last index position in the result set. "
        type: integer
      nextUri:
        description:
          "The URI for the next chunk of records based on the search request.
          It is `null` if this is the last set of results for the search. "
        type: string
      powerForms:
        description: An array of PowerForm objects.
        type: array
        items:
          "$ref": "#/definitions/powerForm"
      previousUri:
        description:
          "The URI for the prior chunk of records based on the search request.
          It is `null` if this is the first set of results for the search. "
        type: string
      resultSetSize:
        format: int32
        description:
          The number of results in this response. Because you can filter
          which entries are included in the response, this value is always less than
          or equal to the `totalSetSize`.
        type: integer
      startPosition:
        format: int32
        description: The starting index position of the current result set.
        type: integer
      totalSetSize:
        format: int32
        description:
          The total number of items in the result set. This value is always
          greater than or equal to the value of `resultSetSize`.
        type: integer
    description: A list of PowerForms.
    x-ds-definition-name: powerFormsResponse
    x-ms-summary: A list of PowerForms.
  prefillFormData:
    type: object
    properties:
      formData:
        description: ""
        type: array
        items:
          "$ref": "#/definitions/formDataItem"
      senderEmail:
        description: The sender's email address.
        type: string
      senderName:
        description: The sender's name.
        type: string
      senderUserId:
        description: The ID of the sender.
        type: string
    x-ds-definition-name: prefillFormData
    description: ""
    x-ms-summary: ""
  prefillTabs:
    type: object
    properties:
      checkboxTabs:
        description: |
          A list of
          [Checkbox tabs][checkbox].


          A Checkbox tab enables the recipient to select a yes/no (on/off) option. This value can be set.


          [checkbox]:  /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/checkbox"
      dateTabs:
        description: |
          A list of
          [Date tabs][date].

          A Date tab enables the recipient to enter a date. This value can't be set. The tooltip for this tab recommends the date format MM/DD/YYYY, but several other date formats are also accepted. The system retains the format that the recipient enters.

          **Note:** If you need to enforce a specific date format, DocuSign recommends that you use a Text tab with a validation pattern and validation message.


          [date]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/date"
      emailTabs:
        description: |
          A list of
          [Email tabs][email].

          An Email tab enables the recipient to enter an email address.
          This is a one-line field that checks that a valid email
          address is entered. It uses the same parameters as a Text
          tab, with the validation message and pattern set for email
          information. This value can be set.

          When getting information that includes
          this tab type, the original value of the tab when the
          associated envelope was sent is included in the response.

          [email]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/email"
      numberTabs:
        description: |
          A list of Number tabs.

          Number tabs validate that the entered value is a number.
          They do not support advanced validation or display options.

          To learn more about the different forms of number tabs,
          see [Number fields](/docs/esign-rest-api/esign101/concepts/tabs/number-fields/) in the Concepts guide.
          For specific information about number tabs
          see [Features of numberTabs](/docs/esign-rest-api/esign101/concepts/tabs/number-fields/#features-of-numbertabs).

          [number]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/number"
      radioGroupTabs:
        description: |
          A list of [Radio Group tabs][radioGroup].

          A Radio Group tab places a group of radio buttons on a document. The `radios` property is used to add and place the radio
          buttons associated with the group. Only one radio button can be selected in a group. This value can be set.


          [radioGroup]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/radioGroup"
      senderCompanyTabs:
        description: ""
        type: array
        items:
          "$ref": "#/definitions/senderCompany"
      senderNameTabs:
        description: ""
        type: array
        items:
          "$ref": "#/definitions/senderName"
      ssnTabs:
        description: |
          A list of
          [SSN tabs][ssn].

          An SSN tab contains a one-line field that enables the recipient to enter a Social Security Number (SSN) with or without
          dashes. It uses the same parameters as a Text tab, with the validation message and pattern set for SSN information. This value can be set.


          [ssn]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/ssn"
      tabGroups:
        description: |
          An array of `tabGroup` items.

          To associate a tab with a tab group, add the tab group's `groupLabel` to the tab's `tabGroupLabels` array.
        type: array
        items:
          "$ref": "#/definitions/tabGroup"
      textTabs:
        description: |
          A list of
          Text tabs.

          A text tab enables the recipient to enter free text. This value can be set.

          Find descriptions of all tab types in
          the [EnvelopeRecipientTabs Resource][ert].

          [ert]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/text"
      zipTabs:
        description: |
          A list of
          [Zip tabs][zip].

          A Zip tab enables the recipient to enter a ZIP code. The ZIP code can be five digits or nine digits ( in ZIP+4 format), and can be entered with or without dashes. It uses the same parameters as a Text tab, with the validation message and pattern set for ZIP code information.  This value can be set.


          [zip]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/zip"
    description: |-
      Prefill tabs are tabs
      that the sender can fill in
      before the envelope is sent.
      They are sometimes called
      sender tags or pre-fill fields.

      Only the following tab types can be
      prefill tabs:

      - text
      - check boxes
      - radio buttons



      [Pre-Fill Your Own Document Fields][app]
      describes how prefill tabs
      work in the web application.


      [Customize your envelopes with pre-fill fields][catblog]
      shows how to use prefill tabs
      in your application using the eSignature
      SDKs.

      [app]:      https://support.docusign.com/s/document-item?bundleId=gbo1643332197980&topicId=nwo1611173513994.html
      [catblog]:  https://www.docusign.com/blog/developers/common-api-tasks-customize-your-envelopes-pre-fill-fields
    x-ds-definition-name: prefillTabs
    x-ms-summary: |-
      Prefill tabs are tabs
      that the sender can fill in
      before the envelope is sent.
      They are sometimes called
      sender tags or pre-fill fields.

      Only the following tab types can be
      prefill tabs:

      - text
      - check boxes
      - radio buttons



      [Pre-Fill Your Own Document Fields][app]
      describes how prefill tabs
      work in the web application.


      [Customize your envelopes with pre-fill fields][catblog]
      shows how to use prefill tabs
      in your application using the eSignature
      SDKs.

      [app]:      https://support.docusign.com/s/document-item?bundleId=gbo1643332197980&topicId=nwo1611173513994.html
      [catblog]:  https://www.docusign.com/blog/developers/common-api-tasks-customize-your-envelopes-pre-fill-fields
  propertyMetadata:
    type: object
    properties:
      options:
        description: An array of option strings supported by this setting.
        type: array
        items:
          type: string
      rights:
        description: |-
          Indicates whether the property is editable. Valid values are:

          - `editable`
          - `read_only`
        type: string
    description: Metadata about a property.
    x-ds-definition-name: propertyMetadata
    x-ms-summary: Metadata about a property.
  province:
    type: object
    properties:
      isoCode:
        description: ""
        type: string
      name:
        description: ""
        type: string
    x-ds-definition-name: province
    description: ""
    x-ms-summary: ""
  provisioningInformation:
    type: object
    properties:
      defaultConnectionId:
        description: ""
        type: string
      defaultPlanId:
        description: ""
        type: string
      distributorCode:
        description:
          The code that identifies the billing plan groups and plans for
          the new account.
        type: string
      distributorPassword:
        description: The password for the `distributorCode`.
        type: string
      passwordRuleText:
        description: ""
        type: string
      planPromotionText:
        description: ""
        type: string
      purchaseOrderOrPromAllowed:
        description: ""
        type: string
    x-ds-definition-name: provisioningInformation
    description: ""
    x-ms-summary: ""
  purchasedEnvelopesInformation:
    type: object
    properties:
      amount:
        description: The total amount of the purchase.
        type: string
      appName:
        description: The AppName of the client application.
        type: string
      currencyCode:
        description:
          "Specifies the [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217)
          currency code of the purchase.

          "
        type: string
      platform:
        description: The Platform of the client application
        type: string
      productId:
        description: The Product ID from the AppStore.
        type: string
      quantity:
        description: The quantity of envelopes to add to the account.
        type: string
      receiptData:
        description: The encrypted Base64 encoded receipt data.
        type: string
      storeName:
        description: The name of the AppStore.
        type: string
      transactionId:
        description: Specifies the Transaction ID from the AppStore.
        type: string
    x-ds-definition-name: purchasedEnvelopesInformation
    description: ""
    x-ms-summary: ""
  radio:
    type: object
    properties:
      anchorAllowWhiteSpaceInCharacters:
        description: |
          When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.

          First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.

          Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.

          The default value is **true.**
        type: string
      anchorAllowWhiteSpaceInCharactersMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorAllowWhiteSpaceInCharacters`
          property is editable.
      anchorCaseSensitive:
        description: |-
          This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**

          For example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.

          This functionality uses the following rules:

          - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:

            $~><|^+=

            For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`

          - Strings embedded in other strings are ignored during the matching process.

          - In words that have dashes, the parts separated by dashes are treated as distinct words.

            Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**

          - Letters with accent marks are treated as distinct characters from their unaccented counterparts.

          - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.

            Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.

          - Unlike punctuation, numbers are not ignored when finding anchor words.

            Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).

          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorCaseSensitiveMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorCaseSensitive` property
          is editable.
      anchorHorizontalAlignment:
        description: |
          This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :

          - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.
          - `right`: Aligns the tab’s left side with the last character of the matching anchor word.

          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorHorizontalAlignmentMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorHorizontalAlignment`
          property is editable.
      anchorIgnoreIfNotPresent:
        description:
          When **true,** this tab is ignored if the `anchorString` is not
          found in the document.
        type: string
      anchorIgnoreIfNotPresentMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorIgnoreIfNotPresent`
          property is editable.
      anchorMatchWholeWord:
        description: |
          When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**

          For example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.

          This functionality uses the following rules:

          - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:

            $~><|^+=

            For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`

          - Strings embedded in other strings are ignored during the matching process.

          - In words that have dashes, the parts separated by dashes are treated as distinct words.

            Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**

          - Letters with accent marks are treated as distinct characters from their unaccented counterparts.

          - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.

            Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.

          - Unlike punctuation, numbers are not ignored when finding anchor words.

            Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).


          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorMatchWholeWordMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorMatchWholeWord` property
          is editable.
      anchorString:
        description:
          Specifies the string to find in the document and use as the basis
          for tab placement.
        type: string
      anchorStringMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorString` property is
          editable.
      anchorTabProcessorVersion:
        description: Reserved for DocuSign.
        type: string
      anchorTabProcessorVersionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Reserved for DocuSign.
      anchorUnits:
        description: |
          Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:

          - `pixels` (default)
          - `inches`
          - `mms`
          - `cms`
        type: string
      anchorUnitsMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorUnits` property is
          editable.
      anchorXOffset:
        description:
          "Specifies the X axis location of the tab in `anchorUnits` relative
          to the `anchorString`.

          "
        type: string
      anchorXOffsetMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorXOffset` property
          is editable.
      anchorYOffset:
        description:
          "Specifies the Y axis location of the tab in `anchorUnits` relative
          to the `anchorString`.

          "
        type: string
      anchorYOffsetMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorYOffset` property
          is editable.
      bold:
        description: When **true,** the information in the tab is bold.
        type: string
      boldMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `bold` property is editable.
      caption:
        description: ""
        type: string
      captionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `caption` property is editable.
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      font:
        description: |
          The font to be used for the tab value. Supported fonts include:

          - Default
          - Arial
          - ArialNarrow
          - Calibri
          - CourierNew
          - Garamond
          - Georgia
          - Helvetica
          - LucidaConsole
          - MSGothic
          - MSMincho
          - OCR-A
          - Tahoma
          - TimesNewRoman
          - Trebuchet
          - Verdana
        type: string
      fontColor:
        description:
          "The font color to use for the information in the tab. Possible
          values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n-
          Gold\n- Green\n- NavyBlue\n- Purple\n- White\n"
        type: string
      fontColorMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `fontColor` property is editable.
      fontMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `font` property is editable.
      fontSize:
        description: |-
          The font size used for the information in the tab. Possible values are:

          - Size7
          - Size8
          - Size9
          - Size10
          - Size11
          - Size12
          - Size14
          - Size16
          - Size18
          - Size20
          - Size22
          - Size24
          - Size26
          - Size28
          - Size36
          - Size48
          - Size72
        type: string
      fontSizeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `fontSize` property is editable.
      italic:
        description: When **true,** the information in the tab is italic.
        type: string
      italicMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `italic` property is editable.
      locked:
        description:
          When **true,** the signer cannot change the data of the custom
          tab.
        type: string
      lockedMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `locked` property is editable.
      mergeFieldXml:
        description: Reserved for DocuSign.
        type: string
      pageNumber:
        description: |
          Specifies the page number on which the tab is located.
          Must be 1 for supplemental documents.
        type: string
      pageNumberMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `pageNumber` property is
          editable.
      required:
        description: When **true,** the signer is required to fill out this tab.
        type: string
      requiredMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `required` property is editable.
      selected:
        description: When **true,** the radio button is selected.
        type: string
      selectedMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `selected` property is editable.
      status:
        description:
          "Indicates the envelope status. Valid values are:\n\n* sent -
          The envelope is sent to the recipients. \n* created - The envelope is saved
          as a draft and can be modified and sent later."
        type: string
      statusMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `status` property is editable.
      tabId:
        description: The unique identifier for the tab.
        type: string
      tabIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabId` property is editable.
      tabOrder:
        description: |-
          A positive integer that sets the order the tab is navigated to during signing.

          Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
        type: string
      tabOrderMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabOrder` property is editable.
      underline:
        description: When **true,** the information in the tab is underlined.
        type: string
      underlineMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `underline` property is editable.
      value:
        description: "Specifies the value of the tab. "
        type: string
      valueMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `value` property is editable.
      xPosition:
        description: |
          This property indicates the horizontal offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. Must be an integer. May be zero.
        type: string
      xPositionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `xPosition` property is editable.
      yPosition:
        description: |
          This property indicates the vertical offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. Must be an integer. May be zero.
        type: string
      yPositionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `yPosition` property is editable.
    description: |
      One of the selectable radio buttons
      in the `radios` property
      of a [`radioGroup`](/docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/) tab.
    x-ds-definition-name: radio
    x-ms-summary: |
      One of the selectable radio buttons
      in the `radios` property
      of a [`radioGroup`](/docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/) tab.
  radioGroup:
    type: object
    properties:
      conditionalParentLabel:
        description:
          For conditional fields this is the `tabLabel` of the parent tab
          that controls this tab's visibility.
        type: string
      conditionalParentLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `conditionalParentLabel`
          property is editable.
      conditionalParentValue:
        description: |
          For conditional fields, this is the value of the parent tab that controls the tab's visibility.

          If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use "on" as the value to show that the parent tab is active.
        type: string
      conditionalParentValueMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `conditionalParentValue`
          property is editable.
      documentId:
        description:
          Specifies the document ID number that the tab is placed on. This
          must refer to an existing Document's ID attribute.
        type: string
      documentIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `documentId` property is
          editable.
      groupName:
        description:
          The name of the group. The search_text provided in the call automatically
          performs a wild card search on group_name.
        type: string
      groupNameMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `groupName` property is editable.
      originalValue:
        description: "The initial value of the tab. "
        type: string
      originalValueMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `originalValue` property
          is editable.
      radios:
        description:
          Specifies the locations and status for radio buttons that are
          grouped together.
        type: array
        items:
          "$ref": "#/definitions/radio"
      recipientId:
        description:
          "The ID of the recipient to whom the tab will be assigned. This
          value should match the `recipientId` defined in the recipient object.

          "
        type: string
      recipientIdGuid:
        description:
          The globally-unique identifier (GUID) for a specific recipient
          on a specific envelope. If the same recipient is associated with multiple
          envelopes, they will have a different GUID for each one. This property is
          read-only.
        type: string
      recipientIdGuidMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `recipientIdGuid` property
          is editable.
      recipientIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `recipientId` property is
          editable.
      requireAll:
        description:
          "When **true** and shared is true, information must be entered
          in this field to complete the envelope. "
        type: string
      requireAllMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `requireAll` property is
          editable.
      requireInitialOnSharedChange:
        description:
          Optional element for field markup. When **true,** the signer
          is required to initial when they modify a shared field.
        type: string
      requireInitialOnSharedChangeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `requireInitialOnSharedChange`
          property is editable.
      shared:
        description: When **true,** this custom tab is shared.
        type: string
      sharedMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `shared` property is editable.
      shareToRecipients:
        description: Reserved for DocuSign.
        type: string
      shareToRecipientsMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Reserved for DocuSign.
      tabType:
        description: Indicates the type of tab (for example, `signHere` or `initialHere`).
        type: string
      tabTypeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabType` property is editable.
      templateLocked:
        description:
          "When **true,** the sender cannot change any attributes of the
          recipient. Used only when working with template recipients. "
        type: string
      templateLockedMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `templateLocked` property
          is editable.
      templateRequired:
        description:
          When **true,** the sender may not remove the recipient. Used
          only when working with template recipients.
        type: string
      templateRequiredMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `templateRequired` property
          is editable.
      tooltip:
        description:
          "The text of a tooltip that appears when a user hovers over a
          form field or tab.

          "
        type: string
      tooltipMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          "Metadata that indicates whether the `tooltip` property is editable.

          "
      value:
        description: "Specifies the value of the tab. "
        type: string
      valueMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `value` property is editable.
    description: |
      This group tab is used to place radio buttons on a document.
      The `radios` property
      contains a list of
      [`radio`](/docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/)
      objects  associated with the group. Only one radio button can
      be selected in a group.
    x-ds-definition-name: radioGroup
    x-ms-summary: |
      This group tab is used to place radio buttons on a document.
      The `radios` property
      contains a list of
      [`radio`](/docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/)
      objects  associated with the group. Only one radio button can
      be selected in a group.
  recipientAdditionalNotification:
    type: object
    properties:
      phoneNumber:
        "$ref": "#/definitions/recipientPhoneNumber"
        description: The phone number to receive the additional notifcation.
      secondaryDeliveryMethod:
        description: |-
          The secondary delivery method. One of:

          - `email`
          - `fax`
          - `SMS`
          - `WhatsApp`
          - `offline`

          The `SMS` and `WhatsApp` delivery methods
          are limited to `signer`, `carbonCopy`, and `certifiedDelivery`
          recipients.

          **Related topics**

          - [Using SMS delivery with the eSignature API][smsconcept]
          - [How to request a signature by SMS delivery][howto]

          [smsconcept]: /docs/esign-rest-api/esign101/concepts/sms-delivery/using-sms-esignature/
          [howto]: /docs/esign-rest-api/how-to/request-signature-sms/
        type: string
      secondaryDeliveryMethodMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata about the delivery method.
      secondaryDeliveryStatus:
        description: |
          The status of the delivery. This property is read-only.

          One of:

          - `autoresponded`
          - `optedout`
          - `limitreached`
        type: string
    description: Describes an additional notification method.
    x-ds-definition-name: recipientAdditionalNotification
    x-ms-summary: Describes an additional notification method.
  recipientAttachment:
    type: object
    properties:
      attachmentId:
        description: The unique identifier for the attachment.
        type: string
      attachmentType:
        description: |-
          Specifies the type of the attachment for the recipient. Possible values are:

          - `.htm`
          - `.xml`
        type: string
      data:
        description:
          A Base64-encoded representation of the attachment that is used
          to upload and download the file. File attachments may be up to 50 MB in
          size.
        type: string
      label:
        description: An optional label for the attachment.
        type: string
      name:
        description: The name of the attachment.
        type: string
      remoteUrl:
        description:
          The URL of a previously staged chunked upload. Using a chunked
          upload enables you to stage a large, chunkable temp file. You then use the
          `remoteUrl` property to reference the chunked upload as the content in attachment
          and document-related requests. The `remoteUrl` property cannot be used for
          downloads.
        type: string
    x-ds-definition-name: recipientAttachment
    description: ""
    x-ms-summary: ""
  recipientDomain:
    type: object
    properties:
      active:
        description: ""
        type: string
      domainCode:
        description: ""
        type: string
      domainName:
        description: ""
        type: string
      recipientDomainId:
        description: ""
        type: string
    x-ds-definition-name: recipientDomain
    description: ""
    x-ms-summary: ""
  recipientEmailNotification:
    type: object
    properties:
      emailBody:
        description: The body of the email message.
        type: string
      emailBodyMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `emailBody` property can
          be edited.
      emailSubject:
        description: The subject line for the email notification.
        type: string
      emailSubjectMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `emailSubject` property can
          be edited.
      supportedLanguage:
        description: |
          The language to use for the standard email format and signing view for a recipient.

          For example, this setting determines the language of the recipient's email notification message. It also determines the language used for buttons and tabs in both the email notification and the signing experience.

          **Note:** This setting affects only DocuSign standard text. Any custom text that you enter for the `emailBody` and `emailSubject` of the notification is not translated, and appears exactly as you enter it.

          To retrieve the possible values, use the [Accounts::listSupportedLanguages][ListLang] method.

          [ListLang]: /docs/esign-rest-api/reference/accounts/accounts/listsupportedlanguages/
        type: string
      supportedLanguageMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `supportedLanguage` property
          can be edited.
    x-ds-definition-name: recipientEmailNotification
    description: |
      Sets custom email subject and email body for individual
      recipients. **Note:** You must explicitly set `supportedLanguage`
      if you use this feature.
    x-ms-summary: |
      Sets custom email subject and email body for individual
      recipients. **Note:** You must explicitly set `supportedLanguage`
      if you use this feature.
  recipientEvent:
    type: object
    properties:
      includeDocuments:
        description: |-
          When **true,**
          the Connect webhook messages
          will include the envelope's PDF documents.
          Including the PDF documents
          greatly increases the size of the notification messages.
          Ensure that your listener can handle
          incoming messages that are 25MB or larger.
        type: string
      recipientEventStatusCode:
        description:
          "Send a webhook notification for the following recipient statuses:
          Sent, Delivered, Completed, Declined, AuthenticationFailed, and AutoResponded."
        type: string
    x-ds-definition-name: recipientEvent
    description: ""
    x-ms-summary: ""
  recipientFormData:
    type: object
    properties:
      DeclinedTime:
        description: The date and time the recipient declined the envelope.
        type: string
      DeliveredTime:
        description:
          The date and time the recipient viewed the documents in the envelope
          in the DocuSign signing UI.
        type: string
      email:
        description: The recipient's email address.
        type: string
      formData:
        description: An array of form data objects.
        type: array
        items:
          "$ref": "#/definitions/formDataItem"
      name:
        description: The name of the recipient.
        type: string
      recipientId:
        description:
          Unique for the recipient. It is used by the tab element to indicate
          which recipient is to sign the Document.
        type: string
      SentTime:
        description: The date and time the envelope was sent to the recipient.
        type: string
      SignedTime:
        description: The date and time the recipient signed the documents.
        type: string
    x-ds-definition-name: recipientFormData
    description: ""
    x-ms-summary: ""
  recipientGroup:
    type: object
    properties:
      groupMessage:
        description: The group message, typically a description of the group.
        type: string
      groupName:
        description: The name of the group.
        type: string
      recipients:
        description:
          An array of recipient objects that provides details about the
          recipients of the envelope.
        type: array
        items:
          "$ref": "#/definitions/recipientOption"
    description: Describes a group of recipients.
    x-ds-definition-name: recipientGroup
    x-ms-summary: Describes a group of recipients.
  recipientIdentityInputOption:
    type: object
    properties:
      name:
        description: ""
        type: string
      phoneNumberList:
        description: ""
        type: array
        items:
          "$ref": "#/definitions/recipientIdentityPhoneNumber"
      valueType:
        description: ""
        type: string
    x-ds-definition-name: recipientIdentityInputOption
    description: ""
    x-ms-summary: ""
  recipientIdentityPhoneNumber:
    type: object
    properties:
      countryCode:
        description: |-
          The numeric country calling code for the phone number. For example, the country calling code for the US and Canada is 1. For the UK, the country calling code is 44.

          Do not include the + symbol.
        type: string
      countryCodeLock:
        description: ""
        type: string
      countryCodeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates if the `countryCode` property is editable.
      extension:
        description: The telephone extension, if any.
        type: string
      extensionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates if the `extension` property is editable.
      number:
        description: |-
          The telephone number. Use only the digits `0`-`9`. Remove any non-numeric characters.

          Do not include the `countryCode`. For US, Canada, and other
          [North American Numbering Plan](https://en.wikipedia.org/wiki/North_American_Numbering_Plan) countries, do not include a leading `1` or `0`.
        type: string
      numberMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates if the `number` property is editable.
    x-ds-definition-name: recipientIdentityPhoneNumber
    description: ""
    x-ms-summary: ""
  recipientIdentityVerification:
    type: object
    properties:
      inputOptions:
        description: ""
        type: array
        items:
          "$ref": "#/definitions/recipientIdentityInputOption"
      workflowId:
        description: |-
          ID of the Identity Verification worklow used to verify recipients' identity.

          This ID must match one of the [workflowId](/docs/esign-rest-api/reference/accounts/identityverifications/list/) available to your account.
        type: string
      workflowIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: ""
      workflowLabel:
        description: ""
        type: string
    description: |-
      Specifies ID Verification applied on an envelope by workflow ID.
      See the [list](/docs/esign-rest-api/reference/accounts/identityverifications/list/)
      method in the [IdentityVerifications](/docs/esign-rest-api/reference/accounts/identityverifications/) resource
      for more information on how to retrieve workflow IDs available for an account.
      This can be used in addition to other [recipient authentication](https://support.docusign.com/s/document-item?bundleId=gav1643676262430&topicId=kzp1578456318101.html) methods.
    x-ds-definition-name: recipientIdentityVerification
    x-ms-summary: |-
      Specifies ID Verification applied on an envelope by workflow ID.
      See the [list](/docs/esign-rest-api/reference/accounts/identityverifications/list/)
      method in the [IdentityVerifications](/docs/esign-rest-api/reference/accounts/identityverifications/) resource
      for more information on how to retrieve workflow IDs available for an account.
      This can be used in addition to other [recipient authentication](https://support.docusign.com/s/document-item?bundleId=gav1643676262430&topicId=kzp1578456318101.html) methods.
  recipientNamesResponse:
    type: object
    properties:
      multipleUsers:
        description: When **true,** the email address is used by more than one user.
        type: string
      recipientNames:
        description: The names of the recipients associated with the email address.
        type: array
        items:
          type: string
      reservedRecipientEmail:
        description: When **true,** new names cannot be added to the email address.
        type: string
    description: This response object contains a list of recipients.
    x-ds-definition-name: recipientNamesResponse
    x-ms-summary: This response object contains a list of recipients.
  recipientOption:
    type: object
    properties:
      email:
        description:
          "The email ID of the agent. This property is required. Maximum
          length: 100 characters."
        type: string
      name:
        description: "The full legal name of the recipient. Maximum length: 100 characters."
        type: string
      recipientLabel:
        description:
          "An identifier for the recipient. After assigning this value
          in a `recipient` object, you can reference it in the `conditions` object
          to set the recipient as a conditional recipient. For an example, see [How
          to use conditional recipients](/docs/esign-rest-api/how-to/use-conditional-recipients/).

          "
        type: string
      roleName:
        description:
          Specifies the signing group role of the recipient. This property
          is required.
        type: string
      signingGroupId:
        description:
          "The ID of the [signing group](https://support.docusign.com/s/document-item?bundleId=gav1643676262430&topicId=zgn1578456447934.html).

          "
        type: string
    description: Describes a recipient who is a member of a conditional group.
    x-ds-definition-name: recipientOption
    x-ms-summary: Describes a recipient who is a member of a conditional group.
  recipientPhoneAuthentication:
    description: |-
      A complex type that contains the elements:

      * `recipMayProvideNumber`: A Boolean value that specifies whether the recipient can use the phone number of their choice.
      * `senderProvidedNumbers`: A list of phone numbers that the recipient can use.
      * `recordVoicePrint`: Reserved for DocuSign.
      * `validateRecipProvidedNumber`: Reserved for DocuSign.
    type: object
    properties:
      recipMayProvideNumber:
        description:
          Boolean. When **true,** the recipient can supply a phone number
          their choice.
        type: string
      recipMayProvideNumberMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `recipMayProvideNumber` property
          can be edited.
      recordVoicePrint:
        description: Reserved for DocuSign.
        type: string
      recordVoicePrintMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Reserved for DocuSign.
      senderProvidedNumbers:
        description:
          "An array containing a list of phone numbers that the recipient
          can use for SMS text authentication. "
        type: array
        items:
          type: string
      senderProvidedNumbersMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `senderProvidedNumbers` property
          can be edited.
      validateRecipProvidedNumber:
        description: " Reserved for DocuSign."
        type: string
      validateRecipProvidedNumberMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Reserved for DocuSign.
    x-ds-definition-name: recipientPhoneAuthentication
    x-ms-summary: |-
      A complex type that contains the elements:

      * `recipMayProvideNumber`: A Boolean value that specifies whether the recipient can use the phone number of their choice.
      * `senderProvidedNumbers`: A list of phone numbers that the recipient can use.
      * `recordVoicePrint`: Reserved for DocuSign.
      * `validateRecipProvidedNumber`: Reserved for DocuSign.
  recipientPhoneNumber:
    type: object
    properties:
      countryCode:
        description: |-
          The numeric country calling code for `number`. For example, the country calling code for the US and Canada is `1`, for the UK: `44`,

          Do not include the `+` symbol.
        type: string
      countryCodeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates if the `countryCode` property is editable.
      number:
        description: |-
          The telephone number. Use only the digits `0`-`9`. Remove any non-numeric characters.

          Do not include the `countryCode`. For US, Canada, and other
          [North American Numbering Plan](https://en.wikipedia.org/wiki/North_American_Numbering_Plan) countries, do not include a leading `1` or `0`.
        type: string
      numberMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates if the `number` property is editable.
    description: Describes the recipient phone number.
    x-ds-definition-name: recipientPhoneNumber
    x-ms-summary: Describes the recipient phone number.
  recipientPreviewRequest:
    type: object
    properties:
      assertionId:
        description:
          A unique identifier of the authentication event executed by the
          client application.
        type: string
      authenticationInstant:
        description:
          A sender-generated value that indicates the date and time that
          the signer was authenticated.
        type: string
      authenticationMethod:
        description:
          "Required. Choose a value that most closely matches the technique
          your application used to authenticate the recipient / signer. \n\nChoose
          a value from this list: \n* Biometric \n* Email\n* HTTPBasicAuth\n* Kerberos\n*
          KnowledgeBasedAuth\n* None\n* PaperDocuments\n* Password\n* RSASecureID\n*
          SingleSignOn_CASiteminder\n* SingleSignOn_InfoCard\n* SingleSignOn_MicrosoftActiveDirectory\n*
          SingleSignOn_Other\n* SingleSignOn_Passport\n* SingleSignOn_SAML\n* Smartcard\n*
          SSLMutualAuth\n* X509Certificate\n\nThis information is included in the
          Certificate of Completion."
        type: string
      clientURLs:
        "$ref": "#/definitions/recipientTokenClientURLs"
        description: ""
      pingFrequency:
        description:
          Only used if `pingUrl` is specified. This is the interval, in
          seconds, between pings on the `pingUrl`.  The default is `300` seconds.
          Valid values are 60-1200 seconds.
        type: string
      pingUrl:
        description:
          The client URL that the DocuSign Signing experience should ping
          to indicate to the client that Signing is active. An HTTP GET call is executed
          against the client. The response from the client is ignored. The intent
          is for the client to reset its session timer when the request is received.
        type: string
      recipientId:
        description:
          Unique for the recipient. It is used by the tab element to indicate
          which recipient is to sign the Document.
        type: string
      returnUrl:
        description: This property is not supported.
        type: string
      securityDomain:
        description: The domain in which the user authenticated.
        type: string
      xFrameOptions:
        description: |-
          Specifies whether a browser should be allowed to render a page in a frame or IFrame. Setting this property ensures that your content is not embedded into unauthorized pages or frames.

          Valid values are:

          - `deny`: The page cannot be displayed in a frame.
          - `same_origin`: The page can only be displayed in a frame on the same origin as the page itself.
          - `allow_from`: The page can only be displayed in a frame on the origin specified by the `xFrameOptionsAllowFromUrl` property.
        type: string
      xFrameOptionsAllowFromUrl:
        description:
          When the value of `xFrameOptions` is `allow_from`, this property
          specifies the origin on which the page is allowed to display in a frame.
          If the value of `xFrameOptions` is `allow_from`, you must include a value
          for this property.
        type: string
    description:
      This request object contains the information necessary to create
      a recipient preview.
    x-ds-definition-name: recipientPreviewRequest
    x-ms-summary:
      This request object contains the information necessary to create
      a recipient preview.
  recipientProofFile:
    type: object
    properties:
      hasIdentityAttempts:
        description: ""
        type: string
      isInProofFile:
        description: Indicates whether a proof file is available for this recipient.
        type: string
    description:
      The proof file of the recipient. [ID Evidence](/docs/idevidence-api/)
      uses proof files to store the identification data that recipients submit when
      verifying their ID with [ID Verification](/docs/esign-rest-api/esign101/concepts/documents/)
    x-ds-definition-name: recipientProofFile
    x-ms-summary:
      The proof file of the recipient. [ID Evidence](/docs/idevidence-api/)
      uses proof files to store the identification data that recipients submit when
      verifying their ID with [ID Verification](/docs/esign-rest-api/esign101/concepts/documents/)
  recipientRouting:
    type: object
    properties:
      rules:
        "$ref": "#/definitions/recipientRules"
        description: The recipient routing rules.
    description: Describes the recipient routing rules.
    x-ds-definition-name: recipientRouting
    x-ms-summary: Describes the recipient routing rules.
  recipientRules:
    type: object
    properties:
      conditionalRecipients:
        description: ""
        type: array
        items:
          "$ref": "#/definitions/conditionalRecipientRule"
    x-ds-definition-name: recipientRules
    description: ""
    x-ms-summary: ""
  recipients:
    description: Specifies the envelope recipients.
    type: object
    properties:
      agents:
        description: A list of agent recipients assigned to the documents.
        type: array
        items:
          "$ref": "#/definitions/agent"
      carbonCopies:
        description: A list of carbon copy recipients assigned to the documents.
        type: array
        items:
          "$ref": "#/definitions/carbonCopy"
      certifiedDeliveries:
        description:
          A complex type containing information on a recipient the must
          receive the completed documents for the envelope to be completed, but the
          recipient does not need to sign, initial, date, or add information to any
          of the documents.
        type: array
        items:
          "$ref": "#/definitions/certifiedDelivery"
      currentRoutingOrder:
        description:
          The routing order of the current recipient. If this value equals
          a particular signer's routing order, it indicates that the envelope has
          been sent to that recipient, but he or she has not completed the required
          actions.
        type: string
      editors:
        description: A list of users who can edit the envelope.
        type: array
        items:
          "$ref": "#/definitions/editor"
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      inPersonSigners:
        description:
          Specifies a signer that is in the same physical location as a
          DocuSign user who will act as a Signing Host for the transaction. The recipient
          added is the Signing Host and new separate Signer Name field appears after
          Sign in person is selected.
        type: array
        items:
          "$ref": "#/definitions/inPersonSigner"
      intermediaries:
        description:
          Identifies a recipient that can, but is not required to, add
          name and email information for recipients at the same or subsequent level
          in the routing order (until subsequent Agents, Editors or Intermediaries
          recipient types are added).
        type: array
        items:
          "$ref": "#/definitions/intermediary"
      notaries:
        description: A list of notary recipients on the envelope.
        type: array
        items:
          "$ref": "#/definitions/notaryRecipient"
      participants:
        description: ""
        type: array
        items:
          "$ref": "#/definitions/participant"
      recipientCount:
        description: The number of recipients in the envelope.
        type: string
      seals:
        description: A list of electronic seals to apply to documents.
        type: array
        items:
          "$ref": "#/definitions/sealSign"
      signers:
        description: A list of signers on the envelope.
        type: array
        items:
          "$ref": "#/definitions/signer"
      witnesses:
        description: A list of signers who act as witnesses on the envelope.
        type: array
        items:
          "$ref": "#/definitions/witness"
    x-ds-definition-name: recipients
    x-ms-summary: Specifies the envelope recipients.
  recipientSignatureInformation:
    description: |-
      Allows the sender to pre-specify the signature name, signature initials and signature font used in the signature stamp for the recipient.

      Used only with recipient types In Person Signers and Signers.
    type: object
    properties:
      fontStyle:
        description: |
          The font type to use for the signature if the signature is not drawn. The following font styles  are supported. The quotes are to indicate that these values are strings, not `enums`.

          - `"1_DocuSign"`
          - `"2_DocuSign"`
          - `"3_DocuSign"`
          - `"4_DocuSign"`
          - `"5_DocuSign"`
          - `"6_DocuSign"`
          - `"7_DocuSign"`
          - `"8_DocuSign"`
          - `"Mistral"`
          - `"Rage Italic"`
        type: string
      signatureInitials:
        description: Specifies the user's signature in initials format.
        type: string
      signatureName:
        description: Specifies the user's signature name.
        type: string
    x-ds-definition-name: recipientSignatureInformation
    x-ms-summary: |-
      Allows the sender to pre-specify the signature name, signature initials and signature font used in the signature stamp for the recipient.

      Used only with recipient types In Person Signers and Signers.
  recipientSignatureProvider:
    type: object
    properties:
      sealDocumentsWithTabsOnly:
        description:
          "By default, electronic seals apply on all documents in an envelope.
          If any of the documents has a `signHere` tab, then a visual representation
          of the electronic seal will show up in the final document. If not, the electronic
          seal will be visible in the metadata but not in the content of the document.\n\nTo
          apply electronic seals on specific documents only, you must enable the  `sealDocumentsWithTabsOnly`
          parameter. In this case, Electronic Seal applies only on documents that
          have `signHere` tabs set for the Electronic Seal recipient. Other documents
          won't be sealed. "
        type: string
      sealName:
        description:
          "Indicates the name of the electronic seal to apply on documents.

          "
        type: string
      signatureProviderName:
        description: |+
          The name of an Electronic or Standards Based Signature (digital signature) provider for the signer to use. For details, see [the current provider list](/docs/esign-rest-api/esign101/concepts/standards-based-signatures/). You can also retrieve the list by using the [AccountSignatureProviders: List](/docs/esign-rest-api/reference/accounts/accountsignatureproviders/list/) method.

          Example: `universalsignaturepen_default`

        type: string
      signatureProviderNameMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          "Metadata that indicates whether the `signatureProviderName`
          property is editable.

          "
      signatureProviderOptions:
        "$ref": "#/definitions/recipientSignatureProviderOptions"
        description: Not applicable for this object.
    description:
      "An Electronic or Standards Based Signature (digital signature) provider
      for the signer to use. [More information](/docs/esign-rest-api/esign101/concepts/standards-based-signatures/).

      "
    x-ds-definition-name: recipientSignatureProvider
    x-ms-summary:
      "An Electronic or Standards Based Signature (digital signature)
      provider for the signer to use. [More information](/docs/esign-rest-api/esign101/concepts/standards-based-signatures/).

      "
  recipientSignatureProviderOptions:
    type: object
    properties:
      cpfNumber:
        description: Reserved for DocuSign.
        type: string
      cpfNumberMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Reserved for DocuSign.
      oneTimePassword:
        description:
          "A pre-shared secret that the signer must enter to complete the
          signing process. Eg last six digits of the signer's government ID or Social
          Security number. Or a newly created pre-shared secret for the transaction.
          Note: some signature providers may require an exact (case-sensitive) match
          if alphabetic characters are included in the field."
        type: string
      oneTimePasswordMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `oneTimePassword` property
          is editable.
      signerRole:
        description:
          "The role or capacity of the signing recipient. Examples: Manager,
          Approver, etc."
        type: string
      signerRoleMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `signerRole` property is
          editable.
      sms:
        description:
          "The mobile phone number used to send the recipient an access
          code for the signing ceremony. Format: a string starting with +, then the
          country code followed by the full mobile phone number without any spaces
          or special characters. Omit leading zeroes before a city code. Examples:
          +14155551234, +97235551234, +33505551234."
        type: string
      smsMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `sms` property is editable.
    description:
      Option settings for the signature provider. Different providers require
      or use different options. [The current provider list and the options they require.](/docs/esign-rest-api/esign101/concepts/standards-based-signatures/)
    x-ds-definition-name: recipientSignatureProviderOptions
    x-ms-summary:
      Option settings for the signature provider. Different providers
      require or use different options. [The current provider list and the options
      they require.](/docs/esign-rest-api/esign101/concepts/standards-based-signatures/)
  recipientSMSAuthentication:
    description:
      Contains the element senderProvidedNumbers which is an Array  of
      phone numbers the recipient can use for SMS text authentication.
    type: object
    properties:
      senderProvidedNumbers:
        description:
          "An array containing a list of phone numbers that the recipient
          can use for SMS text authentication. "
        type: array
        items:
          type: string
      senderProvidedNumbersMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `senderProvidedNumbers` property
          can be edited.
    x-ds-definition-name: recipientSMSAuthentication
    x-ms-summary:
      Contains the element senderProvidedNumbers which is an Array  of
      phone numbers the recipient can use for SMS text authentication.
  recipientsUpdateSummary:
    type: object
    properties:
      recipientUpdateResults:
        description:
          An array of `recipientUpdateResults` objects that contain details
          about the recipients.
        type: array
        items:
          "$ref": "#/definitions/recipientUpdateResponse"
    description: This is the response that the API returns after you update recipients.
    x-ds-definition-name: recipientsUpdateSummary
    x-ms-summary: This is the response that the API returns after you update recipients.
  recipientTokenClientURLs:
    type: object
    properties:
      onAccessCodeFailed:
        description: ""
        type: string
      onCancel:
        description: ""
        type: string
      onDecline:
        description: ""
        type: string
      onException:
        description: ""
        type: string
      onFaxPending:
        description: ""
        type: string
      onIdCheckFailed:
        description: ""
        type: string
      onSessionTimeout:
        description: ""
        type: string
      onSigningComplete:
        description: ""
        type: string
      onTTLExpired:
        description: ""
        type: string
      onViewingComplete:
        description: ""
        type: string
    x-ds-definition-name: recipientTokenClientURLs
    description: ""
    x-ms-summary: ""
  recipientUpdateResponse:
    type: object
    properties:
      combined:
        description:
          When you use the query parameter `combine_same_order_recipients`
          on the PUT Recipients call, the `recipientUpdateResponse` returns this property.
          When **true,** it indicates that the recipient has been combined or merged
          with a matching recipient. Recipient matching occurs as part of template
          matching, and is based on Recipient Role and Routing Order.
        type: string
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      recipientId:
        description:
          Unique for the recipient. It is used by the tab element to indicate
          which recipient is to sign the Document.
        type: string
      recipientIdGuid:
        description:
          The globally-unique identifier (GUID) for a specific recipient
          on a specific envelope. If the same recipient is associated with multiple
          envelopes, they will have a different GUID for each one. This property is
          read-only.
        type: string
      tabs:
        "$ref": "#/definitions/EnvelopeRecipientTabs"
        description: All of the tabs associated with the recipient.
    description: The recipient details that are returned after you update the recipient.
    x-ds-definition-name: recipientUpdateResponse
    x-ms-summary: The recipient details that are returned after you update the recipient.
  recipientViewRequest:
    type: object
    properties:
      assertionId:
        description:
          A unique identifier of the authentication event executed by the
          client application.
        type: string
      authenticationInstant:
        description:
          A sender-generated value that indicates the date and time that
          the signer was authenticated.
        type: string
      authenticationMethod:
        description:
          "Required. Choose a value that most closely matches the technique
          your application used to authenticate the recipient / signer. \n\nChoose
          a value from this list: \n* Biometric \n* Email\n* HTTPBasicAuth\n* Kerberos\n*
          KnowledgeBasedAuth\n* None\n* PaperDocuments\n* Password\n* RSASecureID\n*
          SingleSignOn_CASiteminder\n* SingleSignOn_InfoCard\n* SingleSignOn_MicrosoftActiveDirectory\n*
          SingleSignOn_Other\n* SingleSignOn_Passport\n* SingleSignOn_SAML\n* Smartcard\n*
          SSLMutualAuth\n* X509Certificate\n\nThis information is included in the
          Certificate of Completion."
        type: string
      clientURLs:
        "$ref": "#/definitions/recipientTokenClientURLs"
        description: ""
      clientUserId:
        description: |-
          A sender-created value. If provided, the recipient is treated as an embedded (captive) recipient or signer.

          Use your application's client ID (user ID) for the recipient. Doing so enables the details of your application's authentication of the recipient to be connected to the recipient's signature if the signature is disputed or repudiated.

          Maximum length: 100 characters.
        type: string
      email:
        description:
          "(Required) Specifies the email of the recipient. You can use
          either `email` and `userName` or `userId` to identify the recipient."
        type: string
      frameAncestors:
        description: ""
        type: array
        items:
          type: string
      messageOrigins:
        description: ""
        type: array
        items:
          type: string
      pingFrequency:
        description:
          Only used if `pingUrl` is specified. This is the interval, in
          seconds, between pings on the `pingUrl`.  The default is `300` seconds.
          Valid values are 60-1200 seconds.
        type: string
      pingUrl:
        description:
          The client URL that the DocuSign Signing experience should ping
          to indicate to the client that Signing is active. An HTTP GET call is executed
          against the client. The response from the client is ignored. The intent
          is for the client to reset its session timer when the request is received.
        type: string
      recipientId:
        description:
          Unique for the recipient. It is used by the tab element to indicate
          which recipient is to sign the Document.
        type: string
      returnUrl:
        description: |+
          (Required) The URL to which the user should be redirected
          after the signing session has ended.

          Maximum Length: 470 characters. If the `returnUrl` exceeds this
          limit, the user is redirected to a truncated URL
          Be sure to include `https://` in the URL
          or redirecting might fail on some browsers.


          When DocuSign redirects to
          this URL, it will include an `event` query parameter that your app can use:

          * `access_code_failed`: Recipient used incorrect access code.
          * `cancel`: Recipient canceled the signing operation,
            possibly by using the **Finish Later** option.
          * `decline`: Recipient declined to sign.
          * `exception`: A system error occurred during the signing process.
          * `fax_pending`: Recipient has a fax pending.
          * `id_check_failed`: Recipient failed an ID check.
          * `session_timeout`: The session timed out. An account can control this timeout by using the **Signer Session Timeout** option.
          * `signing_complete`: The recipient completed the signing ceremony.
          * `ttl_expired`: The Time To Live token for the envelope has expired.
            After being successfully invoked, these tokens expire
            after five minutes.
          * `viewing_complete`: The recipient completed viewing an envelope
            that is in a read-only/terminal state,
            such as completed, declined, or voided.

        type: string
      securityDomain:
        description: The domain in which the user authenticated.
        type: string
      userId:
        description:
          "The user ID of the recipient. You can use either the user ID
          or email and user name to identify the recipient. \n\nIf `userId` is used
          and a `clientUserId` is provided, the value in the `userId` property must
          match a `recipientId` (which you can retrieve with a GET recipients call)
          for the envelope. \n\nIf a `userId` is used and a `clientUserId` is not
          provided, the `userId` must match the user ID of the authenticating user."
        type: string
      userName:
        description:
          The username of the recipient. You can use either `email` and
          `userName` or `userId` to identify the recipient.
        type: string
      xFrameOptions:
        description: |-
          Specifies whether a browser should be allowed to render a page in a frame or IFrame. Setting this property ensures that your content is not embedded into unauthorized pages or frames.

          Valid values are:

          - `deny`: The page cannot be displayed in a frame.
          - `same_origin`: The page can only be displayed in a frame on the same origin as the page itself.
          - `allow_from`: The page can only be displayed in a frame on the origin specified by the `xFrameOptionsAllowFromUrl` property.
        type: string
      xFrameOptionsAllowFromUrl:
        description:
          When the value of `xFrameOptions` is `allow_from`, this property
          specifies the origin on which the page is allowed to display in a frame.
          If the value of `xFrameOptions` is `allow_from`, you must include a value
          for this property.
        type: string
    description: |-
      The request body for the [EnvelopeViews: createRecipient](/docs/esign-rest-api/reference/envelopes/envelopeviews/createrecipient/)
      and
      [EnvelopeViews: createSharedRecipient](/docs/esign-rest-api/reference/envelopes/envelopeviews/createsharedrecipient/) methods.
    x-ds-definition-name: recipientViewRequest
    x-ms-summary: |-
      The request body for the [EnvelopeViews: createRecipient](/docs/esign-rest-api/reference/envelopes/envelopeviews/createrecipient/)
      and
      [EnvelopeViews: createSharedRecipient](/docs/esign-rest-api/reference/envelopes/envelopeviews/createsharedrecipient/) methods.
  referralInformation:
    description: |-
      A complex type that contains the following information for entering referral and discount information. The following items are included in the referral information (all string content): enableSupport, includedSeats, saleDiscountPercent, saleDiscountAmount, saleDiscountFixedAmount, saleDiscountPeriods, saleDiscountSeatPriceOverride, planStartMonth, referralCode, referrerName, advertisementId, publisherId, shopperId, promoCode, groupMemberId, idType, and industry

      **Note:** saleDiscountPercent, saleDiscountAmount, saleDiscountFixedAmount, saleDiscountPeriods, and saleDiscountSeatPriceOverride are reserved for DocuSign use only.
    type: object
    properties:
      advertisementId:
        description: |
          A complex type that contains the following information for entering referral and discount information. The following items are included in the referral information (all string content): enableSupport, includedSeats, saleDiscountPercent, saleDiscountAmount, saleDiscountFixedAmount, saleDiscountPeriods, saleDiscountSeatPriceOverride, planStartMonth, referralCode, referrerName, advertisementId, publisherId, shopperId, promoCode, groupMemberId, idType, and industry.

          **Note:** saleDiscountPercent, saleDiscountAmount, saleDiscountFixedAmount, saleDiscountPeriods, and saleDiscountSeatPriceOverride are reserved for DocuSign use only.
        type: string
      enableSupport:
        description:
          When **true,** customer support is provided as part of the account
          plan.
        type: string
      externalOrgId:
        description: An optional external ID for the referral.
        type: string
      groupMemberId:
        description: ""
        type: string
      idType:
        description: ""
        type: string
      includedSeats:
        description: The number of seats (users) included in the plan.
        type: string
      industry:
        description:
          "The name of the industry associated with the referral. \n\nExample:
          `Accounting`"
        type: string
      planStartMonth:
        description: ""
        type: string
      promoCode:
        description: ""
        type: string
      publisherId:
        description: ""
        type: string
      referralCode:
        description: ""
        type: string
      referrerName:
        description: The name of the referrer.
        type: string
      saleDiscountAmount:
        description: Reserved for DocuSign.
        type: string
      saleDiscountFixedAmount:
        description: Reserved for DocuSign.
        type: string
      saleDiscountPercent:
        description: Reserved for DocuSign.
        type: string
      saleDiscountPeriods:
        description: Reserved for DocuSign.
        type: string
      saleDiscountSeatPriceOverride:
        description: Reserved for DocuSign.
        type: string
      shopperId:
        description: ""
        type: string
    x-ds-definition-name: referralInformation
    x-ms-summary: |-
      A complex type that contains the following information for entering referral and discount information. The following items are included in the referral information (all string content): enableSupport, includedSeats, saleDiscountPercent, saleDiscountAmount, saleDiscountFixedAmount, saleDiscountPeriods, saleDiscountSeatPriceOverride, planStartMonth, referralCode, referrerName, advertisementId, publisherId, shopperId, promoCode, groupMemberId, idType, and industry

      **Note:** saleDiscountPercent, saleDiscountAmount, saleDiscountFixedAmount, saleDiscountPeriods, and saleDiscountSeatPriceOverride are reserved for DocuSign use only.
  reminders:
    description: A complex element that specifies reminder settings for the envelope.
    type: object
    properties:
      reminderDelay:
        description:
          An integer specifying the number of days after the recipient
          receives the envelope that reminder emails are sent to the recipient. The
          default value is 0.
        type: string
      reminderEnabled:
        description: When **true,** reminders are enabled. The default value is **false.**
        type: string
      reminderFrequency:
        description:
          An integer specifying the interval in days between reminder emails.
          The default value is 0.
        type: string
    x-ds-definition-name: reminders
    x-ms-summary: A complex element that specifies reminder settings for the envelope.
  resourceInformation:
    type: object
    properties:
      resources:
        description: ""
        type: array
        items:
          "$ref": "#/definitions/nameValue"
    x-ds-definition-name: resourceInformation
    description: ""
    x-ms-summary: ""
  returnUrlRequest:
    type: object
    properties:
      returnUrl:
        description: |
          The URL to which the user should be redirected after the editing session is complete. It must be an absolute URL (e.g. `https://www.example.com` not `www.example.com`).

          The maximum length is 470 characters. If the value exceeds this limit, the user is redirected to a truncated URL.

          **Note:** If this property is not provided, the user will have full access to the sending account.
        type: string
    description:
      "The request body for the [TemplateViews: createEdit](/docs/esign-rest-api/reference/templates/templateviews/createedit/)
      method."
    x-ds-definition-name: returnUrlRequest
    x-ms-summary:
      "The request body for the [TemplateViews: createEdit](/docs/esign-rest-api/reference/templates/templateviews/createedit/)
      method."
  scheduledSending:
    type: object
    properties:
      bulkListId:
        description:
          The ID of the bulk list. Set this optional value to use scheduled
          sending with a bulk send operation.
        type: string
      resumeDate:
        description: |
          The timestamp of when the envelope is scheduled to be sent in ISO 8601 format.

          This property is read-only.
        type: string
      rules:
        description:
          User-specified rules indicating how and when the envelope should
          be scheduled for sending. Only one rule may be specified.
        type: array
        items:
          "$ref": "#/definitions/envelopeDelayRule"
      status:
        description: |-
          Status of the scheduled sending job. Valid values:

          * `pending`: The envelope has not yet been sent and the scheduled sending delay has not been initiated.
          * `started`: The sender has initiated the sending process. The delay has not elapsed, so the envelope has not yet been sent to the first recipient.
          * `completed`: The delay has elapsed and the envelope has been sent to the first recipient.

          This property is read-only.
        type: string
    x-ds-definition-name: scheduledSending
    description:
      A complex element that specifies the scheduled sending settings for
      the envelope.
    x-ms-summary:
      A complex element that specifies the scheduled sending settings
      for the envelope.
  sealIdentifier:
    type: object
    properties:
      sealDisplayName:
        description: The user-friendly display name for a seal.
        type: string
      sealName:
        description: The name of a seal.
        type: string
    x-ds-definition-name: sealIdentifier
    description: ""
    x-ms-summary: ""
  sealSign:
    type: object
    properties:
      accessCode:
        description: Not applicable.
        type: string
      accessCodeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Not applicable.
      addAccessCodeToEmail:
        description: Not applicable.
        type: string
      allowSystemOverrideForLockedRecipient:
        description:
          When **true,** if the recipient is locked on a template, advanced
          recipient routing can override the lock.
        type: string
      autoRespondedReason:
        description:
          "Error message provided by the destination email system. This
          field is only provided if the email notification to the recipient fails
          to send. This property is read-only.

          "
        type: string
      bulkSendV2Recipient:
        description: ""
        type: string
      clientUserId:
        description: Not applicable.
        type: string
      completedCount:
        description: Not applicable.
        type: string
      customFields:
        description: Not applicable.
        type: array
        items:
          type: string
      declinedDateTime:
        description: Not applicable.
        type: string
      declinedReason:
        description: Not applicable.
        type: string
      deliveredDateTime:
        description: Not applicable.
        type: string
      deliveryMethod:
        description: |-
          The delivery method. One of:

          - `email`
          - `fax`
          - `SMS`
          - `WhatsApp`
          - `offline`

          The `SMS` and `WhatsApp` delivery methods
          are limited to `signer`, `carbonCopy`, and `certifiedDelivery`
          recipients.

          **Related topics**

          - [Using SMS delivery with the eSignature API][smsconcept]
          - [How to request a signature by SMS delivery][howto]

          [smsconcept]: /docs/esign-rest-api/esign101/concepts/sms-delivery/using-sms-esignature/
          [howto]: /docs/esign-rest-api/how-to/request-signature-sms/
        type: string
      deliveryMethodMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Reserved for DocuSign.
      designatorId:
        description: Reserved for DocuSign.
        type: string
      designatorIdGuid:
        description: Reserved for DocuSign.
        type: string
      documentVisibility:
        description: Not applicable.
        type: array
        items:
          "$ref": "#/definitions/documentVisibility"
      emailNotification:
        "$ref": "#/definitions/recipientEmailNotification"
        description: Not applicable.
      embeddedRecipientStartURL:
        description: Not applicable.
        type: string
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      faxNumber:
        description: Reserved for DocuSign.
        type: string
      faxNumberMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Reserved for DocuSign.
      idCheckConfigurationName:
        description: Not applicable.
        type: string
      idCheckConfigurationNameMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Not applicable.
      idCheckInformationInput:
        "$ref": "#/definitions/idCheckInformationInput"
        description: Not applicable.
      identityVerification:
        "$ref": "#/definitions/recipientIdentityVerification"
        description:
          Specifies the ID Verification workflow applied on an envelope
          by workflow ID. <br/>See the [list](/docs/esign-rest-api/reference/accounts/identityverifications/list/)
          method in the [IdentityVerifications](/docs/esign-rest-api/reference/accounts/identityverifications/)
          resource for more information on how to retrieve workflow IDs available
          for an account. <br/>This can be used in addition to other [recipient authentication](https://support.docusign.com/s/document-item?bundleId=gav1643676262430&topicId=kzp1578456318101.html)
          methods. <br/>Note that ID Verification and ID Check are two distinct methods.
          ID Verification checks recipients' identity by verifying their ID while
          ID Check relies on data available on public records (such as current and
          former address).
      inheritEmailNotificationConfiguration:
        description: Not applicable.
        type: string
      lockedRecipientPhoneAuthEditable:
        description: Reserved for DocuSign.
        type: string
      lockedRecipientSmsEditable:
        description: Reserved for DocuSign.
        type: string
      name:
        description: Not applicable.
        type: string
      note:
        description: Not applicable.
        type: string
      noteMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Not applicable.
      phoneAuthentication:
        "$ref": "#/definitions/recipientPhoneAuthentication"
        description: Not applicable.
      recipientAttachments:
        description: Not applicable.
        type: array
        items:
          "$ref": "#/definitions/recipientAttachment"
      recipientAuthenticationStatus:
        "$ref": "#/definitions/authenticationStatus"
        description: Not applicable.
      recipientFeatureMetadata:
        description:
          Metadata about the features that are supported for the recipient
          type. This property is read-only.
        type: array
        items:
          "$ref": "#/definitions/featureAvailableMetadata"
      recipientId:
        description:
          Unique for the recipient. It is used by the tab element to indicate
          which recipient is to sign the Document.
        type: string
      recipientIdGuid:
        description:
          The globally-unique identifier (GUID) for a specific recipient
          on a specific envelope. If the same recipient is associated with multiple
          envelopes, they will have a different GUID for each one. This property is
          read-only.
        type: string
      recipientSignatureProviders:
        description:
          "(Required) Indicates which electronic seal to apply on documents
          when creating an envelope."
        type: array
        items:
          "$ref": "#/definitions/recipientSignatureProvider"
      recipientType:
        description: |-
          The recipient type, as specified by the following values:
          - `agent`: Agent recipients can add name and email information for recipients that appear after the agent in routing order.
          - `carbonCopy`: Carbon copy recipients get a copy of the envelope but don't need to sign, initial, date, or add information to any of the documents. This type of recipient can be used in any routing order.
          - `certifiedDelivery`: Certified delivery recipients must receive the completed documents for the envelope to be completed. They don't need to sign, initial, date, or add information to any of the documents.
          - `editor`: Editors have the same management and access rights for the envelope as the sender. Editors can add name and email information, add or change the routing order, set authentication options, and can edit signature/initial tabs and data fields for the remaining recipients.
          - `inPersonSigner`: In-person recipients are DocuSign users who act as signing hosts in the same physical location as the signer.
          - `intermediaries`: Intermediary recipients can optionally add name and email information for recipients at the same or subsequent level in the routing order.
          - `seal`: Electronic seal recipients represent legal entities.
          - `signer`: Signers are recipients who must sign, initial, date, or add data to form fields on the documents in the envelope.
          - `witness`: Witnesses are recipients whose signatures affirm that the identified signers have signed the documents in the envelope.
        type: string
      recipientTypeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `recipientType` property
          is editable. This property is read-only.
      requireIdLookup:
        description: Not applicable.
        type: string
      requireIdLookupMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Not applicable.
      roleName:
        description:
          Optional element. Specifies the role name associated with the
          recipient.<br/><br/>This property is required when you are working with
          template recipients.
        type: string
      routingOrder:
        description:
          "(Optional, default: 1) \nSpecifies the routing order of the
          electronic seal in the envelope.\nThe routing order assigned to your electronic
          seal cannot be shared with another recipient.\nIt is recommended that you
          set a routing order for your electronic seals.\n"
        type: string
      routingOrderMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `routingOrder` property is
          editable. This property is read-only.
      sentDateTime:
        description: Not applicable.
        type: string
      signedDateTime:
        description: Not applicable.
        type: string
      smsAuthentication:
        "$ref": "#/definitions/recipientSMSAuthentication"
        description: Not applicable.
      socialAuthentications:
        description: Deprecated.
        type: array
        items:
          "$ref": "#/definitions/socialAuthentication"
      status:
        description:
          "The recipient's status. This property is read-only. \n\nValid
          values:\n\n- `autoresponded`: The recipient's email system auto-responded
          to the email from DocuSign. This status is used in the web console to inform
          senders about the bounced-back email. This recipient status is only used
          if **Send-on-behalf-of** is turned off for the account.\n- `completed`:
          The recipient has completed their actions (signing or other required actions
          if not a signer) for an envelope.\n- `created`: The recipient is in a draft
          state. This value is only associated with draft envelopes (envelopes that
          have a status of `created`).\n- `declined`: The recipient declined to sign
          the documents in the envelope.\n- `delivered`: The recipient has viewed
          the documents in an envelope through the DocuSign signing website. This
          is not an email delivery of the documents in an envelope.\n- `faxPending`:
          The recipient has finished signing and the system is waiting for a fax attachment
          from the recipient before completing their signing step.\n- `sent`: The
          recipient has been sent an email notification that it is their turn to sign
          an envelope.\n- `signed`: The recipient has completed (signed) all required
          tags in an envelope. This is a temporary state during processing, after
          which the recipient's status automatically switches to `completed`."
        type: string
      statusCode:
        description:
          The code associated with the recipient's status. This property
          is read-only.
        type: string
      suppressEmails:
        description: Not applicable.
        type: string
      tabs:
        "$ref": "#/definitions/EnvelopeRecipientTabs"
        description:
          A list of tabs, which are represented graphically as symbols
          on documents at the time of signing. Tabs show recipients where to sign,
          initial, or enter data. They may also display data to the recipients.
      templateLocked:
        description:
          "When **true,** the sender cannot change any attributes of the
          recipient. Used only when working with template recipients. "
        type: string
      templateRequired:
        description:
          When **true,** the sender may not remove the recipient. Used
          only when working with template recipients.
        type: string
      totalTabCount:
        description: Not applicable.
        type: string
      userId:
        description: Not applicable.
        type: string
    description: |
      Specifies one or more electronic seals to apply on documents. An electronic seal recipient is a legal entity rather than an actual person. Electronic Seals can be used by organizations and governments to show evidence of origin and integrity of documents. Even though electronic seals can be represented by a tab in a document, they do not require user interaction and apply automatically in the order specified by the sender. The sender is therefore the person authorizing usage of the electronic seal in the flow.

      Example:

      ```json
      "recipients": {
            "seals": [
              {
                "recipientId": "1",
                "routingOrder" : 1,
                "recipientSignatureProviders": [
                  {
                    "sealName": "52e9d968-xxxx-xxxx-xxxx-4682bc45c106"
                  }
              ]
            }
          ]
        },
          .
          .
          .
      ```
      For more information about Electronic Seals, see [Apply Electronic Seals to Your Documents](https://support.docusign.com/s/document-item?bundleId=xcm1643837555908&topicId=isl1578456577247.html).
    x-ds-definition-name: sealSign
    x-ms-summary: |
      Specifies one or more electronic seals to apply on documents. An electronic seal recipient is a legal entity rather than an actual person. Electronic Seals can be used by organizations and governments to show evidence of origin and integrity of documents. Even though electronic seals can be represented by a tab in a document, they do not require user interaction and apply automatically in the order specified by the sender. The sender is therefore the person authorizing usage of the electronic seal in the flow.

      Example:

      ```json
      "recipients": {
            "seals": [
              {
                "recipientId": "1",
                "routingOrder" : 1,
                "recipientSignatureProviders": [
                  {
                    "sealName": "52e9d968-xxxx-xxxx-xxxx-4682bc45c106"
                  }
              ]
            }
          ]
        },
          .
          .
          .
      ```
      For more information about Electronic Seals, see [Apply Electronic Seals to Your Documents](https://support.docusign.com/s/document-item?bundleId=xcm1643837555908&topicId=isl1578456577247.html).
  seatDiscount:
    type: object
    properties:
      beginSeatCount:
        description: Reserved for DocuSign.
        type: string
      discountPercent:
        description: "The percent of the discount. \n\nExample: `\"0.00\"`"
        type: string
      endSeatCount:
        description: Reserved for DocuSign.
        type: string
    description: This object contains information about a seat discount.
    x-ds-definition-name: seatDiscount
    x-ms-summary: This object contains information about a seat discount.
  senderCompany:
    type: object
    properties:
      anchorAllowWhiteSpaceInCharacters:
        description: |
          When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.

          First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.

          Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.

          The default value is **true.**
        type: string
      anchorAllowWhiteSpaceInCharactersMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorAllowWhiteSpaceInCharacters`
          property is editable.
      anchorCaseSensitive:
        description: |-
          This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**

          For example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.

          This functionality uses the following rules:

          - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:

            $~><|^+=

            For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`

          - Strings embedded in other strings are ignored during the matching process.

          - In words that have dashes, the parts separated by dashes are treated as distinct words.

            Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**

          - Letters with accent marks are treated as distinct characters from their unaccented counterparts.

          - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.

            Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.

          - Unlike punctuation, numbers are not ignored when finding anchor words.

            Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).

          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorCaseSensitiveMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorCaseSensitive` property
          is editable.
      anchorHorizontalAlignment:
        description: |
          This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :

          - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.
          - `right`: Aligns the tab’s left side with the last character of the matching anchor word.

          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorHorizontalAlignmentMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorHorizontalAlignment`
          property is editable.
      anchorIgnoreIfNotPresent:
        description:
          When **true,** this tab is ignored if the `anchorString` is not
          found in the document.
        type: string
      anchorIgnoreIfNotPresentMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorIgnoreIfNotPresent`
          property is editable.
      anchorMatchWholeWord:
        description: |
          When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**

          For example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.

          This functionality uses the following rules:

          - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:

            $~><|^+=

            For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`

          - Strings embedded in other strings are ignored during the matching process.

          - In words that have dashes, the parts separated by dashes are treated as distinct words.

            Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**

          - Letters with accent marks are treated as distinct characters from their unaccented counterparts.

          - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.

            Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.

          - Unlike punctuation, numbers are not ignored when finding anchor words.

            Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).


          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorMatchWholeWordMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorMatchWholeWord` property
          is editable.
      anchorString:
        description:
          Specifies the string to find in the document and use as the basis
          for tab placement.
        type: string
      anchorStringMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorString` property is
          editable.
      anchorTabProcessorVersion:
        description: Reserved for DocuSign.
        type: string
      anchorTabProcessorVersionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Reserved for DocuSign.
      anchorUnits:
        description: |
          Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:

          - `pixels` (default)
          - `inches`
          - `mms`
          - `cms`
        type: string
      anchorUnitsMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorUnits` property is
          editable.
      anchorXOffset:
        description:
          "Specifies the X axis location of the tab in `anchorUnits` relative
          to the `anchorString`.

          "
        type: string
      anchorXOffsetMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorXOffset` property
          is editable.
      anchorYOffset:
        description:
          "Specifies the Y axis location of the tab in `anchorUnits` relative
          to the `anchorString`.

          "
        type: string
      anchorYOffsetMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorYOffset` property
          is editable.
      bold:
        description: When **true,** the information in the tab is bold.
        type: string
      boldMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `bold` property is editable.
      caption:
        description: ""
        type: string
      captionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `caption` property is editable.
      conditionalParentLabel:
        description:
          For conditional fields this is the `tabLabel` of the parent tab
          that controls this tab's visibility.
        type: string
      conditionalParentLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `conditionalParentLabel`
          property is editable.
      conditionalParentValue:
        description: |
          For conditional fields, this is the value of the parent tab that controls the tab's visibility.

          If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use "on" as the value to show that the parent tab is active.
        type: string
      conditionalParentValueMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `conditionalParentValue`
          property is editable.
      customTabId:
        description:
          The DocuSign generated custom tab ID for the custom tab to be
          applied. This can only be used when adding new tabs for a recipient. When
          used, the new tab inherits all the custom tab properties.
        type: string
      customTabIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `customTabId` property is
          editable.
      documentId:
        description:
          Specifies the document ID number that the tab is placed on. This
          must refer to an existing Document's ID attribute.
        type: string
      documentIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `documentId` property is
          editable.
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      font:
        description: |
          The font to be used for the tab value. Supported fonts include:

          - Default
          - Arial
          - ArialNarrow
          - Calibri
          - CourierNew
          - Garamond
          - Georgia
          - Helvetica
          - LucidaConsole
          - MSGothic
          - MSMincho
          - OCR-A
          - Tahoma
          - TimesNewRoman
          - Trebuchet
          - Verdana
        type: string
      fontColor:
        description:
          "The font color to use for the information in the tab. Possible
          values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n-
          Gold\n- Green\n- NavyBlue\n- Purple\n- White\n"
        type: string
      fontColorMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `fontColor` property is editable.
      fontMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `font` property is editable.
      fontSize:
        description: |-
          The font size used for the information in the tab. Possible values are:

          - Size7
          - Size8
          - Size9
          - Size10
          - Size11
          - Size12
          - Size14
          - Size16
          - Size18
          - Size20
          - Size22
          - Size24
          - Size26
          - Size28
          - Size36
          - Size48
          - Size72
        type: string
      fontSizeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `fontSize` property is editable.
      formOrder:
        description:
          An integer specifying the order in which the guided form HTML
          should render. The order is relative to the `formPageLabel`, the group by
          which to place the guided form HTML block.
        type: string
      formOrderMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `formOrder` property is editable.
      formPageLabel:
        description:
          A string specifying the group in which to place the guided form
          HTML. Each group displays as a separate guided forms page in the signing
          experience.
        type: string
      formPageLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `formPageLabel` property
          is editable.
      formPageNumber:
        description:
          An integer specifying the order in which to present the guided
          form pages.
        type: string
      formPageNumberMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `fromPageNumber` property
          is editable.
      height:
        description: |-
          The height of the tab in pixels.
          Must be an integer.
        type: string
      heightMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `height` property is editable.
      italic:
        description: When **true,** the information in the tab is italic.
        type: string
      italicMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `italic` property is editable.
      localePolicy:
        "$ref": "#/definitions/localePolicyTab"
        description: Locale-specific settings.
      mergeField:
        "$ref": "#/definitions/mergeField"
        description:
          Contains the information necessary to map the tab to a field
          in SalesForce.
      mergeFieldXml:
        description: Reserved for DocuSign.
        type: string
      name:
        description: ""
        type: string
      nameMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `name` property is editable.
          This property is read-only.
      pageNumber:
        description: Specifies the page number on which the tab is located.
        type: string
      pageNumberMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `pageNumber` property is
          editable.
      recipientId:
        description:
          Unique for the recipient. It is used by the tab element to indicate
          which recipient is to sign the Document.
        type: string
      recipientIdGuid:
        description:
          The globally-unique identifier (GUID) for a specific recipient
          on a specific envelope. If the same recipient is associated with multiple
          envelopes, they will have a different GUID for each one. This property is
          read-only.
        type: string
      recipientIdGuidMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `recipientIdGuid` property
          is editable.
      recipientIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `recipientId` property is
          editable.
      smartContractInformation:
        "$ref": "#/definitions/smartContractInformation"
        description: Reserved for DocuSign.
      source:
        description: Reserved for DocuSign.
        type: string
      status:
        description:
          "Indicates the envelope status. Valid values are:\n\n* sent -
          The envelope is sent to the recipients. \n* created - The envelope is saved
          as a draft and can be modified and sent later."
        type: string
      statusMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `status` property is editable.
      tabGroupLabels:
        description: |-
          An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.

          To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
        type: array
        items:
          type: string
      tabGroupLabelsMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `tabGroupLabels` property
          is editable.
      tabId:
        description: The unique identifier for the tab.
        type: string
      tabIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabId` property is editable.
      tabLabel:
        description: |
          The label associated with the tab. This value may be an empty string.
          If no value is provided, the tab type is used as the value.

          Maximum Length: 500 characters.
        type: string
      tabLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabLabel` property is editable.
      tabOrder:
        description: |-
          A positive integer that sets the order the tab is navigated to during signing.

          Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
        type: string
      tabOrderMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabOrder` property is editable.
      tabType:
        description: Indicates the type of tab (for example, `signHere` or `initialHere`).
        type: string
      tabTypeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabType` property is editable.
      templateLocked:
        description:
          "When **true,** the sender cannot change any attributes of the
          recipient. Used only when working with template recipients. "
        type: string
      templateLockedMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `templateLocked` property
          is editable.
      templateRequired:
        description:
          When **true,** the sender may not remove the recipient. Used
          only when working with template recipients.
        type: string
      templateRequiredMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `templateRequired` property
          is editable.
      tooltip:
        description:
          "The text of a tooltip that appears when a user hovers over a
          form field or tab.

          "
        type: string
      toolTipMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          "Metadata that indicates whether the `toolTip` property is editable.

          "
      underline:
        description: When **true,** the information in the tab is underlined.
        type: string
      underlineMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `underline` property is editable.
      value:
        description: "Specifies the value of the tab. "
        type: string
      valueMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `value` property is editable.
      width:
        description: |-
          The width of the tab in pixels.
          Must be an integer.
        type: string
      widthMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `width` property is editable.
      xPosition:
        description: |
          This property indicates the horizontal offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. Must be an integer. May be zero.
        type: string
      xPositionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `xPosition` property is editable.
      yPosition:
        description: |
          This property indicates the vertical offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. Must be an integer. May be zero.
        type: string
      yPositionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `yPosition` property is editable.
    x-ds-definition-name: senderCompany
    description: ""
    x-ms-summary: ""
  senderEmailNotifications:
    type: object
    properties:
      changedSigner:
        description:
          When **true,** the sender receives an email notification if the
          signer changes.
        type: string
      clickwrapResponsesLimitNotificationEmail:
        description: ""
        type: string
      commentsOnlyPrivateAndMention:
        description:
          When **true,** the user receives only comments that mention their
          own user name.
        type: string
      commentsReceiveAll:
        description: When **true,** the user receives all comments.
        type: string
      deliveryFailed:
        description:
          When **true,** the sender receives an email notification if envelope
          delivery fails.
        type: string
      envelopeComplete:
        description:
          When **true,** the user receives an email notification when the
          envelope has been completed.
        type: string
      offlineSigningFailed:
        description:
          When **true,** the user receives an email notification if offline
          signing failed.
        type: string
      powerformResponsesLimitNotificationEmail:
        description: ""
        type: string
      purgeDocuments:
        description:
          When **true,** the user receives an email notification when a
          document purge occurs.
        type: string
      recipientViewed:
        description:
          When **true,** the sender receives notification that a recipient
          viewed the envelope.
        type: string
      senderEnvelopeDeclined:
        description:
          When **true,** the sender receives notification that the envelope
          was declined.
        type: string
      withdrawnConsent:
        description:
          When **true,** the user receives an email notification if consent
          is withdrawn.
        type: string
    description:
      Contains the settings for the email notifications that senders receive
      about the envelopes that they send.
    x-ds-definition-name: senderEmailNotifications
    x-ms-summary:
      Contains the settings for the email notifications that senders receive
      about the envelopes that they send.
  senderName:
    type: object
    properties:
      anchorAllowWhiteSpaceInCharacters:
        description: |
          When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.

          First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.

          Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.

          The default value is **true.**
        type: string
      anchorAllowWhiteSpaceInCharactersMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorAllowWhiteSpaceInCharacters`
          property is editable.
      anchorCaseSensitive:
        description: |-
          This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**

          For example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.

          This functionality uses the following rules:

          - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:

            $~><|^+=

            For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`

          - Strings embedded in other strings are ignored during the matching process.

          - In words that have dashes, the parts separated by dashes are treated as distinct words.

            Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**

          - Letters with accent marks are treated as distinct characters from their unaccented counterparts.

          - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.

            Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.

          - Unlike punctuation, numbers are not ignored when finding anchor words.

            Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).

          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorCaseSensitiveMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorCaseSensitive` property
          is editable.
      anchorHorizontalAlignment:
        description: |
          This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :

          - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.
          - `right`: Aligns the tab’s left side with the last character of the matching anchor word.

          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorHorizontalAlignmentMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorHorizontalAlignment`
          property is editable.
      anchorIgnoreIfNotPresent:
        description:
          When **true,** this tab is ignored if the `anchorString` is not
          found in the document.
        type: string
      anchorIgnoreIfNotPresentMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorIgnoreIfNotPresent`
          property is editable.
      anchorMatchWholeWord:
        description: |
          When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**

          For example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.

          This functionality uses the following rules:

          - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:

            $~><|^+=

            For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`

          - Strings embedded in other strings are ignored during the matching process.

          - In words that have dashes, the parts separated by dashes are treated as distinct words.

            Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**

          - Letters with accent marks are treated as distinct characters from their unaccented counterparts.

          - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.

            Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.

          - Unlike punctuation, numbers are not ignored when finding anchor words.

            Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).


          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorMatchWholeWordMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorMatchWholeWord` property
          is editable.
      anchorString:
        description:
          Specifies the string to find in the document and use as the basis
          for tab placement.
        type: string
      anchorStringMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorString` property is
          editable.
      anchorTabProcessorVersion:
        description: Reserved for DocuSign.
        type: string
      anchorTabProcessorVersionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Reserved for DocuSign.
      anchorUnits:
        description: |
          Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:

          - `pixels` (default)
          - `inches`
          - `mms`
          - `cms`
        type: string
      anchorUnitsMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorUnits` property is
          editable.
      anchorXOffset:
        description:
          "Specifies the X axis location of the tab in `anchorUnits` relative
          to the `anchorString`.

          "
        type: string
      anchorXOffsetMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorXOffset` property
          is editable.
      anchorYOffset:
        description:
          "Specifies the Y axis location of the tab in `anchorUnits` relative
          to the `anchorString`.

          "
        type: string
      anchorYOffsetMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorYOffset` property
          is editable.
      bold:
        description: When **true,** the information in the tab is bold.
        type: string
      boldMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `bold` property is editable.
      caption:
        description: ""
        type: string
      captionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `caption` property is editable.
      conditionalParentLabel:
        description:
          For conditional fields this is the `tabLabel` of the parent tab
          that controls this tab's visibility.
        type: string
      conditionalParentLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `conditionalParentLabel`
          property is editable.
      conditionalParentValue:
        description: |
          For conditional fields, this is the value of the parent tab that controls the tab's visibility.

          If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use "on" as the value to show that the parent tab is active.
        type: string
      conditionalParentValueMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `conditionalParentValue`
          property is editable.
      customTabId:
        description:
          The DocuSign generated custom tab ID for the custom tab to be
          applied. This can only be used when adding new tabs for a recipient. When
          used, the new tab inherits all the custom tab properties.
        type: string
      customTabIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `customTabId` property is
          editable.
      documentId:
        description:
          Specifies the document ID number that the tab is placed on. This
          must refer to an existing Document's ID attribute.
        type: string
      documentIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `documentId` property is
          editable.
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      font:
        description: |
          The font to be used for the tab value. Supported fonts include:

          - Default
          - Arial
          - ArialNarrow
          - Calibri
          - CourierNew
          - Garamond
          - Georgia
          - Helvetica
          - LucidaConsole
          - MSGothic
          - MSMincho
          - OCR-A
          - Tahoma
          - TimesNewRoman
          - Trebuchet
          - Verdana
        type: string
      fontColor:
        description:
          "The font color to use for the information in the tab. Possible
          values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n-
          Gold\n- Green\n- NavyBlue\n- Purple\n- White\n"
        type: string
      fontColorMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `fontColor` property is editable.
      fontMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `font` property is editable.
      fontSize:
        description: |-
          The font size used for the information in the tab. Possible values are:

          - Size7
          - Size8
          - Size9
          - Size10
          - Size11
          - Size12
          - Size14
          - Size16
          - Size18
          - Size20
          - Size22
          - Size24
          - Size26
          - Size28
          - Size36
          - Size48
          - Size72
        type: string
      fontSizeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `fontSize` property is editable.
      formOrder:
        description:
          An integer specifying the order in which the guided form HTML
          should render. The order is relative to the `formPageLabel`, the group by
          which to place the guided form HTML block.
        type: string
      formOrderMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `formOrder` property is editable.
      formPageLabel:
        description:
          A string specifying the group in which to place the guided form
          HTML. Each group displays as a separate guided forms page in the signing
          experience.
        type: string
      formPageLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `formPageLabel` property
          is editable.
      formPageNumber:
        description:
          An integer specifying the order in which to present the guided
          form pages.
        type: string
      formPageNumberMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `fromPageNumber` property
          is editable.
      height:
        description: |-
          The height of the tab in pixels.
          Must be an integer.
        type: string
      heightMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `height` property is editable.
      italic:
        description: When **true,** the information in the tab is italic.
        type: string
      italicMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `italic` property is editable.
      localePolicy:
        "$ref": "#/definitions/localePolicyTab"
        description: Locale-specific settings.
      mergeField:
        "$ref": "#/definitions/mergeField"
        description:
          Contains the information necessary to map the tab to a field
          in SalesForce.
      mergeFieldXml:
        description: Reserved for DocuSign.
        type: string
      name:
        description: ""
        type: string
      nameMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `name` property is editable.
          This property is read-only.
      pageNumber:
        description: Specifies the page number on which the tab is located.
        type: string
      pageNumberMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `pageNumber` property is
          editable.
      recipientId:
        description:
          Unique for the recipient. It is used by the tab element to indicate
          which recipient is to sign the Document.
        type: string
      recipientIdGuid:
        description:
          The globally-unique identifier (GUID) for a specific recipient
          on a specific envelope. If the same recipient is associated with multiple
          envelopes, they will have a different GUID for each one. This property is
          read-only.
        type: string
      recipientIdGuidMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `recipientIdGuid` property
          is editable.
      recipientIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `recipientId` property is
          editable.
      smartContractInformation:
        "$ref": "#/definitions/smartContractInformation"
        description: Reserved for DocuSign.
      source:
        description: Reserved for DocuSign.
        type: string
      status:
        description:
          "Indicates the envelope status. Valid values are:\n\n* sent -
          The envelope is sent to the recipients. \n* created - The envelope is saved
          as a draft and can be modified and sent later."
        type: string
      statusMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `status` property is editable.
      tabGroupLabels:
        description: |-
          An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.

          To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
        type: array
        items:
          type: string
      tabGroupLabelsMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `tabGroupLabels` property
          is editable.
      tabId:
        description: The unique identifier for the tab.
        type: string
      tabIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabId` property is editable.
      tabLabel:
        description: |
          The label associated with the tab. This value may be an empty string.
          If no value is provided, the tab type is used as the value.

          Maximum Length: 500 characters.
        type: string
      tabLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabLabel` property is editable.
      tabOrder:
        description: |-
          A positive integer that sets the order the tab is navigated to during signing.

          Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
        type: string
      tabOrderMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabOrder` property is editable.
      tabType:
        description: Indicates the type of tab (for example, `signHere` or `initialHere`).
        type: string
      tabTypeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabType` property is editable.
      templateLocked:
        description:
          "When **true,** the sender cannot change any attributes of the
          recipient. Used only when working with template recipients. "
        type: string
      templateLockedMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `templateLocked` property
          is editable.
      templateRequired:
        description:
          When **true,** the sender may not remove the recipient. Used
          only when working with template recipients.
        type: string
      templateRequiredMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `templateRequired` property
          is editable.
      tooltip:
        description:
          "The text of a tooltip that appears when a user hovers over a
          form field or tab.

          "
        type: string
      toolTipMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          "Metadata that indicates whether the `toolTip` property is editable.

          "
      underline:
        description: When **true,** the information in the tab is underlined.
        type: string
      underlineMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `underline` property is editable.
      value:
        description: "Specifies the value of the tab. "
        type: string
      valueMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `value` property is editable.
      width:
        description: |-
          The width of the tab in pixels.
          Must be an integer.
        type: string
      widthMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `width` property is editable.
      xPosition:
        description: |
          This property indicates the horizontal offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. Must be an integer. May be zero.
        type: string
      xPositionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `xPosition` property is editable.
      yPosition:
        description: |
          This property indicates the vertical offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. Must be an integer. May be zero.
        type: string
      yPositionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `yPosition` property is editable.
    x-ds-definition-name: senderName
    description: ""
    x-ms-summary: ""
  serverTemplate:
    type: object
    properties:
      sequence:
        description: Specifies the order in which templates are overlaid.
        type: string
      templateId:
        description:
          "The unique identifier of the template. If this is not provided,
          DocuSign will generate a value. "
        type: string
    x-ds-definition-name: serverTemplate
    description: ""
    x-ms-summary: ""
  serviceInformation:
    type: object
    properties:
      buildBranch:
        description: Reserved for DocuSign.
        type: string
      buildBranchDeployedDateTime:
        description: Reserved for DocuSign.
        type: string
      buildSHA:
        description: Reserved for DocuSign.
        type: string
      buildVersion:
        description: Reserved for DocuSign.
        type: string
      linkedSites:
        description: ""
        type: array
        items:
          type: string
      serviceVersions:
        description: ""
        type: array
        items:
          "$ref": "#/definitions/serviceVersion"
    x-ds-definition-name: serviceInformation
    description: ""
    x-ms-summary: ""
  serviceVersion:
    type: object
    properties:
      version:
        description: The version of the rest API.
        type: string
      versionUrl:
        description: ""
        type: string
    x-ds-definition-name: serviceVersion
    description: ""
    x-ms-summary: ""
  settingsMetadata:
    type: object
    properties:
      is21CFRPart11:
        description:
          When **true,** indicates compliance with United States Food and
          Drug Administration (FDA) regulations on electronic records and electronic
          signatures (ERES).
        type: string
      options:
        description: An array of option strings supported by this setting.
        type: array
        items:
          type: string
      rights:
        description: |-
          Indicates whether the property is editable. Valid values are:

          - `editable`
          - `read_only`
        type: string
      uiHint:
        description: Reserved for DocuSign.
        type: string
      uiOrder:
        description: Reserved for DocuSign.
        type: string
      uiType:
        description: Reserved for DocuSign.
        type: string
    description:
      Metadata that indicates whether a property is editable and describes
      setting-specific options.
    x-ds-definition-name: settingsMetadata
    x-ms-summary:
      Metadata that indicates whether a property is editable and describes
      setting-specific options.
  sharedItem:
    type: object
    properties:
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      shared:
        description: |-
          How the item is shared. One of:

          - `not_shared`
          - `shared_to`
          - `shared_from`
          - `shared_to_and_from`
        type: string
      user:
        "$ref": "#/definitions/userInfo"
        description: Information about the user who owns the shared item.
    description: Information about the shared item.
    x-ds-definition-name: sharedItem
    x-ms-summary: Information about the shared item.
  signatureGroup:
    type: object
    properties:
      groupId:
        description: The ID of the group being accessed.
        type: string
      groupName:
        description:
          The name of the group. The search_text provided in the call automatically
          performs a wild card search on group_name.
        type: string
      rights:
        description: |-
          Indicates whether the property is editable. Valid values are:

          - `editable`
          - `read_only`
        type: string
    x-ds-definition-name: signatureGroup
    description: ""
    x-ms-summary: ""
  signatureGroupDef:
    type: object
    properties:
      groupId:
        description: The ID of the group being accessed.
        type: string
      rights:
        description: |-
          Indicates whether the property is editable. Valid values are:

          - `editable`
          - `read_only`
        type: string
    x-ds-definition-name: signatureGroupDef
    description: ""
    x-ms-summary: ""
  signatureProviderRequiredOption:
    type: object
    properties:
      requiredSignatureProviderOptionIds:
        description: Reserved for DocuSign.
        type: array
        items:
          type: string
      signerType:
        description: Reserved for DocuSign.
        type: string
    description:
      Contains additional information that a specific signature provider
      requires.
    x-ds-definition-name: signatureProviderRequiredOption
    x-ms-summary:
      Contains additional information that a specific signature provider
      requires.
  signatureType:
    type: object
    properties:
      isDefault:
        description: When **true,** the signature type is the default type.
        type: string
      type:
        description: |-
          The type of signature. Valid values are:

          - `electronic`: Indicates an **electronic** signature that is used by common law countries such as the United States, United Kingdom, and Australia. This is the default signature type that DocuSign uses.
          - `universal`: Indicates a **digital** signature that is accepted by both common law and civil law countries. To use digital signatures, you must use the [DocuSign Signature Appliance](/docs/dsa-api/).

          For more information, see [Standards Based Signatures](/docs/esign-rest-api/esign101/concepts/standards-based-signatures/).
        type: string
    description: This object contains information about the type of signature.
    x-ds-definition-name: signatureType
    x-ms-summary: This object contains information about the type of signature.
  signatureUser:
    type: object
    properties:
      isDefault:
        description:
          Boolean that specifies whether the signature is the default signature
          for the user.
        type: string
      rights:
        description: |-
          Indicates whether the property is editable. Valid values are:

          - `editable`
          - `read_only`
        type: string
      userId:
        description: |-
          The ID of the user to access.

          **Note:** Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.
        type: string
      userName:
        description: The name of the user.
        type: string
    x-ds-definition-name: signatureUser
    description: ""
    x-ms-summary: ""
  signatureUserDef:
    type: object
    properties:
      isDefault:
        description:
          Boolean that specifies whether the signature is the default signature
          for the user.
        type: string
      rights:
        description: |-
          Indicates whether the property is editable. Valid values are:

          - `editable`
          - `read_only`
        type: string
      userId:
        description: |-
          The ID of the user to access.

          **Note:** Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.
        type: string
    x-ds-definition-name: signatureUserDef
    description: ""
    x-ms-summary: ""
  signer:
    type: object
    properties:
      accessCode:
        description:
          "If a value is provided, the recipient must enter the value as
          the access code to view and sign the envelope. \n\nMaximum Length: 50 characters
          and it must conform to the account's access code format setting.\n\nIf blank,
          but the signer `accessCode` property is set in the envelope, then that value
          is used.\n\nIf blank and the signer `accessCode` property is not set, then
          the access code is not required."
        type: string
      accessCodeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `accessCode` property is
          editable. This property is read-only.
      addAccessCodeToEmail:
        description:
          Optional. When **true,** the access code will be added to the
          email sent to the recipient. This nullifies the security measure of `accessCode`
          on the recipient.
        type: string
      additionalNotifications:
        description: An array of additional notification objects.
        type: array
        items:
          "$ref": "#/definitions/recipientAdditionalNotification"
      agentCanEditEmail:
        description:
          Optional element. When **true,** the agent recipient associated
          with this recipient can change the recipient's pre-populated email address.
          This element is only active if enabled for the account.
        type: string
      agentCanEditName:
        description:
          Optional. When **true,** the agent recipient associated with
          this recipient can change the recipient's pre-populated name. This element
          is only active if enabled for the account.
        type: string
      allowSystemOverrideForLockedRecipient:
        description:
          When **true,** if the recipient is locked on a template, advanced
          recipient routing can override the lock.
        type: string
      autoNavigation:
        description: "When **true,** autonavigation is set for the recipient.

          "
        type: string
      autoRespondedReason:
        description:
          "Error message provided by the destination email system. This
          field is only provided if the email notification to the recipient fails
          to send. This property is read-only.

          "
        type: string
      bulkRecipientsUri:
        description: Reserved for DocuSign.
        type: string
      bulkSendV2Recipient:
        description: ""
        type: string
      canSignOffline:
        description:
          When **true,** specifies that the signer can perform the signing
          ceremony offline.
        type: string
      clientUserId:
        description:
          "Specifies whether the recipient is embedded or remote. \n\nIf
          the `clientUserId` property is not null then the recipient is embedded.
          Use this field to associate the signer with their userId in your app. Authenticating
          the user is the responsibility of your app when you use embedded signing.\n\nIf
          the `clientUserId` property is set and either `SignerMustHaveAccount` or
          `SignerMustLoginToSign` property of the account settings is set to  **true,**
          an error is generated on sending.\n\n**Note:** This property is not returned
          by the [listStatusChanges](/docs/esign-rest-api/reference/envelopes/envelopes/liststatuschanges/)
          endpoint.\n\nMaximum length: 100 characters. \n"
        type: string
      completedCount:
        description:
          Indicates the number of times that the recipient has been through
          a signing completion for the envelope. If this number is greater than 0
          for a signing group, only the user who previously completed may sign again.
          This property is read-only.
        type: string
      consentDetailsList:
        description: ""
        type: array
        items:
          "$ref": "#/definitions/consentDetails"
      creationReason:
        description: The reason why the item was created.
        type: string
      customFields:
        description:
          An optional array of strings that allows the sender to provide
          custom data about the recipient. This information is returned in the envelope
          status but otherwise not used by DocuSign. Each customField string can be
          a maximum of 100 characters.
        type: array
        items:
          type: string
      declinedDateTime:
        description:
          The date and time the recipient declined the document. This property
          is read-only.
        type: string
      declinedReason:
        description:
          The reason the recipient declined the document. This property
          is read-only.
        type: string
      defaultRecipient:
        description:
          When **true,** this recipient is the default recipient and any
          tabs generated by the transformPdfFields option are mapped to this recipient.
        type: string
      delegatedBy:
        "$ref": "#/definitions/delegationInfo"
        description: ""
      delegatedTo:
        description: ""
        type: array
        items:
          "$ref": "#/definitions/delegationInfo"
      deliveredDateTime:
        description:
          The date and time that the envelope was delivered to the recipient.
          This property is read-only.
        type: string
      deliveryMethod:
        description: |-
          The delivery method. One of:

          - `email`
          - `fax`
          - `SMS`
          - `WhatsApp`
          - `offline`

          The `SMS` and `WhatsApp` delivery methods
          are limited to `signer`, `carbonCopy`, and `certifiedDelivery`
          recipients.

          **Related topics**

          - [Using SMS delivery with the eSignature API][smsconcept]
          - [How to request a signature by SMS delivery][howto]

          [smsconcept]: /docs/esign-rest-api/esign101/concepts/sms-delivery/using-sms-esignature/
          [howto]: /docs/esign-rest-api/how-to/request-signature-sms/
        type: string
      deliveryMethodMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Reserved for DocuSign.
      designatorId:
        description: Reserved for DocuSign.
        type: string
      designatorIdGuid:
        description: Reserved for DocuSign.
        type: string
      documentVisibility:
        description:
          A list of `documentVisibility` objects. Each object in the list
          specifies whether a document in the envelope is visible to this recipient.
          For the envelope to use this functionality, Document Visibility must be
          enabled for the account and the `enforceSignerVisibility` property must
          be set to **true.**
        type: array
        items:
          "$ref": "#/definitions/documentVisibility"
      email:
        description:
          "The recipient's email address. The system sends notifications
          about the documents to sign to this address. Maximum length: 100 characters. "
        type: string
      emailMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `email` property is editable.
          This property is read-only.
      emailNotification:
        "$ref": "#/definitions/recipientEmailNotification"
        description: |-
          This optional property allows you to set a specific email subject and
          body for this recipient's notification email.

          **Note:** If you use this property, you _must_
          provide a value for the `supportedLanguage` sub-property.


          You can set the `emailNotification` property separately
          for each recipient. If you set the value only for certain
          recipients, the other recipients are assigned the values from
          the top-level `emailSubject` and `emailBlurb`.
      emailRecipientPostSigningURL:
        description: ""
        type: string
      embeddedRecipientStartURL:
        description:
          "Specifies a sender-provided valid URL string for redirecting
          an embedded recipient. When using this option, the embedded recipient still
          receives an email from DocuSign, just as a remote recipient would. When
          the document link in the email is clicked the recipient is redirected, through
          DocuSign, to the supplied URL to complete their actions. When routing to
          the URL, the sender's system (the server responding to the URL) must request
          a recipient token to launch a signing session. \n\nWhen `SIGN_AT_DOCUSIGN`,
          the recipient is directed to an embedded signing or viewing process directly
          at DocuSign. The signing or viewing action is initiated by the DocuSign
          system and the transaction activity and Certificate of Completion records
          will reflect this. In all other ways the process is identical to an embedded
          signing or viewing operation launched by a partner.\n\nIt is important to
          understand that in a typical embedded workflow, the authentication of an
          embedded recipient is the responsibility of the sending application. DocuSign
          expects that senders will follow their own processes for establishing the
          recipient's identity. In this workflow the recipient goes through the sending
          application before the embedded signing or viewing process is initiated.
          However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`,
          the recipient goes directly to the embedded signing or viewing process,
          bypassing the sending application and any authentication steps the sending
          application would use. In this case, DocuSign recommends that you use one
          of the normal DocuSign authentication features (Access Code, Phone Authentication,
          SMS Authentication, etc.) to verify the identity of the recipient.\n\nIf
          the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL`
          is set, DocuSign will ignore the redirect URL and launch the standard signing
          process for the email recipient. Information can be appended to the embedded
          recipient start URL using merge fields. The available merge fields items
          are: `envelopeId`, `recipientId`, `recipientName`, `recipientEmail`, and
          `customFields`. The `customFields` property must be set for the recipient
          or envelope. The merge fields are enclosed in double brackets. \n\n*Example*:
          \n\n`http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]` "
        type: string
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      excludedDocuments:
        description: |-
          Specifies the documents that are not visible to this recipient. Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to **true** for the envelope to use this.

          When enforce signer visibility is enabled, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.
        type: array
        items:
          type: string
      faxNumber:
        description: Reserved for DocuSign.
        type: string
      faxNumberMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Reserved for DocuSign.
      firstName:
        description: "The recipient's first name. Maximum Length: 50 characters."
        type: string
      firstNameMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `firstName` property is editable.
          This property is read-only.
      fullName:
        description: Reserved for DocuSign.
        type: string
      fullNameMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Reserved for DocuSign.
      idCheckConfigurationName:
        description:
          "The name of the authentication check to use. This value must
          match one of the authentication types that the account uses. The names of
          these authentication types appear in the web console sending interface in
          the Identify list for a recipient. This setting overrides any default authentication
          setting. Valid values are:\n\n- `Phone Auth $`: The recipient must authenticate
          by using two-factor authentication (2FA). You provide the phone number to
          use for 2FA in the `phoneAuthentication` object.\n- `SMS Auth $`: The recipient
          must authenticate via SMS. You provide the phone number to use in the `smsAuthentication`
          object.\n- `ID Check $`: The  recipient must answer detailed security questions.
          \n\n**Example:** Your account has ID Check and SMS Authentication available.
          In the web console Identify list, these appear as ID Check $ and SMS Auth
          $. To use ID Check in an envelope, the idCheckConfigurationName should be
          ID Check $. For SMS, you would use SMS Auth $, and you would also need to
          add a phone number to the smsAuthentication node."
        type: string
      idCheckConfigurationNameMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `idCheckConfigurationName`
          property is editable. This property is read-only.
      idCheckInformationInput:
        "$ref": "#/definitions/idCheckInformationInput"
        description:
          An object that contains input information related to a recipient
          ID check.
      identityVerification:
        "$ref": "#/definitions/recipientIdentityVerification"
        description:
          Specifies the ID Verification workflow applied on an envelope
          by workflow ID. <br/>See the [list](/docs/esign-rest-api/reference/accounts/identityverifications/list/)
          method in the [IdentityVerifications](/docs/esign-rest-api/reference/accounts/identityverifications/)
          resource for more information on how to retrieve workflow IDs available
          for an account. <br/>This can be used in addition to other [recipient authentication](https://support.docusign.com/s/document-item?bundleId=gav1643676262430&topicId=kzp1578456318101.html)
          methods. <br/>Note that ID Verification and ID Check are two distinct methods.
          ID Verification checks recipients' identity by verifying their ID while
          ID Check relies on data available on public records (such as current and
          former address).
      inheritEmailNotificationConfiguration:
        description:
          "When **true** and the envelope recipient creates a DocuSign
          account after signing, the Manage Account Email Notification settings are
          used as the default settings for the recipient's account. "
        type: string
      isBulkRecipient:
        description:
          "When **true,** this signer is a bulk recipient and the recipient
          information is contained in a bulk recipient file. \n\nNote that when this
          is true the email and name for the recipient becomes bulk@recipient.com
          and \"Bulk Recipient\". These fields can not be changed for the bulk recipient.
          \n"
        type: string
      isBulkRecipientMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Reserved for DocuSign.
      lastName:
        description: The recipient's last name.
        type: string
      lastNameMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `lastName` property is editable.
          This property is read-only.
      lockedRecipientPhoneAuthEditable:
        description: Reserved for DocuSign.
        type: string
      lockedRecipientSmsEditable:
        description: Reserved for DocuSign.
        type: string
      name:
        description: |-
          The full legal name of the recipient. Maximum Length: 100 characters.

          **Note:** You must always set a value for this property in requests, even if `firstName` and `lastName` are set.
        type: string
      nameMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `name` property is editable.
          This property is read-only.
      notaryId:
        description: The `recipientId` of the notary for this signer.
        type: string
      notarySignerEmailSent:
        description: ""
        type: string
      note:
        description: |
          A note sent to the recipient in the signing email.
          This note is unique to this recipient.
          In the user interface,
          it appears near the upper left corner
          of the document
          on the signing screen.

          Maximum Length: 1000 characters.
        type: string
      noteMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `note` property is editable.
          This property is read-only.
      offlineAttributes:
        "$ref": "#/definitions/offlineAttributes"
        description: Reserved for DocuSign.
      phoneAuthentication:
        "$ref": "#/definitions/recipientPhoneAuthentication"
        description: |+
          When `idCheckConfigurationName` is set to `Phone Auth $`, you use this complex type to provide the recipient authentication method details. It contains the following elements:

          * `recipMayProvideNumber`: Boolean. When **true,** the recipient can use whatever phone number they choose.
          * `senderProvidedNumbers`: ArrayOfStrings.  A list of phone numbers the recipient can use.
          * `recordVoicePrint`: Reserved for DocuSign.
          * `validateRecipProvidedNumber`: Reserved for DocuSign.

      phoneNumber:
        "$ref": "#/definitions/recipientPhoneNumber"
        description: Describes the recipient phone number.
      proofFile:
        "$ref": "#/definitions/recipientProofFile"
        description: The proof file of the recipient.
      recipientAttachments:
        description: Reserved for DocuSign.
        type: array
        items:
          "$ref": "#/definitions/recipientAttachment"
      recipientAuthenticationStatus:
        "$ref": "#/definitions/authenticationStatus"
        description:
          Information about the recipient's authentication status. This
          property is read-only.
      recipientFeatureMetadata:
        description:
          Metadata about the features that are supported for the recipient
          type. This property is read-only.
        type: array
        items:
          "$ref": "#/definitions/featureAvailableMetadata"
      recipientId:
        description: |
          A local reference used to map
          recipients to other objects, such as specific
          document tabs.

          A `recipientId` must be
          either an integer or a GUID,
          and the `recipientId` must be
          unique within an envelope.

          For example, many envelopes assign the first recipient
          a `recipientId` of `1`.
        type: string
      recipientIdGuid:
        description:
          The globally-unique identifier (GUID) for a specific recipient
          on a specific envelope. If the same recipient is associated with multiple
          envelopes, they will have a different GUID for each one. This property is
          read-only.
        type: string
      recipientSignatureProviders:
        description:
          The default signature provider is the DocuSign Electronic signature
          system. This parameter is used to specify one or more Standards Based Signature
          (digital signature) providers for the signer to use. [More information.](/docs/esign-rest-api/esign101/concepts/standards-based-signatures/)
        type: array
        items:
          "$ref": "#/definitions/recipientSignatureProvider"
      recipientSuppliesTabs:
        description: When **true,** specifies that the recipient creates the tabs.
        type: string
      recipientType:
        description: |-
          The recipient type, as specified by the following values:
          - `agent`: Agent recipients can add name and email information for recipients that appear after the agent in routing order.
          - `carbonCopy`: Carbon copy recipients get a copy of the envelope but don't need to sign, initial, date, or add information to any of the documents. This type of recipient can be used in any routing order.
          - `certifiedDelivery`: Certified delivery recipients must receive the completed documents for the envelope to be completed. They don't need to sign, initial, date, or add information to any of the documents.
          - `editor`: Editors have the same management and access rights for the envelope as the sender. Editors can add name and email information, add or change the routing order, set authentication options, and can edit signature/initial tabs and data fields for the remaining recipients.
          - `inPersonSigner`: In-person recipients are DocuSign users who act as signing hosts in the same physical location as the signer.
          - `intermediaries`: Intermediary recipients can optionally add name and email information for recipients at the same or subsequent level in the routing order.
          - `seal`: Electronic seal recipients represent legal entities.
          - `signer`: Signers are recipients who must sign, initial, date, or add data to form fields on the documents in the envelope.
          - `witness`: Witnesses are recipients whose signatures affirm that the identified signers have signed the documents in the envelope.
        type: string
      recipientTypeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `recipientType` property
          is editable. This property is read-only.
      requireIdLookup:
        description:
          "When **true,** the recipient is required to use the specified
          ID check method (including Phone and SMS authentication) to validate their
          identity. "
        type: string
      requireIdLookupMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `requireIdLookup` property
          is editable. This property is read-only.
      requireSignerCertificate:
        description:
          "Sets the type of signer certificate required for signing. If
          left blank, no certificate is required. Only one type of certificate can
          be set for a signer. Valid values:\n\n* `docusign_express`: Requires a DocuSign
          Express certificate.\n* `safe`: Requires a SAFE-BioPharma certificate.\n*
          `open_trust`: Requires an OpenTrust certificate. \n\n**Important:** There
          are certain rules and restrictions that must be followed when requiring
          OpenTrust digital signatures. See [ML:OpenTrust Rules and Restrictions]
          for more information. \n "
        type: string
      requireSignOnPaper:
        description:
          When **true,** the signer must print, sign, and upload or fax
          the signed documents to DocuSign.
        type: string
      requireUploadSignature:
        description:
          When **true,** the signer is required to upload a new signature,
          even if they have a pre-adopted signature in their personal DocuSign account.
        type: string
      roleName:
        description:
          Optional element. Specifies the role name associated with the
          recipient.<br/><br/>This property is required when you are working with
          template recipients.
        type: string
      routingOrder:
        description: "Specifies the routing order of the recipient in the envelope. "
        type: string
      routingOrderMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `routingOrder` property is
          editable. This property is read-only.
      sentDateTime:
        description:
          The UTC DateTime when the envelope was sent. This property is
          read-only.
        type: string
      signatureInfo:
        "$ref": "#/definitions/recipientSignatureInformation"
        description: |-
          Allows the sender to pre-specify the signature name, signature initials and signature font used in the signature stamp for the recipient.

          Used only with recipient types In Person Signers and Signers.
      signedDateTime:
        description: Reserved for DocuSign.
        type: string
      signInEachLocation:
        description:
          When **true** and the feature is enabled in the sender's account,
          the signing recipient is required to draw signatures and initials at each
          signature/initial tab (instead of adopting a signature/initial style or
          only drawing a signature/initial once).
        type: string
      signInEachLocationMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `signInEachLocation` property
          is editable. This property is read-only.
      signingGroupId:
        description:
          "The ID of the [signing group](https://support.docusign.com/s/document-item?bundleId=gav1643676262430&topicId=zgn1578456447934.html).

          "
        type: string
      signingGroupIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `signingGroupId` property
          is editable. This property is read-only.
      signingGroupName:
        description:
          "Optional. The name of the signing group. \n\nMaximum Length:
          100 characters. "
        type: string
      signingGroupUsers:
        description:
          A complex type that contains information about users in the signing
          group.
        type: array
        items:
          "$ref": "#/definitions/userInfo"
      smsAuthentication:
        "$ref": "#/definitions/recipientSMSAuthentication"
        description:
          "When `idCheckConfigurationName` is set to `SMS Auth $`, you
          use this complex type to provide the recipient authentication method details.
          It contains the element `senderProvidedNumbers`, which is an array of phone
          numbers that the recipient can use for SMS text authentication. \n\n"
      socialAuthentications:
        description: Deprecated.
        type: array
        items:
          "$ref": "#/definitions/socialAuthentication"
      status:
        description: |
          Specifies the status of the recipient at the time of the request. This property is read-only. Possible values are:

          - `created`: The recipient is in a draft state. This is only associated with draft envelopes (envelopes with a created status).
          - `sent`: The recipient has been sent an email notification that it is their turn to sign an envelope.
          - `delivered`: The recipient has viewed the documents in an envelope through the DocuSign signing web site. This is not an email delivery of the documents in an envelope.
          - `signed`; The recipient has completed (performed all required interactions, such as signing or entering data) all required tags in an envelope. This is a temporary state during processing, after which the recipient is automatically moved to completed.
          - `declined`: The recipient declined to sign the documents in the envelope.
          - `completed`: The recipient has completed their actions (signing or other required actions if not a signer) for an envelope.
          - `faxpending`: The recipient has finished signing and the system is waiting a fax attachment by the recipient before completing their signing step.
          - `autoresponded`: The recipient's email system auto-responded to the email from DocuSign. This status is used by the DocuSign webapp (also known as the DocuSign console) to inform senders about the auto-responded email.
        type: string
      statusCode:
        description: Reserved for DocuSign.
        type: string
      suppressEmails:
        description:
          When **true,** email notifications are suppressed for the recipient,
          and they must access envelopes and documents from their DocuSign inbox.
        type: string
      tabs:
        "$ref": "#/definitions/EnvelopeRecipientTabs"
        description: |-
          The tabs to assign to the recipient.
          [More information](/docs/esign-rest-api/esign101/concepts/tabs/).
      templateLocked:
        description:
          "When **true,** the sender cannot change any attributes of the
          recipient. Used only when working with template recipients. "
        type: string
      templateRequired:
        description:
          When **true,** the sender may not remove the recipient. Used
          only when working with template recipients.
        type: string
      totalTabCount:
        description: The total number of tabs in the documents. This property is read-only.
        type: string
      userId:
        description: |-
          The ID of the user to access.

          **Note:** Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.
        type: string
    description:
      A complex type containing information about a signer recipient. A
      signer is a recipient who must take action on a document, such as sign, initial,
      date, or add data to form fields on a document.
    x-ds-definition-name: signer
    x-ms-summary:
      A complex type containing information about a signer recipient.
      A signer is a recipient who must take action on a document, such as sign, initial,
      date, or add data to form fields on a document.
  signerAttachment:
    type: object
    properties:
      anchorAllowWhiteSpaceInCharacters:
        description: |
          When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.

          First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.

          Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.

          The default value is **true.**
        type: string
      anchorAllowWhiteSpaceInCharactersMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorAllowWhiteSpaceInCharacters`
          property is editable.
      anchorCaseSensitive:
        description: |-
          This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**

          For example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.

          This functionality uses the following rules:

          - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:

            $~><|^+=

            For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`

          - Strings embedded in other strings are ignored during the matching process.

          - In words that have dashes, the parts separated by dashes are treated as distinct words.

            Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**

          - Letters with accent marks are treated as distinct characters from their unaccented counterparts.

          - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.

            Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.

          - Unlike punctuation, numbers are not ignored when finding anchor words.

            Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).

          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorCaseSensitiveMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorCaseSensitive` property
          is editable.
      anchorHorizontalAlignment:
        description: |
          This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :

          - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.
          - `right`: Aligns the tab’s left side with the last character of the matching anchor word.

          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorHorizontalAlignmentMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorHorizontalAlignment`
          property is editable.
      anchorIgnoreIfNotPresent:
        description:
          When **true,** this tab is ignored if the `anchorString` is not
          found in the document.
        type: string
      anchorIgnoreIfNotPresentMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorIgnoreIfNotPresent`
          property is editable.
      anchorMatchWholeWord:
        description: |
          When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**

          For example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.

          This functionality uses the following rules:

          - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:

            $~><|^+=

            For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`

          - Strings embedded in other strings are ignored during the matching process.

          - In words that have dashes, the parts separated by dashes are treated as distinct words.

            Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**

          - Letters with accent marks are treated as distinct characters from their unaccented counterparts.

          - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.

            Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.

          - Unlike punctuation, numbers are not ignored when finding anchor words.

            Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).


          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorMatchWholeWordMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorMatchWholeWord` property
          is editable.
      anchorString:
        description:
          Specifies the string to find in the document and use as the basis
          for tab placement.
        type: string
      anchorStringMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorString` property is
          editable.
      anchorTabProcessorVersion:
        description: Reserved for DocuSign.
        type: string
      anchorTabProcessorVersionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Reserved for DocuSign.
      anchorUnits:
        description: |
          Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:

          - `pixels` (default)
          - `inches`
          - `mms`
          - `cms`
        type: string
      anchorUnitsMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorUnits` property is
          editable.
      anchorXOffset:
        description:
          "Specifies the X axis location of the tab in `anchorUnits` relative
          to the `anchorString`.

          "
        type: string
      anchorXOffsetMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorXOffset` property
          is editable.
      anchorYOffset:
        description:
          "Specifies the Y axis location of the tab in `anchorUnits` relative
          to the `anchorString`.

          "
        type: string
      anchorYOffsetMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorYOffset` property
          is editable.
      caption:
        description: ""
        type: string
      captionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `caption` property is editable.
      conditionalParentLabel:
        description:
          For conditional fields this is the `tabLabel` of the parent tab
          that controls this tab's visibility.
        type: string
      conditionalParentLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `conditionalParentLabel`
          property is editable.
      conditionalParentValue:
        description: |
          For conditional fields, this is the value of the parent tab that controls the tab's visibility.

          If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use "on" as the value to show that the parent tab is active.
        type: string
      conditionalParentValueMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `conditionalParentValue`
          property is editable.
      customTabId:
        description:
          The DocuSign generated custom tab ID for the custom tab to be
          applied. This can only be used when adding new tabs for a recipient. When
          used, the new tab inherits all the custom tab properties.
        type: string
      customTabIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `customTabId` property is
          editable.
      documentId:
        description:
          Specifies the document ID number that the tab is placed on. This
          must refer to an existing Document's ID attribute.
        type: string
      documentIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `documentId` property is
          editable.
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      formOrder:
        description:
          An integer specifying the order in which the guided form HTML
          should render. The order is relative to the `formPageLabel`, the group by
          which to place the guided form HTML block.
        type: string
      formOrderMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `formOrder` property is editable.
      formPageLabel:
        description:
          A string specifying the group in which to place the guided form
          HTML. Each group displays as a separate guided forms page in the signing
          experience.
        type: string
      formPageLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `formPageLabel` property
          is editable.
      formPageNumber:
        description:
          An integer specifying the order in which to present the guided
          form pages.
        type: string
      formPageNumberMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `fromPageNumber` property
          is editable.
      handDrawRequired:
        description: Reserved for DocuSign.
        type: string
      height:
        description: |-
          The height of the tab in pixels.
          Must be an integer.
        type: string
      heightMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `height` property is editable.
      mergeField:
        "$ref": "#/definitions/mergeField"
        description:
          Contains the information necessary to map the tab to a field
          in SalesForce.
      mergeFieldXml:
        description: Reserved for DocuSign.
        type: string
      name:
        description: |-
          The name of the tab. For example, `Sign Here` or `Initial Here`.

          If the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.
        type: string
      nameMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `name` property is editable.
          This property is read-only.
      optional:
        description:
          When **true,** the recipient does not need to complete this tab
          to complete the signing process.
        type: string
      optionalMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `optional` property is editable.
      pageNumber:
        description:
          The page number on which the tab is located. For supplemental
          documents, this value must be `1`.
        type: string
      pageNumberMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `pageNumber` property is
          editable.
      recipientId:
        description:
          "The ID of the recipient to whom the tab will be assigned. This
          value should match the `recipientId` defined in the recipient object.

          "
        type: string
      recipientIdGuid:
        description:
          The globally-unique identifier (GUID) for a specific recipient
          on a specific envelope. If the same recipient is associated with multiple
          envelopes, they will have a different GUID for each one. This property is
          read-only.
        type: string
      recipientIdGuidMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `recipientIdGuid` property
          is editable.
      recipientIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `recipientId` property is
          editable.
      scaleValue:
        description:
          Sets the size of the tab. This field accepts values from `0.5`
          to `1.0`, where `1.0` represents full size and `0.5` is 50% of full size.
        type: string
      scaleValueMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `scaleValue` property is
          editable.
      smartContractInformation:
        "$ref": "#/definitions/smartContractInformation"
        description: Reserved for DocuSign.
      source:
        description: Reserved for DocuSign.
        type: string
      status:
        description: |
          The status of the tab. Possible values are:

          - `active`: The tab is active, but the recipient has not yet interacted with it.
          - `signed`: The recipient signed the tab.
          - `declined`: The recipient declined the envelope.
          - `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).
        type: string
      statusMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `status` property is editable.
      tabGroupLabels:
        description: |-
          An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.

          To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
        type: array
        items:
          type: string
      tabGroupLabelsMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `tabGroupLabels` property
          is editable.
      tabId:
        description: The unique identifier for the tab.
        type: string
      tabIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabId` property is editable.
      tabLabel:
        description: |
          The label associated with the tab. This value may be an empty string.
          If no value is provided, the tab type is used as the value.

          Maximum Length: 500 characters.
        type: string
      tabLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabLabel` property is editable.
      tabOrder:
        description: |-
          A positive integer that sets the order the tab is navigated to during signing.

          Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
        type: string
      tabOrderMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabOrder` property is editable.
      tabType:
        description: Indicates the type of tab (for example, `signHere` or `initialHere`).
        type: string
      tabTypeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabType` property is editable.
      templateLocked:
        description:
          "When **true,** the sender cannot change any attributes of the
          recipient. Used only when working with template recipients. "
        type: string
      templateLockedMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `templateLocked` property
          is editable.
      templateRequired:
        description:
          When **true,** the sender may not remove the recipient. Used
          only when working with template recipients.
        type: string
      templateRequiredMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `templateRequired` property
          is editable.
      tooltip:
        description:
          "The text of a tooltip that appears when a user hovers over a
          form field or tab.

          "
        type: string
      toolTipMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          "Metadata that indicates whether the `toolTip` property is editable.

          "
      width:
        description: |-
          The width of the tab in pixels.
          Must be an integer.
        type: string
      widthMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `width` property is editable.
      xPosition:
        description: |
          This property indicates the horizontal offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. Must be an integer. May be zero.

          To improve the tab's position on the document,
          DocuSign recommends
          adjusting `xPosition`
          and `yPosition`
          coordinates
          by (+0, -24)
        type: string
      xPositionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `xPosition` property is editable.
      yPosition:
        description: |
          This property indicates the vertical offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. Must be an integer. May be zero.

          To improve the tab's position on the document,
          DocuSign recommends
          adjusting `xPosition`
          and `yPosition`
          coordinates
          by (+0, -24)
        type: string
      yPositionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `yPosition` property is editable.
    description: |
      A tab that allows the recipient to attach supporting
      documents to an envelope.
    x-ds-definition-name: signerAttachment
    x-ms-summary: |
      A tab that allows the recipient to attach supporting
      documents to an envelope.
  signerEmailNotifications:
    description:
      "An array of email notifications that specifies the email the user
      receives when they are a recipient. When the specific email notification is
      set to true, the user receives those types of email notifications from DocuSign.
      The user inherits the default account email notification settings when the user
      is created.

      "
    type: object
    properties:
      agentNotification:
        description: When **true,** the user receives agent notification emails.
        type: string
      carbonCopyNotification:
        description:
          When **true,** the user receives notifications of carbon copy
          deliveries.
        type: string
      certifiedDeliveryNotification:
        description: When **true,** the user receives notifications of certified deliveries.
        type: string
      commentsOnlyPrivateAndMention:
        description:
          When **true,** the user receives only comments that mention their
          own user name.
        type: string
      commentsReceiveAll:
        description: When **true,** the user receives all comments.
        type: string
      documentMarkupActivation:
        description:
          When **true,** the user receives notification that document markup
          has been activated.
        type: string
      envelopeActivation:
        description:
          When **true,** the user receives notification that the envelope
          has been activated.
        type: string
      envelopeComplete:
        description:
          When **true,** the user receives an email notification when the
          envelope has been completed.
        type: string
      envelopeCorrected:
        description:
          When **true,** the user receives notification that the envelope
          has been corrected.
        type: string
      envelopeDeclined:
        description:
          When **true,** the user receives notification that the envelope
          has been declined.
        type: string
      envelopeVoided:
        description:
          When **true,** the user receives notification that the envelope
          has been voided.
        type: string
      faxReceived:
        description: Reserved for DocuSign.
        type: string
      offlineSigningFailed:
        description:
          When **true,** the user receives an email notification if offline
          signing failed.
        type: string
      purgeDocuments:
        description:
          When **true,** the user receives an email notification when a
          document purge occurs.
        type: string
      reassignedSigner:
        description:
          When **true,** the user receives notification that the envelope
          has been reassigned.
        type: string
      whenSigningGroupMember:
        description:
          When **true,** the user receives notification that he or she
          is a member of the signing group.
        type: string
    x-ds-definition-name: signerEmailNotifications
    x-ms-summary:
      "An array of email notifications that specifies the email the user
      receives when they are a recipient. When the specific email notification is
      set to true, the user receives those types of email notifications from DocuSign.
      The user inherits the default account email notification settings when the user
      is created.

      "
  signHere:
    type: object
    properties:
      anchorAllowWhiteSpaceInCharacters:
        description: |
          When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.

          First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.

          Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.

          The default value is **true.**
        type: string
      anchorAllowWhiteSpaceInCharactersMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorAllowWhiteSpaceInCharacters`
          property is editable.
      anchorCaseSensitive:
        description: |-
          This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**

          For example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.

          This functionality uses the following rules:

          - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:

            $~><|^+=

            For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`

          - Strings embedded in other strings are ignored during the matching process.

          - In words that have dashes, the parts separated by dashes are treated as distinct words.

            Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**

          - Letters with accent marks are treated as distinct characters from their unaccented counterparts.

          - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.

            Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.

          - Unlike punctuation, numbers are not ignored when finding anchor words.

            Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).

          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorCaseSensitiveMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorCaseSensitive` property
          is editable.
      anchorHorizontalAlignment:
        description: |
          This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :

          - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.
          - `right`: Aligns the tab’s left side with the last character of the matching anchor word.

          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorHorizontalAlignmentMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorHorizontalAlignment`
          property is editable.
      anchorIgnoreIfNotPresent:
        description:
          When **true,** this tab is ignored if the `anchorString` is not
          found in the document.
        type: string
      anchorIgnoreIfNotPresentMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorIgnoreIfNotPresent`
          property is editable.
      anchorMatchWholeWord:
        description: |
          When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**

          For example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.

          This functionality uses the following rules:

          - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:

            $~><|^+=

            For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`

          - Strings embedded in other strings are ignored during the matching process.

          - In words that have dashes, the parts separated by dashes are treated as distinct words.

            Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**

          - Letters with accent marks are treated as distinct characters from their unaccented counterparts.

          - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.

            Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.

          - Unlike punctuation, numbers are not ignored when finding anchor words.

            Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).


          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorMatchWholeWordMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorMatchWholeWord` property
          is editable.
      anchorString:
        description:
          Specifies the string to find in the document and use as the basis
          for tab placement.
        type: string
      anchorStringMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorString` property is
          editable.
      anchorTabProcessorVersion:
        description: Reserved for DocuSign.
        type: string
      anchorTabProcessorVersionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Reserved for DocuSign.
      anchorUnits:
        description: |
          Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:

          - `pixels` (default)
          - `inches`
          - `mms`
          - `cms`
        type: string
      anchorUnitsMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorUnits` property is
          editable.
      anchorXOffset:
        description:
          "Specifies the X axis location of the tab in `anchorUnits` relative
          to the `anchorString`.

          "
        type: string
      anchorXOffsetMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorXOffset` property
          is editable.
      anchorYOffset:
        description:
          "Specifies the Y axis location of the tab in `anchorUnits` relative
          to the `anchorString`.

          "
        type: string
      anchorYOffsetMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorYOffset` property
          is editable.
      caption:
        description: ""
        type: string
      captionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `caption` property is editable.
      conditionalParentLabel:
        description:
          For conditional fields this is the `tabLabel` of the parent tab
          that controls this tab's visibility.
        type: string
      conditionalParentLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `conditionalParentLabel`
          property is editable.
      conditionalParentValue:
        description: |
          For conditional fields, this is the value of the parent tab that controls the tab's visibility.

          If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use "on" as the value to show that the parent tab is active.
        type: string
      conditionalParentValueMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `conditionalParentValue`
          property is editable.
      customTabId:
        description:
          The DocuSign generated custom tab ID for the custom tab to be
          applied. This can only be used when adding new tabs for a recipient. When
          used, the new tab inherits all the custom tab properties.
        type: string
      customTabIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `customTabId` property is
          editable.
      documentId:
        description:
          Specifies the document ID number that the tab is placed on. This
          must refer to an existing Document's ID attribute.
        type: string
      documentIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `documentId` property is
          editable.
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      formOrder:
        description:
          An integer specifying the order in which the guided form HTML
          should render. The order is relative to the `formPageLabel`, the group by
          which to place the guided form HTML block.
        type: string
      formOrderMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `formOrder` property is editable.
      formPageLabel:
        description:
          A string specifying the group in which to place the guided form
          HTML. Each group displays as a separate guided forms page in the signing
          experience.
        type: string
      formPageLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `formPageLabel` property
          is editable.
      formPageNumber:
        description:
          An integer specifying the order in which to present the guided
          form pages.
        type: string
      formPageNumberMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `fromPageNumber` property
          is editable.
      handDrawRequired:
        description: Reserved for DocuSign.
        type: string
      height:
        description: Not applicable to Sign Here tab.
        type: string
      heightMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `height` property is editable.
      isSealSignTab:
        description:
          When **true,**  the tab contains a visual representation for
          an electronic seal in a document.
        type: string
      mergeField:
        "$ref": "#/definitions/mergeField"
        description:
          Contains the information necessary to map the tab to a field
          in SalesForce.
      mergeFieldXml:
        description: Reserved for DocuSign.
        type: string
      name:
        description: |
          The name of the tab. For example, `Sign Here` or `Initial Here`.

          If the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.
        type: string
      nameMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `name` property is editable.
          This property is read-only.
      optional:
        description:
          When **true,** the recipient does not need to complete this tab
          to complete the signing process.
        type: string
      optionalMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `optional` property is editable.
      pageNumber:
        description: |
          Specifies the page number on which the tab is located.
          Must be 1 for supplemental documents.
        type: string
      pageNumberMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `pageNumber` property is
          editable.
      recipientId:
        description:
          "The ID of the recipient to whom the tab will be assigned. This
          value should match the `recipientId` defined in the recipient object.

          "
        type: string
      recipientIdGuid:
        description:
          The globally-unique identifier (GUID) for a specific recipient
          on a specific envelope. If the same recipient is associated with multiple
          envelopes, they will have a different GUID for each one. This property is
          read-only.
        type: string
      recipientIdGuidMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `recipientIdGuid` property
          is editable.
      recipientIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `recipientId` property is
          editable.
      scaleValue:
        description:
          Scales the size of the tab. This field accepts values from 0.5
          to 2.0, where  0.5 is half the normal size, 1.0 is normal size, and 2.0
          is twice the normal size.
        type: string
      scaleValueMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `scaleValue` property is
          editable.
      smartContractInformation:
        "$ref": "#/definitions/smartContractInformation"
        description: Reserved for DocuSign.
      source:
        description: Reserved for DocuSign.
        type: string
      stamp:
        "$ref": "#/definitions/stamp"
        description: ""
      stampType:
        description: |-
          The type of stamp. Valid values are:

          - `signature`: A signature image. This is the default value.
          - `stamp`: A stamp image.
          - null
        type: string
      stampTypeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `stampType` property is editable.
      status:
        description: |
          The status of the tab. Possible values are:

          - `active`: The tab is active, but the recipient has not yet interacted with it.
          - `signed`: The recipient signed the tab.
          - `declined`: The recipient declined the envelope.
          - `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).
        type: string
      statusMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `status` property is editable.
      tabGroupLabels:
        description: |-
          An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.

          To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
        type: array
        items:
          type: string
      tabGroupLabelsMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `tabGroupLabels` property
          is editable.
      tabId:
        description: The unique identifier for the tab.
        type: string
      tabIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabId` property is editable.
      tabLabel:
        description: |
          The label associated with the tab. This value may be an empty string.
          If no value is provided, the tab type is used as the value.

          Maximum Length: 500 characters.
        type: string
      tabLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabLabel` property is editable.
      tabOrder:
        description: |-
          A positive integer that sets the order the tab is navigated to during signing.

          Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
        type: string
      tabOrderMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabOrder` property is editable.
      tabType:
        description: Indicates the type of tab (for example, `signHere` or `initialHere`).
        type: string
      tabTypeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabType` property is editable.
      templateLocked:
        description:
          "When **true,** the sender cannot change any attributes of the
          recipient. Used only when working with template recipients. "
        type: string
      templateLockedMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `templateLocked` property
          is editable.
      templateRequired:
        description:
          When **true,** the sender may not remove the recipient. Used
          only when working with template recipients.
        type: string
      templateRequiredMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `templateRequired` property
          is editable.
      tooltip:
        description:
          "The text of a tooltip that appears when a user hovers over a
          form field or tab.

          "
        type: string
      toolTipMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          "Metadata that indicates whether the `toolTip` property is editable.

          "
      width:
        description: Not applicable to Sign Here tab.
        type: string
      widthMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `width` property is editable.
      xPosition:
        description: |
          This property indicates the horizontal offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. Must be an integer. May be zero.

          To improve the tab's position on the document,
          DocuSign recommends
          adjusting `xPosition`
          and `yPosition`
          coordinates
          by (+1, -7)
        type: string
      xPositionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `xPosition` property is editable.
      yPosition:
        description: |
          This property indicates the vertical offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. Must be an integer. May be zero.

          To improve the tab's position on the document,
          DocuSign recommends
          adjusting `xPosition`
          and `yPosition`
          coordinates
          by (+1, -7)
        type: string
      yPositionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `yPosition` property is editable.
    description: |
      A tab that allows the recipient to sign a document. May be
      optional.
    x-ds-definition-name: signHere
    x-ms-summary: |
      A tab that allows the recipient to sign a document. May be
      optional.
  signingGroup:
    type: object
    properties:
      created:
        description:
          The UTC DateTime when the signing group was created. This property
          is read-only.
        type: string
      createdBy:
        description:
          The name of the user who created the signing group. This property
          is read-only.
        type: string
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      groupEmail:
        description:
          The email address for the signing group. You can use a group
          email address to email all of the group members at the same time.
        type: string
      groupName:
        description: The name of the group.
        type: string
      groupType:
        description:
          The type of the group. The only valid value for this request
          is `sharedSigningGroup`.
        type: string
      modified:
        description:
          The UTC DateTime when the signing group was last modified. This
          property is read-only.
        type: string
      modifiedBy:
        description:
          The user ID (GUID) of the user who last modified this user record.
          This property is read-only.
        type: string
      signingGroupId:
        description:
          "The ID of the [signing group](https://support.docusign.com/s/document-item?bundleId=gav1643676262430&topicId=zgn1578456447934.html).

          "
        type: string
      users:
        description: User management information.
        type: array
        items:
          "$ref": "#/definitions/signingGroupUser"
    description:
      Contains details about a signing group. Signing groups enable you
      to send an envelope to a predefined group of recipients and have any one member
      of the group sign your documents. When you send an envelope to a signing group,
      anyone in the group can open it and sign it with their own signature.
    x-ds-definition-name: signingGroup
    x-ms-summary:
      Contains details about a signing group. Signing groups enable you
      to send an envelope to a predefined group of recipients and have any one member
      of the group sign your documents. When you send an envelope to a signing group,
      anyone in the group can open it and sign it with their own signature.
  signingGroupInformation:
    type: object
    properties:
      groups:
        description: A collection group objects containing information about the groups.
        type: array
        items:
          "$ref": "#/definitions/signingGroup"
    x-ds-definition-name: signingGroupInformation
    description: ""
    x-ms-summary: ""
  signingGroupUser:
    type: object
    properties:
      email:
        description: ""
        type: string
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      userName:
        description: "The name of the group member. \n\nMaximum Length: 100 characters. "
        type: string
    x-ds-definition-name: signingGroupUser
    description: ""
    x-ms-summary: ""
  signingGroupUsers:
    type: object
    properties:
      users:
        description: User management information.
        type: array
        items:
          "$ref": "#/definitions/signingGroupUser"
    x-ds-definition-name: signingGroupUsers
    description: ""
    x-ms-summary: ""
  smartContractInformation:
    type: object
    properties:
      code:
        description: Reserved for DocuSign.
        type: string
      uri:
        description: Reserved for DocuSign.
        type: string
    x-ds-definition-name: smartContractInformation
    description: ""
    x-ms-summary: ""
  smartSection:
    type: object
    properties:
      anchorAllowWhiteSpaceInCharacters:
        description: |
          When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.

          First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.

          Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.

          The default value is **true.**
        type: string
      anchorAllowWhiteSpaceInCharactersMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorAllowWhiteSpaceInCharacters`
          property is editable.
      anchorCaseSensitive:
        description: |-
          This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**

          For example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.

          This functionality uses the following rules:

          - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:

            $~><|^+=

            For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`

          - Strings embedded in other strings are ignored during the matching process.

          - In words that have dashes, the parts separated by dashes are treated as distinct words.

            Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**

          - Letters with accent marks are treated as distinct characters from their unaccented counterparts.

          - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.

            Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.

          - Unlike punctuation, numbers are not ignored when finding anchor words.

            Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).

          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorCaseSensitiveMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorCaseSensitive` property
          is editable.
      anchorHorizontalAlignment:
        description: |
          This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :

          - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.
          - `right`: Aligns the tab’s left side with the last character of the matching anchor word.

          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorHorizontalAlignmentMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorHorizontalAlignment`
          property is editable.
      anchorIgnoreIfNotPresent:
        description:
          When **true,** this tab is ignored if the `anchorString` is not
          found in the document.
        type: string
      anchorIgnoreIfNotPresentMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorIgnoreIfNotPresent`
          property is editable.
      anchorMatchWholeWord:
        description: |
          When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**

          For example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.

          This functionality uses the following rules:

          - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:

            $~><|^+=

            For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`

          - Strings embedded in other strings are ignored during the matching process.

          - In words that have dashes, the parts separated by dashes are treated as distinct words.

            Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**

          - Letters with accent marks are treated as distinct characters from their unaccented counterparts.

          - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.

            Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.

          - Unlike punctuation, numbers are not ignored when finding anchor words.

            Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).


          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorMatchWholeWordMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorMatchWholeWord` property
          is editable.
      anchorString:
        description:
          Specifies the string to find in the document and use as the basis
          for tab placement.
        type: string
      anchorStringMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorString` property is
          editable.
      anchorTabProcessorVersion:
        description: Reserved for DocuSign.
        type: string
      anchorTabProcessorVersionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Reserved for DocuSign.
      anchorUnits:
        description: |
          Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:

          - `pixels` (default)
          - `inches`
          - `mms`
          - `cms`
        type: string
      anchorUnitsMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorUnits` property is
          editable.
      anchorXOffset:
        description:
          "Specifies the X axis location of the tab in `anchorUnits` relative
          to the `anchorString`.

          "
        type: string
      anchorXOffsetMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorXOffset` property
          is editable.
      anchorYOffset:
        description:
          "Specifies the Y axis location of the tab in `anchorUnits` relative
          to the `anchorString`.

          "
        type: string
      anchorYOffsetMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorYOffset` property
          is editable.
      caption:
        description: ""
        type: string
      captionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `caption` property is editable.
      caseSensitive:
        description:
          When **true,** the `startAnchor` and `endAnchor` for the Smart
          Section must match both the case and the content of the strings in the HTML.
        type: boolean
      conditionalParentLabel:
        description:
          For conditional fields this is the `tabLabel` of the parent tab
          that controls this tab's visibility.
        type: string
      conditionalParentLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `conditionalParentLabel`
          property is editable.
      conditionalParentValue:
        description: |
          For conditional fields, this is the value of the parent tab that controls the tab's visibility.

          If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use "on" as the value to show that the parent tab is active.
        type: string
      conditionalParentValueMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `conditionalParentValue`
          property is editable.
      customTabId:
        description:
          The DocuSign generated custom tab ID for the custom tab to be
          applied. This can only be used when adding new tabs for a recipient. When
          used, the new tab inherits all the custom tab properties.
        type: string
      customTabIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `customTabId` property is
          editable.
      displaySettings:
        "$ref": "#/definitions/smartSectionDisplaySettings"
        description:
          This object defines how the HTML section inside the `startAnchor`
          and `endAnchor` displays.
      documentId:
        description:
          Specifies the document ID number that the tab is placed on. This
          must refer to an existing Document's ID attribute.
        type: string
      documentIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `documentId` property is
          editable.
      endAnchor:
        description: |-
          Specifies the end of the area in the HTML where the display settings will be applied. If you do not specify an end anchor, the end of the document will be used by default.

          **Note:** A start anchor, an end anchor, or both are required.
        type: string
      endPosition:
        "$ref": "#/definitions/smartSectionAnchorPosition"
        description: "The last index position in the result set. "
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      formOrder:
        description:
          An integer specifying the order in which the guided form HTML
          should render. The order is relative to the `formPageLabel`, the group by
          which to place the guided form HTML block.
        type: string
      formOrderMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `formOrder` property is editable.
      formPageLabel:
        description:
          A string specifying the group in which to place the guided form
          HTML. Each group displays as a separate guided forms page in the signing
          experience.
        type: string
      formPageLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `formPageLabel` property
          is editable.
      formPageNumber:
        description:
          An integer specifying the order in which to present the guided
          form pages.
        type: string
      formPageNumberMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `fromPageNumber` property
          is editable.
      height:
        description: |-
          The height of the tab in pixels.
          Must be an integer.
        type: string
      heightMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `height` property is editable.
      locked:
        description:
          When **true,** the signer cannot change the data of the custom
          tab.
        type: string
      lockedMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `locked` property is editable.
      mergeField:
        "$ref": "#/definitions/mergeField"
        description:
          Contains the information necessary to map the tab to a field
          in SalesForce.
      mergeFieldXml:
        description: Reserved for DocuSign.
        type: string
      overlayType:
        description: |
          The type of overlay to draw on the document. The following overlay types are supported:

          - `line`
          - `outline`
        type: string
      overlayTypeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `overlayType` property is
          editable.
      pageNumber:
        description: Specifies the page number on which the tab is located.
        type: string
      pageNumberMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `pageNumber` property is
          editable.
      recipientId:
        description:
          "The ID of the recipient to whom the tab will be assigned. This
          value should match the `recipientId` defined in the recipient object.

          "
        type: string
      recipientIdGuid:
        description:
          The globally-unique identifier (GUID) for a specific recipient
          on a specific envelope. If the same recipient is associated with multiple
          envelopes, they will have a different GUID for each one. This property is
          read-only.
        type: string
      recipientIdGuidMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `recipientIdGuid` property
          is editable.
      recipientIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `recipientId` property is
          editable.
      removeEndAnchor:
        description:
          When **true,** removes the end anchor string for the Smart Section
          from the HTML, preventing it from displaying.
        type: boolean
      removeStartAnchor:
        description:
          When **true,** removes the start anchor string for the Smart
          Section from the HTML, preventing it from displaying.
        type: boolean
      shared:
        description: When **true,** this custom tab is shared.
        type: string
      sharedMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `shared` property is editable.
      smartContractInformation:
        "$ref": "#/definitions/smartContractInformation"
        description: Reserved for DocuSign.
      source:
        description: Reserved for DocuSign.
        type: string
      startAnchor:
        description: |-
          Specifies the beginning of the area in the HTML where the display settings will be applied. If you do not specify a start anchor, the beginning of the document will be used by default.

          **Note:** A start anchor, an end anchor, or both are required.
        type: string
      startPosition:
        "$ref": "#/definitions/smartSectionAnchorPosition"
        description: The starting index position of the current result set.
      status:
        description: |-
          The status of the tab. Possible values are:

          - `active`: The tab is active, but the recipient has not yet interacted with it.
          - `signed`: The recipient signed the tab.
          - `declined`: The recipient declined the envelope.
          - `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).
        type: string
      statusMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `status` property is editable.
      tabGroupLabels:
        description: |-
          An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.

          To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
        type: array
        items:
          type: string
      tabGroupLabelsMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `tabGroupLabels` property
          is editable.
      tabId:
        description: The unique identifier for the tab.
        type: string
      tabIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabId` property is editable.
      tabLabel:
        description: |
          The label associated with the tab. This value may be an empty string.
          If no value is provided, the tab type is used as the value.

          Maximum Length: 500 characters.
        type: string
      tabOrder:
        description: |-
          A positive integer that sets the order the tab is navigated to during signing.

          Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
        type: string
      tabOrderMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabOrder` property is editable.
      tabType:
        description: Indicates the type of tab (for example, `signHere` or `initialHere`).
        type: string
      tabTypeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabType` property is editable.
      templateLocked:
        description:
          "When **true,** the sender cannot change any attributes of the
          recipient. Used only when working with template recipients. "
        type: string
      templateLockedMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `templateLocked` property
          is editable.
      templateRequired:
        description:
          When **true,** the sender may not remove the recipient. Used
          only when working with template recipients.
        type: string
      templateRequiredMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `templateRequired` property
          is editable.
      tooltip:
        description:
          "The text of a tooltip that appears when a user hovers over a
          form field or tab.

          "
        type: string
      toolTipMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          "Metadata that indicates whether the `toolTip` property is editable.

          "
      width:
        description: |-
          The width of the tab in pixels.
          Must be an integer.
        type: string
      widthMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `width` property is editable.
      xPosition:
        description: |
          This property indicates the horizontal offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. Must be an integer. May be zero.
        type: string
      xPositionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `xPosition` property is editable.
      yPosition:
        description: |
          This property indicates the vertical offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. Must be an integer. May be zero.
        type: string
      yPositionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `yPosition` property is editable.
    x-ds-definition-name: smartSection
    description: ""
    x-ms-summary: ""
  smartSectionAnchorPosition:
    type: object
    properties:
      pageNumber:
        format: int32
        description: Specifies the page number on which the tab is located.
        type: integer
      xPosition:
        format: double
        description: |
          This property indicates the horizontal offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. Must be an integer. May be zero.
        type: number
      yPosition:
        format: double
        description: |
          This property indicates the vertical offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. Must be an integer. May be zero.
        type: number
    x-ds-definition-name: smartSectionAnchorPosition
    description: ""
    x-ms-summary: ""
  smartSectionCollapsibleDisplaySettings:
    type: object
    properties:
      arrowClosed:
        description: |
          Indicates the direction of the disclosure arrow
          when the collapsible section is in the closed state.

          One of the following:

          - `up`: In the closed state, the disclosure arrow points up.
          - `down`: In the closed state, the disclosure arrow points down.
          - `left`: In the closed state, the disclosure arrow points left.
          - `right`: In the closed state, the disclosure arrow points right.
        type: string
      arrowColor:
        description:
          "A CSS color value (such as `#DCF851`) that indicates the color
          of the arrow.

          "
        type: string
      arrowLocation:
        description: |
          The location of the arrow relative to the collapsible section's label. Possible values are:

          - `right` (default)
          - `left`
        type: string
      arrowOpen:
        description: |
          Indicates the direction of the disclosure arrow
          when the collapsible section is in the open state.

          One of the following:

          - `up`: In the open state, the disclosure arrow points up.
          - `down`: In the open state, the disclosure arrow points down.
          - `left`: In the open state, the disclosure arrow points left.
          - `right`: In the open state, the disclosure arrow points right.
        type: string
      arrowSize:
        description: |
          Indicates the size of the collapsible arrows. Possible values are:

          - `small`
          - `large` (default)
        type: string
      arrowStyle:
        description:
          "The name of the CSS style to be used on collapsible arrow section.

          "
        type: string
      containerStyle:
        description:
          "The name of the CSS style to be used for the collapsible container.

          "
        type: string
      labelStyle:
        description:
          The name of the CSS style to be used for the collapsible container's
          label.
        type: string
      onlyArrowIsClickable:
        description: |
          When **true,** only the arrow is clickable to expand or collapse the section.
          When **false** (the default), both the label and the arrow are clickable.

          If no arrow is used, this setting is ignored.
        type: boolean
      outerLabelAndArrowStyle:
        description:
          The name of the CSS style to be used for the collapsible container's
          outer label and arrow style.
        type: string
    x-ds-definition-name: smartSectionCollapsibleDisplaySettings
    description: ""
    x-ms-summary: ""
  smartSectionDisplaySettings:
    type: object
    properties:
      cellStyle:
        description:
          Specifies the valid CSS-formatted styles to use on responsive
          table cells. Only valid in display sections of `responsive_table` or `responsive_table_single_column`
          types.
        type: string
      collapsibleSettings:
        "$ref": "#/definitions/smartSectionCollapsibleDisplaySettings"
        description:
          This object defines the appearance and function of a collapsible
          section or item.
      display:
        description: |-
          Indicates the display type. Must be one of the following enum values:

          - **inline:** Leaves the HTML where it is in the document. This allows for adding a label or presenting on a separate page.
          - **collapsible:** The HTML in the section may be expanded or collapsed. By default, the section is expanded.
          - **collapsed:** The HTML in the section may be expanded or collapsed. By default, the section is collapsed.
          - **responsive_table:** Converts the section into a responsive table. Note that this style is applied only on HTML tables that fall within the `startAnchor` and `endAnchor` positions.
          - **responsive_table_single_column:** Converts the section into a responsive, single-column table. Note that this style is applied only on HTML tables that fall within the `startAnchor` and `endAnchor` positions. The table is converted to a single column in which each column becomes a row and is stacked.
          - **print_only:** Prevents this portion of the HTML from displaying in the responsive signing view.
        type: string
      displayLabel:
        description:
          "The label to add to this display section in the signing page.

          "
        type: string
      displayOrder:
        format: int32
        description: The position on the page where the display section appears.
        type: integer
      displayPageNumber:
        format: int32
        description: The number of the page on which the display section appears.
        type: integer
      hideLabelWhenOpened:
        description:
          When **true,** the `displayLabel` is hidden when the display
          section is expanded and the display section is no longer collapsible. This
          property is valid only when the value of the `display` property is `collapsed`.
        type: boolean
      inlineOuterStyle:
        description:
          Specifies the valid CSS-formatted styles to use on inline display
          sections. This property is valid only when the value of the `display` property
          is `inline`.
        type: string
      labelWhenOpened:
        description:
          The label for the display section when it is expanded from a
          collapsed state. This label displays only on the first opening and is only
          valid with the value of the `display` property is `collapsed`.
        type: string
      preLabel:
        description:
          Enables you to add descriptive text that appears before a collapsed
          section or continue button.
        type: string
      scrollToTopWhenOpened:
        description: |
          When **true** and the section is expanded,
          the position of the section-close control
          scrolls to the top of the screen. This property is only valid when the value of the `display` property is `collapsed`.
        type: boolean
      tableStyle:
        description:
          Specifies the valid CSS-formatted styles to use on responsive
          tables. This property is valid only when the value of the `display` property
          is `responsive_table` or `responsive_table_single_column`.
        type: string
    description:
      These properties define how a Smart Section displays. A Smart Section
      is a type of display section.
    x-ds-definition-name: smartSectionDisplaySettings
    x-ms-summary:
      These properties define how a Smart Section displays. A Smart Section
      is a type of display section.
  socialAccountInformation:
    type: object
    properties:
      email:
        description: The users email address.
        type: string
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      provider:
        description: The social account provider (Facebook, Yahoo, etc.)
        type: string
      socialId:
        description: The ID provided by the Socal Account.
        type: string
      userName:
        description: The full user name for the account.
        type: string
    x-ds-definition-name: socialAccountInformation
    description: ""
    x-ms-summary: ""
  socialAuthentication:
    type: object
    properties:
      authentication:
        description: Reserved for DocuSign.
        type: string
    x-ds-definition-name: socialAuthentication
    description: ""
    x-ms-summary: ""
  ssn:
    type: object
    properties:
      anchorAllowWhiteSpaceInCharacters:
        description: |
          When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.

          First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.

          Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.

          The default value is **true.**
        type: string
      anchorAllowWhiteSpaceInCharactersMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorAllowWhiteSpaceInCharacters`
          property is editable.
      anchorCaseSensitive:
        description: |-
          This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**

          For example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.

          This functionality uses the following rules:

          - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:

            $~><|^+=

            For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`

          - Strings embedded in other strings are ignored during the matching process.

          - In words that have dashes, the parts separated by dashes are treated as distinct words.

            Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**

          - Letters with accent marks are treated as distinct characters from their unaccented counterparts.

          - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.

            Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.

          - Unlike punctuation, numbers are not ignored when finding anchor words.

            Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).

          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorCaseSensitiveMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorCaseSensitive` property
          is editable.
      anchorHorizontalAlignment:
        description: |
          This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :

          - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.
          - `right`: Aligns the tab’s left side with the last character of the matching anchor word.

          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorHorizontalAlignmentMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorHorizontalAlignment`
          property is editable.
      anchorIgnoreIfNotPresent:
        description:
          When **true,** this tab is ignored if the `anchorString` is not
          found in the document.
        type: string
      anchorIgnoreIfNotPresentMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorIgnoreIfNotPresent`
          property is editable.
      anchorMatchWholeWord:
        description: |
          When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**

          For example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.

          This functionality uses the following rules:

          - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:

            $~><|^+=

            For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`

          - Strings embedded in other strings are ignored during the matching process.

          - In words that have dashes, the parts separated by dashes are treated as distinct words.

            Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**

          - Letters with accent marks are treated as distinct characters from their unaccented counterparts.

          - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.

            Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.

          - Unlike punctuation, numbers are not ignored when finding anchor words.

            Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).


          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorMatchWholeWordMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorMatchWholeWord` property
          is editable.
      anchorString:
        description:
          Specifies the string to find in the document and use as the basis
          for tab placement.
        type: string
      anchorStringMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorString` property is
          editable.
      anchorTabProcessorVersion:
        description: Reserved for DocuSign.
        type: string
      anchorTabProcessorVersionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Reserved for DocuSign.
      anchorUnits:
        description: |
          Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:

          - `pixels` (default)
          - `inches`
          - `mms`
          - `cms`
        type: string
      anchorUnitsMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorUnits` property is
          editable.
      anchorXOffset:
        description:
          "Specifies the X axis location of the tab in `anchorUnits` relative
          to the `anchorString`.

          "
        type: string
      anchorXOffsetMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorXOffset` property
          is editable.
      anchorYOffset:
        description:
          "Specifies the Y axis location of the tab in `anchorUnits` relative
          to the `anchorString`.

          "
        type: string
      anchorYOffsetMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorYOffset` property
          is editable.
      bold:
        description: When **true,** the information in the tab is bold.
        type: string
      boldMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `bold` property is editable.
      caption:
        description: ""
        type: string
      captionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `caption` property is editable.
      concealValueOnDocument:
        description: |-
          When **true,** the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.

          When an envelope is completed the information is only available to the sender through the Form Data link in the DocuSign Console. The information on the downloaded document remains masked by asterisks.

          This setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.
        type: string
      concealValueOnDocumentMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `concealValueOnDocument`
          property is editable.
      conditionalParentLabel:
        description:
          For conditional fields this is the `tabLabel` of the parent tab
          that controls this tab's visibility.
        type: string
      conditionalParentLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `conditionalParentLabel`
          property is editable.
      conditionalParentValue:
        description: |
          For conditional fields, this is the value of the parent tab that controls the tab's visibility.

          If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use "on" as the value to show that the parent tab is active.
        type: string
      conditionalParentValueMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `conditionalParentValue`
          property is editable.
      customTabId:
        description:
          The DocuSign generated custom tab ID for the custom tab to be
          applied. This can only be used when adding new tabs for a recipient. When
          used, the new tab inherits all the custom tab properties.
        type: string
      customTabIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `customTabId` property is
          editable.
      disableAutoSize:
        description:
          When **true,** disables the auto sizing of single line text boxes
          in the signing screen when the signer enters data. If disabled users will
          only be able enter as much data as the text box can hold. By default this
          is false. This property only affects single line text boxes.
        type: string
      disableAutoSizeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `disableAutoSize` property
          is editable.
      documentId:
        description:
          Specifies the document ID number that the tab is placed on. This
          must refer to an existing Document's ID attribute.
        type: string
      documentIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `documentId` property is
          editable.
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      font:
        description: |
          The font to be used for the tab value. Supported fonts include:

          - Default
          - Arial
          - ArialNarrow
          - Calibri
          - CourierNew
          - Garamond
          - Georgia
          - Helvetica
          - LucidaConsole
          - MSGothic
          - MSMincho
          - OCR-A
          - Tahoma
          - TimesNewRoman
          - Trebuchet
          - Verdana
        type: string
      fontColor:
        description:
          "The font color to use for the information in the tab. Possible
          values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n-
          Gold\n- Green\n- NavyBlue\n- Purple\n- White\n"
        type: string
      fontColorMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `fontColor` property is editable.
      fontMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `font` property is editable.
      fontSize:
        description: |-
          The font size used for the information in the tab. Possible values are:

          - Size7
          - Size8
          - Size9
          - Size10
          - Size11
          - Size12
          - Size14
          - Size16
          - Size18
          - Size20
          - Size22
          - Size24
          - Size26
          - Size28
          - Size36
          - Size48
          - Size72
        type: string
      fontSizeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `fontSize` property is editable.
      formOrder:
        description:
          An integer specifying the order in which the guided form HTML
          should render. The order is relative to the `formPageLabel`, the group by
          which to place the guided form HTML block.
        type: string
      formOrderMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `formOrder` property is editable.
      formPageLabel:
        description:
          A string specifying the group in which to place the guided form
          HTML. Each group displays as a separate guided forms page in the signing
          experience.
        type: string
      formPageLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `formPageLabel` property
          is editable.
      formPageNumber:
        description:
          An integer specifying the order in which to present the guided
          form pages.
        type: string
      formPageNumberMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `fromPageNumber` property
          is editable.
      height:
        description: |-
          The height of the tab in pixels.
          Must be an integer.
        type: string
      heightMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `height` property is editable.
      italic:
        description: When **true,** the information in the tab is italic.
        type: string
      italicMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `italic` property is editable.
      localePolicy:
        "$ref": "#/definitions/localePolicyTab"
        description: Locale-specific settings.
      locked:
        description:
          When **true,** the signer cannot change the data of the custom
          tab.
        type: string
      lockedMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `locked` property is editable.
      maxLength:
        description:
          An optional value that describes the maximum length of the property
          when the property is a string.
        type: string
      maxLengthMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `maxLength` property is editable.
      mergeField:
        "$ref": "#/definitions/mergeField"
        description:
          Contains the information necessary to map the tab to a field
          in SalesForce.
      mergeFieldXml:
        description: Reserved for DocuSign.
        type: string
      name:
        description: |-
          The name of the tab. For example, `Sign Here` or `Initial Here`.

          If the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.
        type: string
      nameMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `name` property is editable.
          This property is read-only.
      originalValue:
        description: "The initial value of the tab. "
        type: string
      originalValueMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `originalValue` property
          is editable.
      pageNumber:
        description:
          The page number on which the tab is located. For supplemental
          documents, this value must be `1`.
        type: string
      pageNumberMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `pageNumber` property is
          editable.
      recipientId:
        description:
          "The ID of the recipient to whom the tab will be assigned. This
          value should match the `recipientId` defined in the recipient object.

          "
        type: string
      recipientIdGuid:
        description:
          The globally-unique identifier (GUID) for a specific recipient
          on a specific envelope. If the same recipient is associated with multiple
          envelopes, they will have a different GUID for each one. This property is
          read-only.
        type: string
      recipientIdGuidMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `recipientIdGuid` property
          is editable.
      recipientIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `recipientId` property is
          editable.
      requireAll:
        description:
          "When **true** and shared is true, information must be entered
          in this field to complete the envelope. "
        type: string
      requireAllMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `requireAll` property is
          editable.
      required:
        description: When **true,** the signer is required to fill out this tab.
        type: string
      requiredMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `required` property is editable.
      requireInitialOnSharedChange:
        description:
          Optional element for field markup. When **true,** the signer
          is required to initial when they modify a shared field.
        type: string
      requireInitialOnSharedChangeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `requireInitialOnSharedChange`
          property is editable.
      senderRequired:
        description:
          "When **true,** the sender must populate the tab before an envelope
          can be sent using the template. \n\nThis value tab can only be changed by
          modifying (PUT) the template. \n\nTabs with a `senderRequired` value of
          true cannot be deleted from an envelope."
        type: string
      senderRequiredMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `senderRequired` property
          is editable.
      shared:
        description: When **true,** this custom tab is shared.
        type: string
      sharedMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `shared` property is editable.
      shareToRecipients:
        description: Reserved for DocuSign.
        type: string
      shareToRecipientsMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Reserved for DocuSign.
      smartContractInformation:
        "$ref": "#/definitions/smartContractInformation"
        description: Reserved for DocuSign.
      source:
        description: Reserved for DocuSign.
        type: string
      status:
        description: |
          The status of the tab. Possible values are:

          - `active`: The tab is active, but the recipient has not yet interacted with it.
          - `signed`: The recipient signed the tab.
          - `declined`: The recipient declined the envelope.
          - `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).
        type: string
      statusMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `status` property is editable.
      tabGroupLabels:
        description: |-
          An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.

          To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
        type: array
        items:
          type: string
      tabGroupLabelsMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `tabGroupLabels` property
          is editable.
      tabId:
        description: The unique identifier for the tab.
        type: string
      tabIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabId` property is editable.
      tabLabel:
        description: |
          The label associated with the tab. This value may be an empty string.
          If no value is provided, the tab type is used as the value.

          Maximum Length: 500 characters.
        type: string
      tabLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabLabel` property is editable.
      tabOrder:
        description: |-
          A positive integer that sets the order the tab is navigated to during signing.

          Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
        type: string
      tabOrderMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabOrder` property is editable.
      tabType:
        description: Indicates the type of tab (for example, `signHere` or `initialHere`).
        type: string
      tabTypeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabType` property is editable.
      templateLocked:
        description:
          "When **true,** the sender cannot change any attributes of the
          recipient. Used only when working with template recipients. "
        type: string
      templateLockedMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `templateLocked` property
          is editable.
      templateRequired:
        description:
          When **true,** the sender may not remove the recipient. Used
          only when working with template recipients.
        type: string
      templateRequiredMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `templateRequired` property
          is editable.
      tooltip:
        description:
          "The text of a tooltip that appears when a user hovers over a
          form field or tab.

          "
        type: string
      toolTipMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          "Metadata that indicates whether the `toolTip` property is editable.

          "
      underline:
        description: When **true,** the information in the tab is underlined.
        type: string
      underlineMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `underline` property is editable.
      validationMessage:
        description:
          The message displayed if the custom tab fails input validation
          (either custom of embedded).
        type: string
      validationMessageMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `validationMessage` property
          is editable.
      validationPattern:
        description: A regular expression used to validate input for the tab.
        type: string
      validationPatternMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `validationPattern` property
          is editable.
      value:
        description: "Specifies the value of the tab. "
        type: string
      valueMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `value` property is editable.
      width:
        description: |-
          The width of the tab in pixels.
          Must be an integer.
        type: string
      widthMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `width` property is editable.
      xPosition:
        description: |
          This property indicates the horizontal offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. Must be an integer. May be zero.

          To improve the tab's position on the document,
          DocuSign recommends
          adjusting `xPosition`
          and `yPosition`
          coordinates
          by (-3, -2)
        type: string
      xPositionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `xPosition` property is editable.
      yPosition:
        description: |
          This property indicates the vertical offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. Must be an integer. May be zero.

          To improve the tab's position on the document,
          DocuSign recommends
          adjusting `xPosition`
          and `yPosition`
          coordinates
          by (-3, -2)
        type: string
      yPositionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `yPosition` property is editable.
    description: |
      A one-line field that allows the recipient to enter a Social
      Security Number. The SSN can be typed with or without
      dashes. It uses the same parameters as a Text tab, with the
      validation message and pattern set for SSN information.
    x-ds-definition-name: ssn
    x-ms-summary: |
      A one-line field that allows the recipient to enter a Social
      Security Number. The SSN can be typed with or without
      dashes. It uses the same parameters as a Text tab, with the
      validation message and pattern set for SSN information.
  ssn4InformationInput:
    type: object
    properties:
      displayLevelCode:
        description: |-
          Specifies the display level for the recipient. Valid values are:
          * `ReadOnly`
          * `Editable`
          * `DoNotDisplay`
        type: string
      receiveInResponse:
        description:
          A Boolean value that specifies whether the information must be
          returned in the response.
        type: string
      ssn4:
        description:
          The last four digits of the recipient's Social Security Number
          (SSN).
        type: string
    x-ds-definition-name: ssn4InformationInput
    description: ""
    x-ms-summary: ""
  ssn9InformationInput:
    type: object
    properties:
      displayLevelCode:
        description: |-
          Specifies the display level for the recipient. Valid values are:
          * `ReadOnly`
          * `Editable`
          * `DoNotDisplay`
        type: string
      ssn9:
        description: The recipient's full Social Security Number (SSN).
        type: string
    x-ds-definition-name: ssn9InformationInput
    description: ""
    x-ms-summary: ""
  stamp:
    type: object
    properties:
      adoptedDateTime:
        description: The UTC date and time when the user adopted the signature.
        type: string
      createdDateTime:
        description: The UTC DateTime when the item was created.
        type: string
      customField:
        description: ""
        type: string
      dateStampProperties:
        "$ref": "#/definitions/dateStampProperties"
        description: |-
          Specifies the area in which a date stamp is placed. This parameter uses pixel positioning to draw a rectangle at the center of the stamp area. The stamp is superimposed on top of this central area.

          This property contains the following information about the central rectangle:

          - `DateAreaX`: The X axis position of the top-left corner.
          - `DateAreaY`: The Y axis position of the top-left corner.
          - `DateAreaWidth`: The width of the rectangle.
          - `DateAreaHeight`: The height of the rectangle.
      disallowUserResizeStamp:
        description: When **true,** users may not resize the stamp.
        type: string
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      externalID:
        description: Optionally specify an external identifier for the user's signature.
        type: string
      imageBase64:
        description: ""
        type: string
      imageType:
        description: |-
          Specificies the type of image. Valid values:

          - `stamp_image`
          - `signature_image`
          - `initials_image`
        type: string
      lastModifiedDateTime:
        description: The date and time that the item was last modified.
        type: string
      phoneticName:
        description: The phonetic spelling of the `signatureName`.
        type: string
      signatureName:
        description: Specifies the user's signature name.
        type: string
      stampFormat:
        description:
          "The format of a stamp. Valid values are:\n\n- `NameHanko`: The
          stamp represents only the signer's name.\n- `NameDateHanko`: The stamp represents
          the signer's name and the date. "
        type: string
      stampImageUri:
        description: The URI for retrieving the image of the user's stamp.
        type: string
      stampSizeMM:
        description:
          The physical height of the stamp image (in millimeters) that
          the stamp vendor recommends for displaying the image in PDF documents.
        type: string
      status:
        description:
          "Indicates the envelope status. Valid values are:\n\n* sent -
          The envelope is sent to the recipients. \n* created - The envelope is saved
          as a draft and can be modified and sent later."
        type: string
    x-ds-definition-name: stamp
    description: ""
    x-ms-summary: ""
  supportedLanguages:
    type: object
    properties:
      languages:
        description: |-
          A list of languages that you can use for a recipient's language setting. These are the languages that you can set for the standard email format and signing view for each recipient.

          For example, in the recipient's email notification, this setting affects elements such as the standard introductory text describing the request to sign. It also determines the language used for buttons and tabs in both the email notification and the signing experience.

          **Note:** Setting a language for a recipient affects only the DocuSign standard text. Any custom text that you enter for the `emailBody` and `emailSubject` of the notification is not translated, and appears exactly as you enter it.

          Example:

          ```
          {
              "languages": [
                  {
                      "name": "Arabic (ar)",
                      "value": "ar"
                  },
                  {
                      "name": "Bulgarian (bg)",
                      "value": "bg"
                  },
                  .
                  .
                  .
          }
          ```
        type: array
        items:
          "$ref": "#/definitions/nameValue"
    description: A list of supported languages.
    x-ds-definition-name: supportedLanguages
    x-ms-summary: A list of supported languages.
  tabAccountSettings:
    type: object
    properties:
      allowTabOrder:
        description: |-
          When **true,** account users can set a tab order for the signing process.

          **Note:** Only Admin users can change this setting.
        type: string
      allowTabOrderMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `allowTabOrder` property
          is editable.

          "
      approveDeclineTabsEnabled:
        description: When **true,** approve and decline tabs are enabled.
        type: string
      approveDeclineTabsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `approveDeclineTabs` property
          is editable.

          "
      calculatedFieldsEnabled:
        description:
          When **true,** [calculated fields](https://support.docusign.com/s/document-item?bundleId=gbo1643332197980&topicId=crs1578456361259.html)
          are enabled for tabs.
        type: string
      calculatedFieldsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `calculatedFields` property
          is editable.

          "
      checkboxTabsEnabled:
        description: When **true,** checkbox tabs are enabled.
        type: string
      checkBoxTabsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          Metadata that indicates whether the `checkBoxTabs` property is
          editable.
      dataFieldRegexEnabled:
        description:
          When **true,** regular expressions are enabled for tabs that
          contain data fields.
        type: string
      dataFieldRegexMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `dataFieldRegex` property
          is editable.

          "
      dataFieldSizeEnabled:
        description: When **true,** setting character limits for input fields is enabled.
        type: string
      dataFieldSizeMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `dataFieldSize` property
          is editable.

          "
      drawTabsEnabled:
        description: ""
        type: string
      drawTabsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      firstLastEmailTabsEnabled:
        description: Reserved for DocuSign.
        type: string
      firstLastEmailTabsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: Reserved for DocuSign.
      listTabsEnabled:
        description: When **true,** list tabs are enabled.
        type: string
      listTabsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `listTabs` property is editable.

          "
      noteTabsEnabled:
        description: When **true,** note tabs are enabled.
        type: string
      noteTabsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `noteTabs` property is editable.

          "
      numericalTabsEnabled:
        description: ""
        type: string
      numericalTabsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      prefillTabsEnabled:
        description: ""
        type: string
      prefillTabsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      radioTabsEnabled:
        description: When **true,** radio button tabs are enabled.
        type: string
      radioTabsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `radioTabs` property is
          editable.

          "
      savingCustomTabsEnabled:
        description: When **true,** saving custom tabs is enabled.
        type: string
      savingCustomTabsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `savingCustomTabs` property
          is editable.

          "
      senderToChangeTabAssignmentsEnabled:
        description: Reserved for DocuSign.
        type: string
      senderToChangeTabAssignmentsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: Reserved for DocuSign.
      sharedCustomTabsEnabled:
        description: When **true,** shared custom tabs are enabled.
        type: string
      sharedCustomTabsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `sharedCustomTabs` property
          is editable.

          "
      tabDataLabelEnabled:
        description: |
          When **true,** [data
          labels](https://support.docusign.com/en/videos/Data-Labels) are enabled.

          **Note:** Only Admin users can change this setting.
        type: string
      tabDataLabelMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `tabDataLabel` property
          is editable.

          "
      tabLocationEnabled:
        description: Reserved for DocuSign.
        type: string
      tabLocationMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: Reserved for DocuSign.
      tabLockingEnabled:
        description: |
          When **true,** tab locking is enabled.

          **Note:** Only Admin users can change this setting.
        type: string
      tabLockingMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `tabLocking` property is
          editable.

          "
      tabScaleEnabled:
        description: Reserved for DocuSign.
        type: string
      tabScaleMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: Reserved for DocuSign.
      tabTextFormattingEnabled:
        description: |
          When **true,** text formatting (such as font type, font size,
          font color, bold, italic, and underline) is enabled for tabs that
          support formatting.

          **Note:** Only Admin users can change this setting.
        type: string
      tabTextFormattingMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `tabTextFormatting` property
          is editable.

          "
      textTabsEnabled:
        description: When **true,** text tabs are enabled.
        type: string
      textTabsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `textTabs` property is editable.

          "
    x-ds-definition-name: tabAccountSettings
    description: ""
    x-ms-summary: ""
  tabGroup:
    type: object
    properties:
      anchorAllowWhiteSpaceInCharacters:
        description: |
          When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.

          First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.

          Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.

          The default value is **true.**
        type: string
      anchorAllowWhiteSpaceInCharactersMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorAllowWhiteSpaceInCharacters`
          property is editable.
      anchorCaseSensitive:
        description: |-
          This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**

          For example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.

          This functionality uses the following rules:

          - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:

            $~><|^+=

            For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`

          - Strings embedded in other strings are ignored during the matching process.

          - In words that have dashes, the parts separated by dashes are treated as distinct words.

            Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**

          - Letters with accent marks are treated as distinct characters from their unaccented counterparts.

          - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.

            Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.

          - Unlike punctuation, numbers are not ignored when finding anchor words.

            Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).

          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorCaseSensitiveMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorCaseSensitive` property
          is editable.
      anchorHorizontalAlignment:
        description: |
          This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :

          - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.
          - `right`: Aligns the tab’s left side with the last character of the matching anchor word.

          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorHorizontalAlignmentMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorHorizontalAlignment`
          property is editable.
      anchorIgnoreIfNotPresent:
        description:
          When **true,** this tab is ignored if the `anchorString` is not
          found in the document.
        type: string
      anchorIgnoreIfNotPresentMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorIgnoreIfNotPresent`
          property is editable.
      anchorMatchWholeWord:
        description: |
          When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**

          For example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.

          This functionality uses the following rules:

          - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:

            $~><|^+=

            For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`

          - Strings embedded in other strings are ignored during the matching process.

          - In words that have dashes, the parts separated by dashes are treated as distinct words.

            Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**

          - Letters with accent marks are treated as distinct characters from their unaccented counterparts.

          - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.

            Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.

          - Unlike punctuation, numbers are not ignored when finding anchor words.

            Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).


          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorMatchWholeWordMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorMatchWholeWord` property
          is editable.
      anchorString:
        description:
          Specifies the string to find in the document and use as the basis
          for tab placement.
        type: string
      anchorStringMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorString` property is
          editable.
      anchorTabProcessorVersion:
        description: Reserved for DocuSign.
        type: string
      anchorTabProcessorVersionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Reserved for DocuSign.
      anchorUnits:
        description: |
          Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:

          - `pixels` (default)
          - `inches`
          - `mms`
          - `cms`
        type: string
      anchorUnitsMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorUnits` property is
          editable.
      anchorXOffset:
        description:
          "Specifies the X axis location of the tab in `anchorUnits` relative
          to the `anchorString`.

          "
        type: string
      anchorXOffsetMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorXOffset` property
          is editable.
      anchorYOffset:
        description:
          "Specifies the Y axis location of the tab in `anchorUnits` relative
          to the `anchorString`.

          "
        type: string
      anchorYOffsetMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorYOffset` property
          is editable.
      caption:
        description: ""
        type: string
      captionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `caption` property is editable.
      conditionalParentLabel:
        description:
          For conditional fields this is the `tabLabel` of the parent tab
          that controls this tab's visibility.
        type: string
      conditionalParentLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `conditionalParentLabel`
          property is editable.
      conditionalParentValue:
        description: |
          For conditional fields, this is the value of the parent tab that controls the tab's visibility.

          If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use "on" as the value to show that the parent tab is active.
        type: string
      conditionalParentValueMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `conditionalParentValue`
          property is editable.
      customTabId:
        description:
          The DocuSign generated custom tab ID for the custom tab to be
          applied. This can only be used when adding new tabs for a recipient. When
          used, the new tab inherits all the custom tab properties.
        type: string
      customTabIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `customTabId` property is
          editable.
      documentId:
        description:
          Specifies the document ID number that the tab is placed on. This
          must refer to an existing Document's ID attribute.
        type: string
      documentIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `documentId` property is
          editable.
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      formOrder:
        description:
          An integer specifying the order in which the guided form HTML
          should render. The order is relative to the `formPageLabel`, the group by
          which to place the guided form HTML block.
        type: string
      formOrderMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `formOrder` property is editable.
      formPageLabel:
        description:
          A string specifying the group in which to place the guided form
          HTML. Each group displays as a separate guided forms page in the signing
          experience.
        type: string
      formPageLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `formPageLabel` property
          is editable.
      formPageNumber:
        description:
          An integer specifying the order in which to present the guided
          form pages.
        type: string
      formPageNumberMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `fromPageNumber` property
          is editable.
      groupLabel:
        description:
          A unique identifier for a tab group. To assign a tab to the `tabGroup`,
          you assign the `TabGroupLabel` to the `tab.TabGroupLabels` array.
        type: string
      groupLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `groupLabel` property is
          editable.
      groupRule:
        description: |+
          Specifies how `maximumAllowed` and `minimumRequired`
          are interpreted when selecting tabs in a `tabGroup`.

          Possible values are:

          - `SelectAtLeast`
          - `SelectAtMost`
          - `SelectExactly`
          - `SelectARange`

        type: string
      groupRuleMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `groupRule` property is editable.
      height:
        description: |-
          The height of the tab in pixels.
          Must be an integer.
        type: string
      heightMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `height` property is editable.
      maximumAllowed:
        description:
          The maximum number of tabs within the `tabGroup` that should
          be checked, populated, or signed. This property is used for validation.
        type: string
      maximumAllowedMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `maximumAllowed` property
          is editable.
      mergeField:
        "$ref": "#/definitions/mergeField"
        description:
          Contains the information necessary to map the tab to a field
          in SalesForce.
      mergeFieldXml:
        description: Reserved for DocuSign.
        type: string
      minimumRequired:
        description:
          The minimum number of of tabs within the `tabGroup` that should
          be checked, populated, or signed. This property is used for validation.
        type: string
      minimumRequiredMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `minimumRequired` property
          is editable.
      pageNumber:
        description: Specifies the page number on which the tab is located.
        type: string
      pageNumberMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `pageNumber` property is
          editable.
      recipientId:
        description:
          "The ID of the recipient to whom the tab group will be assigned.
          This value should match the `recipientId` defined in the recipient object.

          "
        type: string
      recipientIdGuid:
        description:
          The globally-unique identifier (GUID) for a specific recipient
          on a specific envelope. If the same recipient is associated with multiple
          envelopes, they will have a different GUID for each one. This property is
          read-only.
        type: string
      recipientIdGuidMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `recipientIdGuid` property
          is editable.
      recipientIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `recipientId` property is
          editable.
      smartContractInformation:
        "$ref": "#/definitions/smartContractInformation"
        description: Reserved for DocuSign.
      source:
        description: Reserved for DocuSign.
        type: string
      status:
        description: |-
          The status of the tab. Possible values are:

          - `active`: The tab is active, but the recipient has not yet interacted with it.
          - `signed`: The recipient signed the tab.
          - `declined`: The recipient declined the envelope.
          - `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).
        type: string
      statusMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `status` property is editable.
      tabGroupLabels:
        description: |-
          An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.

          To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
        type: array
        items:
          type: string
      tabGroupLabelsMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `tabGroupLabels` property
          is editable.
      tabId:
        description: The unique identifier for the tab.
        type: string
      tabIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabId` property is editable.
      tabOrder:
        description: |-
          A positive integer that sets the order the tab is navigated to during signing.

          Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
        type: string
      tabOrderMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabOrder` property is editable.
      tabScope:
        description: |-
          The scope of the tab group. Possible values are:

          - `document`
          - `envelope` (default)
        type: string
      tabScopeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabScope` property is editable.
      tabType:
        description: Indicates the type of tab (for example, `signHere` or `initialHere`).
        type: string
      tabTypeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabType` property is editable.
      templateLocked:
        description:
          "When **true,** the sender cannot change any attributes of the
          recipient. Used only when working with template recipients. "
        type: string
      templateLockedMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `templateLocked` property
          is editable.
      templateRequired:
        description:
          When **true,** the sender may not remove the recipient. Used
          only when working with template recipients.
        type: string
      templateRequiredMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `templateRequired` property
          is editable.
      tooltip:
        description:
          "The text of a tooltip that appears when a user hovers over a
          form field or tab.

          "
        type: string
      toolTipMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          "Metadata that indicates whether the `toolTip` property is editable.

          "
      validationMessage:
        description:
          The message displayed if the custom tab fails input validation
          (either custom of embedded).
        type: string
      validationMessageMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `validationMessage` property
          is editable.
      width:
        description: |-
          The width of the tab in pixels.
          Must be an integer.
        type: string
      widthMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `width` property is editable.
      xPosition:
        description: |
          This property indicates the horizontal offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. Must be an integer. May be zero.
        type: string
      xPositionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `xPosition` property is editable.
      yPosition:
        description: |
          This property indicates the vertical offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. Must be an integer. May be zero.
        type: string
      yPositionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `yPosition` property is editable.
    x-ds-definition-name: tabGroup
    description: ""
    x-ms-summary: ""
  tabMetadata:
    type: object
    properties:
      anchor:
        description:
          An optional string that is used to auto-match tabs to strings
          located in the documents of an envelope.
        type: string
      anchorCaseSensitive:
        description: |-
          This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**

          For example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.

          This functionality uses the following rules:

          - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:

            $~><|^+=

            For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`

          - Strings embedded in other strings are ignored during the matching process.

          - In words that have dashes, the parts separated by dashes are treated as distinct words.

            Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**

          - Letters with accent marks are treated as distinct characters from their unaccented counterparts.

          - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.

            Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.

          - Unlike punctuation, numbers are not ignored when finding anchor words.

            Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).

          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorHorizontalAlignment:
        description: |
          This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :

          - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.
          - `right`: Aligns the tab’s left side with the last character of the matching anchor word.

          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorIgnoreIfNotPresent:
        description:
          When **true,** this tab is ignored if the `anchorString` is not
          found in the document.
        type: string
      anchorMatchWholeWord:
        description: |
          When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**

          For example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.

          This functionality uses the following rules:

          - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:

            $~><|^+=

            For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`

          - Strings embedded in other strings are ignored during the matching process.

          - In words that have dashes, the parts separated by dashes are treated as distinct words.

            Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**

          - Letters with accent marks are treated as distinct characters from their unaccented counterparts.

          - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.

            Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.

          - Unlike punctuation, numbers are not ignored when finding anchor words.

            Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).


          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorUnits:
        description: |
          Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:

          - `pixels` (default)
          - `inches`
          - `mms`
          - `cms`
        type: string
      anchorXOffset:
        description:
          "Specifies the X axis location of the tab in `anchorUnits` relative
          to the `anchorString`.

          "
        type: string
      anchorYOffset:
        description:
          "Specifies the Y axis location of the tab in `anchorUnits` relative
          to the `anchorString`.

          "
        type: string
      bold:
        description: When **true,** the information in the tab is bold.
        type: string
      collaborative:
        description: ""
        type: string
      concealValueOnDocument:
        description: |-
          When **true,** the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.

          When an envelope is completed the information is only available to the sender through the Form Data link in the DocuSign Console. The information on the downloaded document remains masked by asterisks.

          This setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.
        type: string
      createdByDisplayName:
        description: The user name of the DocuSign user who created this object.
        type: string
      createdByUserId:
        description: The userId of the DocuSign user who created this object.
        type: string
      customTabId:
        description:
          The DocuSign generated custom tab ID for the custom tab to be
          applied. This can only be used when adding new tabs for a recipient. When
          used, the new tab inherits all the custom tab properties.
        type: string
      disableAutoSize:
        description:
          When **true,** disables the auto sizing of single line text boxes
          in the signing screen when the signer enters data. If disabled users will
          only be able enter as much data as the text box can hold. By default this
          is false. This property only affects single line text boxes.
        type: string
      editable:
        description:
          When **true,** the custom tab is editable. Otherwise the custom
          tab cannot be modified.
        type: string
      font:
        description: |
          The font to be used for the tab value. Supported fonts include:

          - Default
          - Arial
          - ArialNarrow
          - Calibri
          - CourierNew
          - Garamond
          - Georgia
          - Helvetica
          - LucidaConsole
          - MSGothic
          - MSMincho
          - OCR-A
          - Tahoma
          - TimesNewRoman
          - Trebuchet
          - Verdana
        type: string
      fontColor:
        description:
          "The font color to use for the information in the tab. Possible
          values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n-
          Gold\n- Green\n- NavyBlue\n- Purple\n- White\n"
        type: string
      fontSize:
        description: |-
          The font size used for the information in the tab. Possible values are:

          - Size7
          - Size8
          - Size9
          - Size10
          - Size11
          - Size12
          - Size14
          - Size16
          - Size18
          - Size20
          - Size22
          - Size24
          - Size26
          - Size28
          - Size36
          - Size48
          - Size72
        type: string
      height:
        description: |-
          The height of the tab in pixels.
          Must be an integer.
        type: string
      includedInEmail:
        description:
          When **true,** the tab is included in e-mails related to the
          envelope on which it exists. This applies to only specific tabs.
        type: string
      initialValue:
        description: The original value of the tab.
        type: string
      italic:
        description: When **true,** the information in the tab is italic.
        type: string
      items:
        description:
          If the tab is a list, this represents the values that are possible
          for the tab.
        type: array
        items:
          type: string
      lastModified:
        description:
          The UTC DateTime this object was last modified. This is in ISO
          8601 format.
        type: string
      lastModifiedByDisplayName:
        description: The User Name of the DocuSign user who last modified this object.
        type: string
      lastModifiedByUserId:
        description: The userId of the DocuSign user who last modified this object.
        type: string
      localePolicy:
        "$ref": "#/definitions/localePolicyTab"
        description: Locale-specific settings.
      locked:
        description:
          When **true,** the signer cannot change the data of the custom
          tab.
        type: string
      maximumLength:
        description:
          The maximum number of entry characters supported by the custom
          tab.
        type: string
      maxNumericalValue:
        description: ""
        type: string
      mergeField:
        "$ref": "#/definitions/mergeField"
        description:
          Contains the information necessary to map the tab to a field
          in SalesForce.
      minNumericalValue:
        description: ""
        type: string
      name:
        description: ""
        type: string
      numericalValue:
        description: ""
        type: string
      paymentItemCode:
        description: |-
          If the custom tab is for a payment request, this is the external code for the item associated with the charge. For example, this might be your product id.

          Example: `SHAK1`

          Maximum Length: 100 characters.
        type: string
      paymentItemDescription:
        description: |-
          If the custom tab is for a payment request, this is the description of the item associated with the charge.

          Example: `The Danish play by Shakespeare`

          Maximum Length: 100 characters.
        type: string
      paymentItemName:
        description: |-
          If the custom tab is for a payment request, this is the name of the item associated with the charge.

          Maximum Length: 100 characters.

          Example: `Hamlet`
        type: string
      requireAll:
        description:
          "When **true** and shared is true, information must be entered
          in this field to complete the envelope. "
        type: string
      required:
        description: When **true,** the signer is required to fill out this tab.
        type: string
      requireInitialOnSharedChange:
        description:
          Optional element for field markup. When **true,** the signer
          is required to initial when they modify a shared field.
        type: string
      scaleValue:
        description:
          Sets the size of the tab. This field accepts values from `0.5`
          to `1.0`, where `1.0` represents full size and `0.5` is 50% of full size.
        type: string
      selected:
        description: When **true,** the radio button is selected.
        type: string
      shared:
        description: When **true,** this custom tab is shared.
        type: string
      signatureProviderId:
        description: Reserved for DocuSign.
        type: string
      stampType:
        description: |-
          The type of stamp. Valid values are:

          - `signature`: A signature image. This is the default value.
          - `stamp`: A stamp image.
          - null
        type: string
      stampTypeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `stampType` property is editable.
      tabLabel:
        description: |
          The label associated with the tab. This value may be an empty string.
          If no value is provided, the tab type is used as the value.

          Maximum Length: 500 characters.
        type: string
      type:
        description: |-
          The type of this tab. Values are:

          - `Approve`
          - `CheckBox`
          - `Company`
          - `Date`
          - `DateSigned`
          - `Decline`
          - `Email`
          - `EmailAddress`
          - `EnvelopeId`
          - `FirstName`
          - `Formula`
          - `FullName`
          - `InitialHere`
          - `InitialHereOptional`
          - `LastName`
          - `List`
          - `Note`
          - `Number`
          - `Radio`
          - `SignerAttachment`
          - `SignHere`
          - `SignHereOptional`
          - `Ssn`
          - `Text`
          - `Title`
          - `Zip5`
          - `Zip5Dash4`
        type: string
      underline:
        description: When **true,** the information in the tab is underlined.
        type: string
      validationMessage:
        description:
          The message displayed if the custom tab fails input validation
          (either custom of embedded).
        type: string
      validationPattern:
        description: A regular expression used to validate input for the tab.
        type: string
      validationType:
        description: |
          Specifies how numerical data is validated. Valid values:

          - `number`
          - `currency`
        type: string
      width:
        description: |-
          The width of the tab in pixels.
          Must be an integer.
        type: string
    x-ds-definition-name: tabMetadata
    description: ""
    x-ms-summary: ""
  tabMetadataList:
    type: object
    properties:
      tabs:
        description:
          A list of tabs, which are represented graphically as symbols
          on documents at the time of signing. Tabs show recipients where to sign,
          initial, or enter data. They may also display data to the recipients.
        type: array
        items:
          "$ref": "#/definitions/tabMetadata"
    x-ds-definition-name: tabMetadataList
    description: ""
    x-ms-summary: ""
  tabs:
    type: object
    properties:
      approveTabs:
        description: |
          A list of
          [Approve tabs][approve].

          An Approve tab enables
          the recipient to approve documents without
          placing a signature or initials on the document. If the
          recipient clicks the tab during the signing process, the
          recipient is considered to have signed the document. No
          information is shown on the document of the approval, but it
          is recorded as a signature in the envelope history.
          The value of an approve tab can't be set.

          [approve]:          /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/approve"
      checkboxTabs:
        description: |
          A list of
          [Checkbox tabs][checkbox].


          A Checkbox tab enables the recipient to select a yes/no (on/off) option. This value can be set.


          [checkbox]:  /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/checkbox"
      commentThreadTabs:
        description:
          An array of tabs that represents a collection of comments in
          a comment thread. For example, if a recipient has questions about the content
          of a document, they can add a comment to the document and control who else
          can see the comment. This value can't be set.
        type: array
        items:
          "$ref": "#/definitions/commentThread"
      commissionCountyTabs:
        description: |-
          A list of
          [Commission County tabs][cc].


          A Commission County tab displays the county of a notary's commission. This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary]. The tab's value can be edited by the recipient.


          [cc]:  /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
          [notary]: /docs/notary-api/
        type: array
        items:
          "$ref": "#/definitions/commissionCounty"
      commissionExpirationTabs:
        description: |-
          A list of
          [Commission Expiration tabs][tabref].


          A Commission Expiration tab displays the expiration date of a notary's commission. This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary]. The tab's value can be edited by the recipient.


          [tabref]:  /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
          [notary]: /docs/notary-api/
        type: array
        items:
          "$ref": "#/definitions/commissionExpiration"
      commissionNumberTabs:
        description: |-
          A list of
          [Commission Number tabs][tabref].


          A Commission Number tab displays a notary's commission number. This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary]. The tab's value can be edited by the recipient.


          [tabref]:  /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
          [notary]: /docs/notary-api/
        type: array
        items:
          "$ref": "#/definitions/commissionNumber"
      commissionStateTabs:
        description: |-
          A list of
          [Commission State tabs][cc].


          A Commission County tab displays the state in which a notary's commission was granted. This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary]. The tab's value can be edited by the recipient.


          [cc]:  /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
          [notary]: /docs/notary-api/
        type: array
        items:
          "$ref": "#/definitions/commissionState"
      companyTabs:
        description: |
          A list of
          [Company tabs][company].

          A Company tab displays a field for the name of the recipient's company. This value can't be set.

          [company]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/#parameters_company
        type: array
        items:
          "$ref": "#/definitions/company"
      dateSignedTabs:
        description: |
          A list of
          [Date Signed tabs][dateSigned].


          A Date Signed tab displays the date that the recipient signed the document. This value can't be set.

          [dateSigned]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/dateSigned"
      dateTabs:
        description: |
          A list of
          [Date tabs][date].

          A Date tab enables the recipient to enter a date. This value can't be set. The tooltip for this tab recommends the date format MM/DD/YYYY, but several other date formats are also accepted. The system retains the format that the recipient enters.

          **Note:** If you need to enforce a specific date format, DocuSign recommends that you use a Text tab with a validation pattern and validation message.


          [date]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/date"
      declineTabs:
        description: |
          A list of
          [Decline tabs][decline].

          A Decline tab enables the recipient to decline the envelope. If the recipient clicks the tab during the signing process, the envelope is voided. The value of this tab can't be set.


          [decline]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/decline"
      drawTabs:
        description: |-
          A list of Draw Tabs.

          A Draw Tab allows the recipient to add a free-form drawing to the document.
        type: array
        items:
          "$ref": "#/definitions/draw"
      emailAddressTabs:
        description: |
          A list of
          [Email Address tabs][emailAddress].

          An Email Address tab displays the recipient's email as entered in the recipient information. This value can't be set.


          [emailAddress]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/emailAddress"
      emailTabs:
        description: |
          A list of
          [Email tabs][email].

          An Email tab enables the recipient to enter an email address.
          This is a one-line field that checks that a valid email
          address is entered. It uses the same parameters as a Text
          tab, with the validation message and pattern set for email
          information. This value can be set.

          When getting information that includes
          this tab type, the original value of the tab when the
          associated envelope was sent is included in the response.

          [email]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/email"
      envelopeIdTabs:
        description: |
          A list of
          [Envelope ID tabs][envelopeId].

          An Envelope ID tab  displays the envelope ID. Recipients cannot enter or change the information in this tab. This value can't be set.


          [envelopeId]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/#response201_envelopeid
        type: array
        items:
          "$ref": "#/definitions/envelopeId"
      firstNameTabs:
        description: |
          A list of
          [First Name tabs][firstName].

          A First Name tab displays the recipient's first name. The system automatically populates this field by splitting the name in the recipient information on spaces. This value can't be set.


          [firstName]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/#parameters_firstname
        type: array
        items:
          "$ref": "#/definitions/firstName"
      formulaTabs:
        description: |
          A list of [Formula tabs][formulaTab].

          The value of a Formula tab is calculated from the values of other number or date tabs in the document. When the recipient completes the underlying fields, the Formula tab calculates and displays the result. This value can be set.

          The `formula` property of the tab contains the references to the underlying tabs. To learn more about formulas, see [Calculated Fields][calculatedfields].

          If a Formula tab contains a `paymentDetails` property, the tab is considered a payment item. To learn more about payments, see [Requesting Payments Along with Signatures][paymentguide].

          [calculatedfields]: https://support.docusign.com/s/document-item?bundleId=gbo1643332197980&topicId=crs1578456361259.html
          [paymentguide]:     https://support.docusign.com/s/document-item?bundleId=juu1573854950452&topicId=fyw1573854935374.html
          [formulaTab]:       /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/formulaTab"
      fullNameTabs:
        description: |
          A list of
          [Full Name tabs][fullName].

          A Full Name tab displays the recipient's full name. This value can't be set.


          [fullName]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/fullName"
      initialHereTabs:
        description: |
          A list of
          [Initial Here tabs][initialHere].

          This type of tab enables the recipient to initial the document. May be optional. This value can't be set.

          [initialHere]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/initialHere"
      lastNameTabs:
        description: |
          A list of
          [Last Name tabs][lastName].

          A Last Name tab displays the recipient's last name. The system automatically populates this field by splitting the name in the recipient information on spaces. This value can't be set.


          [lastName]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/lastName"
      listTabs:
        description: |
          An array of List tabs.

          A List tab enables the recipient to choose from a list of options. You specify the options in the `listItems` property. This value can't be set.

          Find descriptions of all tab types in
          the [EnvelopeRecipientTabs Resource][ert].

          [ert]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/list"
      notarizeTabs:
        description: |
          A list of  [Notarize tabs][notarize].

          A Notarize tab alerts notary recipients that they must take action on the page. This value can be set.

          **Note:** Only one notarize tab can appear on a page.

          [notarize]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/notarize"
      notarySealTabs:
        description: |-
          A list of Notary Seal tabs.

          A Notary Seal tab enables the recipient to notarize a document. This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary].

          [notary]: /docs/notary-api/
        type: array
        items:
          "$ref": "#/definitions/notarySeal"
      noteTabs:
        description: |
          A list of
          [Note tabs][note].

          A Note tab displays additional information to the recipient in the form of a note. This value can be set.

          [note]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/note"
      numberTabs:
        description: |
          A list of Number tabs.

          Number tabs validate that the entered value is a number.
          They do not support advanced validation or display options.

          To learn more about the different forms of number tabs,
          see [Number fields](/docs/esign-rest-api/esign101/concepts/tabs/number-fields/) in the Concepts guide.
          For specific information about number tabs
          see [Features of numberTabs](/docs/esign-rest-api/esign101/concepts/tabs/number-fields/#features-of-numbertabs).

          [number]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/number"
      numericalTabs:
        description:
          "A list of numerical tabs.\n\nNumerical  tabs provide robust
          display and validation features, including formatting for different regions
          and currencies, and minimum and maximum value validation.                                                                                                                                                                                                                                                                                                                                                                                                                                                             \n\nTo
          learn more about the different forms of number tabs,\nsee [Number fields](/docs/esign-rest-api/esign101/concepts/tabs/number-fields/)
          in the Concepts guide.\nFor specific information about numerical tabs\nsee
          [Features of numericalTabs](/docs/esign-rest-api/esign101/concepts/tabs/number-fields/#features-of-numericaltabs)."
        type: array
        items:
          "$ref": "#/definitions/numerical"
      phoneNumberTabs:
        description: |-
          A list of
          [Phone Number tabs][cc].


          A Phone Number tab enables a recipient to enter a phone number.

          **Note:** This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary].

          [cc]:  /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
          [notary]: /docs/notary-api/
        type: array
        items:
          "$ref": "#/definitions/phoneNumber"
      polyLineOverlayTabs:
        description:
          "This type of tab enables the recipient to strike through document
          text. This value can't be set
        type: array
        items:
          "$ref": "#/definitions/polyLineOverlay"
      prefillTabs:
        "$ref": "#/definitions/prefillTabs"
        description: |-
          Prefill tabs are tabs
          that the sender can fill in
          before the envelope is sent.
          They are sometimes called
          sender tags or pre-fill fields.


          [Pre-Fill Your Own Document Fields][app]
          describes how prefill tabs
          work in the web application.


          [Customize your envelopes with pre-fill fields][catblog]
          shows how to use prefill tabs
          in your application using the eSignature
          SDKs.

          [app]:      https://support.docusign.com/s/document-item?bundleId=gbo1643332197980&topicId=nwo1611173513994.html
          [catblog]:  https://www.docusign.com/blog/developers/common-api-tasks-customize-your-envelopes-pre-fill-fields
      radioGroupTabs:
        description: |
          A list of [Radio Group tabs][radioGroup].

          A Radio Group tab places a group of radio buttons on a document. The `radios` property is used to add and place the radio
          buttons associated with the group. Only one radio button can be selected in a group. This value can be set.


          [radioGroup]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/radioGroup"
      signerAttachmentTabs:
        description: |
          A list of
          [Signer Attachment tabs][signerAttachment].

          This type of tab enables the recipient to attach supporting documents to an envelope. This value can't be set.


          [signerAttachment]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/signerAttachment"
      signHereTabs:
        description: |
          A list of
          [Sign Here tabs][signHere].

          This type of tab enables the recipient to sign a document. May be optional. This value can't be set.

          [signHere]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/signHere"
      smartSectionTabs:
        description: |-
          A list of [Smart Section](https://www.docusign.com/blog/dsdev-deep-dive-responsive-smart-sections) tabs.

          Smart Section tabs enhance responsive signing on mobile devices by enabling collapsible sections, page breaks, custom formatting options, and other advanced functionality.

          **Note:** Smart Sections are a premium feature. Responsive signing must also be enabled for your account.
        type: array
        items:
          "$ref": "#/definitions/smartSection"
      ssnTabs:
        description: |
          A list of
          [SSN tabs][ssn].

          An SSN tab contains a one-line field that enables the recipient to enter a Social Security Number (SSN) with or without
          dashes. It uses the same parameters as a Text tab, with the validation message and pattern set for SSN information. This value can be set.


          [ssn]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/ssn"
      tabGroups:
        description: |
          An array of `tabGroup` items.

          To associate a tab with a tab group, add the tab group's `groupLabel` to the tab's `tabGroupLabels` array.
        type: array
        items:
          "$ref": "#/definitions/tabGroup"
      textTabs:
        description: |
          A list of
          Text tabs.

          A text tab enables the recipient to enter free text. This value can be set.

          Find descriptions of all tab types in
          the [EnvelopeRecipientTabs Resource][ert].

          [ert]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/text"
      titleTabs:
        description: |
          A list of
          [Title tabs][title].

          A Title tab displays the recipient's title.  This value can't be set.


          [title]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/title"
      viewTabs:
        description: |
          A list of
          [View tabs][view].

          A View tab is used with an Approve tab to handle supplemental documents.  This value can be set.

          [view]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/view"
      zipTabs:
        description: |
          A list of
          [Zip tabs][zip].

          A Zip tab enables the recipient to enter a ZIP code. The ZIP code can be five digits or nine digits ( in ZIP+4 format), and can be entered with or without dashes. It uses the same parameters as a Text tab, with the validation message and pattern set for ZIP code information.  This value can be set.


          [zip]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/zip"
    description:
      Tabs indicate to recipients where they should sign, initial, or enter
      data on a document. They are represented graphically as symbols on documents
      at the time of signing. Tabs can also display data to the recipients.
    x-ds-definition-name: tabs
    x-ms-summary:
      Tabs indicate to recipients where they should sign, initial, or
      enter data on a document. They are represented graphically as symbols on documents
      at the time of signing. Tabs can also display data to the recipients.
  templateCustomFields:
    type: object
    properties:
      listCustomFields:
        description: An array of list custom fields.
        type: array
        items:
          "$ref": "#/definitions/listCustomField"
      textCustomFields:
        description: An array of text custom fields.
        type: array
        items:
          "$ref": "#/definitions/textCustomField"
    x-ds-definition-name: templateCustomFields
    description: ""
    x-ms-summary: ""
  templateDocumentsResult:
    type: object
    properties:
      templateDocuments:
        description:
          An array of document objects that contain information about the
          documents associated with the template.
        type: array
        items:
          "$ref": "#/definitions/envelopeDocument"
      templateId:
        description:
          "The unique identifier of the template. If this is not provided,
          DocuSign will generate a value. "
        type: string
    x-ds-definition-name: templateDocumentsResult
    description: The results of this method.
    x-ms-summary: The results of this method.
  templateDocumentVisibilityList:
    type: object
    properties:
      documentVisibility:
        description:
          An array of `documentVisibility` objects that specifies which
          documents are visible to which recipients.
        type: array
        items:
          "$ref": "#/definitions/documentVisibility"
    description:
      A list of `documentVisibility` objects that specify whether the documents
      associated with a template are visible to recipients.
    x-ds-definition-name: templateDocumentVisibilityList
    x-ms-summary:
      A list of `documentVisibility` objects that specify whether the
      documents associated with a template are visible to recipients.
  templateInformation:
    type: object
    properties:
      templates:
        description:
          An array of `templateSummary` objects that contain information
          about templates.
        type: array
        items:
          "$ref": "#/definitions/templateSummary"
    x-ds-definition-name: templateInformation
    description: ""
    x-ms-summary: ""
  templateMatch:
    type: object
    properties:
      documentEndPage:
        description: ""
        type: string
      documentStartPage:
        description: ""
        type: string
      matchPercentage:
        description: ""
        type: string
    x-ds-definition-name: templateMatch
    description: ""
    x-ms-summary: ""
  templateNotificationRequest:
    type: object
    properties:
      expirations:
        "$ref": "#/definitions/expirations"
        description:
          A complex element that specifies the expiration settings for
          the envelope.
      password:
        description: The user's encrypted password hash.
        type: string
      reminders:
        "$ref": "#/definitions/reminders"
        description: A complex element that specifies reminder settings for the envelope.
      useAccountDefaults:
        description:
          When **true,** the account default notification settings are
          used for the envelope, overriding the reminders and expirations settings.
          When **false,** the reminders and expirations settings specified in this
          request are used. The default value is **false.**
        type: string
    x-ds-definition-name: templateNotificationRequest
    description: ""
    x-ms-summary: ""
  templateRecipients:
    type: object
    properties:
      agents:
        description: A list of agent recipients assigned to the documents.
        type: array
        items:
          "$ref": "#/definitions/agent"
      carbonCopies:
        description: A list of carbon copy recipients assigned to the documents.
        type: array
        items:
          "$ref": "#/definitions/carbonCopy"
      certifiedDeliveries:
        description:
          A complex type containing information on a recipient the must
          receive the completed documents for the envelope to be completed, but the
          recipient does not need to sign, initial, date, or add information to any
          of the documents.
        type: array
        items:
          "$ref": "#/definitions/certifiedDelivery"
      currentRoutingOrder:
        description:
          The routing order of the current recipient. If this value equals
          a particular signer's routing order, it indicates that the envelope has
          been sent to that recipient, but he or she has not completed the required
          actions.
        type: string
      editors:
        description: A list of users who can edit the envelope.
        type: array
        items:
          "$ref": "#/definitions/editor"
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      inPersonSigners:
        description:
          Specifies a signer that is in the same physical location as a
          DocuSign user who will act as a Signing Host for the transaction. The recipient
          added is the Signing Host and new separate Signer Name field appears after
          Sign in person is selected.
        type: array
        items:
          "$ref": "#/definitions/inPersonSigner"
      intermediaries:
        description:
          Identifies a recipient that can, but is not required to, add
          name and email information for recipients at the same or subsequent level
          in the routing order (until subsequent Agents, Editors or Intermediaries
          recipient types are added).
        type: array
        items:
          "$ref": "#/definitions/intermediary"
      notaries:
        description: A list of notary recipients on the envelope.
        type: array
        items:
          "$ref": "#/definitions/notaryRecipient"
      participants:
        description: ""
        type: array
        items:
          "$ref": "#/definitions/participant"
      recipientCount:
        description: |-
          The list of recipient event statuses that will trigger Connect to send updates to the url. It can be a two-part list with:

          * recipientEventStatusCode - The recipient status, this can be Sent, Delivered, Completed, Declined, AuthenticationFailed, and AutoResponded.
          * includeDocuments - When **true,** the envelope time zone information is included in the message.
        type: string
      seals:
        description:
          Specifies one or more electronic seals to apply on documents.
          For more information on Electronic Seals , see https://support.docusign.com/s/document-item?bundleId=xcm1643837555908&topicId=isl1578456577247.html
        type: array
        items:
          "$ref": "#/definitions/sealSign"
      signers:
        description: A list of signers on the envelope.
        type: array
        items:
          "$ref": "#/definitions/signer"
      witnesses:
        description: A list of signers who act as witnesses on the envelope.
        type: array
        items:
          "$ref": "#/definitions/witness"
    x-ds-definition-name: templateRecipients
    description: ""
    x-ms-summary: ""
  templateRole:
    type: object
    properties:
      accessCode:
        description:
          "If a value is provided, the recipient must enter the value as
          the access code to view and sign the envelope. \n\nMaximum Length: 50 characters
          and it must conform to the account's access code format setting.\n\nIf blank,
          but the signer `accessCode` property is set in the envelope, then that value
          is used.\n\nIf blank and the signer `accessCode` property is not set, then
          the access code is not required."
        type: string
      additionalNotifications:
        description: An array of additional notification objects.
        type: array
        items:
          "$ref": "#/definitions/recipientAdditionalNotification"
      clientUserId:
        description:
          "Specifies whether the recipient is embedded or remote. \n\nIf
          the `clientUserId` property is not null then the recipient is embedded.
          Use this field to associate the signer with their userId in your app. Authenticating
          the user is the responsibility of your app when you use embedded signing.\n\nIf
          the `clientUserId` property is set and either `SignerMustHaveAccount` or
          `SignerMustLoginToSign` property of the account settings is set to  **true,**
          an error is generated on sending.\n\n**Note:** This property is not returned
          by the [listStatusChanges](/docs/esign-rest-api/reference/envelopes/envelopes/liststatuschanges/)
          endpoint.\n\nMaximum length: 100 characters. \n"
        type: string
      defaultRecipient:
        description:
          When **true,** this recipient is the default recipient and any
          tabs generated by the `transformPdfFields` option are mapped to this recipient.
        type: string
      deliveryMethod:
        description: |-
          The delivery method. One of:

          - `email`
          - `fax`
          - `SMS`
          - `WhatsApp`
          - `offline`

          The `SMS` and `WhatsApp` delivery methods
          are limited to `signer`, `carbonCopy`, and `certifiedDelivery`
          recipients.

          **Related topics**

          - [Using SMS delivery with the eSignature API][smsconcept]
          - [How to request a signature by SMS delivery][howto]

          [smsconcept]: /docs/esign-rest-api/esign101/concepts/sms-delivery/using-sms-esignature/
          [howto]: /docs/esign-rest-api/how-to/request-signature-sms/
        type: string
      email:
        description: |-
          The email address of the person associated with a role name. It is the email address of the person specified in the `name` property.

          For an in-person signer, this is the email address of the host.
        type: string
      emailNotification:
        "$ref": "#/definitions/recipientEmailNotification"
        description: |-
          This optional property allows you to set a specific email subject and
          body for this recipient's notification email.

          **Note:** If you use this property, you _must_
          provide a value for the `supportedLanguage` sub-property.


          You can set the `emailNotification` property separately
          for each recipient. If you set the value only for certain
          recipients, the other recipients are assigned the values from
          the top-level `emailSubject` and `emailBlurb`.
      embeddedRecipientStartURL:
        description:
          "Specifies a sender-provided valid URL string for redirecting
          an embedded recipient. When using this option, the embedded recipient still
          receives an email from DocuSign, just as a remote recipient would. When
          the document link in the email is clicked the recipient is redirected, through
          DocuSign, to the supplied URL to complete their actions. When routing to
          the URL, the sender's system (the server responding to the URL) must request
          a recipient token to launch a signing session. \n\nWhen `SIGN_AT_DOCUSIGN`,
          the recipient is directed to an embedded signing or viewing process directly
          at DocuSign. The signing or viewing action is initiated by the DocuSign
          system and the transaction activity and Certificate of Completion records
          will reflect this. In all other ways the process is identical to an embedded
          signing or viewing operation launched by a partner.\n\nIt is important to
          understand that in a typical embedded workflow, the authentication of an
          embedded recipient is the responsibility of the sending application. DocuSign
          expects that senders will follow their own processes for establishing the
          recipient's identity. In this workflow the recipient goes through the sending
          application before the embedded signing or viewing process is initiated.
          However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`,
          the recipient goes directly to the embedded signing or viewing process,
          bypassing the sending application and any authentication steps the sending
          application would use. In this case, DocuSign recommends that you use one
          of the normal DocuSign authentication features (Access Code, Phone Authentication,
          SMS Authentication, etc.) to verify the identity of the recipient.\n\nIf
          the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL`
          is set, DocuSign will ignore the redirect URL and launch the standard signing
          process for the email recipient. Information can be appended to the embedded
          recipient start URL using merge fields. The available merge fields items
          are: `envelopeId`, `recipientId`, `recipientName`, `recipientEmail`, and
          `customFields`. The `customFields` property must be set for the recipient
          or envelope. The merge fields are enclosed in double brackets. \n\n*Example*:
          \n\n`http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]` "
        type: string
      inPersonSignerName:
        description: |-
          The full legal name of the in-person signer.

          Maximum Length: 100 characters.
        type: string
      name:
        description: |-
          Specifies the recipient's name.

          For an in-person signer, this is the name of the host.
        type: string
      phoneNumber:
        "$ref": "#/definitions/recipientPhoneNumber"
        description: Describes the recipient phone number.
      recipientSignatureProviders:
        description:
          The default signature provider is the DocuSign Electronic signature
          system. This parameter is used to specify one or more Standards Based Signature
          (digital signature) providers for the signer to use. [More information.](/docs/esign-rest-api/esign101/concepts/standards-based-signatures/)
        type: array
        items:
          "$ref": "#/definitions/recipientSignatureProvider"
      roleName:
        description:
          Optional element. Specifies the role name associated with the
          recipient.<br/><br/>This property is required when you are working with
          template recipients.
        type: string
      routingOrder:
        description: "Specifies the routing order of the recipient in the envelope. "
        type: string
      signingGroupId:
        description:
          "The ID of the [signing group](https://support.docusign.com/s/document-item?bundleId=gav1643676262430&topicId=zgn1578456447934.html).

          "
        type: string
      tabs:
        "$ref": "#/definitions/EnvelopeRecipientTabs"
        description:
          A list of tabs, which are represented graphically as symbols
          on documents at the time of signing. Tabs show recipients where to sign,
          initial, or enter data. They may also display data to the recipients.
    description: Information about a specific role.
    x-ds-definition-name: templateRole
    x-ms-summary: Information about a specific role.
  templateSharedItem:
    type: object
    properties:
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      owner:
        "$ref": "#/definitions/userInfo"
        description: Information about the user who owns the template.
      password:
        description: The user's encrypted password hash.
        type: string
      shared:
        description: |
          How the template is shared. One of:

          - `not_shared`
          - `shared_to`
        type: string
      sharedGroups:
        description: List of groups that share the template.
        type: array
        items:
          "$ref": "#/definitions/memberGroupSharedItem"
      sharedUsers:
        description: List of users that share the template.
        type: array
        items:
          "$ref": "#/definitions/userSharedItem"
      templateId:
        description:
          "The unique identifier of the template. If this is not provided,
          DocuSign will generate a value. "
        type: string
      templateName:
        description: The name of the shared template.
        type: string
    description: Information about shared templates.
    x-ds-definition-name: templateSharedItem
    x-ms-summary: Information about shared templates.
  templateSummary:
    type: object
    properties:
      applied:
        description: Reserved for DocuSign.
        type: string
      documentId:
        description:
          Specifies the document ID number that the tab is placed on. This
          must refer to an existing document's ID attribute.
        type: string
      documentName:
        description: The name of the document.
        type: string
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      name:
        description: The name of the template.
        type: string
      templateId:
        description:
          "The unique identifier of the template. If this is not provided,
          DocuSign will generate a value. "
        type: string
      templateMatch:
        "$ref": "#/definitions/templateMatch"
        description: ""
      uri:
        description: A URI containing the user ID.
        type: string
    description: Summary of a template request.
    x-ds-definition-name: templateSummary
    x-ms-summary: Summary of a template request.
  templateTabs:
    type: object
    properties:
      approveTabs:
        description: |
          A list of
          [Approve tabs][approve].

          An Approve tab enables
          the recipient to approve documents without
          placing a signature or initials on the document. If the
          recipient clicks the tab during the signing process, the
          recipient is considered to have signed the document. No
          information is shown on the document of the approval, but it
          is recorded as a signature in the envelope history.
          The value of an approve tab can't be set.

          [approve]:          /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/approve"
      checkboxTabs:
        description: |
          A list of
          [Checkbox tabs][checkbox].


          A Checkbox tab enables the recipient to select a yes/no (on/off) option. This value can be set.


          [checkbox]:  /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/checkbox"
      commentThreadTabs:
        description:
          An array of tabs that represents a collection of comments in
          a comment thread. For example, if a recipient has questions about the content
          of a document, they can add a comment to the document and control who else
          can see the comment. This value can't be set.
        type: array
        items:
          "$ref": "#/definitions/commentThread"
      commissionCountyTabs:
        description: |-
          A list of
          [Commission County tabs][cc].


          A Commission County tab displays the county of a notary's commission. This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary]. The tab's value can be edited by the recipient.


          [cc]:  /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
          [notary]: /docs/notary-api/
        type: array
        items:
          "$ref": "#/definitions/commissionCounty"
      commissionExpirationTabs:
        description: |-
          A list of
          [Commission Expiration tabs][tabref].


          A Commission Expiration tab displays the expiration date of a notary's commission. This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary]. The tab's value can be edited by the recipient.


          [tabref]:  /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
          [notary]: /docs/notary-api/
        type: array
        items:
          "$ref": "#/definitions/commissionExpiration"
      commissionNumberTabs:
        description: |-
          A list of
          [Commission Number tabs][tabref].


          A Commission Number tab displays a notary's commission number. This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary]. The tab's value can be edited by the recipient.


          [tabref]:  /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
          [notary]: /docs/notary-api/
        type: array
        items:
          "$ref": "#/definitions/commissionNumber"
      commissionStateTabs:
        description: |-
          A list of
          [Commission State tabs][cc].


          A Commission County tab displays the state in which a notary's commission was granted. This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary]. The tab's value can be edited by the recipient.


          [cc]:  /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
          [notary]: /docs/notary-api/
        type: array
        items:
          "$ref": "#/definitions/commissionState"
      companyTabs:
        description: |
          A list of
          [Company tabs][company].

          A Company tab displays a field for the name of the recipient's company. This value can't be set.

          [company]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/#parameters_company
        type: array
        items:
          "$ref": "#/definitions/company"
      dateSignedTabs:
        description: |
          A list of
          [Date Signed tabs][dateSigned].


          A Date Signed tab displays the date that the recipient signed the document. This value can't be set.

          [dateSigned]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/dateSigned"
      dateTabs:
        description: |
          A list of
          [Date tabs][date].

          A Date tab enables the recipient to enter a date. This value can't be set. The tooltip for this tab recommends the date format MM/DD/YYYY, but several other date formats are also accepted. The system retains the format that the recipient enters.

          **Note:** If you need to enforce a specific date format, DocuSign recommends that you use a Text tab with a validation pattern and validation message.


          [date]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/date"
      declineTabs:
        description: |
          A list of
          [Decline tabs][decline].

          A Decline tab enables the recipient to decline the envelope. If the recipient clicks the tab during the signing process, the envelope is voided. The value of this tab can't be set.


          [decline]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/decline"
      drawTabs:
        description: |-
          A list of Draw Tabs.

          A Draw Tab allows the recipient to add a free-form drawing to the document.
        type: array
        items:
          "$ref": "#/definitions/draw"
      emailAddressTabs:
        description: |
          A list of
          [Email Address tabs][emailAddress].

          An Email Address tab displays the recipient's email as entered in the recipient information. This value can't be set.


          [emailAddress]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/emailAddress"
      emailTabs:
        description: |
          A list of
          [Email tabs][email].

          An Email tab enables the recipient to enter an email address.
          This is a one-line field that checks that a valid email
          address is entered. It uses the same parameters as a Text
          tab, with the validation message and pattern set for email
          information. This value can be set.

          When getting information that includes
          this tab type, the original value of the tab when the
          associated envelope was sent is included in the response.

          [email]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/email"
      envelopeIdTabs:
        description: |
          A list of
          [Envelope ID tabs][envelopeId].

          An Envelope ID tab  displays the envelope ID. Recipients cannot enter or change the information in this tab. This value can't be set.


          [envelopeId]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/#response201_envelopeid
        type: array
        items:
          "$ref": "#/definitions/envelopeId"
      firstNameTabs:
        description: |
          A list of
          [First Name tabs][firstName].

          A First Name tab displays the recipient's first name. The system automatically populates this field by splitting the name in the recipient information on spaces. This value can't be set.


          [firstName]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/#parameters_firstname
        type: array
        items:
          "$ref": "#/definitions/firstName"
      formulaTabs:
        description: |
          A list of [Formula tabs][formulaTab].

          The value of a Formula tab is calculated from the values of other number or date tabs in the document. When the recipient completes the underlying fields, the Formula tab calculates and displays the result. This value can be set.

          The `formula` property of the tab contains the references to the underlying tabs. To learn more about formulas, see [Calculated Fields][calculatedfields].

          If a Formula tab contains a `paymentDetails` property, the tab is considered a payment item. To learn more about payments, see [Requesting Payments Along with Signatures][paymentguide].

          [calculatedfields]: https://support.docusign.com/s/document-item?bundleId=gbo1643332197980&topicId=crs1578456361259.html
          [paymentguide]:     https://support.docusign.com/s/document-item?bundleId=juu1573854950452&topicId=fyw1573854935374.html
          [formulaTab]:       /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/formulaTab"
      fullNameTabs:
        description: |
          A list of
          [Full Name tabs][fullName].

          A Full Name tab displays the recipient's full name. This value can't be set.


          [fullName]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/fullName"
      initialHereTabs:
        description: |
          A list of
          [Initial Here tabs][initialHere].

          This type of tab enables the recipient to initial the document. May be optional. This value can't be set.

          [initialHere]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/initialHere"
      lastNameTabs:
        description: |
          A list of
          [Last Name tabs][lastName].

          A Last Name tab displays the recipient's last name. The system automatically populates this field by splitting the name in the recipient information on spaces. This value can't be set.


          [lastName]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/lastName"
      listTabs:
        description: |
          An array of List tabs.

          A List tab enables the recipient to choose from a list of options. You specify the options in the `listItems` property. This value can't be set.

          Find descriptions of all tab types in
          the [EnvelopeRecipientTabs Resource][ert].

          [ert]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/list"
      notarizeTabs:
        description: |
          A list of  [Notarize tabs][notarize].

          A Notarize tab alerts notary recipients that they must take action on the page. This value can be set.

          **Note:** Only one notarize tab can appear on a page.

          [notarize]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/notarize"
      notarySealTabs:
        description: |-
          A list of Notary Seal tabs.

          A Notary Seal tab enables the recipient to notarize a document. This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary].

          [notary]: /docs/notary-api/
        type: array
        items:
          "$ref": "#/definitions/notarySeal"
      noteTabs:
        description: |
          A list of
          [Note tabs][note].

          A Note tab displays additional information to the recipient in the form of a note. This value can be set.

          [note]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/note"
      numberTabs:
        description: |
          A list of Number tabs.

          Number tabs validate that the entered value is a number.
          They do not support advanced validation or display options.

          To learn more about the different forms of number tabs,
          see [Number fields](/docs/esign-rest-api/esign101/concepts/tabs/number-fields/) in the Concepts guide.
          For specific information about number tabs
          see [Features of numberTabs](/docs/esign-rest-api/esign101/concepts/tabs/number-fields/#features-of-numbertabs).

          [number]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/number"
      numericalTabs:
        description:
          "A list of numerical tabs.\n\nNumerical  tabs provide robust
          display and validation features, including formatting for different regions
          and currencies, and minimum and maximum value validation.                                                                                                                                                                                                                                                                                                                                                                                                                                                             \n\nTo
          learn more about the different forms of number tabs,\nsee [Number fields](/docs/esign-rest-api/esign101/concepts/tabs/number-fields/)
          in the Concepts guide.\nFor specific information about numerical tabs\nsee
          [Features of numericalTabs](/docs/esign-rest-api/esign101/concepts/tabs/number-fields/#features-of-numericaltabs)."
        type: array
        items:
          "$ref": "#/definitions/numerical"
      phoneNumberTabs:
        description: |-
          A list of
          [Phone Number tabs][cc].


          A Phone Number tab enables a recipient to enter a phone number.

          **Note:** This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary].

          [cc]:  /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
          [notary]: /docs/notary-api/
        type: array
        items:
          "$ref": "#/definitions/phoneNumber"
      polyLineOverlayTabs:
        description:
          "This type of tab enables the recipient to strike through document
          text. This value can't be set
        type: array
        items:
          "$ref": "#/definitions/polyLineOverlay"
      prefillTabs:
        "$ref": "#/definitions/prefillTabs"
        description: |-
          Prefill tabs are tabs
          that the sender can fill in
          before the envelope is sent.
          They are sometimes called
          sender tags or pre-fill fields.


          [Pre-Fill Your Own Document Fields][app]
          describes how prefill tabs
          work in the web application.


          [Customize your envelopes with pre-fill fields][catblog]
          shows how to use prefill tabs
          in your application using the eSignature
          SDKs.

          [app]:      https://support.docusign.com/s/document-item?bundleId=gbo1643332197980&topicId=nwo1611173513994.html
          [catblog]:  https://www.docusign.com/blog/developers/common-api-tasks-customize-your-envelopes-pre-fill-fields
      radioGroupTabs:
        description: |
          A list of [Radio Group tabs][radioGroup].

          A Radio Group tab places a group of radio buttons on a document. The `radios` property is used to add and place the radio
          buttons associated with the group. Only one radio button can be selected in a group. This value can be set.


          [radioGroup]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/radioGroup"
      signerAttachmentTabs:
        description: |
          A list of
          [Signer Attachment tabs][signerAttachment].

          This type of tab enables the recipient to attach supporting documents to an envelope. This value can't be set.


          [signerAttachment]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/signerAttachment"
      signHereTabs:
        description: |
          A list of
          [Sign Here tabs][signHere].

          This type of tab enables the recipient to sign a document. May be optional. This value can't be set.

          [signHere]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/signHere"
      smartSectionTabs:
        description: |-
          A list of [Smart Section](https://www.docusign.com/blog/dsdev-deep-dive-responsive-smart-sections) tabs.

          Smart Section tabs enhance responsive signing on mobile devices by enabling collapsible sections, page breaks, custom formatting options, and other advanced functionality.

          **Note:** Smart Sections are a premium feature. Responsive signing must also be enabled for your account.
        type: array
        items:
          "$ref": "#/definitions/smartSection"
      ssnTabs:
        description: |
          A list of
          [SSN tabs][ssn].

          An SSN tab contains a one-line field that enables the recipient to enter a Social Security Number (SSN) with or without
          dashes. It uses the same parameters as a Text tab, with the validation message and pattern set for SSN information. This value can be set.


          [ssn]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/ssn"
      tabGroups:
        description: |
          An array of `tabGroup` items.

          To associate a tab with a tab group, add the tab group's `groupLabel` to the tab's `tabGroupLabels` array.
        type: array
        items:
          "$ref": "#/definitions/tabGroup"
      textTabs:
        description: |
          A list of
          Text tabs.

          A text tab enables the recipient to enter free text. This value can be set.

          Find descriptions of all tab types in
          the [EnvelopeRecipientTabs Resource][ert].

          [ert]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/text"
      titleTabs:
        description: |
          A list of
          [Title tabs][title].

          A Title tab displays the recipient's title.  This value can't be set.


          [title]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/title"
      viewTabs:
        description: |
          A list of
          [View tabs][view].

          A View tab is used with an Approve tab to handle supplemental documents.  This value can be set.

          [view]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/view"
      zipTabs:
        description: |
          A list of
          [Zip tabs][zip].

          A Zip tab enables the recipient to enter a ZIP code. The ZIP code can be five digits or nine digits ( in ZIP+4 format), and can be entered with or without dashes. It uses the same parameters as a Text tab, with the validation message and pattern set for ZIP code information.  This value can be set.


          [zip]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/zip"
    x-ds-definition-name: templateTabs
    description: ""
    x-ms-summary: ""
  templateUpdateSummary:
    type: object
    properties:
      bulkEnvelopeStatus:
        "$ref": "#/definitions/bulkEnvelopeStatus"
        description: An object that describes the status of the bulk send envelopes.
      envelopeId:
        description: The envelope ID of the envelope status that failed to post.
        type: string
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      listCustomFieldUpdateResults:
        description: ""
        type: array
        items:
          "$ref": "#/definitions/listCustomField"
      lockInformation:
        "$ref": "#/definitions/EnvelopeLocks"
        description: Provides lock information about an envelope that a user has locked.
      purgeState:
        description: |+
          Shows the current purge state for the envelope. Valid values:

          - `unpurged`: There has been no successful request to purge documents.
          - `documents_queued`: The envelope documents have been added to the purge queue, but have not been purged.
          - `documents_dequeued`: The envelope documents have been taken out of the purge queue.
          - `documents_purged`: The envelope documents have been successfully purged.
          - `documents_and_metadata_queued`: The envelope documents and metadata have been added to the purge queue, but have not yet been purged.
          - `documents_and_metadata_purged`: The envelope documents and metadata have been successfully purged.
          - `documents_and_metadata_and_redact_queued`: The envelope documents and metadata have been added to the purge queue, but have not yet been purged, nor has personal information been redacted.
          - `documents_and_metadata_and_redact_purged`: The envelope documents and metadata have been successfully purged, and personal information has been redacted.

          **Related topics**

          - [Purging documents (eSingature Concepts)](/docs/esign-rest-api/esign101/concepts/documents/purging/)
          - [Purging documents in an envelope (blog post)](https://www.docusign.com/blog/developers/purging-documents-envelope)

        type: string
      recipientUpdateResults:
        description:
          An array of `recipientUpdateResults` objects that contain details
          about the recipients.
        type: array
        items:
          "$ref": "#/definitions/recipientUpdateResponse"
      tabUpdateResults:
        "$ref": "#/definitions/EnvelopeRecipientTabs"
        description: ""
      textCustomFieldUpdateResults:
        description: ""
        type: array
        items:
          "$ref": "#/definitions/textCustomField"
    x-ds-definition-name: templateUpdateSummary
    description: ""
    x-ms-summary: ""
  text:
    type: object
    properties:
      anchorAllowWhiteSpaceInCharacters:
        description: |
          When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.

          First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.

          Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.

          The default value is **true.**
        type: string
      anchorAllowWhiteSpaceInCharactersMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorAllowWhiteSpaceInCharacters`
          property is editable.
      anchorCaseSensitive:
        description: |-
          This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**

          For example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.

          This functionality uses the following rules:

          - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:

            $~><|^+=

            For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`

          - Strings embedded in other strings are ignored during the matching process.

          - In words that have dashes, the parts separated by dashes are treated as distinct words.

            Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**

          - Letters with accent marks are treated as distinct characters from their unaccented counterparts.

          - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.

            Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.

          - Unlike punctuation, numbers are not ignored when finding anchor words.

            Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).

          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorCaseSensitiveMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorCaseSensitive` property
          is editable.
      anchorHorizontalAlignment:
        description: |
          This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :

          - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.
          - `right`: Aligns the tab’s left side with the last character of the matching anchor word.

          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorHorizontalAlignmentMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorHorizontalAlignment`
          property is editable.
      anchorIgnoreIfNotPresent:
        description:
          When **true,** this tab is ignored if the `anchorString` is not
          found in the document.
        type: string
      anchorIgnoreIfNotPresentMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorIgnoreIfNotPresent`
          property is editable.
      anchorMatchWholeWord:
        description: |
          When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**

          For example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.

          This functionality uses the following rules:

          - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:

            $~><|^+=

            For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`

          - Strings embedded in other strings are ignored during the matching process.

          - In words that have dashes, the parts separated by dashes are treated as distinct words.

            Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**

          - Letters with accent marks are treated as distinct characters from their unaccented counterparts.

          - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.

            Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.

          - Unlike punctuation, numbers are not ignored when finding anchor words.

            Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).


          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorMatchWholeWordMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorMatchWholeWord` property
          is editable.
      anchorString:
        description:
          Specifies the string to find in the document and use as the basis
          for tab placement.
        type: string
      anchorStringMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorString` property is
          editable.
      anchorTabProcessorVersion:
        description: Reserved for DocuSign.
        type: string
      anchorTabProcessorVersionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Reserved for DocuSign.
      anchorUnits:
        description: |
          Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:

          - `pixels` (default)
          - `inches`
          - `mms`
          - `cms`
        type: string
      anchorUnitsMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorUnits` property is
          editable.
      anchorXOffset:
        description:
          "Specifies the X axis location of the tab in `anchorUnits` relative
          to the `anchorString`.

          "
        type: string
      anchorXOffsetMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorXOffset` property
          is editable.
      anchorYOffset:
        description:
          "Specifies the Y axis location of the tab in `anchorUnits` relative
          to the `anchorString`.

          "
        type: string
      anchorYOffsetMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorYOffset` property
          is editable.
      bold:
        description: When **true,** the information in the tab is bold.
        type: string
      boldMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `bold` property is editable.
      caption:
        description: ""
        type: string
      captionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `caption` property is editable.
      concealValueOnDocument:
        description: |-
          When **true,** the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.

          When an envelope is completed the information is only available to the sender through the Form Data link in the DocuSign Console. The information on the downloaded document remains masked by asterisks.

          This setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.
        type: string
      concealValueOnDocumentMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `concealValueOnDocument`
          property is editable.
      conditionalParentLabel:
        description:
          For conditional fields this is the `tabLabel` of the parent tab
          that controls this tab's visibility.
        type: string
      conditionalParentLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `conditionalParentLabel`
          property is editable.
      conditionalParentValue:
        description: |
          For conditional fields, this is the value of the parent tab that controls the tab's visibility.

          If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use "on" as the value to show that the parent tab is active.
        type: string
      conditionalParentValueMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `conditionalParentValue`
          property is editable.
      customTabId:
        description:
          The DocuSign generated custom tab ID for the custom tab to be
          applied. This can only be used when adding new tabs for a recipient. When
          used, the new tab inherits all the custom tab properties.
        type: string
      customTabIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `customTabId` property is
          editable.
      disableAutoSize:
        description:
          When **true,** disables the auto sizing of single line text boxes
          in the signing screen when the signer enters data. If disabled users will
          only be able enter as much data as the text box can hold. By default this
          is false. This property only affects single line text boxes.
        type: string
      disableAutoSizeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `disableAutoSize` property
          is editable.
      documentId:
        description:
          Specifies the document ID number that the tab is placed on. This
          must refer to an existing Document's ID attribute.
        type: string
      documentIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `documentId` property is
          editable.
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      font:
        description: |
          The font to be used for the tab value. Supported fonts include:

          - Default
          - Arial
          - ArialNarrow
          - Calibri
          - CourierNew
          - Garamond
          - Georgia
          - Helvetica
          - LucidaConsole
          - MSGothic
          - MSMincho
          - OCR-A
          - Tahoma
          - TimesNewRoman
          - Trebuchet
          - Verdana
        type: string
      fontColor:
        description:
          "The font color to use for the information in the tab. Possible
          values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n-
          Gold\n- Green\n- NavyBlue\n- Purple\n- White\n"
        type: string
      fontColorMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `fontColor` property is editable.
      fontMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `font` property is editable.
      fontSize:
        description: |-
          The font size used for the information in the tab. Possible values are:

          - Size7
          - Size8
          - Size9
          - Size10
          - Size11
          - Size12
          - Size14
          - Size16
          - Size18
          - Size20
          - Size22
          - Size24
          - Size26
          - Size28
          - Size36
          - Size48
          - Size72
        type: string
      fontSizeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `fontSize` property is editable.
      formOrder:
        description:
          An integer specifying the order in which the guided form HTML
          should render. The order is relative to the `formPageLabel`, the group by
          which to place the guided form HTML block.
        type: string
      formOrderMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `formOrder` property is editable.
      formPageLabel:
        description:
          A string specifying the group in which to place the guided form
          HTML. Each group displays as a separate guided forms page in the signing
          experience.
        type: string
      formPageLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `formPageLabel` property
          is editable.
      formPageNumber:
        description:
          An integer specifying the order in which to present the guided
          form pages.
        type: string
      formPageNumberMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `fromPageNumber` property
          is editable.
      formula:
        description: |
          Contains the formula
          for calculating the value of
          this tab.

          Use a tab's `tabLabel`,
          enclosed in brackets,
          to refer to it.

          For example,
          you want to present the total cost
          of two items, tax included.

          The cost of each item is stored
          in number tabs labeled Item1 and Item2.
          The tax rate is in a number tab
          labeled TaxRate.

          The formula string for this property
          would be:
          `([Item1] + [Item2]) * (1 + [TaxRate])`

          See [Calculated Fields][calculatedfields]
          in the DocuSign Support Center
          to learn more about formulas.

          Maximum Length: 2000 characters

          [calculatedfields]: https://support.docusign.com/s/document-item?bundleId=gbo1643332197980&topicId=crs1578456361259.html
        type: string
      formulaMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata indicating if the sender can edit the `formula` property.
      height:
        description: |-
          The height of the tab in pixels.
          Must be an integer.
        type: string
      heightMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `height` property is editable.
      italic:
        description: When **true,** the information in the tab is italic.
        type: string
      italicMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `italic` property is editable.
      localePolicy:
        "$ref": "#/definitions/localePolicyTab"
        description: Locale-specific settings.
      locked:
        description:
          When **true,** the signer cannot change the data of the custom
          tab.
        type: string
      lockedMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `locked` property is editable.
      maxLength:
        description:
          An optional value that describes the maximum length of the property
          when the property is a string.
        type: string
      maxLengthMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `maxLength` property is editable.
      mergeField:
        "$ref": "#/definitions/mergeField"
        description:
          Contains the information necessary to map the tab to a field
          in SalesForce.
      mergeFieldXml:
        description: Reserved for DocuSign.
        type: string
      name:
        description: |-
          The name of the tab. For example, `Sign Here` or `Initial Here`.

          If the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.
        type: string
      nameMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `name` property is editable.
          This property is read-only.
      originalValue:
        description: "The initial value of the tab. "
        type: string
      originalValueMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `originalValue` property
          is editable.
      pageNumber:
        description:
          The page number on which the tab is located. For supplemental
          documents, this value must be `1`.
        type: string
      pageNumberMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `pageNumber` property is
          editable.
      recipientId:
        description:
          "The ID of the recipient to whom the tab will be assigned. This
          value should match the `recipientId` defined in the recipient object.

          "
        type: string
      recipientIdGuid:
        description:
          The globally-unique identifier (GUID) for a specific recipient
          on a specific envelope. If the same recipient is associated with multiple
          envelopes, they will have a different GUID for each one. This property is
          read-only.
        type: string
      recipientIdGuidMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `recipientIdGuid` property
          is editable.
      recipientIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `recipientId` property is
          editable.
      requireAll:
        description:
          "When **true** and shared is true, information must be entered
          in this field to complete the envelope. "
        type: string
      requireAllMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `requireAll` property is
          editable.
      required:
        description: When **true,** the signer is required to fill out this tab.
        type: string
      requiredMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `required` property is editable.
      requireInitialOnSharedChange:
        description:
          Optional element for field markup. When **true,** the signer
          is required to initial when they modify a shared field.
        type: string
      requireInitialOnSharedChangeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `requireInitialOnSharedChange`
          property is editable.
      senderRequired:
        description:
          "When **true,** the sender must populate the tab before an envelope
          can be sent using the template. \n\nThis value tab can only be changed by
          modifying (PUT) the template. \n\nTabs with a `senderRequired` value of
          true cannot be deleted from an envelope."
        type: string
      senderRequiredMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `senderRequired` property
          is editable.
      shared:
        description: When **true,** this custom tab is shared.
        type: string
      sharedMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `shared` property is editable.
      shareToRecipients:
        description: Reserved for DocuSign.
        type: string
      shareToRecipientsMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Reserved for DocuSign.
      smartContractInformation:
        "$ref": "#/definitions/smartContractInformation"
        description: Reserved for DocuSign.
      source:
        description: Reserved for DocuSign.
        type: string
      status:
        description: |-
          The status of the tab. Possible values are:

          - `active`: The tab is active, but the recipient has not yet interacted with it.
          - `signed`: The recipient signed the tab.
          - `declined`: The recipient declined the envelope.
          - `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).
        type: string
      statusMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `status` property is editable.
      tabGroupLabels:
        description: |-
          An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.

          To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
        type: array
        items:
          type: string
      tabGroupLabelsMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `tabGroupLabels` property
          is editable.
      tabId:
        description: The unique identifier for the tab.
        type: string
      tabIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabId` property is editable.
      tabLabel:
        description: |
          The label associated with the tab. This value may be an empty string.
          If no value is provided, the tab type is used as the value.

          Maximum Length: 500 characters.
        type: string
      tabLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabLabel` property is editable.
      tabOrder:
        description: |-
          A positive integer that sets the order the tab is navigated to during signing.

          Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
        type: string
      tabOrderMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabOrder` property is editable.
      tabType:
        description: Indicates the type of tab (for example, `signHere` or `initialHere`).
        type: string
      tabTypeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabType` property is editable.
      templateLocked:
        description:
          "When **true,** the sender cannot change any attributes of the
          recipient. Used only when working with template recipients. "
        type: string
      templateLockedMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `templateLocked` property
          is editable.
      templateRequired:
        description:
          When **true,** the sender may not remove the recipient. Used
          only when working with template recipients.
        type: string
      templateRequiredMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `templateRequired` property
          is editable.
      tooltip:
        description:
          "The text of a tooltip that appears when a user hovers over a
          form field or tab.

          "
        type: string
      toolTipMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          "Metadata that indicates whether the `toolTip` property is editable.

          "
      underline:
        description: When **true,** the information in the tab is underlined.
        type: string
      underlineMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `underline` property is editable.
      validationMessage:
        description:
          The message displayed if the custom tab fails input validation
          (either custom of embedded).
        type: string
      validationMessageMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `validationMessage` property
          is editable.
      validationPattern:
        description: A regular expression used to validate input for the tab.
        type: string
      validationPatternMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `validationPattern` property
          is editable.
      value:
        description: |-
          The value of the text tab.

          Maximum length: 4000 bytes.
        type: string
      valueMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `value` property is editable.
      width:
        description: |-
          The width of the tab in pixels.
          Must be an integer.
        type: string
      widthMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `width` property is editable.
      xPosition:
        description: |
          This property indicates the horizontal offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. Must be an integer. May be zero.

          To improve the tab's position on the document,
          DocuSign recommends
          adjusting `xPosition`
          and `yPosition`
          coordinates
          by (-3, -2)
        type: string
      xPositionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `xPosition` property is editable.
      yPosition:
        description: |
          This property indicates the vertical offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. Must be an integer. May be zero.

          To improve the tab's position on the document,
          DocuSign recommends
          adjusting `xPosition`
          and `yPosition`
          coordinates
          by (-3, -2)
        type: string
      yPositionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `yPosition` property is editable.
    description: "A tab that allows the recipient to enter any type of text.

      "
    x-ds-definition-name: text
    x-ms-summary: "A tab that allows the recipient to enter any type of text.

      "
  textCustomField:
    type: object
    properties:
      configurationType:
        description:
          If you are using merge fields, this property specifies the type
          of the merge field. The only supported value is `salesforce`.
        type: string
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      fieldId:
        description: The ID of the custom field.
        type: string
      name:
        description: The name of the custom field.
        type: string
      required:
        description:
          When **true,** senders are required to enter or select information
          for the field before they can send the envelope.
        type: string
      show:
        description:
          When **true,** the field displays in the **Envelope Custom Fields**
          section when a user creates or sends an envelope.
        type: string
      value:
        description:
          "The value of the custom field. The user who creates or sends
          the envelope provides this value. Maximum length: 100 characters."
        type: string
    description:
      This object represents a free text custom field where envelope creators
      and senders can enter custom data.
    x-ds-definition-name: textCustomField
    x-ms-summary:
      This object represents a free text custom field where envelope creators
      and senders can enter custom data.
  title:
    type: object
    properties:
      anchorAllowWhiteSpaceInCharacters:
        description: |
          When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.

          First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.

          Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.

          The default value is **true.**
        type: string
      anchorAllowWhiteSpaceInCharactersMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorAllowWhiteSpaceInCharacters`
          property is editable.
      anchorCaseSensitive:
        description: |-
          This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**

          For example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.

          This functionality uses the following rules:

          - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:

            $~><|^+=

            For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`

          - Strings embedded in other strings are ignored during the matching process.

          - In words that have dashes, the parts separated by dashes are treated as distinct words.

            Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**

          - Letters with accent marks are treated as distinct characters from their unaccented counterparts.

          - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.

            Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.

          - Unlike punctuation, numbers are not ignored when finding anchor words.

            Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).

          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorCaseSensitiveMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorCaseSensitive` property
          is editable.
      anchorHorizontalAlignment:
        description: |
          This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :

          - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.
          - `right`: Aligns the tab’s left side with the last character of the matching anchor word.

          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorHorizontalAlignmentMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorHorizontalAlignment`
          property is editable.
      anchorIgnoreIfNotPresent:
        description:
          When **true,** this tab is ignored if the `anchorString` is not
          found in the document.
        type: string
      anchorIgnoreIfNotPresentMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorIgnoreIfNotPresent`
          property is editable.
      anchorMatchWholeWord:
        description: |
          When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**

          For example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.

          This functionality uses the following rules:

          - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:

            $~><|^+=

            For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`

          - Strings embedded in other strings are ignored during the matching process.

          - In words that have dashes, the parts separated by dashes are treated as distinct words.

            Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**

          - Letters with accent marks are treated as distinct characters from their unaccented counterparts.

          - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.

            Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.

          - Unlike punctuation, numbers are not ignored when finding anchor words.

            Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).


          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorMatchWholeWordMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorMatchWholeWord` property
          is editable.
      anchorString:
        description:
          Specifies the string to find in the document and use as the basis
          for tab placement.
        type: string
      anchorStringMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorString` property is
          editable.
      anchorTabProcessorVersion:
        description: Reserved for DocuSign.
        type: string
      anchorTabProcessorVersionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Reserved for DocuSign.
      anchorUnits:
        description: |
          Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:

          - `pixels` (default)
          - `inches`
          - `mms`
          - `cms`
        type: string
      anchorUnitsMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorUnits` property is
          editable.
      anchorXOffset:
        description:
          "Specifies the X axis location of the tab in `anchorUnits` relative
          to the `anchorString`.

          "
        type: string
      anchorXOffsetMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorXOffset` property
          is editable.
      anchorYOffset:
        description:
          "Specifies the Y axis location of the tab in `anchorUnits` relative
          to the `anchorString`.

          "
        type: string
      anchorYOffsetMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorYOffset` property
          is editable.
      bold:
        description: When **true,** the information in the tab is bold.
        type: string
      boldMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `bold` property is editable.
      caption:
        description: ""
        type: string
      captionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `caption` property is editable.
      concealValueOnDocument:
        description: |-
          When **true,** the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.

          When an envelope is completed the information is only available to the sender through the Form Data link in the DocuSign Console. The information on the downloaded document remains masked by asterisks.

          This setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.
        type: string
      concealValueOnDocumentMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `concealValueOnDocument`
          property is editable.
      conditionalParentLabel:
        description:
          For conditional fields this is the `tabLabel` of the parent tab
          that controls this tab's visibility.
        type: string
      conditionalParentLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `conditionalParentLabel`
          property is editable.
      conditionalParentValue:
        description: |
          For conditional fields, this is the value of the parent tab that controls the tab's visibility.

          If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use "on" as the value to show that the parent tab is active.
        type: string
      conditionalParentValueMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `conditionalParentValue`
          property is editable.
      customTabId:
        description:
          The DocuSign generated custom tab ID for the custom tab to be
          applied. This can only be used when adding new tabs for a recipient. When
          used, the new tab inherits all the custom tab properties.
        type: string
      customTabIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `customTabId` property is
          editable.
      disableAutoSize:
        description:
          When **true,** disables the auto sizing of single line text boxes
          in the signing screen when the signer enters data. If disabled users will
          only be able enter as much data as the text box can hold. By default this
          is false. This property only affects single line text boxes.
        type: string
      disableAutoSizeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `disableAutoSize` property
          is editable.
      documentId:
        description:
          Specifies the document ID number that the tab is placed on. This
          must refer to an existing Document's ID attribute.
        type: string
      documentIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `documentId` property is
          editable.
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      font:
        description: |
          The font to be used for the tab value. Supported fonts include:

          - Default
          - Arial
          - ArialNarrow
          - Calibri
          - CourierNew
          - Garamond
          - Georgia
          - Helvetica
          - LucidaConsole
          - MSGothic
          - MSMincho
          - OCR-A
          - Tahoma
          - TimesNewRoman
          - Trebuchet
          - Verdana
        type: string
      fontColor:
        description:
          "The font color to use for the information in the tab. Possible
          values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n-
          Gold\n- Green\n- NavyBlue\n- Purple\n- White\n"
        type: string
      fontColorMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `fontColor` property is editable.
      fontMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `font` property is editable.
      fontSize:
        description: |-
          The font size used for the information in the tab. Possible values are:

          - Size7
          - Size8
          - Size9
          - Size10
          - Size11
          - Size12
          - Size14
          - Size16
          - Size18
          - Size20
          - Size22
          - Size24
          - Size26
          - Size28
          - Size36
          - Size48
          - Size72
        type: string
      fontSizeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `fontSize` property is editable.
      formOrder:
        description:
          An integer specifying the order in which the guided form HTML
          should render. The order is relative to the `formPageLabel`, the group by
          which to place the guided form HTML block.
        type: string
      formOrderMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `formOrder` property is editable.
      formPageLabel:
        description:
          A string specifying the group in which to place the guided form
          HTML. Each group displays as a separate guided forms page in the signing
          experience.
        type: string
      formPageLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `formPageLabel` property
          is editable.
      formPageNumber:
        description:
          An integer specifying the order in which to present the guided
          form pages.
        type: string
      formPageNumberMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `fromPageNumber` property
          is editable.
      height:
        description: |-
          The height of the tab in pixels.
          Must be an integer.
        type: string
      heightMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `height` property is editable.
      italic:
        description: When **true,** the information in the tab is italic.
        type: string
      italicMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `italic` property is editable.
      localePolicy:
        "$ref": "#/definitions/localePolicyTab"
        description: Locale-specific settings.
      locked:
        description:
          When **true,** the signer cannot change the data of the custom
          tab.
        type: string
      lockedMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `locked` property is editable.
      maxLength:
        description:
          An optional value that describes the maximum length of the property
          when the property is a string.
        type: string
      maxLengthMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `maxLength` property is editable.
      mergeField:
        "$ref": "#/definitions/mergeField"
        description:
          Contains the information necessary to map the tab to a field
          in SalesForce.
      mergeFieldXml:
        description: Reserved for DocuSign.
        type: string
      name:
        description: |-
          The name of the tab. For example, `Sign Here` or `Initial Here`.

          If the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.
        type: string
      nameMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `name` property is editable.
          This property is read-only.
      originalValue:
        description: "The initial value of the tab. "
        type: string
      originalValueMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `originalValue` property
          is editable.
      pageNumber:
        description:
          The page number on which the tab is located. For supplemental
          documents, this value must be `1`.
        type: string
      pageNumberMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `pageNumber` property is
          editable.
      recipientId:
        description:
          "The ID of the recipient to whom the tab will be assigned. This
          value should match the `recipientId` defined in the recipient object.

          "
        type: string
      recipientIdGuid:
        description:
          The globally-unique identifier (GUID) for a specific recipient
          on a specific envelope. If the same recipient is associated with multiple
          envelopes, they will have a different GUID for each one. This property is
          read-only.
        type: string
      recipientIdGuidMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `recipientIdGuid` property
          is editable.
      recipientIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `recipientId` property is
          editable.
      required:
        description: When **true,** the signer is required to fill out this tab.
        type: string
      requiredMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `required` property is editable.
      smartContractInformation:
        "$ref": "#/definitions/smartContractInformation"
        description: Reserved for DocuSign.
      source:
        description: Reserved for DocuSign.
        type: string
      status:
        description: |
          The status of the tab. Possible values are:

          - `active`: The tab is active, but the recipient has not yet interacted with it.
          - `signed`: The recipient signed the tab.
          - `declined`: The recipient declined the envelope.
          - `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).
        type: string
      statusMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `status` property is editable.
      tabGroupLabels:
        description: |-
          An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.

          To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
        type: array
        items:
          type: string
      tabGroupLabelsMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `tabGroupLabels` property
          is editable.
      tabId:
        description: The unique identifier for the tab.
        type: string
      tabIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabId` property is editable.
      tabLabel:
        description: |
          The label associated with the tab. This value may be an empty string.
          If no value is provided, the tab type is used as the value.

          Maximum Length: 500 characters.
        type: string
      tabLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabLabel` property is editable.
      tabOrder:
        description: |-
          A positive integer that sets the order the tab is navigated to during signing.

          Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
        type: string
      tabOrderMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabOrder` property is editable.
      tabType:
        description: Indicates the type of tab (for example, `signHere` or `initialHere`).
        type: string
      tabTypeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabType` property is editable.
      templateLocked:
        description:
          "When **true,** the sender cannot change any attributes of the
          recipient. Used only when working with template recipients. "
        type: string
      templateLockedMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `templateLocked` property
          is editable.
      templateRequired:
        description:
          When **true,** the sender may not remove the recipient. Used
          only when working with template recipients.
        type: string
      templateRequiredMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `templateRequired` property
          is editable.
      tooltip:
        description:
          "The text of a tooltip that appears when a user hovers over a
          form field or tab.

          "
        type: string
      toolTipMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          "Metadata that indicates whether the `toolTip` property is editable.

          "
      underline:
        description: When **true,** the information in the tab is underlined.
        type: string
      underlineMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `underline` property is editable.
      value:
        description: "Specifies the value of the tab. "
        type: string
      valueMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `value` property is editable.
      width:
        description: |-
          The width of the tab in pixels.
          Must be an integer.
        type: string
      widthMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `width` property is editable.
      xPosition:
        description: |
          This property indicates the horizontal offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. Must be an integer. May be zero.

          To improve the tab's position on the document,
          DocuSign recommends
          adjusting `xPosition`
          and `yPosition`
          coordinates
          by (-3, -2)
        type: string
      xPositionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `xPosition` property is editable.
      yPosition:
        description: |
          This property indicates the vertical offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. Must be an integer. May be zero.

          To improve the tab's position on the document,
          DocuSign recommends
          adjusting `xPosition`
          and `yPosition`
          coordinates
          by (-3, -2)
        type: string
      yPositionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `yPosition` property is editable.
    description: "A tab that displays the recipient's title.

      "
    x-ds-definition-name: title
    x-ms-summary: "A tab that displays the recipient's title.

      "
  usageHistory:
    description:
      "A complex element consisting of: \n\n* lastSentDateTime - the date
      and time the user last sent an envelope. \n* lastSignedDateTime - the date and
      time the user last signed an envelope.\n* sentCount - the number of envelopes
      the user has sent.\n* signedCount - the number of envelopes the user has signed."
    type: object
    properties:
      lastSentDateTime:
        description: "The date and time the user last sent an envelope. "
        type: string
      lastSignedDateTime:
        description: The date and time the user last signed an envelope.
        type: string
      sentCount:
        description: "The number of envelopes the user has sent. "
        type: string
      signedCount:
        description: "The number of envelopes the user has signed. "
        type: string
    x-ds-definition-name: usageHistory
    x-ms-summary:
      "A complex element consisting of: \n\n* lastSentDateTime - the date
      and time the user last sent an envelope. \n* lastSignedDateTime - the date and
      time the user last signed an envelope.\n* sentCount - the number of envelopes
      the user has sent.\n* signedCount - the number of envelopes the user has signed."
  userAccountManagementGranularInformation:
    type: object
    properties:
      canManageAccountSecuritySettings:
        description: "**True** if the user can manage account security settings."
        type: string
      canManageAccountSecuritySettingsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      canManageAccountSettings:
        description: "**True** if the user can manage account settings."
        type: string
      canManageAccountSettingsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      canManageAdmins:
        description: "**True** if the user can manage administrators."
        type: string
      canManageAdminsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `canManageAdmins` property
          is editable.

          "
      canManageConnect:
        description: ""
        type: string
      canManageConnectMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      canManageDocumentRetention:
        description: ""
        type: string
      canManageDocumentRetentionMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      canManageEnvelopeTransfer:
        description: ""
        type: string
      canManageEnvelopeTransferMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      canManageGroupsButNotUsers:
        description: ""
        type: string
      canManageGroupsButNotUsersMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      canManageJointAgreements:
        description: ""
        type: string
      canManageJointAgreementsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      canManageReporting:
        description: "**True** if the user can manage reporting."
        type: string
      canManageReportingMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      canManageSharing:
        description: "**True** if the user can manage sharing."
        type: string
      canManageSharingMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `canManageSharing` property
          is editable.

          "
      canManageSigningGroups:
        description: "**True** if the user can manage signing groups."
        type: string
      canManageSigningGroupsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      canManageStamps:
        description: ""
        type: string
      canManageStampsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      canManageUsers:
        description: "**True** if the user can manage users."
        type: string
      canManageUsersMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `canManageUsers` property
          is editable.

          "
      canViewUsers:
        description: ""
        type: string
    description: Describes which account management capabilities a user has.
    x-ds-definition-name: userAccountManagementGranularInformation
    x-ms-summary: Describes which account management capabilities a user has.
  userAuthorization:
    type: object
    properties:
      agentUser:
        "$ref": "#/definitions/authorizationUser"
        description: The user who can act on behalf of the principal user.
      authorizationId:
        description: The ID of the user authorization.
        type: string
      created:
        description: The UTC DateTime when the workspace user authorization was created.
        type: string
      createdBy:
        description:
          "The name and email of the user who created the authorization,
          in the following format: `[Francis Beagle email@example.com]`"
        type: string
      endDate:
        description: The UTC DateTime at which the authorization will expire.
        type: string
      modified:
        description:
          The UTC DateTime when the workspace user authorization was last
          updated.
        type: string
      modifiedBy:
        description:
          "The name and email of the user who created the authorization,
          in the following format: `[Francis Beagle email@example.com]`"
        type: string
      permission:
        description: |-
          The [permission level](/docs/esign-rest-api/esign101/concepts/envelopes/shared-access/) to grant the agent. Valid values:
          * `Send`
          * `Manage`
          * `Sign`
          * `Edit`

          This property is required.
        type: string
      principalUser:
        "$ref": "#/definitions/authorizationUser"
        description: The user for whom the agent user acts.
      startDate:
        description: The UTC DateTime at which the authorization will start.
        type: string
    x-ds-definition-name: userAuthorization
    description: A complex object describing a user authorization.
    x-ms-summary: A complex object describing a user authorization.
  userAuthorizationCreateRequest:
    type: object
    properties:
      agentUser:
        "$ref": "#/definitions/authorizationUser"
        description: The user who will be able to act on behalf of the principal user.
      endDate:
        description:
          The UTC DateTime to end the authorization. The default value
          is the max UTC value (`9999-12-31T23:59:59.0000000+00:00`).
        type: string
      permission:
        description: |-
          The permission level to grant the agent. Valid values:
          * `Send`
          * `Manage`
          * `Sign`

          This property is required.
        type: string
      startDate:
        description:
          The UTC DateTime to initiate the authorization. The default value
          is the current date and time.
        type: string
    x-ds-definition-name: userAuthorizationCreateRequest
    description: The request object to create a user authorization.
    x-ms-summary: The request object to create a user authorization.
  userAuthorizationCreateRequestWithId:
    type: object
    properties:
      agentUser:
        "$ref": "#/definitions/authorizationUser"
        description:
          The agent user. This property is required if you are creating
          a new authorization.
      authorizationId:
        description:
          The ID of the user authorization. This property is required to
          update an existing authorization.
        type: string
      endDate:
        description:
          "The UTC DateTime to end the authorization. The default value
          is the max UTC value: `9999-12-31T23:59:59.0000000+00:00`."
        type: string
      permission:
        description: |-
          The permission level to grant the agent. Valid values:

          - `Send`
          - `Manage`
          - `Sign`

          This property is required if you are creating a new authorization.
        type: string
      startDate:
        description:
          The UTC DateTime to initiate the authorization. The default value
          is the current date and time.
        type: string
    x-ds-definition-name: userAuthorizationCreateRequestWithId
    description: A user authorizations to create or update.
    x-ms-summary: A user authorizations to create or update.
  userAuthorizationIdWithStatus:
    type: object
    properties:
      authorizationId:
        description: ""
        type: string
      errorMessage:
        description: ""
        type: string
      success:
        description: ""
        type: string
    x-ds-definition-name: userAuthorizationIdWithStatus
    description: ""
    x-ms-summary: ""
  userAuthorizations:
    type: object
    properties:
      authorizations:
        description: ""
        type: array
        items:
          "$ref": "#/definitions/userAuthorization"
      endPosition:
        description: "The last index position in the result set. "
        type: string
      nextUri:
        description:
          "The URI for the next chunk of records based on the search request.
          It is `null` if this is the last set of results for the search. "
        type: string
      previousUri:
        description:
          "The URI for the prior chunk of records based on the search request.
          It is `null` if this is the first set of results for the search. "
        type: string
      resultSetSize:
        description:
          The number of results in this response. Because you can filter
          which entries are included in the response, this value is always less than
          or equal to the `totalSetSize`.
        type: string
      startPosition:
        description: The starting index position of the current result set.
        type: string
      totalSetSize:
        description:
          The total number of items in the result set. This value is always
          greater than or equal to the value of `resultSetSize`.
        type: string
    x-ds-definition-name: userAuthorizations
    description: ""
    x-ms-summary: ""
  userAuthorizationsDeleteRequest:
    type: object
    properties:
      authorizations:
        description: ""
        type: array
        items:
          type: string
    x-ds-definition-name: userAuthorizationsDeleteRequest
    description: ""
    x-ms-summary: ""
  userAuthorizationsDeleteResponse:
    type: object
    properties:
      results:
        description: ""
        type: array
        items:
          "$ref": "#/definitions/userAuthorizationIdWithStatus"
    x-ds-definition-name: userAuthorizationsDeleteResponse
    description: ""
    x-ms-summary: ""
  userAuthorizationsRequest:
    type: object
    properties:
      authorizations:
        description: The list of user authorizations to create and/or update.
        type: array
        items:
          "$ref": "#/definitions/userAuthorizationCreateRequestWithId"
    x-ds-definition-name: userAuthorizationsRequest
    description:
      "An object that describes the user authorizations to create or update.

      "
    x-ms-summary:
      "An object that describes the user authorizations to create or update.

      "
  userAuthorizationsResponse:
    type: object
    properties:
      results:
        description: ""
        type: array
        items:
          "$ref": "#/definitions/userAuthorizationWithStatus"
    x-ds-definition-name: userAuthorizationsResponse
    description: ""
    x-ms-summary: ""
  userAuthorizationUpdateRequest:
    type: object
    properties:
      endDate:
        description:
          "The end date for the user authorization. The default value is
          the max UTC value: `9999-12-31T23:59:59.0000000+00:00`."
        type: string
      startDate:
        description:
          The start date for the user authorization. The default value
          is the current date and time.
        type: string
    x-ds-definition-name: userAuthorizationUpdateRequest
    description: The request object to update a user authorization.
    x-ms-summary: The request object to update a user authorization.
  userAuthorizationWithStatus:
    type: object
    properties:
      authorization:
        "$ref": "#/definitions/userAuthorization"
        description: ""
      errorMessage:
        description: ""
        type: string
      success:
        description: ""
        type: string
    x-ds-definition-name: userAuthorizationWithStatus
    description: ""
    x-ms-summary: ""
  userInfo:
    type: object
    properties:
      accountId:
        description: The account ID associated with the envelope.
        type: string
      accountName:
        description: The name on the account.
        type: string
      activationAccessCode:
        description: Access code provided to the user to activate the account.
        type: string
      email:
        description: The user's email address.
        type: string
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      ipAddress:
        description: ""
        type: string
      loginStatus:
        description:
          When **true,** indicates that the user is logged in. This is
          a read-only property.
        type: string
      membershipId:
        description: The user's membership ID.
        type: string
      sendActivationEmail:
        description:
          This field is no longer supported for most accounts. To create
          an eSignature user without sending an activation email, use the Admin API
          by following [these steps](/docs/admin-api/how-to/create-active-user/).
        type: string
      uri:
        description: A URI containing the user ID.
        type: string
      userId:
        description: The ID of the user to access.
        type: string
      userName:
        description: The name of the user.
        type: string
      userStatus:
        description: |
          Status of the user's account. One of:

          - `ActivationRequired`
          - `ActivationSent`
          - `Active`
          - `Closed`
          - `Disabled`
        type: string
      userType:
        description: The type of user, for example `CompanyUser`.
        type: string
    x-ds-definition-name: userInfo
    description: ""
    x-ms-summary: ""
  userInfoList:
    type: object
    properties:
      users:
        description:
          An array of `userInfo` objects containing information about the
          users in the group.
        type: array
        items:
          "$ref": "#/definitions/userInfo"
    x-ds-definition-name: userInfoList
    description: ""
    x-ms-summary: ""
  userInformation:
    type: object
    properties:
      activationAccessCode:
        description: Access code provided to the user to activate the account.
        type: string
      company:
        description: The name of the user's company.
        type: string
      connectConfigurations:
        description: Object representing the user's custom Connect configuration.
        type: array
        items:
          "$ref": "#/definitions/connectUserObject"
      countryCode:
        description: The two-letter code for the user's country.
        type: string
      createdDateTime:
        description: The UTC DateTime when the item was created.
        type: string
      customSettings:
        description: The name/value pair information for the user custom setting.
        type: array
        items:
          "$ref": "#/definitions/nameValue"
      defaultAccountId:
        description: The default account ID associated with the user.
        type: string
      email:
        description: The user's email address.
        type: string
      enableConnectForUser:
        description:
          Boolean value that specifies whether the user is enabled for
          updates from DocuSign Connect.
        type: string
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      firstName:
        description: "The user's first name. \nMaximum Length: 50 characters."
        type: string
      forgottenPasswordInfo:
        "$ref": "#/definitions/forgottenPasswordInformation"
        description:
          A complex element containing up to four Question/Answer pairs
          for forgotten password information.
      groupList:
        description: |
          A list of the group information for groups to add the user to.
          Use [UserGroups: listGroups](/docs/esign-rest-api/reference/usergroups/groups/list/) to get information about groups.

          When setting a user's group, only the `groupId` is required.
        type: array
        items:
          "$ref": "#/definitions/group"
      hasRemoteNotary:
        description: ""
        type: boolean
      homeAddress:
        "$ref": "#/definitions/addressInformation"
        description:
          "Specifies the email for the signing host. It is a Required element
          for In Person Signers recipient Type. \nMaximum Length: 100 characters."
      initialsImageUri:
        description: The URI for retrieving the image of the user's initials.
        type: string
      isAdmin:
        description:
          Determines if the feature set is actively set as part of the
          plan.
        type: string
      isAlternateAdmin:
        description: ""
        type: string
      isNAREnabled:
        description:
          When **true,** National Association of Realtors (NAR) signature
          logos are enabled for the user.
        type: string
      jobTitle:
        description: The user's job title.
        type: string
      lastLogin:
        description: The date and time when the user last logged in to the system.
        type: string
      lastName:
        description: "The user's last name. \nMaximum Length: 50 characters."
        type: string
      loginStatus:
        description:
          Boolean value that indicates whether the user is currently logged
          in or not.
        type: string
      middleName:
        description: "The user's middle name. \nLimit: 50 characters."
        type: string
      password:
        description: The user's encrypted password hash.
        type: string
      passwordExpiration:
        description:
          If password expiration is enabled, the date-time when the user's
          password expires.
        type: string
      permissionProfileId:
        description: |
          The ID of the permission profile.

          Use [AccountPermissionProfiles: list](/docs/esign-rest-api/reference/accounts/accountpermissionprofiles/list/)
          to get a list of permission profiles and their IDs.

          You can also download a CSV file of all permission profiles
          and their IDs from the **Settings > Permission Profiles** page
          of your eSignature account page.
        type: string
      permissionProfileName:
        description:
          "The name of the account permission profile. \n\nExample: `Account
          Administrator`"
        type: string
      profileImageUri:
        description: The URL for retrieving the user's profile image.
        type: string
      sendActivationEmail:
        description:
          This field is no longer supported for most accounts. To create
          an eSignature user without sending an activation email, use the Admin API
          by following [these steps](/docs/admin-api/how-to/create-active-user/).
        type: string
      sendActivationOnInvalidLogin:
        description:
          When **true,** specifies that an additional activation email
          be sent if user's log on fails before the account is activated.
        type: string
      signatureImageUri:
        description:
          An endpoint URI that you can use to retrieve the user's signature
          image.
        type: string
      subscribe:
        description: ""
        type: string
      suffixName:
        description:
          "The suffix for the user's name, such as Jr, IV, PhD, etc.\n\nLimit:
          50 characters. "
        type: string
      title:
        description: The title of the user.
        type: string
      uri:
        description: A URI containing the user ID.
        type: string
      userAddedToAccountDateTime:
        description: The date and time that the user was added to the account.
        type: string
      userId:
        description: |-
          The ID of the user to access.

          **Note:** Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.
        type: string
      userName:
        description: The name of the user.
        type: string
      userProfileLastModifiedDate:
        description: The date and time that the user's profile was last modified.
        type: string
      userSettings:
        "$ref": "#/definitions/userSettingsInformation"
        description:
          The collection of settings representing the actions a user can
          perform. See [userSettingsInformation](/docs/esign-rest-api/reference/users/users/get/#userSettingsInformation)
          for available settings.
      userStatus:
        description: |
          Status of the user's account. One of:

          - `ActivationRequired`
          - `ActivationSent`
          - `Active`
          - `Closed`
          - `Disabled`
        type: string
      userType:
        description: The type of user, for example `CompanyUser`.
        type: string
      workAddress:
        "$ref": "#/definitions/addressInformation"
        description: ""
    description: User information.
    x-ds-definition-name: userInformation
    x-ms-summary: User information.
  userInformationList:
    type: object
    properties:
      endPosition:
        description: "The last index position in the result set. "
        type: string
      nextUri:
        description:
          "The URI for the next chunk of records based on the search request.
          It is `null` if this is the last set of results for the search. "
        type: string
      previousUri:
        description:
          "The URI for the prior chunk of records based on the search request.
          It is `null` if this is the first set of results for the search. "
        type: string
      resultSetSize:
        description:
          The number of results in this response. Because you can filter
          which entries are included in the response, this value is always less than
          or equal to the `totalSetSize`.
        type: string
      startPosition:
        description: The starting index position of the current result set.
        type: string
      totalSetSize:
        description:
          The total number of items in the result set. This value is always
          greater than or equal to the value of `resultSetSize`.
        type: string
      users:
        description: User management information.
        type: array
        items:
          "$ref": "#/definitions/userInformation"
    description: Contains a list of account users.
    x-ds-definition-name: userInformationList
    x-ms-summary: Contains a list of account users.
  userPasswordInformation:
    type: object
    properties:
      currentPassword:
        description: The user's current password to be changed.
        type: string
      email:
        description: The user's email address for the associated account.
        type: string
      forgottenPasswordInfo:
        "$ref": "#/definitions/forgottenPasswordInformation"
        description:
          A complex element containing up to four Question/Answer pairs
          for forgotten password information.
      newPassword:
        description: The user's new password.
        type: string
    x-ds-definition-name: userPasswordInformation
    description: ""
    x-ms-summary: ""
  userPasswordRules:
    type: object
    properties:
      passwordRules:
        "$ref": "#/definitions/accountPasswordRules"
        description: Contains details about the password rules for the user.
      userId:
        description: |-
          The ID of the user to access.

          **Note:** Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.
        type: string
    description: Contains details about the password rules for a user.
    x-ds-definition-name: userPasswordRules
    x-ms-summary: Contains details about the password rules for a user.
  userProfile:
    type: object
    properties:
      address:
        "$ref": "#/definitions/addressInformation"
        description: The user's address.
      authenticationMethods:
        description:
          "Indicates the authentication methods that the user uses. These
          properties cannot be modified by the PUT operation. "
        type: array
        items:
          "$ref": "#/definitions/authenticationMethod"
      companyName:
        description: The name of the user's company.
        type: string
      displayOrganizationInfo:
        description:
          " When **true,** the user's company and title information display
          on the ID card. "
        type: string
      displayPersonalInfo:
        description:
          When **true,** the user's address and phone number display on
          the ID card.
        type: string
      displayProfile:
        description:
          When **true,** the user's ID card can be viewed from signed documents
          and envelope history.
        type: string
      displayUsageHistory:
        description:
          When **true,** the user's usage information displays on the ID
          card.
        type: string
      profileImageUri:
        description: The URL for retrieving the user's profile image.
        type: string
      title:
        description: The title of the user.
        type: string
      usageHistory:
        "$ref": "#/definitions/usageHistory"
        description:
          "A complex element consisting of: \n\n- `lastSentDateTime`: The
          date and time the user last sent an envelope. \n- `lastSignedDateTime`:
          The date and time the user last signed an envelope.\n- `sentCount`: The
          number of envelopes the user has sent.\n- `signedCount`: The number of envelopes
          the user has signed. \n"
      userDetails:
        "$ref": "#/definitions/userInformation"
        description: ""
      userProfileLastModifiedDate:
        description: The date and time that the user's profile was last modified.
        type: string
    x-ds-definition-name: userProfile
    description: ""
    x-ms-summary: ""
  userSettingsInformation:
    type: object
    properties:
      accountManagementGranular:
        "$ref": "#/definitions/userAccountManagementGranularInformation"
        description: Describes which account management capabilities a user has.
      adminOnly:
        description: Reserved for DocuSign.
        type: string
      adminOnlyMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: Reserved for DocuSign.
      allowAutoTagging:
        description:
          When **true,** the API returns suggested tabs for documents for
          this user.
        type: string
      allowedOrchestrationAccess:
        description: ""
        type: string
      allowedOrchestrationAccessMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      allowEnvelopeTransferTo:
        description:
          When **true,** this user can participate in envelope transfers
          on the account.
        type: string
      allowEnvelopeTransferToMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: Reserved for DocuSign.
      allowEsealRecipients:
        description: |-
          When **true,** this user can create [electronic seal recipients][eseal].

          [eseal]: /docs/esign-rest-api/reference/envelopes/enveloperecipients/#seal-recipient
        type: string
      allowEsealRecipientsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: Metadata about the `allowEsealRecipientsMetadata` property.
      allowPowerFormsAdminToAccessAllPowerFormEnvelope:
        description:
          When **true** and this user is an administrator, they can view
          all of the envelopes generated from PowerForms. The default value is **false.**
        type: string
      allowPowerFormsAdminToAccessAllPowerFormEnvelopeMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          Metadata about the `allowPowerFormsAdminToAccessAllPowerFormEnvelopeMetadata`
          property.
      allowRecipientLanguageSelection:
        description:
          When **true,** this user can set the language used in the standard
          email format for a recipient when creating an envelope.
        type: string
      allowRecipientLanguageSelectionMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: Metadata for allowRecipientLanguageSelection.
      allowSendOnBehalfOf:
        description:
          When **true,** this user can send envelopes "on behalf of" other
          users through the API.
        type: string
      allowSendOnBehalfOfMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: Metadata for allowSendOnBehalfOf.
      allowSupplementalDocuments:
        description: When **true,** this user can include supplemental documents.
        type: string
      allowSupplementalDocumentsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          Metadata that indicates whether the `allowSupplementalDocuments`
          property is editable.
      allowTransactions:
        description: ""
        type: string
      allowTransactionsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      anchorTagVersionedPlacementEnabled:
        description: "Reserved for DocuSign.

          "
        type: string
      apiAccountWideAccess:
        description:
          When **true,** indicates that this user can send envelope-specific
          API requests on the account.
        type: string
      apiAccountWideAccessMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: Metadata for apiAccountWideAccess.
      apiCanExportAC:
        description:
          When **true,** this user can export authoritative copy for the
          account.
        type: string
      apiCanExportACMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: Metadata about the `apiCanExportACMetadata` property.
      bulkSend:
        description:
          When **true,** this user can use the bulk send feature for the
          account.
        type: string
      bulkSendMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `bulkSend` property is editable.

          "
      canChargeAccount:
        description: Reserved for DocuSign.
        type: string
      canChargeAccountMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: Reserved for DocuSign.
      canCreateTransaction:
        description: ""
        type: string
      canCreateTransactionMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      canDeleteDocumentsInTransaction:
        description: ""
        type: string
      canDeleteDocumentsInTransactionMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      canDeleteTransaction:
        description: ""
        type: string
      canDeleteTransactionMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      canEditSharedAddressbook:
        description:
          When true, this user can edit the shared address book for the
          account.
        type: string
      canEditSharedAddressbookMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: Metadata about the `canEditSharedAddressbookMetadata` property.
      canLockEnvelopes:
        description: Reserved for DocuSign.
        type: string
      canLockEnvelopesMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: Reserved for DocuSign.
      canManageAccount:
        description: When **true,** this user is an administrator for the account.
        type: string
      canManageAccountMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: Metadata about the `canManageAccountMetadata` property.
      canManageDistributor:
        description: Reserved for DocuSign.
        type: string
      canManageDistributorMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: Metadata about the `canManageDistributor` property.
      canManageTemplates:
        description: When **true,** this user can manage templates for the account.
        type: string
      canManageTemplatesMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: Metadata about the `canManageTemplates` property.
      canSendAPIRequests:
        description: When **true,** this user can send API requests on the account.
        type: string
      canSendAPIRequestsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: Metadata about the `canSendAPIRequests` property.
      canSendEnvelope:
        description: When **true,** this user can send envelopes on the account.
        type: string
      canSendEnvelopeMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: Metadata about the `canSendEnvelope` property.
      canSendEnvelopesViaSMS:
        description: ""
        type: string
      canSendEnvelopesViaSMSMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      canSignEnvelope:
        description: When **true,** this user can sign envelopes.
        type: string
      canSignEnvelopeMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: Metadata about the `canSignEnvelope` property.
      canUseScratchpad:
        description: When **true,** this user can use a scratchpad to edit information.
        type: string
      canUseScratchpadMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: Metadata about the `canUseScratchpad` property.
      canUseSmartContracts:
        description: Reserved for DocuSign.
        type: string
      canUseSmartContractsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: Reserved for DocuSign.
      disableDocumentUpload:
        description:
          When **true,** this user is prohibited from uploading documents
          during sending.
        type: string
      disableDocumentUploadMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `disableDocumentUpload`
          property is editable.

          "
      disableOtherActions:
        description: When **true,** this user can access the **Other Actions** menu.
        type: string
      disableOtherActionsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `disableOtherActions` property
          is editable.

          "
      enableDSPro:
        description: Reserved for DocuSign.
        type: string
      enableDSProMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `enableDSPro` property is
          editable.

          "
      enableKeyTermsSuggestionsByDocumentType:
        description: ""
        type: string
      enableKeyTermsSuggestionsByDocumentTypeMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      enableSequentialSigningAPI:
        description: |-
          When **true,** the account can define the routing
          order of recipients for envelopes sent by using the eSignature API.

          **Note:** Only SysAdmin users can change this setting.
        type: string
      enableSequentialSigningAPIMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `enableSequentialSigningAPI`
          property is editable.

          "
      enableSequentialSigningUI:
        description: |
          When **true,** the account can define the routing order
          of recipients for envelopes sent by using the DocuSign application.

          **Note:** Only SysAdmin users can change this setting.
        type: string
      enableSequentialSigningUIMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `enableSequentialSigningUI`
          property is editable.

          "
      enableSignerAttachments:
        description: When **true,** this user can use the signing attachments feature.
        type: string
      enableSignerAttachmentsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `enableSignerAttachments`
          property is editable.

          "
      enableSignOnPaperOverride:
        description: |-
          When **true,** a user can override the default default account setting for the Sign on Paper option, which specifies whether signers can sign documents on paper as an option to signing electronically.

          **Note:** Only Admin users can change this setting.
        type: string
      enableSignOnPaperOverrideMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `enableSignOnPaperOverride`
          property is editable.

          "
      enableTransactionPoint:
        description: Reserved for DocuSign.
        type: string
      enableTransactionPointMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: Reserved for DocuSign.
      enableVaulting:
        description: When **true,** Vaulting is enabled for the account.
        type: string
      enableVaultingMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `enableVaulting` property
          is editable.

          "
      expressSendOnly:
        description:
          When **false,** this user can apply tabs to documents during
          the sending experience.
        type: string
      locale:
        description: |-
          The user's locale code. Valid values are:
          - `zh_CN`
          - `zh_TW`
          - `nl`
          - `en`
          - `fr`
          - `de`
          - `it`
          - `ja`
          - `ko`
          - `pt`
          - `pt_BR`
          - `ru`
          - `es`
        type: string
      localeMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: Metadata about the `locale` property.
      localePolicy:
        "$ref": "#/definitions/localePolicy"
        description: Locale-specific settings.
      manageClickwrapsMode:
        description: When **true,** this user can create and manage [Clickwraps](/docs/click-api/).
        type: string
      manageClickwrapsModeMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: Metadata about the `manageClickwrapsMode` property.
      modifiedBy:
        description:
          The user ID (GUID) of the user who last modified this user record.
          This property is read-only.
        type: string
      modifiedByMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: Metadata about the `modifiedBy` property.
      modifiedDate:
        description: The date on which this user record was last modified.
        type: string
      modifiedDateMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: Metadata about the `modifiedDate` property.
      modifiedPage:
        description: Note referencing the page that modified this user record.
        type: string
      modifiedPageMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: Metadata about the `modifiedPage` property.
      newSendUI:
        description: Reserved for DocuSign.
        type: string
      newSendUIMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: Metadata about the `newSendUI` property.
      powerFormMode:
        description: |-
          Indicates the Power Form mode setting for the user:
          - `none`
          - `admin`
          - `user`
        type: string
      powerFormModeMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: Metadata about the `powerFormMode` property.
      recipientViewedNotification:
        description:
          When **true,** this user receives notifications when envelopes
          are viewed.
        type: string
      recipientViewedNotificationMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: Metadata about the `recipientViewedNotification` property.
      sealIdentifiers:
        description: Information about the seals associated with this user.
        type: array
        items:
          "$ref": "#/definitions/sealIdentifier"
      selfSignedRecipientEmailDocument:
        description: |
          Sets how self-signed documents are presented to the email recipients.
          Valid values are:

          - `include_pdf`: A PDF of the completed document is attached to the email.
          - `include_link`: A secure link to the self-signed documents is included
             in the email.

          **Note:** Only Admin users can change this setting.
        type: string
      selfSignedRecipientEmailDocumentMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `selfSignedRecipientEmailDocument`
          property is editable.

          "
      senderEmailNotifications:
        "$ref": "#/definitions/senderEmailNotifications"
        description:
          " \nAn array of email notifications that sets the email the user
          receives when they are a sender. When the specific email notification is
          set to true, the user will receive those types of email notifications from
          DocuSign. \n\nThe user inherits the default account sender email notification
          settings when the user is created. The email notifications are:\n\n* envelopeComplete\n*
          changedSigner \n* senderEnvelopeDeclined \n* withdrawnConsent \n* recipientViewed
          \n* deliveryFailed \n "
      signerEmailNotifications:
        "$ref": "#/definitions/signerEmailNotifications"
        description:
          "An array of email notifications that specifies the email the
          user receives when they are a recipient. When the specific email notification
          is set to true, the user receives those types of email notifications from
          DocuSign. The user inherits the default account email notification settings
          when the user is created.

          "
      supplementalDocumentIncludeInDownload:
        description:
          When **true,** this user gets supplemental documents when downloading
          documents.
        type: string
      supplementalDocumentsMustAccept:
        description: When **true,** this user must accept supplemental documents.
        type: string
      supplementalDocumentsMustAcceptMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `supplementalDocumentsMustAccept`
          property is editable.

          "
      supplementalDocumentsMustRead:
        description:
          When **true,** this user must both view and accept supplemental
          documents.
        type: string
      supplementalDocumentsMustReadMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `supplementalDocumentsMustRead`
          property is editable.

          "
      supplementalDocumentsMustView:
        description: When **true,** this user must view supplemental documents.
        type: string
      supplementalDocumentsMustViewMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `supplementalDocumentsMustView`
          property is editable.

          "
      templateActiveCreation:
        description:
          When **true,** a new template is created each time the user sends
          an envelope.
        type: string
      templateActiveCreationMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: Metadata about the `templateActiveCreation` property.
      templateApplyNotify:
        description:
          When **true,** the system notifies this user before applying
          a matching template.
        type: string
      templateApplyNotifyMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: Metadata about the `templateApplyNotify` property.
      templateAutoMatching:
        description:
          When **true,** the system automatically applies a matching template
          to a document if only one template matches. If there are multiple matches,
          it displays a list of matches to select from.
        type: string
      templateAutoMatchingMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: Metadata about the `templateAutoMatching` property.
      templateMatchingSensitivity:
        description: Percentage used when matching templates.
        type: string
      templateMatchingSensitivityMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: Metadata about the `tempalteMatchingSensitivity` property.
      templatePageLevelMatching:
        description: When **true,** users see template matching functionality.
        type: string
      templatePageLevelMatchingMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: Metadata about the `templatePageLevelMatching` property.
      timezoneDST:
        description:
          When true, daylight savings time is in effect for this user's
          time zone.
        type: string
      timezoneDSTMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: Metadata about the `timezoneDST` property.
      timezoneMask:
        description: The custom DateTime format setting for this user.
        type: string
      timezoneMaskMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: Metadata about the `timezoneMask` property.
      timezoneOffset:
        description: |-
          The timezone offset for the user. Valid values:
          - `tz_01_afghanistan`
          - `tz_02_alaskan`
          - `tz_03_arab`
          - `tz_04_arabian`
          - `tz_05_arabic`
          - `tz_06_argentina`
          - `tz_07_atlantic`
          - `tz_08_aus_central`
          - `tz_09_aus_eastern`
          - `tz_10_azerbaijan`
          - `tz_11_azores`
          - `tz_12_bangladesh`
          - `tz_13_canada_central`
          - `tz_14_cape_verde`
          - `tz_15_caucasus`
          - `tz_16_central_australia`
          - `tz_17_central_america`
          - `tz_18_central_asia`
          - `tz_19_central_brazilian`
          - `tz_20_central_europe`
          - `tz_21_central_european`
          - `tz_22_central_pacific`
          - `tz_23_central`
          - `tz_24_central_mexico`
          - `tz_25_china`
          - `tz_26_dateline`
          - `tz_27_east_africa`
          - `tz_28_east_australia`
          - `tz_29_east_europe`
          - `tz_30_east_south_america`
          - `tz_31_eastern`
          - `tz_32_egypt`
          - `tz_33_ekaterinburg`
          - `tz_34_fiji`
          - `tz_35_fli`
          - `tz_36_georgian`
          - `tz_37_gmt`
          - `tz_38_greenland`
          - `tz_39_greenwich`
          - `tz_40_gtb`
          - `tz_41_hawaiian`
          - `tz_42_india`
          - `tz_43_iran`
          - `tz_44_israel`
          - `tz_45_jordan`
          - `tz_46_kaliningrad`
          - `tz_47_kamchatka`
          - `tz_48_korea`
          - `tz_49_magadan`
          - `tz_50_mauritius`
          - `tz_51_mid_atlantic`
          - `tz_52_middle_east`
          - `tz_53_montevideo`
          - `tz_54_morocco`
          - `tz_55_mountain`
          - `tz_56_mountain_mexico`
          - `tz_57_myanmar`
          - `tz_58_north_central_asia`
          - `tz_59_namibia`
          - `tz_60_nepal`
          - `tz_61_new_zealand`
          - `tz_62_new_foundland`
          - `tz_63_north_asia_east`
          - `tz_64_north_asia`
          - `tz_65_pacific_sa`
          - `tz_66_pacific`
          - `tz_67_pacific_mexico`
          - `tz_68_pakistan`
          - `tz_69_paraguay`
          - `tz_70_romance`
          - `tz_71_russian`
          - `tz_72_sa_eastern`
          - `tz_73_sa_pacific`
          - `tz_74_sa_western`
          - `tz_75_samoa`
          - `tz_76_se_asia`
          - `tz_77_singapore`
          - `tz_78_south_africa`
          - `tz_79_sriLanka`
          - `tz_80_syria`
          - `tz_81_taipei`
          - `tz_82_tasmania`
          - `tz_83_tokyo`
          - `tz_84_tonga`
          - `tz_85_turkey`
          - `tz_86_ulaanbaatar`
          - `tz_87_us_eastern`
          - `tz_88_us_mountain`
          - `tz_89_venezuela`
          - `tz_90_vladivostok`
          - `tz_91_west_australia`
          - `tz_92_west_central_africa`
          - `tz_93_west_europe`
          - `tz_94_west_asia`
          - `tz_95_west_pacific`
          - `tz_96_yakutsk`
        type: string
      timezoneOffsetMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: Metadata about the `timezoneOffset` property.
      timezoneSendingPref:
        description: Reserved for DocuSign.
        type: string
      timezoneSendingPrefMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: Reserved for DocuSign.
      timezoneSigningPref:
        description: Reserved for DocuSign.
        type: string
      timezoneSigningPrefMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: Reserved for DocuSign.
      transactionPointSiteNameURL:
        description: Reserved for DocuSign.
        type: string
      transactionPointSiteNameURLMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: Reserved for DocuSign.
      transactionPointUserName:
        description: Reserved for DocuSign.
        type: string
      transactionPointUserNameMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: Reserved for DocuSign.
      vaultingMode:
        description: |-
          Indicates the specified Vaulting mode:
          - `none`
          - `estored`
          - `electronic_original`
        type: string
      vaultingModeMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: Metadata about the `vaultingMode` property.
      webForms:
        description: ""
        type: string
      webFormsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
    description: |-
      Properties that configure the settings for a user. Some elements of this object have a `metadata` property, which includes the following:
      - `rights`: The calling users permissions to edit this setting (can be `editable` or `read_only`)
      - `uiHint`: Internally used to build UIs (can be `available` or `hidden`)
      - `options`: The values supported for this setting (not all settings have this element)
    x-ds-definition-name: userSettingsInformation
    x-ms-summary: |-
      Properties that configure the settings for a user. Some elements of this object have a `metadata` property, which includes the following:
      - `rights`: The calling users permissions to edit this setting (can be `editable` or `read_only`)
      - `uiHint`: Internally used to build UIs (can be `available` or `hidden`)
      - `options`: The values supported for this setting (not all settings have this element)
  userSharedItem:
    type: object
    properties:
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      shared:
        description: |
          How the item is shared. One of:

          - `not_shared`
          - `shared_to`
          - `shared_from`
          - `shared_to_and_from`
        type: string
      user:
        "$ref": "#/definitions/userInfo"
        description: The user whose sharing information is being requested.
    description: Information about a shared item.
    x-ds-definition-name: userSharedItem
    x-ms-summary: Information about a shared item.
  userSignature:
    type: object
    properties:
      adoptedDateTime:
        description: The date and time the user adopted their signature.
        type: string
      createdDateTime:
        description: The UTC DateTime when the item was created.
        type: string
      customField:
        description: ""
        type: string
      dateStampProperties:
        "$ref": "#/definitions/dateStampProperties"
        description: |-
          Specifies the area in which a date stamp is placed. This parameter uses pixel positioning to draw a rectangle at the center of the stamp area. The stamp is superimposed on top of this central area.

          This property contains the following information about the central rectangle:

          - `DateAreaX`: The X axis position of the top-left corner.
          - `DateAreaY`: The Y axis position of the top-left corner.
          - `DateAreaWidth`: The width of the rectangle.
          - `DateAreaHeight`: The height of the rectangle.
      disallowUserResizeStamp:
        description: When **true,** users may not resize the stamp.
        type: string
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      externalID:
        description: Optionally specify an external identifier for the user's signature.
        type: string
      imageBase64:
        description: A Base64-encoded representation of the signature image.
        type: string
      imageType:
        description: |-
          Specificies the type of image. Valid values:

          - `stamp_image`
          - `signature_image`
          - `initials_image`
        type: string
      initials150ImageId:
        description: The ID of the user's initials image.
        type: string
      initialsImageUri:
        description: The URI for retrieving the image of the user's initials.
        type: string
      isDefault:
        description:
          Boolean that specifies whether the signature is the default signature
          for the user.
        type: string
      lastModifiedDateTime:
        description: The date and time that the item was last modified.
        type: string
      nrdsId:
        description:
          The National Association of Realtors (NAR) membership ID for
          a user who is a realtor.
        type: string
      nrdsLastName:
        description: The realtor's last name.
        type: string
      nrdsStatus:
        description: |-
          The realtor's NAR membership status. The value `active` verifies that the user is a current NAR member. Valid values are:

          - `Active`
          - `Inactive`
          - `Terminate`
          - `Provisional`
          - `Deceased`
          - `Suspend`
          - `Unknown`
        type: string
      phoneticName:
        description: The phonetic spelling of the `signatureName`.
        type: string
      signature150ImageId:
        description: The ID of the user's signature image.
        type: string
      signatureFont:
        description: |
          The font type for the signature, if the signature is not drawn. The supported font types are:

          "7_DocuSign", "1_DocuSign", "6_DocuSign", "8_DocuSign", "3_DocuSign", "Mistral", "4_DocuSign", "2_DocuSign", "5_DocuSign", "Rage Italic"
        type: string
      signatureId:
        description:
          Specifies the signature ID associated with the signature name.
          You can use the signature ID in the URI in place of the signature name,
          and the value stored in the `signatureName` property in the body is used.
          This allows the use of special characters (such as "&", "<", ">") in a the
          signature name. Note that with each update to signatures, the returned signature
          ID might change, so the caller will need to trigger off the signature name
          to get the new signature ID.
        type: string
      signatureImageUri:
        description:
          An endpoint URI that you can use to retrieve the user's signature
          image.
        type: string
      signatureInitials:
        description: " The initials associated with the signature."
        type: string
      signatureName:
        description: Specifies the user's signature name.
        type: string
      signatureRights:
        description: |-
          The rights that the user has to the signature. Valid values are:

          - `none`
          - `read`
          - `admin`
        type: string
      signatureType:
        description: Specifies the type of signature.
        type: string
      stampFormat:
        description:
          "The format of a stamp. Valid values are:\n\n- `NameHanko`: The
          stamp represents only the signer's name.\n- `NameDateHanko`: The stamp represents
          the signer's name and the date. "
        type: string
      stampImageUri:
        description: The URI for retrieving the image of the user's stamp.
        type: string
      stampSizeMM:
        description:
          The physical height of the stamp image (in millimeters) that
          the stamp vendor recommends for displaying the image in PDF documents.
        type: string
      stampType:
        description: |-
          The type of stamp. Valid values are:

          - `signature`: A signature image. This is the default value.
          - `stamp`: A stamp image.
          - null
        type: string
      status:
        description:
          "Indicates the envelope status. Valid values are:\n\n* sent -
          The envelope is sent to the recipients. \n* created - The envelope is saved
          as a draft and can be modified and sent later."
        type: string
    x-ds-definition-name: userSignature
    description: ""
    x-ms-summary: ""
  userSignatureDefinition:
    type: object
    properties:
      dateStampProperties:
        "$ref": "#/definitions/dateStampProperties"
        description: |-
          Specifies the area in which a date stamp is placed. This parameter uses pixel positioning to draw a rectangle at the center of the stamp area. The stamp is superimposed on top of this central area.

          This property contains the following information about the central rectangle:

          - `DateAreaX`: The X axis position of the top-left corner.
          - `DateAreaY`: The Y axis position of the top-left corner.
          - `DateAreaWidth`: The width of the rectangle.
          - `DateAreaHeight`: The height of the rectangle.
      disallowUserResizeStamp:
        description: When **true,** users may not resize the stamp.
        type: string
      externalID:
        description: Optionally specify an external identifier for the user's signature.
        type: string
      imageType:
        description: |-
          Specificies the type of image. Valid values:

          - `stamp_image`
          - `signature_image`
          - `initials_image`
        type: string
      isDefault:
        description:
          Boolean that specifies whether the signature is the default signature
          for the user.
        type: string
      nrdsId:
        description:
          The National Association of Realtors (NAR) membership ID for
          a user who is a realtor.
        type: string
      nrdsLastName:
        description: The realtor's last name.
        type: string
      phoneticName:
        description: The phonetic spelling of the `signatureName`.
        type: string
      signatureFont:
        description: |
          The font type to use for the signature if the signature is not drawn. The following font styles  are supported. The quotes are to indicate that these values are strings, not `enums`.

          - `"1_DocuSign"`
          - `"2_DocuSign"`
          - `"3_DocuSign"`
          - `"4_DocuSign"`
          - `"5_DocuSign"`
          - `"6_DocuSign"`
          - `"7_DocuSign"`
          - `"8_DocuSign"`
          - `"Mistral"`
          - `"Rage Italic"`
        type: string
      signatureId:
        description:
          Specifies the signature ID associated with the signature name.
          You can use the signature ID in the URI in place of the signature name,
          and the value stored in the `signatureName` property in the body is used.
          This allows the use of special characters (such as "&", "<", ">") in a the
          signature name. Note that with each update to signatures, the returned signature
          ID might change, so the caller will need to trigger off the signature name
          to get the new signature ID.
        type: string
      signatureInitials:
        description: Specifies the user's signature in initials format.
        type: string
      signatureName:
        description: Specifies the user's signature name.
        type: string
      signatureType:
        description: Specifies the type of signature.
        type: string
      stampFormat:
        description:
          "The format of a stamp. Valid values are:\n\n- `NameHanko`: The
          stamp represents only the signer's name.\n- `NameDateHanko`: The stamp represents
          the signer's name and the date. "
        type: string
      stampSizeMM:
        description:
          The physical height of the stamp image (in millimeters) that
          the stamp vendor recommends for displaying the image in PDF documents.
        type: string
    x-ds-definition-name: userSignatureDefinition
    description: ""
    x-ms-summary: ""
  userSignaturesInformation:
    type: object
    properties:
      userSignatures:
        description: An array of  `userSignature` objects.
        type: array
        items:
          "$ref": "#/definitions/userSignature"
    x-ds-definition-name: userSignaturesInformation
    description: ""
    x-ms-summary: ""
  userSocialIdResult:
    type: object
    properties:
      socialAccountInformation:
        description:
          Contains properties that map a DocuSign user to a social account
          such as Facebook or Yahoo.
        type: array
        items:
          "$ref": "#/definitions/socialAccountInformation"
      userId:
        description: |-
          The ID of the user to access.

          **Note:** Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.
        type: string
    x-ds-definition-name: userSocialIdResult
    description: ""
    x-ms-summary: ""
  usersResponse:
    type: object
    properties:
      endPosition:
        description: "The last index position in the result set. "
        type: string
      nextUri:
        description:
          "The URI for the next chunk of records based on the search request.
          It is `null` if this is the last set of results for the search. "
        type: string
      previousUri:
        description:
          "The URI for the prior chunk of records based on the search request.
          It is `null` if this is the first set of results for the search. "
        type: string
      resultSetSize:
        description:
          The number of results in this response. Because you can filter
          which entries are included in the response, this value is always less than
          or equal to the `totalSetSize`.
        type: string
      startPosition:
        description: The starting index position of the current result set.
        type: string
      totalSetSize:
        description:
          The total number of items in the result set. This value is always
          greater than or equal to the value of `resultSetSize`.
        type: string
      users:
        description: User management information.
        type: array
        items:
          "$ref": "#/definitions/userInfo"
    x-ds-definition-name: usersResponse
    description: ""
    x-ms-summary: ""
  view:
    type: object
    properties:
      anchorAllowWhiteSpaceInCharacters:
        description: |
          When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.

          First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.

          Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.

          The default value is **true.**
        type: string
      anchorAllowWhiteSpaceInCharactersMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorAllowWhiteSpaceInCharacters`
          property is editable.
      anchorCaseSensitive:
        description: |-
          This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**

          For example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.

          This functionality uses the following rules:

          - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:

            $~><|^+=

            For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`

          - Strings embedded in other strings are ignored during the matching process.

          - In words that have dashes, the parts separated by dashes are treated as distinct words.

            Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**

          - Letters with accent marks are treated as distinct characters from their unaccented counterparts.

          - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.

            Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.

          - Unlike punctuation, numbers are not ignored when finding anchor words.

            Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).

          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorCaseSensitiveMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorCaseSensitive` property
          is editable.
      anchorHorizontalAlignment:
        description: |
          This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :

          - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.
          - `right`: Aligns the tab’s left side with the last character of the matching anchor word.

          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorHorizontalAlignmentMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorHorizontalAlignment`
          property is editable.
      anchorIgnoreIfNotPresent:
        description:
          When **true,** this tab is ignored if the `anchorString` is not
          found in the document.
        type: string
      anchorIgnoreIfNotPresentMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorIgnoreIfNotPresent`
          property is editable.
      anchorMatchWholeWord:
        description: |
          When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**

          For example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.

          This functionality uses the following rules:

          - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:

            $~><|^+=

            For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`

          - Strings embedded in other strings are ignored during the matching process.

          - In words that have dashes, the parts separated by dashes are treated as distinct words.

            Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**

          - Letters with accent marks are treated as distinct characters from their unaccented counterparts.

          - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.

            Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.

          - Unlike punctuation, numbers are not ignored when finding anchor words.

            Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).


          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorMatchWholeWordMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorMatchWholeWord` property
          is editable.
      anchorString:
        description:
          Specifies the string to find in the document and use as the basis
          for tab placement.
        type: string
      anchorStringMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorString` property is
          editable.
      anchorTabProcessorVersion:
        description: Reserved for DocuSign.
        type: string
      anchorTabProcessorVersionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Reserved for DocuSign.
      anchorUnits:
        description: |
          Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:

          - `pixels` (default)
          - `inches`
          - `mms`
          - `cms`
        type: string
      anchorUnitsMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorUnits` property is
          editable.
      anchorXOffset:
        description:
          "Specifies the X axis location of the tab in `anchorUnits` relative
          to the `anchorString`.

          "
        type: string
      anchorXOffsetMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorXOffset` property
          is editable.
      anchorYOffset:
        description:
          "Specifies the Y axis location of the tab in `anchorUnits` relative
          to the `anchorString`.

          "
        type: string
      anchorYOffsetMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorYOffset` property
          is editable.
      bold:
        description: When **true,** the information in the tab is bold.
        type: string
      boldMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `bold` property is editable.
      buttonText:
        description: The text to display on the button.
        type: string
      buttonTextMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `buttonText` property is
          editable.
      caption:
        description: ""
        type: string
      captionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `caption` property is editable.
      conditionalParentLabel:
        description:
          For conditional fields this is the `tabLabel` of the parent tab
          that controls this tab's visibility.
        type: string
      conditionalParentLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `conditionalParentLabel`
          property is editable.
      conditionalParentValue:
        description: |
          For conditional fields, this is the value of the parent tab that controls the tab's visibility.

          If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use "on" as the value to show that the parent tab is active.
        type: string
      conditionalParentValueMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `conditionalParentValue`
          property is editable.
      customTabId:
        description:
          The DocuSign generated custom tab ID for the custom tab to be
          applied. This can only be used when adding new tabs for a recipient. When
          used, the new tab inherits all the custom tab properties.
        type: string
      customTabIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `customTabId` property is
          editable.
      documentId:
        description:
          Specifies the document ID number that the tab is placed on. This
          must refer to an existing Document's ID attribute.
        type: string
      documentIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `documentId` property is
          editable.
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      font:
        description: |
          The font to be used for the tab value. Supported fonts include:

          - Default
          - Arial
          - ArialNarrow
          - Calibri
          - CourierNew
          - Garamond
          - Georgia
          - Helvetica
          - LucidaConsole
          - MSGothic
          - MSMincho
          - OCR-A
          - Tahoma
          - TimesNewRoman
          - Trebuchet
          - Verdana
        type: string
      fontColor:
        description:
          "The font color to use for the information in the tab. Possible
          values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n-
          Gold\n- Green\n- NavyBlue\n- Purple\n- White\n"
        type: string
      fontColorMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `fontColor` property is editable.
      fontMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `font` property is editable.
      fontSize:
        description: |-
          The font size used for the information in the tab. Possible values are:

          - Size7
          - Size8
          - Size9
          - Size10
          - Size11
          - Size12
          - Size14
          - Size16
          - Size18
          - Size20
          - Size22
          - Size24
          - Size26
          - Size28
          - Size36
          - Size48
          - Size72
        type: string
      fontSizeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `fontSize` property is editable.
      formOrder:
        description:
          An integer specifying the order in which the guided form HTML
          should render. The order is relative to the `formPageLabel`, the group by
          which to place the guided form HTML block.
        type: string
      formOrderMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `formOrder` property is editable.
      formPageLabel:
        description:
          A string specifying the group in which to place the guided form
          HTML. Each group displays as a separate guided forms page in the signing
          experience.
        type: string
      formPageLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `formPageLabel` property
          is editable.
      formPageNumber:
        description:
          An integer specifying the order in which to present the guided
          form pages.
        type: string
      formPageNumberMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `fromPageNumber` property
          is editable.
      height:
        description: |-
          The height of the tab in pixels.
          Must be an integer.
        type: string
      heightMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `height` property is editable.
      italic:
        description: When **true,** the information in the tab is italic.
        type: string
      italicMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `italic` property is editable.
      localePolicy:
        "$ref": "#/definitions/localePolicyTab"
        description: Locale-specific settings.
      mergeField:
        "$ref": "#/definitions/mergeField"
        description:
          Contains the information necessary to map the tab to a field
          in SalesForce.
      mergeFieldXml:
        description: Reserved for DocuSign.
        type: string
      pageNumber:
        description:
          The page number on which the tab is located. For supplemental
          documents, this value must be `1`.
        type: string
      pageNumberMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `pageNumber` property is
          editable.
      recipientId:
        description:
          "The ID of the recipient to whom the tab will be assigned. This
          value should match the `recipientId` defined in the recipient object.

          "
        type: string
      recipientIdGuid:
        description:
          The globally-unique identifier (GUID) for a specific recipient
          on a specific envelope. If the same recipient is associated with multiple
          envelopes, they will have a different GUID for each one. This property is
          read-only.
        type: string
      recipientIdGuidMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `recipientIdGuid` property
          is editable.
      recipientIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `recipientId` property is
          editable.
      required:
        description:
          When **true,** the recipient must click the **View** button for
          the supporting document prior to completing the signing process.
        type: string
      requiredMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `required` property is editable.
      requiredRead:
        description: When **true,** the recipient must read through the document.
        type: string
      smartContractInformation:
        "$ref": "#/definitions/smartContractInformation"
        description: Reserved for DocuSign.
      source:
        description: Reserved for DocuSign.
        type: string
      status:
        description: |-
          The status of the tab. Possible values are:

          - `active`: The tab is active, but the recipient has not yet interacted with it.
          - `signed`: The recipient signed the tab.
          - `declined`: The recipient declined the envelope.
          - `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).
        type: string
      statusMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `status` property is editable.
      tabGroupLabels:
        description: |-
          An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.

          To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
        type: array
        items:
          type: string
      tabGroupLabelsMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `tabGroupLabels` property
          is editable.
      tabId:
        description: The unique identifier for the tab.
        type: string
      tabIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabId` property is editable.
      tabLabel:
        description: |
          The label associated with the tab. This value may be an empty string.
          If no value is provided, the tab type is used as the value.

          Maximum Length: 500 characters.
        type: string
      tabLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabLabel` property is editable.
      tabOrder:
        description: |-
          A positive integer that sets the order the tab is navigated to during signing.

          Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
        type: string
      tabOrderMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabOrder` property is editable.
      tabType:
        description: Indicates the type of tab (for example, `signHere` or `initialHere`).
        type: string
      tabTypeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabType` property is editable.
      templateLocked:
        description:
          "When **true,** the sender cannot change any attributes of the
          recipient. Used only when working with template recipients. "
        type: string
      templateLockedMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `templateLocked` property
          is editable.
      templateRequired:
        description:
          When **true,** the sender may not remove the recipient. Used
          only when working with template recipients.
        type: string
      templateRequiredMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `templateRequired` property
          is editable.
      tooltip:
        description:
          "The text of a tooltip that appears when a user hovers over a
          form field or tab.

          "
        type: string
      toolTipMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          "Metadata that indicates whether the `toolTip` property is editable.

          "
      underline:
        description: When **true,** the information in the tab is underlined.
        type: string
      underlineMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `underline` property is editable.
      width:
        description: |-
          The width of the tab in pixels.
          Must be an integer.
        type: string
      widthMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `width` property is editable.
      xPosition:
        description: |+
          This property indicates the horizontal offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. Must be an integer. May be zero.

        type: string
      xPositionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `xPosition` property is editable.
      yPosition:
        description: |+
          This property indicates the vertical offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. Must be an integer. May be zero.

        type: string
      yPositionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `yPosition` property is editable.
    description: This tab is used with the Approve tab to handle supplemental documents.
    x-ds-definition-name: view
    x-ms-summary: This tab is used with the Approve tab to handle supplemental documents.
  viewUrl:
    type: object
    properties:
      url:
        description: URL to the Review ID page.
        type: string
    x-ds-definition-name: viewUrl
    description: ""
    x-ms-summary: ""
  watermark:
    type: object
    properties:
      displayAngle:
        description: |-
          The display angle of the watermark. Valid values:

          * 0 (horizontal)
          * 45 (diagonal)
          * 90 (vertical)
        type: string
      enabled:
        description:
          When **true,** the watermark will be applied to documents that
          are still in progress. When **false,** the watermark will not be applied.
        type: string
      font:
        description: |
          The watermark's font. Valid values:

          - `courier`
          - `helvetica`
          - `timesnewroman`
        type: string
      fontColor:
        description: |-
          The watermark's font color. Valid values:

          * `black`
          * `blue`
          * `red`
          * `gray`
          * `yellow`
        type: string
      fontSize:
        description: |-
          The watermark's font size. Valid values:

          * `30`
          * `40`
          * `50`
          * `60`
          * `70`
          * `80`
          * `90`
        type: string
      id:
        description: The ID of the watermark.
        type: string
      imageBase64:
        description: |-
          The Base64 representation of the watermark image.

          This property is read-only.
        type: string
      transparency:
        description: |-
          The transparency percentage of the watermark image. Valid values:

          * `5`
          * `10`
          * `15`
          * `20`
          * `25`
          * `30`
          * `35`
          * `40`
          * `45`
        type: string
      watermarkText:
        description: The text for the watermark.
        type: string
    x-ds-definition-name: watermark
    description: ""
    x-ms-summary: ""
  witness:
    type: object
    properties:
      accessCode:
        description:
          "If a value is provided, the recipient must enter the value as
          the access code to view and sign the envelope. \n\nMaximum Length: 50 characters
          and it must conform to the account's access code format setting.\n\nIf blank,
          but the signer `accessCode` property is set in the envelope, then that value
          is used.\n\nIf blank and the signer `accessCode` property is not set, then
          the access code is not required."
        type: string
      accessCodeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `accessCode` property is
          editable. This property is read-only.
      addAccessCodeToEmail:
        description:
          Optional. When **true,** the access code will be added to the
          email sent to the recipient. This nullifies the security measure of `accessCode`
          on the recipient.
        type: string
      additionalNotifications:
        description: An array of additional notification objects.
        type: array
        items:
          "$ref": "#/definitions/recipientAdditionalNotification"
      agentCanEditEmail:
        description:
          Optional element. When **true,** the agents recipient associated
          with this recipient can change the recipient's pre-populated email address.
          This element is only active if enabled for the account.
        type: string
      agentCanEditName:
        description:
          Optional element. When **true,** the agents recipient associated
          with this recipient can change the recipient's pre-populated name. This
          element is only active if enabled for the account.
        type: string
      allowSystemOverrideForLockedRecipient:
        description:
          When **true,** if the recipient is locked on a template, advanced
          recipient routing can override the lock.
        type: string
      autoNavigation:
        description: "When **true,** autonavigation is set for the recipient.

          "
        type: string
      autoRespondedReason:
        description:
          "Error message provided by the destination email system. This
          field is only provided if the email notification to the recipient fails
          to send. This property is read-only.

          "
        type: string
      bulkRecipientsUri:
        description: Reserved for DocuSign.
        type: string
      bulkSendV2Recipient:
        description: ""
        type: string
      canSignOffline:
        description:
          When **true,** specifies that the signer can perform the signing
          ceremony offline.
        type: string
      clientUserId:
        description:
          "Specifies whether the recipient is embedded or remote. \n\nIf
          the `clientUserId` property is not null then the recipient is embedded.
          Use this field to associate the signer with their userId in your app. Authenticating
          the user is the responsibility of your app when you use embedded signing.\n\nIf
          the `clientUserId` property is set and either `SignerMustHaveAccount` or
          `SignerMustLoginToSign` property of the account settings is set to  **true,**
          an error is generated on sending.\n\n**Note:** This property is not returned
          by the [listStatusChanges](/docs/esign-rest-api/reference/envelopes/envelopes/liststatuschanges/)
          endpoint.\n\nMaximum length: 100 characters. \n"
        type: string
      completedCount:
        description:
          Indicates the number of times that the recipient has been through
          a signing completion for the envelope. If this number is greater than 0
          for a signing group, only the user who previously completed may sign again.
          This property is read-only.
        type: string
      consentDetailsList:
        description: ""
        type: array
        items:
          "$ref": "#/definitions/consentDetails"
      creationReason:
        description:
          The reason why the recipient was created (for example, `sender`).
          This property is read-only.
        type: string
      customFields:
        description:
          An optional array of strings that allows the sender to provide
          custom data about the recipient. This information is returned in the envelope
          status but otherwise not used by DocuSign. Each customField string can be
          a maximum of 100 characters.
        type: array
        items:
          type: string
      declinedDateTime:
        description:
          The date and time the recipient declined the document. This property
          is read-only.
        type: string
      declinedReason:
        description:
          The reason the recipient declined the document. This property
          is read-only.
        type: string
      defaultRecipient:
        description:
          When **true,** this recipient is the default recipient and any
          tabs generated by the transformPdfFields option are mapped to this recipient.
        type: string
      delegatedBy:
        "$ref": "#/definitions/delegationInfo"
        description: ""
      delegatedTo:
        description: ""
        type: array
        items:
          "$ref": "#/definitions/delegationInfo"
      deliveredDateTime:
        description:
          The date and time that the envelope was delivered to the recipient.
          This property is read-only.
        type: string
      deliveryMethod:
        description: |-
          The delivery method. One of:

          - `email`
          - `fax`
          - `SMS`
          - `WhatsApp`
          - `offline`

          The `SMS` and `WhatsApp` delivery methods
          are limited to `signer`, `carbonCopy`, and `certifiedDelivery`
          recipients.

          **Related topics**

          - [Using SMS delivery with the eSignature API][smsconcept]
          - [How to request a signature by SMS delivery][howto]

          [smsconcept]: /docs/esign-rest-api/esign101/concepts/sms-delivery/using-sms-esignature/
          [howto]: /docs/esign-rest-api/how-to/request-signature-sms/
        type: string
      deliveryMethodMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Reserved for DocuSign.
      designatorId:
        description: Reserved for DocuSign.
        type: string
      designatorIdGuid:
        description: Reserved for DocuSign.
        type: string
      documentVisibility:
        description:
          A list of `documentVisibility` objects. Each object in the list
          specifies whether a document in the envelope is visible to this recipient.
          For the envelope to use this functionality, Document Visibility must be
          enabled for the account and the `enforceSignerVisibility` property must
          be set to **true.**
        type: array
        items:
          "$ref": "#/definitions/documentVisibility"
      email:
        description: The recipient's email address.
        type: string
      emailMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `email` property is editable.
          This property is read-only.
      emailNotification:
        "$ref": "#/definitions/recipientEmailNotification"
        description: |-
          This optional property allows you to set a specific email subject and
          body for this recipient's notification email.

          **Note:** If you use this property, you _must_
          provide a value for the `supportedLanguage` sub-property.


          You can set the `emailNotification` property separately
          for each recipient. If you set the value only for certain
          recipients, the other recipients are assigned the values from
          the top-level `emailSubject` and `emailBlurb`.
      emailRecipientPostSigningURL:
        description: ""
        type: string
      embeddedRecipientStartURL:
        description:
          "Specifies a sender-provided valid URL string for redirecting
          an embedded recipient. When using this option, the embedded recipient still
          receives an email from DocuSign, just as a remote recipient would. When
          the document link in the email is clicked the recipient is redirected, through
          DocuSign, to the supplied URL to complete their actions. When routing to
          the URL, the sender's system (the server responding to the URL) must request
          a recipient token to launch a signing session. \n\nWhen `SIGN_AT_DOCUSIGN`,
          the recipient is directed to an embedded signing or viewing process directly
          at DocuSign. The signing or viewing action is initiated by the DocuSign
          system and the transaction activity and Certificate of Completion records
          will reflect this. In all other ways the process is identical to an embedded
          signing or viewing operation launched by a partner.\n\nIt is important to
          understand that in a typical embedded workflow, the authentication of an
          embedded recipient is the responsibility of the sending application. DocuSign
          expects that senders will follow their own processes for establishing the
          recipient's identity. In this workflow the recipient goes through the sending
          application before the embedded signing or viewing process is initiated.
          However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`,
          the recipient goes directly to the embedded signing or viewing process,
          bypassing the sending application and any authentication steps the sending
          application would use. In this case, DocuSign recommends that you use one
          of the normal DocuSign authentication features (Access Code, Phone Authentication,
          SMS Authentication, etc.) to verify the identity of the recipient.\n\nIf
          the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL`
          is set, DocuSign will ignore the redirect URL and launch the standard signing
          process for the email recipient. Information can be appended to the embedded
          recipient start URL using merge fields. The available merge fields items
          are: `envelopeId`, `recipientId`, `recipientName`, `recipientEmail`, and
          `customFields`. The `customFields` property must be set for the recipient
          or envelope. The merge fields are enclosed in double brackets. \n\n*Example*:
          \n\n`http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]` "
        type: string
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      excludedDocuments:
        description: |-
          Specifies the documents that are not visible to this recipient. Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to **true** for the envelope to use this.

          When enforce signer visibility is enabled, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.
        type: array
        items:
          type: string
      faxNumber:
        description: Reserved for DocuSign.
        type: string
      faxNumberMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Reserved for DocuSign.
      firstName:
        description: "The recipient's first name. Maximum Length: 50 characters."
        type: string
      firstNameMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `firstName` property is editable.
          This property is read-only.
      fullName:
        description: Reserved for DocuSign.
        type: string
      fullNameMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Reserved for DocuSign.
      idCheckConfigurationName:
        description:
          "The name of the authentication check to use. This value must
          match one of the authentication types that the account uses. The names of
          these authentication types appear in the web console sending interface in
          the Identify list for a recipient. This setting overrides any default authentication
          setting. Valid values are:\n\n- `Phone Auth $`: The recipient must authenticate
          by using two-factor authentication (2FA). You provide the phone number to
          use for 2FA in the `phoneAuthentication` object.\n- `SMS Auth $`: The recipient
          must authenticate via SMS. You provide the phone number to use in the `smsAuthentication`
          object.\n- `ID Check $`: The  recipient must answer detailed security questions.
          \n\n**Example:** Your account has ID Check and SMS Authentication available.
          In the web console Identify list, these appear as ID Check $ and SMS Auth
          $. To use ID Check in an envelope, the idCheckConfigurationName should be
          ID Check $. For SMS, you would use SMS Auth $, and you would also need to
          add a phone number to the smsAuthentication node."
        type: string
      idCheckConfigurationNameMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `idCheckConfigurationName`
          property is editable. This property is read-only.
      idCheckInformationInput:
        "$ref": "#/definitions/idCheckInformationInput"
        description:
          An object that contains input information related to a recipient
          ID check.
      identityVerification:
        "$ref": "#/definitions/recipientIdentityVerification"
        description:
          Specifies the ID Verification workflow applied on an envelope
          by workflow ID. <br/>See the [list](/docs/esign-rest-api/reference/accounts/identityverifications/list/)
          method in the [IdentityVerifications](/docs/esign-rest-api/reference/accounts/identityverifications/)
          resource for more information on how to retrieve workflow IDs available
          for an account. <br/>This can be used in addition to other [recipient authentication](https://support.docusign.com/s/document-item?bundleId=gav1643676262430&topicId=kzp1578456318101.html)
          methods. <br/>Note that ID Verification and ID Check are two distinct methods.
          ID Verification checks recipients' identity by verifying their ID while
          ID Check relies on data available on public records (such as current and
          former address).
      inheritEmailNotificationConfiguration:
        description:
          "When **true** and the envelope recipient creates a DocuSign
          account after signing, the Manage Account Email Notification settings are
          used as the default settings for the recipient's account. "
        type: string
      isBulkRecipient:
        description: "Reserved for DocuSign.

          "
        type: string
      isBulkRecipientMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Reserved for DocuSign.
      lastName:
        description: The recipient's last name.
        type: string
      lastNameMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `lastName` property is editable.
          This property is read-only.
      lockedRecipientPhoneAuthEditable:
        description: Reserved for DocuSign.
        type: string
      lockedRecipientSmsEditable:
        description: Reserved for DocuSign.
        type: string
      name:
        description: |-
          The full legal name of the recipient. Maximum Length: 100 characters.

          **Note:** You must always set a value for this property in requests, even if `firstName` and `lastName` are set.
        type: string
      nameMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `name` property is editable.
          This property is read-only.
      notaryId:
        description: ""
        type: string
      notarySignerEmailSent:
        description: ""
        type: string
      note:
        description: |
          A note sent to the recipient in the signing email.
          This note is unique to this recipient.
          In the user interface,
          it appears near the upper left corner
          of the document
          on the signing screen.

          Maximum Length: 1000 characters.
        type: string
      noteMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `note` property is editable.
          This property is read-only.
      offlineAttributes:
        "$ref": "#/definitions/offlineAttributes"
        description: Reserved for DocuSign.
      phoneAuthentication:
        "$ref": "#/definitions/recipientPhoneAuthentication"
        description: |+
          When `idCheckConfigurationName` is set to `Phone Auth $`, you use this complex type to provide the recipient authentication method details. It contains the following elements:

          * `recipMayProvideNumber`: Boolean. When **true,** the recipient can use whatever phone number they choose.
          * `senderProvidedNumbers`: ArrayOfStrings.  A list of phone numbers the recipient can use.
          * `recordVoicePrint`: Reserved for DocuSign.
          * `validateRecipProvidedNumber`: Reserved for DocuSign.

      phoneNumber:
        "$ref": "#/definitions/recipientPhoneNumber"
        description: Describes the recipient phone number.
      proofFile:
        "$ref": "#/definitions/recipientProofFile"
        description: The proof file of the recipient.
      recipientAttachments:
        description: Reserved for DocuSign.
        type: array
        items:
          "$ref": "#/definitions/recipientAttachment"
      recipientAuthenticationStatus:
        "$ref": "#/definitions/authenticationStatus"
        description:
          Information about the recipient's authentication status. This
          property is read-only.
      recipientFeatureMetadata:
        description:
          Metadata about the features that are supported for the recipient
          type. This property is read-only.
        type: array
        items:
          "$ref": "#/definitions/featureAvailableMetadata"
      recipientId:
        description:
          Unique for the recipient. It is used by the tab element to indicate
          which recipient is to sign the Document.
        type: string
      recipientIdGuid:
        description:
          The globally-unique identifier (GUID) for a specific recipient
          on a specific envelope. If the same recipient is associated with multiple
          envelopes, they will have a different GUID for each one. This property is
          read-only.
        type: string
      recipientSignatureProviders:
        description:
          The default signature provider is the DocuSign Electronic signature
          system. This parameter is used to specify one or more Standards Based Signature
          (digital signature) providers for the signer to use. [More information.](/docs/esign-rest-api/esign101/concepts/standards-based-signatures/)
        type: array
        items:
          "$ref": "#/definitions/recipientSignatureProvider"
      recipientSuppliesTabs:
        description: When **true,** specifies that the recipient creates the tabs.
        type: string
      recipientType:
        description: |-
          The recipient type, as specified by the following values:
          - `agent`: Agent recipients can add name and email information for recipients that appear after the agent in routing order.
          - `carbonCopy`: Carbon copy recipients get a copy of the envelope but don't need to sign, initial, date, or add information to any of the documents. This type of recipient can be used in any routing order.
          - `certifiedDelivery`: Certified delivery recipients must receive the completed documents for the envelope to be completed. They don't need to sign, initial, date, or add information to any of the documents.
          - `editor`: Editors have the same management and access rights for the envelope as the sender. Editors can add name and email information, add or change the routing order, set authentication options, and can edit signature/initial tabs and data fields for the remaining recipients.
          - `inPersonSigner`: In-person recipients are DocuSign users who act as signing hosts in the same physical location as the signer.
          - `intermediaries`: Intermediary recipients can optionally add name and email information for recipients at the same or subsequent level in the routing order.
          - `seal`: Electronic seal recipients represent legal entities.
          - `signer`: Signers are recipients who must sign, initial, date, or add data to form fields on the documents in the envelope.
          - `witness`: Witnesses are recipients whose signatures affirm that the identified signers have signed the documents in the envelope.
        type: string
      recipientTypeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `recipientType` property
          is editable. This property is read-only.
      requireIdLookup:
        description:
          "When **true,** the recipient is required to use the specified
          ID check method (including Phone and SMS authentication) to validate their
          identity. "
        type: string
      requireIdLookupMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `requireIdLookup` property
          is editable. This property is read-only.
      requireSignerCertificate:
        description:
          "By default, DocuSign signers create electronic signatures. This
          field can be used to require the signer to use a SAFE-BioPharma digital
          certificate for signing.\n\nThis parameter should only be used to select
          a SAFE-BioPharma certificate. New integrations should use the `recipientSignatureProviders`
          parameter for other types of digital certificates. \n\nSet this parameter
          to `safe` to use a SAFE-BioPharma certificate.\n\nThe signer must be enrolled
          in the SAFE program to sign with a SAFE certificate."
        type: string
      requireSignOnPaper:
        description:
          When **true,** the signer must print, sign, and upload or fax
          the signed documents to DocuSign.
        type: string
      requireUploadSignature:
        description:
          When **true,** the signer is required to upload a new signature,
          even if they have a pre-adopted signature in their personal DocuSign account.
        type: string
      roleName:
        description:
          Optional element. Specifies the role name associated with the
          recipient.<br/><br/>This property is required when you are working with
          template recipients.
        type: string
      routingOrder:
        description: "Specifies the routing order of the recipient in the envelope. "
        type: string
      routingOrderMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `routingOrder` property is
          editable. This property is read-only.
      sentDateTime:
        description:
          The UTC DateTime when the envelope was sent. This property is
          read-only.
        type: string
      signatureInfo:
        "$ref": "#/definitions/recipientSignatureInformation"
        description: |-
          Allows the sender to pre-specify the signature name, signature initials and signature font used in the signature stamp for the recipient.

          Used only with recipient types In Person Signers and Signers.
      signedDateTime:
        description: Reserved for DocuSign.
        type: string
      signInEachLocation:
        description:
          When **true** and the feature is enabled in the sender's account,
          the signing recipient is required to draw signatures and initials at each
          signature/initial tab (instead of adopting a signature/initial style or
          only drawing a signature/initial once).
        type: string
      signInEachLocationMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `signInEachLocation` property
          is editable. This property is read-only.
      signingGroupId:
        description:
          "The ID of the [signing group](https://support.docusign.com/s/document-item?bundleId=gav1643676262430&topicId=zgn1578456447934.html).

          "
        type: string
      signingGroupIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `signingGroupId` property
          is editable. This property is read-only.
      signingGroupName:
        description:
          "Optional. The name of the signing group. \n\nMaximum Length:
          100 characters. "
        type: string
      signingGroupUsers:
        description:
          A complex type that contains information about users in the signing
          group.
        type: array
        items:
          "$ref": "#/definitions/userInfo"
      smsAuthentication:
        "$ref": "#/definitions/recipientSMSAuthentication"
        description:
          "When `idCheckConfigurationName` is set to `SMS Auth $`, you
          use this complex type to provide the recipient authentication method details.
          It contains the element `senderProvidedNumbers`, which is an array of phone
          numbers that the recipient can use for SMS text authentication. \n\n"
      socialAuthentications:
        description: Deprecated.
        type: array
        items:
          "$ref": "#/definitions/socialAuthentication"
      status:
        description:
          "The recipient's status. This property is read-only. \n\nValid
          values:\n\n- `autoresponded`: The recipient's email system auto-responded
          to the email from DocuSign. This status is used in the web console to inform
          senders about the bounced-back email. This recipient status is only used
          if **Send-on-behalf-of** is turned off for the account.\n- `completed`:
          The recipient has completed their actions (signing or other required actions
          if not a signer) for an envelope.\n- `created`: The recipient is in a draft
          state. This value is only associated with draft envelopes (envelopes that
          have a status of `created`).\n- `declined`: The recipient declined to sign
          the documents in the envelope.\n- `delivered`: The recipient has viewed
          the documents in an envelope through the DocuSign signing website. This
          is not an email delivery of the documents in an envelope.\n- `faxPending`:
          The recipient has finished signing and the system is waiting for a fax attachment
          from the recipient before completing their signing step.\n- `sent`: The
          recipient has been sent an email notification that it is their turn to sign
          an envelope.\n- `signed`: The recipient has completed (signed) all required
          tags in an envelope. This is a temporary state during processing, after
          which the recipient's status automatically switches to `completed`."
        type: string
      statusCode:
        description:
          The code associated with the recipient's status. This property
          is read-only.
        type: string
      suppressEmails:
        description:
          When **true,** email notifications are suppressed for the recipient,
          and they must access envelopes and documents from their DocuSign inbox.
        type: string
      tabs:
        "$ref": "#/definitions/EnvelopeRecipientTabs"
        description:
          A list of tabs, which are represented graphically as symbols
          on documents at the time of signing. Tabs show recipients where to sign,
          initial, or enter data. They may also display data to the recipients.
      templateLocked:
        description:
          "When **true,** the sender cannot change any attributes of the
          recipient. Used only when working with template recipients. "
        type: string
      templateRequired:
        description:
          When **true,** the sender may not remove the recipient. Used
          only when working with template recipients.
        type: string
      totalTabCount:
        description: The total number of tabs in the documents. This property is read-only.
        type: string
      userId:
        description: |-
          The ID of the user to access.

          **Note:** Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.
        type: string
      witnessFor:
        description:
          The `recipientId` of the person or party for whom the recipient
          is a witness.
        type: string
      witnessForGuid:
        description: Not used. Use the `witnessFor` property instead.
        type: string
    description:
      A complex type containing information about a witness recipient.
      Witnesses are recipients whose signatures affirm that the identified signers
      have signed the documents in the envelope.
    x-ds-definition-name: witness
    x-ms-summary:
      A complex type containing information about a witness recipient.
      Witnesses are recipients whose signatures affirm that the identified signers
      have signed the documents in the envelope.
  workflow:
    type: object
    properties:
      currentWorkflowStepId:
        description: |-
          The `workflowStepId` of the current step.
          This is not an index into the `workflowSteps` array in this object.
          See the `workflowStep` object.
        type: string
      resumeDate:
        description: |-
          The ISO 8601 timestamp of when the envelope is scheduled to be sent, if applicable. Its value is the maximum of the `resumeDate` property on `scheduledSending` and the `resumeDate` property on the current `workflowStep`.

          This property is read-only.
        type: string
      scheduledSending:
        "$ref": "#/definitions/scheduledSending"
        description: An object that describes the settings for scheduled sending.
      workflowStatus:
        description: |-
          The status of the workflow:

          - `paused` if the workflow is paused
          - `in_progress` if the workflow is in progress
        type: string
      workflowSteps:
        description: An array of workflow steps.
        type: array
        items:
          "$ref": "#/definitions/workflowStep"
    description: Describes the workflow for an envelope.
    x-ds-definition-name: workflow
    x-ms-summary: Describes the workflow for an envelope.
  workflowStep:
    type: object
    properties:
      action:
        description: |
          Indicates the action to perform. Valid values:

          - `pause_before`: The workflow should pause before the trigger described by `triggerOnItem` is reached.
        type: string
      completedDate:
        description: |-
          The timestamp of when the workflow step transitioned to `completed` status.

          This property is read-only.
        type: string
      delayedRouting:
        "$ref": "#/definitions/delayedRouting"
        description:
          A complex element that specifies the delayed routing settings
          for the workflow step.
      itemId:
        description: The unique ID of the item being triggered.
        type: string
      recipientRouting:
        "$ref": "#/definitions/recipientRouting"
        description: The rules for recipient routing.
      status:
        description: |-
          The status of the step. Valid values:

          - `inactive`
          - `in_progress`
          - `paused`
          - `pending`
          - `completed`

          This property is read-only.
        type: string
      triggeredDate:
        description: |-
          The timestamp of when the workflow step transitioned to `in_progress` status.

          This property is read-only.
        type: string
      triggerOnItem:
        description: |-
          The type of item that triggers this workflow step. Valid values:

          * `routing_order`
        type: string
      workflowStepId:
        description: |-
          A unique identifier for this workflow step.

          This property is read-only.
        type: string
    description: Describes a single step in a workflow.
    x-ds-definition-name: workflowStep
    x-ms-summary: Describes a single step in a workflow.
  workspace:
    description:
      A DocuSign workspace is a collaboration area for sharing files and
      data.
    type: object
    properties:
      billableAccountId:
        description: The ID of the account to bill.
        type: string
      callerInformation:
        "$ref": "#/definitions/workspaceUser"
        description: ""
      created:
        description: The UTC DateTime when the workspace user authorization was created.
        type: string
      createdByInformation:
        "$ref": "#/definitions/workspaceUser"
        description: Details about the user who created the workspace.
      lastModified:
        description:
          Utc date and time the comment was last updated (can only be done
          by creator.)
        type: string
      lastModifiedByInformation:
        "$ref": "#/definitions/workspaceUser"
        description: Details about the user who last modified the workspace.
      settings:
        "$ref": "#/definitions/workspaceSettings"
        description: Information about the settings for the workspace.
      status:
        description:
          "Indicates the envelope status. Valid values are:\n\n* sent -
          The envelope is sent to the recipients. \n* created - The envelope is saved
          as a draft and can be modified and sent later."
        type: string
      workspaceBaseUrl:
        description: The relative URL for accessing the workspace.
        type: string
      workspaceDescription:
        description: Text describing the purpose of the workspace.
        type: string
      workspaceId:
        description: The ID of the workspace, always populated.
        type: string
      workspaceName:
        description: The name of the workspace.
        type: string
      workspaceUri:
        description: The relative URI for accessing the workspace.
        type: string
    x-ds-definition-name: workspace
    x-ms-summary:
      A DocuSign workspace is a collaboration area for sharing files and
      data.
  workspaceFolderContents:
    description: This object's properties describe the contents of a workspace folder.
    type: object
    properties:
      endPosition:
        description: "The last index position in the result set. "
        type: string
      folder:
        "$ref": "#/definitions/workspaceItem"
        description:
          The folder from which to return items. You can enter either the
          folder name or folder ID.
      items:
        description: A list of workspace items.
        type: array
        items:
          "$ref": "#/definitions/workspaceItem"
      parentFolders:
        description: ""
        type: array
        items:
          "$ref": "#/definitions/workspaceItem"
      resultSetSize:
        description:
          The number of results in this response. Because you can filter
          which entries are included in the response, this value is always less than
          or equal to the `totalSetSize`.
        type: string
      startPosition:
        description: The starting index position of the current result set.
        type: string
      totalSetSize:
        description:
          The total number of items in the result set. This value is always
          greater than or equal to the value of `resultSetSize`.
        type: string
      workspaceId:
        description: The ID of the workspace, always populated.
        type: string
    x-ds-definition-name: workspaceFolderContents
    x-ms-summary: This object's properties describe the contents of a workspace folder.
  workspaceItem:
    description:
      This object represents an item in a workspace, which can be either
      a file or folder.
    type: object
    properties:
      callerAuthorization:
        "$ref": "#/definitions/workspaceUserAuthorization"
        description: ""
      contentType:
        description:
          If the item is a file, this property specifies the content type
          of the file.
        type: string
      created:
        description: The UTC DateTime when the workspace item was created.
        type: string
      createdById:
        description: The ID of the user who created the workspace item.
        type: string
      createdByInformation:
        "$ref": "#/definitions/workspaceUser"
        description: Details about the user who created the workspace item.
      extension:
        description: The file extension of a file item.
        type: string
      fileSize:
        description: The size of the file in bytes.
        type: string
      fileUri:
        description: The URI for retrieving the file.
        type: string
      id:
        description: A unique ID for the Salesforce object.
        type: string
      isPublic:
        description: " When **true,** the item is public."
        type: string
      lastModified:
        description: |-
          The UTC date and time that the comment was last updated.

          **Note:** This can only be done by the creator.
        type: string
      lastModifiedById:
        description: The ID of the user who last modified the item.
        type: string
      lastModifiedByInformation:
        "$ref": "#/definitions/workspaceUser"
        description: Details about the user who last modified the workspace item.
      name:
        description: The name of the file or folder.
        type: string
      pageCount:
        description: The number of pages in a file.
        type: string
      parentFolderId:
        description:
          The ID of the parent folder, or the special value `root` for
          the root folder.
        type: string
      parentFolderUri:
        description: The URI of the parent folder.
        type: string
      sha256:
        description:
          A 64-byte, Secure Hash Algorithm 256 (SHA256) checksum that the
          caller computes across the entirety of the original content of a file. DocuSign
          compares this value to its own computation. If the two values are not equal,
          the original content and received content are not the same and the upload
          is refused.
        type: string
      thumbHeight:
        description: The height of the thumbnail image.
        type: string
      thumbnail:
        "$ref": "#/definitions/page"
        description: ""
      thumbWidth:
        description: The width of the thumbnail image.
        type: string
      type:
        description: The type of the workspace item. Valid values are file, folder.
        type: string
      uri:
        description: A URI containing the user ID.
        type: string
      userAuthorization:
        "$ref": "#/definitions/workspaceUserAuthorization"
        description: ""
    x-ds-definition-name: workspaceItem
    x-ms-summary:
      This object represents an item in a workspace, which can be either
      a file or folder.
  workspaceItemList:
    description: An array of objects that describe the items in a workspace.
    type: object
    properties:
      items:
        description: A list of workspace items.
        type: array
        items:
          "$ref": "#/definitions/workspaceItem"
    x-ds-definition-name: workspaceItemList
    x-ms-summary: An array of objects that describe the items in a workspace.
  workspaceList:
    description: This object contains a list of available workspaces.
    type: object
    properties:
      endPosition:
        description: "The last index position in the result set. "
        type: string
      resultSetSize:
        description:
          The number of results in this response. Because you can filter
          which entries are included in the response, this value is always less than
          or equal to the `totalSetSize`.
        type: string
      startPosition:
        description: The starting index position of the current result set.
        type: string
      totalSetSize:
        description:
          The total number of items in the result set. This value is always
          greater than or equal to the value of `resultSetSize`.
        type: string
      workspaces:
        description: A list of workspaces.
        type: array
        items:
          "$ref": "#/definitions/workspace"
    x-ds-definition-name: workspaceList
    x-ms-summary: This object contains a list of available workspaces.
  workspaceSettings:
    type: object
    properties:
      commentsAllowed:
        description:
          When **true,** commenting on the documents in the workspace is
          allowed.
        type: string
    description: This object provides information about the settings for the workspace.
    x-ds-definition-name: workspaceSettings
    x-ms-summary: This object provides information about the settings for the workspace.
  workspaceUser:
    description:
      "This object represents the workspace user. This property is only
      returned in response to user specific GET call. "
    type: object
    properties:
      accountId:
        description: The account ID associated with the workspace user.
        type: string
      accountName:
        description: The name of the account that the workspace user belongs to.
        type: string
      activeSince:
        description: The UTC DateTime when the user joined the workspace.
        type: string
      created:
        description: The UTC DateTime when the workspace user was created.
        type: string
      createdById:
        description: The ID of the user who created this workspace user.
        type: string
      email:
        description: The workspace user's email address.
        type: string
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      invitationEmailBlurb:
        description:
          The text of the workspace invitation email message sent to the
          user.
        type: string
      invitationEmailSubject:
        description:
          The subject line of the workspace invitation email message sent
          to the user.
        type: string
      lastModified:
        description: The UTC DateTime that the workspace user was last modified.
        type: string
      lastModifiedById:
        description: The ID of the user who last modified the workspace user.
        type: string
      status:
        description:
          "Filters the results by user status.\nYou can specify a comma-separated\nlist
          of the following statuses:\n\n* ActivationRequired \n* ActivationSent \n*
          Active\n* Closed \n* Disabled"
        type: string
      type:
        description: "Type of the user. Valid values: type_owner, type_participant."
        type: string
      userId:
        description: The ID of the workspace user.
        type: string
      userName:
        description: The name of workspace user.
        type: string
      workspaceId:
        description: The ID of the workspace.
        type: string
      workspaceUserBaseUrl:
        description: The URL for accessing the workspace user.
        type: string
      workspaceUserId:
        description: The ID of the workspace user.
        type: string
      workspaceUserUri:
        description: The URI for accessing the workspace user.
        type: string
    x-ds-definition-name: workspaceUser
    x-ms-summary:
      "This object represents the workspace user. This property is only
      returned in response to user specific GET call. "
  workspaceUserAuthorization:
    description: Provides properties that describe user authorization to a workspace.
    type: object
    properties:
      canDelete:
        description: When **true,** the workspace user can delete items from the workspace.
        type: string
      canMove:
        description: When **true,** the workspace user can move the items in the workspace.
        type: string
      canTransact:
        description:
          When **true,** the workspace user can create transactions from
          the workspace.
        type: string
      canView:
        description: When **true,** the workspace user can view the items in the workspace.
        type: string
      created:
        description: The UTC DateTime when the workspace user authorization was created.
        type: string
      createdById:
        description: "The ID of the user who created the workspace user authorization. "
        type: string
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      modified:
        description:
          The UTC DateTime when the workspace user authorization was last
          modified.
        type: string
      modifiedById:
        description: The ID of the user who last modified the workspace user authorization.
        type: string
      workspaceUserId:
        description: The ID of the workspace user.
        type: string
      workspaceUserInformation:
        "$ref": "#/definitions/workspaceUser"
        description: An object that provides details about the workspace user.
    x-ds-definition-name: workspaceUserAuthorization
    x-ms-summary: Provides properties that describe user authorization to a workspace.
  zip:
    type: object
    properties:
      anchorAllowWhiteSpaceInCharacters:
        description: |
          When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.

          First, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.

          Second, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.

          The default value is **true.**
        type: string
      anchorAllowWhiteSpaceInCharactersMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorAllowWhiteSpaceInCharacters`
          property is editable.
      anchorCaseSensitive:
        description: |-
          This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**

          For example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.

          This functionality uses the following rules:

          - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:

            $~><|^+=

            For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`

          - Strings embedded in other strings are ignored during the matching process.

          - In words that have dashes, the parts separated by dashes are treated as distinct words.

            Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**

          - Letters with accent marks are treated as distinct characters from their unaccented counterparts.

          - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.

            Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.

          - Unlike punctuation, numbers are not ignored when finding anchor words.

            Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).

          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorCaseSensitiveMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorCaseSensitive` property
          is editable.
      anchorHorizontalAlignment:
        description: |
          This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :

          - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.
          - `right`: Aligns the tab’s left side with the last character of the matching anchor word.

          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorHorizontalAlignmentMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorHorizontalAlignment`
          property is editable.
      anchorIgnoreIfNotPresent:
        description:
          When **true,** this tab is ignored if the `anchorString` is not
          found in the document.
        type: string
      anchorIgnoreIfNotPresentMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorIgnoreIfNotPresent`
          property is editable.
      anchorMatchWholeWord:
        description: |
          When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**

          For example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.

          This functionality uses the following rules:

          - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:

            $~><|^+=

            For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`

          - Strings embedded in other strings are ignored during the matching process.

          - In words that have dashes, the parts separated by dashes are treated as distinct words.

            Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**

          - Letters with accent marks are treated as distinct characters from their unaccented counterparts.

          - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.

            Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.

          - Unlike punctuation, numbers are not ignored when finding anchor words.

            Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).


          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorMatchWholeWordMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorMatchWholeWord` property
          is editable.
      anchorString:
        description:
          Specifies the string to find in the document and use as the basis
          for tab placement.
        type: string
      anchorStringMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorString` property is
          editable.
      anchorTabProcessorVersion:
        description: Reserved for DocuSign.
        type: string
      anchorTabProcessorVersionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Reserved for DocuSign.
      anchorUnits:
        description: |
          Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:

          - `pixels` (default)
          - `inches`
          - `mms`
          - `cms`
        type: string
      anchorUnitsMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorUnits` property is
          editable.
      anchorXOffset:
        description:
          "Specifies the X axis location of the tab in `anchorUnits` relative
          to the `anchorString`.

          "
        type: string
      anchorXOffsetMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorXOffset` property
          is editable.
      anchorYOffset:
        description:
          "Specifies the Y axis location of the tab in `anchorUnits` relative
          to the `anchorString`.

          "
        type: string
      anchorYOffsetMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `anchorYOffset` property
          is editable.
      bold:
        description: When **true,** the information in the tab is bold.
        type: string
      boldMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `bold` property is editable.
      caption:
        description: ""
        type: string
      captionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `caption` property is editable.
      concealValueOnDocument:
        description: |-
          When **true,** the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.

          When an envelope is completed the information is only available to the sender through the Form Data link in the DocuSign Console. The information on the downloaded document remains masked by asterisks.

          This setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.
        type: string
      concealValueOnDocumentMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `concealValueOnDocument`
          property is editable.
      conditionalParentLabel:
        description:
          For conditional fields this is the `tabLabel` of the parent tab
          that controls this tab's visibility.
        type: string
      conditionalParentLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `conditionalParentLabel`
          property is editable.
      conditionalParentValue:
        description: |
          For conditional fields, this is the value of the parent tab that controls the tab's visibility.

          If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use "on" as the value to show that the parent tab is active.
        type: string
      conditionalParentValueMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `conditionalParentValue`
          property is editable.
      customTabId:
        description:
          The DocuSign generated custom tab ID for the custom tab to be
          applied. This can only be used when adding new tabs for a recipient. When
          used, the new tab inherits all the custom tab properties.
        type: string
      customTabIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `customTabId` property is
          editable.
      disableAutoSize:
        description:
          When **true,** disables the auto sizing of single line text boxes
          in the signing screen when the signer enters data. If disabled users will
          only be able enter as much data as the text box can hold. By default this
          is false. This property only affects single line text boxes.
        type: string
      disableAutoSizeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `disableAutoSize` property
          is editable.
      documentId:
        description:
          Specifies the document ID number that the tab is placed on. This
          must refer to an existing Document's ID attribute.
        type: string
      documentIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `documentId` property is
          editable.
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      font:
        description: |
          The font to be used for the tab value. Supported fonts include:

          - Default
          - Arial
          - ArialNarrow
          - Calibri
          - CourierNew
          - Garamond
          - Georgia
          - Helvetica
          - LucidaConsole
          - MSGothic
          - MSMincho
          - OCR-A
          - Tahoma
          - TimesNewRoman
          - Trebuchet
          - Verdana
        type: string
      fontColor:
        description:
          "The font color to use for the information in the tab. Possible
          values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n-
          Gold\n- Green\n- NavyBlue\n- Purple\n- White\n"
        type: string
      fontColorMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `fontColor` property is editable.
      fontMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `font` property is editable.
      fontSize:
        description: |-
          The font size used for the information in the tab. Possible values are:

          - Size7
          - Size8
          - Size9
          - Size10
          - Size11
          - Size12
          - Size14
          - Size16
          - Size18
          - Size20
          - Size22
          - Size24
          - Size26
          - Size28
          - Size36
          - Size48
          - Size72
        type: string
      fontSizeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `fontSize` property is editable.
      formOrder:
        description:
          An integer specifying the order in which the guided form HTML
          should render. The order is relative to the `formPageLabel`, the group by
          which to place the guided form HTML block.
        type: string
      formOrderMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `formOrder` property is editable.
      formPageLabel:
        description:
          A string specifying the group in which to place the guided form
          HTML. Each group displays as a separate guided forms page in the signing
          experience.
        type: string
      formPageLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `formPageLabel` property
          is editable.
      formPageNumber:
        description:
          An integer specifying the order in which to present the guided
          form pages.
        type: string
      formPageNumberMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `fromPageNumber` property
          is editable.
      height:
        description: |-
          The height of the tab in pixels.
          Must be an integer.
        type: string
      heightMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `height` property is editable.
      italic:
        description: When **true,** the information in the tab is italic.
        type: string
      italicMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `italic` property is editable.
      localePolicy:
        "$ref": "#/definitions/localePolicyTab"
        description: Locale-specific settings.
      locked:
        description:
          When **true,** the signer cannot change the data of the custom
          tab.
        type: string
      lockedMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `locked` property is editable.
      maxLength:
        description:
          An optional value that describes the maximum length of the property
          when the property is a string.
        type: string
      maxLengthMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `maxLength` property is editable.
      mergeField:
        "$ref": "#/definitions/mergeField"
        description:
          Contains the information necessary to map the tab to a field
          in SalesForce.
      mergeFieldXml:
        description: Reserved for DocuSign.
        type: string
      name:
        description: |-
          The name of the tab. For example, `Sign Here` or `Initial Here`.

          If the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.
        type: string
      nameMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `name` property is editable.
          This property is read-only.
      originalValue:
        description: "The initial value of the tab. "
        type: string
      originalValueMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `originalValue` property
          is editable.
      pageNumber:
        description:
          The page number on which the tab is located. For supplemental
          documents, this value must be `1`.
        type: string
      pageNumberMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `pageNumber` property is
          editable.
      recipientId:
        description: |
          A local reference used to map
          recipients to other objects, such as specific
          document tabs.

          A `recipientId` must be
          either an integer or a GUID,
          and the `recipientId` must be
          unique within an envelope.

          For example, many envelopes assign the first recipient
          a `recipientId` of `1`.
        type: string
      recipientIdGuid:
        description:
          The globally-unique identifier (GUID) for a specific recipient
          on a specific envelope. If the same recipient is associated with multiple
          envelopes, they will have a different GUID for each one. This property is
          read-only.
        type: string
      recipientIdGuidMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `recipientIdGuid` property
          is editable.
      recipientIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `recipientId` property is
          editable.
      requireAll:
        description:
          "When **true** and shared is true, information must be entered
          in this field to complete the envelope. "
        type: string
      requireAllMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `requireAll` property is
          editable.
      required:
        description: When **true,** the signer is required to fill out this tab.
        type: string
      requiredMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `required` property is editable.
      requireInitialOnSharedChange:
        description:
          Optional element for field markup. When **true,** the signer
          is required to initial when they modify a shared field.
        type: string
      requireInitialOnSharedChangeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `requireInitialOnSharedChange`
          property is editable.
      senderRequired:
        description:
          "When **true,** the sender must populate the tab before an envelope
          can be sent using the template. \n\nThis value tab can only be changed by
          modifying (PUT) the template. \n\nTabs with a `senderRequired` value of
          true cannot be deleted from an envelope."
        type: string
      senderRequiredMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `senderRequired` property
          is editable.
      shared:
        description: When **true,** this custom tab is shared.
        type: string
      sharedMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `shared` property is editable.
      shareToRecipients:
        description: Reserved for DocuSign.
        type: string
      shareToRecipientsMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Reserved for DocuSign.
      smartContractInformation:
        "$ref": "#/definitions/smartContractInformation"
        description: Reserved for DocuSign.
      source:
        description: Reserved for DocuSign.
        type: string
      status:
        description: |
          The status of the tab. Possible values are:

          - `active`: The tab is active, but the recipient has not yet interacted with it.
          - `signed`: The recipient signed the tab.
          - `declined`: The recipient declined the envelope.
          - `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).
        type: string
      statusMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `status` property is editable.
      tabGroupLabels:
        description: |-
          An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.

          To associate this tab with a tab group, add the tab group's `groupLabel` to this array.
        type: array
        items:
          type: string
      tabGroupLabelsMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `tabGroupLabels` property
          is editable.
      tabId:
        description: The unique identifier for the tab.
        type: string
      tabIdMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabId` property is editable.
      tabLabel:
        description: |
          The label associated with the tab. This value may be an empty string.
          If no value is provided, the tab type is used as the value.

          Maximum Length: 500 characters.
        type: string
      tabLabelMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabLabel` property is editable.
      tabOrder:
        description: |-
          A positive integer that sets the order the tab is navigated to during signing.

          Tabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.
        type: string
      tabOrderMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabOrder` property is editable.
      tabType:
        description: Indicates the type of tab (for example, `signHere` or `initialHere`).
        type: string
      tabTypeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `tabType` property is editable.
      templateLocked:
        description:
          "When **true,** the sender cannot change any attributes of the
          recipient. Used only when working with template recipients. "
        type: string
      templateLockedMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `templateLocked` property
          is editable.
      templateRequired:
        description:
          When **true,** the sender may not remove the recipient. Used
          only when working with template recipients.
        type: string
      templateRequiredMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `templateRequired` property
          is editable.
      tooltip:
        description:
          "The text of a tooltip that appears when a user hovers over a
          form field or tab.

          "
        type: string
      toolTipMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          "Metadata that indicates whether the `toolTip` property is editable.

          "
      underline:
        description: When **true,** the information in the tab is underlined.
        type: string
      underlineMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `underline` property is editable.
      useDash4:
        description: When **true,** ZIP+4 format is used.
        type: string
      useDash4Metadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `useDash4` property is editable.
      validationMessage:
        description:
          The message displayed if the custom tab fails input validation
          (either custom of embedded).
        type: string
      validationMessageMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `validationMessage` property
          is editable.
      validationPattern:
        description: A regular expression used to validate input for the tab.
        type: string
      validationPatternMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          Metadata that indicates whether the `validationPattern` property
          is editable.
      value:
        description: "Specifies the value of the tab. "
        type: string
      valueMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `value` property is editable.
      width:
        description: |-
          The width of the tab in pixels.
          Must be an integer.
        type: string
      widthMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `width` property is editable.
      xPosition:
        description: |
          This property indicates the horizontal offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. Must be an integer. May be zero.

          To improve the tab's position on the document,
          DocuSign recommends
          adjusting `xPosition`
          and `yPosition`
          coordinates
          by (-3, -2)
        type: string
      xPositionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `xPosition` property is editable.
      yPosition:
        description: |
          This property indicates the vertical offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. Must be an integer. May be zero.

          To improve the tab's position on the document,
          DocuSign recommends
          adjusting `xPosition`
          and `yPosition`
          coordinates
          by (-3, -2)
        type: string
      yPositionMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description: Metadata that indicates whether the `yPosition` property is editable.
    description: |
      A tab that allows the recipient to enter a ZIP code. The ZIP
      code can be five digits or nine digits in the ZIP+4 format.
      The zip code can be typed with or without dashes. It uses
      the same parameters as a Text tab, with the validation
      message and pattern set for ZIP code information.
    x-ds-definition-name: zip
    x-ms-summary: |
      A tab that allows the recipient to enter a ZIP code. The ZIP
      code can be five digits or nine digits in the ZIP+4 format.
      The zip code can be typed with or without dashes. It uses
      the same parameters as a Text tab, with the validation
      message and pattern set for ZIP code information.
  AccountBrands:
    type: object
    properties:
      brands:
        description: A list of brands.
        type: array
        items:
          "$ref": "#/definitions/brand"
      recipientBrandIdDefault:
        description:
          The brand that envelope recipients see when a brand is not explicitly
          set.
        type: string
      senderBrandIdDefault:
        description:
          The brand that envelope senders see when a brand is not explicitly
          set.
        type: string
    x-ds-definition-name: brandsResponse
    description:
      The AccountBrands resource enables you to use account-level brands
      to customize the styles and text that recipients see.
    x-ds-category: Accounts
    x-ds-order: "10"
    x-ms-summary:
      The AccountBrands resource enables you to use account-level brands
      to customize the styles and text that recipients see.
  AccountConsumerDisclosures:
    type: object
    properties:
      accountEsignId:
        description: The GUID of the account associated with the consumer disclosure.
        type: string
      allowCDWithdraw:
        description: |-
          When **true,** indicates that the customer can withdraw their consent to the consumer disclosure when they decline to sign documents. If these recipients sign documents sent to them from your account in the future, they will be required to agree to the terms in the disclosure. The default value is **false.**
          **Note:** Only Admin users can change this setting.
        type: string
      allowCDWithdrawMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `allowCDWithdraw` property
          is editable.

          "
      changeEmail:
        description: |-
          If the customer needs to change their email address, this is the email address to which they should the change request.

          Maximum length: 100 characters.
        type: string
      changeEmailOther:
        description:
          "Other information about the requirements for the user to change
          their email address.\n\nMaximum length: 255 characters.\n\nExample: \n\n`We
          do not require any other information from you to change your email address.`"
        type: string
      companyName:
        description: |-
          Specifies the company name used in the disclosure. The default value is the account name.

          However, if your account uses signing brands that specify a company name, you can substitute the brand's company name by setting the `useBrand` property to **true.** Whenever an envelope is sent from the account that uses a signing brand with a specified `companyName`, that value is used in email notifications and in the signing experience.

          **Note:** This substitution only works if you use the default legal disclosure or if you apply the `companyName` to the merge fields in a custom ERSD. You must also set the value of the `useBrand` property to **true.**
        type: string
      companyPhone:
        description:
          The phone number of the company associated with the consumer
          disclosure, as a free-formatted string.
        type: string
      copyCostPerPage:
        description:
          "The cost per page if the customer requests paper copies.\n\nExample:
          \n\n`0.0000`"
        type: string
      copyFeeCollectionMethod:
        description:
          "Specifies the fee collection method for cases in which the customer
          requires paper copies of the document.\n\nMaximum length: 255 characters.\n\nExample:
          \n\n`We will bill you for any fees at that time, if any.`"
        type: string
      copyRequestEmail:
        description: |-
          The email address to which the customer should send a request for copies of a document.

          Maximum length: 100 characters.
        type: string
      custom:
        description:
          When **true,** indicates that the consumer disclosure is a custom
          disclosure. The default is **false.**
        type: string
      enableEsign:
        description: When **true** (default), indicates that eSign is enabled.
        type: string
      esignAgreement:
        description:
          The final, assembled text of the Electronic Record and Signature
          Disclosure that includes the appropriate `companyName` and other specifics.
          It also includes the HTML tags used for formatting.
        type: string
      esignText:
        description: |-
          The template for the Electronic Record and Signature Disclosure, which contains placeholders for information such as the `companyName`. It also includes the HTML tags used for formatting.

          **Note:** If you are switching to or updating a custom disclosure, you can edit both the text and the HTML formatting.
        type: string
      languageCode:
        description:
          "The code for the language version of the disclosure. The following
          languages are supported:\n\n- Arabic (`ar`)\n- Bulgarian (`bg`)\n- Czech
          (`cs`)\n- Chinese Simplified (`zh_CN`)\n- Chinese Traditional (`zh_TW`)\n-
          Croatian (`hr`)\n- Danish (`da`)\n- Dutch (`nl`)\n- English US (`en`)\n-
          English UK (`en_GB`)\n- Estonian (`et`)\n- Farsi (`fa`)\n- Finnish (`fi`)\n-
          French (`fr`)\n- French Canadian (`fr_CA`)\n- German (`de`)\n- Greek (`el`)\n-
          Hebrew (`he`)\n- Hindi (`hi`)\n- Hungarian (`hu`)\n- Bahasa Indonesian (`id`)\n-
          Italian (`it`)\n- Japanese (`ja`)\n- Korean (`ko`)\n- Latvian (`lv`)\n-
          Lithuanian (`lt`)\n- Bahasa Melayu (`ms`)\n- Norwegian (`no`)\n- Polish
          (`pl`)\n- Portuguese (`pt`)\n- Portuguese Brazil (`pt_BR`)\n- Romanian (`ro`)\n-
          Russian (`ru`)\n- Serbian (`sr`)\n- Slovak (`sk`)\n- Slovenian (`sl`)\n-
          Spanish (`es`)\n- Spanish Latin America (`es_MX`)\n- Swedish (`sv`)\n- Thai
          (`th`)\n- Turkish (`tr`)\n- Ukrainian (`uk`) \n- Vietnamese (`vi`)\n\nAdditionally,
          you can automatically detect the browser language being used by the viewer
          and display the disclosure in that language by setting the value to `browser`."
        type: string
      mustAgreeToEsign:
        description:
          When **true,** the  recipient must agree to the consumer disclosure.
          The value of this property is read-only. It is calculated based on the account
          setting `consumerDisclosureFrequency` and the user's actions.
        type: string
      pdfId:
        description:
          "**Deprecated.** \n\nThe `pdfId` property in the consumer_disclosure
          PUT request is deprecated. For security reasons going forward, any value
          provided in the request packet must be ignored. "
        type: string
      useBrand:
        description:
          "When **true,** specifies that the company name in the signing
          brand is used for the disclosure. Whenever an envelope is sent from the
          account that uses a signing brand with a specified company name, that value
          is used in email notifications and in the signing experience.  \n\nWhen
          **false** (default), or if the signing brand does not specify a company
          name, the account name is used instead.\n\n**Note:** This substitution only
          works if you use the default legal disclosure or if you apply the `companyName`
          to the merge fields in a custom ERSD. "
        type: string
      useConsumerDisclosureWithinAccount:
        description:
          When **true,** specifies that recipients in the same account
          as the sender must agree to eSign an Electronic Record and Signature Disclosure
          Statement.
        type: string
      useConsumerDisclosureWithinAccountMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `useConsumerDisclosureWithinAccount`
          property is editable.

          "
      withdrawAddressLine1:
        description:
          "Contains the first address line of the postal address to which
          a customer can send a consent withdrawal notification.\n\nMaximum length:
          100 characters. "
        type: string
      withdrawAddressLine2:
        description:
          "Contains the second address line of the postal address to which
          a customer can send a consent withdrawal notification.\n\nMaximum length:
          100 characters. "
        type: string
      withdrawByEmail:
        description:
          When **true** (default), indicates that the customer can withdraw
          consent by email.
        type: string
      withdrawByMail:
        description:
          When **true,** indicates that the customer can withdraw consent
          by postal mail. The default is **false.**
        type: string
      withdrawByPhone:
        description:
          When **true,** indicates that the customer can withdraw consent
          by phone. The default is **false.**
        type: string
      withdrawCity:
        description:
          "Contains the city of the postal address to which a customer
          can send a consent withdrawal notification.\n\nMaximum length: 50 characters. "
        type: string
      withdrawConsequences:
        description: |-
          Text indicating the consequences of withdrawing consent.

          Maximum length: 255 characters.
        type: string
      withdrawEmail:
        description:
          "Contains the email address to which a customer can send a consent
          withdrawal notification.\n\nMaximum length: 100 characters. "
        type: string
      withdrawOther:
        description: |-
          Contains any other information needed to withdraw consent.

          Maximum length: 255 characters.

          Example:

          `We do not need any other information from you to withdraw consent.`
        type: string
      withdrawPhone:
        description:
          "Contains the phone number that a customer can call to register
          consent withdrawal notification as a free-formatted string.\n\nMaximum length:
          20 characters. "
        type: string
      withdrawPostalCode:
        description:
          "Contains the postal code of the postal address to which a customer
          can send a consent withdrawal notification.\n\nMaximum length: 20 characters. "
        type: string
      withdrawState:
        description: |-
          Contains the state of the postal address to which a customer can send a consent withdrawal notification.

          Example: `PA`
        type: string
    description: Details about account consumer disclosures.
    x-ds-definition-name: consumerDisclosure
    x-ds-category: Accounts
    x-ds-order: "20"
    x-ms-summary: Details about account consumer disclosures.
  AccountCustomFields:
    description: |
      An `accountCustomField` is an envelope custom field that you set at the account level.
      Applying custom fields enables account administrators to group and manage envelopes.
    type: object
    properties:
      listCustomFields:
        description: An array of list custom fields.
        type: array
        items:
          "$ref": "#/definitions/listCustomField"
      textCustomFields:
        description: An array of text custom fields.
        type: array
        items:
          "$ref": "#/definitions/textCustomField"
    x-ds-definition-name: customFields
    x-ds-category: Accounts
    x-ds-order: "30"
    x-ms-summary: |
      An `accountCustomField` is an envelope custom field that you set at the account level.
      Applying custom fields enables account administrators to group and manage envelopes.
  EnvelopeCustomFields:
    description: |-
      An envelope custom field enables you to collect custom data about envelopes on a per-envelope basis. You can then use the custom data for sorting, organizing, searching, and other downstream processes. For example, you can use custom fields to copy envelopes or data to multiple areas in Salesforce. eOriginal customers can eVault their documents from the web app on a per-envelope basis by setting an envelope custom field with a name like "eVault with eOriginal?" to "Yes" or "No".

      When a user creates an envelope, the envelope custom fields display in the **Envelope Settings** section of the DocuSign console. Envelope recipients do not see the envelope custom fields. For more information, see [Envelope Custom Fields](https://support.docusign.com/s/document-item?bundleId=pik1583277475390&topicId=qor1583277385137.html).
    type: object
    properties:
      listCustomFields:
        description: An array of list custom fields.
        type: array
        items:
          "$ref": "#/definitions/listCustomField"
      textCustomFields:
        description: An array of text custom fields.
        type: array
        items:
          "$ref": "#/definitions/textCustomField"
    x-ds-definition-name: customFields
    x-ds-category: Envelopes
    x-ds-order: "70"
    x-ms-summary: |-
      An envelope custom field enables you to collect custom data about envelopes on a per-envelope basis. You can then use the custom data for sorting, organizing, searching, and other downstream processes. For example, you can use custom fields to copy envelopes or data to multiple areas in Salesforce. eOriginal customers can eVault their documents from the web app on a per-envelope basis by setting an envelope custom field with a name like "eVault with eOriginal?" to "Yes" or "No".

      When a user creates an envelope, the envelope custom fields display in the **Envelope Settings** section of the DocuSign console. Envelope recipients do not see the envelope custom fields. For more information, see [Envelope Custom Fields](https://support.docusign.com/s/document-item?bundleId=pik1583277475390&topicId=qor1583277385137.html).
  EnvelopeDocumentFields:
    type: object
    properties:
      documentFields:
        description:
          "The array of name/value custom data strings to be added to a
          document. Custom document field information is returned in the status, but
          otherwise is not used by DocuSign. The array contains the elements: \n\n*
          name - A string that can be a maximum of 50 characters. \n* value - A string
          that can be a maximum of 200 characters.\n\n*IMPORTANT*: If you are using
          xml, the name/value pair is contained in a nameValue element. \n"
        type: array
        items:
          "$ref": "#/definitions/nameValue"
    x-ds-definition-name: documentFieldsInformation
    description: Envelope document fields
    x-ds-category: Envelopes
    x-ds-order: "60"
    x-ms-summary: Envelope document fields
  EnvelopeLocks:
    type: object
    properties:
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      lockDurationInSeconds:
        description: |2

          The number of seconds until the lock expires when there is no activity on the envelope.

          The default value is 300 seconds. The maximum value is 1,800 seconds.

          The lock duration can be extended.
        type: string
      lockedByApp:
        description:
          The human-readable name of the application that is locking the
          envelope or template. This value displays to the user in error messages
          when lock conflicts occur.
        type: string
      lockedByUser:
        "$ref": "#/definitions/userInfo"
        description:
          A complex type containing information about the user that has
          the envelope or template locked.
      lockedUntilDateTime:
        description: The date and time that the lock expires.
        type: string
      lockToken:
        description:
          A unique identifier provided to the owner of the lock. You must
          use this token with subsequent calls to prove ownership of the lock.
        type: string
      lockType:
        description: The type of lock.  Currently `edit` is the only supported type.
        type: string
      useScratchPad:
        description: "When **true,** a scratchpad is used to edit information.\n "
        type: string
    x-ds-definition-name: lockInformation
    description:
      "Envelope locks let you lock an envelope to prevent any changes while
      you are updating an envelope.

      "
    x-ds-category: Envelopes
    x-ds-order: "80"
    x-ms-summary:
      "Envelope locks let you lock an envelope to prevent any changes
      while you are updating an envelope.

      "
  EnvelopeRecipients:
    description: Envelope recipients
    type: object
    properties:
      agents:
        description: A list of agent recipients assigned to the documents.
        type: array
        items:
          "$ref": "#/definitions/agent"
      carbonCopies:
        description: A list of carbon copy recipients assigned to the documents.
        type: array
        items:
          "$ref": "#/definitions/carbonCopy"
      certifiedDeliveries:
        description:
          A complex type containing information on a recipient the must
          receive the completed documents for the envelope to be completed, but the
          recipient does not need to sign, initial, date, or add information to any
          of the documents.
        type: array
        items:
          "$ref": "#/definitions/certifiedDelivery"
      currentRoutingOrder:
        description:
          The routing order of the current recipient. If this value equals
          a particular signer's routing order, it indicates that the envelope has
          been sent to that recipient, but he or she has not completed the required
          actions.
        type: string
      editors:
        description: A list of users who can edit the envelope.
        type: array
        items:
          "$ref": "#/definitions/editor"
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      inPersonSigners:
        description:
          Specifies a signer that is in the same physical location as a
          DocuSign user who will act as a Signing Host for the transaction. The recipient
          added is the Signing Host and new separate Signer Name field appears after
          Sign in person is selected.
        type: array
        items:
          "$ref": "#/definitions/inPersonSigner"
      intermediaries:
        description:
          Identifies a recipient that can, but is not required to, add
          name and email information for recipients at the same or subsequent level
          in the routing order (until subsequent Agents, Editors or Intermediaries
          recipient types are added).
        type: array
        items:
          "$ref": "#/definitions/intermediary"
      notaries:
        description: A list of notary recipients on the envelope.
        type: array
        items:
          "$ref": "#/definitions/notaryRecipient"
      participants:
        description: ""
        type: array
        items:
          "$ref": "#/definitions/participant"
      recipientCount:
        description: The number of recipients in the envelope.
        type: string
      seals:
        description: A list of electronic seals to apply to documents.
        type: array
        items:
          "$ref": "#/definitions/sealSign"
      signers:
        description: A list of signers on the envelope.
        type: array
        items:
          "$ref": "#/definitions/signer"
      witnesses:
        description: A list of signers who act as witnesses on the envelope.
        type: array
        items:
          "$ref": "#/definitions/witness"
    x-ds-definition-name: recipients
    x-ds-category: Envelopes
    x-ds-order: "20"
    x-ms-summary: Envelope recipients
  EnvelopeRecipientTabs:
    type: object
    properties:
      approveTabs:
        description: |
          A list of
          [Approve tabs][approve].

          An Approve tab enables
          the recipient to approve documents without
          placing a signature or initials on the document. If the
          recipient clicks the tab during the signing process, the
          recipient is considered to have signed the document. No
          information is shown on the document of the approval, but it
          is recorded as a signature in the envelope history.
          The value of an approve tab can't be set.

          [approve]:          /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/approve"
      checkboxTabs:
        description: |
          A list of
          [Checkbox tabs][checkbox].


          A Checkbox tab enables the recipient to select a yes/no (on/off) option. This value can be set.


          [checkbox]:  /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/checkbox"
      commentThreadTabs:
        description:
          An array of tabs that represents a collection of comments in
          a comment thread. For example, if a recipient has questions about the content
          of a document, they can add a comment to the document and control who else
          can see the comment. This value can't be set.
        type: array
        items:
          "$ref": "#/definitions/commentThread"
      commissionCountyTabs:
        description: |-
          A list of
          [Commission County tabs][cc].


          A Commission County tab displays the county of a notary's commission. This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary]. The tab's value can be edited by the recipient.


          [cc]:  /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
          [notary]: /docs/notary-api/
        type: array
        items:
          "$ref": "#/definitions/commissionCounty"
      commissionExpirationTabs:
        description: |-
          A list of
          [Commission Expiration tabs][tabref].


          A Commission Expiration tab displays the expiration date of a notary's commission. This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary]. The tab's value can be edited by the recipient.


          [tabref]:  /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
          [notary]: /docs/notary-api/
        type: array
        items:
          "$ref": "#/definitions/commissionExpiration"
      commissionNumberTabs:
        description: |-
          A list of
          [Commission Number tabs][tabref].


          A Commission Number tab displays a notary's commission number. This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary]. The tab's value can be edited by the recipient.


          [tabref]:  /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
          [notary]: /docs/notary-api/
        type: array
        items:
          "$ref": "#/definitions/commissionNumber"
      commissionStateTabs:
        description: |-
          A list of
          [Commission State tabs][cc].


          A Commission County tab displays the state in which a notary's commission was granted. This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary]. The tab's value can be edited by the recipient.


          [cc]:  /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
          [notary]: /docs/notary-api/
        type: array
        items:
          "$ref": "#/definitions/commissionState"
      companyTabs:
        description: |
          A list of
          [Company tabs][company].

          A Company tab displays a field for the name of the recipient's company. This value can't be set.

          [company]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/#parameters_company
        type: array
        items:
          "$ref": "#/definitions/company"
      dateSignedTabs:
        description: |
          A list of
          [Date Signed tabs][dateSigned].


          A Date Signed tab displays the date that the recipient signed the document. This value can't be set.

          [dateSigned]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/dateSigned"
      dateTabs:
        description: |
          A list of
          [Date tabs][date].

          A Date tab enables the recipient to enter a date. This value can't be set. The tooltip for this tab recommends the date format MM/DD/YYYY, but several other date formats are also accepted. The system retains the format that the recipient enters.

          **Note:** If you need to enforce a specific date format, DocuSign recommends that you use a Text tab with a validation pattern and validation message.


          [date]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/date"
      declineTabs:
        description: |
          A list of
          [Decline tabs][decline].

          A Decline tab enables the recipient to decline the envelope. If the recipient clicks the tab during the signing process, the envelope is voided. The value of this tab can't be set.


          [decline]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/decline"
      drawTabs:
        description: |-
          A list of Draw Tabs.

          A Draw Tab allows the recipient to add a free-form drawing to the document.
        type: array
        items:
          "$ref": "#/definitions/draw"
      emailAddressTabs:
        description: |
          A list of
          [Email Address tabs][emailAddress].

          An Email Address tab displays the recipient's email as entered in the recipient information. This value can't be set.


          [emailAddress]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/emailAddress"
      emailTabs:
        description: |
          A list of
          [Email tabs][email].

          An Email tab enables the recipient to enter an email address.
          This is a one-line field that checks that a valid email
          address is entered. It uses the same parameters as a Text
          tab, with the validation message and pattern set for email
          information. This value can be set.

          When getting information that includes
          this tab type, the original value of the tab when the
          associated envelope was sent is included in the response.

          [email]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/email"
      envelopeIdTabs:
        description: |
          A list of
          [Envelope ID tabs][envelopeId].

          An Envelope ID tab  displays the envelope ID. Recipients cannot enter or change the information in this tab. This value can't be set.


          [envelopeId]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/#response201_envelopeid
        type: array
        items:
          "$ref": "#/definitions/envelopeId"
      firstNameTabs:
        description: |
          A list of
          [First Name tabs][firstName].

          A First Name tab displays the recipient's first name. The system automatically populates this field by splitting the name in the recipient information on spaces. This value can't be set.


          [firstName]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/#parameters_firstname
        type: array
        items:
          "$ref": "#/definitions/firstName"
      formulaTabs:
        description: |
          A list of [Formula tabs][formulaTab].

          The value of a Formula tab is calculated from the values of other number or date tabs in the document. When the recipient completes the underlying fields, the Formula tab calculates and displays the result. This value can be set.

          The `formula` property of the tab contains the references to the underlying tabs. To learn more about formulas, see [Calculated Fields][calculatedfields].

          If a Formula tab contains a `paymentDetails` property, the tab is considered a payment item. To learn more about payments, see [Requesting Payments Along with Signatures][paymentguide].

          [calculatedfields]: https://support.docusign.com/s/document-item?bundleId=gbo1643332197980&topicId=crs1578456361259.html
          [paymentguide]:     https://support.docusign.com/s/document-item?bundleId=juu1573854950452&topicId=fyw1573854935374.html
          [formulaTab]:       /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/formulaTab"
      fullNameTabs:
        description: |
          A list of
          [Full Name tabs][fullName].

          A Full Name tab displays the recipient's full name. This value can't be set.


          [fullName]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/fullName"
      initialHereTabs:
        description: |
          A list of
          [Initial Here tabs][initialHere].

          This type of tab enables the recipient to initial the document. May be optional. This value can't be set.

          [initialHere]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/initialHere"
      lastNameTabs:
        description: |
          A list of
          [Last Name tabs][lastName].

          A Last Name tab displays the recipient's last name. The system automatically populates this field by splitting the name in the recipient information on spaces. This value can't be set.


          [lastName]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/lastName"
      listTabs:
        description: |
          An array of List tabs.

          A List tab enables the recipient to choose from a list of options. You specify the options in the `listItems` property. This value can't be set.

          Find descriptions of all tab types in
          the [EnvelopeRecipientTabs Resource][ert].

          [ert]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/list"
      notarizeTabs:
        description: |
          A list of  [Notarize tabs][notarize].

          A Notarize tab alerts notary recipients that they must take action on the page. This value can be set.

          **Note:** Only one notarize tab can appear on a page.

          [notarize]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/notarize"
      notarySealTabs:
        description: |-
          A list of Notary Seal tabs.

          A Notary Seal tab enables the recipient to notarize a document. This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary].

          [notary]: /docs/notary-api/
        type: array
        items:
          "$ref": "#/definitions/notarySeal"
      noteTabs:
        description: |
          A list of
          [Note tabs][note].

          A Note tab displays additional information to the recipient in the form of a note. This value can be set.

          [note]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/note"
      numberTabs:
        description: |
          A list of Number tabs.

          Number tabs validate that the entered value is a number.
          They do not support advanced validation or display options.

          To learn more about the different forms of number tabs,
          see [Number fields](/docs/esign-rest-api/esign101/concepts/tabs/number-fields/) in the Concepts guide.
          For specific information about number tabs
          see [Features of numberTabs](/docs/esign-rest-api/esign101/concepts/tabs/number-fields/#features-of-numbertabs).

          [number]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/number"
      numericalTabs:
        description:
          "A list of numerical tabs.\n\nNumerical  tabs provide robust
          display and validation features, including formatting for different regions
          and currencies, and minimum and maximum value validation.                                                                                                                                                                                                                                                                                                                                                                                                                                                             \n\nTo
          learn more about the different forms of number tabs,\nsee [Number fields](/docs/esign-rest-api/esign101/concepts/tabs/number-fields/)
          in the Concepts guide.\nFor specific information about numerical tabs\nsee
          [Features of numericalTabs](/docs/esign-rest-api/esign101/concepts/tabs/number-fields/#features-of-numericaltabs)."
        type: array
        items:
          "$ref": "#/definitions/numerical"
      phoneNumberTabs:
        description: |-
          A list of
          [Phone Number tabs][cc].


          A Phone Number tab enables a recipient to enter a phone number.

          **Note:** This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary].

          [cc]:  /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
          [notary]: /docs/notary-api/
        type: array
        items:
          "$ref": "#/definitions/phoneNumber"
      polyLineOverlayTabs:
        description:
          "This type of tab enables the recipient to strike through document
          text. This value can't be set
        type: array
        items:
          "$ref": "#/definitions/polyLineOverlay"
      prefillTabs:
        "$ref": "#/definitions/prefillTabs"
        description: |-
          Prefill tabs are tabs
          that the sender can fill in
          before the envelope is sent.
          They are sometimes called
          sender tags or pre-fill fields.


          [Pre-Fill Your Own Document Fields][app]
          describes how prefill tabs
          work in the web application.


          [Customize your envelopes with pre-fill fields][catblog]
          shows how to use prefill tabs
          in your application using the eSignature
          SDKs.

          [app]:      https://support.docusign.com/s/document-item?bundleId=gbo1643332197980&topicId=nwo1611173513994.html
          [catblog]:  https://www.docusign.com/blog/developers/common-api-tasks-customize-your-envelopes-pre-fill-fields
      radioGroupTabs:
        description: |
          A list of [Radio Group tabs][radioGroup].

          A Radio Group tab places a group of radio buttons on a document. The `radios` property is used to add and place the radio
          buttons associated with the group. Only one radio button can be selected in a group. This value can be set.


          [radioGroup]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/radioGroup"
      signerAttachmentTabs:
        description: |
          A list of
          [Signer Attachment tabs][signerAttachment].

          This type of tab enables the recipient to attach supporting documents to an envelope. This value can't be set.


          [signerAttachment]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/signerAttachment"
      signHereTabs:
        description: |
          A list of
          [Sign Here tabs][signHere].

          This type of tab enables the recipient to sign a document. May be optional. This value can't be set.

          [signHere]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/signHere"
      smartSectionTabs:
        description: |-
          A list of [Smart Section](https://www.docusign.com/blog/dsdev-deep-dive-responsive-smart-sections) tabs.

          Smart Section tabs enhance responsive signing on mobile devices by enabling collapsible sections, page breaks, custom formatting options, and other advanced functionality.

          **Note:** Smart Sections are a premium feature. Responsive signing must also be enabled for your account.
        type: array
        items:
          "$ref": "#/definitions/smartSection"
      ssnTabs:
        description: |
          A list of
          [SSN tabs][ssn].

          An SSN tab contains a one-line field that enables the recipient to enter a Social Security Number (SSN) with or without
          dashes. It uses the same parameters as a Text tab, with the validation message and pattern set for SSN information. This value can be set.


          [ssn]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/ssn"
      tabGroups:
        description: |
          An array of `tabGroup` items.

          To associate a tab with a tab group, add the tab group's `groupLabel` to the tab's `tabGroupLabels` array.
        type: array
        items:
          "$ref": "#/definitions/tabGroup"
      textTabs:
        description: |
          A list of
          Text tabs.

          A text tab enables the recipient to enter free text. This value can be set.

          Find descriptions of all tab types in
          the [EnvelopeRecipientTabs Resource][ert].

          [ert]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/text"
      titleTabs:
        description: |
          A list of
          [Title tabs][title].

          A Title tab displays the recipient's title.  This value can't be set.


          [title]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/title"
      viewTabs:
        description: |
          A list of
          [View tabs][view].

          A View tab is used with an Approve tab to handle supplemental documents.  This value can be set.

          [view]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/view"
      zipTabs:
        description: |
          A list of
          [Zip tabs][zip].

          A Zip tab enables the recipient to enter a ZIP code. The ZIP code can be five digits or nine digits ( in ZIP+4 format), and can be entered with or without dashes. It uses the same parameters as a Text tab, with the validation message and pattern set for ZIP code information.  This value can be set.


          [zip]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/zip"
    description:
      "All of the tabs associated with a recipient. Each property is a
      list of a type of tab.

      "
    x-ds-definition-name: tabs
    x-ds-category: Envelopes
    x-ds-order: "50"
    x-ms-summary:
      "All of the tabs associated with a recipient. Each property is a
      list of a type of tab.

      "
  EnvelopeDocumentTabs:
    type: object
    properties:
      approveTabs:
        description: |
          A list of
          [Approve tabs][approve].

          An Approve tab enables
          the recipient to approve documents without
          placing a signature or initials on the document. If the
          recipient clicks the tab during the signing process, the
          recipient is considered to have signed the document. No
          information is shown on the document of the approval, but it
          is recorded as a signature in the envelope history.
          The value of an approve tab can't be set.

          [approve]:          /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/approve"
      checkboxTabs:
        description: |
          A list of
          [Checkbox tabs][checkbox].


          A Checkbox tab enables the recipient to select a yes/no (on/off) option. This value can be set.


          [checkbox]:  /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/checkbox"
      commentThreadTabs:
        description:
          An array of tabs that represents a collection of comments in
          a comment thread. For example, if a recipient has questions about the content
          of a document, they can add a comment to the document and control who else
          can see the comment. This value can't be set.
        type: array
        items:
          "$ref": "#/definitions/commentThread"
      commissionCountyTabs:
        description: |-
          A list of
          [Commission County tabs][cc].


          A Commission County tab displays the county of a notary's commission. This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary]. The tab's value can be edited by the recipient.


          [cc]:  /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
          [notary]: /docs/notary-api/
        type: array
        items:
          "$ref": "#/definitions/commissionCounty"
      commissionExpirationTabs:
        description: |-
          A list of
          [Commission Expiration tabs][tabref].


          A Commission Expiration tab displays the expiration date of a notary's commission. This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary]. The tab's value can be edited by the recipient.


          [tabref]:  /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
          [notary]: /docs/notary-api/
        type: array
        items:
          "$ref": "#/definitions/commissionExpiration"
      commissionNumberTabs:
        description: |-
          A list of
          [Commission Number tabs][tabref].


          A Commission Number tab displays a notary's commission number. This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary]. The tab's value can be edited by the recipient.


          [tabref]:  /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
          [notary]: /docs/notary-api/
        type: array
        items:
          "$ref": "#/definitions/commissionNumber"
      commissionStateTabs:
        description: |-
          A list of
          [Commission State tabs][cc].


          A Commission County tab displays the state in which a notary's commission was granted. This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary]. The tab's value can be edited by the recipient.


          [cc]:  /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
          [notary]: /docs/notary-api/
        type: array
        items:
          "$ref": "#/definitions/commissionState"
      companyTabs:
        description: |
          A list of
          [Company tabs][company].

          A Company tab displays a field for the name of the recipient's company. This value can't be set.

          [company]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/#parameters_company
        type: array
        items:
          "$ref": "#/definitions/company"
      dateSignedTabs:
        description: |
          A list of
          [Date Signed tabs][dateSigned].


          A Date Signed tab displays the date that the recipient signed the document. This value can't be set.

          [dateSigned]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/dateSigned"
      dateTabs:
        description: |
          A list of
          [Date tabs][date].

          A Date tab enables the recipient to enter a date. This value can't be set. The tooltip for this tab recommends the date format MM/DD/YYYY, but several other date formats are also accepted. The system retains the format that the recipient enters.

          **Note:** If you need to enforce a specific date format, DocuSign recommends that you use a Text tab with a validation pattern and validation message.


          [date]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/date"
      declineTabs:
        description: |
          A list of
          [Decline tabs][decline].

          A Decline tab enables the recipient to decline the envelope. If the recipient clicks the tab during the signing process, the envelope is voided. The value of this tab can't be set.


          [decline]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/decline"
      drawTabs:
        description: |-
          A list of Draw Tabs.

          A Draw Tab allows the recipient to add a free-form drawing to the document.
        type: array
        items:
          "$ref": "#/definitions/draw"
      emailAddressTabs:
        description: |
          A list of
          [Email Address tabs][emailAddress].

          An Email Address tab displays the recipient's email as entered in the recipient information. This value can't be set.


          [emailAddress]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/emailAddress"
      emailTabs:
        description: |
          A list of
          [Email tabs][email].

          An Email tab enables the recipient to enter an email address.
          This is a one-line field that checks that a valid email
          address is entered. It uses the same parameters as a Text
          tab, with the validation message and pattern set for email
          information. This value can be set.

          When getting information that includes
          this tab type, the original value of the tab when the
          associated envelope was sent is included in the response.

          [email]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/email"
      envelopeIdTabs:
        description: |
          A list of
          [Envelope ID tabs][envelopeId].

          An Envelope ID tab  displays the envelope ID. Recipients cannot enter or change the information in this tab. This value can't be set.


          [envelopeId]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/#response201_envelopeid
        type: array
        items:
          "$ref": "#/definitions/envelopeId"
      firstNameTabs:
        description: |
          A list of
          [First Name tabs][firstName].

          A First Name tab displays the recipient's first name. The system automatically populates this field by splitting the name in the recipient information on spaces. This value can't be set.


          [firstName]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/#parameters_firstname
        type: array
        items:
          "$ref": "#/definitions/firstName"
      formulaTabs:
        description: |
          A list of [Formula tabs][formulaTab].

          The value of a Formula tab is calculated from the values of other number or date tabs in the document. When the recipient completes the underlying fields, the Formula tab calculates and displays the result. This value can be set.

          The `formula` property of the tab contains the references to the underlying tabs. To learn more about formulas, see [Calculated Fields][calculatedfields].

          If a Formula tab contains a `paymentDetails` property, the tab is considered a payment item. To learn more about payments, see [Requesting Payments Along with Signatures][paymentguide].

          [calculatedfields]: https://support.docusign.com/s/document-item?bundleId=gbo1643332197980&topicId=crs1578456361259.html
          [paymentguide]:     https://support.docusign.com/s/document-item?bundleId=juu1573854950452&topicId=fyw1573854935374.html
          [formulaTab]:       /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/formulaTab"
      fullNameTabs:
        description: |
          A list of
          [Full Name tabs][fullName].

          A Full Name tab displays the recipient's full name. This value can't be set.


          [fullName]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/fullName"
      initialHereTabs:
        description: |
          A list of
          [Initial Here tabs][initialHere].

          This type of tab enables the recipient to initial the document. May be optional. This value can't be set.

          [initialHere]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/initialHere"
      lastNameTabs:
        description: |
          A list of
          [Last Name tabs][lastName].

          A Last Name tab displays the recipient's last name. The system automatically populates this field by splitting the name in the recipient information on spaces. This value can't be set.


          [lastName]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/lastName"
      listTabs:
        description: |
          An array of List tabs.

          A List tab enables the recipient to choose from a list of options. You specify the options in the `listItems` property. This value can't be set.

          Find descriptions of all tab types in
          the [EnvelopeRecipientTabs Resource][ert].

          [ert]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/list"
      notarizeTabs:
        description: |
          A list of  [Notarize tabs][notarize].

          A Notarize tab alerts notary recipients that they must take action on the page. This value can be set.

          **Note:** Only one notarize tab can appear on a page.

          [notarize]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/notarize"
      notarySealTabs:
        description: |-
          A list of Notary Seal tabs.

          A Notary Seal tab enables the recipient to notarize a document. This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary].

          [notary]: /docs/notary-api/
        type: array
        items:
          "$ref": "#/definitions/notarySeal"
      noteTabs:
        description: |
          A list of
          [Note tabs][note].

          A Note tab displays additional information to the recipient in the form of a note. This value can be set.

          [note]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/note"
      numberTabs:
        description: |
          A list of Number tabs.

          Number tabs validate that the entered value is a number.
          They do not support advanced validation or display options.

          To learn more about the different forms of number tabs,
          see [Number fields](/docs/esign-rest-api/esign101/concepts/tabs/number-fields/) in the Concepts guide.
          For specific information about number tabs
          see [Features of numberTabs](/docs/esign-rest-api/esign101/concepts/tabs/number-fields/#features-of-numbertabs).

          [number]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/number"
      numericalTabs:
        description:
          "A list of numerical tabs.\n\nNumerical  tabs provide robust
          display and validation features, including formatting for different regions
          and currencies, and minimum and maximum value validation.                                                                                                                                                                                                                                                                                                                                                                                                                                                             \n\nTo
          learn more about the different forms of number tabs,\nsee [Number fields](/docs/esign-rest-api/esign101/concepts/tabs/number-fields/)
          in the Concepts guide.\nFor specific information about numerical tabs\nsee
          [Features of numericalTabs](/docs/esign-rest-api/esign101/concepts/tabs/number-fields/#features-of-numericaltabs)."
        type: array
        items:
          "$ref": "#/definitions/numerical"
      phoneNumberTabs:
        description: |-
          A list of
          [Phone Number tabs][cc].


          A Phone Number tab enables a recipient to enter a phone number.

          **Note:** This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary].

          [cc]:  /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
          [notary]: /docs/notary-api/
        type: array
        items:
          "$ref": "#/definitions/phoneNumber"
      polyLineOverlayTabs:
        description:
          "This type of tab enables the recipient to strike through document
          text. This value can't be set
        type: array
        items:
          "$ref": "#/definitions/polyLineOverlay"
      prefillTabs:
        "$ref": "#/definitions/prefillTabs"
        description: |-
          Prefill tabs are tabs
          that the sender can fill in
          before the envelope is sent.
          They are sometimes called
          sender tags or pre-fill fields.


          [Pre-Fill Your Own Document Fields][app]
          describes how prefill tabs
          work in the web application.


          [Customize your envelopes with pre-fill fields][catblog]
          shows how to use prefill tabs
          in your application using the eSignature
          SDKs.

          [app]:      https://support.docusign.com/s/document-item?bundleId=gbo1643332197980&topicId=nwo1611173513994.html
          [catblog]:  https://www.docusign.com/blog/developers/common-api-tasks-customize-your-envelopes-pre-fill-fields
      radioGroupTabs:
        description: |
          A list of [Radio Group tabs][radioGroup].

          A Radio Group tab places a group of radio buttons on a document. The `radios` property is used to add and place the radio
          buttons associated with the group. Only one radio button can be selected in a group. This value can be set.


          [radioGroup]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/radioGroup"
      signerAttachmentTabs:
        description: |
          A list of
          [Signer Attachment tabs][signerAttachment].

          This type of tab enables the recipient to attach supporting documents to an envelope. This value can't be set.


          [signerAttachment]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/signerAttachment"
      signHereTabs:
        description: |
          A list of
          [Sign Here tabs][signHere].

          This type of tab enables the recipient to sign a document. May be optional. This value can't be set.

          [signHere]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/signHere"
      smartSectionTabs:
        description: |-
          A list of [Smart Section](https://www.docusign.com/blog/dsdev-deep-dive-responsive-smart-sections) tabs.

          Smart Section tabs enhance responsive signing on mobile devices by enabling collapsible sections, page breaks, custom formatting options, and other advanced functionality.

          **Note:** Smart Sections are a premium feature. Responsive signing must also be enabled for your account.
        type: array
        items:
          "$ref": "#/definitions/smartSection"
      ssnTabs:
        description: |
          A list of
          [SSN tabs][ssn].

          An SSN tab contains a one-line field that enables the recipient to enter a Social Security Number (SSN) with or without
          dashes. It uses the same parameters as a Text tab, with the validation message and pattern set for SSN information. This value can be set.


          [ssn]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/ssn"
      tabGroups:
        description: |
          An array of `tabGroup` items.

          To associate a tab with a tab group, add the tab group's `groupLabel` to the tab's `tabGroupLabels` array.
        type: array
        items:
          "$ref": "#/definitions/tabGroup"
      textTabs:
        description: |
          A list of
          Text tabs.

          A text tab enables the recipient to enter free text. This value can be set.

          Find descriptions of all tab types in
          the [EnvelopeRecipientTabs Resource][ert].

          [ert]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/text"
      titleTabs:
        description: |
          A list of
          [Title tabs][title].

          A Title tab displays the recipient's title.  This value can't be set.


          [title]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/title"
      viewTabs:
        description: |
          A list of
          [View tabs][view].

          A View tab is used with an Approve tab to handle supplemental documents.  This value can be set.

          [view]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/view"
      zipTabs:
        description: |
          A list of
          [Zip tabs][zip].

          A Zip tab enables the recipient to enter a ZIP code. The ZIP code can be five digits or nine digits ( in ZIP+4 format), and can be entered with or without dashes. It uses the same parameters as a Text tab, with the validation message and pattern set for ZIP code information.  This value can be set.


          [zip]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/zip"
    description:
      Document tabs are tabs that are associated with a document rather
      than with a recipient.
    x-ds-definition-name: tabs
    x-ds-category: Envelopes
    x-ds-order: "50"
    x-ms-summary:
      Document tabs are tabs that are associated with a document rather
      than with a recipient.
  TemplateDocumentTabs:
    type: object
    properties:
      approveTabs:
        description: |
          A list of
          [Approve tabs][approve].

          An Approve tab enables
          the recipient to approve documents without
          placing a signature or initials on the document. If the
          recipient clicks the tab during the signing process, the
          recipient is considered to have signed the document. No
          information is shown on the document of the approval, but it
          is recorded as a signature in the envelope history.
          The value of an approve tab can't be set.

          [approve]:          /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/approve"
      checkboxTabs:
        description: |
          A list of
          [Checkbox tabs][checkbox].


          A Checkbox tab enables the recipient to select a yes/no (on/off) option. This value can be set.


          [checkbox]:  /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/checkbox"
      commentThreadTabs:
        description:
          An array of tabs that represents a collection of comments in
          a comment thread. For example, if a recipient has questions about the content
          of a document, they can add a comment to the document and control who else
          can see the comment. This value can't be set.
        type: array
        items:
          "$ref": "#/definitions/commentThread"
      commissionCountyTabs:
        description: |-
          A list of
          [Commission County tabs][cc].


          A Commission County tab displays the county of a notary's commission. This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary]. The tab's value can be edited by the recipient.


          [cc]:  /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
          [notary]: /docs/notary-api/
        type: array
        items:
          "$ref": "#/definitions/commissionCounty"
      commissionExpirationTabs:
        description: |-
          A list of
          [Commission Expiration tabs][tabref].


          A Commission Expiration tab displays the expiration date of a notary's commission. This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary]. The tab's value can be edited by the recipient.


          [tabref]:  /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
          [notary]: /docs/notary-api/
        type: array
        items:
          "$ref": "#/definitions/commissionExpiration"
      commissionNumberTabs:
        description: |-
          A list of
          [Commission Number tabs][tabref].


          A Commission Number tab displays a notary's commission number. This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary]. The tab's value can be edited by the recipient.


          [tabref]:  /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
          [notary]: /docs/notary-api/
        type: array
        items:
          "$ref": "#/definitions/commissionNumber"
      commissionStateTabs:
        description: |-
          A list of
          [Commission State tabs][cc].


          A Commission County tab displays the state in which a notary's commission was granted. This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary]. The tab's value can be edited by the recipient.


          [cc]:  /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
          [notary]: /docs/notary-api/
        type: array
        items:
          "$ref": "#/definitions/commissionState"
      companyTabs:
        description: |
          A list of
          [Company tabs][company].

          A Company tab displays a field for the name of the recipient's company. This value can't be set.

          [company]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/#parameters_company
        type: array
        items:
          "$ref": "#/definitions/company"
      dateSignedTabs:
        description: |
          A list of
          [Date Signed tabs][dateSigned].


          A Date Signed tab displays the date that the recipient signed the document. This value can't be set.

          [dateSigned]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/dateSigned"
      dateTabs:
        description: |
          A list of
          [Date tabs][date].

          A Date tab enables the recipient to enter a date. This value can't be set. The tooltip for this tab recommends the date format MM/DD/YYYY, but several other date formats are also accepted. The system retains the format that the recipient enters.

          **Note:** If you need to enforce a specific date format, DocuSign recommends that you use a Text tab with a validation pattern and validation message.


          [date]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/date"
      declineTabs:
        description: |
          A list of
          [Decline tabs][decline].

          A Decline tab enables the recipient to decline the envelope. If the recipient clicks the tab during the signing process, the envelope is voided. The value of this tab can't be set.


          [decline]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/decline"
      drawTabs:
        description: |-
          A list of Draw Tabs.

          A Draw Tab allows the recipient to add a free-form drawing to the document.
        type: array
        items:
          "$ref": "#/definitions/draw"
      emailAddressTabs:
        description: |
          A list of
          [Email Address tabs][emailAddress].

          An Email Address tab displays the recipient's email as entered in the recipient information. This value can't be set.


          [emailAddress]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/emailAddress"
      emailTabs:
        description: |
          A list of
          [Email tabs][email].

          An Email tab enables the recipient to enter an email address.
          This is a one-line field that checks that a valid email
          address is entered. It uses the same parameters as a Text
          tab, with the validation message and pattern set for email
          information. This value can be set.

          When getting information that includes
          this tab type, the original value of the tab when the
          associated envelope was sent is included in the response.

          [email]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/email"
      envelopeIdTabs:
        description: |
          A list of
          [Envelope ID tabs][envelopeId].

          An Envelope ID tab  displays the envelope ID. Recipients cannot enter or change the information in this tab. This value can't be set.


          [envelopeId]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/#response201_envelopeid
        type: array
        items:
          "$ref": "#/definitions/envelopeId"
      firstNameTabs:
        description: |
          A list of
          [First Name tabs][firstName].

          A First Name tab displays the recipient's first name. The system automatically populates this field by splitting the name in the recipient information on spaces. This value can't be set.


          [firstName]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/#parameters_firstname
        type: array
        items:
          "$ref": "#/definitions/firstName"
      formulaTabs:
        description: |
          A list of [Formula tabs][formulaTab].

          The value of a Formula tab is calculated from the values of other number or date tabs in the document. When the recipient completes the underlying fields, the Formula tab calculates and displays the result. This value can be set.

          The `formula` property of the tab contains the references to the underlying tabs. To learn more about formulas, see [Calculated Fields][calculatedfields].

          If a Formula tab contains a `paymentDetails` property, the tab is considered a payment item. To learn more about payments, see [Requesting Payments Along with Signatures][paymentguide].

          [calculatedfields]: https://support.docusign.com/s/document-item?bundleId=gbo1643332197980&topicId=crs1578456361259.html
          [paymentguide]:     https://support.docusign.com/s/document-item?bundleId=juu1573854950452&topicId=fyw1573854935374.html
          [formulaTab]:       /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/formulaTab"
      fullNameTabs:
        description: |
          A list of
          [Full Name tabs][fullName].

          A Full Name tab displays the recipient's full name. This value can't be set.


          [fullName]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/fullName"
      initialHereTabs:
        description: |
          A list of
          [Initial Here tabs][initialHere].

          This type of tab enables the recipient to initial the document. May be optional. This value can't be set.

          [initialHere]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/initialHere"
      lastNameTabs:
        description: |
          A list of
          [Last Name tabs][lastName].

          A Last Name tab displays the recipient's last name. The system automatically populates this field by splitting the name in the recipient information on spaces. This value can't be set.


          [lastName]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/lastName"
      listTabs:
        description: |
          An array of List tabs.

          A List tab enables the recipient to choose from a list of options. You specify the options in the `listItems` property. This value can't be set.

          Find descriptions of all tab types in
          the [EnvelopeRecipientTabs Resource][ert].

          [ert]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/list"
      notarizeTabs:
        description: |
          A list of  [Notarize tabs][notarize].

          A Notarize tab alerts notary recipients that they must take action on the page. This value can be set.

          **Note:** Only one notarize tab can appear on a page.

          [notarize]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/notarize"
      notarySealTabs:
        description: |-
          A list of Notary Seal tabs.

          A Notary Seal tab enables the recipient to notarize a document. This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary].

          [notary]: /docs/notary-api/
        type: array
        items:
          "$ref": "#/definitions/notarySeal"
      noteTabs:
        description: |
          A list of
          [Note tabs][note].

          A Note tab displays additional information to the recipient in the form of a note. This value can be set.

          [note]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/note"
      numberTabs:
        description: |
          A list of Number tabs.

          Number tabs validate that the entered value is a number.
          They do not support advanced validation or display options.

          To learn more about the different forms of number tabs,
          see [Number fields](/docs/esign-rest-api/esign101/concepts/tabs/number-fields/) in the Concepts guide.
          For specific information about number tabs
          see [Features of numberTabs](/docs/esign-rest-api/esign101/concepts/tabs/number-fields/#features-of-numbertabs).

          [number]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/number"
      numericalTabs:
        description:
          "A list of numerical tabs.\n\nNumerical  tabs provide robust
          display and validation features, including formatting for different regions
          and currencies, and minimum and maximum value validation.                                                                                                                                                                                                                                                                                                                                                                                                                                                             \n\nTo
          learn more about the different forms of number tabs,\nsee [Number fields](/docs/esign-rest-api/esign101/concepts/tabs/number-fields/)
          in the Concepts guide.\nFor specific information about numerical tabs\nsee
          [Features of numericalTabs](/docs/esign-rest-api/esign101/concepts/tabs/number-fields/#features-of-numericaltabs)."
        type: array
        items:
          "$ref": "#/definitions/numerical"
      phoneNumberTabs:
        description: |-
          A list of
          [Phone Number tabs][cc].


          A Phone Number tab enables a recipient to enter a phone number.

          **Note:** This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary].

          [cc]:  /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
          [notary]: /docs/notary-api/
        type: array
        items:
          "$ref": "#/definitions/phoneNumber"
      polyLineOverlayTabs:
        description:
          "This type of tab enables the recipient to strike through document
          text. This value can't be set
        type: array
        items:
          "$ref": "#/definitions/polyLineOverlay"
      prefillTabs:
        "$ref": "#/definitions/prefillTabs"
        description: |-
          Prefill tabs are tabs
          that the sender can fill in
          before the envelope is sent.
          They are sometimes called
          sender tags or pre-fill fields.


          [Pre-Fill Your Own Document Fields][app]
          describes how prefill tabs
          work in the web application.


          [Customize your envelopes with pre-fill fields][catblog]
          shows how to use prefill tabs
          in your application using the eSignature
          SDKs.

          [app]:      https://support.docusign.com/s/document-item?bundleId=gbo1643332197980&topicId=nwo1611173513994.html
          [catblog]:  https://www.docusign.com/blog/developers/common-api-tasks-customize-your-envelopes-pre-fill-fields
      radioGroupTabs:
        description: |
          A list of [Radio Group tabs][radioGroup].

          A Radio Group tab places a group of radio buttons on a document. The `radios` property is used to add and place the radio
          buttons associated with the group. Only one radio button can be selected in a group. This value can be set.


          [radioGroup]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/radioGroup"
      signerAttachmentTabs:
        description: |
          A list of
          [Signer Attachment tabs][signerAttachment].

          This type of tab enables the recipient to attach supporting documents to an envelope. This value can't be set.


          [signerAttachment]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/signerAttachment"
      signHereTabs:
        description: |
          A list of
          [Sign Here tabs][signHere].

          This type of tab enables the recipient to sign a document. May be optional. This value can't be set.

          [signHere]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/signHere"
      smartSectionTabs:
        description: |-
          A list of [Smart Section](https://www.docusign.com/blog/dsdev-deep-dive-responsive-smart-sections) tabs.

          Smart Section tabs enhance responsive signing on mobile devices by enabling collapsible sections, page breaks, custom formatting options, and other advanced functionality.

          **Note:** Smart Sections are a premium feature. Responsive signing must also be enabled for your account.
        type: array
        items:
          "$ref": "#/definitions/smartSection"
      ssnTabs:
        description: |
          A list of
          [SSN tabs][ssn].

          An SSN tab contains a one-line field that enables the recipient to enter a Social Security Number (SSN) with or without
          dashes. It uses the same parameters as a Text tab, with the validation message and pattern set for SSN information. This value can be set.


          [ssn]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/ssn"
      tabGroups:
        description: |
          An array of `tabGroup` items.

          To associate a tab with a tab group, add the tab group's `groupLabel` to the tab's `tabGroupLabels` array.
        type: array
        items:
          "$ref": "#/definitions/tabGroup"
      textTabs:
        description: |
          A list of
          Text tabs.

          A text tab enables the recipient to enter free text. This value can be set.

          Find descriptions of all tab types in
          the [EnvelopeRecipientTabs Resource][ert].

          [ert]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/text"
      titleTabs:
        description: |
          A list of
          [Title tabs][title].

          A Title tab displays the recipient's title.  This value can't be set.


          [title]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/title"
      viewTabs:
        description: |
          A list of
          [View tabs][view].

          A View tab is used with an Approve tab to handle supplemental documents.  This value can be set.

          [view]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/view"
      zipTabs:
        description: |
          A list of
          [Zip tabs][zip].

          A Zip tab enables the recipient to enter a ZIP code. The ZIP code can be five digits or nine digits ( in ZIP+4 format), and can be entered with or without dashes. It uses the same parameters as a Text tab, with the validation message and pattern set for ZIP code information.  This value can be set.


          [zip]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/zip"
    description: ""
    x-ds-definition-name: tabs
    x-ds-category: Templates
    x-ds-order: "50"
    x-ms-summary: ""
  EnvelopeViews:
    type: object
    properties:
      url:
        description: The view URL to be navigated to.
        type: string
    x-ds-definition-name: viewUrl
    description: |+
      Provides a URL that you can embed in your application
      to provide access to the DocuSign UI.

      ### Related topics

      - [Embedded signing and sending](/docs/esign-rest-api/esign101/concepts/embedding/)
      - [Send an envelope via your app](/docs/esign-rest-api/how-to/embedded-sending/)
      - [Introducing customizable embedded sending](https://www.docusign.com/blog/developers/introducing-customizable-embedded-sending)

    x-ds-category: Envelopes
    x-ds-order: "1"
    x-ms-summary: |+
      Provides a URL that you can embed in your application
      to provide access to the DocuSign UI.

      ### Related topics

      - [Embedded signing and sending](/docs/esign-rest-api/esign101/concepts/embedding/)
      - [Send an envelope via your app](/docs/esign-rest-api/how-to/embedded-sending/)
      - [Introducing customizable embedded sending](https://www.docusign.com/blog/developers/introducing-customizable-embedded-sending)

  AccountSealProviders:
    type: object
    properties:
      seals:
        description: A list of electronic seals to apply to documents.
        type: array
        items:
          "$ref": "#/definitions/sealIdentifier"
    x-ds-definition-name: accountSeals
    description: ""
    x-ds-category: Accounts
    x-ds-order: "10"
    x-ms-summary: ""
  Accounts:
    description: Account management
    type: object
    properties:
      accountIdGuid:
        description: The GUID associated with the account ID.
        type: string
      accountName:
        description: The name on the account.
        type: string
      accountSettings:
        "$ref": "#/definitions/accountSettingsInformation"
        description: |+
          The list of
          account settings accountsettings
          that determine
          the features available for the account.
          Note that some features are determined
          by the plan used to create the account and cannot be overridden.

      allowTransactionRooms:
        description:
          When **true,** the transaction rooms feature exposed through
          the Workspaces API is enabled.
        type: string
      billingPeriodDaysRemaining:
        description: Number of days remaining in the current billing period.
        type: string
      billingPeriodEndDate:
        description: The billing period end date in UTC timedate format.
        type: string
      billingPeriodEnvelopesAllowed:
        description:
          The number of envelopes that can be sent in the current billing
          period (can be unlimited).
        type: string
      billingPeriodEnvelopesSent:
        description:
          The number of envelopes that have been sent in the current billing
          period.
        type: string
      billingPeriodStartDate:
        description: The billing period start date in UTC timedate format.
        type: string
      billingProfile:
        description:
          "The type of billing method on the account. Valid values are:
          \n\n- `direct`\n- `web`"
        type: string
      brands:
        "$ref": "#/definitions/AccountBrands"
        description: A list of brands.
      canUpgrade:
        description:
          When **true,** specifies that you can upgrade the account through
          the API. For GET methods, you must set the `include_metadata` query parameter
          to **true** for this property to appear in the response.
        type: string
      connectPermission:
        description: ""
        type: string
      createdDate:
        description: The creation date of the account in UTC timedate format.
        type: string
      currencyCode:
        description:
          "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency
          code.

          "
        type: string
      currentPlanId:
        description: ID of the plan used to create this account.
        type: string
      displayApplianceStartUrl:
        description: ""
        type: string
      displayApplianceUrl:
        description: ""
        type: string
      distributorCode:
        description:
          The code that identifies the billing plan groups and plans for
          the new account.
        type: string
      docuSignLandingUrl:
        description: URL of the landing page used to create the account.
        type: string
      dssValues:
        description: ""
        type: object
        additionalProperties:
          type: string
      envelopeSendingBlocked:
        description:
          When **true,** the ability to send envelopes is blocked. When
          **false,** envelopes can be sent.
        type: string
      envelopeUnitPrice:
        description:
          The price of sending an envelope, represented in the account's
          local currency.
        type: string
      externalAccountId:
        description: The Account ID displayed on the user's Account page.
        type: string
      forgottenPasswordQuestionsCount:
        description:
          " A complex element that contains up to four Question/Answer
          pairs for forgotten password information for a user."
        type: string
      isDowngrade:
        description:
          When **true,** the account has been downgraded from a premium
          account type. Otherwise **false.**
        type: string
      paymentMethod:
        description: |-
          The payment method used for the billing plan. Valid values are:

          - `NotSupported`
          - `CreditCard`
          - `PurchaseOrder`
          - `Premium`
          - `Freemium`
          - `FreeTrial`
          - `AppStore`
          - `DigitalExternal`
          - `DirectDebit`
        type: string
      planClassification:
        description:
          "Identifies the type of plan. Examples include:\n\n- `business`\n-
          `corporate`\n- `enterprise` \n- `free`"
        type: string
      planEndDate:
        description: The date that the current plan will end.
        type: string
      planName:
        description:
          "The name of the billing plan used for the account.\n\nExamples:
          \n\n- `Personal - Annual`\n- `Unlimited Envelope Subscription - Annual Billing`"
        type: string
      planStartDate:
        description: The date that the Account started using the current plan.
        type: string
      recipientDomains:
        description: ""
        type: array
        items:
          "$ref": "#/definitions/recipientDomain"
      seatsAllowed:
        description: The number of active users the account can have at one time.
        type: string
      seatsInUse:
        description: The number of users currently active on the account.
        type: string
      status21CFRPart11:
        description:
          The status of the account content per (Title 21 CFR Part 11)[https://www.fda.gov/regulatory-information/search-fda-guidance-documents/part-11-electronic-records-electronic-signatures-scope-and-application].
          This regulation defines the criteria under which electronic records and
          electronic signatures are considered trustworthy.
        type: string
      suspensionDate:
        description: The date on which the account was suspended.
        type: string
      suspensionStatus:
        description: Indicates whether the account is currently suspended.
        type: string
      useDisplayAppliance:
        description: ""
        type: boolean
    x-ds-definition-name: accountInformation
    x-ds-category: Accounts
    x-ds-order: "1"
    x-ms-summary: Account management
  AccountSignatureProviders:
    type: object
    properties:
      signatureProviders:
        description:
          Names of electronic or digital signature providers that can be
          used.
        type: array
        items:
          "$ref": "#/definitions/accountSignatureProvider"
    x-ds-definition-name: accountSignatureProviders
    description:
      "This resource provides information on the Standards Based Signature
      providers that have been provisioned for an account.

      "
    x-ds-category: Accounts
    x-ds-order: "30"
    x-ms-summary:
      "This resource provides information on the Standards Based Signature
      providers that have been provisioned for an account.

      "
  BillingPlans:
    description: Billing plans
    type: object
    properties:
      billingAddress:
        "$ref": "#/definitions/accountAddress"
        description: The billing address for the account.
      billingAddressIsCreditCardAddress:
        description:
          When **true,** the credit card address information is the same
          as that returned as the billing address. If false, then the billing address
          is considered a billing contact address, and the credit card address can
          be different.
        type: string
      billingPlan:
        "$ref": "#/definitions/accountBillingPlan"
        description: An object that contains details about the billing plan.
      creditCardInformation:
        "$ref": "#/definitions/creditCardInformation"
        description:
          A complex type that has information about the credit card used
          to pay for this account.
      directDebitProcessorInformation:
        "$ref": "#/definitions/directDebitProcessorInformation"
        description:
          Information about the bank that processes direct debits for the
          payment plan.
      downgradePlanInformation:
        "$ref": "#/definitions/downgradePlanUpdateResponse"
        description: ""
      downgradeRequestInformation:
        "$ref": "#/definitions/downgradeRequestInformation"
        description: ""
      entityInformation:
        "$ref": "#/definitions/billingEntityInformationResponse"
        description: ""
      paymentMethod:
        description: |-
          The payment method used for the billing plan. Valid values are:

          - `NotSupported`
          - `CreditCard`
          - `PurchaseOrder`
          - `Premium`
          - `Freemium`
          - `FreeTrial`
          - `AppStore`
          - `DigitalExternal`
          - `DirectDebit`
        type: string
      paymentProcessorInformation:
        "$ref": "#/definitions/paymentProcessorInformation"
        description:
          Information about the entity that processes payments for the
          billing plan.
      referralInformation:
        "$ref": "#/definitions/referralInformation"
        description: Contains information describing discounts and promotions.
      successorPlans:
        description:
          A list of billing plans that the current billing plan can be
          rolled into.
        type: array
        items:
          "$ref": "#/definitions/billingPlan"
      taxExemptId:
        description: ""
        type: string
    x-ds-definition-name: accountBillingPlanResponse
    x-ds-category: Billing
    x-ds-order: "10"
    x-ms-summary: Billing plans
  Invoices:
    description: Invoices
    type: object
    properties:
      amount:
        description: Reserved for DocuSign.
        type: string
      balance:
        description: Reserved for DocuSign.
        type: string
      dueDate:
        description: Reserved for DocuSign.
        type: string
      invoiceId:
        description: Reserved for DocuSign.
        type: string
      invoiceItems:
        description: Reserved for DocuSign.
        type: array
        items:
          "$ref": "#/definitions/billingInvoiceItem"
      invoiceNumber:
        description: Reserved for DocuSign.
        type: string
      invoiceUri:
        description:
          Contains a URI for an endpoint that you can use to retrieve invoice
          information.
        type: string
      nonTaxableAmount:
        description: ""
        type: string
      pdfAvailable:
        description: ""
        type: string
      taxableAmount:
        description: ""
        type: string
    x-ds-definition-name: billingInvoice
    x-ds-category: Billing
    x-ds-order: "20"
    x-ms-summary: Invoices
  Payments:
    description: Payments
    type: object
    properties:
      amount:
        description: Reserved for DocuSign.
        type: string
      description:
        description: "A sender-defined description of the line item.

          "
        type: string
      paymentDate:
        description: ""
        type: string
      paymentId:
        description: The ID of the payment.
        type: string
      paymentNumber:
        description:
          "When **true,** a PDF version of the invoice is available. \n\nTo
          get the PDF, make the call again and change \"Accept:\" in the header to
          \"Accept: application/pdf\"."
        type: string
    x-ds-definition-name: billingPaymentItem
    x-ds-category: Billing
    x-ds-order: "30"
    x-ms-summary: Payments
  CloudStorage:
    type: object
    properties:
      endPosition:
        description: "The last index position in the result set. "
        type: string
      errorDetails:
        "$ref": "#/definitions/externalDocServiceErrorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      id:
        description: A unique ID for the Salesforce object.
        type: string
      items:
        description:
          A list of objects that contain information about a file or folder
          in cloud storage.
        type: array
        items:
          "$ref": "#/definitions/externalFile"
      name:
        description: The name of the cloud storage item.
        type: string
      nextUri:
        description:
          "The URI for the next chunk of records based on the search request.
          It is `null` if this is the last set of results for the search. "
        type: string
      previousUri:
        description:
          "The URI for the prior chunk of records based on the search request.
          It is `null` if this is the first set of results for the search. "
        type: string
      resultSetSize:
        description:
          The number of results in this response. Because you can filter
          which entries are included in the response, this value is always less than
          or equal to the `totalSetSize`.
        type: string
      startPosition:
        description: The starting index position of the current result set.
        type: string
      totalSetSize:
        description:
          The total number of items in the result set. This value is always
          greater than or equal to the value of `resultSetSize`.
        type: string
    x-ds-definition-name: externalFolder
    description: Cloud storage
    x-ds-category: CloudStorage
    x-ds-order: "10"
    x-ms-summary: Cloud storage
  CloudStorageProviders:
    type: object
    properties:
      storageProviders:
        description:
          An Array containing the storage providers associated with the
          user.
        type: array
        items:
          "$ref": "#/definitions/cloudStorageProvider"
    x-ds-definition-name: cloudStorageProviders
    description:
      The CloudStorageProviders resource provides methods that allow you
      to manage the cloud storage providers associate with an account.
    x-ds-category: CloudStorage
    x-ds-order: "20"
    x-ms-summary:
      The CloudStorageProviders resource provides methods that allow you
      to manage the cloud storage providers associate with an account.
  ConnectConfigurations:
    type: object
    properties:
      allowEnvelopePublish:
        description:
          When **true,** data is sent to the `urlToPublishTo` web address.
          The default value for this property is **false,** which will stop sending
          data while maintaining the Connect configuration information.
        type: string
      allowSalesforcePublish:
        description:
          When **true,** DocuSign sends data to the designated Salesforce
          account through Connect. The default value is **true.**
        type: string
      allUsers:
        description: |-
          When **true,** the tracked envelope and recipient events for all users, including users that are added a later time, are sent through Connect. The default value is **false.**

          **Note:** If this property is **false,** make sure you set the `userIds` property to a non-empty array of user IDs.
        type: string
      allUsersExcept:
        description:
          This flag allows you to toggle between including and excluding
          specified users from the configuration. When **false,** the users corresponding
          to the IDs in `userIds` will be included in the configuration. Conversely,
          when **true,** the users will be excluded from the configuration. The default
          value is **false.**
        type: string
      configurationType:
        description:
          If you are using merge fields, this property specifies the type
          of the merge field. The only supported value is `salesforce`.
        type: string
      connectId:
        description:
          The DocuSign-generated ID for the Connect configuration. This
          property is read-only.
        type: string
      deliveryMode:
        description: ""
        type: string
      disabledBy:
        description: ""
        type: string
      enableLog:
        description:
          "When **true,** Connect logging is turned on. DocuSign recommends
          that you enable this functionality to help troubleshoot any issues. \n\nYou
          can have a maximum of 100 active logs in your account. You can view the
          entries in active logs in the **Logs** tab in the Connect console."
        type: string
      envelopeEvents:
        description:
          "An array of strings that lists envelope-related events to track
          through Connect. The possible event values are: \n\n- `sent`: An envelope
          has the status `sent` in the following scenarios:\n   - When the envelope
          has been sent to recipients.\n   - When using remote signing, this event
          is triggered when the email notification with a link to the documents is
          sent to at least one recipient.\n   - When using embedded signing, this
          event is triggered when the link is ready for the recipient to sign the
          envelope.\n\n   An envelope remains in this state until all recipients have
          viewed or taken action on the envelope.\n\n- `delivered`: This status is
          triggered when all recipients have opened the envelope, selected the **Continue**
          button in the interface, and viewed the documents.\n- `completed`: This
          status is triggered when all recipients have completed their assigned actions
          on an envelope.\n- `declined`: This status is triggered when a recipient
          has declined to sign the envelope.\n- `voided`: The voided status indicates
          that the sender has voided the envelope.\n\n**Note:** In previous versions
          of the API, this value was a single comma-separated string.\n"
        type: array
        items:
          type: string
      eventData:
        "$ref": "#/definitions/connectEventData"
        description:
          Allows you to specify the format of the information the Connect
          webhooks returns.
      events:
        description: |
          A comma-separated list of envelope-level event statuses that will trigger Connect to send updates to the endpoint specified in the `urlToPublishTo` property.

          Set this property when you are using the [JSON SIM event model](/platform/webhooks/connect/improved-json-sim-event-model/). If you are instead using any of [the legacy event message formats](/platform/webhooks/connect/legacy-message-formats/), set either the `envelopeEvents` property or the `recipientEvents` property.

          The [possible event statuses](/platform/webhooks/connect/improved-json-sim-event-model/#eventreference) are:

          * `envelope-created`
          * `envelope-sent`
          * `envelope-resent`
          * `envelope-delivered`
          * `envelope-completed`
          * `envelope-declined`
          * `envelope-voided`
          * `recipient-authenticationfailed`
          * `recipient-autoresponded`
          * `recipient-declined`
          * `recipient-delivered`
          * `recipient-completed`
          * `recipient-sent`
          * `recipient-resent`
          * `template-created`
          * `template-modified`
          * `template-deleted`
          * `envelope-corrected`
          * `envelope-purge`
          * `envelope-deleted`
          * `envelope-discard`
          * `recipient-reassign`
          * `recipient-delegate`
          * `recipient-finish-later`
          * `click-agreed`
          * `click-declined`
        type: array
        items:
          type: string
      externalFolderId:
        description: The ID of an external folder.
        type: string
      externalFolderLabel:
        description: The label for an external folder.
        type: string
      groupIds:
        description: ""
        type: array
        items:
          type: string
      includeCertificateOfCompletion:
        description:
          "When **true,** the Connect Service includes the Certificate
          of Completion with completed envelopes. "
        type: string
      includeCertSoapHeader:
        description:
          When **true,** a certificate for a SOAP header is included in
          messages sent through Connect.
        type: string
      includeDocumentFields:
        description:
          "When **true,** the Document Fields associated with the envelope's
          documents are included in the notification messages. Document Fields are
          optional custom name-value pairs added to documents using the API. "
        type: string
      includeDocuments:
        description: |-
          When **true,**
          Connect attaches the envelope documents
          to the payloads of your event notification messages.

          **Note:** Consider resources and scaling when adding documents
          to your event payloads. Documents attached to these messages
          are sent as base64 strings,
          which are larger than binary document data.
          This can significantly increase your payload size,
          opening up windows for failure.
          If you include documents,
          you must build your application to scale in these situations.
        type: string
      includeEnvelopeVoidReason:
        description:
          When **true,** Connect will include the voidedReason for voided
          envelopes.
        type: string
      includeHMAC:
        description: |-
          When **true,** a Hash-based Message Authentication Code (HMAC) signature is included in messages sent through Connect.
          For more information, see [Using HMAC Security with DocuSign Connect](/platform/webhooks/connect/hmac/).
        type: string
      includeOAuth:
        description: ""
        type: string
      includeSenderAccountasCustomField:
        description:
          When **true,** Connect will include the sender account as Custom
          Field in the data.
        type: string
      includeTimeZoneInformation:
        description: When **true,** Connect will include the envelope time zone information.
        type: string
      integratorManaged:
        description: ""
        type: string
      name:
        description:
          The name of the Connect configuration. The name helps identify
          the configuration in the list.
        type: string
      password:
        description: The user's encrypted password hash.
        type: string
      recipientEvents:
        description: |
          An array of strings that lists of recipient-related events that trigger a notification
          to your webhook Connect listener. The possible event values are:

          - `sent`: If a recipient type is set to receive an email notification to take action on an envelope, the recipient status is set to `sent` upon delivery of the email.
          - `delivered`: The recipient has viewed the documents in the envelope. This recipient status does not indicate email delivery of the documents in the envelope.
          - `completed`: The recipient has completed their assigned actions on an envelope.
          - `declined`: The recipient has declined to sign a document in the envelope.
          - `authenticationfailed`: At least one signer has failed the authentication check on the document. If this occurs, you have two options:
             - Send a reminder to the recipients, which provides the signer with another chance to access and pass the authentication.
             - Correct the document and modify the authentication setting.
          - `autoresponded`: The recipient's email system sent back an automatic response. This status is only used when **Send-on-behalf-of** is turned off for the account.

          **Note:** In previous versions of the API, this value was a single comma-separated string.
        type: array
        items:
          type: string
      requireMutualTls:
        description:
          When **true,** [Mutual TLS](/platform/webhooks/mutual-tls/) authentication
          is enabled.
        type: string
      requiresAcknowledgement:
        description: |+
          When **true,** event delivery acknowledgements are enabled for your Connect configuration.

          DocuSign Connect awaits a valid 200 response from your application acknowledging that it received a message. If you do not acknowledge receiving an event notification message within 100 seconds, DocuSign treats the message as a failure and places it into a failure queue. It is imperative that you acknowledge successful receipt of Connect events as they occur by sending a 200 event back.

          #### When **true** and Send Individual Messages (SIM) mode is activated

          If the HTTP status response to a notification message is not in the range of 200-299,
          then the message delivery failed, and the configuration is marked as down.

          The message will be queued and retried once per day.
          While a Connect configuration is marked down, subsequent notifications will not be tried. Instead they will be immediately queued with the reason `Pending`.
          When a message succeeds, all queued messages for the configuration will be tried immediately, in order.

          There is a maximum of ten retries. Alternately, you can use **Republish Connect Information** to manually republish the notification.

          #### When **true** and SIM mode is not activated

          If the HTTP Status response to a notification message is not in the range of 200-299,  then the message delivery failed, and the message is queued.

          The message will be retried after at least a day the next time a subsequent message is successfully sent to this configuration (subscription).  Subsequent notifications will be tried when they occur.
          There is a maximum of ten retries. Alternately, you can use **Republish Connect Information** to manually republish the notification.

          #### When **false**

          When `requiresAcknowledgement` is set to **false** and you do not acknowledge receiving an event notification message within 100 seconds, DocuSign treats the message as a failure and determines that the server is unavailable. It does not retry to send the notification message, and you must handle the failure manually.

        type: string
      salesforceApiVersion:
        description: The version of the Salesforce API that you are using.
        type: string
      salesforceAuthcode:
        description: ""
        type: string
      salesforceCallBackUrl:
        description: ""
        type: string
      salesforceDocumentsAsContentFiles:
        description:
          When **true,** DocuSign can use documents in your Salesforce
          account for sending and signing.
        type: string
      senderOverride:
        description: ""
        type: string
      senderSelectableItems:
        description:
          "This property sets the items that are available for selection
          when adding or editing Connect objects. "
        type: array
        items:
          type: string
      sfObjects:
        description: An array of Salesforce objects.
        type: array
        items:
          "$ref": "#/definitions/connectSalesforceObject"
      signMessageWithX509Certificate:
        description:
          "When **true,** Mutual TLS will be enabled for notifications.
          Mutual TLS must be initiated by the listener (the customer's web server)
          during the TLS handshake protocol. "
        type: string
      soapNamespace:
        description: |-
          The namespace of the SOAP interface.

          **Note:** If `useSoapInterface` is set to **true,** you must set this value.
        type: string
      urlToPublishTo:
        description: |-
          The endpoint to which Connect should send webhook notification messages via an HTTPS POST request. The URL must start with `https`. The customer's web server must use an SSL/TLS certificate whose CA is in the Microsoft list of trusted CAs. Self-signed certificates are not acceptable, but you can use free certificates from Let's Encrypt.

          The maximum length of this property is 4096 bytes.
        type: string
      userIds:
        description: |-
          A comma-separated list of user IDs. This sets the users associated with the tracked envelope and recipient events. When a tracked event occurs for a set user, the a notification message is sent to your Connect listener.

          By default, the users will be included in the configuration. If you want to exclude the users, set the `allUsersExcept` property to **true.**

          **Note:** If `allUsers` is set to `false`, then you must provide a list of user IDs.
        type: array
        items:
          type: string
      userName:
        description: The name of the user.
        type: string
      useSoapInterface:
        description:
          When **true,** indicates that the `urlToPublishTo` property contains
          a SOAP endpoint.
        type: string
    description: Contains information about a DocuSign Connect configuration.
    x-ds-definition-name: connectCustomConfiguration
    x-ds-category: Connect
    x-ds-order: "10"
    x-ms-summary: Contains information about a DocuSign Connect configuration.
  ConnectEvents:
    type: object
    properties:
      failures:
        description: A list of Connect failure logs.
        type: array
        items:
          "$ref": "#/definitions/connectLog"
      logs:
        description: A list of Connect general logs.
        type: array
        items:
          "$ref": "#/definitions/connectLog"
      totalRecords:
        description: The count of records in the log list.
        type: string
      type:
        description: |
          The type of this tab. Values are:

          - `Approve`
          - `CheckBox`
          - `Company`
          - `Date`
          - `DateSigned`
          - `Decline`
          - `Email`
          - `EmailAddress`
          - `EnvelopeId`
          - `FirstName`
          - `Formula`
          - `FullName`
          - `InitialHere`
          - `InitialHereOptional`
          - `LastName`
          - `List`
          - `Note`
          - `Number`
          - `Radio`
          - `SignerAttachment`
          - `SignHere`
          - `SignHereOptional`
          - `Ssn`
          - `Text`
          - `Title`
          - `Zip5`
          - `Zip5Dash4`
        type: string
    x-ds-definition-name: connectLogs
    description:
      "Connect event logging information. This object contains sections
      for regular Connect logs and for Connect failures. "
    x-ds-category: Connect
    x-ds-order: "20"
    x-ms-summary:
      "Connect event logging information. This object contains sections
      for regular Connect logs and for Connect failures. "
  CustomTabs:
    type: object
    properties:
      anchor:
        description:
          An optional string that is used to auto-match tabs to strings
          located in the documents of an envelope.
        type: string
      anchorCaseSensitive:
        description: |-
          This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**

          For example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.

          This functionality uses the following rules:

          - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:

            $~><|^+=

            For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`

          - Strings embedded in other strings are ignored during the matching process.

          - In words that have dashes, the parts separated by dashes are treated as distinct words.

            Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**

          - Letters with accent marks are treated as distinct characters from their unaccented counterparts.

          - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.

            Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.

          - Unlike punctuation, numbers are not ignored when finding anchor words.

            Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).

          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorHorizontalAlignment:
        description: |
          This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :

          - `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.
          - `right`: Aligns the tab’s left side with the last character of the matching anchor word.

          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorIgnoreIfNotPresent:
        description:
          When **true,** this tab is ignored if the `anchorString` is not
          found in the document.
        type: string
      anchorMatchWholeWord:
        description: |
          When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**

          For example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.

          This functionality uses the following rules:

          - Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:

            $~><|^+=

            For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`

          - Strings embedded in other strings are ignored during the matching process.

          - In words that have dashes, the parts separated by dashes are treated as distinct words.

            Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**

          - Letters with accent marks are treated as distinct characters from their unaccented counterparts.

          - For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.

            Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.

          - Unlike punctuation, numbers are not ignored when finding anchor words.

            Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).


          **Note:** You can only specify the value of this property in POST requests.

          [AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/
        type: string
      anchorUnits:
        description: |
          Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:

          - `pixels` (default)
          - `inches`
          - `mms`
          - `cms`
        type: string
      anchorXOffset:
        description:
          "Specifies the X axis location of the tab in `anchorUnits` relative
          to the `anchorString`.

          "
        type: string
      anchorYOffset:
        description:
          "Specifies the Y axis location of the tab in `anchorUnits` relative
          to the `anchorString`.

          "
        type: string
      bold:
        description: When **true,** the information in the tab is bold.
        type: string
      collaborative:
        description: ""
        type: string
      concealValueOnDocument:
        description: |-
          When **true,** the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.

          When an envelope is completed the information is only available to the sender through the Form Data link in the DocuSign Console. The information on the downloaded document remains masked by asterisks.

          This setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.
        type: string
      createdByDisplayName:
        description: The user name of the DocuSign user who created this object.
        type: string
      createdByUserId:
        description: The userId of the DocuSign user who created this object.
        type: string
      customTabId:
        description:
          The DocuSign-generated custom tab ID for the custom tab to be
          applied. This property can only be used when adding new tabs for a recipient.
          When used, the new tab inherits all of the custom tab properties.
        type: string
      disableAutoSize:
        description:
          When **true,** disables the auto sizing of single line text boxes
          in the signing screen when the signer enters data. If disabled users will
          only be able enter as much data as the text box can hold. By default this
          is false. This property only affects single line text boxes.
        type: string
      editable:
        description:
          When **true,** the custom tab is editable. Otherwise the custom
          tab cannot be modified.
        type: string
      font:
        description: |
          The font to be used for the tab value. Supported fonts include:

          - Default
          - Arial
          - ArialNarrow
          - Calibri
          - CourierNew
          - Garamond
          - Georgia
          - Helvetica
          - LucidaConsole
          - MSGothic
          - MSMincho
          - OCR-A
          - Tahoma
          - TimesNewRoman
          - Trebuchet
          - Verdana
        type: string
      fontColor:
        description:
          "The font color to use for the information in the tab. Possible
          values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n-
          Gold\n- Green\n- NavyBlue\n- Purple\n- White\n"
        type: string
      fontSize:
        description: |-
          The font size used for the information in the tab. Possible values are:

          - Size7
          - Size8
          - Size9
          - Size10
          - Size11
          - Size12
          - Size14
          - Size16
          - Size18
          - Size20
          - Size22
          - Size24
          - Size26
          - Size28
          - Size36
          - Size48
          - Size72
        type: string
      height:
        description: |-
          The height of the tab in pixels.
          Must be an integer.
        type: string
      includedInEmail:
        description:
          When **true,** the tab is included in e-mails related to the
          envelope on which it exists. This applies to only specific tabs.
        type: string
      initialValue:
        description: The original value of the tab.
        type: string
      italic:
        description: When **true,** the information in the tab is italic.
        type: string
      items:
        description:
          If the tab is a list, this represents the values that are possible
          for the tab.
        type: array
        items:
          type: string
      lastModified:
        description:
          The UTC DateTime this object was last modified. This is in ISO
          8601 format.
        type: string
      lastModifiedByDisplayName:
        description: The User Name of the DocuSign user who last modified this object.
        type: string
      lastModifiedByUserId:
        description: The userId of the DocuSign user who last modified this object.
        type: string
      localePolicy:
        "$ref": "#/definitions/localePolicyTab"
        description: Locale-specific settings.
      locked:
        description:
          When **true,** the signer cannot change the data of the custom
          tab.
        type: string
      maximumLength:
        description:
          The maximum number of entry characters supported by the custom
          tab.
        type: string
      maxNumericalValue:
        description: ""
        type: string
      mergeField:
        "$ref": "#/definitions/mergeField"
        description:
          Contains the information necessary to map the tab to a field
          in SalesForce.
      minNumericalValue:
        description: ""
        type: string
      name:
        description: The name of the custom tab.
        type: string
      numericalValue:
        description: ""
        type: string
      paymentItemCode:
        description: |-
          If the custom tab is for a payment request, this is the external code for the item associated with the charge. For example, this might be your product id.

          Example: `SHAK1`

          Maximum Length: 100 characters.
        type: string
      paymentItemDescription:
        description: |-
          If the custom tab is for a payment request, this is the description of the item associated with the charge.

          Example: `The Danish play by Shakespeare`

          Maximum Length: 100 characters.
        type: string
      paymentItemName:
        description: |-
          If the custom tab is for a payment request, this is the name of the item associated with the charge.

          Maximum Length: 100 characters.

          Example: `Hamlet`
        type: string
      requireAll:
        description:
          "When **true** and shared is true, information must be entered
          in this field to complete the envelope. "
        type: string
      required:
        description: When **true,** the signer is required to fill out this tab.
        type: string
      requireInitialOnSharedChange:
        description:
          Optional element for field markup. When **true,** the signer
          is required to initial when they modify a shared field.
        type: string
      scaleValue:
        description:
          Sets the size of the tab. This field accepts values from `0.5`
          to `1.0`, where `1.0` represents full size and `0.5` is 50% of full size.
        type: string
      selected:
        description: When **true,** the radio button is selected.
        type: string
      shared:
        description: When **true,** this custom tab is shared.
        type: string
      signatureProviderId:
        description: Reserved for DocuSign.
        type: string
      stampType:
        description: |-
          The type of stamp. Valid values are:

          - `signature`: A signature image. This is the default value.
          - `stamp`: A stamp image.
          - null
        type: string
      stampTypeMetadata:
        "$ref": "#/definitions/propertyMetadata"
        description:
          "Metadata that indicates whether the `stampType` property is
          editable.

          "
      tabLabel:
        description: |
          The label associated with the tab. This value may be an empty string.
          If no value is provided, the tab type is used as the value.

          Maximum Length: 500 characters.
        type: string
      type:
        description: |-
          The type of this tab. Values are:

          - `Approve`
          - `CheckBox`
          - `Company`
          - `Date`
          - `DateSigned`
          - `Decline`
          - `Email`
          - `EmailAddress`
          - `EnvelopeId`
          - `FirstName`
          - `Formula`
          - `FullName`
          - `InitialHere`
          - `InitialHereOptional`
          - `LastName`
          - `List`
          - `Note`
          - `Number`
          - `Radio`
          - `SignerAttachment`
          - `SignHere`
          - `SignHereOptional`
          - `Ssn`
          - `Text`
          - `Title`
          - `Zip5`
          - `Zip5Dash4`
        type: string
      underline:
        description: When **true,** the information in the tab is underlined.
        type: string
      validationMessage:
        description:
          The message displayed if the custom tab fails input validation
          (either custom of embedded).
        type: string
      validationPattern:
        description: A regular expression used to validate input for the tab.
        type: string
      validationType:
        description: |
          Specifies how numerical data is validated. Valid values:

          - `number`
          - `currency`
        type: string
      width:
        description: |-
          The width of the tab in pixels.
          Must be an integer.
        type: string
    x-ds-definition-name: tabMetadata
    description: Custom tabs
    x-ds-category: CustomTabs
    x-ds-order: "10"
    x-ms-summary: Custom tabs
  RequestLogs:
    type: object
    properties:
      apiRequestLogging:
        description: " When **true,** enables API request logging for the user. "
        type: string
      apiRequestLogMaxEntries:
        description: Specifies the maximum number of API requests to log.
        type: string
      apiRequestLogRemainingEntries:
        description: Indicates the remaining number of API requests that can be logged.
        type: string
    x-ds-definition-name: diagnosticsSettingsInformation
    description: Request logs
    x-ds-category: Diagnostics
    x-ds-order: "10"
    x-ms-summary: Request logs
  Resources:
    type: object
    properties:
      resources:
        description: ""
        type: array
        items:
          "$ref": "#/definitions/nameValue"
    x-ds-definition-name: resourceInformation
    description: API resource information
    x-ds-category: Diagnostics
    x-ds-order: "20"
    x-ms-summary: API resource information
  Services:
    type: object
    properties:
      buildBranch:
        description: Reserved for DocuSign.
        type: string
      buildBranchDeployedDateTime:
        description: Reserved for DocuSign.
        type: string
      buildSHA:
        description: Reserved for DocuSign.
        type: string
      buildVersion:
        description: Reserved for DocuSign.
        type: string
      linkedSites:
        description: ""
        type: array
        items:
          type: string
      serviceVersions:
        description: ""
        type: array
        items:
          "$ref": "#/definitions/serviceVersion"
    x-ds-definition-name: serviceInformation
    description: API service information
    x-ds-category: Diagnostics
    x-ds-order: "30"
    x-ms-summary: API service information
  EnvelopeConsumerDisclosures:
    type: object
    properties:
      accountEsignId:
        description: The GUID of the account associated with the consumer disclosure.
        type: string
      allowCDWithdraw:
        description: |-
          When **true,** indicates that the customer can withdraw their consent to the consumer disclosure when they decline to sign documents. If these recipients sign documents sent to them from your account in the future, they will be required to agree to the terms in the disclosure. The default value is **false.**
          **Note:** Only Admin users can change this setting.
        type: string
      allowCDWithdrawMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `allowCDWithdraw` property
          is editable.

          "
      changeEmail:
        description:
          If the customer needs to change their email address, this is
          the email address to which they should the change request.
        type: string
      changeEmailOther:
        description:
          "Other information about the requirements for the user to change
          their email address.\n\nExample: \n\n`We do not require any other information
          from you to change your email address.`"
        type: string
      companyName:
        description: |
          Specifies the company name used in the disclosure. The default value is the account name.

          However, if your account uses signing brands that specify a company name, you can substitute the brand's company name by setting the `useBrand` property to **true.** Whenever an envelope is sent from the account that uses a signing brand with a specified `companyName`, that value is used in email notifications and in the signing experience.

          **Note:** This substitution only works if you use the default legal disclosure or if you apply the `companyName` to the merge fields in a custom ERSD. You must also set the value of the `useBrand` property to **true.**
        type: string
      companyPhone:
        description:
          The phone number of the company associated with the consumer
          disclosure, as a free-formatted string.
        type: string
      copyCostPerPage:
        description:
          "The cost per page if the customer requests paper copies.\n\nExample:
          \n\n`0.0000`"
        type: string
      copyFeeCollectionMethod:
        description:
          "Specifies the fee collection method for cases in which the customer
          requires paper copies of the document.\n\nMaximum length: 255 characters.\n\nExample:
          \n\n`We will bill you for any fees at that time, if any.`"
        type: string
      copyRequestEmail:
        description: |-
          The email address to which the customer should send a request for copies of a document.

          Maximum length: 100 characters.
        type: string
      custom:
        description:
          When **true,** indicates that the consumer disclosure is a custom
          disclosure. The default is **false.**
        type: string
      enableEsign:
        description: When **true** (default), indicates that eSign is enabled.
        type: string
      esignAgreement:
        description:
          The final, assembled text of the Electronic Record and Signature
          Disclosure that includes the appropriate `companyName` and other specifics.
          It also includes the HTML tags used for formatting.
        type: string
      esignText:
        description: |-
          The template for the Electronic Record and Signature Disclosure, which contains placeholders for information such as the `companyName`. It also includes the HTML tags used for formatting.

          **Note:** If you are switching to or updating a custom disclosure, you can edit both the text and the HTML formatting.
        type: string
      languageCode:
        description:
          "The simple type enumeration for the language to use when displaying
          the disclosure. The following languages are supported:\n\n- Arabic (`ar`)\n-
          Bulgarian (`bg`)\n- Czech (`cs`)\n- Chinese Simplified (`zh_CN`)\n- Chinese
          Traditional (`zh_TW`)\n- Croatian (`hr`)\n- Danish (`da`)\n- Dutch (`nl`)\n-
          English US (`en`)\n- English UK (`en_GB`)\n- Estonian (`et`)\n- Farsi (`fa`)\n-
          Finnish (`fi`)\n- French (`fr`)\n- French Canadian (`fr_CA`)\n- German (`de`)\n-
          Greek (`el`)\n- Hebrew (`he`)\n- Hindi (`hi`)\n- Hungarian (`hu`)\n- Bahasa
          Indonesian (`id`)\n- Italian (`it`)\n- Japanese (`ja`)\n- Korean (`ko`)\n-
          Latvian (`lv`)\n- Lithuanian (`lt`)\n- Bahasa Melayu (`ms`)\n- Norwegian
          (`no`)\n- Polish (`pl`)\n- Portuguese (`pt`)\n- Portuguese Brazil (`pt_BR`)\n-
          Romanian (`ro`)\n- Russian (`ru`)\n- Serbian (`sr`)\n- Slovak (`sk`)\n-
          Slovenian (`sl`)\n- Spanish (`es`)\n- Spanish Latin America (`es_MX`)\n-
          Swedish (`sv`)\n- Thai (`th`)\n- Turkish (`tr`)\n- Ukrainian (`uk`) \n-
          Vietnamese (`vi`)\n\nAdditionally, you can automatically detect the browser
          language being used by the viewer and display the disclosure in that language
          by setting the value to `browser`."
        type: string
      mustAgreeToEsign:
        description:
          When **true,** the  recipient must agree to the consumer disclosure.
          The value of this property is read-only. It is calculated based on the account
          setting `consumerDisclosureFrequency` and the user's actions.
        type: string
      pdfId:
        description:
          "**Deprecated.** \n\nThe `pdfId` property in the consumer_disclosure
          PUT request is deprecated. For security reasons going forward, any value
          provided in the request packet must be ignored. "
        type: string
      useBrand:
        description:
          "When **true,** specifies that the company name in the signing
          brand is used for the disclosure. Whenever an envelope is sent from the
          account that uses a signing brand with a specified company name, that value
          is used in email notifications and in the signing experience.  \n\nWhen
          **false** (default), or if the signing brand does not specify a company
          name, the account name is used instead.\n\n**Note:** This substitution only
          works if you use the default legal disclosure or if you apply the `companyName`
          to the merge fields in a custom ERSD. "
        type: string
      useConsumerDisclosureWithinAccount:
        description:
          When **true,** specifies that recipients in the same account
          as the sender must agree to eSign an Electronic Record and Signature Disclosure
          Statement.
        type: string
      useConsumerDisclosureWithinAccountMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `useConsumerDisclosureWithinAccount`
          property is editable.

          "
      withdrawAddressLine1:
        description:
          "Contains the first address line of the postal address to which
          a customer can send a consent withdrawal notification.\n\nMaximum length:
          100 characters. "
        type: string
      withdrawAddressLine2:
        description:
          "Contains the second address line of the postal address to which
          a customer can send a consent withdrawal notification.\n\nMaximum length:
          100 characters. "
        type: string
      withdrawByEmail:
        description:
          When **true** (default), indicates that the customer can withdraw
          consent by email.
        type: string
      withdrawByMail:
        description:
          When **true,** indicates that the customer can withdraw consent
          by postal mail. The default is **false.**
        type: string
      withdrawByPhone:
        description:
          When **true,** indicates that the customer can withdraw consent
          by phone. The default is **false.**
        type: string
      withdrawCity:
        description:
          "Contains the city of the postal address to which a customer
          can send a consent withdrawal notification.\n\nMaximum length: 50 characters. "
        type: string
      withdrawConsequences:
        description: |-
          Text indicating the consequences of withdrawing consent.

          Maximum length: 255 characters.
        type: string
      withdrawEmail:
        description:
          "Contains the email address to which a customer can send a consent
          withdrawal notification.\n\nMaximum length: 100 characters. "
        type: string
      withdrawOther:
        description: |-
          Contains any other information needed to withdraw consent.

          Maximum length: 255 characters.

          Example:

          `We do not need any other information from you to withdraw consent.`
        type: string
      withdrawPhone:
        description:
          "Contains the phone number that a customer can call to register
          consent withdrawal notification as a free-formatted string.\n\nMaximum length:
          20 characters. "
        type: string
      withdrawPostalCode:
        description:
          "Contains the postal code of the postal address to which a customer
          can send a consent withdrawal notification.\n\nMaximum length: 20 characters. "
        type: string
      withdrawState:
        description: |-
          Contains the state of the postal address to which a customer can send a consent withdrawal notification.

          Example: `PA`
        type: string
    description: Details about envelope consumer disclosures.
    x-ds-definition-name: consumerDisclosure
    x-ds-category: Envelopes
    x-ds-order: "90"
    x-ms-summary: Details about envelope consumer disclosures.
  EnvelopeDocuments:
    type: object
    properties:
      envelopeDocuments:
        description: An array of document objects.
        type: array
        items:
          "$ref": "#/definitions/envelopeDocument"
      envelopeId:
        description: The envelope ID of the envelope status that failed to post.
        type: string
    x-ds-definition-name: envelopeDocumentsResult
    description: Envelope documents
    x-ds-category: Envelopes
    x-ds-order: "40"
    x-ms-summary: Envelope documents
  EnvelopeEmailSettings:
    description: Envelope email settings
    type: object
    properties:
      bccEmailAddresses:
        description:
          "An array containing the email address that should receive a
          copy of all email communications related to an envelope for archiving purposes.
          Maximum Length: 100 characters.\n\nWhile this property is an array, note
          that it takes only a single email address.\n\n**Note:** Only users with
          the `canManageAccount` setting set to **true** can use this option. \n\nDocuSign
          verifies that the email format is correct, but does not verify that the
          email address is active. You can use this for archiving purposes. However,
          using this property overrides the BCC for Email Archive information setting
          for this envelope. \n\n**Example:** if your account has BCC for Email Archive
          set up for the email address archive@mycompany.com and you send an envelope
          using the BCC Email Override to send a BCC email to salesarchive@mycompany.com,
          then a copy of the envelope is only sent to the salesarchive@mycompany.com
          email address."
        type: array
        items:
          "$ref": "#/definitions/bccEmailAddress"
      replyEmailAddressOverride:
        description:
          "The Reply To email address to use for email replies, instead
          of the one that is configured at the account level. DocuSign verifies that
          the email address is in a correct format, but does not verify that it is
          active. Maximum Length: 100 characters."
        type: string
      replyEmailNameOverride:
        description:
          "The name to associate with the Reply To email address, instead
          of the name that is configured at the account level. Maximum Length: 100
          characters."
        type: string
    x-ds-definition-name: emailSettings
    x-ds-category: Envelopes
    x-ds-order: "30"
    x-ms-summary: Envelope email settings
  Envelopes:
    type: object
    properties:
      accessControlListBase64:
        description: Reserved for DocuSign.
        type: string
      allowComments:
        description:
          When **true,** users can add comments to the documents in the
          envelope. For example, if a signer has a question about the text in the
          document, they can add a comment to the document.
        type: string
      allowMarkup:
        description: |
          When **true,** the Document Markup feature is enabled.

          **Note:**  To use this feature, Document Markup must be enabled at both the account and envelope levels. Only Admin users can change this setting at the account level.
        type: string
      allowReassign:
        description:
          When **true,** the recipient can redirect an envelope to a more
          appropriate recipient.
        type: string
      allowViewHistory:
        description: When **true,** recipients can view the history of the envelope.
        type: string
      anySigner:
        description: Deprecated. This feature has been replaced by signing groups.
        type: string
      asynchronous:
        description: |-
          When **true,** the envelope is queued for
          processing and the value of the `status` property
          is set to `Processing`. Additionally, GET status
          calls return `Processing` until completed.


          **Note:** A `transactionId` is required for this
          call to work correctly. When the envelope is
          created, the status is `Processing` and an
          `envelopeId` is not returned in the response. To
          get the `envelopeId`, use a GET envelope query by
          using the
          [transactionId](/docs/esign-rest-api/reference/envelopes/envelopes/create/) or by checking the
          Connect notification.
        type: string
      attachmentsUri:
        description:
          Contains a URL for retrieving the attachments that are associated
          with the envelope.
        type: string
      authoritativeCopy:
        description: |-
          When **true,** marks all of the documents in the envelope as authoritative copies.

          **Note:** You can override this value for a specific document. For example, you can set the `authoritativeCopy` property to **true** at the envelope level, but turn it off for a single document by setting the `authoritativeCopy` property for the document to **false.**
        type: string
      authoritativeCopyDefault:
        description: |-
          The default `authoritativeCopy` setting for documents in this envelope that do not have `authoritativeCopy` set.
          If this property is not set, each document defaults to the envelope's `authoritativeCopy`.
        type: string
      autoNavigation:
        description: "When **true,** autonavigation is set for the recipient.

          "
        type: string
      brandId:
        description: The ID of the brand.
        type: string
      brandLock:
        description:
          When **true,** the `brandId` for the envelope is locked and senders
          cannot change the brand used for the envelope.
        type: string
      burnDefaultTabData:
        description: ""
        type: string
      certificateUri:
        description: The URI for retrieving certificate information.
        type: string
      completedDateTime:
        description: Specifies the date and time this item was completed.
        type: string
      copyRecipientData:
        description: ""
        type: string
      createdDateTime:
        description: The UTC DateTime when the item was created.
        type: string
      customFields:
        "$ref": "#/definitions/AccountCustomFields"
        description:
          An optional array of strings that enables the sender to provide
          custom data about the recipient. This information is returned in the envelope
          status but otherwise not used by DocuSign. Each `customField` string can
          be a maximum of 100 characters.
      customFieldsUri:
        description: The URI for retrieving custom fields.
        type: string
      declinedDateTime:
        description:
          The date and time the recipient declined the document. This property
          is read-only.
        type: string
      deletedDateTime:
        description: Reserved for DocuSign.
        type: string
      deliveredDateTime:
        description:
          The date and time that the envelope was delivered to the recipient.
          This property is read-only.
        type: string
      disableResponsiveDocument:
        description: When **true,** responsive documents are disabled for the envelope.
        type: string
      documentBase64:
        description:
          The document's bytes. This field can be used to include a base64
          version of the document bytes within an envelope definition instead of sending
          the document using a multi-part HTTP request. The maximum document size
          is smaller if this field is used due to the overhead of the base64 encoding.
        type: string
      documentsCombinedUri:
        description:
          The URI for retrieving all of the documents associated with the
          envelope as a single PDF file.
        type: string
      documentsUri:
        description:
          The URI for retrieving all of the documents associated with the
          envelope as separate files.
        type: string
      emailBlurb:
        description:
          This is the same as the email body. If specified it is included
          in the email body for all envelope recipients.
        type: string
      emailSettings:
        "$ref": "#/definitions/emailSettings"
        description:
          "A complex element that allows  the sender to override some envelope
          email setting information. This can be used to override the Reply To email
          address and name associated with the envelope and to override the BCC email
          addresses to which an envelope is sent. \n\nWhen the emailSettings information
          is used for an envelope, it only applies to that envelope. \n\n**IMPORTANT:**
          The `emailSettings` information is not returned in the GET method for envelope
          status. Use GET /email_settings to return information about the email settings. "
      emailSubject:
        description: |
          The subject line of the email message that is sent to all recipients.

          For information about adding merge field information to the email subject, see [Template Email Subject Merge Fields](/docs/esign-rest-api/reference/templates/templates/create/#template-email-subject-merge-fields).

          **Note:** The subject line is limited to 100 characters, including any merged fields.It is not truncated. It is an error if the text is longer than 100 characters.
        type: string
      enableWetSign:
        description:
          When **true,** the signer is allowed to print the document and
          sign it on paper.
        type: string
      enforceSignerVisibility:
        description: |-
          When **true,** signers can only view the documents on which they have tabs. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all of the documents in an envelope, unless they are specifically excluded by using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded by using this setting when an envelope is sent.

          **Note:** To use this functionality, [Document Visibility][docviz] must be enabled for the account by making the account setting `allowDocumentVisibility` **true.**

          [docviz]: /docs/esign-rest-api/reference/envelopes/envelopedocumentvisibility/
        type: string
      envelopeAttachments:
        description:
          An array of attachment objects that provide information about
          the attachments that are associated with the envelope.
        type: array
        items:
          "$ref": "#/definitions/attachment"
      envelopeCustomMetadata:
        "$ref": "#/definitions/envelopeCustomMetadata"
        description: ""
      envelopeDocuments:
        description:
          An array containing information about the documents that are
          included in the envelope.
        type: array
        items:
          "$ref": "#/definitions/envelopeDocument"
      envelopeId:
        description: The envelope ID of the envelope status that failed to post.
        type: string
      envelopeIdStamping:
        description: |-
          When **true,** [Envelope ID Stamping](https://support.docusign.com/s/document-item?bundleId=gbo1643332197980&topicId=tfm1578456367923.html) is enabled.
          After a document or attachment is stamped with an Envelope ID,
          the ID is seen by all recipients
          and becomes a permanent part of the document
          and cannot be removed.
        type: string
      envelopeLocation:
        description: Reserved for DocuSign.
        type: string
      envelopeMetadata:
        "$ref": "#/definitions/envelopeMetadata"
        description:
          "Metadata that indicates whether the `envelope` property is editable.

          "
      envelopeUri:
        description: The URI for retrieving the envelope or envelopes.
        type: string
      expireAfter:
        description: |-
          Not used. Use the
          [`expirations`](/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification_expirations)
          property in the [`notification`](/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification) object instead.
        type: string
      expireDateTime:
        description: |-
          Not used. Use the
          [`expirations`](/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification_expirations)
          property in the [`notification`](/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification) object instead.
        type: string
      expireEnabled:
        description: |-
          Not used. Use the
          [`expirations`](/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification_expirations)
          property in the [`notification`](/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification) object instead.
        type: string
      externalEnvelopeId:
        description: May contain an external identifier for the envelope.
        type: string
      folders:
        description: A list of folder objects.
        type: array
        items:
          "$ref": "#/definitions/folder"
      hasComments:
        description:
          When **true,** indicates that users have added comments to the
          envelope.
        type: string
      hasFormDataChanged:
        description:
          Specifies if the `EnvelopeFormData` associated with any forms
          in the envelope has changed.
        type: string
      hasWavFile:
        description:
          "When **true,** indicates that a .wav file used for voice authentication
          is included in the envelope. "
        type: string
      holder:
        description: Reserved for DocuSign.
        type: string
      initialSentDateTime:
        description: The date and time the envelope was initially sent.
        type: string
      is21CFRPart11:
        description:
          When **true,** indicates compliance with United States Food and
          Drug Administration (FDA) regulations on electronic records and electronic
          signatures (ERES).
        type: string
      isDynamicEnvelope:
        description: When **true,** indicates that the envelope is a dynamic envelope.
        type: string
      isSignatureProviderEnvelope:
        description:
          When **true,** indicates that the envelope is a signature-provided
          envelope.
        type: string
      lastModifiedDateTime:
        description: The date and time that the item was last modified.
        type: string
      location:
        description: Reserved for DocuSign.
        type: string
      lockInformation:
        "$ref": "#/definitions/EnvelopeLocks"
        description: Provides lock information about an envelope that a user has locked.
      messageLock:
        description:
          "When **true,** prevents senders from changing the contents of
          `emailBlurb` and `emailSubject` properties for the envelope. \n\nAdditionally,
          this prevents users from making changes to the contents of `emailBlurb`
          and `emailSubject` properties when correcting envelopes. \n\nHowever, if
          the `messageLock` node is set to **true** and the `emailSubject` property
          is empty, senders and correctors are able to add a subject to the envelope."
        type: string
      notification:
        "$ref": "#/definitions/notification"
        description:
          "A complex element that specifies the notification options for
          the envelope. It consists of:\n\n* useAccountDefaults - When **true,** the
          account default notification settings are used for the envelope. \n* reminders
          - A complex element that specifies reminder settings for the envelope. It
          consists of: \n\n   * reminderEnabled - When **true,** a reminder message
          is sent to the recipient.\n   * reminderDelay - An integer that sets the
          number of days after the recipient receives the envelope that reminder emails
          are sent to the recipient. \n   * reminderFrequency - An integer that sets
          the interval, in days, between reminder emails. \n\n* expirations - A complex
          element that specifies the expiration settings for the envelope. It consists
          of:\n\n   * expireEnabled - When **true,** the envelope expires (is no longer
          available for signing) in the set number of days. If false, the account
          default setting is used. If the account does not have an expiration setting,
          the DocuSign default value of 120 days is used. \n   * expireAfter - An
          integer that sets the number of days the envelope is active.\n   * expireWarn
          - An integer that sets the number of days before envelope expiration that
          an expiration warning email is sent to the recipient. When 0 (zero), no
          warning email is sent. \n"
      notificationUri:
        description: The URI for retrieving notifications.
        type: string
      powerForm:
        "$ref": "#/definitions/powerForm"
        description: Information about any PowerForms that are included in the envelope.
      purgeCompletedDate:
        description: The date that a purge was completed.
        type: string
      purgeRequestDate:
        description: The date that a purge was requested.
        type: string
      purgeState:
        description: |+
          Shows the current purge state for the envelope. Valid values:

          - `unpurged`: There has been no successful request to purge documents.
          - `documents_queued`: The envelope documents have been added to the purge queue, but have not been purged.
          - `documents_dequeued`: The envelope documents have been taken out of the purge queue.
          - `documents_purged`: The envelope documents have been successfully purged.
          - `documents_and_metadata_queued`: The envelope documents and metadata have been added to the purge queue, but have not yet been purged.
          - `documents_and_metadata_purged`: The envelope documents and metadata have been successfully purged.
          - `documents_and_metadata_and_redact_queued`: The envelope documents and metadata have been added to the purge queue, but have not yet been purged, nor has personal information been redacted.
          - `documents_and_metadata_and_redact_purged`: The envelope documents and metadata have been successfully purged, and personal information has been redacted.

          **Related topics**

          - [Purging documents (eSingature Concepts)](/docs/esign-rest-api/esign101/concepts/documents/purging/)
          - [Purging documents in an envelope (blog post)](https://www.docusign.com/blog/developers/purging-documents-envelope)

        type: string
      recipients:
        "$ref": "#/definitions/EnvelopeRecipients"
        description:
          An array of recipient objects that provides details about the
          recipients of the envelope.
      recipientsLock:
        description:
          When **true,** prevents senders from changing, correcting, or
          deleting the recipient information for the envelope.
        type: string
      recipientsUri:
        description:
          Contains a URI for an endpoint that you can use to retrieve the
          recipients.
        type: string
      sender:
        "$ref": "#/definitions/userInfo"
        description: Information about the sender of the envelope.
      sentDateTime:
        description:
          The UTC DateTime when the envelope was sent. This property is
          read-only.
        type: string
      signerCanSignOnMobile:
        description: |
          When **true,** recipients can sign on a mobile device.

          **Note:** Only Admin users can change this setting.
        type: string
      signingLocation:
        description:
          Specifies the physical location where the signing takes place.
          It can have two enumeration values; `inPerson` and `online`. The default
          value is `online`.
        type: string
      status:
        description: |
          * `completed`: The recipients have finished working with the envelope: the documents are signed and all required tabs are filled in.
          * `created`: The envelope is created as a draft. It can be modified and sent later.
          * `declined`: The envelope has been declined by the recipients.
          * `delivered`: The envelope has been delivered to the recipients.
          * `sent`: The envelope will be sent to the recipients after the envelope is created.
          * `signed`: The envelope has been signed by the recipients.
          * `voided`: The envelope is no longer valid and recipients cannot access or sign the envelope.
        type: string
      statusChangedDateTime:
        description: The data and time that the status changed.
        type: string
      statusDateTime:
        description:
          The DateTime that the envelope changed status (i.e. was created
          or sent.)
        type: string
      templatesUri:
        description: The URI for retrieving the templates.
        type: string
      transactionId:
        description:
          " Used to identify an envelope. The ID is a sender-generated
          value and is valid in the DocuSign system for 7 days. It is recommended
          that a transaction ID is used for offline signing to ensure that an envelope
          is not sent multiple times. The `transactionId` property can be used determine
          an envelope's status (i.e. was it created or not) in cases where the internet
          connection was lost before the envelope status was returned."
        type: string
      useDisclosure:
        description:
          "When **true,** the disclosure is shown to recipients in accordance
          with the account's Electronic Record and Signature Disclosure frequency
          setting. When **false,** the Electronic Record and Signature Disclosure
          is not shown to any envelope recipients. \n\nIf the `useDisclosure` property
          is not set, then the account's normal disclosure setting is used and the
          value of the `useDisclosure` property is not returned in responses when
          getting envelope information."
        type: string
      voidedDateTime:
        description: The date and time the envelope or template was voided.
        type: string
      voidedReason:
        description: |
          The reason the envelope or template was voided.

          **Note:** The string is truncated to the first 200 characters.
        type: string
      workflow:
        "$ref": "#/definitions/workflow"
        description: ""
    x-ds-definition-name: envelope
    description: Envelope creation, management
    x-ds-category: Envelopes
    x-ds-order: "10"
    x-ms-summary: Envelope creation, management
  EnvelopeTemplates:
    type: object
    properties:
      templates:
        description:
          An array of `templateSummary` objects that contain information
          about templates.
        type: array
        items:
          "$ref": "#/definitions/templateSummary"
    x-ds-definition-name: templateInformation
    description: Envelope templates
    x-ds-category: Envelopes
    x-ds-order: "85"
    x-ms-summary: Envelope templates
  Folders:
    type: object
    properties:
      endPosition:
        description: "The last index position in the result set. "
        type: string
      envelopes:
        description: A list of envelopes in this folder.
        type: array
        items:
          "$ref": "#/definitions/envelopeSummary"
      folders:
        description: A list of folder objects.
        type: array
        items:
          "$ref": "#/definitions/folder"
      nextUri:
        description:
          "The URI for the next chunk of records based on the search request.
          It is `null` if this is the last set of results for the search. "
        type: string
      previousUri:
        description:
          "The URI for the prior chunk of records based on the search request.
          It is `null` if this is the first set of results for the search. "
        type: string
      resultSetSize:
        description:
          The number of results in this response. Because you can filter
          which entries are included in the response, this value is always less than
          or equal to the `totalSetSize`.
        type: string
      startPosition:
        description: The starting index position of the current result set.
        type: string
      totalSetSize:
        description:
          The total number of items in the result set. This value is always
          greater than or equal to the value of `resultSetSize`.
        type: string
    x-ds-definition-name: foldersResponse
    description: Folders allow you to organize envelopes and templates.
    x-ds-category: Folders
    x-ds-order: "10"
    x-ms-summary: Folders allow you to organize envelopes and templates.
  GroupBrands:
    type: object
    properties:
      recipientBrandIdDefault:
        description:
          The brand that envelope recipients see when a brand is not explicitly
          set.
        type: string
      senderBrandIdDefault:
        description:
          The brand that envelope senders see when a brand is not explicitly
          set.
        type: string
      brandOptions:
        description: A list of brands.
        type: array
        items:
          "$ref": "#/definitions/brand"
    x-ds-definition-name: brandsResponse
    description:
      If your account includes multiple signing brands, you can use the
      groups functionality to assign different brands to different groups. This resource
      enables you to manage group brands.
    x-ds-category: UserGroups
    x-ds-order: "30"
    x-ms-summary:
      If your account includes multiple signing brands, you can use the
      groups functionality to assign different brands to different groups. This resource
      enables you to manage group brands.
  Groups:
    type: object
    properties:
      endPosition:
        description: "The last index position in the result set. "
        type: string
      groups:
        description: A collection group objects containing information about the groups.
        type: array
        items:
          "$ref": "#/definitions/group"
      nextUri:
        description:
          "The URI for the next chunk of records based on the search request.
          It is `null` if this is the last set of results for the search. "
        type: string
      previousUri:
        description:
          "The URI for the prior chunk of records based on the search request.
          It is `null` if this is the first set of results for the search. "
        type: string
      resultSetSize:
        description:
          The number of results in this response. Because you can filter
          which entries are included in the response, this value is always less than
          or equal to the `totalSetSize`.
        type: string
      startPosition:
        description: The starting index position of the current result set.
        type: string
      totalSetSize:
        description:
          The total number of items in the result set. This value is always
          greater than or equal to the value of `resultSetSize`.
        type: string
    x-ds-definition-name: groupInformation
    description: Group information
    x-ds-category: UserGroups
    x-ds-order: "10"
    x-ms-summary: Group information
  GroupUsers:
    type: object
    properties:
      endPosition:
        description: "The last index position in the result set. "
        type: string
      nextUri:
        description:
          "The URI for the next chunk of records based on the search request.
          It is `null` if this is the last set of results for the search. "
        type: string
      previousUri:
        description:
          "The URI for the prior chunk of records based on the search request.
          It is `null` if this is the first set of results for the search. "
        type: string
      resultSetSize:
        description:
          The number of results in this response. Because you can filter
          which entries are included in the response, this value is always less than
          or equal to the `totalSetSize`.
        type: string
      startPosition:
        description: The starting index position of the current result set.
        type: string
      totalSetSize:
        description:
          The total number of items in the result set. This value is always
          greater than or equal to the value of `resultSetSize`.
        type: string
      users:
        description:
          An array of `userInfo` objects containing information about the
          users in the group.
        type: array
        items:
          "$ref": "#/definitions/userInfo"
    x-ds-definition-name: usersResponse
    description: Groups' users
    x-ds-category: UserGroups
    x-ds-order: "20"
    x-ms-summary: Groups' users
  SigningGroups:
    type: object
    properties:
      created:
        description: The UTC DateTime when the workspace user authorization was created.
        type: string
      createdBy:
        description: The name of the user who created the signing group.
        type: string
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      groupEmail:
        description:
          The email address for the signing group. You can use a group
          email address to email all of the group members at the same time.
        type: string
      groupName:
        description:
          The name of the group. The search_text provided in the call automatically
          performs a wild card search on group_name.
        type: string
      groupType:
        description: |-
          The group type. Possible values include:

          - `adminstrators`
          - `everyone`
          - `customGroup`
          - `sharedSigningGroup`

          <!-- More? To do -->
        type: string
      modified:
        description: The date and time that the signing group was last modified.
        type: string
      modifiedBy:
        description:
          The user ID (GUID) of the user who last modified this user record.
          This property is read-only.
        type: string
      signingGroupId:
        description:
          "The ID of the [signing group](https://support.docusign.com/s/document-item?bundleId=gav1643676262430&topicId=zgn1578456447934.html).

          "
        type: string
      users:
        description: User management information.
        type: array
        items:
          "$ref": "#/definitions/signingGroupUser"
    description: Signing groups
    x-ds-definition-name: signingGroup
    x-ds-category: SigningGroups
    x-ds-order: "10"
    x-ms-summary: Signing groups
  SigningGroupUsers:
    type: object
    properties:
      users:
        description: User management information.
        type: array
        items:
          "$ref": "#/definitions/signingGroupUser"
    x-ds-definition-name: signingGroupUsers
    description: Signing groups' users
    x-ds-category: SigningGroups
    x-ds-order: "20"
    x-ms-summary: Signing groups' users
  TemplateRecipients:
    description: Template recipients
    type: object
    properties:
      agents:
        description: A list of agent recipients assigned to the documents.
        type: array
        items:
          "$ref": "#/definitions/agent"
      carbonCopies:
        description: A list of carbon copy recipients assigned to the documents.
        type: array
        items:
          "$ref": "#/definitions/carbonCopy"
      certifiedDeliveries:
        description:
          A complex type containing information on a recipient the must
          receive the completed documents for the envelope to be completed, but the
          recipient does not need to sign, initial, date, or add information to any
          of the documents.
        type: array
        items:
          "$ref": "#/definitions/certifiedDelivery"
      currentRoutingOrder:
        description:
          The routing order of the current recipient. If this value equals
          a particular signer's routing order, it indicates that the envelope has
          been sent to that recipient, but he or she has not completed the required
          actions.
        type: string
      editors:
        description:
          A complex type defining the management and access rights of a
          recipient assigned assigned as an editor on the document.
        type: array
        items:
          "$ref": "#/definitions/editor"
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      inPersonSigners:
        description:
          Specifies a signer that is in the same physical location as a
          DocuSign user who will act as a Signing Host for the transaction. The recipient
          added is the Signing Host and new separate Signer Name field appears after
          Sign in person is selected.
        type: array
        items:
          "$ref": "#/definitions/inPersonSigner"
      intermediaries:
        description:
          Identifies a recipient that can, but is not required to, add
          name and email information for recipients at the same or subsequent level
          in the routing order (until subsequent Agents, Editors or Intermediaries
          recipient types are added).
        type: array
        items:
          "$ref": "#/definitions/intermediary"
      notaries:
        description: A list of notary recipients on the envelope.
        type: array
        items:
          "$ref": "#/definitions/notaryRecipient"
      participants:
        description: ""
        type: array
        items:
          "$ref": "#/definitions/participant"
      recipientCount:
        description: The number of recipients in the envelope.
        type: string
      seals:
        description:
          Specifies one or more electronic seals to apply on documents.
          For more information on Electronic Seals , see https://support.docusign.com/s/document-item?bundleId=xcm1643837555908&topicId=isl1578456577247.html
        type: array
        items:
          "$ref": "#/definitions/sealSign"
      signers:
        description: A list of signers on the envelope.
        type: array
        items:
          "$ref": "#/definitions/signer"
      witnesses:
        description: A list of signers who act as witnesses on the envelope.
        type: array
        items:
          "$ref": "#/definitions/witness"
    x-ds-definition-name: recipients
    x-ds-category: Templates
    x-ds-order: "20"
    x-ms-summary: Template recipients
  TemplateCustomFields:
    description:
      A template custom field enables you to prepopulate custom metadata
      for all new envelopes that are created by using a specific template. You can
      then use the custom data for sorting, organizing, searching, and other downstream
      processes.
    type: object
    properties:
      listCustomFields:
        description: An array of list custom fields.
        type: array
        items:
          "$ref": "#/definitions/listCustomField"
      textCustomFields:
        description: An array of text custom fields.
        type: array
        items:
          "$ref": "#/definitions/textCustomField"
    x-ds-definition-name: customFields
    x-ds-category: Templates
    x-ds-order: "70"
    x-ms-summary:
      A template custom field enables you to prepopulate custom metadata
      for all new envelopes that are created by using a specific template. You can
      then use the custom data for sorting, organizing, searching, and other downstream
      processes.
  TemplateDocumentFields:
    type: object
    properties:
      documentFields:
        description:
          "The array of name/value custom data strings to add to a document.
          Custom document field information is returned in the status, but otherwise
          is not used by DocuSign. The array contains the following elements: \n\n*
          `name` - A string that can be a maximum of 50 characters. \n* `value` -
          A string that can be a maximum of 200 characters.\n\n**Important:** If you
          are using XML, the name/value pair is contained in a `nameValue` element.
          \n"
        type: array
        items:
          "$ref": "#/definitions/nameValue"
    x-ds-definition-name: documentFieldsInformation
    description: Template document fields
    x-ds-category: Templates
    x-ds-order: "60"
    x-ms-summary: Template document fields
  TemplateDocuments:
    type: object
    properties:
      templateDocuments:
        description:
          An array of document objects that contain information about the
          documents associated with the template.
        type: array
        items:
          "$ref": "#/definitions/envelopeDocument"
      templateId:
        description:
          "The ID of the template. If a value is not provided, DocuSign
          generates a value. "
        type: string
    x-ds-definition-name: templateDocumentsResult
    description: Template documents
    x-ds-category: Templates
    x-ds-order: "40"
    x-ms-summary: Template documents
  TemplateLocks:
    type: object
    properties:
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      lockDurationInSeconds:
        description: |
          The number of seconds until the lock expires when there is no activity on the template.

          If no value is entered, then the default value of 300 seconds is used. The maximum value is 1,800 seconds.

          The lock duration can be extended.
        type: string
      lockedByApp:
        description:
          Specifies the friendly name of  the application that is locking
          the envelope.
        type: string
      lockedByUser:
        "$ref": "#/definitions/userInfo"
        description:
          A complex type containing information about the user that has
          the envelope or template locked.
      lockedUntilDateTime:
        description: The date and time that the lock expires.
        type: string
      lockToken:
        description:
          A unique identifier provided to the owner of the lock. You must
          use this token with subsequent calls to prove ownership of the lock.
        type: string
      lockType:
        description: The type of lock.  Currently `edit` is the only supported type.
        type: string
      useScratchPad:
        description: "When **true,** a scratchpad is used to edit information.\n "
        type: string
    x-ds-definition-name: lockInformation
    description:
      This section provides information about template locks. You use template
      locks to prevent others from making changes to a template while you are modifying
      it.
    x-ds-category: Templates
    x-ds-order: "80"
    x-ms-summary:
      This section provides information about template locks. You use
      template locks to prevent others from making changes to a template while you
      are modifying it.
  Templates:
    type: object
    properties:
      accessControlListBase64:
        description: Reserved for DocuSign.
        type: string
      allowComments:
        description: When **true,** indicates that comments are allowed on the envelope.
        type: string
      allowMarkup:
        description: |
          When **true,** the Document Markup feature is enabled.

          **Note:**  To use this feature, Document Markup must be enabled at both the account and envelope levels. Only Admin users can change this setting at the account level.
        type: string
      allowReassign:
        description:
          When **true,** the recipient can redirect an envelope to a more
          appropriate recipient.
        type: string
      allowViewHistory:
        description: When **true,** recipients can view the history of the envelope.
        type: string
      anySigner:
        description: Deprecated. This feature has been replaced by signing groups.
        type: string
      asynchronous:
        description: |-
          When **true,** the envelope is queued for
          processing and the value of the `status` property
          is set to `Processing`. Additionally, GET status
          calls return `Processing` until completed.


          **Note:** A `transactionId` is required for this
          call to work correctly. When the envelope is
          created, the status is `Processing` and an
          `envelopeId` is not returned in the response. To
          get the `envelopeId`, use a GET envelope query by
          using the
          [transactionId](/docs/esign-rest-api/reference/envelopes/envelopes/create/) or by checking the
          Connect notification.
        type: string
      attachmentsUri:
        description:
          Contains a URL for retrieving the attachments that are associated
          with the envelope.
        type: string
      authoritativeCopy:
        description: |-
          When **true,** marks all of the documents in the envelope as authoritative copies.

          **Note:** You can override this value for a specific document. For example, you can set the `authoritativeCopy` property to **true** at the envelope level, but turn it off for a single document by setting the `authoritativeCopy` property for the document to **false.**
        type: string
      authoritativeCopyDefault:
        description: |-
          The default `authoritativeCopy` setting for documents in this envelope that do not have `authoritativeCopy` set.
          If this property is not set, each document defaults to the envelope's `authoritativeCopy`.
        type: string
      autoMatch:
        description: |-
          By default, templates that have been used within
          the last 60 days are included in auto-matching.

          By explicitly setting `autoMatch`,
          you can permanently include or exclude the template
          in auto matching.

          When **true** the template is included in auto-matching
          regardless of when it was last used.

          When **false** the template is never included in auto-matching.
        type: string
      autoMatchSpecifiedByUser:
        description: |-
          When **true,** the template has been explicitly included in or excluded from auto-matching. The default is false.
          This is a read-only property.
        type: string
      autoNavigation:
        description: "When **true,** autonavigation is set for the recipient.

          "
        type: string
      brandId:
        description: The ID of the brand.
        type: string
      brandLock:
        description:
          When **true,** the `brandId` for the envelope is locked and senders
          cannot change the brand used for the envelope.
        type: string
      burnDefaultTabData:
        description: ""
        type: string
      certificateUri:
        description: The URI for retrieving certificate information.
        type: string
      completedDateTime:
        description: Specifies the date and time this item was completed.
        type: string
      copyRecipientData:
        description: ""
        type: string
      created:
        description: The UTC DateTime when the workspace user authorization was created.
        type: string
      createdDateTime:
        description: The UTC DateTime when the item was created.
        type: string
      customFields:
        "$ref": "#/definitions/AccountCustomFields"
        description:
          An optional array of strings that enables the sender to provide
          custom data about the recipient. This information is returned in the envelope
          status but otherwise not used by DocuSign. Each `customField` string can
          be a maximum of 100 characters.
      customFieldsUri:
        description: The URI for retrieving custom fields.
        type: string
      declinedDateTime:
        description:
          The date and time the recipient declined the document. This property
          is read-only.
        type: string
      deletedDateTime:
        description: Reserved for DocuSign.
        type: string
      deliveredDateTime:
        description:
          The date and time that the envelope was delivered to the recipient.
          This property is read-only.
        type: string
      description:
        description: "A sender-defined description of the line item.

          "
        type: string
      disableResponsiveDocument:
        description: When **true,** responsive documents are disabled for the envelope.
        type: string
      documentBase64:
        description:
          The document's bytes. This field can be used to include a base64
          version of the document bytes within an envelope definition instead of sending
          the document using a multi-part HTTP request. The maximum document size
          is smaller if this field is used due to the overhead of the base64 encoding.
        type: string
      documents:
        description:
          A complex element that contains details about the documents associated
          with the envelope.
        type: array
        items:
          "$ref": "#/definitions/document"
      documentsCombinedUri:
        description:
          The URI for retrieving all of the documents associated with the
          envelope as a single PDF file.
        type: string
      documentsUri:
        description:
          The URI for retrieving all of the documents associated with the
          envelope as separate files.
        type: string
      emailBlurb:
        description:
          This is the same as the email body. If the sender enters an email
          blurb, it is included in the email body for all envelope recipients.
        type: string
      emailSettings:
        "$ref": "#/definitions/emailSettings"
        description: A complex type that contains email settings.
      emailSubject:
        description: |
          The subject line of the email message that is sent to all recipients.

          For information about adding merge field information to the email subject, see [Template Email Subject Merge Fields](/docs/esign-rest-api/reference/templates/templates/create/#template-email-subject-merge-fields).

          **Note:** The subject line is limited to 100 characters, including any merged fields.It is not truncated. It is an error if the text is longer than 100 characters.
        type: string
      enableWetSign:
        description:
          When **true,** the signer is allowed to print the document and
          sign it on paper.
        type: string
      enforceSignerVisibility:
        description: |-
          When **true,** signers can only view the documents on which they have tabs. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all of the documents in an envelope, unless they are specifically excluded by using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded by using this setting when an envelope is sent.

          **Note:** To use this functionality, [Document Visibility][docviz] must be enabled for the account by making the account setting `allowDocumentVisibility` **true.**

          [docviz]: /docs/esign-rest-api/reference/envelopes/envelopedocumentvisibility/
        type: string
      envelopeAttachments:
        description:
          An array of attachment objects that provide information about
          the attachments that are associated with the envelope.
        type: array
        items:
          "$ref": "#/definitions/attachment"
      envelopeCustomMetadata:
        "$ref": "#/definitions/envelopeCustomMetadata"
        description: ""
      envelopeDocuments:
        description:
          An array containing information about the documents that are
          included in the envelope.
        type: array
        items:
          "$ref": "#/definitions/envelopeDocument"
      envelopeId:
        description: The envelope ID of the envelope status that failed to post.
        type: string
      envelopeIdStamping:
        description: |-
          When **true,** [Envelope ID Stamping](https://support.docusign.com/s/document-item?bundleId=gbo1643332197980&topicId=tfm1578456367923.html) is enabled.
          After a document or attachment is stamped with an Envelope ID,
          the ID is seen by all recipients
          and becomes a permanent part of the document
          and cannot be removed.
        type: string
      envelopeLocation:
        description: Reserved for DocuSign.
        type: string
      envelopeMetadata:
        "$ref": "#/definitions/envelopeMetadata"
        description:
          Provides information about the features and services that are
          enabled for the envelope, including the Correct feature, the Advanced Correct
          feature, and DocuSign eNotary service.
      envelopeUri:
        description: The URI for retrieving the envelope or envelopes.
        type: string
      expireAfter:
        description: |-
          Not used. Use the
          [`expirations`](/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification_expirations)
          property in the [`notification`](/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification) object instead.
        type: string
      expireDateTime:
        description: |-
          Not used. Use the
          [`expirations`](/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification_expirations)
          property in the [`notification`](/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification) object instead.
        type: string
      expireEnabled:
        description: |-
          Not used. Use the
          [`expirations`](/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification_expirations)
          property in the [`notification`](/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification) object instead.
        type: string
      externalEnvelopeId:
        description: May contain an external identifier for the envelope.
        type: string
      favoritedByMe:
        description: ""
        type: string
      folderId:
        description:
          The unique identifier for the folder that the template belongs
          to.
        type: string
      folderIds:
        description: An array of folder IDs that the template is in.
        type: array
        items:
          type: string
      folderName:
        description: The name of the folder the template belongs to.
        type: string
      folders:
        description: A list of folder objects.
        type: array
        items:
          "$ref": "#/definitions/folder"
      hasComments:
        description:
          When **true,** indicates that users have added comments to the
          envelope.
        type: string
      hasFormDataChanged:
        description:
          Specifies if the `EnvelopeFormData` associated with any forms
          in the template has changed.
        type: string
      hasWavFile:
        description: When **true,** indicates that the template includes a .wav file.
        type: string
      holder:
        description: Reserved for DocuSign.
        type: string
      initialSentDateTime:
        description:
          The date and time the envelope that used the template was initially
          sent.
        type: string
      is21CFRPart11:
        description:
          When **true,** indicates compliance with United States Food and
          Drug Administration (FDA) regulations on electronic records and electronic
          signatures (ERES).
        type: string
      isAceGenTemplate:
        description: ""
        type: string
      isDocGenTemplate:
        description: ""
        type: string
      isDynamicEnvelope:
        description: When **true,** indicates that the envelope is a dynamic envelope.
        type: string
      isSignatureProviderEnvelope:
        description:
          When **true,** indicates that the envelope is a signature-provided
          envelope.
        type: string
      lastModified:
        description: |-
          The UTC date and time that the comment was last updated.

          **Note:** This can only be done by the creator.
        type: string
      lastModifiedBy:
        "$ref": "#/definitions/userInfo"
        description: The userId of the user who last modified the template.
      lastModifiedDateTime:
        description: The date and time the template was last modified.
        type: string
      lastUsed:
        description: The date and time the template was last used.
        type: string
      location:
        description: Reserved for DocuSign.
        type: string
      lockInformation:
        "$ref": "#/definitions/EnvelopeLocks"
        description: Provides lock information about an envelope that a user has locked.
      messageLock:
        description:
          "When **true,** prevents senders from changing the contents of
          `emailBlurb` and `emailSubject` properties for the envelope. \n\nAdditionally,
          this prevents users from making changes to the contents of `emailBlurb`
          and `emailSubject` properties when correcting envelopes. \n\nHowever, if
          the `messageLock` node is set to **true** and the `emailSubject` property
          is empty, senders and correctors are able to add a subject to the envelope."
        type: string
      name:
        description: The name of the template.
        type: string
      newPassword:
        description: The user's new password.
        type: string
      notification:
        "$ref": "#/definitions/notification"
        description:
          A complex element that specifies the notification options for
          envelopes that use the template.
      notificationUri:
        description: The URI for retrieving notifications.
        type: string
      owner:
        "$ref": "#/definitions/userInfo"
        description: The owner of the template.
      pageCount:
        description:
          "An integer value specifying the number of document pages in
          the template. "
        type: string
      password:
        description: The password for editing the template.
        type: string
      passwordProtected:
        description: When **true,** a password is required to edit the template.
        type: string
      powerForm:
        "$ref": "#/definitions/powerForm"
        description:
          A PowerForm objects that contain information about any PowerForms
          that are included in the template.
      powerForms:
        description:
          An array of PowerForm objects that contain information about
          any PowerForms that are included in the template.
        type: array
        items:
          "$ref": "#/definitions/powerForm"
      purgeCompletedDate:
        description: The date that a purge was completed.
        type: string
      purgeRequestDate:
        description: The date that a purge was requested.
        type: string
      purgeState:
        description: |+
          Shows the current purge state for the envelope. Valid values:

          - `unpurged`: There has been no successful request to purge documents.
          - `documents_queued`: The envelope documents have been added to the purge queue, but have not been purged.
          - `documents_dequeued`: The envelope documents have been taken out of the purge queue.
          - `documents_purged`: The envelope documents have been successfully purged.
          - `documents_and_metadata_queued`: The envelope documents and metadata have been added to the purge queue, but have not yet been purged.
          - `documents_and_metadata_purged`: The envelope documents and metadata have been successfully purged.
          - `documents_and_metadata_and_redact_queued`: The envelope documents and metadata have been added to the purge queue, but have not yet been purged, nor has personal information been redacted.
          - `documents_and_metadata_and_redact_purged`: The envelope documents and metadata have been successfully purged, and personal information has been redacted.

          **Related topics**

          - [Purging documents (eSingature Concepts)](/docs/esign-rest-api/esign101/concepts/documents/purging/)
          - [Purging documents in an envelope (blog post)](https://www.docusign.com/blog/developers/purging-documents-envelope)

        type: string
      recipients:
        "$ref": "#/definitions/EnvelopeRecipients"
        description: An array of recipient objects.
      recipientsLock:
        description:
          When **true,** prevents senders from changing, correcting, or
          deleting the recipient information for the envelope.
        type: string
      recipientsUri:
        description:
          Contains a URI for an endpoint that you can use to retrieve the
          recipients.
        type: string
      sender:
        "$ref": "#/definitions/userInfo"
        description: Information about the sender.
      sentDateTime:
        description:
          The UTC DateTime when the envelope was sent. This property is
          read-only.
        type: string
      shared:
        description: |-
          When **true,** indicates the template is shared with the **Everyone** group,
          and is shared with all users on the account.

          When **false,** the template is shared only with the groups you specify.
        type: string
      signerCanSignOnMobile:
        description: |
          When **true,** recipients can sign on a mobile device.

          **Note:** Only Admin users can change this setting.
        type: string
      signingLocation:
        description:
          Specifies the physical location where the signing takes place.
          It can have two enumeration values; `inPerson` and `online`. The default
          value is `online`.
        type: string
      status:
        description: |
          Indicates the envelope status. Valid values are:

          * `completed`: The recipients have finished working with the envelope: the documents are signed and all required tabs are filled in.
          * `created`: The envelope is created as a draft. It can be modified and sent later.
          * `declined`: The envelope has been declined by the recipients.
          * `delivered`: The envelope has been delivered to the recipients.
          * `sent`: The envelope will be sent to the recipients after the envelope is created.
          * `signed`: The envelope has been signed by the recipients.
          * `voided`: The envelope is no longer valid and recipients cannot access or sign the envelope.
        type: string
      statusChangedDateTime:
        description: The data and time that the status changed.
        type: string
      statusDateTime:
        description:
          The DateTime that the envelope changed status (i.e. was created
          or sent.)
        type: string
      templateId:
        description:
          "The unique identifier of the template. If this is not provided,
          DocuSign will generate a value. "
        type: string
      templatesUri:
        description: The URI for retrieving the templates.
        type: string
      transactionId:
        description:
          " Used to identify an envelope. The ID is a sender-generated
          value and is valid in the DocuSign system for 7 days. It is recommended
          that a transaction ID is used for offline signing to ensure that an envelope
          is not sent multiple times. The `transactionId` property can be used determine
          an envelope's status (i.e. was it created or not) in cases where the internet
          connection was lost before the envelope status was returned."
        type: string
      uri:
        description: Contains a URI that you can use to retreve the template.
        type: string
      useDisclosure:
        description:
          "When **true,** the disclosure is shown to recipients in accordance
          with the account's Electronic Record and Signature Disclosure frequency
          setting. When **false,** the Electronic Record and Signature Disclosure
          is not shown to any envelope recipients. \n\nIf the `useDisclosure` property
          is not set, then the account's normal disclosure setting is used and the
          value of the `useDisclosure` property is not returned in responses when
          getting envelope information."
        type: string
      voidedDateTime:
        description: The date and time the envelope or template was voided.
        type: string
      voidedReason:
        description: |
          The reason the envelope or template was voided.

          **Note:** The string is truncated to the first 200 characters.
        type: string
      workflow:
        "$ref": "#/definitions/workflow"
        description: ""
    x-ds-definition-name: envelopeTemplate
    description: Template management
    x-ds-category: Templates
    x-ds-order: "10"
    x-ms-summary: Template management
  TemplateRecipientTabs:
    type: object
    properties:
      approveTabs:
        description: |
          A list of
          [Approve tabs][approve].

          An Approve tab enables
          the recipient to approve documents without
          placing a signature or initials on the document. If the
          recipient clicks the tab during the signing process, the
          recipient is considered to have signed the document. No
          information is shown on the document of the approval, but it
          is recorded as a signature in the envelope history.
          The value of an approve tab can't be set.

          [approve]:          /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/approve"
      checkboxTabs:
        description: |
          A list of
          [Checkbox tabs][checkbox].


          A Checkbox tab enables the recipient to select a yes/no (on/off) option. This value can be set.


          [checkbox]:  /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/checkbox"
      commentThreadTabs:
        description:
          An array of tabs that represents a collection of comments in
          a comment thread. For example, if a recipient has questions about the content
          of a document, they can add a comment to the document and control who else
          can see the comment. This value can't be set.
        type: array
        items:
          "$ref": "#/definitions/commentThread"
      commissionCountyTabs:
        description: |-
          A list of
          [Commission County tabs][cc].


          A Commission County tab displays the county of a notary's commission. This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary]. The tab's value can be edited by the recipient.


          [cc]:  /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
          [notary]: /docs/notary-api/
        type: array
        items:
          "$ref": "#/definitions/commissionCounty"
      commissionExpirationTabs:
        description: |-
          A list of
          [Commission Expiration tabs][tabref].


          A Commission Expiration tab displays the expiration date of a notary's commission. This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary]. The tab's value can be edited by the recipient.


          [tabref]:  /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
          [notary]: /docs/notary-api/
        type: array
        items:
          "$ref": "#/definitions/commissionExpiration"
      commissionNumberTabs:
        description: |-
          A list of
          [Commission Number tabs][tabref].


          A Commission Number tab displays a notary's commission number. This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary]. The tab's value can be edited by the recipient.


          [tabref]:  /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
          [notary]: /docs/notary-api/
        type: array
        items:
          "$ref": "#/definitions/commissionNumber"
      commissionStateTabs:
        description: |-
          A list of
          [Commission State tabs][cc].


          A Commission County tab displays the state in which a notary's commission was granted. This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary]. The tab's value can be edited by the recipient.


          [cc]:  /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
          [notary]: /docs/notary-api/
        type: array
        items:
          "$ref": "#/definitions/commissionState"
      companyTabs:
        description: |
          A list of
          [Company tabs][company].

          A Company tab displays a field for the name of the recipient's company. This value can't be set.

          [company]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/#parameters_company
        type: array
        items:
          "$ref": "#/definitions/company"
      dateSignedTabs:
        description: |
          A list of
          [Date Signed tabs][dateSigned].


          A Date Signed tab displays the date that the recipient signed the document. This value can't be set.

          [dateSigned]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/dateSigned"
      dateTabs:
        description: |
          A list of
          [Date tabs][date].

          A Date tab enables the recipient to enter a date. This value can't be set. The tooltip for this tab recommends the date format MM/DD/YYYY, but several other date formats are also accepted. The system retains the format that the recipient enters.

          **Note:** If you need to enforce a specific date format, DocuSign recommends that you use a Text tab with a validation pattern and validation message.


          [date]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/date"
      declineTabs:
        description: |
          A list of
          [Decline tabs][decline].

          A Decline tab enables the recipient to decline the envelope. If the recipient clicks the tab during the signing process, the envelope is voided. The value of this tab can't be set.


          [decline]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/decline"
      drawTabs:
        description: |-
          A list of Draw Tabs.

          A Draw Tab allows the recipient to add a free-form drawing to the document.
        type: array
        items:
          "$ref": "#/definitions/draw"
      emailAddressTabs:
        description: |
          A list of
          [Email Address tabs][emailAddress].

          An Email Address tab displays the recipient's email as entered in the recipient information. This value can't be set.


          [emailAddress]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/emailAddress"
      emailTabs:
        description: |
          A list of
          [Email tabs][email].

          An Email tab enables the recipient to enter an email address.
          This is a one-line field that checks that a valid email
          address is entered. It uses the same parameters as a Text
          tab, with the validation message and pattern set for email
          information. This value can be set.

          When getting information that includes
          this tab type, the original value of the tab when the
          associated envelope was sent is included in the response.

          [email]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/email"
      envelopeIdTabs:
        description: |
          A list of
          [Envelope ID tabs][envelopeId].

          An Envelope ID tab  displays the envelope ID. Recipients cannot enter or change the information in this tab. This value can't be set.


          [envelopeId]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/#response201_envelopeid
        type: array
        items:
          "$ref": "#/definitions/envelopeId"
      firstNameTabs:
        description: |
          A list of
          [First Name tabs][firstName].

          A First Name tab displays the recipient's first name. The system automatically populates this field by splitting the name in the recipient information on spaces. This value can't be set.


          [firstName]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/#parameters_firstname
        type: array
        items:
          "$ref": "#/definitions/firstName"
      formulaTabs:
        description: |
          A list of [Formula tabs][formulaTab].

          The value of a Formula tab is calculated from the values of other number or date tabs in the document. When the recipient completes the underlying fields, the Formula tab calculates and displays the result. This value can be set.

          The `formula` property of the tab contains the references to the underlying tabs. To learn more about formulas, see [Calculated Fields][calculatedfields].

          If a Formula tab contains a `paymentDetails` property, the tab is considered a payment item. To learn more about payments, see [Requesting Payments Along with Signatures][paymentguide].

          [calculatedfields]: https://support.docusign.com/s/document-item?bundleId=gbo1643332197980&topicId=crs1578456361259.html
          [paymentguide]:     https://support.docusign.com/s/document-item?bundleId=juu1573854950452&topicId=fyw1573854935374.html
          [formulaTab]:       /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/formulaTab"
      fullNameTabs:
        description: |
          A list of
          [Full Name tabs][fullName].

          A Full Name tab displays the recipient's full name. This value can't be set.


          [fullName]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/fullName"
      initialHereTabs:
        description: |
          A list of
          [Initial Here tabs][initialHere].

          This type of tab enables the recipient to initial the document. May be optional. This value can't be set.

          [initialHere]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/initialHere"
      lastNameTabs:
        description: |
          A list of
          [Last Name tabs][lastName].

          A Last Name tab displays the recipient's last name. The system automatically populates this field by splitting the name in the recipient information on spaces. This value can't be set.


          [lastName]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/lastName"
      listTabs:
        description: |
          An array of List tabs.

          A List tab enables the recipient to choose from a list of options. You specify the options in the `listItems` property. This value can't be set.

          Find descriptions of all tab types in
          the [EnvelopeRecipientTabs Resource][ert].

          [ert]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/list"
      notarizeTabs:
        description: |
          A list of  [Notarize tabs][notarize].

          A Notarize tab alerts notary recipients that they must take action on the page. This value can be set.

          **Note:** Only one notarize tab can appear on a page.

          [notarize]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/notarize"
      notarySealTabs:
        description: |-
          A list of Notary Seal tabs.

          A Notary Seal tab enables the recipient to notarize a document. This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary].

          [notary]: /docs/notary-api/
        type: array
        items:
          "$ref": "#/definitions/notarySeal"
      noteTabs:
        description: |
          A list of
          [Note tabs][note].

          A Note tab displays additional information to the recipient in the form of a note. This value can be set.

          [note]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/note"
      numberTabs:
        description: |
          A list of Number tabs.

          Number tabs validate that the entered value is a number.
          They do not support advanced validation or display options.

          To learn more about the different forms of number tabs,
          see [Number fields](/docs/esign-rest-api/esign101/concepts/tabs/number-fields/) in the Concepts guide.
          For specific information about number tabs
          see [Features of numberTabs](/docs/esign-rest-api/esign101/concepts/tabs/number-fields/#features-of-numbertabs).

          [number]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/number"
      numericalTabs:
        description:
          "A list of numerical tabs.\n\nNumerical  tabs provide robust
          display and validation features, including formatting for different regions
          and currencies, and minimum and maximum value validation.                                                                                                                                                                                                                                                                                                                                                                                                                                                             \n\nTo
          learn more about the different forms of number tabs,\nsee [Number fields](/docs/esign-rest-api/esign101/concepts/tabs/number-fields/)
          in the Concepts guide.\nFor specific information about numerical tabs\nsee
          [Features of numericalTabs](/docs/esign-rest-api/esign101/concepts/tabs/number-fields/#features-of-numericaltabs)."
        type: array
        items:
          "$ref": "#/definitions/numerical"
      phoneNumberTabs:
        description: |-
          A list of
          [Phone Number tabs][cc].


          A Phone Number tab enables a recipient to enter a phone number.

          **Note:** This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary].

          [cc]:  /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
          [notary]: /docs/notary-api/
        type: array
        items:
          "$ref": "#/definitions/phoneNumber"
      polyLineOverlayTabs:
        description:
          "This type of tab enables the recipient to strike through document
          text. This value can't be set
        type: array
        items:
          "$ref": "#/definitions/polyLineOverlay"
      prefillTabs:
        "$ref": "#/definitions/prefillTabs"
        description: |-
          Prefill tabs are tabs
          that the sender can fill in
          before the envelope is sent.
          They are sometimes called
          sender tags or pre-fill fields.


          [Pre-Fill Your Own Document Fields][app]
          describes how prefill tabs
          work in the web application.


          [Customize your envelopes with pre-fill fields][catblog]
          shows how to use prefill tabs
          in your application using the eSignature
          SDKs.

          [app]:      https://support.docusign.com/s/document-item?bundleId=gbo1643332197980&topicId=nwo1611173513994.html
          [catblog]:  https://www.docusign.com/blog/developers/common-api-tasks-customize-your-envelopes-pre-fill-fields
      radioGroupTabs:
        description: |
          A list of [Radio Group tabs][radioGroup].

          A Radio Group tab places a group of radio buttons on a document. The `radios` property is used to add and place the radio
          buttons associated with the group. Only one radio button can be selected in a group. This value can be set.


          [radioGroup]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/radioGroup"
      signerAttachmentTabs:
        description: |
          A list of
          [Signer Attachment tabs][signerAttachment].

          This type of tab enables the recipient to attach supporting documents to an envelope. This value can't be set.


          [signerAttachment]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/signerAttachment"
      signHereTabs:
        description: |
          A list of
          [Sign Here tabs][signHere].

          This type of tab enables the recipient to sign a document. May be optional. This value can't be set.

          [signHere]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/signHere"
      smartSectionTabs:
        description: |-
          A list of [Smart Section](https://www.docusign.com/blog/dsdev-deep-dive-responsive-smart-sections) tabs.

          Smart Section tabs enhance responsive signing on mobile devices by enabling collapsible sections, page breaks, custom formatting options, and other advanced functionality.

          **Note:** Smart Sections are a premium feature. Responsive signing must also be enabled for your account.
        type: array
        items:
          "$ref": "#/definitions/smartSection"
      ssnTabs:
        description: |
          A list of
          [SSN tabs][ssn].

          An SSN tab contains a one-line field that enables the recipient to enter a Social Security Number (SSN) with or without
          dashes. It uses the same parameters as a Text tab, with the validation message and pattern set for SSN information. This value can be set.


          [ssn]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/ssn"
      tabGroups:
        description: |
          An array of `tabGroup` items.

          To associate a tab with a tab group, add the tab group's `groupLabel` to the tab's `tabGroupLabels` array.
        type: array
        items:
          "$ref": "#/definitions/tabGroup"
      textTabs:
        description: |
          A list of
          Text tabs.

          A text tab enables the recipient to enter free text. This value can be set.

          Find descriptions of all tab types in
          the [EnvelopeRecipientTabs Resource][ert].

          [ert]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/text"
      titleTabs:
        description: |
          A list of
          [Title tabs][title].

          A Title tab displays the recipient's title.  This value can't be set.


          [title]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/title"
      viewTabs:
        description: |
          A list of
          [View tabs][view].

          A View tab is used with an Approve tab to handle supplemental documents.  This value can be set.

          [view]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/view"
      zipTabs:
        description: |
          A list of
          [Zip tabs][zip].

          A Zip tab enables the recipient to enter a ZIP code. The ZIP code can be five digits or nine digits ( in ZIP+4 format), and can be entered with or without dashes. It uses the same parameters as a Text tab, with the validation message and pattern set for ZIP code information.  This value can be set.


          [zip]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/
        type: array
        items:
          "$ref": "#/definitions/zip"
    description: Template tabs
    x-ds-definition-name: tabs
    x-ds-category: Templates
    x-ds-order: "50"
    x-ms-summary: Template tabs
  TemplateViews:
    type: object
    properties:
      url:
        description: The URL that you navigate to in order to start the view.
        type: string
    x-ds-definition-name: viewUrl
    description:
      A TemplateView contains a URL that you can embed in your application
      to generate a template view that uses the DocuSign user interface (UI).
    x-ds-category: Templates
    x-ds-order: "55"
    x-ms-summary:
      A TemplateView contains a URL that you can embed in your application
      to generate a template view that uses the DocuSign user interface (UI).
  UserCustomSettings:
    type: object
    properties:
      customSettings:
        description: The name/value pair information for the user custom setting.
        type: array
        items:
          "$ref": "#/definitions/nameValue"
    x-ds-definition-name: customSettingsInformation
    description: Users' custom settings
    x-ds-category: Users
    x-ds-order: "30"
    x-ms-summary: Users' custom settings
  UserProfiles:
    type: object
    properties:
      address:
        "$ref": "#/definitions/addressInformation"
        description: The user's address.
      authenticationMethods:
        description:
          "Indicates the authentication methods that the user uses. These
          properties cannot be modified by the PUT operation. "
        type: array
        items:
          "$ref": "#/definitions/authenticationMethod"
      companyName:
        description: The name of the user's company.
        type: string
      displayOrganizationInfo:
        description:
          " When **true,** the user's company and title information display
          on the ID card. "
        type: string
      displayPersonalInfo:
        description:
          When **true,** the user's address and phone number display on
          the ID card.
        type: string
      displayProfile:
        description:
          When **true,** the user's ID card can be viewed from signed documents
          and envelope history.
        type: string
      displayUsageHistory:
        description:
          When **true,** the user's usage information displays on the ID
          card.
        type: string
      profileImageUri:
        description: The URL for retrieving the user's profile image.
        type: string
      title:
        description: |-
          The user's job title.

          Limit: 100 characters.
        type: string
      usageHistory:
        "$ref": "#/definitions/usageHistory"
        description:
          "A complex element consisting of: \n\n- `lastSentDateTime`: The
          date and time the user last sent an envelope. \n- `lastSignedDateTime`:
          The date and time the user last signed an envelope.\n- `sentCount`: The
          number of envelopes the user has sent.\n- `signedCount`: The number of envelopes
          the user has signed. \n"
      userDetails:
        "$ref": "#/definitions/userInformation"
        description: Detailed information about the user.
      userProfileLastModifiedDate:
        description: The date and time that the user's profile was last modified.
        type: string
    x-ds-definition-name: userProfile
    description: Users' profiles
    x-ds-category: Users
    x-ds-order: "20"
    x-ms-summary: Users' profiles
  Users:
    type: object
    properties:
      activationAccessCode:
        description:
          The activation code a new user must enter when activating their
          account.
        type: string
      company:
        description: The name of the user's company.
        type: string
      connectConfigurations:
        description: Object representing the user's custom Connect configuration.
        type: array
        items:
          "$ref": "#/definitions/connectUserObject"
      countryCode:
        description: ""
        type: string
      createdDateTime:
        description: The UTC DateTime when the item was created.
        type: string
      customSettings:
        description: The name/value pair information for the user custom setting.
        type: array
        items:
          "$ref": "#/definitions/nameValue"
      defaultAccountId:
        description: The default account ID associated with the user.
        type: string
      email:
        description: The user's email address.
        type: string
      enableConnectForUser:
        description:
          Boolean value that specifies whether the user is enabled for
          updates from DocuSign Connect.
        type: string
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      firstName:
        description: "The user's first name. \nMaximum Length: 50 characters."
        type: string
      forgottenPasswordInfo:
        "$ref": "#/definitions/forgottenPasswordInformation"
        description:
          A complex element containing up to four Question/Answer pairs
          for forgotten password information.
      groupList:
        description: |
          A list of the group information for groups to add the user to.
          Use [UserGroups: listGroups](/docs/esign-rest-api/reference/usergroups/groups/list/) to get information about groups.

          When setting a user's group, only the `groupId` is required.
        type: array
        items:
          "$ref": "#/definitions/group"
      hasRemoteNotary:
        description: ""
        type: boolean
      homeAddress:
        "$ref": "#/definitions/addressInformation"
        description: The user's physical home address.
      initialsImageUri:
        description: The URI for retrieving the image of the user's initials.
        type: string
      isAdmin:
        description:
          Determines if the feature set is actively set as part of the
          plan.
        type: string
      isAlternateAdmin:
        description: ""
        type: string
      isNAREnabled:
        description:
          When **true,** National Association of Realtors (NAR) signature
          logos are enabled for the user.
        type: string
      jobTitle:
        description: The user's job title.
        type: string
      lastLogin:
        description: The date and time when the user last logged in to the system.
        type: string
      lastName:
        description: "The user's last name. \nMaximum Length: 50 characters."
        type: string
      loginStatus:
        description:
          "Shows the current status of the user's password. Possible values
          are: \n\n* password_reset\n* password_active\n* password_expired\n* password_locked\n*
          password_reset_failed \n"
        type: string
      middleName:
        description: "The user's middle name. \nLimit: 50 characters."
        type: string
      password:
        description: The user's password.
        type: string
      passwordExpiration:
        description:
          If password expiration is enabled, the date-time when the user's
          password expires.
        type: string
      permissionProfileId:
        description: The ID of the permission profile associated with the user.
        type: string
      permissionProfileName:
        description: The name of the permission profile associated with the user.
        type: string
      profileImageUri:
        description: The URL for retrieving the user's profile image.
        type: string
      sendActivationEmail:
        description:
          This field is no longer supported for most accounts. To create
          an eSignature user without sending an activation email, use the Admin API
          by following [these steps](/docs/admin-api/how-to/create-active-user/).
        type: string
      sendActivationOnInvalidLogin:
        description:
          When **true,** specifies that an additional activation email
          be sent if user's log on fails before the account is activated.
        type: string
      signatureImageUri:
        description:
          An endpoint URI that you can use to retrieve the user's signature
          image.
        type: string
      subscribe:
        description: ""
        type: string
      suffixName:
        description:
          "The suffix for the user's name, such as Jr, IV, PhD, etc.\n\nLimit:
          50 characters. "
        type: string
      title:
        description: |-
          The salutation for the user, such as Ms, Dr, Capt., etc.

          Limit: 10 characters.
        type: string
      uri:
        description: A URI containing the user ID.
        type: string
      userAddedToAccountDateTime:
        description: The date and time that the user was added to the account.
        type: string
      userId:
        description: |-
          The ID of the user to access.

          **Note:** Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.
        type: string
      userName:
        description: |-
          The user's full name.
          <!--
          `title` + `firstName` + `middleName` + `lastName` + `suffixName`
          -->
        type: string
      userProfileLastModifiedDate:
        description: The date and time that the user's profile was last modified.
        type: string
      userSettings:
        "$ref": "#/definitions/userSettingsInformation"
        description:
          The collection of settings representing the actions a user can
          perform. See [userSettingsInformation](/docs/esign-rest-api/reference/users/users/get/#userSettingsInformation)
          for available settings.
      userStatus:
        description: |
          Status of the user's account. One of:

          - `ActivationRequired`
          - `ActivationSent`
          - `Active`
          - `Closed`
          - `Disabled`
        type: string
      userType:
        description: The type of user, for example `CompanyUser`.
        type: string
      workAddress:
        "$ref": "#/definitions/addressInformation"
        description: The user's physical work address.
    description: The Users resource enables you to create and manage account users.
    x-ds-definition-name: userInformation
    x-ds-category: Users
    x-ds-order: "10"
    x-ms-summary: The Users resource enables you to create and manage account users.
  UserSignatures:
    type: object
    properties:
      adoptedDateTime:
        description: The date and time the user adopted their signature.
        type: string
      createdDateTime:
        description: The UTC date and time when the user created the signature.
        type: string
      customField:
        description:
          Serialized information about any custom [eHanko stamps](https://support.docusign.com/s/articles/Sending-and-Signing-with-eHanko)
          that have been ordered from an eHanko provider, including the order status,
          purchase order id, time created, and time modified.
        type: string
      dateStampProperties:
        "$ref": "#/definitions/dateStampProperties"
        description: |-
          Specifies the area in which a date stamp is placed. This parameter uses pixel positioning to draw a rectangle at the center of the stamp area. The stamp is superimposed on top of this central area.

          This property contains the following information about the central rectangle:

          - `DateAreaX`: The X axis position of the top-left corner.
          - `DateAreaY`: The Y axis position of the top-left corner.
          - `DateAreaWidth`: The width of the rectangle.
          - `DateAreaHeight`: The height of the rectangle.
      disallowUserResizeStamp:
        description: When **true,** users may not resize the stamp.
        type: string
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      externalID:
        description: |-
          An external ID for the signature or stamp.

          **Note:** If a recipient uses a stamp instead of a signature, this is the stamp vendor's serial number for the stamp.
        type: string
      imageBase64:
        description: A Base64-encoded representation of the signature image.
        type: string
      imageType:
        description: |-
          The format of the signature image, such as:

          - `GIF`
          - `PNG`
          - `JPG`
          - `PDF`
          - `BMP`
        type: string
      initials150ImageId:
        description: The ID of the user's initials image.
        type: string
      initialsImageUri:
        description: The URI for retrieving the image of the user's initials.
        type: string
      isDefault:
        description:
          Boolean that specifies whether the signature is the default signature
          for the user.
        type: string
      lastModifiedDateTime:
        description: The UTC date and time when the signature was last modified.
        type: string
      nrdsId:
        description:
          The National Association of Realtors (NAR) membership ID for
          a user who is a realtor.
        type: string
      nrdsLastName:
        description: The realtor's last name.
        type: string
      nrdsStatus:
        description: |-
          The realtor's NAR membership status. The value `active` verifies that the user is a current NAR member. Valid values are:

          - `Active`
          - `Inactive`
          - `Terminate`
          - `Provisional`
          - `Deceased`
          - `Suspend`
          - `Unknown`
        type: string
      phoneticName:
        description: The phonetic spelling of the `signatureName`.
        type: string
      signature150ImageId:
        description: The ID of the user's signature image.
        type: string
      signatureFont:
        description: |
          The font type for the signature, if the signature is not drawn. The supported font types are:

          "7_DocuSign", "1_DocuSign", "6_DocuSign", "8_DocuSign", "3_DocuSign", "Mistral", "4_DocuSign", "2_DocuSign", "5_DocuSign", "Rage Italic"
        type: string
      signatureId:
        description: |-
          The ID associated with the signature name. You can use this property in the URI in place of the signature name. This enables the use of special characters (such as "&", "<", and ">") in a signature name.

          **Note:** When you update a signature, its signature ID might change. In that case you need to use `signatureName` to get the new `signatureId`.
        type: string
      signatureImageUri:
        description:
          An endpoint URI that you can use to retrieve the user's signature
          image.
        type: string
      signatureInitials:
        description: " The initials associated with the signature."
        type: string
      signatureName:
        description: Specifies the user's signature name.
        type: string
      signatureRights:
        description: |-
          The rights that the user has to the signature. Valid values are:

          - `none`
          - `read`
          - `admin`
        type: string
      signatureType:
        description: |-
          Specifies the type of signature. Possible values include:

          - `RubberStamp`: A DocuSign pre-formatted signature style. This is the default value.
          - `Imported`: A signature image that the user uploaded.
          - `Drawn`: A freehand drawing of the user's signature and initials.
        type: string
      stampFormat:
        description:
          "The format of a stamp. Valid values are:\n\n- `NameHanko`: The
          stamp represents only the signer's name.\n- `NameDateHanko`: The stamp represents
          the signer's name and the date. "
        type: string
      stampImageUri:
        description: The URI for retrieving the image of the user's stamp.
        type: string
      stampSizeMM:
        description:
          The physical height of the stamp image (in millimeters) that
          the stamp vendor recommends for displaying the image in PDF documents.
        type: string
      stampType:
        description: |-
          The type of stamp. Valid values are:

          - `signature`: A signature image. This is the default value.
          - `stamp`: A stamp image.
          - null
        type: string
      status:
        description:
          "Indicates the envelope status. Valid values are:\n\n* sent -
          The envelope is sent to the recipients. \n* created - The envelope is saved
          as a draft and can be modified and sent later."
        type: string
    x-ds-definition-name: userSignature
    description: Users' signatures
    x-ds-category: Users
    x-ds-order: "40"
    x-ms-summary: Users' signatures
  Contacts:
    type: object
    properties:
      cloudProvider:
        description: |-
          The cloud service that provided the contact. Valid values are:

          - `rooms`
          - `docusignCore` (default)

          <!-- Future:

          - `Box`
          - `GoogleDrive`
          - `Dropbox`
          - `SalesForce`
          - `SkyDrive`

          -->
        type: string
      cloudProviderContainerId:
        description:
          The ID of the container at the cloud provider. For example, this
          might be the room ID for a DocuSign Transaction Room.
        type: string
      contactId:
        description: The ID of a contact person in the account's address book.
        type: string
      contactPhoneNumbers:
        description: |-
          A list of the contact's phone numbers.

          **Note:** The phone numbers associated with shared contacts do not display to users other than the user who added the contact. Additionally, in the following scenarios, the phone number of a shared contact does not populate automatically for anyone other than the user who added the contact:

          - Sending an envelope by using SMS
          - Using phone authentication

          You must ask the user who added the contact for the phone number and then manually enter it into the authentication box.
        type: array
        items:
          "$ref": "#/definitions/contactPhoneNumber"
      contactUri:
        description: The URI for retrieving information about the contact.
        type: string
      emails:
        description: The email address or addresses associated with the contact.
        type: array
        items:
          type: string
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      isOwner:
        description: When **true,** the current user is the owner of the contact.
        type: boolean
      name:
        description: The name of the contact.
        type: string
      notaryContactDetails:
        "$ref": "#/definitions/notaryContactDetails"
        description: ""
      organization:
        description: The name of the contact's organization.
        type: string
      roomContactType:
        description: ""
        type: string
      shared:
        description: |-
          When **true,** the contact is shared. For more information, see [Shared Contacts](https://support.docusign.com/s/document-item?bundleId=jux1643235969954&topicId=twh1578456324503.html).

          **Note:** The phone numbers associated with shared contacts do not display to users other than the user who added the contact. Additionally, in the following scenarios, the phone number of a shared contact does not populate automatically for anyone other than the user who added the contact:

          - Sending an envelope by using SMS
          - Using phone authentication

          You must ask the user who added the contact for the phone number and then manually enter it into the authentication box.
        type: string
      signingGroup:
        description:
          If the contact belongs to a signing group, this property contains
          the `signingGroupId`.
        type: string
      signingGroupName:
        description: The name of the signing group that the contact belongs to.
        type: string
    x-ds-definition-name: contact
    description:
      The `Contacts` resource enables you to manage the contact in an account's
      address book.
    x-ds-category: Users
    x-ds-order: "50"
    x-ms-summary:
      The `Contacts` resource enables you to manage the contact in an
      account's address book.
  EnvelopeAttachments:
    type: object
    properties:
      accessControl:
        description: Valid values are `sender` and `senderAndAllRecipients`.
        type: string
      attachmentId:
        description: The unique identifier for the attachment.
        type: string
      attachmentType:
        description: |-
          Specifies the type of the attachment for the recipient. Possible values are:

          - `.htm`
          - `.xml`
        type: string
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      label:
        description:
          "A label for the attachment. Potential values include: \n\n-
          `guidedForm`: [Guided forms](https://www.docusign.com/products/guided-forms)
          provide a step-by-step, mobile-ready experience to help signers easily complete
          long or complex forms.\n- `eventNotifications`: A list of envelope-level
          event statuses that trigger Connect to send updates to the endpoint specified
          in the `url` property. "
        type: string
      name:
        description: The name of the attachment.
        type: string
    x-ds-definition-name: envelopeAttachment
    description: |-
      The EnvelopeAttachments resource provides methods that allow you to
      associate files with an envelope.
    x-ds-category: Envelopes
    x-ds-order: "60"
    x-ms-summary: |-
      The EnvelopeAttachments resource provides methods that allow you to
      associate files with an envelope.
  AccountPermissionProfiles:
    type: object
    properties:
      modifiedByUsername:
        description: The username of the user who last modified the permission profile.
        type: string
      modifiedDateTime:
        description: The date and time when the permission profile was last modified.
        type: string
      permissionProfileId:
        description: |
          The ID of the permission profile.

          Use [AccountPermissionProfiles: list](/docs/esign-rest-api/reference/accounts/accountpermissionprofiles/list/)
          to get a list of permission profiles and their IDs.

          You can also download a CSV file of all permission profiles
          and their IDs from the **Settings > Permission Profiles** page
          of your eSignature account page.
        type: string
      permissionProfileName:
        description:
          "The name of the account permission profile. \n\nExample: `Account
          Administrator`"
        type: string
      settings:
        "$ref": "#/definitions/accountRoleSettings"
        description:
          This object specifies the permissions that are associated with
          the account permission profile.
      userCount:
        description:
          The total number of users in the group associated with the account
          permission profile.
        type: string
      users:
        description:
          A list of user objects containing information about the users
          who are associated with the account permission profile.
        type: array
        items:
          "$ref": "#/definitions/userInformation"
    description:
      The AccountPermissionProfiles resource provides methods that allow
      you to manage permission profiles for groups of account users.
    x-ds-definition-name: permissionProfile
    x-ds-category: Accounts
    x-ds-order: "70"
    x-ms-summary:
      The AccountPermissionProfiles resource provides methods that allow
      you to manage permission profiles for groups of account users.
  PowerForms:
    type: object
    properties:
      createdBy:
        description:
          The ID of the user who created the PowerForm. This property is
          returned in a response only when you set the `include_created_by` query
          parameter to **true.**
        type: string
      createdDateTime:
        description: The date and time that the PowerForm was created.
        type: string
      emailBody:
        description: |-
          For a PowerForm that is sent by email, this is the body of the email message sent to the recipients.

          Maximum length: 10000 characters.
        type: string
      emailSubject:
        description: |
          Sets the envelope name for the envelopes that the PowerForm generates. One option is to make this property the same as the subject from the template.

          You can customize the subject line to include a recipient's name or email address by using merge fields. For information about adding merge fields to the email subject, see [Template Email Subject Merge Fields](/docs/esign-rest-api/reference/templates/templates/create/).
        type: string
      envelopes:
        description:
          An array of envelope objects that contain information about the
          envelopes that are associated with the PowerForm.
        type: array
        items:
          "$ref": "#/definitions/envelope"
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      instructions:
        description:
          The instructions that display on the landing page for the first
          recipient. These instructions are important if the recipient accesses the
          PowerForm by a method other than email. When you include instructions, they
          display as an introduction after the recipient accesses the PowerForm.
        type: string
      isActive:
        description:
          "When **true,** indicates that the PowerForm is active and can
          be sent to recipients. This is the default value.\n\n\nWhen **false,** the
          PowerForm cannot be emailed or accessed by a recipient, even if they arrive
          at the PowerForm URL. \n\nIf a recipient attempts to sign an inactive PowerForm,
          an error message informs the recipient that the document is not active and
          suggests that they contact the sender."
        type: string
      lastUsed:
        description: The date and time that the PowerForm was last used.
        type: string
      limitUseInterval:
        description:
          The length of time before the same recipient can sign the same
          PowerForm again. This property is used in combination with the `limitUseIntervalUnits`
          property.
        type: string
      limitUseIntervalEnabled:
        description: When **true,** the `limitUseInterval` is enabled.
        type: string
      limitUseIntervalUnits:
        description: |
          The units associated with the `limitUseInterval`. Valid values are:

          - `minutes`
          - `hours`
          - `days`
          - `weeks`
          - `months`

          For example, to limit a recipient to signing once per year, set the `limitUseInterval` to 365 and the `limitUseIntervalUnits` to `days`.
        type: string
      maxUseEnabled:
        description: When **true,** you can set a maximum number of uses for the PowerForm.
        type: string
      name:
        description: The name of the PowerForm.
        type: string
      powerFormId:
        description: The ID of the PowerForm.
        type: string
      powerFormUrl:
        description: The URL for the PowerForm.
        type: string
      recipients:
        description: |-
          An array of `powerFormRecipient` objects.

          **Note:** For self-service documents where you do not know who the recipients are in advance, you can enter generic information for the `role` property and leave other details (such as `name` and `email`) blank.
        type: array
        items:
          "$ref": "#/definitions/powerFormRecipient"
      senderName:
        description:
          "The name of the sender. \n\n**Note:** The default sender for
          a PowerForm is the PowerForm Administrator who created it."
        type: string
      senderUserId:
        description: The ID of the sender.
        type: string
      signingMode:
        description: |-
          The signing method to use. Valid values are:

          - `email`: This mode verifies the recipient's identity by using email authentication before the recipient can sign a document.

          - `direct`: This mode does not require any verification. DocuSign recommends that you use this signing method only when another form of authentication is in use.

          **Note:** In the account settings, `enablePowerFormDirect` must be **true** to use `direct` as the `signingMode`.

          For more information about signing modes, see the [overview of the Create method](/docs/esign-rest-api/reference/powerforms/powerforms/create/).
        type: string
      templateId:
        description: The ID of the template used to create the PowerForm.
        type: string
      templateName:
        description: The name of the template used to create the PowerForm.
        type: string
      timesUsed:
        description: "The number of times the PowerForm has been used. "
        type: string
      uri:
        description: The URI for the PowerForm.
        type: string
      usesRemaining:
        description:
          "The number of times that the PowerForm can still be used. If
          no use limit is set, the value is `Unlimited`. "
        type: string
    description:
      The PowerForms resource enables you to create fillable forms that
      you can email or make available for self service on the web.
    x-ds-definition-name: powerForm
    x-ds-category: PowerForms
    x-ds-order: "80"
    x-ms-summary:
      The PowerForms resource enables you to create fillable forms that
      you can email or make available for self service on the web.
  PowerFormData:
    type: object
    properties:
      envelopeId:
        description: The envelope ID of the envelope status that failed to post.
        type: string
      recipients:
        description: An array of powerform recipients.
        type: array
        items:
          "$ref": "#/definitions/powerFormFormDataRecipient"
    x-ds-definition-name: powerFormFormDataEnvelope
    description: Data that recipients have entered in PowerForm fields.
    x-ds-category: PowerForms
    x-ds-order: "90"
    x-ms-summary: Data that recipients have entered in PowerForm fields.
  AccountTabSettings:
    type: object
    properties:
      allowTabOrder:
        description: |-
          When **true,** account users can set a tab order for the signing process.

          **Note:** Only Admin users can change this setting.
        type: string
      allowTabOrderMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `allowTabOrder` property
          is editable.

          "
      approveDeclineTabsEnabled:
        description: When **true,** approve and decline tabs are enabled.
        type: string
      approveDeclineTabsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `approveDeclineTabs` property
          is editable.

          "
      calculatedFieldsEnabled:
        description:
          When **true,** [calculated fields](https://support.docusign.com/s/document-item?bundleId=gbo1643332197980&topicId=crs1578456361259.html)
          are enabled for tabs.
        type: string
      calculatedFieldsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `calculatedFields` property
          is editable.

          "
      checkboxTabsEnabled:
        description: When **true,** checkbox tabs are enabled.
        type: string
      checkBoxTabsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          Metadata that indicates whether the `checkBoxTabs` property is
          editable.
      dataFieldRegexEnabled:
        description:
          When **true,** regular expressions are enabled for tabs that
          contain data fields.
        type: string
      dataFieldRegexMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `dataFieldRegex` property
          is editable.

          "
      dataFieldSizeEnabled:
        description: When **true,** setting character limits for input fields is enabled.
        type: string
      dataFieldSizeMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `dataFieldSize` property
          is editable.

          "
      drawTabsEnabled:
        description: ""
        type: string
      drawTabsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      firstLastEmailTabsEnabled:
        description: Reserved for DocuSign.
        type: string
      firstLastEmailTabsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: Reserved for DocuSign.
      listTabsEnabled:
        description: When **true,** list tabs are enabled.
        type: string
      listTabsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `listTabs` property is editable.

          "
      noteTabsEnabled:
        description: When **true,** note tabs are enabled.
        type: string
      noteTabsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `noteTabs` property is editable.

          "
      numericalTabsEnabled:
        description: ""
        type: string
      numericalTabsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      prefillTabsEnabled:
        description: ""
        type: string
      prefillTabsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      radioTabsEnabled:
        description: When **true,** radio button tabs are enabled.
        type: string
      radioTabsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `radioTabs` property is
          editable.

          "
      savingCustomTabsEnabled:
        description: When **true,** saving custom tabs is enabled.
        type: string
      savingCustomTabsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `savingCustomTabs` property
          is editable.

          "
      senderToChangeTabAssignmentsEnabled:
        description: Reserved for DocuSign.
        type: string
      senderToChangeTabAssignmentsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: Reserved for DocuSign.
      sharedCustomTabsEnabled:
        description: When **true,** shared custom tabs are enabled.
        type: string
      sharedCustomTabsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `sharedCustomTabs` property
          is editable.

          "
      tabDataLabelEnabled:
        description: |
          When **true,** [data
          labels](https://support.docusign.com/en/videos/Data-Labels) are enabled.

          **Note:** Only Admin users can change this setting.
        type: string
      tabDataLabelMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `tabDataLabel` property
          is editable.

          "
      tabLocationEnabled:
        description: Reserved for DocuSign.
        type: string
      tabLocationMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: Reserved for DocuSign.
      tabLockingEnabled:
        description: |
          When **true,** tab locking is enabled.

          **Note:** Only Admin users can change this setting.
        type: string
      tabLockingMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `tabLocking` property is
          editable.

          "
      tabScaleEnabled:
        description: Reserved for DocuSign.
        type: string
      tabScaleMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: Reserved for DocuSign.
      tabTextFormattingEnabled:
        description: |
          When **true,** text formatting (such as font type, font size,
          font color, bold, italic, and underline) is enabled for tabs that
          support formatting.

          **Note:** Only Admin users can change this setting.
        type: string
      tabTextFormattingMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `tabTextFormatting` property
          is editable.

          "
      textTabsEnabled:
        description: When **true,** text tabs are enabled.
        type: string
      textTabsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `textTabs` property is editable.

          "
    x-ds-definition-name: tabAccountSettings
    description:
      Tab settings determine the tab types and tab functionality that are
      enabled for an account.
    x-ds-category: Accounts
    x-ds-order: "100"
    x-ms-summary:
      Tab settings determine the tab types and tab functionality that
      are enabled for an account.
  ENoteConfigurations:
    type: object
    properties:
      apiKey:
        description: ""
        type: string
      connectConfigured:
        description: ""
        type: string
      eNoteConfigured:
        description: ""
        type: string
      organization:
        description: ""
        type: string
      password:
        description: The user's encrypted password hash.
        type: string
      userName:
        description: The name of the user.
        type: string
    description: ""
    x-ds-definition-name: eNoteConfiguration
    x-ds-category: Accounts
    x-ds-order: "110"
    x-ms-summary: ""
  WorkspaceItems:
    description: This object contains information about a file or folder in a workspace.
    type: object
    properties:
      callerAuthorization:
        "$ref": "#/definitions/workspaceUserAuthorization"
        description: An object that describes the caller's workspace permissions.
      contentType:
        description:
          If the item is a file, this property specifies the content type
          of the file.
        type: string
      created:
        description: The UTC DateTime when the workspace item was created.
        type: string
      createdById:
        description: The ID of the user who created the workspace item.
        type: string
      createdByInformation:
        "$ref": "#/definitions/workspaceUser"
        description: Details about the user who created the workspace item.
      extension:
        description: The file extension of a file item.
        type: string
      fileSize:
        description: The size of the file in bytes.
        type: string
      fileUri:
        description: The URI for retrieving the file.
        type: string
      id:
        description: The ID of the workspace item.
        type: string
      isPublic:
        description: " When **true,** the item is public."
        type: string
      lastModified:
        description: The UTC DateTime that the item was last modified.
        type: string
      lastModifiedById:
        description: The ID of the user who last modified the item.
        type: string
      lastModifiedByInformation:
        "$ref": "#/definitions/workspaceUser"
        description: Details about the user who last modified the workspace item.
      name:
        description: The name of the file or folder.
        type: string
      pageCount:
        description: The number of pages in a file.
        type: string
      parentFolderId:
        description:
          The ID of the parent folder, or the special value `root` for
          the root folder.
        type: string
      parentFolderUri:
        description: The URI of the parent folder.
        type: string
      sha256:
        description:
          A 64-byte, Secure Hash Algorithm 256 (SHA256) checksum that the
          caller computes across the entirety of the original content of a file. DocuSign
          compares this value to its own computation. If the two values are not equal,
          the original content and received content are not the same and the upload
          is refused.
        type: string
      thumbHeight:
        description: The height of the thumbnail image.
        type: string
      thumbnail:
        "$ref": "#/definitions/page"
        description: ""
      thumbWidth:
        description: The width of the thumbnail image.
        type: string
      type:
        description: |-
          The type of workspace item. Valid values are:

          - `file`
          - `folder`
        type: string
      uri:
        description: A URI containing the user ID.
        type: string
      userAuthorization:
        "$ref": "#/definitions/workspaceUserAuthorization"
        description: An object that describes the user's workspace permissions.
    x-ds-definition-name: workspaceItem
    x-ds-category: Workspaces
    x-ds-order: "130"
    x-ms-summary: This object contains information about a file or folder in a workspace.
  Workspaces:
    description:
      A DocuSign workspace is a collaboration area for sharing files and
      data.
    type: object
    properties:
      billableAccountId:
        description: The ID of the account to bill.
        type: string
      callerInformation:
        "$ref": "#/definitions/workspaceUser"
        description: ""
      created:
        description: The UTC DateTime when the workspace user authorization was created.
        type: string
      createdByInformation:
        "$ref": "#/definitions/workspaceUser"
        description: Details about the user who created the workspace.
      lastModified:
        description:
          Utc date and time the comment was last updated (can only be done
          by creator.)
        type: string
      lastModifiedByInformation:
        "$ref": "#/definitions/workspaceUser"
        description: Details about the user who last modified the workspace.
      settings:
        "$ref": "#/definitions/workspaceSettings"
        description: Information about the settings for the workspace.
      status:
        description: |-
          The status of the workspace. Valid values are:

          - `active`
          - `closed`
        type: string
      workspaceBaseUrl:
        description: The relative URL for accessing the workspace.
        type: string
      workspaceDescription:
        description: Text describing the purpose of the workspace.
        type: string
      workspaceId:
        description: The ID of the workspace, always populated.
        type: string
      workspaceName:
        description: The name of the workspace.
        type: string
      workspaceUri:
        description: The relative URI for accessing the workspace.
        type: string
    x-ds-definition-name: workspace
    x-ds-category: Workspaces
    x-ds-order: "140"
    x-ms-summary:
      A DocuSign workspace is a collaboration area for sharing files and
      data.
  ChunkedUploads:
    type: object
    properties:
      checksum:
        description:
          A 64-byte, Secure Hash Algorithm 256 (SHA256) checksum that the
          caller computes across the entirety of the original content that has been
          uploaded to the chunked upload. DocuSign compares this value to its own
          computation. If the two values are not equal, the original content and received
          content are not the same and the commit action is refused.
        type: string
      chunkedUploadId:
        description: "The ID of the chunked upload. "
        type: string
      chunkedUploadParts:
        description:
          A list of the parts that compose the chunked upload, including
          their byte sizes. The list must be contiguous before you can commit the
          chunked upload.
        type: array
        items:
          "$ref": "#/definitions/chunkedUploadPart"
      chunkedUploadUri:
        description:
          "The URI that you use to reference the chunked upload in other
          API requests, such as envelope document and envelope attachment requests. "
        type: string
      committed:
        description:
          "When **true,** the chunked upload has been committed. A committed
          chunked upload can no longer receive any additional parts and is ready for
          use within other API requests. "
        type: string
      expirationDateTime:
        description:
          "The UTC time at which the chunked upload expires and is no longer
          addressable. \n\n**Note:** The length of time before expiration is configurable,
          and begins when you initiate the chunked upload. You must fully upload and
          use a chunked upload within this time. The default value for this duration
          is 20 minutes."
        type: string
      maxChunkedUploadParts:
        description:
          "The maximum number of parts allowed for a chunked upload. This
          value is configurable per DocuSign environment, account, or integrator.
          The default value is 128. The maximum possible value is 256.  \n"
        type: string
      maxTotalSize:
        description:
          The maximum total size allowed for a chunked upload. This value
          is configured per DocuSign environment, account, or integrator. The default
          value is 50 MB.
        type: string
      totalSize:
        description: |-
          The total size of the parts of the chunked upload.

          **Note:** When a chunked upload is used as an envelope document, it is subject to the PDF size limit (25 MB) and page count limit that apply to all envelope documents.
        type: string
    description:
      The ChunkedUploads resource provides methods to complete integrity
      checks, and to add, commit, retrieve, initiate and delete chunked uploads.
    x-ds-definition-name: chunkedUploadResponse
    x-ds-category: Envelopes
    x-ds-order: "150"
    x-ms-summary:
      The ChunkedUploads resource provides methods to complete integrity
      checks, and to add, commit, retrieve, initiate and delete chunked uploads.
  EnvelopeFormData:
    type: object
    properties:
      emailSubject:
        description: |
          The subject line of the email message that is sent to all recipients.

          For information about adding merge field information to the email subject, see [Template Email Subject Merge Fields](/docs/esign-rest-api/reference/templates/templates/create/#template-email-subject-merge-fields).

          **Note:** The subject line is limited to 100 characters, including any merged fields.It is not truncated. It is an error if the text is longer than 100 characters.
        type: string
      envelopeId:
        description: The ID of the envelope.
        type: string
      formData:
        description: An array of form data objects.
        type: array
        items:
          "$ref": "#/definitions/formDataItem"
      prefillFormData:
        "$ref": "#/definitions/prefillFormData"
        description: "An array of `formDataItem` objects for [prefill tabs](/docs/esign-rest-api/reference/envelopes/envelopedocumenttabs/create/#definition__tabs_prefilltabs). "
      recipientFormData:
        description:
          An array of form data objects that are associated with specific
          recipients.
        type: array
        items:
          "$ref": "#/definitions/recipientFormData"
      sentDateTime:
        description:
          The UTC DateTime when the envelope was sent. This property is
          read-only.
        type: string
      status:
        description: |
          Indicates the envelope status. Valid values are:

          * `completed`: The recipients have finished working with the envelope: the documents are signed and all required tabs are filled in.
          * `created`: The envelope is created as a draft. It can be modified and sent later.
          * `declined`: The envelope has been declined by the recipients.
          * `delivered`: The envelope has been delivered to the recipients.
          * `sent`: The envelope will be sent to the recipients after the envelope is created.
          * `signed`: The envelope has been signed by the recipients.
          * `voided`: The envelope is no longer valid and recipients cannot access or sign the envelope.
        type: string
    description:
      This object contains the data that recipients have entered into the
      form fields associated with an envelope.
    x-ds-definition-name: envelopeFormData
    x-ds-category: Envelopes
    x-ds-order: "160"
    x-ms-summary:
      This object contains the data that recipients have entered into
      the form fields associated with an envelope.
  EnvelopeDocumentVisibility:
    type: object
    properties:
      documentVisibility:
        description:
          An array of `documentVisibility` objects that specifies which
          documents are visible to which recipients.
        type: array
        items:
          "$ref": "#/definitions/documentVisibility"
    description:
      "Document Visibility enables senders to control the visibility of
      the documents in an envelope at the recipient level. For example, if the parties
      associated with a legal proceeding should have access to different documents,
      the Document Visibility feature enables you to keep all of the documents in
      the same envelope and set view permissions for the documents by recipient. This
      functionality is enabled for envelopes and templates. It is not available for
      PowerForms.\n\n**Note:** Before you use Document Visibility, you should be aware
      of the following information:\n\n- Document Visibility must be enabled for your
      account by your DocuSign administrator. \n- A document cannot be hidden from
      a recipient if the recipient has tabs assigned to them on the document. \n-
      When the Document Visibility setting hides a document from a recipient, the
      document also does not appear in the recipient's list of envelopes, documents,
      or page images.\n- Carbon Copy, Certified Delivery (Needs to Sign), Editor,
      and Agent recipients can always see all of the documents associated with the
      envelope or template.\n\nThe Document Visibility feature has multiple settings
      that specify the options that senders have when sending documents. For more
      information, see [Use Document Visibility to Control Recipient Access](https://support.docusign.com/s/document-item?bundleId=gbo1643332197980&topicId=eui1578456411411.html)."
    x-ds-definition-name: documentVisibilityList
    x-ds-category: Envelopes
    x-ds-order: "170"
    x-ms-summary:
      "Document Visibility enables senders to control the visibility of
      the documents in an envelope at the recipient level. For example, if the parties
      associated with a legal proceeding should have access to different documents,
      the Document Visibility feature enables you to keep all of the documents in
      the same envelope and set view permissions for the documents by recipient. This
      functionality is enabled for envelopes and templates. It is not available for
      PowerForms.\n\n**Note:** Before you use Document Visibility, you should be aware
      of the following information:\n\n- Document Visibility must be enabled for your
      account by your DocuSign administrator. \n- A document cannot be hidden from
      a recipient if the recipient has tabs assigned to them on the document. \n-
      When the Document Visibility setting hides a document from a recipient, the
      document also does not appear in the recipient's list of envelopes, documents,
      or page images.\n- Carbon Copy, Certified Delivery (Needs to Sign), Editor,
      and Agent recipients can always see all of the documents associated with the
      envelope or template.\n\nThe Document Visibility feature has multiple settings
      that specify the options that senders have when sending documents. For more
      information, see [Use Document Visibility to Control Recipient Access](https://support.docusign.com/s/document-item?bundleId=gbo1643332197980&topicId=eui1578456411411.html)."
  TemplateDocumentVisibility:
    type: object
    properties:
      documentVisibility:
        description:
          An array of `documentVisibility` objects that specifies which
          documents are visible to which recipients.
        type: array
        items:
          "$ref": "#/definitions/documentVisibility"
    description:
      "Document Visibility enables senders to control the visibility of
      the documents in an envelope at the recipient level. For example, if the parties
      associated with a legal proceeding should have access to different documents,
      the Document Visibility feature enables you to keep all of the documents in
      the same envelope and set view permissions for the documents by recipient. This
      functionality is enabled for envelopes and templates. It is not available for
      PowerForms.\n\n**Note:** Before you use Document Visibility, you should be aware
      of the following information:\n\n- Document Visibility must be enabled for your
      account by your DocuSign administrator. \n- A document cannot be hidden from
      a recipient if the recipient has tabs assigned to them on the document. \n-
      When the Document Visibility setting hides a document from a recipient, the
      document also does not appear in the recipient's list of envelopes, documents,
      or page images.\n- Carbon Copy, Certified Delivery (Needs to Sign), Editor,
      and Agent recipients can always see all of the documents associated with the
      envelope or template.\n\nThe Document Visibility feature has multiple settings
      that specify the options that senders have when sending documents. For more
      information, see [Use Document Visibility to Control Recipient Access](https://support.docusign.com/s/document-item?bundleId=gbo1643332197980&topicId=eui1578456411411.html)."
    x-ds-definition-name: templateDocumentVisibilityList
    x-ds-category: Templates
    x-ds-order: "180"
    x-ms-summary:
      "Document Visibility enables senders to control the visibility of
      the documents in an envelope at the recipient level. For example, if the parties
      associated with a legal proceeding should have access to different documents,
      the Document Visibility feature enables you to keep all of the documents in
      the same envelope and set view permissions for the documents by recipient. This
      functionality is enabled for envelopes and templates. It is not available for
      PowerForms.\n\n**Note:** Before you use Document Visibility, you should be aware
      of the following information:\n\n- Document Visibility must be enabled for your
      account by your DocuSign administrator. \n- A document cannot be hidden from
      a recipient if the recipient has tabs assigned to them on the document. \n-
      When the Document Visibility setting hides a document from a recipient, the
      document also does not appear in the recipient's list of envelopes, documents,
      or page images.\n- Carbon Copy, Certified Delivery (Needs to Sign), Editor,
      and Agent recipients can always see all of the documents associated with the
      envelope or template.\n\nThe Document Visibility feature has multiple settings
      that specify the options that senders have when sending documents. For more
      information, see [Use Document Visibility to Control Recipient Access](https://support.docusign.com/s/document-item?bundleId=gbo1643332197980&topicId=eui1578456411411.html)."
  AccountPasswordRules:
    type: object
    properties:
      expirePassword:
        description: When **true,** passwords expire. The default value is `false`.
        type: string
      expirePasswordDays:
        description:
          The number of days before passwords expire. To use this property,
          the `expirePassword` property must be set to **true.**
        type: string
      expirePasswordDaysMetadata:
        "$ref": "#/definitions/accountPasswordExpirePasswordDays"
        description:
          "Metadata that indicates whether the `expirePasswordDays` property
          is editable.

          "
      lockoutDurationMinutes:
        description:
          The number of minutes a user is locked out of the system after
          three failed login attempts. The default value is `2`.
        type: string
      lockoutDurationMinutesMetadata:
        "$ref": "#/definitions/accountPasswordLockoutDurationMinutes"
        description:
          "Metadata that indicates whether the `lockoutDurationMinutes`
          property is editable.

          "
      lockoutDurationType:
        description: |-
          The interval associated with the user lockout after a failed login attempt.

          Possible values are:

          - `minutes` (default)
          - `hours`
          - `days`
        type: string
      lockoutDurationTypeMetadata:
        "$ref": "#/definitions/accountPasswordLockoutDurationType"
        description:
          "Metadata that indicates whether the `lockoutDurationType` property
          is editable.

          "
      minimumPasswordAgeDays:
        description:
          The minimum number of days after a password is set before it
          can be changed. This value can be `0` or more days. The default value is
          `0`.
        type: string
      minimumPasswordAgeDaysMetadata:
        "$ref": "#/definitions/accountPasswordMinimumPasswordAgeDays"
        description:
          "Metadata that indicates whether the `minimumPasswordAgeDays`
          property is editable.

          "
      minimumPasswordLength:
        description:
          The minimum number of characters in the password. This value
          must be a number between `6` and `15`. The default value is `6`.
        type: string
      minimumPasswordLengthMetadata:
        "$ref": "#/definitions/accountMinimumPasswordLength"
        description:
          "Metadata that indicates whether the `minimumPasswordLength`
          property is editable.

          "
      passwordIncludeDigit:
        description:
          When **true,** passwords must include a digit. The default value
          is `false`.
        type: string
      passwordIncludeDigitOrSpecialCharacter:
        description: |-
          When **true,** passwords must include either a digit or a special character. The default value is `false`.

          **Note:** Passwords cannot include angle brackets (`<` `>`) or spaces.
        type: string
      passwordIncludeLowerCase:
        description:
          When **true,** passwords must include a lowercase letter. The
          default value is `false`.
        type: string
      passwordIncludeSpecialCharacter:
        description: |-
          When **true,** passwords must include a special character. The default value is `false`.

          **Note:** Passwords cannot include angle brackets (`<` `>`) or spaces.
        type: string
      passwordIncludeUpperCase:
        description:
          When **true,** passwords must include an uppercase letter. The
          default value is `false`.
        type: string
      passwordStrengthType:
        description: |-
          The type of password strength. Possible values are:

          - `basic`: The minimum password length is 6 characters with no other password requirements.
          - `medium`: The minimum password length is 7 characters. Passwords must also have one uppercase letter, one lowercase letter, and one number or special character.
          - `strong`: The minimum password length is 9 characters. Passwords must also have one uppercase letter, one lowercase letter, one number, and one special character.
          - `custom`: This option enables you to customize password requirements, including the following properties:

             - `minimumPasswordLength`
             - `minimumPasswordAgeDays`
             - `passwordIncludeDigit`
             - `passwordIncludeDigitOrSpecialCharacter`
             - `passwordIncludeLowerCase`
             - `passwordIncludeSpecialCharacter`
             - `passwordIncludeUpperCase`
             - `questionsRequired`
        type: string
      passwordStrengthTypeMetadata:
        "$ref": "#/definitions/accountPasswordStrengthType"
        description:
          "Metadata that indicates whether the `passwordStrengthType` property
          is editable.

          "
      questionsRequired:
        description:
          The number of security questions required to confirm the user’s
          identity before the user can reset their password. The default value is
          `0`.
        type: string
      questionsRequiredMetadata:
        "$ref": "#/definitions/accountPasswordQuestionsRequired"
        description:
          "Metadata that indicates whether the `questionsRequired` property
          is editable.

          "
    x-ds-definition-name: accountPasswordRules
    description: Contains details about the password rules for an account.
    x-ds-category: Accounts
    x-ds-order: "190"
    x-ms-summary: Contains details about the password rules for an account.
  AccountWatermarks:
    type: object
    properties:
      displayAngle:
        description: ""
        type: string
      enabled:
        description: ""
        type: string
      font:
        description: |
          The font to be used for the tab value. Supported fonts include:

          - Default
          - Arial
          - ArialNarrow
          - Calibri
          - CourierNew
          - Garamond
          - Georgia
          - Helvetica
          - LucidaConsole
          - MSGothic
          - MSMincho
          - OCR-A
          - Tahoma
          - TimesNewRoman
          - Trebuchet
          - Verdana
        type: string
      fontColor:
        description:
          "The font color to use for the information in the tab. Possible
          values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n-
          Gold\n- Green\n- NavyBlue\n- Purple\n- White\n"
        type: string
      fontSize:
        description: |-
          The font size used for the information in the tab. Possible values are:

          - Size7
          - Size8
          - Size9
          - Size10
          - Size11
          - Size12
          - Size14
          - Size16
          - Size18
          - Size20
          - Size22
          - Size24
          - Size26
          - Size28
          - Size36
          - Size48
          - Size72
        type: string
      id:
        description: A unique ID for the Salesforce object.
        type: string
      imageBase64:
        description: ""
        type: string
      transparency:
        description: ""
        type: string
      watermarkText:
        description: ""
        type: string
    x-ds-definition-name: watermark
    description: ""
    x-ds-category: Accounts
    x-ds-order: "200"
    x-ms-summary: ""
  PaymentGatewayAccounts:
    type: object
    properties:
      allowCustomMetadata:
        description:
          "When **true,** the sender can pass custom metadata about the
          payment to the payment gateway. You pass in this metadata on an EnvelopeRecipientTab,
          in the `customMetadata` property under `paymentDetails`. \n\nFor example,
          this property is set to **true** for the Authorize.net gateway by default.
          As a result, the extra metadata that you send displays for the Authorize.net
          transaction in the merchant gateway portal under **Description.**\n\n**Note:**
          This property is read-only and cannot be changed."
        type: boolean
      config:
        "$ref": "#/definitions/paymentGatewayAccountSetting"
        description:
          This property contains metadata about the payment gateway account's
          configuration such as the API key, `userId`, and `merchantId` details.
      displayName:
        description: |-
          A user-defined name for a connected gateway account.

          This name is used in the Admin panel in the list of connected accounts and in Tagger in the payment gateway selector.

          The human-readable version of `paymentGatewayAccountId`.
        type: string
      isEnabled:
        description: When **true,** the payment gateway account is enabled.
        type: string
      isLegacy:
        description: Reserved for DocuSign.
        type: string
      lastModified:
        description: The UTC DateTime that the payment gateway account was last updated.
        type: string
      paymentGateway:
        description: |-
          Payment gateway used by the connected gateway account.
          This is the name used by the API.
          For a human-readable version use `paymentGatewayDisplayName`.

          Possible values are:

          * `Stripe`
          * `Braintree`
          * `AuthorizeDotNet`
          * `CyberSource`
          * `Zuora`
          * `Elavon`
        type: string
      paymentGatewayAccountId:
        description:
          A GUID that identifies the payment gateway account. For a human-readable
          version use `displayName`.
        type: string
      paymentGatewayDisplayName:
        description: |-
          The display name of the payment gateway that the connected gateway account uses.
          This is the human-readable version of `paymentGateway`.

          Possible values are:

          * Stripe
          * Braintree
          * Authorize.Net
          * CyberSource
          * Zuora
          * Elavon
        type: string
      payPalLegacySettings:
        "$ref": "#/definitions/payPalLegacySettings"
        description: Reserved for DocuSign.
      supportedCurrencies:
        description:
          "A list of ISO 4217 currency codes for the currencies that the
          payment gateway account supports.\n\nExamples: \n\n- `USD`\n- `CAD`\n- `EUR`\n-
          `HKD`"
        type: array
        items:
          type: string
      supportedPaymentMethods:
        description:
          An array of paymentMethodWithOptions objects that specify the
          payment methods that are available for the gateway.
        type: array
        items:
          type: string
      supportedPaymentMethodsWithOptions:
        description:
          An array of `paymentMethodWithOptions` objects that specify the
          payment methods that are available for the gateway, as well as the payment
          options that are compatible with each payment method.
        type: array
        items:
          "$ref": "#/definitions/paymentMethodWithOptions"
      zeroDecimalCurrencies:
        description: ""
        type: array
        items:
          type: string
    description: Information about a connected payment gateway account.
    x-ds-definition-name: paymentGatewayAccount
    x-ds-category: Payments
    x-ds-order: "210"
    x-ms-summary: Information about a connected payment gateway account.
  NotaryJournals:
    type: object
    properties:
      createdDate:
        description: The creation date of the account in UTC timedate format.
        type: string
      documentName:
        description: ""
        type: string
      jurisdiction:
        "$ref": "#/definitions/jurisdiction"
        description: "The notary's jurisdiction.

          "
      notaryJournalId:
        description: ""
        type: string
      notaryJournalMetaData:
        "$ref": "#/definitions/notaryJournalMetaData"
        description:
          Additional journal data such as the witness list and signature
          image.
      signerName:
        description: |
          The in-person signer's full legal name.

          Required when `inPersonSigningType` is `inPersonSigner`.
          For eNotary flow, use `name` instead.

          Maximum Length: 100 characters.
        type: string
    x-ds-definition-name: notaryJournal
    description: ""
    x-ds-category: Envelopes
    x-ds-order: "220"
    x-ms-summary: ""
  IdentityVerifications:
    type: object
    properties:
      identityVerification:
        description:
          Specifies the ID Verification workflow applied on an envelope
          by workflow ID. <br/>See the [list](/docs/esign-rest-api/reference/accounts/identityverifications/list/)
          method in the [IdentityVerifications](/docs/esign-rest-api/reference/accounts/identityverifications/)
          resource for more information on how to retrieve workflow IDs available
          for an account. <br/>This can be used in addition to other [recipient authentication](https://support.docusign.com/s/document-item?bundleId=gav1643676262430&topicId=kzp1578456318101.html)
          methods. <br/>Note that ID Verification and ID Check are two distinct methods.
          ID Verification checks recipients' identity by verifying their ID while
          ID Check relies on data available on public records (such as current and
          former address).
        type: array
        items:
          "$ref": "#/definitions/accountIdentityVerificationWorkflow"
    x-ds-definition-name: accountIdentityVerificationResponse
    description:
      Identity Verification enables you to verify a signer's identity before
      they can access a document. The `IdentityVerifications` resource provides a
      method that enables you to list the workflows that are available to an account.
    x-ds-category: Accounts
    x-ds-order: "30"
    x-ms-summary:
      Identity Verification enables you to verify a signer's identity
      before they can access a document. The `IdentityVerifications` resource provides
      a method that enables you to list the workflows that are available to an account.
  EnvelopeDocumentHtmlDefinitions:
    type: object
    properties:
      htmlDefinitions:
        description:
          Holds the properties that define how to generate the responsive-formatted
          HTML for the document.
        type: array
        items:
          "$ref": "#/definitions/documentHtmlDefinitionOriginal"
    x-ds-definition-name: documentHtmlDefinitionOriginals
    description: ""
    x-ds-category: Envelopes
    x-ds-order: "220"
    x-ms-summary: ""
  DocumentResponsiveHtmlPreview:
    type: object
    properties:
      htmlDefinitions:
        description:
          Holds the properties that define how to generate the responsive-formatted
          HTML for the document.
        type: array
        items:
          type: string
    x-ds-definition-name: documentHtmlDefinitions
    description:
      This resource is used to create a responsive preview of a specific
      document.
    x-ds-category: Envelopes
    x-ds-order: "230"
    x-ms-summary:
      This resource is used to create a responsive preview of a specific
      document.
  EnvelopeHtmlDefinitions:
    type: object
    properties:
      htmlDefinitions:
        description:
          Holds the properties that define how to generate the responsive-formatted
          HTML for the document.
        type: array
        items:
          "$ref": "#/definitions/documentHtmlDefinitionOriginal"
    x-ds-definition-name: documentHtmlDefinitionOriginals
    description: ""
    x-ds-category: Envelopes
    x-ds-order: "240"
    x-ms-summary: ""
  ResponsiveHtmlPreview:
    type: object
    properties:
      htmlDefinitions:
        description:
          Holds the properties that define how to generate the responsive-formatted
          HTML for the document.
        type: array
        items:
          type: string
    x-ds-definition-name: documentHtmlDefinitions
    description:
      This resource is used to create a responsive preview of all of the
      documents in an envelope.
    x-ds-category: Envelopes
    x-ds-order: "250"
    x-ms-summary:
      This resource is used to create a responsive preview of all of the
      documents in an envelope.
  TemplateDocumentResponsiveHtmlPreview:
    type: object
    properties:
      htmlDefinitions:
        description:
          Holds the properties that define how to generate the responsive-formatted
          HTML for the document.
        type: array
        items:
          type: string
    x-ds-definition-name: documentHtmlDefinitions
    description:
      This resource is used to create a responsive preview of a specific
      template document.
    x-ds-category: Templates
    x-ds-order: "280"
    x-ms-summary:
      This resource is used to create a responsive preview of a specific
      template document.
  TemplateResponsiveHtmlPreview:
    type: object
    properties:
      htmlDefinitions:
        description:
          Holds the properties that define how to generate the responsive-formatted
          HTML for the document.
        type: array
        items:
          type: string
    x-ds-definition-name: documentHtmlDefinitions
    description:
      This resource is used to create a responsive preview of all of the
      documents associated with a template.
    x-ds-category: Templates
    x-ds-order: "290"
    x-ms-summary:
      This resource is used to create a responsive preview of all of the
      documents associated with a template.
  TemplateDocumentHtmlDefinitions:
    type: object
    properties:
      htmlDefinitions:
        description:
          Holds the properties that define how to generate the responsive-formatted
          HTML for the document.
        type: array
        items:
          "$ref": "#/definitions/documentHtmlDefinitionOriginal"
    x-ds-definition-name: documentHtmlDefinitionOriginals
    description: ""
    x-ds-category: Templates
    x-ds-order: "300"
    x-ms-summary: ""
  TemplateHtmlDefinitions:
    type: object
    properties:
      htmlDefinitions:
        description:
          Holds the properties that define how to generate the responsive-formatted
          HTML for the document.
        type: array
        items:
          "$ref": "#/definitions/documentHtmlDefinitionOriginal"
    x-ds-definition-name: documentHtmlDefinitionOriginals
    description: ""
    x-ds-category: Templates
    x-ds-order: "310"
    x-ms-summary: ""
  EnvelopeTransferRules:
    type: object
    properties:
      endPosition:
        description: "The last index position in the result set. "
        type: string
      envelopeTransferRules:
        description: Contains information about a specific envelope transfer rule.
        type: array
        items:
          "$ref": "#/definitions/envelopeTransferRule"
      nextUri:
        description:
          "The URI for the next chunk of records based on the search request.
          It is `null` if this is the last set of results for the search. "
        type: string
      previousUri:
        description:
          "The URI for the prior chunk of records based on the search request.
          It is `null` if this is the first set of results for the search. "
        type: string
      resultSetSize:
        description:
          The number of results in this response. Because you can filter
          which entries are included in the response, this value is always less than
          or equal to the `totalSetSize`.
        type: string
      startPosition:
        description: The starting index position of the current result set.
        type: string
      totalSetSize:
        description:
          The total number of items in the result set. This value is always
          greater than or equal to the value of `resultSetSize`.
        type: string
    x-ds-definition-name: envelopeTransferRuleInformation
    description:
      This resource provides methods that enable account administrators
      to create and manage envelope transfer rules.
    x-ds-category: Envelopes
    x-ds-order: "120"
    x-ms-summary:
      This resource provides methods that enable account administrators
      to create and manage envelope transfer rules.
  NotificationDefaults:
    type: object
    properties:
      apiEmailNotifications:
        "$ref": "#/definitions/notificationDefaultSettings"
        description:
          The default notification settings for envelopes sent by using
          the console.
      emailNotifications:
        "$ref": "#/definitions/notificationDefaultSettings"
        description:
          The default notification settings for envelopes sent by using
          the API.
    x-ds-definition-name: notificationDefaults
    description:
      The `NotificationDefaults` resource provides methods that enable
      you to manage the default notifications for envelopes.
    x-ds-category: Accounts
    x-ds-order: "120"
    x-ms-summary:
      The `NotificationDefaults` resource provides methods that enable
      you to manage the default notifications for envelopes.
  BulkSend:
    type: object
    properties:
      bulkCopies:
        description:
          An array of `bulkCopy` objects. Each object represents an instance
          or copy of an envelope and contains details such as the recipient, custom
          fields, tabs, and other information.
        type: array
        items:
          "$ref": "#/definitions/bulkSendingCopy"
      listId:
        description:
          The GUID of the bulk send list. This property is created after
          you post a new bulk send list.
        type: string
      name:
        description: The name of the bulk send list.
        type: string
    description:
      "The bulk send list resource provides methods that enable you to
      create and manage bulk sending lists, which you can use to send multiple copies
      of an envelope in a single batch. \n\n**Note:** The Bulk Send feature is only
      available on Business Pro and Enterprise Pro plans."
    x-ds-definition-name: bulkSendingList
    x-ds-category: BulkEnvelopes
    x-ds-order: "120"
    x-ms-summary:
      "The bulk send list resource provides methods that enable you to
      create and manage bulk sending lists, which you can use to send multiple copies
      of an envelope in a single batch. \n\n**Note:** The Bulk Send feature is only
      available on Business Pro and Enterprise Pro plans."
  BCCEmailArchive:
    type: object
    properties:
      bccEmailArchiveHistory:
        description: A list of changes to the BCC email archive configuration.
        type: array
        items:
          "$ref": "#/definitions/bccEmailArchiveHistory"
      endPosition:
        description: "The last index position in the result set. "
        type: string
      nextUri:
        description:
          "The URI for the next chunk of records based on the search request.
          It is `null` if this is the last set of results for the search. "
        type: string
      previousUri:
        description:
          "The URI for the prior chunk of records based on the search request.
          It is `null` if this is the first set of results for the search. "
        type: string
      resultSetSize:
        description:
          The number of results in this response. Because you can filter
          which entries are included in the response, this value is always less than
          or equal to the `totalSetSize`.
        type: string
      startPosition:
        description: The starting index position of the current result set.
        type: string
      totalSetSize:
        description:
          The total number of items in the result set. This value is always
          greater than or equal to the value of `resultSetSize`.
        type: string
    x-ds-definition-name: bccEmailArchiveHistoryList
    description:
      "The `EmailArchive` resource provides methods for managing your email
      archive configuration, which consists of the BCC email address or addresses
      that you want to use to archive DocuSign emails. Each account can use up to
      five BCC email addresses for archiving purposes.

      "
    x-ds-category: EmailArchive
    x-ds-order: "120"
    x-ms-summary:
      "The `EmailArchive` resource provides methods for managing your
      email archive configuration, which consists of the BCC email address or addresses
      that you want to use to archive DocuSign emails. Each account can use up to
      five BCC email addresses for archiving purposes.

      "
  TabsBlob:
    type: object
    properties:
      allowTabOrder:
        description: |-
          When **true,** account users can set a tab order for the signing process.

          **Note:** Only Admin users can change this setting.
        type: string
      allowTabOrderMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `allowTabOrder` property
          is editable.

          "
      approveDeclineTabsEnabled:
        description: When **true,** approve and decline tabs are enabled.
        type: string
      approveDeclineTabsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `approveDeclineTabs` property
          is editable.

          "
      calculatedFieldsEnabled:
        description:
          When **true,** [calculated fields](https://support.docusign.com/s/document-item?bundleId=gbo1643332197980&topicId=crs1578456361259.html)
          are enabled for tabs.
        type: string
      calculatedFieldsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `calculatedFields` property
          is editable.

          "
      checkboxTabsEnabled:
        description: When **true,** checkbox tabs are enabled.
        type: string
      checkBoxTabsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          Metadata that indicates whether the `checkBoxTabs` property is
          editable.
      dataFieldRegexEnabled:
        description:
          When **true,** regular expressions are enabled for tabs that
          contain data fields.
        type: string
      dataFieldRegexMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `dataFieldRegex` property
          is editable.

          "
      dataFieldSizeEnabled:
        description: When **true,** setting character limits for input fields is enabled.
        type: string
      dataFieldSizeMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `dataFieldSize` property
          is editable.

          "
      drawTabsEnabled:
        description: ""
        type: string
      drawTabsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      firstLastEmailTabsEnabled:
        description: Reserved for DocuSign.
        type: string
      firstLastEmailTabsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: Reserved for DocuSign.
      listTabsEnabled:
        description: When **true,** list tabs are enabled.
        type: string
      listTabsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `listTabs` property is editable.

          "
      noteTabsEnabled:
        description: When **true,** note tabs are enabled.
        type: string
      noteTabsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `noteTabs` property is editable.

          "
      numericalTabsEnabled:
        description: ""
        type: string
      numericalTabsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      prefillTabsEnabled:
        description: ""
        type: string
      prefillTabsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: ""
      radioTabsEnabled:
        description: When **true,** radio button tabs are enabled.
        type: string
      radioTabsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `radioTabs` property is
          editable.

          "
      savingCustomTabsEnabled:
        description: When **true,** saving custom tabs is enabled.
        type: string
      savingCustomTabsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `savingCustomTabs` property
          is editable.

          "
      senderToChangeTabAssignmentsEnabled:
        description: Reserved for DocuSign.
        type: string
      senderToChangeTabAssignmentsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: Reserved for DocuSign.
      sharedCustomTabsEnabled:
        description: When **true,** shared custom tabs are enabled.
        type: string
      sharedCustomTabsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `sharedCustomTabs` property
          is editable.

          "
      tabDataLabelEnabled:
        description: |
          When **true,** [data
          labels](https://support.docusign.com/en/videos/Data-Labels) are enabled.

          **Note:** Only Admin users can change this setting.
        type: string
      tabDataLabelMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `tabDataLabel` property
          is editable.

          "
      tabLocationEnabled:
        description: Reserved for DocuSign.
        type: string
      tabLocationMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: Reserved for DocuSign.
      tabLockingEnabled:
        description: |
          When **true,** tab locking is enabled.

          **Note:** Only Admin users can change this setting.
        type: string
      tabLockingMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `tabLocking` property is
          editable.

          "
      tabScaleEnabled:
        description: Reserved for DocuSign.
        type: string
      tabScaleMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description: Reserved for DocuSign.
      tabTextFormattingEnabled:
        description: |
          When **true,** text formatting (such as font type, font size,
          font color, bold, italic, and underline) is enabled for tabs that
          support formatting.

          **Note:** Only Admin users can change this setting.
        type: string
      tabTextFormattingMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `tabTextFormatting` property
          is editable.

          "
      textTabsEnabled:
        description: When **true,** text tabs are enabled.
        type: string
      textTabsMetadata:
        "$ref": "#/definitions/settingsMetadata"
        description:
          "Metadata that indicates whether the `textTabs` property is editable.

          "
    x-ds-definition-name: tabAccountSettings
    description: Reserved for DocuSign.
    x-ds-category: Envelopes
    x-ds-order: "120"
    x-ms-summary: Reserved for DocuSign.
  Comments:
    type: object
    properties:
      envelopeId:
        description: The envelope ID of the envelope status that failed to post.
        type: string
      hmac:
        description: Reserved for DocuSign.
        type: string
      id:
        description: A unique ID for the Salesforce object.
        type: string
      mentions:
        description:
          An array of userIds that are mentioned directly in the body of
          a comment.
        type: array
        items:
          type: string
      read:
        description:
          Indicates if the comment has been read by the target recipient
          of the comment.
        type: boolean
      sentByEmail:
        description: ""
        type: string
      sentByFullName:
        description: ""
        type: string
      sentByImageId:
        description: Reserved for DocuSign.
        type: string
      sentByInitials:
        description: ""
        type: string
      sentByRecipientId:
        description: ""
        type: string
      sentByUserId:
        description: ""
        type: string
      signingGroupId:
        description:
          "The ID of the [signing group](https://support.docusign.com/s/document-item?bundleId=gav1643676262430&topicId=zgn1578456447934.html).

          "
        type: string
      signingGroupName:
        description:
          "Optional. The name of the signing group. \n\nMaximum Length:
          100 characters. "
        type: string
      subject:
        description: ""
        type: string
      tabId:
        description: The unique identifier for the tab.
        type: string
      text:
        description: "Specifies the text that is shown in the dropdown list. "
        type: string
      threadId:
        description: The unique identifier for the comment thread.
        type: string
      threadOriginatorId:
        description: The userId of the user who created the thread.
        type: string
      timestamp:
        description: ""
        type: string
      timeStampFormatted:
        description: ""
        type: string
      visibleTo:
        description: ""
        type: array
        items:
          type: string
    x-ds-definition-name: comment
    description: Details about envelope comments.
    x-ds-category: Envelopes
    x-ds-order: "160"
    x-ms-summary: Details about envelope comments.
  FavoriteTemplates:
    type: object
    properties:
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      favoriteTemplates:
        description: ""
        type: array
        items:
          "$ref": "#/definitions/favoriteTemplatesContentItem"
      templatesUpdatedCount:
        format: int32
        description:
          The number of templates successfully updated by the call. This
          property is read-only.
        type: integer
    x-ds-definition-name: favoriteTemplatesInfo
    description: ""
    x-ds-category: Accounts
    x-ds-order: "270"
    x-ms-summary: ""
  Notary:
    type: object
    properties:
      createdDate:
        description: The creation date of the account in UTC timedate format.
        type: string
      enabled:
        description: ""
        type: string
      searchable:
        description: ""
        type: string
      userInfo:
        "$ref": "#/definitions/userInformation"
        description: Information about the user registering to be a notary.
    x-ds-definition-name: notary
    description: |
      Use DocuSign eNotary to notarize documents digitally.
      Check the [DocuSign eNotary support documentation](https://support.docusign.com/s/document-item?bundleId=gko1642535666104&topicId=jiv1635359045452.html)
      to see which jurisdictions are supported.
    x-ds-category: Notary
    x-ds-order: "280"
    x-ms-summary: |
      Use DocuSign eNotary to notarize documents digitally.
      Check the [DocuSign eNotary support documentation](https://support.docusign.com/s/document-item?bundleId=gko1642535666104&topicId=jiv1635359045452.html)
      to see which jurisdictions are supported.
  NotaryJurisdiction:
    type: object
    properties:
      commissionExpiration:
        description: ""
        type: string
      commissionId:
        description: ""
        type: string
      county:
        description: ""
        type: string
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      jurisdiction:
        "$ref": "#/definitions/jurisdiction"
        description: |-
          Description of the jurisdiction for this notary.
          This is a read-only property.
      registeredName:
        description: ""
        type: string
      sealType:
        description: ""
        type: string
    description: Creating, updating, and deleting notary jurisdiction objects.
    x-ds-definition-name: notaryJurisdiction
    x-ds-category: Notary
    x-ds-order: "290"
    x-ms-summary: Creating, updating, and deleting notary jurisdiction objects.
  EnvelopeWorkflowDefinition:
    type: object
    properties:
      currentWorkflowStepId:
        description: ""
        type: string
      resumeDate:
        description: ""
        type: string
      scheduledSending:
        "$ref": "#/definitions/scheduledSending"
        description: An object that describes the settings for scheduled sending.
      workflowStatus:
        description: ""
        type: string
      workflowSteps:
        description: ""
        type: array
        items:
          "$ref": "#/definitions/workflowStep"
    description: Describes the workflow for an envelope or template.
    x-ds-definition-name: workflow
    x-ds-category: Envelopes
    x-ds-order: "300"
    x-ms-summary: Describes the workflow for an envelope or template.
  AccountSignatures:
    type: object
    properties:
      adoptedDateTime:
        description: The UTC date and time when the user adopted the signature.
        type: string
      createdDateTime:
        description: The UTC DateTime when the item was created.
        type: string
      customField:
        description: ""
        type: string
      dateStampProperties:
        "$ref": "#/definitions/dateStampProperties"
        description: |-
          Specifies the area in which a date stamp is placed. This parameter uses pixel positioning to draw a rectangle at the center of the stamp area. The stamp is superimposed on top of this central area.

          This property contains the following information about the central rectangle:

          - `DateAreaX`: The X axis position of the top-left corner.
          - `DateAreaY`: The Y axis position of the top-left corner.
          - `DateAreaWidth`: The width of the rectangle.
          - `DateAreaHeight`: The height of the rectangle.
      disallowUserResizeStamp:
        description: When **true,** users may not resize the stamp.
        type: string
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
      externalID:
        description: Optionally specify an external identifier for the user's signature.
        type: string
      imageBase64:
        description: ""
        type: string
      imageType:
        description: |-
          Specificies the type of image. Valid values:

          - `stamp_image`
          - `signature_image`
          - `initials_image`
        type: string
      initials150ImageId:
        description: The ID of the user's initials image.
        type: string
      initialsImageUri:
        description: The URI for retrieving the image of the user's initials.
        type: string
      isDefault:
        description:
          Boolean that specifies whether the signature is the default signature
          for the user.
        type: string
      lastModifiedDateTime:
        description: The date and time that the item was last modified.
        type: string
      nrdsId:
        description:
          The National Association of Realtors (NAR) membership ID for
          a user who is a realtor.
        type: string
      nrdsLastName:
        description: The realtor's last name.
        type: string
      nrdsStatus:
        description: |-
          The realtor's NAR membership status. The value `active` verifies that the user is a current NAR member. Valid values are:

          - `Active`
          - `Inactive`
          - `Terminate`
          - `Provisional`
          - `Deceased`
          - `Suspend`
          - `Unknown`
        type: string
      phoneticName:
        description: The phonetic spelling of the `signatureName`.
        type: string
      signature150ImageId:
        description: The ID of the user's signature image.
        type: string
      signatureFont:
        description: |
          The font type to use for the signature if the signature is not drawn. The following font styles  are supported. The quotes are to indicate that these values are strings, not `enums`.

          - `"1_DocuSign"`
          - `"2_DocuSign"`
          - `"3_DocuSign"`
          - `"4_DocuSign"`
          - `"5_DocuSign"`
          - `"6_DocuSign"`
          - `"7_DocuSign"`
          - `"8_DocuSign"`
          - `"Mistral"`
          - `"Rage Italic"`
        type: string
      signatureGroups:
        description: ""
        type: array
        items:
          "$ref": "#/definitions/signatureGroup"
      signatureId:
        description:
          Specifies the signature ID associated with the signature name.
          You can use the signature ID in the URI in place of the signature name,
          and the value stored in the `signatureName` property in the body is used.
          This allows the use of special characters (such as "&", "<", ">") in a the
          signature name. Note that with each update to signatures, the returned signature
          ID might change, so the caller will need to trigger off the signature name
          to get the new signature ID.
        type: string
      signatureImageUri:
        description:
          An endpoint URI that you can use to retrieve the user's signature
          image.
        type: string
      signatureInitials:
        description: Specifies the user's signature in initials format.
        type: string
      signatureName:
        description: Specifies the user's signature name.
        type: string
      signatureRights:
        description: |-
          The rights that the user has to the signature. Valid values are:

          - `none`
          - `read`
          - `admin`
        type: string
      signatureType:
        description: Specifies the type of signature.
        type: string
      signatureUsers:
        description: ""
        type: array
        items:
          "$ref": "#/definitions/signatureUser"
      stampFormat:
        description:
          "The format of a stamp. Valid values are:\n\n- `NameHanko`: The
          stamp represents only the signer's name.\n- `NameDateHanko`: The stamp represents
          the signer's name and the date. "
        type: string
      stampImageUri:
        description: The URI for retrieving the image of the user's stamp.
        type: string
      stampSizeMM:
        description:
          The physical height of the stamp image (in millimeters) that
          the stamp vendor recommends for displaying the image in PDF documents.
        type: string
      stampType:
        description: |-
          The type of stamp. Valid values are:

          - `signature`: A signature image. This is the default value.
          - `stamp`: A stamp image.
          - null
        type: string
      status:
        description:
          "Indicates the envelope status. Valid values are:\n\n* sent -
          The envelope is sent to the recipients. \n* created - The envelope is saved
          as a draft and can be modified and sent later."
        type: string
    x-ds-definition-name: accountSignature
    description: AccountSignatures represent stamps used to sign documents.
    x-ds-category: Accounts
    x-ds-order: "40"
    x-ms-summary: AccountSignatures represent stamps used to sign documents.
  ConnectSecret:
    type: object
    properties:
      failures:
        description: A list of Connect failure logs.
        type: array
        items:
          "$ref": "#/definitions/connectLog"
      logs:
        description: A list of Connect general logs.
        type: array
        items:
          "$ref": "#/definitions/connectLog"
      totalRecords:
        description: The count of records in the log list.
        type: string
      type:
        description: |
          The type of this tab. Values are:

          - `Approve`
          - `CheckBox`
          - `Company`
          - `Date`
          - `DateSigned`
          - `Decline`
          - `Email`
          - `EmailAddress`
          - `EnvelopeId`
          - `FirstName`
          - `Formula`
          - `FullName`
          - `InitialHere`
          - `InitialHereOptional`
          - `LastName`
          - `List`
          - `Note`
          - `Number`
          - `Radio`
          - `SignerAttachment`
          - `SignHere`
          - `SignHereOptional`
          - `Ssn`
          - `Text`
          - `Title`
          - `Zip5`
          - `Zip5Dash4`
        type: string
    x-ds-definition-name: connectLogs
    description: ""
    x-ds-category: Connect
    x-ds-order: "50"
    x-ms-summary: ""
  DocumentResponsiveHtml:
    type: object
    properties:
      htmlDefinitions:
        description:
          Holds the properties that define how to generate the responsive-formatted
          HTML for the document.
        type: array
        items:
          "$ref": "#/definitions/documentHtmlDefinitionOriginal"
    x-ds-definition-name: documentHtmlDefinitionOriginals
    description: ""
    x-ds-category: Envelopes
    x-ds-order: "100"
    x-ms-summary: ""
  ResponsiveHtml:
    type: object
    properties:
      htmlDefinitions:
        description:
          Holds the properties that define how to generate the responsive-formatted
          HTML for the document.
        type: array
        items:
          "$ref": "#/definitions/documentHtmlDefinitionOriginal"
    x-ds-definition-name: documentHtmlDefinitionOriginals
    description: ""
    x-ds-category: Envelopes
    x-ds-order: "100"
    x-ms-summary: ""
  ReservedDomains:
    x-ds-category: Accounts
    x-ms-summary: ""
    description: ""
  EnvelopePublish:
    type: object
    properties:
      applyConnectSettings:
        description: ""
        type: string
      envelopeCount:
        description: ""
        type: string
      envelopeLevelErrorRollups:
        description: ""
        type: array
        items:
          "$ref": "#/definitions/envelopePublishTransactionErrorRollup"
      envelopePublishTransactionId:
        description: ""
        type: string
      errorCount:
        description: ""
        type: string
      fileLevelErrors:
        description: ""
        type: array
        items:
          type: string
      noActionRequiredEnvelopeCount:
        description: ""
        type: string
      processedEnvelopeCount:
        description: ""
        type: string
      processingStatus:
        description: ""
        type: string
      resultsUri:
        description: ""
        type: string
      submissionDate:
        description: ""
        type: string
      submittedByUserInfo:
        "$ref": "#/definitions/userInfo"
        description: ""
      submittedForPublishingEnvelopeCount:
        description: ""
        type: string
    x-ds-definition-name: envelopePublishTransaction
    description:
      "The EnvelopePublish resource allows you to submit existing envelopes
      to any webhook.

      "
    x-ds-category: Envelopes
    x-ds-order: "100"
    x-ms-summary:
      "The EnvelopePublish resource allows you to submit existing envelopes
      to any webhook.

      "
  DocumentGeneration:
    type: object
    properties:
      docGenFormFields:
        description: ""
        type: array
        items:
          "$ref": "#/definitions/docGenFormFields"
      errorDetails:
        "$ref": "#/definitions/errorDetails"
        description:
          This object describes errors that occur. It is only valid for
          responses and ignored in requests.
    x-ds-definition-name: docGenFormFieldResponse
    description: |-
      Document Generation for eSignature allows you to
      dynamically generate
      documents from a Word template to send for
      signature within the eSignature sending workflow.
    x-ds-category: Envelopes
    x-ds-order: "100"
    x-ms-summary: |-
      Document Generation for eSignature allows you to
      dynamically generate
      documents from a Word template to send for
      signature within the eSignature sending workflow.
  Authorizations:
    type: object
    properties:
      agentUser:
        "$ref": "#/definitions/authorizationUser"
        description: ""
      authorizationId:
        description: ""
        type: string
      created:
        description: The UTC DateTime when the workspace user authorization was created.
        type: string
      createdBy:
        description: ""
        type: string
      endDate:
        description: ""
        type: string
      modified:
        description: ""
        type: string
      modifiedBy:
        description:
          The user ID (GUID) of the user who last modified this user record.
          This property is read-only.
        type: string
      permission:
        description: ""
        type: string
      principalUser:
        "$ref": "#/definitions/authorizationUser"
        description: ""
      startDate:
        description: ""
        type: string
    x-ds-definition-name: userAuthorization
    description: Authorizations allow you to share access between users on an account.
    x-ds-category: Accounts
    x-ds-order: "100"
    x-ms-summary: Authorizations allow you to share access between users on an account.
parameters: {}
responses: {}
securityDefinitions: {}
x-ds-allow-editing: false
tags:
  - name: AccountBrands
    description:
      "The AcccountBrands resource provides methods that enable you to create
      and manage brands for an account.\n\nBranding enables you to add the look and
      feel of your organization's brand to the sending, signing, and email processes,
      making it easier for recipients to identify envelopes coming from your organization.\n\nThe
      DocuSign Account Custom Branding feature enables you to set the colors, logo,
      and text that recipients see at the account level. The settings associated with
      a brand are applied to all of the envelopes that use the brand. You can create
      multiple brand profiles for different corporate brands or internal departments.\n\n**Note:**
      To use this resource, branding for either signing or sending must be enabled for
      the account (either `canSelfBrandSend`, `canSelfBrandSign`, or both of these account
      settings must be set to **true**). "
  - name: AccountConsumerDisclosures
    description:
      "The `AccountConsumerDisclosures` resource provides methods that enable
      you to enable, retrieve, and manage the Electronic Record and Signature Consent
      Disclosure (ERSD) options for your account. This is the disclosure that displays
      to each new recipient who is going to sign or add other information, or who is
      required to view the documents you send to them. The recipient must read and agree
      to the terms of the disclosure before they can access and take action on the documents
      you send. The ERSD does not apply to copy-only recipients, but does apply to recipients
      who must sign or view your documents.\n\nYou can use either the default ERSD that
      DocuSign provides for U.S.-based transactions, or a custom ERSD. \n\n## Languages\n\n**Important:**
      The system does not translate the ERSD for you. The default ERSD is always in
      English. For a custom ERSD, an account administrator must create a version of
      the disclosure for each language that your signers use. When you create a version
      of your custom ERSD for a specific signer language, you must:\n\n1. Specify the
      language code (`langCode`) for the signer language.\n2. Provide the `esignAgreementText`
      and `esignText` in the language associated with the `langCode`.\n\nFor more information,
      see [Legal Disclosure](https://support.docusign.com/s/document-item?bundleId=pik1583277475390&topicId=aqg1583277336549.html)."
  - name: AccountCustomFields
    description:
      "Custom fields enable you to record custom information about envelopes
      that you can then use for sorting, organizing, searching, and other downstream
      processes. \n\nFor example, you can use custom fields to copy envelopes or data
      to multiple areas in Salesforce. eOriginal customers can eVault all of their documents
      from the web app by setting an account custom field with a name like `eVault with
      eOriginal` to **true.**\n\nYou can also use account custom fields to set the following
      information:\n\n- Tracking ID\n- Department \n- Use case\n- Other envelope metadata\n\n##
      Envelope Custom Field Visibility\n\nWhen you create an envelope custom field for
      your account, you have the following options: \n\n- Make it a required field for
      senders at the time of sending\n- Display it as an optional field at the time
      of sending\n- Set a specific value for the field behind the scenes (NOT SURE IF
      THIS IS RIGHT; MIGHT JUST BE AN UNUSED DRAFT FIELD)\n\nEnvelope recipients do
      not see the envelope custom fields.\n\n## Types of Envelope Custom Fields\n\nThere
      are two types of envelope custom fields:\n\n- `text`: Enables the sender to enter
      the value for the field. \n- `list`: Enables the sender to select the value of
      the field from a predetermined list."
  - name: EnvelopeCustomFields
    description: |+
      The EnvelopeCustomFields resource provides methods that allow you manage custom fields in an envelope.

      Custom fields can be used in the envelopes for your account to record information about the envelope, help search for envelopes and track information. The envelope custom fields are shown in the Envelope Settings section when a user is creating an envelope in the DocuSign member console. The envelope custom fields are not seen by the envelope recipients.

      There are two types of envelope custom fields:

      - `text`: Enables the sender to enter the value for the field.
      - `list`: Enables the sender to select the value of the field from a predetermined list.

  - name: EnvelopeDocumentFields
    description: |+
      The EnvelopeDocumentFields resource provides methods that allow you to manage custom fields on a document.

      Custom fields are name-value pairs that are returned by the API but otherwise not used by DocuSign. They are not seen by the envelope recipients.





  - name: EnvelopeLocks
    description: |+
      Envelope locks allow you to manage locks on an envelope.

      To prevent users from changing an envelope while another user is
      modifying it, you can lock the envelope and set the time until
      the lock expires.

      To use envelope locks, the user must have envelope locking capability enabled.

      ### Related topics

      - [Common API Tasks: Locking and unlocking envelopes](https://www.docusign.com/blog/dsdev-common-api-tasks-locking-and-unlocking-envelopes)

  - name: EnvelopeRecipients
    description: |
      The EnvelopeRecipients resource enables you manage the recipients of an envelope.
      All recipient types share a set of [core parameters](#core-recipient-parameters),
      but some recipient types have additional parameters.
      You specify the recipient type using the `recipientType` parameter. The recipient types are as follows:

      <br>

      | Recipient type                                      | Description                                                                                                                                                                                                                                                                                                                                                                                                                                |
      | :-------------------------------------------------- | :----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
      | [Agent](#agent-recipient)                           | Agent recipients can add name and email information for recipients that appear after the agent in routing order.                                                                                                                                                                                                                                                                                                                           |
      | [Carbon Copy](#carbon-copy-recipient)               | Carbon copy recipients get a copy of the envelope but don't need to sign, initial, date, or add information to any of the documents. This type of recipient can be used in any routing order. Carbon copy recipients receive their copy of the envelope when the envelope reaches the recipient's order in the process flow and when the envelope is completed.                                                                            |
      | [Certified Delivery](#certified-delivery-recipient) | Certified delivery recipients must receive the completed documents for the envelope to be completed. However, they don't need to sign, initial, date, or add information to any of the documents.                                                                                                                                                                                                                                          |
      | [Editor](#editor-recipient)                         | Editors have the same management and access rights for the envelope as the sender. They can make changes to the envelope as if they were using the Advanced Correct feature. This recipient can add name and email information, add or change the routing order, set authentication options, and can edit signature/initial tabs and data fields for the remaining recipients. The recipient must have a DocuSign account to be an editor. |
      | [In-Person Signer](#in-person-signer-recipient)     | In-person signer recipients are DocuSign users who act as signing hosts in the same physical location as the signer.                                                                                                                                                                                                                                                                                                                       |
      | [Intermediary](#intermediary-recipient)             | Intermediaries are recipients who can, but are not required to, add name and email information for recipients at the same or subsequent level in the routing order, unless subsequent agents, editors, or intermediaries are added.                                                                                                                                                                                                        |
      | [Seal](#seal-recipient)                             | Electronic seal recipients represent legal entities rather than individuals. Organizations and governments can use electronic seals to show evidence of origin and integrity of documents.                                                                                                                                                                                                                                                 |
      | [Signer](#signer-recipient)                         | Signers are recipients who must sign, initial, date, or add data to form fields on the documents in the envelope.                                                                                                                                                                                                                                                                                                                          |
      | [Witness](#witness-recipient)                       | Witnesses are recipients whose signatures affirm that the identified signers have signed the documents in the envelope.                                                                                                                                                                                                                                                                                                                    |

      <br>

      Not all recipients are are available to all account types.
      Review your account plan to determine which recipient types are available to you.
      All recipient types are available in the development environment.


      ## Core Recipient Parameters

      All recipients, regardless of type, have the same common core parameters.
      The following table contains the descriptions for the core properties for all recipient types:

      <br>

      | Name                                     | Required | Schema Type                                                           | Description|
      | :--------------------------------------- | :------- | :-------------------------------------------------------------------- ||
      | email                                    | Yes      | Email                                                                 | Email of the recipient. Notification will be sent to this email id.<br/>Maximum Length: 100 characters|
      | name                                     | Yes      | String                                                                | Full legal name of the recipient.<br/>Maximum Length: 100 characters.<br/><br/>**Note:** If you are creating an envelope with DocuSign EU advanced signature enabled, ensure that recipient names do not contain any of the following characters|
      | accessCode                               | No       | String                                                                | This optional element specifies the access code a recipient has to enter to validate the identity.<br/>Maximum Length: 50 characters|
      | addAccessCodeToEmail                     | No       | Boolean                                                               | This optional attribute indicates that the access code is added to the email sent to the recipient; this nullifies the Security measure of Access Code on the recipient|
      | agentCanEditEmail                        | No       | Boolean                                                               | When **true,** the agent recipient associated with this recipient can change the recipient's pre-populated email address. This element is only active if enabled for the account|
      | agentCanEditName                         | No       | Boolean                                                               | When **true,** the agent recipient associated with this recipient can change the recipient's pre-populated name (`UserName`). This element is only active if enabled for the account|
      | clientUserId                             | No       | String                                                                | This specifies whether the recipient is embedded or remote.<br/><br/>If the `clientUserId` property is not null then the recipient is embedded. Note that if the `ClientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  **true,** an error is generated on sending. Maximum length: 100 characters.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              |
      | embeddedRecipientStartURL                | No       | String                                                                | This is a sender provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would, but when the document link in the email is clicked the recipient is redirected, through DocuSign, to this URL to complete their actions. When routing to the URL, it is up to the sender's system (the server responding to the URL) to then request a recipient token to launch a signing session.<br/><br/>If the value `SIGN_AT_DOCUSIGN` is used for this node, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation that would be launched by any partner.<br/><br/>It is important to remember that in a typical embedded workflow the authentication of an embedded recipient is the responsibility of the sending application and DocuSign expects that senders will follow their own process for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process in initiated. However, when the sending application sets  the `EmbeddedRecipientStartURL` property to `SIGN_AT_DOCUSIGN`, the recipient goes directly to the embedded signing or viewing process bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) be used to verify the identity of the recipient.<br/><br>If the `clientUserId` property is NOT set and the `embeddedRecipientStartURL` property is set, DocuSign ignores the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the `embeddedRecipientStartURL` property using merge fields. The available merge fields items are: envelopeId, recipientId, recipientName, recipientEmail, and customFields. The customFields must be part of the recipient or envelope. The merge fields are enclosed in double brackets.<br/><br/>_Example_:<br/>`http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]`|
      | customFields                             | No       | customField                                                           | An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. String `customField` properties have a maximum length of 100 characters|
      | emailNotification                        | No       | emailNotification                                                     | An optional property that has information for setting the language for the recipient's email information. It is composed of three elements:<br/><br/>*emailBody*: a string with the email message sent to the recipient.<br/>Maximum Length: 10000 characters.<br/><br/>*emailSubject*: a string with the subject of the email sent to the recipient.<br/>Maximum Length: 100 characters.<br/><br/>*supportedLanguage*: The simple type enumeration (two-letter code) for the language to use for the standard email format and the signing view for the recipient. To retrieve the possible values, use the [Accounts::listSupportedLanguages method][ListLang].<br/><br/>**Note:** You can set the `emailNotification` property separately for each recipient. If you set the value only for certain recipients, the other recipients will inherit the this value from the top-level `emailSubject` and `emailBlurb`|
      | excludedDocuments                        | No       | Array of Strings                                                      | Specifies the documents that are not visible to this recipient. Document Visibility must be enabled for the account and the enforceSignerVisibility property must be set to true for the envelope to use this.<br/><br/>When the enforceSignerVisibility property is set to **true,** documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent|
      | idCheckConfigurationName                 | No       | String                                                                | Specifies authentication check by name. The names used here must be the same as the authentication type names used by the account (these name can also be found in the web console sending interface in the Identify list for a recipient). This overrides any default authentication setting.<br/><br/>_Example_:<br/> Your account has ID Check and SMS Authentication available and in the web console Identify list these appear as 'ID Check $' and 'SMS Auth $'. To use ID check in an envelope, the `idCheckConfigurationName` property must be  set to `ID Check $`. To use SMS, it must be set to `SMS Auth $` and you must add phone number information to the `smsAuthentication` node|
      | iDCheckInformationInput                  | No       | IdCheckInformationInput                                               | This complex element contains input information related to a recipient ID check. It can include the following information.<br/><br/>*addressInformationInput*: Used to set recipient address information and consists of:<br/><br/>*addressInformation*: consists of six elements, with street2 and zipPlus4 being optional. The elements are: street1, street2, city, state, zip, zipPlus4\. The maximum number of characters in each element are: street1/street2 = 150 characters, city = 50 characters, state = 2 characters, and zip/zipPlus4 = 20 characters.<br/><br/>displayLevelCode: Specifies the display level for the recipient. Values are: ReadOnly, Editable, or DoNotDisplay.<br/><br/>*receiveInResponse*: A Boolean element that specifies if the information needs to be returned in the response.<br/><br/>*dobInformationInput*: Used to set recipient date of birth information and consists of:<br/><br/>*dateOfBirth*: Specifies the recipient's date, month and year of birth.<br/><br/>*displayLevelCode*: Specifies the display level for the recipient. Values are: ReadOnly, Editable, or DoNotDisplay.<br/><br/>*receiveInResponse*: A Boolean element that specifies if the information needs to be returned in the response.<br/><br/>*ssn4InformationInput*: Used to set the last four digits of the recipient's SSN information and consists of:<br/><br/>*ssn4*: Specifies the last four digits of the recipient's SSN.<br/><br/>*displayLevelCode*: Specifies the display level for the recipient. Values are: ReadOnly, Editable, or DoNotDisplay.<br/><br/>*receiveInResponse*: A Boolean element that specifies if the information needs to be returned in the response.<br/><br/>*ssn9InformationInput*: Used to set the recipient's SSN information. Note that the ssn9 information can never be returned in the response. The ssn9 input consists of:<br/><br/><br/><br/>*ssn9*: Specifies the recipient's SSN.<br/><br/>*displayLevelCode*: Specifies the display level for the recipient. Values are: ReadOnly, Editable, or DoNotDisplay.                                                                                                                                                                                                                                                                                                                                                                                                                                            |
      | inheritEmailNotificationConfiguration    | No       | Boolean                                                               | Optional element. If true and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account|
      | note                                     | No       | String                                                                | A note that is unique to this recipient. This note is sent to the recipient via the signing email. The note displays in the signing UI near the upper left corner of the document on the signing screen.<br/>Maximum Length: 1000 characters|
      | phoneAuthentication                      | No       | RecipientPhoneAuthentication                                          | Optional element. Contains the elements: <br/><br/> *recipMayProvideNumber*:Boolean. When **true** thenrecipient can use whatever phone number they choose to.<br/><br/> *senderProvidedNumbers*: ArrayOfString. A list of phone numbers the recipient can use. <br/>
      | recipientId                              | No       | String<br/><br/>The string must be formatted as an integer or a GUID. | Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document|
      | requireIdLookup                          | No       | Boolean                                                               | When **true,** the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 |
      | roleName                                 | No*      | String                                                                | Optional element. Specifies the role name associated with the recipient.<br/><br/>This is required when working with template recipients|
      | routingOrder                             | Yes      | String                                                                | This element specifies the routing order of the recipient in the envelope|
      | smsAuthentication                        | No       | senderProvidedNumbers                                                 | Optional. Contains the element:<br/><br/>*senderProvidedNumbers*: Array that contains a list of phone numbers the recipient can use for SMS text authentication|
      | templateAccessCodeRequired               | No       | Boolean                                                               | Optional. Used only when working with template recipients. When **true** and the `TemplateLocked` parameter is set to **true,** the sender must enter an access code|
      | templateLocked                           | No       | Boolean                                                               | Optional. Used only when working with template recipients. When **true,** the sender cannot change any attributes of the recipient|
      | templateRequired                         | No       | Boolean                                                               | Optional. Used only when working with template recipients. When **true,**  the sender may not remove the recipient|
      | identityVerification <a name="toto"></a> | No       | identityVerification                                                  | Optional. Specifies ID Verification applied on an envelope by workflow ID. <br/>See the [list](/docs/esign-rest-api/reference/accounts/identityverifications/list/) method in the [IdentityVerifications](/docs/esign-rest-api/reference/accounts/identityverifications/) resource for more information on how to retrieve workflow IDs available for an account. <br/>This can be used in addition to other [recipient authentication](/docs/esign-rest-api/esign101/concepts/recipients/auth/) methods. <br/>Note that ID Verification and ID Check are two distinct methods. ID Verification checks recipients' identity by verifying their ID while ID Check relies on data available on public records (such as current and former address|

      <br>



      ## Agent Recipient

      An agent recipient can add name and email information for recipients that appear after the agent in routing order.

      In addition to the [core parameters](#core-recipient-parameters), this recipient type has the following parameters:

      <br>

      | Name               | Required | Schema Type        | Description                                                                  |
      | :----------------- | :------- | :----------------- | :--------------------------------------------------------------------------- |
      | documentVisibility | No       | documentVisibility | A complex type that specifies which documents are visible to this recipient. |

      <br>



      ## Carbon Copy Recipient

      Carbon copy recipients receive a copy of the envelope but don't need to sign, initial,
      date or add information to any of the documents. You can place this type of recipient in any routing order.
      Carbon copy recipients receive their copy of the envelope when the envelope
      reaches the recipient's order in the process flow and when the envelope is completed.

      In addition to the [core parameters](#core-recipient-parameters), this recipient type has the following parameters:

      <br>

      | Name               | Required | Schema Type        | Description                                                                  |
      | :----------------- | :------- | :----------------- | :--------------------------------------------------------------------------- |
      | documentVisibility | No       | documentVisibility | A complex type that specifies which documents are visible to this recipient. |

      <br>



      ## Certified Delivery Recipient

      Certified delivery recipients must receive the completed documents for the envelope to be completed. However, they don't need to sign, initial, date or add information to any of the documents.

      In addition to the [core parameters](#core-recipient-parameters), this recipient type has the following parameters:

      <br>

      | Name               | Required | Schema Type        | Description                                                                  |
      | :----------------- | :------- | :----------------- | :--------------------------------------------------------------------------- |
      | documentVisibility | No       | documentVisibility | A complex type that specifies which documents are visible to this recipient. |

      <br>



      ## Editor Recipient

      Editors have the same management and access rights for the envelope as the sender.
      They can make changes to the envelope as if they were using the Advanced Correct feature.
      This recipient can add name and email information,
      add or change the routing order and set authentication options for the remaining recipients.
      Additionally, this recipient can edit signature/initial tabs and data fields for the remaining recipients.
      The recipient must have a DocuSign account to be an editor.

      In addition to the [core parameters](#core-recipient-parameters), this recipient type has the following parameters:

      <br>


      | Name               | Required | Schema Type        | Description                                                                  |
      | :----------------- | :------- | :----------------- | :--------------------------------------------------------------------------- |
      | documentVisibility | No       | documentVisibility | A complex type that specifies which documents are visible to this recipient. |


      <br>


      ## In-Person Signer Recipient

      An in-person recipient is a DocuSign user, acting as a Signing Host, who is in the same physical location as the signer.

      The following restrictions apply to using electronic notary when sending documents:

      * Authentication methods are allowed for the signer but not the notary.
      * The Sign On Paper, Document Markup, Field Markup and Change Signer options cannot be used for the documents.
      * Tabs may be assigned to the signer, but cannot be assigned to the notary.

      See [eNotary Resources][enotary-resources] in the DocuSign Support Center for more information about how the eNotary feature works.

      In addition to the [core parameters](#core-recipient-parameters), this type adds the following parameters:

      <br>


      | Name                  | Required                                            | Schema Type        | Description                                                                                                                                                                                                                                                                                                                                             |
      | :-------------------- | :-------------------------------------------------- | :----------------- | :------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |
      | inPersonSigningType   | No                                                  | String             | Specifies whether the envelope uses the eNotary feature. The accepted values are:<ul markdown=1><li>`inPersonSigner` The envelope uses the normal in-person signing flow.</li><li>`notary`: The envelope uses the eNotary signing flow.</li></ul>                                                                                                       |
      | notaryHost            | Yes, when `inPersonSigningType` is `notary`         | NotaryHost         | Sets the information for the notary host for the notary in person signing flow. The following information is required: <ul markdown=1> <li>`recipientId`: A unique ID (an integer or a GUID) for the notary signing host. </li> <li>`name`: Specifies the notary's full legal name.</li> <li>`email`: Specifies the notary's email address. </li> </ul> |
      | autoNavigation        | No                                                  | Boolean            | Specifies whether auto navigation is set for the recipient.                                                                                                                                                                                                                                                                                             |
      | defaultRecipient      | No                                                  | Boolean            | When **true,** this is the default recipient for the envelope. This option is used when creating an envelope from a template.                                                                                                                                                                                                                           |
      | documentVisibility    | No                                                  | documentVisibility | A complex type that specifies which documents are visible to this recipient.                                                                                                                                                                                                                                                                            |
      | hostName              | Yes, when `inPersonSigningType` is `inPersonSigner` | String             | The name of the signing host. This is the DocuSign user that is hosting the in-person signing session.                                                                                                                                                                                                                                                  |
      | hostEmail             | Yes, when `inPersonSigningType` is `inPersonSigner` | String             | The email address of the signing host. This is the DocuSign user that is hosting the in-person signing session.                                                                                                                                                                                                                                         |
      | signerName            | Yes, when `inPersonSigningType` is `inPersonSigner` | String             | The in-person signer's full legal name.                                                                                                                                                                                                                                                                                                                 |
      | Name                  | Yes, when `inPersonSigningType` is `notary`         | String             | The full legal name of the signer in an eNotary flow.                                                                                                                                                                                                                                                                                                   |
      | email                 | Yes, when `inPersonSigningType` is `notary`         | String             | The signer's email address in an eNotary flow.                                                                                                                                                                                                                                                                                                          |
      | recipientSuppliesTabs | No                                                  | Boolean            | Indicates whether the recipient supplies tabs in the document.                                                                                                                                                                                                                                                                                          |
      | signatureInfo         | No                                                  | String             | Optional element only used with the recipient types In Person Signers, Signers, and Witnesses.<br/><br/>Allows the sender to pre-specify the signature name, signature initials, and signature font used in the signature stamp for the recipient.                                                                                                      |
      | signInEachLocation    | No                                                  | Boolean            | When **true** and the feature is enabled in the sender's account, the signing recipient is required to draw signatures and initials at each signature/initial tab (instead of adopting a signature/initial style or only drawing a signature/initial once).                                                                                             |
      | tabs                  | No                                                  | Tab                | Optional element only used with recipient types In Person Signers and Signers.<br/><br/>Specifies the Tabs associated with the recipient. See the [EnvelopeRecipientTabs resource](/docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/) for more information about tabs.                                                                    |

      <br>

      ## Intermediary Recipient

      An intermediary is a recipient who can, but is not required to,
      add name and email information for recipients
      at the same or subsequent level in the routing order,
      unless subsequent agents, editors or intermediaries are added.

      In addition to the [core parameters](#core-recipient-parameters), this recipient type has the following parameters:

      <br>


      | Name               | Required | Schema Type        | Description                                                                  |
      | :----------------- | :------- | :----------------- | :--------------------------------------------------------------------------- |
      | documentVisibility | No       | documentVisibility | A complex type that specifies which documents are visible to this recipient. |

      <br>



      ## Seal Recipient

      An electronic seal recipient is a legal entity rather than an actual person.
      Electronic Seals can be used by organizations and governments to show evidence
      of origin and integrity of documents.
      Even though electronic seals can be represented by a tab in a document,
      they do not require user interaction and apply automatically in the order specified by the sender.
      The sender is therefore the person authorizing usage of the electronic seal in the flow.

      Electronic seal recipients rely on a subset of core properties, described as follows, plus the `recipientSignatureProviders` parameter:


      <br>


      | Name                        | Required        | Schema Type                                                           | Description                                                                                                                                                                                                                                      |
      | :-------------------------- | :-------------- | :-------------------------------------------------------------------- | :----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
      | recipientId                 | Yes             | String<br/><br/>The string must be formatted as an integer or a GUID. | Indicates the unique ID of the applied electronic seal.                                                                                                                                                                                          |
      | routingOrder                | No (default: 1) | String                                                                | Specifies the routing order of the electronic seal in the envelope. <br />The routing order assigned to your electronic seal cannot be shared with another recipient. It is recommended that you set a routing order for your electronic seals.. |
      | recipientSignatureProviders | Yes             | String                                                                | Indicates which electronic seal to apply on documents when creating an envelope.                                                                                                                                                                 |


      <br>

      By default, Electronic Seals apply to all documents in an envelope.
      However, the `sealDocumentsWithTabsOnly` property (see `recipientSignatureProvider`)
      allows you to seal only documents that have `signHere` tabs set for the Electronic Seal recipients.

      <br>



      ## Signer Recipient

      A signer is a recipient who must sign, initial, date, or add data to form fields on the documents in the envelope.

      In addition to the [core parameters](#core-recipient-parameters), this recipient type adds the following parameters:

      <br>


      | Name                  | Required | Schema Type        | Description                                                                                                                                                                                                                                                                           |
      | :-------------------- | :------- | :----------------- | :------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |
      | autoNavigation        | No       | Boolean            | Specifies whether auto navigation is set for the recipient.                                                                                                                                                                                                                           |
      | defaultRecipient      | No       | Boolean            | When **true,** this is the default recipient for the envelope. This option is used when creating an envelope from a template.                                                                                                                                                         |
      | documentVisibility    | No       | documentVisibility | A complex type that specifies which documents are visible to this recipient.                                                                                                                                                                                                          |
      | isBulkRecipient       | No       | Boolean            | Indicates whether the recipient is a bulk send recipient or not.                                                                                                                                                                                                                      |
      | recipientSuppliesTabs | No       | Boolean            | Indicates whether the recipient supplies tabs in the document.                                                                                                                                                                                                                        |
      | signInEachLocation    | No       | Boolean            | When **true** and the feature is enabled in the sender's account, the signing recipient is required to draw signatures and initials at each signature/initial tab (instead of adopting a signature/initial style or only drawing a signature/initial once).                           |
      | signatureInfo         | No       | String             | Optional element only used with recipient types In Person Signers, Signers, and Witnesses.<br/><br/>Allows the sender to pre-specify the signature name, signature initials, and signature font used in the signature stamp for the recipient.                                        |
      | signerEmail           | No       | String             | Optional element. The email address for an In-Person Signer recipient Type.<br/>Maximum Length: 100 characters.                                                                                                                                                                       |
      | signerName            | Yes      | String             | Required element with recipient type In Person Signers.<br/>Maximum Length: 100 characters.<br/><br/>The full legal name of a signer for the envelope.                                                                                                                                |
      | tabs                  | No       | Tab                | Optional element only used with recipient types In Person Signers and Signers.<br/><br/>Specifies the Tabs associated with the recipient. See the [EnvelopeRecipientTabs resource](/docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/)  for more information about tabs. |

      <br>

      [enotary-resources]: https://support.docusign.com/s/document-item?bundleId=gko1642535666104&topicId=jiv1635359045452.html


      ## Witness Recipient

      A witness is a recipient whose signature affirms that the identified signers have signed the documents in the envelope.

      In addition to the [core parameters](#core-recipient-parameters), this recipient type adds the following parameters:

      <br>


      | Name                        | Required | Schema Type        | Description                                                                                                                                                                                                                            |
      | :-------------------------- | :------- | :----------------- | :------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
      | autoNavigation              | No       | Boolean            | Specifies whether auto navigation is set for the recipient.                                                                                                                                                                            |
      | defaultRecipient            | No       | Boolean            | When **true,** this is the default recipient for the envelope. This option is used when creating an envelope from a template.                                                                                                          |
      | documentVisibility          | No       | documentVisibility | A complex type that specifies which documents are visible to this recipient.                                                                                                                                                           |
      | isBulkRecipient             | No       | Boolean            | Indicates whether the recipient is a bulk send recipient or not.                                                                                                                                                                       |
      | recipientSignatureProviders | Yes      | String             | Indicates which electronic seal to apply on documents when creating an envelope.                                                                                                                                                       |
      | recipientSuppliesTabs       | No       | Boolean            | Indicates whether the recipient supplies tabs in the document.                                                                                                                                                                         |
      | recipientType               | Yes      | String             | Indicates the recipient type.                                                                                                                                                                                                          |
      | requireSignerCertificate    | No       | Boolean            | Indicates whether the envelope requires a signer certificate for this recipient.                                                                                                                                                       |
      | requireSignOnPaper          | No       | Boolean            | Specifies whether the signer must print, sign, and upload or fax the signed documents to DocuSign.                                                                                                                                     |
      | signatureInfo               | No       | Boolean            | Optional element only used with recipient types In Person Signers, Signers, and Witnesses. Enables the sender to pre-specify the signature name, signature initials, and signature font used in the signature stamp for the recipient. |
      | signInEachLocation          | No       | Boolean            | When **true** and the feature is enabled in the sender's account, specifies that the signing recipient is required to sign and initial at each signature/initial tab (instead of once).                                                |
      | signingGroupId              | No       | String             | The ID of the [signing group](https://support.docusign.com/s/document-item?bundleId=gav1643676262430&topicId=zgn1578456447934.html).                                                                                                                                  |
      | signingGroupName            | No       | String             | The display name for the signing group. Maximum Length: 100 characters.                                                                                                                                                                |
      | signingGroupUsers           | No       | userInfo           | A complex type that contains information about the users in the signing group.                                                                                                                                                         |
      | witnessFor                  | Yes      | String             | Indicates the person or party for whom the recipient is a witness.                                                                                                                                                                     |
      | witnessForGuid              | Yes      | String             | GUID identifying the person or party for whom the recipient is a witness.                                                                                                                                                              |


      [ListLang]: /docs/esign-rest-api/reference/accounts/accounts/listsupportedlanguages/
  - name: EnvelopeRecipientTabs
    description: |
      The EnvelopeRecipientTabs resource provides methods that enable you
      to add,
      update,
      and delete tabs
      from an envelope.
      Tabs are associated with a specific recipient
      in an envelope
      and are only used by the recipient types
      In Person Signers and Signers.

      <!-- START doctoc generated TOC please keep comment here to allow auto update -->
      <!-- DON'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE -->
      **On this page**

      - [Tab Types](#tab-types)
      - [View Tab](#view-tab)
      - [Requesting Payments](#requesting-payments)
      - [Using Custom Tabs in Envelopes and Templates](#using-custom-tabs-in-envelopes-and-templates)
      - [Anchoring Tabs](#anchoring-tabs)
      - [Automatically Populating Tabs](#automatically-populating-tabs)

      <!-- END doctoc generated TOC please keep comment here to allow auto update -->


      ## Tab Types

      Some tabs enable values to be entered by the signer.
      Those tabs' values can be preset either through the web browser
      or via the API. Other tab types use information that is already
      recognized by the DocuSign platform.
      These tabs cannot have their value updated on a per-tab basis
      by the API or via the browser. In some cases, the info might be
      settable using a different technique.
      For example, the Full name tab uses the signer's name,
      which is set elsewhere in the request.

      Here is the list of tabs and whether you can or cannot set their values in the tab definition:

      <br>

      | Tab Type                                       | Description|
      | :--------------------------------------------- ||
      | Approve (`approve`)                            | Allows the recipient to approve documents without placing a signature or initials on the document. If the recipient clicks the tab during the signing process, the recipient is considered to have signed the document. No information is shown on the document of the approval, but it is recorded as a signature in the envelope history. This value **can't** be set.                                                                                                                                                                                                                                              |
      | Checkbox (`checkbox`)                          | Allows the recipient to select a yes/no (on/off) option. This value can be set|
      | Commission County (`commissionCounty`)         | Displays the county of a notary's commission. This tab can only be assigned to a remote notary recipient using [DocuSign Notary](/docs/notary-api/). This value **can't** be set in the API call.                                                                                                                                                                                                                                                                                                                                                                                                                     |
      | Commission Expiration (`commissionExpiration`) | Displays the expiration date of a notary's commission. This tab can only be assigned to a remote notary recipient using [DocuSign Notary](/docs/notary-api/). This value **can't** be set.                                                                                                                                                                                                                                                                                                                                                                                                                            |
      | Commission Number (`commissionNumber`)         | Displays the number of a notary's commission. This tab can only be assigned to a remote notary recipient using [DocuSign Notary](/docs/notary-api/). This value **can't** be set.                                                                                                                                                                                                                                                                                                                                                                                                                                     |
      | Commission State (`commissionState`)           | Displays the state in which a notary's commission was granted. This tab can only be assigned to a remote notary recipient using [DocuSign Notary](/docs/notary-api/). This value **can't** be set.                                                                                                                                                                                                                                                                                                                                                                                                                |
      | Company (`company`)                            | Displays the recipient's company name. This value **can't** be set|
      | Date Signed (`dateSigned`)                     | Displays the date that the recipient signed the document. This value **can't** be set|
      | Date (`date`)                                  | Allows the recipient to enter a date. Date tabs are one-line fields that allow date information to be entered in any format. The tooltip for this tab recommends entering the date as MM/DD/YYYY, but this is not enforced. The format entered by the signer is retained. If you need a particular date format enforced, DocuSign recommends using a Text tab with a validation pattern and a validation message to enforce the format. This value can be set.                                                                                                                                                        |
      | Decline (`decline`)                            | Allows the recipient the option of declining an envelope. If the recipient clicks the tab during the signing process, the envelope is voided. This value **can't** be set.                                                                                                                                                                                                                                                                                                                                                                                                                                            |
      | Email Address (`emailAddress`)                 | Displays the recipient's email as entered in the recipient information. This value **can't** be set.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  |
      | Email (`email`)                                | Allows the recipient to enter an email address. This is a one-line field that checks that a valid email address is entered. It uses the same parameters as a Text tab, with the validation message and pattern set for email information.<br><br>When getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response. This value can be set.                                                                                                                                                                                        |
      | Envelope ID (`envelopeId`)                     | Displays the envelope ID. Recipients cannot enter or change the information in this tab.  This value **can't** be set.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                |
      | First Name (`firstName`)                       | Displays the recipient's first name. This tab takes the recipient's name as entered in the recipient information, splits it into sections based on spaces and uses the first section as the first name. This value **can't** be set.                                                                                                                                                                                                                                                                                                                                                                                  |
      | Formula Tab (`formulaTab`)                     | The value of a formula tab is calculated from the values of other number or date tabs in the document. When the recipient completes the underlying fields, the formula tab calculates and displays the result. This value can be set. The `formula` property of the tab contains the references to the underlying tabs. See [Calculated Fields] in the DocuSign Support Center to learn more about formulas. If a formula tab contains a `paymentDetails` property, the tab is considered a payment item. See [Requesting Payments Along with Signatures] in the DocuSign Support Center to learn more about payments. |
      | Full Name (`fullName`)                         | Displays the recipient's full name. This value **can't** be set|
      | Initial Here (`initialHere`)                   | Allows the recipient to initial the document. May be optional. This value **can't** be set|
      | Last Name (`lastName`)                         | Displays the recipient's last name. This tab takes the recipient's name as entered in the recipient information, splits it into sections based on spaces and uses the last section as the last name. This value **can't** be set.                                                                                                                                                                                                                                                                                                                                                                                     |
      | List (`list`)                                  | This tab offers a list of options to choose from. The `listItems` property is used to specify the selectable options. This value can be set,                                                                                                                                                                                                                                                                                                                                                                                                                                                                          |
      | Notarize (`notarize`)                          | Place this tab on a page to alert Notary recipients that they must take action. Only one notarize tab can appear on a page. This value can be set.                                                                                                                                                                                                                                                                                                                                                                                                                                                                    |
      | Notary Seal (`notarySeal`)                     | Enables the recipient to notarize a document. This tab can only be assigned to a remote notary recipient using [DocuSign Notary](/docs/notary-api/). This value **can't** be set.                                                                                                                                                                                                                                                                                                                                                                                                                                     |
      | Note (`note`)                                  | Displays additional information, in the form of a note, for the recipient. This value can be set|
      | Number (`number`)                              | Allows the recipient to enter numbers and decimal (.) points. This value can be set|
      | Numerical (`numerical`)                        | Numerical tabs provide robust display and validation features, including formatting for different regions and currencies, and minimum and maximum value validation.                                                                                                                                                                                                                                                                                                                                                                                                                                                             |
      | Phone Number (`phoneNumber`)                   | Allows the recipient to enter a phone number. This tab can only be assigned to a remote notary recipient using [DocuSign Notary](/docs/notary-api/). This value **can't** be set.                                                                                                                                                                                                                                                                                                                                                                                                                                     |
      | Radio Group (`radioGroup`)                     | This group tab is used to place radio buttons on a document. The `radios` property is used to add and place the radio buttons associated with the group. Only one radio button can be selected in a group. This value can be set.                                                                                                                                                                                                                                                                                                                                                                                     |
      | Sign Here (`signHere`)                         | Allows the recipient to sign a document. May be optional. This value **can't** be set. <br/>**Note:** `signHere` tabs can also be used to add a visual representation for  an electronic seal in a document.                                                                                                                                                                                                                                                                                                                                                                                                          |
      | Signer Attachment (`signerAttachment`)         | Allows the recipient to attach supporting documents to an envelope. This value **can't** be set|
      | SSN (`ssn`)                                    | A one-line field that allows the recipient to enter a Social Security Number. The SSN can be typed with or without dashes. It uses the same parameters as a Text tab, with the validation message and pattern set for SSN information.  This value can be set.                                                                                                                                                                                                                                                                                                                                                        |
      | Text (`text`)                                  | Allows the recipient to enter any type of text. This value can be set. Maximum length: 4000 bytes|
      | Title (`title`)                                | Displays the recipient's title. This value **can't** be set|
      | View (`view`)                                  | The View tab is used with the Approve tab to handle supplemental documents. This value can be set|
      | Zip (`zip`)                                    | Allows the recipient to enter a ZIP code. The ZIP code can be five digits or nine digits in the ZIP+4 format. The zip code can be typed with or without dashes. It uses the same parameters as a Text tab, with the validation message and pattern set for ZIP code information. This value can be set.                                                                                                                                                                                                                                                                                                               |


      [approve]:          /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/#tab-types
      [checkbox]:         /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/#tab-types
      [company]:          /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/#tab-types
      [dateSigned]:       /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/#tab-types
      [date]:             /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/#tab-types
      [decline]:          /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/#tab-types
      [emailAddress]:     /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/#tab-types
      [email]:            /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/#tab-types
      [envelopeId]:       /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/#tab-types
      [firstName]:        /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/#tab-types
      [formulaTab]:       /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/#tab-types
      [fullName]:         /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/#tab-types
      [initialHere]:      /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/#tab-types
      [lastName]:         /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/#tab-types
      [list]:             /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/#tab-types
      [notarize]:         /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/#tab-types
      [note]:             /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/#tab-types
      [number]:           /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/#tab-types
      [radioGroup]:       /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/#tab-types
      [signerAttachment]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/#tab-types
      [signHere]:         /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/#tab-types
      [ssn]:              /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/#tab-types
      [text]:             /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/#tab-types
      [title]:            /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/#tab-types
      [view]:             /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/#tab-types
      [zip]:              /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/#tab-types

      [calculatedfields]: https://support.docusign.com/s/document-item?bundleId=gbo1643332197980&topicId=crs1578456361259.html
      [paymentguide]:     https://support.docusign.com/s/document-item?bundleId=juu1573854950452&topicId=fyw1573854935374.html






      ## View Tab

      The View tab is used on supplemental documents.
      To learn more about using the View tab with
      supplemental documents, see
      [Using Supplemental Documents][usingsupdocs]
      in the [Sending Documents][sendenvelopes] section of
      the [Envelope: create][envelopecreate] method.

      [sendenvelopes]:  /docs/esign-rest-api/reference/envelopes/envelopes/create/
      [usingsupdocs]:   /docs/esign-rest-api/esign101/concepts/documents/supplemental/
      [envelopecreate]: /docs/esign-rest-api/reference/envelopes/envelopes/create/

      <br>

      | Name             | Required | Type    | Description                                                                                                                                                                          |
      | :--------------- | :------- | :------ | :----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
      | documentId       | Yes      | String  | The document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.                                                                            |
      | pageNumber       | Yes      | String  | Must be set to 1.                                                                                                                                                                    |
      | recipientId      | Yes      | String  | The recipient associated with the tab. Must refer to an existing recipient's ID attribute.                                                                                           |
      | required         | No       | Boolean | When **true,** the recipient is required to select the supplemental document View button during signing.                                                                             |
      | tabLabel         | No       | String  | The label used for the tab.  If an empty string is provided for this, an empty sting is used. If no value is provided, the tab type is used as the value. Maximum of 500 characters. |
      | templateLocked   | No       | Boolean | Optional. Used only when working with template tabs. When **true,** the attributes of the tab cannot be changed by the sender.                                                       |
      | templateRequired | No       | Boolean | Optional. Used only when working with template tabs. When **true,** the tab cannot be removed by the sender.                                                                         |
      | xPosition        | Yes      | String  | Required, but can be 0.                                                                                                                                                              |
      | yPosition        | Yes      | String  | Required, but can be 0.                                                                                                                                                              |


      ## Requesting Payments

      The Payments feature of the DocuSign eSignature REST API
      lets you collect payments
      along with signatures and other information.

      To send a request for payment
      and collect payments,
      you need a payment gateway account,
      which is the destination for the payments.
      Create a payment account
      with a supported payment gateway,
      and then connect the payment gateway account
      to your DocuSign account.
      To learn how to connect a payment gateway account
      to your DocuSign account
      see [Managing Payment Gateways][paymentgateways]
      in the DocuSign Support Center.
      You must connect and manage payment gateway accounts manually
      through the DocuSign Admin console
      and through your chosen payment gateway.
      There is no public API
      for connecting payment gateway accounts
      to DocuSign accounts
      or for managing payment gateway accounts.

      Currently
      [Stripe][stripe],
      [Braintree](https://www.braintreepayments.com/),
      [Authorize.net](https://www.authorize.net/),
      [CyberSource](https://www.cybersource.com/),
      [Zuora](https://www.zuora.com/), and
      [Elavon](https://www.elavon.com/)
      are the supported payment gateways.

      ### How Payments Work

      To make a request for payment,
      use a [`formulaTab`][formulatab]
      that has a
      [`paymentDetails`][paymentdetails] object.
      This object includes
      a list of [`paymentLineItem`][paymentlineitem] objects.
      Each line item refers to a [`number`][numbertab] tab
      that contains the value of the each item.
      The purpose of the line items
      is to transmit them to the payment gateway
      as metadata, so that you can use the information
      in the payment processor.

      **Note:** If the `fileExtension` parameter is not added in an API call, only base64 converted PDF files will be accepted.
      Any attempt to send a non-PDF file without using `fileExtension` results in an error.

      This is an example request for two books.
      Each book is specified in the `number` tabs
      labeled "Hamlet" and "Tempest".
      The books are referenced as line items
      by their tab labels
      within the `paymentDetails` object
      of a `formula` tab.
      The formula of the `formula` tab
      add the values of the same two `number` tabs.

      **Note:** This example uses US dollars, a decimal currency,
      so the price is multiplied
      by 100. If you are using a zero-decimal currency,
      such as Japanese yen, _do not_ multiply by 100.

      ```json
      {
        "documents": [
          {
            "documentBase64": "<base64-encoded PDF document>",
            "documentId": "1",
            "fileExtension": "pdf",
            "name": "payment.pdf"
          }
        ],
        "emailSubject": "Order Some Books",
        "recipients": {
          "signers": [
            {
              "email": "vreader@example.com",
              "name": "Voracious Reader",
              "recipientId": "1",
              "routingOrder": "1",
              "tabs": {
                . . .
                "numberTabs": [
                  {
                    "value": "10.00",
                    "width": 78,
                    "required": "true",
                    "locked": "true",
                    "tabLabel": "Hamlet",
                    "documentId": "1",
                    "pageNumber": "1",
                    "xPosition": "323",
                    "yPosition": "134"
                  },
                  {
                    "value": "10.00",
                    "width": 78,
                    "required": "true",
                    "locked": "true",
                    "tabLabel": "Tempest",
                    "documentId": "1",
                    "pageNumber": "1",
                    "xPosition": "323",
                    "yPosition": "154"
                  }
                ],
                "formulaTabs": [
                  {
                    "required": "true",
                    "formula": "([Hamlet] + [Tempest]) * 100",
                    "roundDecimalPlaces": "2",
                    "paymentDetails": {
                      "currencyCode": "USD",
                      "lineItems": [
                        {
                          "name": "Hamlet",
                          "description": "The Danish Play",
                          "itemCode": "SHAK1",
                          "amountReference": "Hamlet"
                        },
                        {
                          "name": "Othello",
                          "description": "The one with Caliban in it",
                          "itemCode": "SHAK2",
                          "amountReference": "Tempest"
                        }
                      ],
                      "gatewayAccountId": "e76668b4-xxxx-xxxx-xxxx-a208d659e490"
                    },
                    "tabLabel": "Payment1",
                    "documentId": "1",
                    "pageNumber": "1",
                    "xPosition": 300,
                    "yPosition": 200
                  }
                ]
              }
            }
          ]
        },
        "status": "sent"
      }
      ```

      Use the
      [EnvelopeRecipients: list][enveloperecipientslist] method
      to check the status of a payment.
      When the payment is successful,
      the `status` property of
      the [`paymentDetails`][paymentdetails] object
      is `payment_complete`.

      ```json
      {
        "signers": [
          {
            "tabs": {
              . . .
              "numberTabs": [
                {
                  "value": "10.00",
                  "tabLabel": "Hamlet",
                  "documentId": "1",
                  "recipientId": "1",
                  "pageNumber": "1",
                  "xPosition": "323",
                  "yPosition": "134",
                },
                {
                  "value": "10.00",
                  "tabLabel": "Tempest",
                  "documentId": "1",
                  "recipientId": "1",
                  "pageNumber": "1",
                }
              ],
              "formulaTabs": [
                {
                  "formula": "([Hamlet] + [Tempest]) * 100",
                  "roundDecimalPlaces": "2",
                  "paymentDetails": {
                    "status": "payment_complete",
                    "currencyCode": "USD",
                    "lineItems": [
                      {
                        "name": "Hamlet",
                        "description": "The Danish Play",
                        "itemCode": "SHAK1",
                        "amountReference": "Hamlet"
                      },
                      {
                        "name": "Tempest",
                        "description": "The one with Caliban in it",
                        "itemCode": "SHAK2",
                        "amountReference": "Tempest"
                      }
                    ],
                    "gatewayAccountId": "e76668b4-xxxx-xxxx-xxxx-a208d659e490"
                  },
                  "value": "20",
                  "required": "true",
                  "locked": "false",
                  "tabLabel": "Payment1",
                  "documentId": "1",
                  "recipientId": "1",
                  "pageNumber": "1",
                }
              ]
            },
            "creationReason": "sender",
            "email": "vreader@example.com",
            "name": "Voracious Reader",
            "recipientId": "1",
            "requireIdLookup": "false",
            "status": "completed",
          }
        ],
        . . .
      }
      ```

      #### How to make a request for future payments

      Use the following steps to make a request to collect a signer's payment method for future use:

      1. Add a text tab with a descriptive `tabLabel` such as `FuturePayment`.
      2. In the formula tab's `paymentDetails` object, add a `lineItem` object that references the `tabLabel` from step 1.

      **Note:** Do not include this new `lineItem` in formula calculations.

      The following example builds on the previous code block to also collect a payment method for future use:

      ```
      {
        "documents": [
          {
            "documentBase64": "<base64-encoded PDF document>",
            "documentId": "1",
            "fileExtension": "pdf",
            "name": "payment.pdf"
          }
        ],
        "emailSubject": "Order Some Books",
        "recipients": {
          "signers": [
            {
              "email": "vreader@example.com",
              "name": "Voracious Reader",
              "recipientId": "1",
              "routingOrder": "1",
              "tabs": {
                "numberTabs": [
                  {
                    "value": "10.00",
                    "width": 78,
                    "required": "true",
                    "locked": "true",
                    "tabLabel": "Hamlet",
                    "documentId": "1",
                    "pageNumber": "1",
                    "xPosition": "323",
                    "yPosition": "134"
                  },
                  {
                    "value": "10.00",
                    "width": 78,
                    "required": "true",
                    "locked": "true",
                    "tabLabel": "Tempest",
                    "documentId": "1",
                    "pageNumber": "1",
                    "xPosition": "323",
                    "yPosition": "154"
                  }
                ],
                "textTabs": [
                  {
                    "value": "",
                    "width": 78,
                    "required": "true",
                    "locked": "true",
                    "tabLabel": "FuturePayment",
                    "documentId": "1",
                    "pageNumber": "1",
                    "xPosition": "323",
                    "yPosition": "174"
                  }
                ],
                "formulaTabs": [
                  {
                    "required": "true",
                    "formula": "([Hamlet] + [Tempest]) * 100",
                    "roundDecimalPlaces": "2",
                    "paymentDetails": {
                      "currencyCode": "USD",
                      "paymentOption": "save_and_authorize",
                      "lineItems": [
                        {
                          "name": "Hamlet",
                          "description": "The Danish Play",
                          "itemCode": "SHAK1",
                          "amountReference": "Hamlet"
                        },
                        {
                          "name": "Othello",
                          "description": "The one with Caliban in it",
                          "itemCode": "SHAK2",
                          "amountReference": "Tempest"
                        },
                        {
                          "name": "Request books",
                          "description": "collect Payment method",
                          "itemCode": "",
                          "amountReference": "FuturePayment"
                        }
                      ],
                      "gatewayAccountId": "e76668b4-xxxx-xxxx-xxxx-a208d659e490"
                    },
                    "tabLabel": "Payment1",
                    "documentId": "1",
                    "pageNumber": "1",
                    "xPosition": 300,
                    "yPosition": 200
                  }
                ]
              }
            }
          ]
        },
        "status": "sent"
      }
      ```

      ### Some Things to Keep in Mind About Payments

      * An envelope is not completed until all payments are completed.

      * If you are using a a decimal currency, such as USD,
        remember to multiply amounts by 100. If you are using
        zero-decimal currency, such as JPY, _do not_ multiply by 100.

      * If a DocuSign account Administrator
        deletes a payment gateway account connection
        DocuSign cancels all in-process envelopes
        that reference the deleted payment gateway account.

      * If the sender voids an envelope,
        all payment authorizations are canceled.

      * If a required recipient refuses to sign,
        all authorized payments are canceled.

      * If a required recipient's payment fails authorization,
        DocuSign attempts to recover
        by sending the recipient
        notification about the failed payment authorization.
        The recipient has the opportunity
        to correct the payment method information.

      * Each recipient's payment is authorized separately.
        Accounts are charged and payment made
        after all required tabs are completed,
        and all payments in an envelope for all recipients are authorized.

      * Refunds are not supported.
        Conduct refunds or payment changes
        with the payment gateway separately from DocuSign.

      * At this time, DocuSign does not charge a per-transaction fee.


      [enveloperecipientslist]: /docs/esign-rest-api/reference/envelopes/enveloperecipients/list/
      [formulatab]:             /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/
      [ISO 4217]:                https://en.wikipedia.org/wiki/ISO_4217
      [numbertab]:              /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/
      [paymentgateways]:        https://support.docusign.com/s/document-item?bundleId=juu1573854950452&topicId=knc1573854895499.html
      [paymentguide]:           https://support.docusign.com/s/document-item?bundleId=juu1573854950452&topicId=fyw1573854935374.html
      [paymentlineitem]:        /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/
      [paymentdetails]:         /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/
      [stripe]:                 https://stripe.com/

      ## Anchoring Tabs

      The tab anchoring option
      allows you to send documents for signature
      that do not have a fixed layout or format.
      In these documents you might not know
      the absolute location of the tabs
      when you design your API client application because the tabs must move with text.
      As an alternative to sending X and Y coordinates for tabs,
      the DocuSign Service can derive an anchor location for the tab
      by correlating anchor information to data within the document.

      When the DocuSign Service receives a request that contains tabs
      with anchor information,
      it searches the document for instances of the `anchorString` property.
      When found,
      it places a tab of the specified type for the designated recipient.
      Tab positions are established by setting offsets for the tab.

      When you apply tabs to the document,
      DocuSign does not remove or replace the text in the `anchorString` property. You can hide codified anchors by using the same font color as the background of the document. So the anchor can be used by DocuSign processes and it will not be visible on the document.

      To use an anchoring option:

      1. Identify the location in the document by text string. You can use a pre-existing text string or add a new one.
      For best performance DocuSign recommends using single word anchor strings when possible, especially when there are a large number of pages in the envelope.
      For example, you might want to add a Sign Here tab to the "Borrower's Signature" lines in a document, but that phrase might occur in places in the document where you don't want to tab to appear. In this case, you could add the text "BorrowerSignHere" in white font color (so that isn't visible in the document) to all the places you want Sign Here tabs to appear and use "BorrowerSignHere" as the anchor string.
      1. Reference the anchor through the `anchorString` property of the tab.
      1. Determine the offset from the anchor string location to where the tab should be placed.

      Setting a positive value in the `anchorXOffset` property moves the tab right on the page and positive values in the  `anchorYoffset` prove moves the tab down the page. The `anchorUnits` property specifies the units used for the offsets.
      For Sign Here and Initial Here tabs the bottom-left of the anchor string is equivalent to position (0,0), and the bottom-left of the tab graphic is placed relative to that.
      For all other tabs the bottom-left of the anchor string is equivalent to position (0,0), and the top-left of the tab graphic is placed relative to that.
      DocuSign does not currently provide tools to derive the offset values. Determination of the proper offset will likely require some trial-and-error.

      ### Rules for working with anchor tags

      When anchor tabs are used, all documents in the envelope are searched for the `anchorString` property.

      * You set the text of the anchor string in the `anchorString` property. DocuSign tabs are created for each instance of the `anchorString` property within the document, so special care must be taken to establish unique anchor strings that do not result in unintentional tabs.
      * You cannot use the same anchored tab for different recipients for the same document.
      * The DocuSign system cannot search for text that is embedded in an image when checking for anchor strings.
      * X or Y offsets supplied for a tab apply to all instances of the tab in the document. To use different offsets at different locations in the document for the same recipient, create multiple, unique anchor tabs.
      * If the Y offset value of an anchor string would force a tab outside of the page boundaries, the tag is placed at the page boundary. If the X offset value places a tab outside of the page boundaries, the error message `Invalid_User_Offset` is sent. The error message includes the X offset that resulted in the error.
      * The system does not support an anchor string embedded in the form of a PDF X-object in the document.
      * The system does not re-flow the text that surrounds the anchor tabs. It is the responsibility of the document author to provide sufficient white space to contain the potential width of the ultimate tab value.

      ### Tips and Tricks

      The following are tips for effective use of anchor tags:
      * In order to avoid unintentional conflicts between text contained in an `anchorString` property and the text that naturally exists in documents, establish a codified syntax for the anchor string text that is unlikely to appear elsewhere in a document.
      * Develop an extensible and consistent syntax that can be used across multiple document types.
      * Especially for documents that have variable numbers of tabs or signers, author the source document to include hidden anchor tabs for all potential signers/permutations. Then, control the tabs that are actually placed by including/excluding the anchor tabs in the request. This approach allows a single document to be used for all use cases instead of maintaining separate documents for each scenario.

      ## Automatically Populating Tabs

      If you want similar tab types
      to automatically populate with the same data,
      you must follow these guidelines:

      * Each `tabLabel` entry must have the characters
        `\\*` in front of the label.
        If you omit the `\\*` prefix,
        only the first occurrence of the tab is populated.

        When automatically populating tabs,
        the `tabLabel` must not contain any spaces.
        In the JSON example below,
        the Text tabs  properties `StudentLastName` and `StudentFirstName`
        will be auto-populated as specified ("Doe" and "John")
        each place they appear throughout the envelope.

        ```
        "tabs": {
          "textTabs": [
          {
            "tabLabel": "\\*StudentLastName",
            "value": "Doe"
          },
          {
            "tabLabel": "\\*StudentFirstName",
            "value": "John"
          }]
        }
        ```

      * Note that `\\*` matches _anything_.  If you were to add
        another tab with the `tabLabel` set to `\\*Name` to the
        example above, it would end up matching the other two
        labels as well.

      * Each occurrence of the tab must have identical properties.

        For example, suppose there are two Text tabs in a document,
        each with `tabLabel` set to `Name`.
        If one tab has the `bold` property set to **true,**
        and the other has the `bold` property set to **false,**
        only the first one will be populated.
        In order to automatically populate both occurrences
        of the `Name` Text tabs,
        the `bold` property must be set to the same value for both tabs.
  - name: EnvelopeDocumentTabs
    description:
      Document tabs are tabs that are associated with a document rather than
      with a recipient.
  - name: TemplateDocumentTabs
    description:
      The EnvelopeDocumentTabs resource provides methods that enable you
      to manage tabs in a template.
  - name: EnvelopeViews
    description: |+
      Provides a URL that you can embed in your application
      to provide access to the DocuSign UI.

      ### Related topics

      - [Embedded signing and sending](/docs/esign-rest-api/esign101/concepts/embedding/)
      - [How to send an envelope via your app](/docs/esign-rest-api/how-to/embedded-sending/)
      - [Introducing customizable embedded sending](https://www.docusign.com/blog/developers/introducing-customizable-embedded-sending)

  - name: AccountSealProviders
    description: ""
  - name: Accounts
    description:
      The Accounts resource provides methods that allow you to create, delete,
      and manage your accounts.
  - name: AccountSignatureProviders
    description: |-
      Standards-Based Signatures (SBS) is the label used to describe DocuSign's suite of signatures that comply with regional and industry regulations, such as the electronic IDentification, Authentication and trust Services (eIDAS) regulation in Europe.

      ## Feature Differences When Using Standards-Based Signatures

      Some DocuSign features are not compatible with Standards-Based Signatures, while others work somewhat differently. It's important to understand these key differences.

      ### DocuSign Features Not Compatible with SBS

      - Attachment by fax
      - Concatenation of signer attachments
      - Legacy digital signatures
      - Markup
      - Notary

      ### DocuSign Features That Change with SBS

      The following features work slightly differently with SBS:

      - **Advanced Correct:** After the first signature, adding or deleting a field is not allowed. This behavior occurs because SBS does not allow adding or removing form fields after a digital signature has already been applied to a PDF.
      - **Downloading Combined Envelopes:** A combined PDF is not digitally signed. This behavior occurs because concatenating digitally signed PDFs breaks the digital signatures on the PDFs.
      - **Freeform Signing:** After someone has signed, allows only signature and initials on free-form. This behavior occurs because if another signer has already signed the document, adding fields other than signature fields will break the existing digital signatures on the document.
      - **Watermarks:** All watermarks are added as PDF annotations. This behavior occurs because burning the watermark into the PDF will break the digital signatures on the document.
      - **Wet Signing:** Wet-signed documents are added as new documents to envelopes. This behavior results in the uploaded or faxed, physically signed document being added as a new document to the envelope. This new document gets only a platform seal.

      For more information, see [Standards Based Signatures](/docs/esign-rest-api/esign101/concepts/standards-based-signatures/).
  - name: BillingPlans
    description:
      The Billing resource provides methods that allow you to manage the
      billing plans associated with an account.
  - name: Invoices
    description:
      The Invoices resource provides methods that allow you to manage the
      invoices for an account.
  - name: Payments
    description: |-
      The Payments resource provides methods that allow you to manage payments for an account.

      These calls can only be used by users with account administrator privileges.
  - name: CloudStorage
    description:
      The CloudStorage resource provides methods that allow you to list files
      stored on your cloud storage provider.
  - name: CloudStorageProviders
    description: |-
      The following providers are supported:

      * Google Drive
      * Dropbox
      * Box
      * Evernote
      * OneDrive

      To use cloud storage files, you must first give DocuSign access to your cloud storage provider. You can disconnect authorized a cloud storage provider at any time.
  - name: ConnectConfigurations
    description: |+
      The `ConnectConfigurations` resource enables you to configure the
      DocuSign Connect service for your account.

      You can use this resource to configure account-level webhooks
      that send notifications about every envelope sent from your
      account. You can set account-level webhooks to listen for events
      for envelopes sent by a specific user on your account, by
      multiple specific users, or from any of the users on your
      account. These events will be tracked, and can be delivered to a
      listening application.

      **Note:** To create an envelope-level webhook instead of using
      account-level webhooks, use the Envelopes::Create method and add
      an `eventNotification` object to an envelope object.


      DocuSign Connect offers two delivery modes:

      - Send Individual Messages
      - Send Aggregated Messages

      By default, the Send Individual Messages mode
      is enabled.
      You can disable it
      (enabling Aggregated Messages mode)
      through DocuSign Admin
      in the **Updates** section.


      **Note:** In either mode, Connect
      [must be enabled](https://support.docusign.com/s/document-item?bundleId=pik1583277475390&topicId=ctv1583277395112.html)
      in your DocuSign account. It is not enabled by default.


      ## Send Individual Messages

      Send Individual Messages (SIM) mode is the default.

      In this mode DocuSign delivers notifications for each
      envelope events individually.
      When a final recipient completes an envelope,
      your listener will receive
      a single **Recipient Signed/Completed** event
      followed by a single **Envelope Signed/Completed** event
      for the final participating party on the agreement.

      For more information about SIM mode, see
      [Using Connect's Send Individual Messages Feature](https://www.docusign.com/blog/developers/using-connects-send-individual-messages-feature).



      ## Aggregated Messages

      In Aggregated Messages mode,
      Connect aggregates similar events
      into a single delivery.
      Similar or simultaneous events
      are aggregated,
      so that your listener doesn't
      receive extraneous messages.

      When the final recipient signs an envelope,  the
      system delivers a single, aggregated Connect event, rather than
      separate Recipient: complete and Envelope: complete messages.
      This aggregation process ensures that you only receive the
      minimal viable number of messages about an envelope's life cycle.


  - name: ConnectEvents
    description: |-
      The ConnectEvents resource provides methods that allow you to read, delete, and republish the connect logs associated with an envelope.

      The most recent 100 logs are stored. Logs are deleted after 15 days.
  - name: CustomTabs
    description: |-
      The CustomTabs resource provides methods that allow you create and manage custom tabs based on the existing DocuSign tabs.

      You can create a tab with pre-defined properties, such as a text tab with a certain font type and validation pattern. Users can access the custom tabs when sending documents through the DocuSign web application.

      Custom tabs can be created based on the  approve, checkbox, company, date, date signed, decline, email, email address, envelope ID, first name, formula, full name, initial here, last name, list, note, number, radio, sign here, signer attachment, SSN, text, title, and zip tabs.
  - name: RequestLogs
    description:
      "The RequestLogs resource provide methods that allow you to retrieve
      and delete the API request log files.\n\nThe log files contain the API requests
      associated with your integration. They can aid you in troubleshooting specific
      issues within an integration, or if DocuSign Support requests an API trace log. "
  - name: Resources
    description:
      The Resources resource provides a method which retrieves the base resources
      that are available.
  - name: Services
    description:
      The Services resource provides a method that allow you to retrieve
      the available service versions.
  - name: EnvelopeConsumerDisclosures
    description:
      "The `EnvelopeConsumerDisclosures` resource provides methods that enable
      you to retrieve the Electronic Record and Signature Disclosure (ERSD) for an envelope
      recipient. This is the disclosure that displays to each new recipient who is going
      to sign or add other information, or who is required to view the documents you
      send to them. The recipient must read and agree to the terms of the disclosure
      before they can access and take action on the documents you send. The ERSD does
      not apply to copy-only recipients, but does apply to recipients who must sign
      or view your documents.\n\nYou can retrieve either the default ERSD that DocuSign
      provides for U.S.-based transactions, or a custom ERSD.\n\n## Languages\n\nYou
      specify the language of the disclosure version that you want to retrieve by using
      the `langCode` parameter.\n\n**Important:** The system does not translate the
      ERSD for you. An account administrator must create a version of the account-level
      disclosure for each language that your signers use. \n\nFor more information,
      see [Legal Disclosure](https://support.docusign.com/s/document-item?bundleId=pik1583277475390&topicId=aqg1583277336549.html)."
  - name: EnvelopeDocuments
    description: |+
      <!-- resources aren't rendered the same way
           as other pages. This is a little hack to
           make the headings work better -->
      <style>
      h1, h2, h3 {
        margin-top: 1em;
      }
      </style>

      The EnvelopeDocuments resource provides methods
      that manage documents in an envelope.
      You can:
      * add one or more documents to the envelope
      * retrieve one or more documents from the envelope
      * delete documents from the envelope

      All of the methods in this resource
      operate on on an existing envelope.
      Before you can add documents
      to an envelope,
      you must first create it
      with the [Envelopes: create][envelopescreate] method.


      [envelopescreate]: /docs/esign-rest-api/reference/envelopes/envelopes/create/

  - name: EnvelopeEmailSettings
    description: |-
      The EnvelopeEmailSettings provide methods that allow you to manage the email override settings for an envelope.

      Email override settings change the reply to email address, name, or the BCC for email archive information, for the envelope. Note that changing email settings will only affect email communications that occur after the addition was made.

      The BCC Email address feature is designed to provide a copy of all email communications for external archiving purposes. DocuSign recommends that envelopes sent using the BCC for Email Archive feature, including the BCC Email Override option, include additional signer authentication options. To send a copy of the envelope to a recipient who does not need to sign, use a Carbon Copies or Certified Deliveries Recipient Type.
  - name: Envelopes
    description:
      "The Envelope resource provides methods that allow you to manipulate
      and monitor envelopes. \n\nOnce you have authenticated the user you can use the
      Envelopes: createEnvelope method to create an envelope. You can call the EnvelopeDocuments:
      update or EnvelopeDocuments: updateList method to add additional documents.\n\nSetting
      the `status` property on the envelope to `sent` allows you to send it or `created`
      to save it as a draft.\n\nYou can receive envelope event notifications by setting
      the `eventNotification` properties. When the envelope or recipient status changes
      to one of the specified status codes, a notification is sent to a URL that you
      specify.\n\nIf you have an envelope that you have previously saved, you can modify
      the subject and message, send it, void it, or place it in the purge queue using
      the Envelope: update method.\n\nIn addition to receiving notifications you can
      monitor the status of the envelopes using the following methods:\n* Envelope:
      getEnvelope - To get the status of a envelope. \n* Envelope: listStatus - To get
      the envelope status for a set of envelopes.\n* Envelope: listStatusChanges - To
      get status changes information for one or more envelopes. \n\nIf you need to delete
      a page from a document in an envelope, use the Envelope: deleteDocumentPage method.\n\nThe
      resource also includes a number of methods that allow you to retrieve and set
      the initials and signature for certain types of recipients on the document."
  - name: EnvelopeTemplates
    description:
      The EnvelopeTemplates resource provides methods that allow you to add
      and delete templates on envelopes and documents.
  - name: Folders
    description:
      The Folders resource provides methods that allow you to view contents
      of folders on the account and move envelopes and templates between folders.
  - name: GroupBrands
    description:
      For the custom groups you define for your account, you can assign brands
      to specify the ones that group members can use. Group members can use the available
      brands when they send envelopes or create templates. For more information, see
      [Assign Brands to Groups](https://support.docusign.com/s/document-item?bundleId=pik1583277475390&topicId=iby1583277366335.html).
  - name: Groups
    description: |-
      The Groups resource provides methods that allow you to manage groups for the account.

      Groups can be used to help manage users by associating users with a group. A group can be associated with a Permission Profile, which sets the user permissions for users in that group without having to set the `userSettings` property for each user. You are not required to set Permission Profiles for a group, but this makes it easier to manage user permissions for a large number of users. Groups can also be used with template sharing to limit user access to templates.
  - name: GroupUsers
    description:
      The GroupUsers resource provides methods that allow you to manage the
      users in a group.
  - name: SigningGroups
    description:
      "The SigningGroups resource provides methods that allow you manage
      signing groups.\n\nSigning Groups allow you to create a group of people to which
      an envelope is sent. Any member of that group can open an envelope and sign the
      documents in the envelope with their own signature, even though a signature field
      was not directly assigned to them. When the Signing Group option is used, group
      members that open and sign the envelope are tracked in the envelope history and
      certificate.\n\nWhen one group member opens the envelope, it is temporarily locked
      and if other members try to open the envelope they will see a message saying the
      envelope is currently opened. If the group member exits the envelope without finishing
      the lock expires, allowing other group members to open and complete the envelope.\n\nWhen
      the envelope is complete, all members of the group will receive a completed notification
      and can access the completed envelope. \nThe envelope history and Certificate
      of Completion will show that the envelope was sent to a signing group and record
      which members viewed and signed the envelope.\n\nAn account can have a maximum
      of 50 signing groups. Each signing group can have a maximum of 50 group members.\n\nThe
      Signing Groups feature is only supported in certain DocuSign Enterprise and System
      Automated Premium plans. Your account might not support this option. To access
      this functionality, contact your Account Manager or DocuSign Support (support@docusign.com)
      for assistance.\n\nFor more information, see [Signing Groups](https://support.docusign.com/s/document-item?bundleId=gav1643676262430&topicId=zgn1578456447934.html)."
  - name: SigningGroupUsers
    description:
      The SigningGroupUsers resource provides methods that allow you to manage
      users in Signing Groups.
  - name: TemplateRecipients
    description: |
      The TemplateRecipients resource allows you manage the recipients of an template.

      The exact parameters associated with a recipient depend on the recipient type. There are seven recipient types: Agents, Carbon Copies, Certified Deliveries, Editors, In Person Signers, Intermediaries, and Signers.

      Not all recipients are are available to all account types, review you account plan to determine which recipient types are available to you. If you are working in the development environment, all recipient types are available.

      Each recipient type is described below:

      [Agents](#agents): This recipient can add name and email information for recipients that appear after the recipient in routing order.

      [Carbon Copies](#carboncopies): Use this action if the recipient should get a copy of the template, but the recipient does not need to sign, initial, date or add information to any of the documents. This type of recipient can be placed in any order in the recipient list. The recipient receives a copy of the template when the template reaches the recipient's order in the process flow and when the template is completed.

      [Certified Deliveries](#certifiedDeliveries): Use this action if the recipient must receive the completed documents for the template to be completed, but the recipient does not need to sign, initial, date or add information to any of the documents.

      [Editors](#editors): This recipient has the same management and access rights for the template as the sender and can make changes to the template as if they were using the Advanced Correct feature. This recipient can add name and email information, add or change the routing order and set authentication options for the remaining recipients. Additionally, this recipient can edit signature/initial tabs and data fields for the remaining recipients. The recipient must have a DocuSign account to be an editor.

      [In Person Signers](#inPerson): Use this action if the signer is in the same physical location as a DocuSign user who will act as a Signing Host for the transaction. The recipient added is the Signing Host and new separate Signer Name field appears after Sign in person is selected.

      [Intermediaries](#intermediaries): This recipient can, but is not required to, add name and email information for recipients at the same or subsequent level in the routing order (until subsequent Agents, Editors or Intermediaries recipient types are added).

      [Signers](#signers): Use this action if your recipient must sign, initial, date or add data to form fields on the documents in the template.

      ### Core JSON Layout

      The following shows the core JSON layout for a recipient.

      ```
      "email": "email.name@company.com",
        "name": "recipient name",
        "accessCode": "",
        "addAccessCodeToEmail": false,
        "clientUserIs": null,
        "embeddedRecipientStartURL": "string",
        "customFields": {
          "sample string 1",
          "sample string 2"
        },
        "emailNotification"{
          "emailBody":"email text",
          "emailSubject":"Subject text",
          "supportedLanguage":"en",
        },
        "excludedDocuments": ["2", "4"],
        "idCheckConfigurationName": null,
        "idCheckInformationInput": {
          "addressInformationInput": {
            "addressInformation": {
              "street1": "sample string 1",
              "street2": "sample string 2",
              "city": "sample string 3",
              "state": "sample string 4",
              "zip": "sample string 5",
              "zipPlus4": "sample string 6"
            },
            "displayLevelCode": "sample string 1",
            "receiveInResponse": "sample string 2"
          },
          "dobInformationInput": {
            "dateOfBirth": "sample string 1",
            "displayLevelCode": "sample string 2",
            "receiveInResponse": "sample string 3"
          },
          "ssn4InformationInput": {
            "ssn4": "sample string 1",
            "displayLevelCode": "sample string 2",
            "receiveInResponse": "sample string 3"
          },
          "ssn9InformationInput": {
            "ssn9": "sample string 1",
            "displayLevelCode": "sample string 2"
          }
        },
        "inheritEmailNotificationConfiguration": false,
        "note": "",
        "phoneAuthentication": {
          "recipMayProvideNumber": "sample string 1",
          "validateRecipProvidedNumber": "sample string 2",
          "recordVoicePrint": "sample string 3",
          "senderProvidedNumbers": [
            "sample string 1",
            "sample string 2"
          ]
        },
        "recipientAttachment": null,
        "recipientCaptiveInfo": null,
        "recipientId": "1",
        "requireIdLookup": false,
        "roleName": "",
        "routingOrder": 1,
        "samlAuthentication": {
          "samlAssertionAttributes": [
            {
              "name": "string",
              "value": "string"
            },
            {
              "name": "string",
              "value": "string"
            }
          ]
        },
        "smsAuthentication": {
          "senderProvidedNumbers":[
            "sample string 1",
            "sample string 2"
          ]
        },
        "socialAuthentications": null,
        "templateAccessCodeRequired": false,
        "templateLocked": false,
        "templateRequired": false,
      ...
      ```

      ### Core Recipient Parameters

      The following table contains the descriptions for the core properties for a recipient.

      | Name | Required? | Schema Type | Description |
      | --- | --- | --- | --- |
      | email | Yes | Email | Email of the recipient. Notification will be sent to this email id.<br/>Maximum Length: 100 characters. |
      | name | Yes | String | Full legal name of the recipient.<br/>Maximum Length: 100 characters. |
      | accessCode | No | String | This optional element specifies the access code a recipient has to enter to validate the identity.<br/>Maximum Length: 50 characters. |
      | addAccessCodeToEmail | No | Boolean | This optional attribute indicates that the access code is added to the email sent to the recipient; this nullifies the Security measure of Access Code on the recipient. |
      | clientUserId | No | String | This specifies whether the recipient is embedded or remote.<br/><br/>If the `clientUserId` property is not null then the recipient is embedded. Note that if the `ClientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  **true,** an error is generated on sending. |
      | embeddedRecipientStartURL | No | String | This is a sender provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would, but when the document link in the email is clicked the recipient is redirected, through DocuSign, to this URL to complete their actions. When routing to the URL, it is up to the sender's system (the server responding to the URL) to then request a recipient token to launch a signing session.<br/><br/>If the value `SIGN_AT_DOCUSIGN` is used for this node, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation that would be launched by any partner.<br/><br/>It is important to remember that in a typical embedded workflow the authentication of an embedded recipient is the responsibility of the sending application and DocuSign expects that senders will follow their own process for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process in initiated. However, when the sending application sets  the `EmbeddedRecipientStartURL` property to `SIGN_AT_DOCUSIGN`, the recipient goes directly to the embedded signing or viewing process bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) be used to verify the identity of the recipient.<br/><br>If the `clientUserId` property is NOT set and the `embeddedRecipientStartURL` property is set, DocuSign ignores the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the `embeddedRecipientStartURL` property using merge fields. The available merge fields items are: templateId, recipientId, recipientName, recipientEmail, and customFields. The customFields must be part of the recipient or template. The merge fields are enclosed in double brackets.<br/><br/>_Example_:<br/>`http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]` |
      | customFields | No | customField |An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the template status but otherwise not used by DocuSign. String `customField` properties have a maximum length of 100 characters. |
      | emailNotification | No | emailNotification | An optional complex type that has information for setting the language for the recipient's email information. It is composed of three elements:<br/><br/>*emailBody*: a string with the email message sent to the recipient.<br/>Maximum Length: 10000 characters.<br/><br/>*emailSubject*: a string with the subject of the email sent to the recipient.<br/>Maximum Length: 100 characters.<br/><br/>*supportedLanguage*: The simple type enumeration of the language used. The supported languages, with the language value shown in parenthesis, are: Arabic (ar), Bahasa Indonesia (id), Bahasa Melayu (ms) Bulgarian (bg), Czech (cs), Chinese Simplified (zh_CN), Chinese Traditional (zh_TW), Croatian (hr), Danish (da), Dutch (nl), English US (en), English UK (en_GB), Estonian (et), Farsi (fa), Finnish (fi), French (fr), French Canada (fr_CA), German (de), Greek (el), Hebrew (he), Hindi (hi), Hungarian (hu), Italian (it), Japanese (ja), Korean (ko), Latvian (lv), Lithuanian (lt), Norwegian (no), Polish (pl), Portuguese (pt), Portuguese Brazil (pt_BR), Romanian (ro),Russian (ru), Serbian (sr), Slovak (sk), Slovenian (sl), Spanish (es),Spanish Latin America (es_MX), Swedish (sv), Thai (th), Turkish (tr), Ukrainian (uk) and Vietnamese (vi).<br/><br/>**IMPORTANT:** If this is enabled for one recipient, it overrides the Template Subject and `EmailBlurb` property settings. Also, you must set the  `emailNotification` property for all recipients. |
      | excludedDocuments | No | Array of Strings | Specifies the documents that are not visible to this recipient. Document Visibility must be enabled for the account and the enforceSignerVisibility property must be set to true for the template to use this.<br/><br/>When the enforceSignerVisibility property is set to **true,** documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an template, unless they are specifically excluded using this setting when an template is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an template is sent. |
      | idCheckConfigurationName | No | String |Specifies authentication check by name. The names used here must be the same as the authentication type names used by the account (these name can also be found in the web console sending interface in the Identify list for a recipient). This overrides any default authentication setting.<br/><br/>_Example_:<br/> Your account has ID Check and SMS Authentication available and in the web console Identify list these appear as 'ID Check $' and 'SMS Auth $'. To use ID check in an template, the `idCheckConfigurationName` property must be  set to `ID Check $`. To use SMS, it must be set to `SMS Auth $` and you must add phone number information to the `smsAuthentication` node.|
      | iDCheckInformationInput | No | IdCheckInformationInput | This complex element contains input information related to a recipient ID check. It can include the following information.<br/><br/>*addressInformationInput*: Used to set recipient address information and consists of:<br/><br/>*addressInformation*: consists of six elements, with street2 and zipPlus4 being optional. The elements are: street1, street2, city, state, zip, zipPlus4\. The maximum number of characters in each element are: street1/street2 = 150 characters, city = 50 characters, state = 2 characters, and zip/zipPlus4 = 20 characters.<br/><br/>displayLevelCode: Specifies the display level for the recipient. Values are: ReadOnly, Editable, or DoNotDisplay.<br/><br/>*receiveInResponse*: A Boolean element that specifies if the information needs to be returned in the response.<br/><br/>*dobInformationInput*: Used to set recipient date of birth information and consists of:<br/><br/>*dateOfBirth*: Specifies the recipient's date, month and year of birth.<br/><br/>*displayLevelCode*: Specifies the display level for the recipient. Values are: ReadOnly, Editable, or DoNotDisplay.<br/><br/>*receiveInResponse*: A Boolean element that specifies if the information needs to be returned in the response.<br/><br/>*ssn4InformationInput*: Used to set the last four digits of the recipient's SSN information and consists of:<br/><br/>*ssn4*: Specifies the last four digits of the recipient's SSN.<br/><br/>*displayLevelCode*: Specifies the display level for the recipient. Values are: ReadOnly, Editable, or DoNotDisplay.<br/><br/>*receiveInResponse*: A Boolean element that specifies if the information needs to be returned in the response.<br/><br/>*ssn9InformationInput*: Used to set the recipient's SSN information. Note that the ssn9 information can never be returned in the response. The ssn9 input consists of:<br/><br/><br/><br/>*ssn9*: Specifies the recipient's SSN.<br/><br/>*displayLevelCode*: Specifies the display level for the recipient. Values are: ReadOnly, Editable, or DoNotDisplay. |
      | inheritEmailNotificationConfiguration | No | Boolean | Optional element. If true and the template recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account. |
      | note | No | String | A note that is unique to this recipient. This note is sent to the recipient via the signing email. The note displays in the signing UI near the upper left corner of the document on the signing screen.<br/>Maximum Length: 1000 characters. |
      | phoneAuthentication | No | RecipientPhoneAuthentication | Optional element. Contains the elements: <br/><br/> *recipMayProvideNumber*:Boolean. When **true** thenrecipient can use whatever phone number they choose to.<br/><br/> *senderProvidedNumbers*: ArrayOfString. A list of phone numbers the recipient can use. <br/><br/>*recordVoicePrint* - Reserved <br/><br/>*validateRecipProvidedNumber* - Reserved| |
      | recipientAttachment | No | Attachment | Reserved |
      | recipientId | No | String | Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document. |
      | requireIdLookup | No | Boolean | When **true,** the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity. |
      | roleName | No* | String | Optional element. Specifies the role name associated with the recipient.<br/><br/>This is required when working with template recipients. |
      | routingOrder | Yes | String | This element specifies the routing order of the recipient in the template. |
      | samlAuthentication | No | samlAssertionAttributes | Optional element, account must be set up to use SSO to use this. Contains the name/value pair information for the SAML assertion attributes:<br/><br/>*name*: The name of the SAML assertion attribute.<br/><br/>*value*: The value associated with the named SAML assertion attribute. |
      | smsAuthentication | No | senderProvidedNumbers | Optional element. Contains the element:<br/><br/>*senderProvidedNumbers*: Array that contains a list of phone numbers the recipient can use for SMS text authentication. |
      | socialAuthentications | No | Boolean | Lists the social ID type that can be used for recipient authentication. |
      | templateAccessCodeRequired | No | Boolean | Optional element. Used only when working with template recipients. When **true** and the `TemplateLocked` parameter is set to **true,** the sender must enter an access code. |
      | templateLocked | No | Boolean | Optional element. Used only when working with template recipients. When **true,** the sender cannot change any attributes of the recipient. |
      | templateRequired | No | Boolean | Optional element. Used only when working with template recipients. When **true,**  the sender may not remove the recipient. |

      ## <a name="agents"></a> Agents Recipient

      This recipient can add name and email information for recipients that appear after the recipient in routing order.

      #### Example Agents layout

      ```
      "agents": [{
       <core parameters>
        "canEditRecipientEmails": false,
        "canEditRecipientNames": false
      }],
      ```

      The additional parameters for Agents recipient are shown below:

      | Name | Required? | Schema Type | Description |
      | --- | --- | --- | --- |
      | canEditRecipientEmails | No | Boolean | Optional element. When **true,** the Agents Recipient associated with this Recipient can change the Recipient's pre-populated Email address. This element is only active if enabled for the account. |
      | canEditRecipientNames | No | Boolean | Optional element. When **true,** the Agents Recipient associated with this recipient can change the recipient's pre-populated name (`UserName`). This element is only active if enabled for the account. |

      ## <a name="carbonCopies"></a>Carbon Copies Recipient

      Use this type if the recipient should get a copy of the template, but the recipient does not need to sign, initial, date, or add information to any of the documents. This type of recipient can be placed in any order in the recipient list. The recipient receives a copy of the template when the template reaches the recipient's order in the process flow and when the template is completed.

      #### Example Carbon Copies layout

      ```
      "carbonCopies": [{
       <core parameters>
      ```

      The Carbon Copies recipient uses only the core parameters.

      ## <a name="certifiedDeliveries"></a>Certified Deliveries Recipient

      Use this action if the recipient must receive the completed documents for the template to be completed, but the recipient does not need to sign, initial, date, or add information to any of the documents.

      #### Example Certified Deliveries layout

      ```
      "certifiedDeliveries": [{
      <core parameters>
      }],
      ```
      The Certified Deliveries recipient uses only the core parameters.

      ## <a name="editors"></a>Editors Recipient

      This recipient has the same management and access rights for the template as the sender and can make changes to the template as if they were using the Advanced Correct feature. This recipient can add name and email information, add or change the routing order and set authentication options for the remaining recipients. Additionally, this recipient can edit signature/initial tabs and data fields for the remaining recipients. The recipient must have a DocuSign account to be an editor.

      #### Example Editors layout

      ```
      "editors": [{
       <core parameters>
        "canEditRecipientEmails": false,
        "canEditRecipientNames": false
      }],
      ```

      The additional parameters for Editors recipient are shown below:

      | Name | Required? | Schema Type | Description |
      | --- | --- | --- | --- |
      | canEditRecipientEmails | No | Boolean | Optional element. When **true,** the Editors Recipient associated with this Recipient can change the Recipient's pre-populated Email address. This element is only active if enabled for the account. |
      | canEditRecipientNames | No | Boolean | Optional element. When **true,** the Editors Recipient associated with this recipient can change the recipient's pre-populated name (`UserName`). This element is only active if enabled for the account. |

      ## <a name="inPerson"></a>In Person Signers Recipient

      Use this type if the signer is in the same physical location as a DocuSign user who will act as a Signing Host for the transaction. The recipient added is the Signing Host and new separate Signer Name field appears after Sign in person is selected.

      #### Example In Person Signers layout

      ```
      "inPersonSigners": [{
        "hostEmail": "signing.host@company.com",
        "hostName": "Mike Host",
       <core parameters>
        "autoNavigation": false,
        "defaultRecipient": false,
        "signInEachLocation": false,
        "signatureInfo": null,
        "signerEmail": "signer.name@company.com",
        "signerName": "MC Clap Your Hands",
        "tabs": {
          "approveTabs": null,
          "checkboxTabs": null,
          "companyTabs": null,
          "dateSignedTabs": null,
          "dateTabs": null,
          "declineTabs": null,
          "emailTabs": null,
          "templateIdTabs": null,
          "fullNameTabs": null,
          "initialHereTabs": null,
          "listTabs": null,
          "noteTabs": null,
          "numberTabs": null,
          "radioGroupTabs": null,
          "signHereTabs": [{
          "signerAttachmentTabs": null,
          "ssnTabs": null,
          "textTabs": null,
          "titleTabs": null,
          "zipTabs": null
        }
      }],
      ```

      The additional and changed parameters for In Person Signers recipient are shown below:

      | Name | Required? | Schema Type | Description |
      | --- | --- | --- | --- |
      | hostEmail | Yes | Email | Required element for In Person Signers recipient Type.<br/>Maximum Length: 100 characters.<br/><br/>Specifies the email for the signing host. |
      | hostName | Yes | String | Required element for In Person Signers recipient Type.<br/>Maximum Length: 100 characters.<br/><br/>Specifies the email for the signing host.|
      | autoNavigation | No | Boolean | Specifies whether auto navigation is set for the recipient.|
      | defaultRecipient | No | Boolean | When **true,** this is the default recipient for the template. This option is used with the CreateTemplateFromTemplatesAndForms method. |
      | signInEachLocation | No | Boolean | When **true** and the feature is enabled in the sender's account, the signing recipient is required to draw signatures and initials at each signature/initial tab (instead of adopting a signature/initial style or only drawing a signature/initial once). |
      | signatureInfo | No | String | Optional element only used with recipient types In Person Signers and Signers.<br/><br/>Allows the sender to pre-specify the signature name, signature initials, and signature font used in the signature stamp for the recipient. |
      | signerEmail | No | String | Optional element. The email address for an InPersonSigner recipient Type.<br/>Maximum Length: 100 characters. |
      | signerName | Yes | String | Required element with recipient type In Person Signers.<br/>Maximum Length: 100 characters.<br/><br/>The full legal name of a signer for the template. |
      | tabs | No | Tab | Optional element only used with recipient types In Person Signers and Signers.<br/><br/>Specifies the Tabs associated with the recipient. See the See the [EnvelopeRecipientTabs resource](/docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/)  for more information about tabs. for more information about tabs. |

      ## <a name="intermediaries"></a>Intermediaries Recipient

      This recipient can, but is not required to, add name and email information for recipients at the same or subsequent level in the routing order (until subsequent Agents, Editors or Intermediaries recipient types are added).

      #### Example Intermediaries layout

      ```
      "intermediaries": [{
      <core parameters>
        "canEditRecipientEmails": false,
        "canEditRecipientNames": false
      }],
      ```

      The parameters for Intermediaries recipient are shown below:

      | Name | Required? | Schema Type | Description |
      | --- | --- | --- | --- |
      | canEditRecipientEmails | No | Boolean | Optional element. When **true,** the Agents Recipient associated with this Recipient can change the Recipient's pre-populated Email address. This element is only active if enabled for the account. |
      | canEditRecipientNames | No | Boolean | Optional element. When **true,** the Agents Recipient associated with this recipient can change the recipient's pre-populated name (`UserName`). This element is only active if enabled for the account. |

      ## <a name="signers"></a>Signers Recipient

      Use this action if your recipient must sign, initial, date, or add data to form fields on the documents in the template.

      #### Example Signers layout

      ```
      "Signers": [{
      <core parameters>
        "autoNavigation": false,
        "defaultRecipient": false,
        "signInEachLocation": false,
        "signatureInfo": null,
        "tabs": {
          "approveTabs": null,
          "checkboxTabs": null,
          "companyTabs": null,
          "dateSignedTabs": null,
          "dateTabs": null,
          "declineTabs": null,
          "emailTabs": null,
          "templateIdTabs": null,
          "fullNameTabs": null,
          "initialHereTabs": null,
          "listTabs": null,
          "noteTabs": null,
          "numberTabs": null,
          "radioGroupTabs": null,
          "signHereTabs": [{
          "signerAttachmentTabs": null,
          "ssnTabs": null,
          "textTabs": null,
          "titleTabs": null,
          "zipTabs": null
        }
        "deliveryMethod":"",
        "deliveredDateTime":"String Content",
        "signedDateTime":"String Content",
        "offlineAttributes":{
          "deviceName":"String Content",
          "deviceModel":"String Content",
          "gpsLatitude":"String Content",
          "gpsLongitude":"String Content",
          "accountEsignId":"String Content"
        }
      }],
      ```

      The additional parameters for Signers recipient are shown below:

      | Name | Required? | Schema Type | Description |
      | --- | --- | --- | --- |
      | autoNavigation | No | Boolean | Specifies whether auto navigation is set for the recipient.|
      | defaultRecipient | No | Boolean | When **true,** this is the default recipient for the template. This option is used with the CreateTemplateFromTemplatesAndForms method. |
      | signInEachLocation | No | Boolean | When **true** and the feature is enabled in the sender's account, the signing recipient is required to draw signatures and initials at each signature/initial tab (instead of adopting a signature/initial style or only drawing a signature/initial once). |
      | signatureInfo | No | String | Optional element only used with recipient types In Person Signers and Signers.<br/><br/>Allows the sender to pre-specify the signature name, signature initials, and signature font used in the signature stamp for the recipient. |
      | signerEmail | No | String | Optional element. The email address for an InPersonSigner recipient Type.<br/>Maximum Length: 100 characters. |
      | signerName | Yes | String | Required element with recipient type In Person Signers.<br/>Maximum Length: 100 characters.<br/><br/>The full legal name of a signer for the template. |
      | tabs | No | Tab | Optional element only used with recipient types In Person Signers and Signers.<br/><br/>Specifies the Tabs associated with the recipient. See the See the [EnvelopeRecipientTabs resource](/docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/)  for more information about tabs. section for more information about tabs. |
      | deliveryMethod | No | String | Reserved: For DocuSign use only.|
      | deliveredDateTime | No | DateTime | Reserved: For DocuSign use only. |
      | signedDateTime | No | DateTime | Reserved: For DocuSign use only. |
      | offlineAttributes | No | &nbsp; | Reserved: For DocuSign use only.|
  - name: TemplateCustomFields
    description:
      "The TemplateCustomFields resource provides methods that allow you
      manage custom fields in an template. \n\nCustom fields can be used in the templates
      for your account to record information about the template, help search for templates
      and track information. The template custom fields are shown in the Template Settings
      section when a user is creating an template in the DocuSign member console. The
      template custom fields are not seen by the template recipients.\n\nThere are two
      types of custom fields:\n\n- `text`: Enables the sender to enter the value for
      the field. \n- `list`: Enables the sender to select the value of the field from
      a predetermined list."
  - name: TemplateDocumentFields
    description:
      "The TemplateDocumentFields resource provides methods that allow you
      to manage custom fields on a document.\n\nYou can create custom versions of standard
      fields that combine of field properties, such as font type or size, or a validation
      setting. \n\nNote: Some advanced features and options are supported only in certain
      DocuSign plans. Your account plan might not support some options discussed in
      this help topic. For more information about which options are available for your
      account, check your account plan or contact your Account Manager."
  - name: TemplateDocuments
    description: |
      <!-- resources aren't rendered the same way
           as other pages. This is a little hack to
           make the headings work better -->
      <style>
      h1, h2, h3 {
        margin-top: 1em;
      }
      </style>

      The TemplateDocuments resource provides methods
      that manage documents in a template.
      You can:
      * Add one or more documents to the template
      * Retrieve one or more documents from the template
      * Delete documents from the template

      All of the methods associated with this resource
      operate on an existing template.
      Before you can add documents
      to a template,
      you must first create it
      with the [Templates:: Create][templatescreate] method.

      [templatescreate]: /docs/esign-rest-api/reference/templates/templates/create/
  - name: TemplateLocks
    description: |-
      The TemplateLocks resource provides methods that allow you to
      manage locks on a template.

      To prevent users from changing a template while another user is
      modifying it, you can lock the template and set the time until
      the lock expires.

      For example, you would use the following flow:

      1. Lock the template.
      2. Make changes to template.
      3. Delete the template lock and save the changes. If the template has a password, you must supply the template password to save the changes.

      **Note:** To use template locks, the user must have envelope locking capability enabled.
  - name: Templates
    description:
      "The Template resource provides methods that allow you to manipulate
      and monitor templates. \n\nOnce you have authenticated the user you can use the
      Templates: createTemplate method to create a template. You can call the TemplateDocuments:
      update or TemplateDocuments: updateList method to add more documents.\n\nIf you
      have a template that you have previously saved, you can modify the subject and
      message, send it, void it, or purge it from the DocuSign system using the Template:
      update method.\n\nIn addition to receiving notifications, you can monitor the
      status of the templates using the following methods:\n\n* Template: getTemplate
      - Gets the status of a template. \n* Template: listStatus - Gets the status for
      a set of templates.\n* Template: listStatusChanges - Gets status change information
      for one or more templates. \n\nIf you need to delete a page from a document in
      a template, use the Template: deleteDocumentPage method.\n\nThe resource also
      includes a number of methods that allow you to retrieve and set the initials and
      signature for certain types of recipients on the document."
  - name: TemplateRecipientTabs
    description:
      "<!-- resources aren't rendered the same way\n     as other pages.
      This is a little hack to\n     make the headings work better -->\n<style>\nh1,
      h2, h3 {\n  margin-top: 1em;\n}\n</style>\n\nThe TemplateRecipientTabs resource
      provides methods that let you\nadd,\nupdate,\nand delete tabs\nfrom an envelope.\nTabs
      are associated with a specific recipient\nin an envelope\nand are only used by
      the recipient types\nIn Person Signers and Signers. \n\n\n## Tab Types\n\nThis
      table lists the available tab types.\n\n<br>\n\n\n| Tab Type              | Description
      |\n| :-------              | :---------- |\n| Approve Tab           | Place this
      tab on the document if you want the recipient to approve documents in an envelope
      without placing a signature or initials on the document. If the recipient clicks
      the Approve tab during the signing process, the recipient is considered to have
      signed the document. No information is shown on the document for the approval,
      but it is recorded as a signature in the envelope history. |\n| Checkbox Tab          |
      Place this tab on the document in a location where the recipient can select a
      yes/no (on/off) type option. |\n| Company Tab           | Place this tab on the
      document where you want the recipient's company name to appear. |\n| Date Signed
      Tab       | Place this tab on the document where you want the date the recipient
      signed the document to appear. |\n| Date Tab              | Place this tab on
      the document where you want the recipient to enter a date. Date tabs are single-line
      fields that allow date information to be entered in any format. The tooltip for
      this tab recommends entering the date as MM/DD/YYYY, but this is not enforced.
      The format entered by the signer is retained. If you need a particular date format
      enforced, DocuSign recommends using a Text tab with a Validation Pattern and Validation
      Message to enforce the format. |\n| Decline Tab           | Place this tab on
      the document where you want to give the recipient the option of declining an envelope.
      If the recipient clicks the Decline tab during the signing process, the envelope
      is voided. |\n| Email Address Tab     | Place this tab on a document where you
      want the recipient's email, as entered in the recipient information, to appear.
      |\n| Email Tab             | This is a single-line field that accepts all characters.
      |\n| Envelope ID Tab       | Place this tab on the document where you want the
      envelope ID for to appear. Recipients cannot enter or change the information in
      this tab. It is for informational purposes only. |\n| First Name Tab        |
      Place this tab on a document where you want the recipient's first name to appear.
      This tab splits the recipient's name (as entered in the recipient information)
      into sections based on spaces and uses the first section as the first name. |\n|
      Formula Tab           | This tab is used to add a calculated field to a document.
      Envelope recipients cannot directly enter information into the tab. The formula
      tab calculates and displays a new value when changes are made to the reference
      tab values. The reference tab information and calculation operations are entered
      in the \"formula\" element. See the Using the Calculated Fields Feature quick
      start guide or DocuSign Service User Guide for more information about formulas.
      \ |\n| Full Name Tab         | Place this tab on the document where you want the
      recipient's full name to appear. |\n| Initial Here Tab      | Place this tab where
      the recipient must initial the document. This tab can be set to be optional.  |\n|
      Last Name Tab         | Place this tab on a document where you want the recipient's
      last name to appear. This tab splits the recipient's name (as entered in the recipient
      information) into sections based on spaces and uses the last section as the last
      name. |\n| List Tab              | This tab has a list of options that a recipient
      can select. The `listItems` parameter is used to set the options that can be selected.
      \ |\n| Note Tab              | Place this tab on the document where you want to
      add a note for the recipient on a document. |\n| Number Tab            | This
      tab is a field where the recipient can enter numbers and decimal (.) points.  |\n|
      Radio Group Tab       | This group tab is used to place radio buttons on a document.
      The `radios` parameter is used to add and place the radio buttons associated with
      the group. Only one radio button can be selected in a group.  |\n| Sign Here Tab
      \        | Place this tab where the recipient must sign the document. This tab
      can be set to be optional.  |\n| Signer Attachment Tab | The signer attachment
      is where the recipient initiates the process of adding supporting documents to
      an envelope. |\n| SSN Tab               | This tab is a single-line field where
      the recipient can enter numbers. A Social Security Number can be typed with or
      without dashes. |\n| Text Tab              | This tab is a field where the recipient
      can enter any type of characters.  |\n| Title Tab             | Place this tab
      on the document where you want the recipient's title to appear. |\n| Zip Tab               |
      This tab is a single-line field where the recipient can enter numbers. |\n\n\n##
      Using Custom Tabs in Envelopes and Templates \n\nCustom Tabs can be added to envelopes
      and templates\nby setting the `customTabId` property\nwhen creating an envelope
      or template recipient\nor when adding a new tab for an existing recipient.\nThe
      custom tab must be added as the correct tab type.\nFor example if the custom tab
      type is text, it cannot be used as a number tab.\n\nWhen the `customTabId` property
      is set,\nthe new tab inherits all the custom tab properties.\nRequired information
      that is not included in the custom tab,\nsuch as document ID and page ID, must
      be included when adding the tab.\nIf the custom tab does not have anchor settings,
      the X and Y positions must be included.\n\nAfter the tab is created,\nit is treated
      as any other tab for updating or deleting. \n\n## Anchoring Tabs\n\nThe tab anchoring
      option\nallows you to send documents for signature\nthat do not have a fixed layout
      or format.\nIn these documents you might not know\nthe absolute location of the
      tabs\nwhen you design your API client application because the tabs must move with
      text.\nAs an alternative to sending X and Y coordinates for tabs,\nthe DocuSign
      Service can derive an anchor location for the tab\nby correlating anchor information
      to data within the document.\n\nWhen the DocuSign Service receives a request that
      contains tabs\nwith anchor information,\nit searches the document for instances
      of the `anchorString` property.\nWhen found,\nit places a tab of the specified
      type for the designated recipient.\nTab positions are established by setting offsets
      for the tab.\n\nWhen you apply tabs to the document,\nDocuSign does not remove
      or replace the text in the `anchorString` property. You can hide codified anchors
      by using the same font color as the background of the document. So the anchor
      can be used by DocuSign processes and it will not be visible on the document.\n\nTo
      use an anchoring option:\n\n1. Identify the location in the document by text string.
      You can use a pre-existing text string or add a new one.\nFor best performance
      DocuSign recommends using single word anchor strings when possible, especially
      when there are a large number of pages in the envelope. \nFor example, you might
      want to add a Sign Here tab to the \"Borrower's Signature\" lines in a document,
      but that phrase might occur in places in the document where you don't want to
      tab to appear. In this case, you could add the text \"BorrowerSignHere\" in white
      font color (so that isn't visible in the document) to all the places you want
      Sign Here tabs to appear and use \"BorrowerSignHere\" as the anchor string. \n1.
      Reference the anchor through the `anchorString` property of the tab.\n1. Determine
      the offset from the anchor string location to where the tab should be placed.
      \n\nSetting a positive value in the `anchorXOffset` property moves the tab right
      on the page and positive values in the  `anchorYoffset` prove moves the tab down
      the page. The `anchorUnits` property specifies the units used for the offsets.\nFor
      Sign Here and Initial Here tabs the bottom-left of the anchor string is equivalent
      to position (0,0), and the bottom-left of the tab graphic is placed relative to
      that.\nFor all other tabs the bottom-left of the anchor string is equivalent to
      position (0,0), and the top-left of the tab graphic is placed relative to that.\nDocuSign
      does not currently provide tools to derive the offset values. Determination of
      the proper offset will likely require some trial-and-error.\n\n### Rules for working
      with anchor tags\n\nWhen anchor tabs are used, all documents in the envelope are
      searched for the `anchorString` property.\n\n* You set the text of the anchor
      string in the `anchorString` property. DocuSign tabs are created for each instance
      of the `anchorString` property within the document, so special care must be taken
      to establish unique anchor strings that do not result in unintentional tabs.\n*
      You cannot use the same anchored tab for different recipients for the same document.\n*
      The DocuSign system cannot search for text that is embedded in an image when checking
      for anchor strings.\n* X or Y offsets supplied for a tab apply to all instances
      of the tab in the document. To use different offsets at different locations in
      the document for the same recipient, create multiple, unique anchor tabs.\n* If
      the Y offset value of an anchor string would force a tab outside of the page boundaries,
      the tag is placed at the page boundary. If the X offset value places a tab outside
      of the page boundaries, the error message `Invalid_User_Offset` is sent. The error
      message includes the X offset that resulted in the error.\n* The system does not
      support an anchor string embedded in the form of a PDF X-object in the document.\n*
      The system does not re-flow the text that surrounds the anchor tabs. It is the
      responsibility of the document author to provide sufficient white space to contain
      the potential width of the ultimate tab value.\n\n### Tips and Tricks\n\nThe following
      are tips for effective use of anchor tags:\n* In order to avoid unintentional
      conflicts between text contained in an `anchorString` property and the text that
      naturally exists in documents, establish a codified syntax for the anchor string
      text that is unlikely to appear elsewhere in a document.\n* Develop an extensible
      and consistent syntax that can be used across multiple document types.\n* Especially
      for documents that have variable numbers of tabs or signers, author the source
      document to include hidden anchor tabs for all potential signers/permutations.
      Then, control the tabs that are actually placed by including/excluding the anchor
      tabs in the request. This approach allows a single document to be used for all
      use cases instead of maintaining separate documents for each scenario.\n\n## Automatically
      Populating Tabs\n\nIf you want similar tab types\nto automatically populate with
      the same data,\nyou must follow these guidelines:\n\n* Each `tabLabel` entry must
      have the characters\n  `\\\\*` in front of the label.\n  If you omit the `\\\\*`
      prefix,\n  only the first occurrence of the tab is populated.\n\n  When automatically
      populating tabs,\n  the `tabLabel` must not contain any spaces.\n  In the JSON
      example below,\n  the Text tabs  properties `StudentLastName` and `StudentFirstName`\n
      \ will be auto-populated as specified (\"Doe\" and \"John\")\n  each place they
      appear throughout the envelope.\n\n  ```\n  \"tabs\": {\n    \"textTabs\": [\n
      \   {\n      \"tabLabel\": \"\\\\*StudentLastName\",\n      \"value\": \"Doe\"\n
      \   },\n    {\n      \"tabLabel\": \"\\\\*StudentFirstName\",\n      \"value\":
      \"John\"\n    }]\n  }\n  ```\n\n* Each occurrence of the tab must have identical
      properties.\n\n  For example, suppose there are two Text tabs in a document,\n
      \ each with `tabLabel` set to `Name`.\n  If one tab has the `bold` property set
      to **true,**\n  and the other has the `bold` property set to **false,**\n  only
      the first one will be populated.\n  In order to automatically populate both occurrences\n
      \ of the `Name` Text tabs,\n  the `bold` property must be set to the same value
      for both tabs.\n"
  - name: TemplateViews
    description: |
      The TemplateViews resource
      provides a method that returns a URL
      that you can embed in your application
      to generate a template view that uses the DocuSign UI.

      One template view is available:

      * Edit View: The DocuSign UI for editing a template.

      This resource is related to the [EnvelopeViews][envelopeviews] resource.
      Both resources enable you to embed the DocuSign UI into your application.


      [envelopeviews]: /docs/esign-rest-api/reference/envelopes/envelopeviews/
  - name: UserCustomSettings
    description: |-
      The UserCustomSettings resource provides methods that allow you to manage the custom settings for a user.

      Custom settings are a flexible way to store and retrieve custom user information that can be used in your own system.

      There is a limit on the size for all the custom user settings for a single user. All the custom user settings for a single user is limited to 4,000 characters, which includes the xml and json structure for the settings.
  - name: UserProfiles
    description:
      The UserProfiles resource provides methods that allow you to manage
      a user's profile.
  - name: Users
    description: |-
      The Users resource provides methods that enable you to manage users for an account.

      The following User methods do not use the `title` property in the Users object:

      - create
      - delete
      - deleteProfileImage
      - get
      - getProfileImage
      - getSettings
      - list
      - update
      - updateList
      - updateProfileImag
      - updateSettings

      Instead, you can retrieve and set the user's job title by using the UserProfiles:Get and UserProfiles:Update methods. For more information, see [UserProfiles](/docs/esign-rest-api/reference/users/userprofiles/).
  - name: UserSignatures
    description:
      The UserSignatures resource provides methods that allow you manage
      the  initials and signature images for a user.
  - name: Contacts
    description:
      "DocuSign eSignature includes a contacts list (also referred to as
      an address book) to help make sending envelopes even easier. When you send an
      envelope, the recipients' names and email addresses are automatically added to
      your contacts list. You can use the contacts list to quickly add recipients to
      the envelopes you send. The `Contacts` resource provides methods that enable you
      to manage your contacts.\n\n"
  - name: EnvelopeAttachments
    description:
      "Envelope attachments are files that are associated an envelope.\nThey
      are not visible to senders or to recipients\nand are not converted to PDF or any
      other format.\nThese are files that your application uses to store information.\n\nEnvelope
      attachments are available only through the API. \n\n<!-- std notice DEVDOCS-114911
      -->\n<ds-inlinemessage kind=\"information\" markdown=\"1\">\n\nIt's easy to confuse
      envelope attachments,\nwhich are developer-only files associated with an envelope,\nwith
      signer attachments.\n\nTo learn about the different types of attachments, see
      [Attachments](/docs/esign-rest-api/esign101/concepts/documents/attachments/) in
      the concept guide.\n\n</ds-inlinemessage>\n<!-- end notice DEVDOCS-114911 -->\n\n"
  - name: AccountPermissionProfiles
    description:
      "An account permission profile is assigned to a group of users, enabling
      you to set permissions for all of the users in the group at the same time. You
      are not required to set Permission Profiles for a group, but it makes it easier
      to manage user permissions for a large number of users. \n\nDocuSign offers the
      following account permission profiles:\n\n- DocuSign Viewer\n- DocuSign Sender\n-
      Account Administrator\n\nYou can also create your own custom account permission
      profiles.\n"
  - name: PowerForms
    description: |
      PowerForms enable you to create self-service documents for signature. A PowerForm is an envelope initiated from a URL that you make available for signers to complete. You can either add a PowerForm to your website or email the URL to recipients. DocuSign saves the data that recipients enter so  you can easily integrate it with your other applications.

      For more information, see [Using PowerForms](https://support.docusign.com/s/document-item?bundleId=jbx1643062255110&topicId=eke1578456649038.html).

      **Note:** PowerForms are available only for DocuSign Enterprise accounts.


      ### Errors

      PowerForm methods return the following 404 errors:

      - `PowerForms_Recipient_Denied_Documents`: The recipient is denied access to the documents.
      - `PowerForms_DigitalCerts_Shared_Tabs_Not_Allowed`: Shared tags are not allowed because a digital certificate is required
      for a signer.
      - `PowerForms_DigitalCerts_Free_Form_Tabs_Not_Allowed`: Signers that are required to use a digital certificate must have at
      least one required, non-conditional signature or initials tab.
      - `PowerForms_DigitalCerts_Multiple_Recipients_Routing_Order`: Signers that are required to use a digital certificate must be the
      only recipient in a routing order. Edit the routing order or remove the digital certificate requirement.
      - `PowerForms_DigitalCerts_Markup_Not_Allowed`: Document markup is not allowed because a digital certificate is
      required for a signer.
      - `PowerForms_Incomplete_Recipient`: The recipient's username, email, or role is not set.
      - `PowerForms_PowerFormId_Required`: A `powerFormId` is required.
      - `PowerForms_PowerFormId_Mismatch`: A `powerFormId` mismatch has occurred.
  - name: PowerFormData
    description:
      "The PowerFormData resource provides a method for accessing PowerForm
      data.

      "
  - name: AccountTabSettings
    description: |
      The AccountTabSettings resource provides methods that allow you to manage
      tab settings for an account.
  - name: ENoteConfigurations
    description: |
      The ENoteConfigurations resource provides methods that allow you to manage
      information for the eNote eOriginal integration.
  - name: WorkspaceItems
    description: |
      The WorkspaceItems resource provides methods that enable you to manage
      workspace items.
  - name: Workspaces
    description:
      "A workspace is a collaborative space for sharing documents and managing
      workflows. A workspace has a single owner who must be a DocuSign user. The owner
      can invite others to the workspace as collaborators. Individuals who are not DocuSign
      users must create a DocuSign account to join a workspace as a collaborator.\n
      \nYou can create an envelope directly from a workspace.\n\nWorkspaces store the
      following information:\n\n- **Files:** Files uploaded to a workspace for storage
      or reuse.\n- **Documents:** A document is a component of a transaction, template,
      or workspace. When a file is added to a transaction, template, or workspace, it
      is copied as a document. Each document in a workspace has a single owner.\n- **Templates:**
      A set of documents that you can use to create a transaction or a workspace.\n-
      **Transactions:** A transaction is a series of workflow events related to one
      or more documents. These events route the documents to one or more individuals
      for the purposes of doing business. Each transaction has a single owner (the sender).\n\n**Note:**
      Documents in a template are not individually listed as files."
  - name: ChunkedUploads
    description:
      "A chunked upload is a temporary file that you upload in parts and
      stage at DocuSign, then refer to as the content for other API calls. For example,
      you might use it for document content when assembling an envelope or template.
      \n\nA chunked upload is linked to the DocuSign account member who initiated the
      API call. This user is the only user who is able to reference the chunked upload.\n\nA
      ChunkedUpload is intended to be an area for briefly staging data for use with
      other DocuSign API calls. The ChunkedUpload API endpoints do not provide an action
      to download the ChunkedUpload's content.\n\nThe typical flow for using a chunked
      upload involves the following steps:\n\n1) Initiate the chunked upload with content
      representing part 0.\n\n2) Add more parts to the chunked upload until you have
      transmitted the entirety of the content.\n\n3) Commit the chunked upload, preparing
      it for use with other API calls.\n\n4) Assemble a DocuSign envelope with a document
      that includes a reference to the chunked upload as the content.\n\n5) Continue
      with envelope-related processes.\n\n**Note:** You must fully upload and use a
      chunked upload within 20 minutes of initializing it.\n\nAfter the chunked upload
      has been correctly referenced within another API call, it becomes unavailable
      for any further use and is promptly removed from the system.\n\nChunked uploads
      have the following limits, which are configured per DocuSign environment, account,
      or integrator:\n\n- The maximum number of all of a member's unexpired, unconsumed
      ChunkedUploads. The default value is 64. \n- The maximum total size of all of
      a member's unexpired, unconsumed  ChunkedUploads. The default value is 1 GB. \n-
      The amount of time that a chunked upload is active after you initialize it. The
      default value is 20 minutes.\n"
  - name: EnvelopeFormData
    description:
      The EnvelopeFormData resource provides a method for downloading the
      data that users have entered into a form associated with an envelope.
  - name: EnvelopeDocumentVisibility
    description:
      "The Envelope Document Visibility resource provides methods for managing
      document visibility by recipient.

      "
  - name: TemplateDocumentVisibility
    description:
      "The Template Document Visibility resource provides methods for managing
      template document visibility by recipient.

      "
  - name: AccountPasswordRules
    description:
      The AccountPasswordRules resource provides methods that allow you to
      obtain and update account password rules, as well as membership and account rules.
  - name: AccountWatermarks
    description:
      The AccountWatermarks resource provides methods that allow you to obtain,
      preview and update watermark information.
  - name: PaymentGatewayAccounts
    description: This object contains details about a payment gateway account.
  - name: NotaryJournals
    description: ""
  - name: IdentityVerifications
    description: |-
      The DocuSign Identity Verification process requires a signer to submit an image of their valid government ID and wait for the image to be uploaded and verified before they can access a document.

      Identity Verification supports government photo IDs and European eIDs, analyzing the document security features and matching the name on the agreement against the name on the ID. After a successful verification, the signer can view the agreement and sign as usual.

      To use Identity Verification, the [DocuSign Identity Verification](https://www.docusign.com/products/identify) product must be enabled for your account.

      For more information, see [Digital ID Verification of Government-Issued IDs](https://www.docusign.com/blog/can-i-see-a-photo-of-your-id-digital-verification-of-real-world-ids).
  - name: EnvelopeDocumentHtmlDefinitions
    description: ""
  - name: DocumentResponsiveHtmlPreview
    description:
      "**Note:** Responsive Signing is disabled by default. To use this functionality,
      an account administrator must switch the account setting `enableResponsiveSigning`
      to **true.** \nAlso note that Smart Sections (creating a signable HTML document
      that uses collapsible sections and rotating tables) are premium features. To request
      them, contact your DocuSign account manager."
  - name: EnvelopeHtmlDefinitions
    description: ""
  - name: ResponsiveHtmlPreview
    description:
      "**Note:** Responsive Signing is disabled by default. To use this functionality,
      an account administrator must switch the account setting `enableResponsiveSigning`
      to **true.** \nAlso note that Smart Sections (creating a signable HTML document
      that uses collapsible sections and rotating tables) are premium features. To request
      them, contact your DocuSign account manager."
  - name: TemplateDocumentResponsiveHtmlPreview
    description:
      "**Note:** Responsive Signing is disabled by default. To use this functionality,
      an account administrator must switch the account setting `enableResponsiveSigning`
      to **true.** \nAlso note that Smart Sections (creating a signable HTML document
      that uses collapsible sections and rotating tables) are premium features. To request
      them, contact your DocuSign account manager."
  - name: TemplateResponsiveHtmlPreview
    description:
      "**Note:** Responsive Signing is disabled by default. To use this functionality,
      an account administrator must switch the account setting `enableResponsiveSigning`
      to **true.** \nAlso note that Smart Sections (creating a signable HTML document
      that uses collapsible sections and rotating tables) are premium features. To request
      them, contact your DocuSign account manager."
  - name: TemplateDocumentHtmlDefinitions
    description: ""
  - name: TemplateHtmlDefinitions
    description: ""
  - name: EnvelopeTransferRules
    description: |-
      Envelope transfer rules enable administrators to transfer envelopes and templates from user to another. For example, you might do this when an employee leaves the company. To transfer ownership of envelopes and templates, the **Transfer Custody** feature must be enabled for your account.

      For more information about this functionality, see [Transfer Envelopes and Templates](https://support.docusign.com/s/document-item?bundleId=pik1583277475390&topicId=vyz1583277376194.html).
  - name: NotificationDefaults
    description:
      DocuSign eSignature provides email notifications to senders and recipients
      for many different scenarios. By default, all notification options are turned
      on. Notification preferences give you control over the communications that you
      receive. For more information, see [Manage Notifications](https://support.docusign.com/s/document-item?bundleId=jux1643235969954&topicId=dhc1578456326388.html).
  - name: BulkSend
    description: |+
      You can use bulk send lists send documents to a large number of recipients on a
      recurring basis. You can use a bulk send list to send up to 1,000 copies at a time.

      After you create a bulk send list, it persists and can be reused and edited any number of times.

      You can customize individual copies of the envelope. For example, you can customize the email notification and
      language and add personalized notes.

      ### Requirements and limitations

      * Bulk send must be enabled for your account. To enable this feature, contact your Account Manager or Business Development representative.
      * You can include up to 1,000 bulk recipients in each request.
      * When you send an envelope with bulk recipients, envelopes are added to a bulk recipient queue and sent in a metered fashion.
        An account can have a total of 2,000 total envelopes in the queue at a time.
        If you reach this limit, you will get an error message. Wait and resend the envelope at a later time.
        If you hit queue limits often, contact your Account Manager to see about modifying the queue limits for your account.

      ### Related topics

      - [Bulk sending envelopes](/docs/esign-rest-api/esign101/concepts/envelopes/bulk-send/) concept guide
      - [How to bulk send envelopes](/docs/esign-rest-api/how-to/bulk-send-envelopes/)

  - name: BCCEmailArchive
    description: |-
      You can configure automatic archiving of emails sent from all of your DocuSign accounts.

      For more information, see [Email Archive Configuration](https://support.docusign.com/s/document-item?bundleId=pik1583277475390&topicId=xjm1583277371373.html).

      **Note:** This feature is only available for certain account plans and must be enabled by DocuSign.
  - name: TabsBlob
    description: This resource has been deprecated.
  - name: Comments
    description:
      "The comments resource provides a method that enables you to download
      a PDF file containing all of the comments that recipients and the sender have
      added to the documents in an envelope.\n\nComments are disabled by default. To
      use the comments feature, an account administrator must enable comments on the
      account (in the `accountSettingsInformation` object, set the `enableSigningExtensionComments`
      property to **true**). \n\nFor more information, see [Comments Settings](https://support.docusign.com/s/document-item?bundleId=pik1583277475390&topicId=odr1583277453624.html)."
  - name: FavoriteTemplates
    description: |-
      The FavoriteTemplates resource enables you to get, add, and remove favorite templates.

      ### Related topics

      - [Common API Tasks: Working With Favorite Templates](https://www.docusign.com/blog/developers/common-api-tasks-working-favorite-templates)
  - name: Notary
    description: |+
      DocuSign eNotary makes the notarization process fully digital
      for senders, signers, and notaries.
      It enables a notary public to act as an in-person witness
      to electronic signing of documents.
      Check the [DocuSign eNotary support documentation](https://support.docusign.com/s/document-item?bundleId=gko1642535666104&topicId=jiv1635359045452.html)
      to see which jurisdictions are supported.

  - name: NotaryJurisdiction
    description: Creating, updating, and deleting notary jurisdiction objects.
  - name: EnvelopeWorkflowDefinition
    description:
      "Describes the workflow for an envelope or template. These methods
      enable you to use the [scheduled sending](/docs/esign-rest-api/esign101/concepts/recipients/scheduled-sending/)
      and [delayed routing](/docs/esign-rest-api/esign101/concepts/recipients/delayed-routing/)
      features.

      "
  - name: AccountSignatures
    description: |-
      In certain countries, stamps are used to certify documents. This resource provides methods to manage stamps available in your account.

      To use these endpoints, your account must have Managed Stamps enabled. Contact your DocuSign account manager for more information.

      ### Related topics
      - [Sending and Signing with eHanko](https://support.docusign.com/s/articles/Sending-and-Signing-with-eHanko)
      - [DocuSign eSignature Admin Guide: Stamps](https://support.docusign.com/s/document-item?=&bundleId=pik1583277475390&topicId=cex1583277417267.html)
  - name: ConnectSecret
    description: ""
  - name: DocumentResponsiveHtml
    description: ""
  - name: ResponsiveHtml
    description: ""
  - name: ReservedDomains
    description: ""
  - name: EnvelopePublish
    description:
      The EnvelopePublish resource provides a method for submitting existing
      envelopes to a webhook using an ad hoc Connect configuration. See the [Connect
      category](/docs/esign-rest-api/reference/connect/) for related endpoints.
  - name: DocumentGeneration
    description: |-
      The Document Generation endpoints enable you
      to automatically generate customized documents
      where traditional field data is embedded
      seamlessly into the agreement. Document
      information is dynamically populated, generating
      final documents that are professional looking and
      well-formatted.

      See [Document Generation for DocuSign eSignature][webapp support page]
      to learn more about this feature.



      [webapp support page]: https://support.docusign.com/s/document-item?bundleId=als1679428547895&topicId=ldx1679428689631.html
  - name: Authorizations
    description:
      A user authorization is created to share access between users on the
      same account. One user can be given access to sign, manage, or send on behalf
      of another. These endpoints allow you to create, delete, and manage user authorizations.
x-ds-categories:
  - name: Envelopes
    summary: This section shows you how to create and send envelopes.
    description: |
      The eSignature API Envelope category includes the resources and methods for sending and managing envelopes and envelope data.

      Envelopes are the key objects in the DocuSign platform. As a result, they are complex data structures with few required fields. See the [How-to guides](/docs/esign-rest-api/how-to/) for examples and solutions.

      To learn more about envelopes, see [Envelopes](/docs/esign-rest-api/esign101/concepts/envelopes/).
  - name: Connect
    summary:
      "DocuSign Connect is the DocuSign platform notification service. The service
      uses webhooks to proactively notify your application when an event occurs that
      your application wants to know about. DocuSign recommends that all applications
      use Connect instead of polling the DocuSign Signature Service. This section provides
      information about Connect configuration and logging. \n\n**Note:** To make API
      calls to any of the Connect endpoints, you must be an account administrator.\n\nFor
      more information about Connect, see [DocuSign Connect](/platform/webhooks/connect/)
      and [Custom Connect Configuration](https://support.docusign.com/s/document-item?bundleId=pik1583277475390&topicId=khw1583277390582.html)."
    description: |
      The Connect service enables your application to be called via
      HTTPS when an event of interest occurs.

      Use the Connect service to "end the polling madness." With
      Connect, there is no need for your application to poll DocuSign
      every 15 minutes to learn the latest about your envelopes.

      Instead, you register your interest in one or more types of
      envelope or recipient events. Then, when an interesting event
      occurs, the DocuSign platform will contact your application with
      the event's details and data. You can register interest in
      envelopes sent by particular users in your account, or for
      envelopes sent by any user.

      Connect can empower your organization to manage document actions
      as they occur, and allows you to track their changes within your
      own systems. Upon completion, envelope information, including
      document content, can be stored in your own databases or CMS
      systems, and these events can be triggered via webhooks
      delivering messages to your application.

      **Note:** To make API calls to any of the Connect endpoints, you must be an account administrator.

      ## Incoming Connect Calls

      To use the Connect service, your application needs to provide an
      HTTPS URL that can be called from the public Internet. If your
      application runs on a server behind your organization's firewall,
      then you will need to create a "pinhole" in the firewall to allow
      the incoming Connect calls from DocuSign to reach your
      application. You can also use other techniques such as proxy
      servers and DMZ networking for receiving the incoming calls.

      Connect delivers events over HTTP requests in JSON or XML.
      See [DocuSign Connect overview](/platform/webhooks/connect/).

      If your application is not configured to accept post messages,
      DocuSign will NOT return an additional post error response to
      your listener application. If you've enabled logging on your
      configuration, it will be logged in Admin under the configuration
      failure log.

      ## Per-envelope Connect Configuration

      Instead of registering a general Connect configuration and
      listener, an individual envelope can have its own Connect
      configuration. See the
      [`eventNotification`](/docs/esign-rest-api/reference/envelopes/envelopes/create/#schema__envelopedefinition_eventnotification)
      property for envelopes.

      ## Historical Publish Endpoint

      To submit existing envelopes to an endpoint, use the [EnvelopePublish](/docs/esign-rest-api/reference/envelopes/envelopepublish/) resource.
  - name: Templates
    summary: Template creation and management
    description: |-
      Use the Templates category to manage your account's templates.

      This section shows you how to perform the following tasks:

      * Create, list, get, update, and delete templates.
      * Manage the notification and group sharing settings for templates.
      * Fetch and rotate pages from a document used by a template.

      You can create templates either programmatically or through the DocuSign web interface and then used by your application.
  - name: SigningGroups
    summary: Send a signing request to a group of potential signers.
    description: |-
      Use the Signing Group category to manage signing groups that allow anyone in the group to sign a document. When you send an envelope to a signing group, anyone in the group can open it and sign it with their own signature.

      This category shows account administrators how to create a signing group and manage the users in the group.

      **Note:** To create and manage signing groups, you must be an account administrator.

      For more information about this topic, see [Signing Groups](https://support.docusign.com/s/document-item?bundleId=gav1643676262430&topicId=zgn1578456447934.html).
  - name: Folders
    summary: Folders allow you to organize envelopes and templates.
    description: |-
      Use the Folders category to organize envelopes and templates.
      You can list the folder contents and move envelopes and templates between folders.
  - name: CustomTabs
    summary: Custom tabs
    description:
      "Custom Tabs enable accounts to have one or more pre-configured (custom)
      tabs. Custom tabs save time when users are tagging documents since the users don't
      have to manually set the tabs' parameters.\n\nThis category enables custom tabs
      to be managed programmatically, including creation, deletion, etc. \n"
  - name: CloudStorage
    summary: This section shows you how to manage your cloud storage providers and users.
    description: |-
      Use the Cloud Storage category to list the user's cloud storage document contents.

      It is also used to manage the user's authentication/accounts with cloud storage service providers.
  - name: Users
    summary: User management
    description: |-
      Use the Users category to manage the users in your accounts.

      You can:

      * Set custom user settings.
      * Manage a users profile.
      * Add delete users.
      * Add and delete the initials and signature images for a user.
  - name: UserGroups
    summary: Group users for common permissions and branding
    description: |-
      Use the User Groups category to manage your permissions groups.

      You can:

      * Create and delete groups.
      * Add users to, and delete users from, your groups.
      * Manage the brand information associated with a group.
  - name: BulkEnvelopes
    summary: Bulk envelopes
    description:
      Use the BulkEnvelopes category to manage the sending of envelopes to
      multiple recipients.
  - name: Accounts
    summary: Account management
    description: |+
      Use the Account category for various account management tasks including:

      * Programmatically creating and deleting accounts.
      * Getting information about an account and its capabilities.
      * Branding the account with custom colors, message text, and more.
      * Account charges.

      The Accounts category also includes end points for listing the recipient names associated with an email address that was used by the account. For example, a single email address is often shared by multiple members of a family.


  - name: Billing
    summary: Invoices
    description: |-
      Use the Billing category to manage the following billing related tasks:

      * Retrieve and update billing plan information.
      * Retrieve invoices.
      * Retrieve and update payment information.
  - name: Diagnostics
    summary: Diagnostics and request logging
    description: |-
      The Diagnostics category provides miscellaneous end points.

      They include:
      * Requesting and managing the API call-logging feature. (Perfect for debugging your app!)
      * Getting information on the API's resources and versions.
  - name: PowerForms
    summary:
      The PowerForms category provides methods that enable you to create and
      manage fillable forms.
    description:
      The PowerForms category enables you to create and manage PowerForms
      that you can use for self service and email forms.
  - name: Workspaces
    summary: A DocuSign workspace is a collaboration area for sharing files and data.
    description:
      "A workspace is a collaborative space for sharing documents and managing
      workflows. A workspace has a single owner who must be a DocuSign user. The owner
      can invite others to the workspace as collaborators. Individuals who are not DocuSign
      users must create a DocuSign account to join a workspace as a collaborator.\n
      \nYou can create an envelope directly from a workspace.\n\nWorkspaces store the
      following information:\n\n- **Files:** Files uploaded to a workspace for storage
      or reuse.\n- **Documents:** A document is a component of a transaction, template,
      or workspace. When a file is added to a transaction, template, or workspace, it
      is copied as a document. Each document in a workspace has a single owner.\n- **Templates:**
      A set of documents that you can use to create a transaction or a workspace.\n-
      **Transactions:** A transaction is a series of workflow events related to one
      or more documents. These events route the documents to one or more individuals
      for the purposes of doing business. Each transaction has a single owner (the sender).\n\n**Note:**
      Documents in a template are not individually listed as files."
  - name: Payments
    summary: Manage Payments
    description:
      This category includes resources for managing payment gateways. Payment
      information is added to envelopes via methods in the Envelopes category.
  - name: EmailArchive
    summary:
      This section shows you how to set and manage the BCC email addresses that
      you want to use to archive the emails that DocuSign sends.
    description: |-
      Email archives enable DocuSign partners and other multi-account customers to easily archive emails sent through DocuSign. The `EmailArchive` resource provides methods for managing your email archive configuration, which consists of the BCC email address or addresses that you want to use to archive DocuSign emails. Each account can use up to five BCC email addresses for archiving purposes.

      For more information, see [Email Archive Configuration](https://support.docusign.com/s/document-item?bundleId=pik1583277475390&topicId=xjm1583277371373.html).

      **Note:** This feature is only available for certain account plans and must be enabled by DocuSign.
  - name: Notary
    summary: |
      DocuSign eNotary makes the notarization process fully digital
      for senders, signers, and notaries.
      It enables a notary public to act as an in-person witness
      to electronic signing of documents.
    description: |
      DocuSign eNotary makes the notarization process fully digital
      for senders, signers, and notaries.
      It enables a notary public to act as an in-person witness
      to electronic signing of documents.
