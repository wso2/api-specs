openapi: 3.0.1
info:
  title: User Service
  description: >
    This is a generated connector for [SAPS4HANA Intelligent Trade Claims Management API v1.0.0](https://help.sap.com/viewer/902b9d277dfe48fea582d28849d54935/CURRENT/en-US) OpenAPI specification. 
    
    The User service allows you to create, add, and delete information about users in SAPS4HANA Intelligent Trade Claims Management.
  x-ballerina-init-description: >
    The connector initialization requires setting the API credentials.

    Create and configure an OAuth2 client credentials by following [this guide](https://help.sap.com/viewer/b865ed651e414196b39f8922db2122c7/LATEST/en-US/7aefa21a65f94b25b7e639c3931b6f83.html).
  x-ballerina-display:
    label: SAPS4HANA ITCM User
    iconPath: "icon.png"
  contact:
    name: ITCM
  license:
    name: SAP.
  version: 1.0.0
externalDocs:
  description: Business Documentation for User Service
  url: https://help.sap.com/viewer/902b9d277dfe48fea582d28849d54935/CURRENT/en-US/a70cc9edd46742a098a9362a1e3120b1.html
# servers:
# - url: https://{host}.{environment}.{domain}/v1
#   variables:
#     host:
#       default: api.dev1
#       description: Your host where SAP Intelligent Trade Claims Management has deployed
#     environment:
#       default: e2e
#       description: Your defined environment for your SAP Intelligent Trade Claims Management account
#     domain:
#       default: eurekacloud.io
security:
- OAuth2: []
tags:
- name: User
paths:
  /users:
    post:
      tags:
      - User
      summary: Create a new User
      description: Using this API, user can create a User. As of now, batch creation is not supported
      operationId: createUser
      requestBody:
        description: userProfileDTO
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfileDTO'
        required: true
      responses:
        '201':
          description: Success Created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponseDTO'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseUnauthorizedMessage'
        '403':
          description: Forbidden (insufficient authorization).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseForbiddenMessage'
      deprecated: false
      security:
      - OAuth2: []
components:
  schemas:
    AvatarIconDTO:
      title: AvatarIconDTO
      type: object
      properties:
        type:
          type: string
          enum:
          - GenderNeutralIcon
          - Initials
          - Image
        value:
          type: string
    UserNameDTO:
      title: UserNameDTO
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
    UserProfileDTO:
      title: UserProfileDTO
      type: object
      example:
        email: sam@sap.com
        phone: '+13977168971'
        userName:
          firstName: sam
          lastName: bill
      properties:
        avatarIcon:
          $ref: '#/components/schemas/AvatarIconDTO'
        creationTime:
          type: string
        dateFormat:
          type: string
        email:
          type: string
        externalUserId:
          type: string
        familyNameFirst:
          type: boolean
        id:
          type: integer
          format: int64
        language:
          type: string
        phone:
          pattern: (^[0-9]*)
          type: string
        pictureId:
          type: integer
          format: int64
        role:
          type: string
        s4ExternalUserId:
          type: string
        status:
          type: string
          enum:
          - INITIAL
          - WAITING_COMPANY
          - WAITED_COMPANY
        tenantId:
          type: integer
          format: int64
        timeFormat:
          type: string
        timeZone:
          type: string
        userName:
          $ref: '#/components/schemas/UserNameDTO'
        userUpdateState:
          type: integer
          format: int64
    ResponseForbiddenMessage:
      type: object
      example:
        message: Access denied
        timestamp: '2021-01-18T18:33:18.914Z'
      properties:
        message:
          type: string
        timestamp:
          type: string
          format: date-time
        uri:
          type: string
      title: Forbidden Message
    ResponseUnauthorizedMessage:
      type: object
      example:
        message: Unauthorized/API key not found
        timestamp: '2021-01-18T18:33:18.914Z'
      properties:
        message:
          type: string
        timestamp:
          type: string
          format: date-time
        uri:
          type: string
      title: Unauthorized Message
    UserResponseDTO:
      title: User Response
      type: object
      example:
        id: 3456
        message: Success Created
        timestamp: '2021-01-18T18:33:18.914Z'
      properties:
        id:
          type: integer
        message:
          type: string
        timestamp:
          type: string
          format: date-time
  securitySchemes:
    OAuth2:
      type: oauth2
      description: To use this API, you need to get OAuth client credentials (client ID and secret) from SAP ITCM, and be authorized to use the relevant scope. Refer to the <a href="https://developer.sap.com/api-reference/authentication/getting-started.html">full authentication information</a> for more information.
      flows:
        clientCredentials:
          tokenUrl: https://colgate-dev1.authentication.us30.hana.ondemand.com/oauth/token
          scopes: {}
x-sap-shortText: The User service represents Users that can be posted to SAP Intelligent Trade Claims Management by a user.