openapi: 3.0.1
info:
  title: Browshot API
  description:
    This is a generated connector for [Browshot API v1.17.0](https://browshot.com/api/documentation) OpenAPI specification. 
    
    The Browshot API provides services to get screenshots of any website in real time.
  x-ballerina-init-description: >
    The connector initialization requires setting the API credentials.

    Create an [Browshot Account](https://browshot.com/login) and obtain token by navigating to `Settings` by following [this guide](https://browshot.com/api/documentation).
  x-ballerina-display:
    label: Browshot
    iconPath: "icon.png"
  termsOfService: https://browshot.com/terms
  contact:
    name: API Support
    url: https://browshot.com/contact
    email: support@browshot.com
  version: 1.17.0
servers:
- url: https://api.browshot.com/api/v1
security:
- apiKeyQuery: []
paths:
  /screenshot/create:
    get:
      tags:
      - Screenshot
      summary: Request a screenshot
      description: |
        Screenshots requests to private and shared instances require a positive balance.

        *IMPORTANT*: Remember that you can only do 100 free screenshots per month. To used a premium instance, use instance_id=65 for example.
      operationId: CreateScreenshot
      parameters:
      - name: url
        in: query
        description: URL of the page to get a screenshot for
        required: true
        schema:
          type: string
      - name: instance_id
        in: query
        description: instance ID to use
        required: true
        schema:
          type: integer
      - name: size
        in: query
        description: screenshot size - "screen" (default) or "page"
        schema:
          type: string
          default: screen
          enum:
          - screen
          - page
      - name: cache
        in: query
        description: use a previous screenshot (same URL, same instance) if it was
          done within <cache_value> seconds. The default value is 24hours. Specify
          cache=0 if you want a new screenshot.
        schema:
          type: integer
          default: 86400
      - name: delay
        in: query
        description: number of seconds to wait after the page has loaded. This is
          used to let JavaScript run longer before taking the screenshot. Use delay=0
          to take screenshots faster.
        schema:
          maximum: 60
          minimum: 0
          type: integer
          default: 5
      - name: flash_delay
        in: query
        description: number of seconds to wait after the page has loaded if Flash
          elements are present. Use flash_delay=0 to take screenshots faster.
        schema:
          maximum: 30
          minimum: 0
          type: integer
          default: 10
      - name: screen_width
        in: query
        description: width of the browser window. For desktop browsers only.
        schema:
          maximum: 2000
          minimum: 1
          type: integer
          default: 1024
      - name: screen_height
        in: query
        description: 'height of the browser window. For desktop browsers only. (Note:
          full-page screenshots can have a height of up to 15,000px)'
        schema:
          maximum: 2000
          minimum: 1
          type: integer
          default: 768
      - name: priority
        in: query
        description: assign priority to the screenshot (for private instances only)
        schema:
          maximum: 3
          minimum: 1
          type: integer
      - name: referer
        in: query
        description: use a custom referrer header - paid screenshots only
        schema:
          type: string
      - name: post_data
        in: query
        description: send a POST requests with post_data, useful for filling out forms
          - paid screenshots only
        schema:
          type: string
      - name: cookie
        in: query
        description: set a cookie for the URL requested (see Custom POST Data, Referer
          and Cookie) Cookies should be separated by a ; - paid screenshots only
        schema:
          type: string
      - name: script
        in: query
        description: URL of javascript file to execute after the page load event
        schema:
          type: string
      - name: details
        in: query
        description: level of information available with screenshot/info
        schema:
          maximum: 3
          minimum: 1
          type: integer
          default: 2
      - name: html
        in: query
        description: saves the HTML of the rendered page which can be retrieved by
          the API call screenshot/html. This feature costs *1 credit* per screenshot.
        schema:
          maximum: 1
          minimum: 0
          type: integer
          default: 0
      - name: max_wait
        in: query
        description: 'maximum number of seconds to wait before triggering the PageLoad
          event. Note that delay will still be used. (default: 0 = disabled)'
        schema:
          maximum: 60
          minimum: 0
          type: integer
          default: 0
      - name: headers
        in: query
        description: any custom HTTP headers. (Not supported with Internet Explorer)
        schema:
          type: string
      - name: shots
        in: query
        description: take multiple screenshots of the same page. This costs 1 additional
          credit for every 2 additional screenshots.
        schema:
          maximum: 10
          minimum: 1
          type: integer
          default: 1
      - name: shot_interval
        in: query
        description: number of seconds between 2 screenshots
        schema:
          maximum: 10
          minimum: 1
          type: integer
          default: 5
      - name: hosting
        in: query
        description: hosting option - s3 or browshot
        schema:
          type: string
          enum:
          - s3
          - browshot
      - name: hosting_height
        in: query
        description: maximum height of the thumbnail to host
        schema:
          maximum: 15000
          minimum: 1
          type: integer
      - name: hosting_width
        in: query
        description: maximum height of the thumbnail to host
        schema:
          maximum: 2000
          minimum: 1
          type: integer
      - name: hosting_scale
        in: query
        description: scale of the thumbnail to host
        schema:
          type: number
          format: float
          default: 1.0
      - name: hosting_bucket
        in: query
        description: S3 bucket to upload the screenshot or thumbnail (required for
          S3)
        schema:
          type: string
      - name: hosting_file
        in: query
        description: file name to use (for S3 only)
        schema:
          type: string
      - name: hosting_headers
        in: query
        description: list of headers to add to the S3 object (for S3 only)
        schema:
          type: string
      responses:
        200:
          description: Request accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Screenshot'
        403:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScreenshotError'
      x-ms-trigger: none
  /screenshot/multiple:
    get:
      tags:
      - Screenshot
      summary: Request multiple screenshots
      description: |
        Request multiple screenshots in one API call. The API call accepts all the parameters supported by screenshot/create.
        You can specify up to 10 URLs and 10 instances for a total of 100 screenshots in one API call.
      operationId: CreateMultipleScreenshots
      parameters:
      - name: url
        in: query
        description: URL of the page to get a screenshot for. You can specify multiple
          url parameters (up to 10).
        required: true
        schema:
          type: string
      - name: instance_id
        in: query
        description: instance ID to use. You can specify multiple instance_id parameters
          (up to 10).
        required: true
        schema:
          type: integer
      - name: size
        in: query
        description: screenshot size - "screen" (default) or "page"
        schema:
          type: string
          default: screen
          enum:
          - screen
          - page
      - name: cache
        in: query
        description: use a previous screenshot (same URL, same instance) if it was
          done within <cache_value> seconds. The default value is 24hours. Specify
          cache=0 if you want a new screenshot.
        schema:
          type: integer
          default: 86400
      - name: delay
        in: query
        description: number of seconds to wait after the page has loaded. This is
          used to let JavaScript run longer before taking the screenshot. Use delay=0
          to take screenshots faster.
        schema:
          maximum: 60
          minimum: 0
          type: integer
          default: 5
      - name: flash_delay
        in: query
        description: number of seconds to wait after the page has loaded if Flash
          elements are present. Use flash_delay=0 to take screenshots faster.
        schema:
          maximum: 30
          minimum: 0
          type: integer
          default: 10
      - name: screen_width
        in: query
        description: width of the browser window. For desktop browsers only.
        schema:
          maximum: 2000
          minimum: 1
          type: integer
          default: 1024
      - name: screen_height
        in: query
        description: 'height of the browser window. For desktop browsers only. (Note:
          full-page screenshots can have a height of up to 15,000px)'
        schema:
          maximum: 2000
          minimum: 1
          type: integer
          default: 768
      - name: priority
        in: query
        description: assign priority to the screenshot (for private instances only)
        schema:
          maximum: 3
          minimum: 1
          type: integer
      - name: referer
        in: query
        description: use a custom referrer header - paid screenshots only
        schema:
          type: string
      - name: post_data
        in: query
        description: send a POST requests with post_data, useful for filling out forms
          - paid screenshots only
        schema:
          type: string
      - name: cookie
        in: query
        description: set a cookie for the URL requested (see Custom POST Data, Referer
          and Cookie) Cookies should be separated by a ; - paid screenshots only
        schema:
          type: string
      - name: script
        in: query
        description: URL of javascript file to execute after the page load event
        schema:
          type: string
      - name: details
        in: query
        description: level of information available with screenshot/info
        schema:
          maximum: 3
          minimum: 1
          type: integer
          default: 2
      - name: html
        in: query
        description: saves the HTML of the rendered page which can be retrieved by
          the API call screenshot/html. This feature costs *1 credit* per screenshot.
        schema:
          maximum: 1
          minimum: 0
          type: integer
          default: 0
      - name: max_wait
        in: query
        description: 'maximum number of seconds to wait before triggering the PageLoad
          event. Note that delay will still be used. (default: 0 = disabled)'
        schema:
          maximum: 60
          minimum: 0
          type: integer
          default: 0
      - name: headers
        in: query
        description: any custom HTTP headers. (Not supported with Internet Explorer)
        schema:
          type: string
      - name: hosting
        in: query
        description: hosting option - s3 or browshot
        schema:
          type: string
          enum:
          - s3
          - browshot
      - name: hosting_height
        in: query
        description: maximum height of the thumbnail to host
        schema:
          maximum: 15000
          minimum: 1
          type: integer
      - name: hosting_width
        in: query
        description: maximum height of the thumbnail to host
        schema:
          maximum: 2000
          minimum: 1
          type: integer
      - name: hosting_scale
        in: query
        description: scale of the thumbnail to host
        schema:
          type: number
          format: float
          default: 1.0
      - name: hosting_bucket
        in: query
        description: S3 bucket to upload the screenshot or thumbnail (required for
          S3)
        schema:
          type: string
      - name: hosting_file
        in: query
        description: file name to use (for S3 only)
        schema:
          type: string
      - name: hosting_headers
        in: query
        description: list of headers to add to the S3 object (for S3 only)
        schema:
          type: string
      responses:
        200:
          description: Request accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScreenshotList'
        403:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScreenshotError'
      x-ms-trigger: none
  /screenshot/info:
    get:
      tags:
      - Screenshot
      summary: Query screenshot status
      description: Once a screenshot has been requested, its status must be checked
        until it is either "error" or "finished".
      operationId: GetScreenshotInfo
      parameters:
      - name: id
        in: query
        description: screenshot ID received from /api/v1/screenshot/create
        required: true
        schema:
          type: integer
      - name: details
        in: query
        description: level of details about the screenshot and the page
        schema:
          maximum: 3
          minimum: 0
          type: integer
          default: 2
      responses:
        200:
          description: Screenshot found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Screenshot'
        default:
          description: Screenshot not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScreenshotInfoError'
  /screenshot/list:
    get:
      tags:
      - Screenshot
      summary: Get information about screenshots
      description: Get information about the last 100 screenshots requested.
      operationId: GetMultipleScreenshotsInfo
      parameters:
      - name: limit
        in: query
        description: maximum number of screenshots' information to return
        schema:
          maximum: 100
          minimum: 1
          type: integer
          default: 100
      - name: status
        in: query
        description: get list of screenshot in a given status (error, finished, in_process)
        schema:
          type: string
          enum:
          - error
          - finished
          - in_process
      responses:
        200:
          description: list of screenshot information
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScreenshotList'
        default:
          description: Screenshot not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScreenshotError'
      x-ms-visibility: none
  /screenshot/search:
    get:
      tags:
      - Screenshot
      summary: Search for screenshots
      description: Search for screenshots of a specific URL.
      operationId: SearchScreenshot
      parameters:
      - name: url
        in: query
        description: look for a string matching the URL requested
        required: true
        schema:
          type: string
      - name: limit
        in: query
        description: maximum number of screenshots' information to return
        schema:
          maximum: 100
          minimum: 1
          type: integer
          default: 50
      - name: status
        in: query
        description: get list of screenshot in a given status (error, finished, in_process)
        schema:
          type: string
          enum:
          - error
          - finished
          - in_process
      responses:
        200:
          description: list of screenshot information
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScreenshotList'
        default:
          description: Screenshot not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScreenshotError'
      x-ms-visibility: none
  /screenshot/host:
    get:
      tags:
      - Screenshot
      summary: Host thumbnails on your own S3 account or on Browshot.
      description: You can host screenshots and thumbnails on your own S3 account
        or on Browshot.
      operationId: HostScreenshot
      parameters:
      - name: id
        in: query
        description: screenshot ID
        required: true
        schema:
          type: integer
      - name: hosting
        in: query
        description: 'hosting option: s3 or browshot'
        required: true
        schema:
          type: string
          enum:
          - s3
          - browshot
      - name: width
        in: query
        description: width of the thumbnail
        schema:
          maximum: 2000
          minimum: 1
          type: integer
      - name: height
        in: query
        description: height of the thumbnail
        schema:
          maximum: 15000
          minimum: 1
          type: integer
      - name: scale
        in: query
        description: scale of the thumbnail
        schema:
          type: number
          format: double
          default: 1.0
      - name: bucket
        in: query
        description: S3 bucket to upload the screenshot or thumbnail - required with
          hosting=s3
        schema:
          type: string
      - name: file
        in: query
        description: file name to use - optional, used with hosting=s3
        schema:
          type: string
      - name: headers
        in: query
        description: HTTP headers to add to your S3 object - optional, used with hosting=s3
        schema:
          type: string
      responses:
        200:
          description: list of screenshot information
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScreenshotHost'
        default:
          description: Screenshot not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScreenshotInfoError'
      x-ms-trigger: none
  /screenshot/thumbnail:
    get:
      tags:
      - Screenshot
      summary: Retrieve a thumbnail image
      description: |
        Unlike the other API calls, this API sends back the thumbnail as a PNG file, not JSON. The HTTP response code indicates whether the screenshot was successful (200), or incomplete (404) or failed (404). If the screenshot failed or is not finished, a default image "Not found" is sent.

        You can crop your screenshots. The crop is done first, then the thumbnail. You can take a 1024x768 screenshot, crop it to 768x768, and get it scaled down to 300x300.
      operationId: GetThumbnail
      parameters:
      - name: id
        in: query
        description: screenshot ID
        required: true
        schema:
          type: integer
      - name: width
        in: query
        description: width of the thumbnail
        schema:
          maximum: 2000
          minimum: 1
          type: integer
      - name: height
        in: query
        description: height of the thumbnail
        schema:
          maximum: 15000
          minimum: 1
          type: integer
      - name: scale
        in: query
        description: scale of the thumbnail
        schema:
          type: number
          format: double
          default: 1.0
      - name: zoom
        in: query
        description: zoom 1 to 100 percent
        schema:
          maximum: 100
          minimum: 1
          type: integer
          default: 100
      - name: ratio
        in: query
        description: 'Use fit to keep the original page ration, and fill to get a
          thumbnail for the exact width and height.  specified. If you provide both
          width and height, you need to specify the ratio: fit to keep the original
          width/height ratio (the thumbnail might be smaller than the specified width
          and height), or fill to crop the image if necessary.'
        schema:
          type: string
          default: fit
          enum:
          - fit
          - fill
      - name: left
        in: query
        description: left edge of the area to be cropped
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: right
        in: query
        description: right edge of the area to be cropped
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: top
        in: query
        description: top edge of the area to be cropped
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: bottom
        in: query
        description: bottom edge of the area to be cropped
        schema:
          type: integer
      - name: format
        in: query
        description: image as PNG or JPEG
        schema:
          type: string
          default: png
          enum:
          - png
          - jpeg
      - name: shot
        in: query
        description: get the second or third screenshot if multiple screenshots were
          requested
        schema:
          maximum: 10
          minimum: 1
          type: integer
          default: 1
      - name: quality
        in: query
        description: JPEG quality factor (for JPEG thumbnails only)
        schema:
          maximum: 100
          minimum: 1
          type: integer
          default: 100
      responses:
        200:
          description: thumbnail
          content: {}
        404:
          description: Screenshot not found
          content: {}
      x-ms-trigger: none
  /screenshot/share:
    get:
      tags:
      - Screenshot
      summary: Share a screenshot
      description: |
        You can make your screenshots public, add notes, and share it with your friends and colleagues. Only screenshots which are successfully completed can be shared.n the thumbnail. You can take a 1024x768 screenshot, crop it to 768x768, and get it scaled down to 300x300.
      operationId: ShareScreenshot
      parameters:
      - name: id
        in: query
        description: screenshot ID
        required: true
        schema:
          type: integer
      - name: note
        in: query
        description: note to add on the sharing page
        schema:
          type: string
      responses:
        200:
          description: list of screenshot information
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScreenshotHost'
        default:
          description: Screenshot not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScreenshotInfoError'
      x-ms-trigger: none
  /screenshot/delete:
    get:
      tags:
      - Screenshot
      summary: Delete screenshot data
      description: |
        You can delete details of your screenshots to remove any confidential information.
      operationId: DeleteScreenshot
      parameters:
      - name: id
        in: query
        description: screenshot ID
        required: true
        schema:
          type: integer
      - name: data
        in: query
        description: |
          data to remove. You can specify multiple of them (separated by a ,): *image* (image files), *url* (url requested), *metadata* (time added, time finished, post data, cookie and referer used for the screenshot), *all* (all data and files)
        schema:
          type: string
          default: image
      responses:
        200:
          description: list of screenshot information
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScreenshotShort'
        default:
          description: Screenshot not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScreenshotError'
      x-ms-trigger: none
  /screenshot/html:
    get:
      tags:
      - Screenshot
      summary: Get the HTML code
      description: |
        Retrieve the HTML code of the rendered page. This API call should be used when html=1 was specified in the screenshot request.
      operationId: GetHTML
      parameters:
      - name: id
        in: query
        description: screenshot ID
        required: true
        schema:
          type: integer
      responses:
        default:
          description: HTML code
          content: {}
  # /batch/ceate:
  #   post:
  #     tags:
  #     - Batch
  #     summary: Requests thousands of screenshtos at once
  #     description: |
  #       Get hundreds or thousands of screenshots from a text file. You can use this API call or the dashboard. Unlike the other API calls, you must issue a POST request with the Content-Type "multipart/form-data" in order to upload the text file. The text file must contain the list of URLs to request, 1 URL per line. Failed screenshots will be tried up to 3 times before giving up.
  #     operationId: CreateBatch
  #     parameters:
  #     - name: hosting
  #       in: query
  #       description: hosting option - s3 or browshot
  #       schema:
  #         type: string
  #         enum:
  #         - s3
  #     - name: hosting_height
  #       in: query
  #       description: maximum height of the thumbnail to host
  #       schema:
  #         maximum: 15000
  #         minimum: 1
  #         type: integer
  #     - name: hosting_width
  #       in: query
  #       description: maximum height of the thumbnail to host
  #       schema:
  #         maximum: 2000
  #         minimum: 1
  #         type: integer
  #     - name: hosting_scale
  #       in: query
  #       description: scale of the thumbnail to host
  #       schema:
  #         type: number
  #         format: float
  #         default: 1.0
  #     - name: hosting_bucket
  #       in: query
  #       description: S3 bucket to upload the screenshot or thumbnail (required for
  #         S3)
  #       schema:
  #         type: string
  #     - name: hosting_file
  #       in: query
  #       description: file name to use (for S3 only)
  #       schema:
  #         type: string
  #     - name: hosting_headers
  #       in: query
  #       description: list of headers to add to the S3 object (for S3 only)
  #       schema:
  #         type: string
  #     requestBody:
  #       description: Request payload to create batch
  #       content:
  #         multipart/form-data:
  #           schema:
  #             required:
  #             - instance_id
  #             properties:
  #               instance_id:
  #                 type: integer
  #                 description: instance ID to use
  #                 format: int32
  #               file:
  #                 type: string
  #                 description: text file to use
  #                 format: binary
  #               size:
  #                 type: string
  #                 description: screenshots size - "screen" (default) or "page"
  #                 default: screen
  #                 enum:
  #                 - screen
  #                 - page
  #               name:
  #                 type: string
  #                 description: name of the batch
  #               width:
  #                 maximum: 2000
  #                 minimum: 1
  #                 type: integer
  #                 description: thumbnail width.
  #                 format: int32
  #                 default: 1024
  #               height:
  #                 maximum: 15000
  #                 minimum: 1
  #                 type: integer
  #                 description: thumbnail height
  #                 format: int32
  #               delay:
  #                 maximum: 60
  #                 minimum: 0
  #                 type: integer
  #                 description: number of seconds to wait after the page has loaded.
  #                   This is used to let JavaScript run longer before taking the screenshot.
  #                   Use delay=0 to take screenshots faster.
  #                 format: int32
  #                 default: 5
  #               flash_delay:
  #                 maximum: 30
  #                 minimum: 0
  #                 type: integer
  #                 description: number of seconds to wait after the page has loaded
  #                   if Flash elements are present. Use flash_delay=0 to take screenshots
  #                   faster.
  #                 format: int32
  #                 default: 10
  #               screen_width:
  #                 maximum: 2000
  #                 minimum: 1
  #                 type: integer
  #                 description: width of the browser window. For desktop browsers only.
  #                 format: int32
  #                 default: 1024
  #               screen_height:
  #                 maximum: 2000
  #                 minimum: 1
  #                 type: integer
  #                 description: 'height of the browser window. For desktop browsers
  #                   only. (Note: full-page screenshots can have a height of up to
  #                   15,000px)'
  #                 format: int32
  #                 default: 768
  #               priority:
  #                 maximum: 3
  #                 minimum: 1
  #                 type: integer
  #                 description: assign priority to the screenshot (for private instances
  #                   only)
  #                 format: int32
  #               referer:
  #                 type: string
  #                 description: use a custom referrer header - paid screenshots only
  #               post_data:
  #                 type: string
  #                 description: send a POST requests with post_data, useful for filling
  #                   out forms - paid screenshots only
  #               cookie:
  #                 type: string
  #                 description: set a cookie for the URL requested (see Custom POST
  #                   Data, Referer and Cookie) Cookies should be separated by a ; -
  #                   paid screenshots only
  #               script:
  #                 type: string
  #                 description: URL of javascript file to execute after the page load
  #                   event
  #               details:
  #                 maximum: 3
  #                 minimum: 1
  #                 type: integer
  #                 description: level of information available with screenshot/info
  #                 format: int32
  #                 default: 2
  #               html:
  #                 maximum: 1
  #                 minimum: 0
  #                 type: integer
  #                 description: saves the HTML of the rendered page which can be retrieved
  #                   by the API call screenshot/html. This feature costs *1 credit*
  #                   per screenshot.
  #                 format: int32
  #                 default: 0
  #               max_wait:
  #                 maximum: 60
  #                 minimum: 0
  #                 type: integer
  #                 description: 'maximum number of seconds to wait before triggering
  #                   the PageLoad event. Note that delay will still be used. (default:
  #                   0 = disabled)'
  #                 format: int32
  #                 default: 0
  #               headers:
  #                 type: string
  #                 description: any custom HTTP headers. (Not supported with Internet
  #                   Explorer)
  #               format:
  #                 type: string
  #                 description: image as PNG or JPEG
  #                 default: png
  #                 enum:
  #                 - png
  #                 - jpeg
  #       required: true
  #     responses:
  #       200:
  #         description: batch information
  #         content:
  #           application/json:
  #             schema:
  #               type: array
  #               items:
  #                 $ref: '#/components/schemas/Batch'
  #       default:
  #         description: Batch not created
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/BatchError'
  #     x-ms-trigger: none
  /batch/info:
    get:
      tags:
      - Batch
      summary: Get the batch status
      description: |
        Get the status of a batch requested through the API or through the dashboard.
      operationId: GetBatchInfo
      parameters:
      - name: id
        in: query
        description: batch ID
        required: true
        schema:
          type: integer
      responses:
        200:
          description: batch information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Batch'
        default:
          description: Batch not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchError'
  /account/info:
    get:
      tags:
      - Account
      summary: Get information about your account
      description: Get information about your account.
      operationId: GetAccountInfo
      parameters:
      - name: details
        in: query
        description: level of information returned
        schema:
          maximum: 3
          minimum: 1
          type: integer
          default: 1
      responses:
        200:
          description: Account information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        default:
          description: Account not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountError'
      x-ms-trigger: single
  /instance/info:
    get:
      tags:
      - Instance
      summary: Get information about an instance
      description: Get information about an instance.
      operationId: GetInstanceInfo
      parameters:
      - name: id
        in: query
        description: instance ID
        required: true
        schema:
          type: integer
      responses:
        200:
          description: Instance information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Instance'
        default:
          description: Account not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstanceError'
      x-ms-visibility: none
  /instance/list:
    get:
      tags:
      - Instance
      summary: Get all instances
      description: Get all instances.
      operationId: GetInstancesInfo
      responses:
        200:
          description: Instance information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstanceList'
        default:
          description: Account not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstanceError'
      x-ms-visibility: none
  /browser/info:
    get:
      tags:
      - Browser
      summary: Get information about a browser
      description: Get information about a browser.
      operationId: GetBrowserInfo
      parameters:
      - name: id
        in: query
        description: browser ID
        required: true
        schema:
          type: integer
      responses:
        200:
          description: Browser information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Browser'
        default:
          description: Browser not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrowserError'
      x-ms-visibility: none
  /browser/list:
    get:
      tags:
      - Browser
      summary: Get all browsers
      description: Get all browsers.
      operationId: GetBrowsersInfo
      responses:
        200:
          description: Instance information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrowserList'
        default:
          description: Account not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrowserError'
      x-ms-visibility: none
components:
  schemas:
    ScreenshotError:
      type: object
      properties:
        error:
          type: string
          description: description of the problem that occurred
        status:
          type: string
          description: status of the request - "in_queue", "processing", "finished",
            "error"
        priority:
          type: number
          description: priority given to the screenshot - high (1) to low (3)
        cost:
          type: number
          description: number of credits taken
    ScreenshotInfoError:
      type: object
      properties:
        id:
          type: integer
          description: screenshot ID
        error:
          type: string
          description: description of the problem that occurred
        status:
          type: string
          description: status of the request - "in_queue", "processing", "finished",
            "error"
    ScreenshotShort:
      type: object
      properties:
        id:
          type: integer
          description: screenshot ID
        status:
          type: string
          description: |
            status of the request
          enum:
          - ok
          - error
    Screenshot:
      required:
      - id
      - instance_id
      - status
      - url
      type: object
      properties:
        id:
          type: integer
          description: screenshot ID
        status:
          type: string
          description: |
            status of the request: "in_queue", "processing", "finished", "error"
          enum:
          - in_queue
          - processing
          - finished
          - error
        screenshot_url:
          type: object
          description: URL to download the screenshot
          format: string
        error:
          type: string
          description: description of the problem that occurred
        priority:
          maximum: 3
          minimum: 1
          type: integer
          description: 'priority given to the screenshot: high (1) to low (3)'
        url:
          type: string
          description: original URL requested
        size:
          type: string
          description: screenshot size requested
          enum:
          - screen
          - page
        width:
          type: integer
          description: screenshot width
        height:
          type: integer
          description: screenshot height
        final_url:
          type: string
          description: URL of the screenshot (redirections can occur)
        scale:
          type: number
          description: image scale. Always 1 for desktop browsers; mobiles may change
            the scale (zoom in or zoom out) to fit the page on the screen
          format: double
        instance_id:
          type: integer
          description: instance ID used for the screenshot
        cost:
          type: integer
          description: number of credits spent for the screenshot
        referer:
          type: string
          description: custom referrer used (see Custom POST Data, Referer and Cookie)
        post_data:
          type: string
          description: POST data sent (see Custom POST Data, Referer and Cookie)
        cookie:
          type: string
          description: custom cookie used (see Custom POST Data, Referer and Cookie)
        delay:
          type: integer
          description: number of seconds to wait after page load
        flash_delay:
          type: integer
          description: number of seconds to wait after page load if Flash elements
            are present
        details:
          maximum: 3
          minimum: 0
          type: integer
          description: level of details about the screenshot and the page
        script:
          type: string
          description: URL of optional javascript file executed after the page load
            event
        shared_url:
          type: string
          description: if the screenshot was shared, show the public URL
    ScreenshotList:
      type: object
      properties:
        default:
          type: number
      additionalProperties:
        $ref: '#/components/schemas/Screenshot'
    ScreenshotHost:
      type: object
      properties:
        id:
          type: integer
          description: screenshot ID
        status:
          type: string
          description: |
            status of the request: "error", "ok" or "in_queue"
          enum:
          - error
          - ok
          - in_queue
        url:
          type: string
          description: URL to the hosted screenshot or thumbnail
    Batch:
      type: object
      properties:
        id:
          type: integer
          description: batch ID
        status:
          type: string
          description: status of the request - "in_queue", "processing", "finished",
            "error"
          enum:
          - in_queue
          - processing
          - finished
          - error
        started:
          type: integer
          description: time of processing (UNIX timestamp)
        finished:
          type: integer
          description: time of batch completed (UNIX timestamp)
        count:
          type: integer
          description: number of unique URLs in the batch
        processed:
          type: integer
          description: number of screenshots finishe
        failed:
          type: integer
          description: number of screenshots failed
        urls:
          type: array
          description: URLs to download the batch
          items:
            type: string
    BatchError:
      type: object
      properties:
        error:
          type: string
          description: description of the problem that occurred
        status:
          type: string
          description: status of the request - "in_queue", "processing", "finished",
            "error"
    AccountError:
      type: object
      properties:
        error:
          type: string
          description: description of the problem that occurred
        status:
          type: string
          description: status of the request - error
    Account:
      required:
      - balance
      - free_screenshots_left
      - hosting_browshot
      - private_instances
      type: object
      properties:
        balance:
          type: integer
          description: number of credits left on your account
        free_screenshots_left:
          type: integer
          description: number of free screenshots available for the current month
        private_instances:
          maximum: 1
          minimum: 0
          type: integer
          description: 1 is your account is authorized to create and use private instances,
            0 otherwise (default)
        hosting_browshot:
          maximum: 1
          minimum: 0
          type: integer
          description: 1 is your account is authorized to request hosting on Browshot,
            0 otherwise (default)
        instances:
          type: array
          description: list of private instances as returned by /api/v1/instance/list
          items:
            $ref: '#/components/schemas/Instance'
        browsers:
          type: array
          description: list of custom browsers as returned by /api/v1/browser/list
          items:
            $ref: '#/components/schemas/Browser'
        screenshots:
          type: array
          description: list of 10 latest screenshots requests as returned by /api/v1/screenshot/list
          items:
            $ref: '#/components/schemas/Screenshot'
    InstanceList:
      type: object
      properties:
        shared:
          type: array
          items:
            $ref: '#/components/schemas/Instance'
        free:
          type: array
          items:
            $ref: '#/components/schemas/Instance'
        private:
          type: array
          items:
            $ref: '#/components/schemas/Instance'
    Instance:
      type: object
      properties:
        id:
          type: integer
          description: instance ID (required to requests screenshots)
        width:
          type: integer
          description: screen width in pixels
        height:
          type: integer
          description: screen height in pixels
        load:
          type: number
          description: "instance load: \n< 1: new screenshot requests will be processed\
            \ immediately, \n1-2: new screenshot requests will be processed in about\
            \ two minutes, \n2-3: new screenshot requests will be processed in about\
            \ four minutes, \n3-4: new screenshot requests will be processed in about\
            \ six minutes, \netc.\n"
          format: float
        browser:
          $ref: '#/components/schemas/Browser'
        type:
          type: string
          description: public, shared or private
          enum:
          - public
          - shared
          - private
        screenshot_cost:
          type: integer
          description: number of credits for each screenshot
        country:
          type: string
          description: instance's country of origin
    InstanceError:
      type: object
      properties:
        error:
          type: string
          description: description of the problem that occurred
        status:
          type: string
          description: status of the request - error
    Browser:
      type: object
      properties:
        id:
          type: integer
          description: browser ID
        name:
          type: string
          description: 'browser name and version: Firefox 45, etc.'
        javascript:
          maximum: 1
          minimum: 0
          type: integer
          description: 'JavaScript support: 1 if enabled, 0 if disabled'
        flash:
          maximum: 1
          minimum: 0
          type: integer
          description: 'Flash support: 1 if enabled, 0 if disabled'
        mobile:
          maximum: 1
          minimum: 0
          type: integer
          description: 'Mobile browser: 1 if true, 0 if false'
    BrowserList:
      type: object
      properties:
        default:
          type: integer
      additionalProperties:
        $ref: '#/components/schemas/Browser'
    BrowserError:
      type: object
      properties:
        error:
          type: string
          description: description of the problem that occurred
        status:
          type: string
          description: status of the request - error
  securitySchemes:
    apiKeyQuery:
      type: apiKey
      description: All requests on the Browshot API needs to include an API key. The API key can be provided as part of the query string or as a request header. The name of the API key needs to be `key`.
      name: key
      in: query
