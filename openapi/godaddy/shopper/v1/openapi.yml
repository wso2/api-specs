openapi: 3.0.1
info:
  x-ballerina-display:
    label: GoDaddy Shopper
    iconPath: "icon.png"
  title: GoDaddy Shopper API
  version: v1
  description: >-
    This is a generated connector for [GoDaddy Shoppers API v1](https://developer.godaddy.com/doc/endpoint/shoppers) OpenAPI specification.
    The GoDaddy Shoppers API provides capability to access GoDaddy operations related to shopper.
  x-ballerina-init-description: >-
    The connector initialization requires setting the API credentials. 
    Create a [GoDaddy](https://sg.godaddy.com/) and obtain tokens by following [this guide](https://developer.godaddy.com/getstarted).  
servers:
  - url: https://api.ote-godaddy.com/
tags:
  - name: v1
    description: ''
paths:
  /v1/shoppers/subaccount:
    post:
      tags:
        - v1
      summary: Create a Subaccount owned by the authenticated Reseller
      operationId: createSubaccount
      requestBody:
        description: The subaccount to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubaccountCreate'
          application/xml:
            schema:
              $ref: '#/components/schemas/SubaccountCreate'
          text/xml:
            schema:
              $ref: '#/components/schemas/SubaccountCreate'
        required: true
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopperId'
            application/javascript:
              schema:
                $ref: '#/components/schemas/ShopperId'
            application/xml:
              schema:
                $ref: '#/components/schemas/ShopperId'
            text/javascript:
              schema:
                $ref: '#/components/schemas/ShopperId'
            text/xml:
              schema:
                $ref: '#/components/schemas/ShopperId'
        '400':
          description: Request was malformed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Authentication info not sent or invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Authenticated user is not allowed access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: '`subaccount` does not fulfill the schema'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Too many requests received within interval
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            application/javascript:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            text/javascript:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: subaccount
  /v1/shoppers/{shopperId}:
    get:
      tags:
        - v1
      summary: Get details for the specified Shopper
      description: >-
        <strong>Notes:</strong><ul><li>**shopperId** is **not the same** as
        **customerId**.  **shopperId** is a number of max length 10 digits
        (*ex:* 1234567890) whereas **customerId** is a UUIDv4 (*ex:*
        295e3bc3-b3b9-4d95-aae5-ede41a994d13)</li></ul>
      operationId: get
      parameters:
        - name: shopperId
          in: path
          description: Shopper whose details are to be retrieved
          required: true
          schema:
            type: string
        - name: includes
          in: query
          description: Additional properties to be included in the response shopper object
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
              enum:
                - customerId
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shopper'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Shopper'
            application/xml:
              schema:
                $ref: '#/components/schemas/Shopper'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Shopper'
            text/xml:
              schema:
                $ref: '#/components/schemas/Shopper'
        '400':
          description: Request was malformed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Authentication info not sent or invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Authenticated user is not allowed access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Too many requests received within interval
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            application/javascript:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            text/javascript:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - v1
      summary: Update details for the specified Shopper
      description: >-
        <strong>Notes:</strong><ul><li>**shopperId** is **not the same** as
        **customerId**.  **shopperId** is a number of max length 10 digits
        (*ex:* 1234567890) whereas **customerId** is a UUIDv4 (*ex:*
        295e3bc3-b3b9-4d95-aae5-ede41a994d13)</li></ul>
      operationId: update
      parameters:
        - name: shopperId
          in: path
          description: The ID of the Shopper to update
          required: true
          schema:
            type: string
      requestBody:
        description: The Shopper details to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShopperUpdate'
          application/xml:
            schema:
              $ref: '#/components/schemas/ShopperUpdate'
          text/xml:
            schema:
              $ref: '#/components/schemas/ShopperUpdate'
        required: true
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopperId'
            application/javascript:
              schema:
                $ref: '#/components/schemas/ShopperId'
            application/xml:
              schema:
                $ref: '#/components/schemas/ShopperId'
            text/javascript:
              schema:
                $ref: '#/components/schemas/ShopperId'
            text/xml:
              schema:
                $ref: '#/components/schemas/ShopperId'
        '400':
          description: Request was malformed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Authentication info not sent or invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Authenticated user is not allowed access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: '`Shopper` does not fulfill the schema'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Too many requests received within interval
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            application/javascript:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            text/javascript:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: shopper
    delete:
      tags:
        - v1
      summary: Request the deletion of a shopper profile
      description: >-
        <strong>Notes:</strong><ul><li>Shopper deletion is not supported in
        OTE</li><li>**shopperId** is **not the same** as **customerId**. 
        **shopperId** is a number of max length 10 digits (*ex:* 1234567890)
        whereas **customerId** is a UUIDv4 (*ex:*
        295e3bc3-b3b9-4d95-aae5-ede41a994d13)</li></ul>
      operationId: delete
      parameters:
        - name: shopperId
          in: path
          description: >-
            The ID of the shopper to delete. Must agree with the shopper id on
            the token or header, if present. *Note*: **shopperId** is **not the
            same** as **customerId**.  **shopperId** is a number of max length
            10 digits (*ex:* 1234567890) whereas **customerId** is a UUIDv4
            (*ex:* 295e3bc3-b3b9-4d95-aae5-ede41a994d13)
          required: true
          schema:
            maxLength: 10
            type: string
        - name: auditClientIp
          in: query
          description: >-
            The client IP of the user who originated the request leading to this
            call.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Request was successful
          content: {}
        '400':
          description: Request was malformed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Authentication info not sent or invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Authenticated user is not allowed access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Active and locked shoppers cannot be deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Shopper ID is not supplied or invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Too many requests received within interval
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            application/javascript:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            text/javascript:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/shoppers/{shopperId}/status:
    get:
      tags:
        - v1
      summary: Get details for the specified Shopper
      description: >-
        <strong>Notes:</strong><ul><li>**shopperId** is **not the same** as
        **customerId**. **shopperId** is a number of max length 10 digits (*ex:*
        1234567890) whereas **customerId** is a UUIDv4 (*ex:*
        295e3bc3-b3b9-4d95-aae5-ede41a994d13)</li></ul>
      operationId: getStatus
      parameters:
        - name: shopperId
          in: path
          description: >-
            The ID of the shopper to retrieve. Must agree with the shopper id on
            the token or header, if present
          required: true
          schema:
            maxLength: 10
            type: string
        - name: auditClientIp
          in: query
          description: >-
            The client IP of the user who originated the request leading to this
            call.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopperStatus'
            application/javascript:
              schema:
                $ref: '#/components/schemas/ShopperStatus'
            application/xml:
              schema:
                $ref: '#/components/schemas/ShopperStatus'
            text/javascript:
              schema:
                $ref: '#/components/schemas/ShopperStatus'
            text/xml:
              schema:
                $ref: '#/components/schemas/ShopperStatus'
        '400':
          description: Request was malformed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Authentication info not sent or invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Authenticated user is not allowed access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Shopper ID is not supplied or invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Too many requests received within interval
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            application/javascript:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            text/javascript:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/shoppers/{shopperId}/factors/password:
    put:
      tags:
        - v1
      summary: Set subaccount's password
      description: >-
        <strong>Notes:</strong><ul><li>Password set is only supported by API
        Resellers setting subaccount passwords.</li><li>**shopperId** is **not
        the same** as **customerId**.  **shopperId** is a number of max length
        10 digits (*ex:* 1234567890) whereas **customerId** is a UUIDv4 (*ex:*
        295e3bc3-b3b9-4d95-aae5-ede41a994d13)</li></ul>
      operationId: changePassword
      parameters:
        - name: shopperId
          in: path
          description: Shopper whose password will be set
          required: true
          schema:
            type: string
      requestBody:
        description: The value to set the subaccount's password to
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Secret'
        required: true
      responses:
        '200':
          description: Request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopperId'
        '400':
          description: Request was not successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordError'
        '401':
          description: Authentication info not sent or invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: secret
security:
  - ApiKeyAuth: []
components:
  securitySchemes:
    ApiKeyAuth:       
      type: apiKey
      in: header  
      name: Authorization
      description: Represents API Key 'Authorization'
  schemas:
    Error:
      required:
        - code
      type: object
      properties:
        code:
          type: string
          description: >-
            Short identifier for the error, suitable for indicating the specific
            error within client code
          format: constant
        fields:
          type: array
          description: >-
            List of the specific fields, and the errors found with their
            contents
          items:
            $ref: '#/components/schemas/ErrorField'
        message:
          type: string
          description: Human-readable, English description of the error
    ErrorField:
      required:
        - code
        - path
      type: object
      properties:
        code:
          type: string
          description: >-
            Short identifier for the error, suitable for indicating the specific
            error within client code
          format: constant
        message:
          type: string
          description: >-
            Human-readable, English description of the problem with the contents
            of the field
        path:
          type: string
          description: >-
            <ul>

            <li style='margin-left: 12px;'>JSONPath referring to a field
            containing an error</li>

            <strong style='margin-left: 12px;'>OR</strong>

            <li style='margin-left: 12px;'>JSONPath referring to a field that
            refers to an object containing an error, with more detail in
            `pathRelated`</li>

            </ul>
          format: json-path
        pathRelated:
          type: string
          description: >-
            JSONPath referring to a field containing an error, which is
            referenced by `path`
          format: json-path
    ErrorLimit:
      required:
        - code
        - retryAfterSec
      type: object
      properties:
        code:
          type: string
          description: >-
            Short identifier for the error, suitable for indicating the specific
            error within client code
          format: constant
        fields:
          type: array
          description: >-
            List of the specific fields, and the errors found with their
            contents
          items:
            $ref: '#/components/schemas/ErrorField'
        message:
          type: string
          description: Human-readable, English description of the error
        retryAfterSec:
          type: integer
          description: Number of seconds to wait before attempting a similar request
          format: integer-positive
    Shopper:
      required:
        - email
        - marketId
        - nameFirst
        - nameLast
        - shopperId
      type: object
      properties:
        customerId:
          type: string
          description: >-
            Identifier for the Customer record associated with this Shopper
            record. This is an alternate identifier that some systems use to
            identify an individual shopper record
        email:
          type: string
          format: email
        externalId:
          type: integer
        marketId:
          type: string
          format: bcp-47
          default: en-US
        nameFirst:
          type: string
        nameLast:
          type: string
        shopperId:
          type: string
    ShopperId:
      required:
        - shopperId
      type: object
      properties:
        customerId:
          type: string
          description: >-
            Identifier for the Customer record associated with this Shopper
            record. This is an alternate identifier that some systems use to
            identify an individual shopper record
        shopperId:
          type: string
    ShopperStatus:
      type: object
      properties:
        billingState:
          type: string
          description: >-
            Indicates the billing state of the Shopper.<br />ABANDONED: The
            shopper has not been billed in at least 10 years and has no active
            subscriptions.<br />INACTIVE: The shopper has been billed within the
            last 10 years but has no active subscriptions.<br />ACTIVE: The
            shopper has at least one active subscription.
          enum:
            - ABANDONED
            - INACTIVE
            - ACTIVE
    ShopperUpdate:
      type: object
      properties:
        email:
          type: string
          format: email
        externalId:
          type: integer
        marketId:
          maxLength: 50
          type: string
          format: bcp-47
          enum:
            - da-DK
            - de-AT
            - de-CH
            - de-DE
            - el-GR
            - en-AE
            - en-AU
            - en-CA
            - en-GB
            - en-HK
            - en-IE
            - en-IL
            - en-IN
            - en-MY
            - en-NZ
            - en-PH
            - en-PK
            - en-SG
            - en-US
            - en-ZA
            - es-AR
            - es-CL
            - es-CO
            - es-ES
            - es-MX
            - es-PE
            - es-US
            - es-VE
            - fi-FI
            - fr-BE
            - fr-CA
            - fr-CH
            - fr-FR
            - hi-IN
            - id-ID
            - it-CH
            - it-IT
            - ja-JP
            - ko-KR
            - mr-IN
            - nb-NO
            - nl-BE
            - nl-NL
            - pl-PL
            - pt-BR
            - pt-PT
            - ru-RU
            - sv-SE
            - ta-IN
            - th-TH
            - tr-TR
            - uk-UA
            - vi-VN
            - zh-HK
            - zh-SG
            - zh-TW
        nameFirst:
          type: string
        nameLast:
          type: string
    SubaccountCreate:
      required:
        - email
        - nameFirst
        - nameLast
        - password
      type: object
      properties:
        email:
          type: string
          format: email
        externalId:
          type: integer
        marketId:
          maxLength: 50
          type: string
          format: bcp-47
          default: en-US
          enum:
            - da-DK
            - de-AT
            - de-CH
            - de-DE
            - el-GR
            - en-AE
            - en-AU
            - en-CA
            - en-GB
            - en-HK
            - en-IE
            - en-IL
            - en-IN
            - en-MY
            - en-NZ
            - en-PH
            - en-PK
            - en-SG
            - en-US
            - en-ZA
            - es-AR
            - es-CL
            - es-CO
            - es-ES
            - es-MX
            - es-PE
            - es-US
            - es-VE
            - fi-FI
            - fr-BE
            - fr-CA
            - fr-CH
            - fr-FR
            - hi-IN
            - id-ID
            - it-CH
            - it-IT
            - ja-JP
            - ko-KR
            - mr-IN
            - nb-NO
            - nl-BE
            - nl-NL
            - pl-PL
            - pt-BR
            - pt-PT
            - ru-RU
            - sv-SE
            - ta-IN
            - th-TH
            - tr-TR
            - uk-UA
            - vi-VN
            - zh-HK
            - zh-SG
            - zh-TW
        nameFirst:
          type: string
        nameLast:
          type: string
        password:
          type: string
          format: shopper-password
    Secret:
      type: object
      properties:
        secret:
          type: string
          description: The secret value used to set a subaccount's password
          example: P@55w0rd+
    PasswordError:
      type: object
      properties:
        type:
          type: string
          description: Response type, always 'error'
        code:
          type: string
          description: >-
            Short identifier for the error, suitable for indicating the specific
            error within client code
          format: constant
          enum:
            - PW_BLACK_LIST
            - PW_TOO_SHORT
            - PW_TOO_LONG
            - PW_MISSING_UC
            - PW_MISSING_NUM
            - PW_RECENTLY_USED
            - PW_NOT_UNIQUE
        message:
          type: string
          description: Human-readable, English description of the error
