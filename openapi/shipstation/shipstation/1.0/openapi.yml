openapi: 3.0.0
info:
  title: ShipStation Developer Portal
  x-ballerina-display:
    label: ShipStation
    iconPath: "icon.png"
  description: |
    This is a generated connector for [ShipStation API v1.0](https://www.shipstation.com/docs/api/) OpenAPI specification.
    ShipStation strives to streamline shipping for online sellers, no matter where they sell their products online.
  contact: {}
  x-ballerina-init-description: |
    The connector initialization requires setting the API credentials. 
    Create a [ShipStation account](https://www.shipstation.com/step1/) and obtain tokens by following [this guide](https://www.shipstation.com/docs/api/requirements/#authentication).
  version: "1.0"
  
servers:
  - url: https://ssapi.shipstation.com/
    variables: {}
 
paths:
  /accounts/registeraccount:
    post:
      tags:
        - Accounts
      summary: Creates a new ShipStation account and generates an apiKey and apiSecret to be used by the newly created account.
      description: |-
        Creates a new ShipStation account and generates an apiKey and apiSecret to be used by the newly created account. PLEASE NOTE: This endpoint does not require API key and API Secret credentials.  The Authorization header can be left off. Use of this specific endpoint requires approval, and is meant only for direct partners of ShipStation. This is the only endpoint to require approval. All other endpoints listed in this document can be accessed by submitting proper authorization credentials in the header of the request. To become a direct partner of ShipStation, or to request more information on becoming a direct partner, we recommend reaching out to our Partners and Integrations team here: https://info.shipstation.com/become-a-partner-api-and-custom-store-integrations
        The body of this request has the following attributes:
        Name               |Data Type          |Description
        -------------------|-------------------|-------------------
        ``firstName``  | string, required | First Name
        ``lastName`` | string, required | Last Name
        ``email`` | string, required | Email address. This will also be the username of the account.
        ``password`` | string, required | Password to set for account access.
        ``companyName`` | string, optional | Name of Company.
        ``addr1`` | string, optional | Company Address - Street 1
        ``addr2`` | string, optional | Company Address - Street 2
        ``city`` | string, optional | Company Address - City
        ``state`` | string, optional | Company Address - State 
        ``zip`` | string, optional | Company Address - Zip Code
        ``countryCode`` |string, optional | Company Address - Country.  Please use a 2-character country code.
        ``phone`` | string, optional | Company Phone number.
      operationId: RegisterAccount
      parameters:
        - name: Content-Type
          in: header
          description: ""
          required: true
          style: simple
          explode: false
          schema:
            type: string
            example: application/json
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterAccountrequest"
            example: |-
              {
                "firstName": "John",
                "lastName": "Smith",
                "email": "jsmithtest@gmail.com",
                "password": "testpw1234",
                "shippingOriginCountryCode": "US",
                "companyName": "Droid Repair LLC",
                "addr1": "542 Midichlorian Rd.",
                "addr2": "",
                "city": "Austin",
                "state": "TX",
                "zip": "78703",
                "countryCode": "US",
                "phone": "5124111234"
              }
        required: true
      responses:
        "200":
          description: ""
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RegisterAccountresponse"
              example:
                message: ShipStation account created.
                sellerId: 123456
                success: true
                apiKey: abcdt9845hjmgfklj3498gkljdkuyekl
                apiSecret: 1234iou983lkj8mnxgfwu509hkhdy7u3
      deprecated: false
  /accounts/listtags:
    get:
      tags:
        - Accounts
      summary: Lists all tags defined for this account.
      operationId: ListTags
      parameters: []
      responses:
        "200":
          description: ""
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ListTagsresponse"
                description: ""
              example:
                - tagId: 8362
                  name: Backorder
                  color: "#800080"
                - tagId: 8324
                  name: Canada
                  color: "#ff0000"
                - tagId: 8336
                  name: Fragile
                  color: "#33CCCC"
                - tagId: 8221
                  name: Repeat Buyer
                  color: "#CC99FF"
      deprecated: false
  /carriers:
    get:
      tags:
        - Carriers
      summary: Lists all shipping providers connected to this account.
      operationId: ListCarriers
      parameters: []
      responses:
        "200":
          description: ""
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ListCarriersresponse"
                description: ""
              example:
                - name: Stamps.com
                  code: stamps_com
                  accountNumber: SS123
                  requiresFundedAccount: true
                  balance: 24.27
                  nickname: "null"
                  shippingProviderId: 12345
                  primary: true
                - name: Stamps.com
                  code: stamps_com
                  accountNumber: SS1234
                  requiresFundedAccount: true
                  balance: 2400.27
                  nickname: Stamps.com 2
                  shippingProviderId: 12346
                  primary: false
                - name: UPS
                  code: ups
                  accountNumber: ABCR80
                  requiresFundedAccount: false
                  balance: 0
                  nickname: "null"
                  shippingProviderId: 12347
                  primary: true
                - name: FedEx
                  code: fedex
                  accountNumber: "297929999"
                  requiresFundedAccount: false
                  balance: 0
                  nickname: SS
                  shippingProviderId: 12348
                  primary: true
                - name: Endicia
                  code: endicia
                  accountNumber: "913999"
                  requiresFundedAccount: true
                  balance: 0
                  nickname: "null"
                  shippingProviderId: 12349
                  primary: true
      deprecated: false
  /carriers/getcarrier:
    get:
      tags:
        - Carriers
      summary: Retrieves the shipping carrier account details for the specified carrierCode. Use this method to determine a carrier's account balance.
      operationId: GetCarrier
      parameters:
        - name: carrierCode
          in: query
          description: The code for the carrier account to retrieve.
          required: true
          schema:
            type: string
            example: stamps_com
      responses:
        "200":
          description: ""
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetCarrierresponse"
              example:
                name: Stamps.com
                code: stamps_com
                accountNumber: SS123
                requiresFundedAccount: true
                balance: 24.27
                nickname: null
                shippingProviderId: 12345
                primary: true
      deprecated: false
  /carriers/addfunds:
    post:
      tags:
        - Carriers
      summary: Adds funds to a carrier account using the payment information on file.
      description: |-
        Adds funds to a carrier account using the payment information on file. The body of this request should specify the following attributes:
        Name               |Data Type          |Description
        -------------------|-------------------|-------------------
         ``carrierCode`` | string, required |  The carrier to add funds to.
         ``amount`` | number, required | The dollar amount to add to the account.  The minimum value that can be added is $10.00.  The maximum value is $10,000.00.
      operationId: AddFunds
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddFundsrequest"
            example: |-
              {
                "carrierCode": "fedex",
                "amount": 20.00
              }
        required: true
      responses:
        "200":
          description: ""
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AddFundsresponse"
              example:
                name: Stamps.com
                code: stamps_com
                accountNumber: SS123
                requiresFundedAccount: true
                balance: 24.14
      deprecated: false
  /carriers/listpackages:
    get:
      tags:
        - Carriers
      summary: Retrieves a list of packages for the specified carrier
      operationId: ListPackages
      parameters:
        - name: carrierCode
          in: query
          description: The carrier's code
          required: true
          schema:
            type: string
      responses:
        "200":
          description: ""
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ListPackagesresponse"
                description: ""
              example:
                - carrierCode: express_1
                  code: cubic
                  name: Cubic
                  domestic: true
                  international: false
                - carrierCode: express_1
                  code: dvd_flat_rate_box
                  name: DVD Flat Rate Box
                  domestic: false
                  international: true
                - carrierCode: express_1
                  code: flat_rate_envelope
                  name: Flat Rate Envelope
                  domestic: true
                  international: true
                - carrierCode: express_1
                  code: flat_rate_legal_envelope
                  name: Flat Rate Legal Envelope
                  domestic: true
                  international: true
                - carrierCode: express_1
                  code: flat_rate_padded_envelope
                  name: Flat Rate Padded Envelope
                  domestic: true
                  international: true
                - carrierCode: express_1
                  code: large_envelope_or_flat
                  name: Large Envelope or Flat
                  domestic: true
                  international: true
                - carrierCode: express_1
                  code: large_flat_rate_box
                  name: Large Flat Rate Box
                  domestic: true
                  international: true
                - carrierCode: express_1
                  code: large_package
                  name: Large Package (any side > 12")
                  domestic: true
                  international: true
                - carrierCode: express_1
                  code: large_video_flat_rate_box
                  name: Large Video Flat Rate Box
                  domestic: false
                  international: true
                - carrierCode: express_1
                  code: letter
                  name: Letter
                  domestic: true
                  international: true
                - carrierCode: express_1
                  code: medium_flat_rate_box
                  name: Medium Flat Rate Box
                  domestic: true
                  international: true
                - carrierCode: express_1
                  code: package
                  name: Package
                  domestic: true
                  international: true
                - carrierCode: express_1
                  code: regional_rate_box_a
                  name: Regional Rate Box A
                  domestic: true
                  international: false
                - carrierCode: express_1
                  code: regional_rate_box_b
                  name: Regional Rate Box B
                  domestic: true
                  international: false
                - carrierCode: express_1
                  code: regional_rate_box_c
                  name: Regional Rate Box C
                  domestic: true
                  international: false
                - carrierCode: express_1
                  code: small_flat_rate_box
                  name: Small Flat Rate Box
                  domestic: true
                  international: true
                - carrierCode: express_1
                  code: thick_envelope
                  name: Thick Envelope
                  domestic: true
                  international: true
      deprecated: false
  /carriers/listservices:
    get:
      tags:
        - Carriers
      summary: Retrieves the list of available shipping services provided by the specified carrier
      operationId: ListServices
      parameters:
        - name: carrierCode
          in: query
          description: The carrier's code
          required: true
          schema:
            type: string
      responses:
        "200":
          description: ""
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ListServicesresponse"
                description: ""
              example:
                - carrierCode: fedex
                  code: fedex_ground
                  name: FedEx Ground®
                  domestic: true
                  international: false
                - carrierCode: fedex
                  code: fedex_home_delivery
                  name: FedEx Home Delivery®
                  domestic: true
                  international: false
                - carrierCode: fedex
                  code: fedex_2day
                  name: FedEx 2Day®
                  domestic: true
                  international: false
                - carrierCode: fedex
                  code: fedex_2day_am
                  name: FedEx 2Day® A.M.
                  domestic: true
                  international: false
                - carrierCode: fedex
                  code: fedex_express_saver
                  name: FedEx Express Saver®
                  domestic: true
                  international: false
                - carrierCode: fedex
                  code: fedex_standard_overnight
                  name: FedEx Standard Overnight®
                  domestic: true
                  international: false
                - carrierCode: fedex
                  code: fedex_priority_overnight
                  name: FedEx Priority Overnight®
                  domestic: true
                  international: false
                - carrierCode: fedex
                  code: fedex_first_overnight
                  name: FedEx First Overnight®
                  domestic: true
                  international: false
                - carrierCode: fedex
                  code: fedex_1_day_freight
                  name: FedEx 1 Day® Freight
                  domestic: true
                  international: false
                - carrierCode: fedex
                  code: fedex_2_day_freight
                  name: FedEx 2 Day® Freight
                  domestic: true
                  international: false
                - carrierCode: fedex
                  code: fedex_3_day_freight
                  name: FedEx 3 Day® Freight
                  domestic: true
                  international: false
                - carrierCode: fedex
                  code: fedex_first_overnight_freight
                  name: FedEx First Overnight® Freight
                  domestic: true
                  international: false
                - carrierCode: fedex
                  code: fedex_ground_international
                  name: FedEx Ground® International
                  domestic: false
                  international: true
                - carrierCode: fedex
                  code: fedex_international_economy
                  name: FedEx International Economy®
                  domestic: false
                  international: true
                - carrierCode: fedex
                  code: fedex_international_priority
                  name: FedEx International Priority®
                  domestic: false
                  international: true
                - carrierCode: fedex
                  code: fedex_international_first
                  name: FedEx International First®
                  domestic: false
                  international: true
                - carrierCode: fedex
                  code: fedex_europe_first
                  name: FedEx Europe First®
                  domestic: false
                  international: true
                - carrierCode: fedex
                  code: fedex_international_economy_freight
                  name: FedEx International Economy® Freight
                  domestic: false
                  international: true
                - carrierCode: fedex
                  code: fedex_international_priority_freight
                  name: FedEx International Priority® Freight
                  domestic: false
                  international: true
      deprecated: false
  /customers/{customerId}:
    get:
      tags:
        - Customers
      summary: Get Customer
      description: ""
      operationId: GetCustomer
      parameters:
        - name: customerId
          in: path
          description: The system generated identifier for the Customer.
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            example: 12345678
      responses:
        "200":
          description: ""
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetCustomerresponse"
              example:
                customerId: 12345678
                createDate: '"2014-11-18T10:33:01.19"'
                modifyDate: '"2014-11-18T10:33:01.19"'
                name: Cam Newton
                company: Test Company
                street1: 123 War Eagle Lane
                street2: ""
                city: Auburn
                state: AL
                postalCode: "36830"
                countryCode: US
                phone: 555-555-5555
                email: supermancam@example.com
                addressVerified: Verified
                marketplaceUsernames:
                  - customerUserId: 67195020
                    customerId: 12345678
                    createDate: '"2015-04-27T12:35:03.83"'
                    modifyDate: '"2015-05-14T08:16:15.27"'
                    marketplaceId: 0
                    marketplace: ShipStation
                    username: camtheman@gmail.com
                  - customerUserId: 37568588
                    customerId: 12345678
                    createDate: '"2014-11-18T10:33:01.197"'
                    modifyDate: '"2014-11-18T10:33:01.197"'
                    marketplaceId: 36
                    marketplace: WooCommerce
                    username: supercam@example.com
                  - customerUserId: 46038940
                    customerId: 12345678
                    createDate: "null"
                    modifyDate: "null"
                    marketplaceId: 67
                    marketplace: TradeGecko
                    username: camtheman@gmail.com
                tags:
                  - tagId: 1234
                    name: Expedited
                  - tagId: 9725
                    name: 00 BULK ORDERED
      deprecated: false
  /customers:
    get:
      tags:
        - Customers
      summary: Obtains a list of customers that match the specified criteria.
      operationId: ListCustomers
      parameters:
        - name: stateCode
          in: query
          description: Returns customers that reside in the specified stateCode.
          schema:
            type: string
        - name: countryCode
          in: query
          description: Returns customers that reside in the specified countryCode.
          schema:
            type: string
        - name: marketplaceId
          in: query
          description: Returns customers that purchased items from the specified marketplaceId.
          schema:
            type: integer
        - name: tagId
          in: query
          description: Returns customers that have been tagged with the specified tagId.
          schema:
            type: integer
        - name: sortBy
          in: query
          description: Sorts the order of the response based off the specified value.
          schema:
            $ref: "#/components/schemas/sortBy"
        - name: sortDir
          in: query
          description: Sets the direction of the sort order.
          schema:
            $ref: "#/components/schemas/sortDir"
        - name: page
          in: query
          description: Page number.
          schema:
            type: integer
        - name: pageSize
          in: query
          description: Requested page size. Max value is 500.
          schema:
            type: integer
      responses:
        "200":
          description: ""
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListCustomersResponse"
              example:
                customers:
                  - customerId: 12345678
                    createDate: '"2014-11-18T10:33:01.19"'
                    modifyDate: '"2014-11-18T10:33:01.19"'
                    name: Cam Newton
                    company: Test Company
                    street1: 123 War Eagle Lane
                    street2: ""
                    city: Auburn
                    state: AL
                    postalCode: "36830"
                    countryCode: US
                    phone: 555-555-5555
                    email: supermancam@example.com
                    addressVerified: Verified
                    marketplaceUsernames:
                      - customerUserId: 67195020
                        customerId: 12345678
                        createDate: '"2015-04-27T12:35:03.83"'
                        modifyDate: '"2015-05-14T08:16:15.27"'
                        marketplaceId: 0
                        marketplace: ShipStation
                        username: camtheman@gmail.com
                      - customerUserId: 37568588
                        customerId: 12345678
                        createDate: '"2014-11-18T10:33:01.197"'
                        modifyDate: '"2014-11-18T10:33:01.197"'
                        marketplaceId: 36
                        marketplace: WooCommerce
                        username: supercam@example.com
                      - customerUserId: 46038940
                        customerId: 12345678
                        createDate: "null"
                        modifyDate: "null"
                        marketplaceId: 67
                        marketplace: TradeGecko
                        username: camtheman@gmail.com
                    tags:
                      - tagId: 1234
                        name: Expedited
                      - tagId: 9725
                        name: 00 BULK ORDERED
                  - customerId: 87654321
                    createDate: '"2015-06-21T12:48:07.54"'
                    name: Bo Jackson
                    company: Test Company
                    street1: 456 Heisman Ave
                    street2: ""
                    city: Auburn
                    state: AL
                    postalCode: "36830"
                    countryCode: US
                    phone: 555-555-5555
                    email: boknows@example.com
                    addressVerified: Verified
                    marketplaceUsernames:
                      - customerUserId: 77215410
                        customerId: 87654321
                        createDate: '"2015-08-27T14:36:05.75"'
                        modifyDate: '"2015-09-01T09:18:25.31"'
                        marketplaceId: 0
                        marketplace: ShipStation
                        username: boknows@gmail.com
                      - customerUserId: 43759100
                        customerId: 87654321
                        createDate: '"2015-07-05T11:38:01.197"'
                        modifyDate: '"2015-07-05T11:38:01.197"'
                        marketplaceId: 36
                        marketplace: WooCommerce
                        username: boknows@example.com
                      - customerUserId: 81565241
                        customerId: 87654321
                        createDate: "null"
                        modifyDate: "null"
                        marketplaceId: 67
                        marketplace: TradeGecko
                        username: bo@gmail.com
                    tags:
                      - tagId: 1234
                        name: Expedited
                      - tagId: 9725
                        name: 00 BULK ORDERED
                total: 2
                page: 1
                pages: 1
      deprecated: false
  /fulfillments:
    get:
      tags:
        - List Fulfillments with parameters
      description: |-
        Obtains a list of fulfillments that match the specified criteria.  Please note the following:
        - Orders that have been marked as shipped either through the UI or the API will appear in the response as they are considered fulfillments.
        All of the available filters are optional.  They do not need to be included in the URL.  If you do include them, here's what the URL may look like:
        Url format with filters:
        ```
        fulfillments?fulfillmentId={fulfillmentId}
        &orderId={orderId}
        &orderNumber={orderNumber}
        &trackingNumber={trackingNumber}
        &recipientName={recipientName}
        &createDateStart={createDateStart}
        &createDateEnd={createDateEnd}
        &shipDateStart={shipDateStart}
        &shipDateEnd={shipDateEnd}
        &sortBy={sortBy}
        &sortDir={sortDir}
        &page={page}
        &pageSize={pageSize}
        ```
      operationId: ListFulfillments
      parameters:
        - name: fulfillmentId
          in: query
          description: Returns the fulfillment with the specified fulfillment ID.
          schema:
            type: integer
        - name: orderId
          in: query
          description: Returns fulfillments whose orders have the specified order ID.
          schema:
            type: integer
        - name: orderNumber
          in: query
          description: Returns fulfillments whose orders have the specified order number.
          schema:
            type: string
        - name: trackingNumber
          in: query
          description: Returns fulfillments with the specified tracking number.
          schema:
            type: string
        - name: recipientName
          in: query
          description: Returns fulfillments shipped to the specified recipient name.
          schema:
            type: string
        - name: createDateStart
          in: query
          description: Returns fulfillments created on or after the specified ``createDate``
          schema:
            type: string
            example: "2015-01-01 00:00:00"
        - name: createDateEnd
          in: query
          description: Returns fulfillments created on or before the specified ``createDate``
          schema:
            type: string
            example: "2015-01-08 00:00:00"
        - name: shipDateStart
          in: query
          description: Returns fulfillments with the ``shipDate`` on or after the specified date
          schema:
            type: string
            example: "2015-01-01"
        - name: shipDateEnd
          in: query
          description: Returns fulfillments with the ``shipDate`` on or before the specified date
          schema:
            type: string
            example: "2015-01-08"
        - name: sortBy
          in: query
          description: Sort the responses by a set value.  The response will be sorted based off the ascending dates (oldest to most current.)  If left empty, the response will be sorted by ascending ``createDate``.
          schema:
            $ref: "#/components/schemas/sortBy1"
        - name: sortDir
          in: query
          description: Sets the direction of the sort order.
          schema:
            $ref: "#/components/schemas/sortDir"
        - name: page
          in: query
          description: page number.
          schema:
            type: integer
        - name: pageSize
          in: query
          description: page size.
          schema:
            type: integer
      responses:
        "200":
          description: ""
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListFulfillmentsResponse"
              example:
                fulfillments:
                  - fulfillmentId: 33974374
                    orderId: 191759016
                    orderNumber: "101"
                    userId: c9f06d74-95de-4263-9b04-e87095cababf
                    customerEmail: apisupport@shipstation.com
                    trackingNumber: "783408231234"
                    createDate: "2016-06-07T08:50:50.067"
                    shipDate: "2016-06-07T00:00:00"
                    voidDate: null
                    deliveryDate: null
                    carrierCode: USPS
                    fulfillmentProviderCode: null
                    fulfillmentServiceCode: null
                    fulfillmentFee: 0
                    voidRequested: false
                    voided: false
                    marketplaceNotified: true
                    notifyErrorMessage: null
                    shipTo:
                      name: Yoda
                      company: null
                      street1: "3800 N Lamar Blvd # 220"
                      street2: null
                      street3: null
                      city: AUSTIN
                      state: TX
                      postalCode: "78756"
                      country: US
                      phone: 512-485-4282
                      residential: null
                      addressVerified: null
                  - fulfillmentId: 246310
                    orderId: 193699927
                    orderNumber: "101"
                    userId: c9f06d74-95de-4263-9b04-e87095cababf
                    customerEmail: apisupport@shipstation.com
                    trackingNumber: "664756278745"
                    createDate: "2016-06-08T12:54:53.347"
                    shipDate: "2016-06-08T00:00:00"
                    voidDate: null
                    deliveryDate: null
                    carrierCode: FedEx
                    fulfillmentProviderCode: null
                    fulfillmentServiceCode: null
                    fulfillmentFee: 0
                    voidRequested: false
                    voided: false
                    marketplaceNotified: true
                    notifyErrorMessage: null
                    shipTo:
                      name: Yoda
                      company: null
                      street1: "3800 N Lamar Blvd # 220"
                      street2: null
                      street3: null
                      city: AUSTIN
                      state: TX
                      postalCode: "78756"
                      country: US
                      phone: 512-485-4282
                      residential: null
                      addressVerified: null
                total: 2
                page: 1
                pages: 0
      deprecated: false
  /orders/{orderId}:
    get:
      tags:
        - Orders
      summary: Retrieves a single order from the database.
      operationId: GetOrder
      parameters:
        - name: orderId
          in: path
          description: The system generated identifier for the order.
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            example: 123456789
      responses:
        "200":
          description: ""
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetOrderresponse"
      deprecated: false
    delete:
      tags:
        - Orders
      summary: Removes order from ShipStation's UI. Note this is a "soft" delete action so the order will still exist in the database, but will be set to ``inactive``
      operationId: DeleteOrder
      parameters:
        - name: orderId
          in: path
          description: The system generated identifier for the order.
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            example: 123456789
      responses:
        "200":
          description: ""
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteOrderresponse"
              example:
                success: true
                message: The requested order has been deleted.
      deprecated: false
  /orders/addtag:
    post:
      tags:
        - Orders
      summary: Adds a tag to an order
      description: |-
        Adds a tag to an order.  The body of this request should specify the following attributes:
        Name               |Data Type          |Description
        -------------------|-------------------|-------------------
        ``orderId`` | number, required | Identifies the order that will be tagged.
        ``tagId`` | number, required | Identifies the tag that will be applied to the order.
      operationId: AddTagToOrder
      parameters:
        - name: Content-Type
          in: header
          description: ""
          required: true
          style: simple
          explode: false
          schema:
            type: string
            example: application/json
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddTagtoOrderrequest"
            example: |-
              {
                "orderId": 123456,
                "tagId": 1234
              }
        required: true
      responses:
        "200":
          description: ""
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AddTagtoOrderresponse"
              example:
                success: true
                message: Tag added successfully.
      deprecated: false
  /orders/assignuser:
    post:
      tags:
        - Orders
      summary: Assigns a user to an order
      description: |-
        Assigns a user to an order.  The body of this request should specify the following attributes:
        Name               |Data Type          |Description
        -------------------|-------------------|-------------------
        ``orderIds`` | number, required | Identifies set of orders that will be assigned the user.  Please note that if ANY of the orders within the array are not found, no orders will have a user assigned to them.
        ``userId`` | number, required | Identifies the user that will be applied to the orders.  It should contain a GUID of the user to be assigned to the array of orders.
      operationId: AssignUserToOrder
      parameters:
        - name: Content-Type
          in: header
          description: ""
          required: true
          style: simple
          explode: false
          schema:
            type: string
            example: application/json
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssignUsertoOrderrequest"
            example: |-
              {
                "orderIds": [
                  123456789,
                  12345679
                  ],
                "userId": "123456AB-ab12-3c4d-5e67-89f1abc1defa"
              }
        required: true
      responses:
        "200":
          description: ""
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AssignUsertoOrderresponse"
              example:
                success: true
                message: User assigned successfully.
      deprecated: false
  /orders/createlabelfororder:
    post:
      tags:
        - Orders
      summary: Creates a shipping label for a given order.
      description: |-
        Creates a shipping label for a given order.  The ``labelData`` field returned in the response is a base64 encoded PDF value. Simply decode and save the output as a PDF file to retrieve a printable label.  The body of this request should specify the following attributes:
        Name               |Data Type          |Description
        -------------------|-------------------|-------------------
        ``orderId`` | number, required | Identifies the order that will be shipped.
        ``carrierCode`` | string, required | The code for the carrier that is to be used for the label.
        ``serviceCode`` | string, required | The code for the shipping service that is to be used for the label.
        ``confirmation`` | string, required | The type of delivery confirmation that is to be used once the shipment is created.  Possible values: ``none``, ``delivery``, ``signature``, ``adult_signature``, and ``direct_signature``.  ``direct_signature`` is available for FedEx only.
        ``shipDate`` | string, required | The date the order should be shipped.
        ``weight`` | Weight, optional | Weight of the order.  Use the [**Weight**](http://www.shipstation.com/developer-api/#/reference/model-weight) model.
        ``dimensions`` | Dimensions, optional | Dimensions of the order.  Use [**Dimensions**](http://www.shipstation.com/developer-api/#/reference/model-dimensions) model.
        ``insuranceOptions`` | InsuranceOptions, optional | The shipping insurance information associated with this label.  Use the [**InsuranceOptions**](http://www.shipstation.com/developer-api/#/reference/model-insuranceoptions) model.
        ``internationalOptions`` | InternationalOptions, optional | Customs information that can be used to generate customs documents for international orders.  Use the [**InternationalOptions**](http://www.shipstation.com/developer-api/#/reference/model-internationaloptions) model.
        ``advancedOptions`` | AdvancedOptions, optional | Various advanced options that may be available depending on the shipping carrier that is used to ship the order. Use the Customs information that can be used to generate customs documents for international orders.  Use the [**AdvancedOptions**](http://www.shipstation.com/developer-api/#/reference/model-advancedoptions) model.
        ``testLabel`` | boolean, required | Specifies whether a test label should be created.
      operationId: CreateLabelForOrder
      parameters:
        - name: Content-Type
          in: header
          description: ""
          required: true
          style: simple
          explode: false
          schema:
            type: string
            example: application/json
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateLabelforOrderrequest"
            example: |-
              {
                "orderId": 93348442,
                "carrierCode": "fedex",
                "serviceCode": "fedex_2day",
                "packageCode": "package",
                "confirmation": null,
                "shipDate": "2014-04-03",
                "weight": {
                  "value": 2,
                  "units": "pounds"
                },
                "dimensions": null,
                "insuranceOptions": null,
                "internationalOptions": null,
                "advancedOptions": null,
                "testLabel": false
              }
        required: true
      responses:
        "200":
          description: ""
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateLabelforOrderresponse"
              example:
                shipmentId: 72513480
                shipmentCost: 7.3
                insuranceCost: 0
                trackingNumber: "248201115029520"
                labelData: JVBERi0xLjQKJeLjz9MKMiAwIG9iago8PC9MZW5ndGggNjIvRmlsdGVyL0ZsYXRlRGVjb2RlPj5zdHJlYW0KeJwr5HIK4TI2UzC2NFMISeFyDeEK5CpUMFQwAEJDBV0jCz0LBV1jY0M9I4XkXAX9iDRDBZd8hUAuAEdGC7cKZW5kc3RyZWFtCmVuZG9iago0IDAgb2JqCjw8L1R5cGUvUGFnZS9NZWRpYUJveFswIDAgMjg4IDQzMl0vUmVzb3VyY2VzPDwvUHJvY1NldCBbL1BERiAvVGV4dCAvSW1hZ2VCIC9JbWFnZUMgL0ltYWdlSV0vWE9iamVjdDw8L1hmMSAxIDAgUj4+Pj4vQ29udGVudHMgMiAwIFIvUGFyZW50....
                formData: null
      deprecated: false
  /orders/createorder:
    post:
      tags:
        - Orders
      summary: Create a new order or update an existing order. If the orderKey is specified, ShipStation will attempt to locate the order with the specified orderKey. If found, the existing order with that key will be updated. If the orderKey is not found, a new order will be created with that orderKey.
      description: |-
        If the ``orderKey`` is specified, the method becomes idempotent and the existing order with that key will be updated. Note: Only orders in an open status in ShipStation (``awaiting_payment``,``awaiting_shipment``, and ``on_hold``) can be updated through this method. ``cancelled`` and ``shipped`` are locked from modification through the API.  The body of this request should specify an [**Order**](https://www.shipstation.com/developer-api/#/reference/model-order) object:
        Name               |Data Type          |Description
        -------------------|-------------------|-------------------
        ``orderNumber`` | string, required | A user-defined order number used to identify an order.
        ``orderKey`` | string, optional | A user-provided key that should be unique to each order.  If an orderKey is not provided, ShipStation will create a new order and generate a unique orderKey for that order.  If the orderKey *is* provided, the **createorder** method will either: create a new order if the provided orderKey is not found, or, update the existing order if the orderKey is found.
        ``orderDate`` | string, required | The date the order was placed.
        ``paymentDate`` | string, optional | The date the order was paid for.
        ``shipByDate`` | string, optional | The date the order is to be shipped before or on. This field is a suggested value generated by the order source/platform/cart and passed to ShipStation.
        ``orderStatus`` | string, required | The order's status. Possible values: ``awaiting_payment``, ``awaiting_shipment``, ``shipped``, ``on_hold``, ``cancelled``
        ``customerUsername`` | string, optional | The customer's username.
        ``customerEmail`` | string, optional | The customer's email address.
        ``billTo`` | Address, required | The recipients billing address. Use the [**Address**](https://www.shipstation.com/developer-api/#/reference/model-address) model.
        ``shipTo`` | Address, required | The recipient's shipping address. Use the [**Address**](http://www.shipstation.com/developer-api/#/reference/model-address) model.
        ``items`` | OrderItem, optional | An array of item objects.  Use an array of [**OrderItem**](http://www.shipstation.com/developer-api/#/reference/model-orderitem) models.
        ``amountPaid`` | number, optional | The total amount paid for the Order.
        ``taxAmount`` | number, optional | The total tax amount for the Order.
        ``shippingAmount`` | number, optional | Shipping amount paid by the customer, if any.
        ``customerNotes`` | string, optional | Notes left by the customer when placing the order.
        ``internalNotes`` | string, optional | Private notes that are only visible to the seller.
        ``gift`` | boolean, optional | Specifies whether or not this Order is a gift
        ``giftMessage`` | string, optional | Gift message left by the customer when placing the order.
        ``paymentMethod`` | string, optional | Method of payment used by the customer.
        ``requestedShippingService`` | string, optional |Identifies the shipping service selected by the customer when placing this order. This value is given to ShipStation by the marketplace/cart and helps identify what shipping service the customer selected upon checkout.
        ``carrierCode`` | string, optional | The code for the carrier that is to be used(or was used) when this order is shipped(was shipped).
        ``serviceCode`` | string, optional | The code for the shipping service that is to be used(or was used) when this order is shipped(was shipped).
        ``packageCode`` | string, optional | The code for the package type that is to be used(or was used) when this order is shipped(was shipped).
        ``confirmation`` | string, optional | The type of delivery confirmation that is to be used(or was used) when this order is shipped(was shipped). Possible values: ``none``, ``delivery``, ``signature``, ``adult_signature``, and ``direct_signature``.  ``direct_signature`` is available for FedEx only.  
        ``shipDate`` | string, optional | The date the order was shipped.
        ``weight`` | Weight, optional | Weight of the order.  Use the [**Weight**](http://www.shipstation.com/developer-api/#/reference/model-weight) model.
        ``dimensions`` | Dimensions, optional | Dimensions of the order.  Use the [**Dimensions**](http://www.shipstation.com/developer-api/#/reference/model-dimensions) model.
        ``insuranceOptions`` | InsuranceOptions, optional | The shipping insurance information associated with this order.  Use the [**InsuranceOptions**](http://www.shipstation.com/developer-api/#/reference/model-insuranceoptions) model.
        ``internationalOptions`` | InternationalOptions, optional | Customs information that can be used to generate customs documents for international orders.  Use the [**InternationalOptions**](http://www.shipstation.com/developer-api/#/reference/model-internationaloptions) model.
        ``advancedOptions`` | AdvancedOptions, optional | Various advanced options that may be available depending on the shipping carrier that is used to ship the order. Use the [**AdvancedOptions**](http://www.shipstation.com/developer-api/#/reference/model-advancedoptions) model.
        ``tagIds``|number[]|Array of tagIds.  Each tagId identifies a tag that has been associated with this order.
      operationId: Create/updateOrder
      parameters:
        - name: Content-Type
          in: header
          description: ""
          required: true
          style: simple
          explode: false
          schema:
            type: string
            example: application/json
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateOrUpdateOrderrequest"
        required: true
      responses:
        "200":
          description: ""
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateOrUpdateOrderresponse"
      deprecated: false
  /orders/createorders:
    post:
      tags:
        - Orders
      summary: Create or update multiple orders in one request. If the orderKey is specified, ShipStation will attempt to locate the order with the specified orderKey. If found, the existing order with that key will be updated. If the orderKey is not found, a new order will be created with that orderKey.
      description: |-
        This endpoint can be used to create or update multiple orders in one request. If the ``orderKey`` is specified in an order, the existing order with that key will be updated. Note: Only orders in an open status in ShipStation (``awaiting_payment``,``awaiting_shipment``, and ``on_hold``) can be updated through this method. ``cancelled`` and ``shipped`` are locked from modification through the API.
        Data Type          |Description
        -------------------|-------------------
        Order, required | An array of [**Order**](http://www.shipstation.com/developer-api/#/reference/model-order) objects (maximum of 100 per request)
      operationId: Create/updateMultipleOrders
      parameters:
        - name: Content-Type
          in: header
          description: ""
          required: true
          style: simple
          explode: false
          schema:
            type: string
            example: application/json
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/CreateOrUpdateMultipleOrdersrequest"
              description: ""
        required: true
      responses:
        "200":
          description: ""
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateOrUpdateMultipleOrdersresponse"
              example:
                hasErrors: false
                results:
                  - orderId: 58345234
                    orderNumber: TEST-ORDER-API-DOCS
                    orderKey: 0f6bec18-3e89-4881-83aa-f392d84f4c74
                    success: true
                    errorMessage: null
      deprecated: false
  /orders/holduntil:
    post:
      tags:
        - Orders
      summary: Change the status of the given order to On Hold until the date specified, when the status will automatically change to Awaiting Shipment.
      description: |-
        This method will change the status of the given order to On Hold until the date specified, when the status will automatically change to Awaiting Shipment.
        The body of this request should specify the following attributes:
        Name               |Data Type          |Description
        -------------------|-------------------|-------------------
        ``orderId`` | number, required | Identifies the order that will be held.
        ``holdUntilDate`` | string, required | Date when order is moved from ``on_hold`` status to ``awaiting_shipment``.
      operationId: HoldOrderUntil
      parameters:
        - name: Content-Type
          in: header
          description: ""
          required: true
          style: simple
          explode: false
          schema:
            type: string
            example: application/json
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/HoldOrderUntilrequest"
            example: |-
              {
                "orderId": 1072467,
                "holdUntilDate": "2014-12-01"
              }
        required: true
      responses:
        "200":
          description: ""
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HoldOrderUntilresponse"
              example:
                success: true
                message: Order held successfully.
      deprecated: false
  /orders:
    get:
      tags:
        - Orders
      summary: List orders.
      description: |-
        Obtains a list of orders that match the specified criteria.  All of the available filters are optional.  They do not need to be included in the URL.  If you do include them, here's what the URL may look like:
        Url format with filters:
        ```
        /orders?customerName={customerName}
        &itemKeyword={itemKeyword}
        &createDateStart={createDateStart}
        &createDateEnd={createDateEnd}
        &modifyDateStart={modifyDateStart}
        &modifyDateEnd={modifyDateEnd}
        &orderDateStart={orderDateStart}
        &orderDateEnd={orderDateEnd}
        &orderNumber={orderNumber}
        &orderStatus={orderStatus}
        &paymentDateStart={paymentDateStart}
        &paymentDateEnd={paymentDateEnd}
        &storeId={storeId}
        &sortBy={sortBy}
        &sortDir={sortDir}
        &page={page}
        &pageSize={pageSize}
        ```
      operationId: ListOrders
      parameters:
        - name: customerName
          in: query
          description: Returns orders that match the specified name.
          schema:
            type: string
            example: Smith
        - name: itemKeyword
          in: query
          description: Returns orders that contain items that match the specified keyword. Fields searched are Sku, Description, and Options
          schema:
            type: string
            example: ABC123
        - name: createDateStart
          in: query
          description: Returns orders that were created in ShipStation after the specified date
          schema:
            type: string
            example: "2015-01-01 00:00:00"
        - name: createDateEnd
          in: query
          description: Returns orders that were created in ShipStation before the specified date
          schema:
            type: string
            example: "2015-01-08 00:00:00"
        - name: modifyDateStart
          in: query
          description: Returns orders that were modified after the specified date
          schema:
            type: string
            example: "2015-01-01 00:00:00"
        - name: modifyDateEnd
          in: query
          description: Returns orders that were modified before the specified date
          schema:
            type: string
            example: "2015-01-08 00:00:00"
        - name: orderDateStart
          in: query
          description: Returns orders greater than the specified date
          schema:
            type: string
            example: "2015-01-01 00:00:00"
        - name: orderDateEnd
          in: query
          description: Returns orders less than or equal to the specified date
          schema:
            type: string
            example: "2015-01-08 00:00:00"
        - name: orderNumber
          in: query
          description: Filter by order number, performs a "starts with" search.
          schema:
            type: string
            example: "12345"
        - name: orderStatus
          in: query
          description: Filter by order status.  If left empty, orders of all statuses are returned.
          schema:
            $ref: "#/components/schemas/orderStatus"
        - name: paymentDateStart
          in: query
          description: Returns orders that were paid after the specified date
          schema:
            type: string
            example: "2015-01-01"
        - name: paymentDateEnd
          in: query
          description: Returns orders that were paid before the specified date
          schema:
            type: string
            example: "2015-01-08"
        - name: storeId
          in: query
          description: Filters orders to a single store. Call List Stores to obtain a list of store Ids.
          schema:
            type: integer
            example: 123456
        - name: sortBy
          in: query
          description: Sort the responses by a set value.  The response will be sorted based off the ascending dates (oldest to most current.)  If left empty, the response will be sorted by ascending ``orderId``.
          schema:
            $ref: "#/components/schemas/sortBy2"
        - name: sortDir
          in: query
          description: Sets the direction of the sort order.
          schema:
            $ref: "#/components/schemas/sortDir"
        - name: page
          in: query
          description: Page number
          schema:
            type: string
        - name: pageSize
          in: query
          description: Requested page size. Max value is 500.
          schema:
            type: string
      responses:
        "200":
          description: ""
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListOrdersResponse"
      deprecated: false
  /orders/listbytag:
    get:
      tags:
        - Orders
      summary: Lists all orders that match the specified status and tag ID
      description: |-
        Lists all orders that match the specified status and tag ID.
        Url format with filters:
        ```
        /listbytag?orderStatus={orderStatus}
        &tagId={tagId}
        &page={page}
        &pageSize={pageSize}
        ```
      operationId: ListOrdersByTag
      parameters:
        - name: orderStatus
          in: query
          description: The order's status.
          schema:
            $ref: "#/components/schemas/orderStatus"
        - name: tagId
          in: query
          description: ID of the tag. Call Accounts/ListTags to obtain a list of tags for this account.
          schema:
            type: integer
        - name: page
          in: query
          description: Page number
          schema:
            type: string
        - name: pageSize
          in: query
          description: Requested page size. Max value is 500.
          schema:
            type: string
      responses:
        "200":
          description: ""
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListOrdersbyTagresponse"
      deprecated: false
  /orders/markasshipped:
    post:
      tags:
        - Orders
      summary: Marks an order as shipped without creating a label in ShipStation.
      description: |-
        Marks an order as shipped without creating a label in ShipStation. The body of this request has the following attributes:
        Name               |Data Type          |Description
        -------------------|-------------------|-------------------
         ``orderId`` | number, required | Identifies the order that will be marked as shipped.
         ``carrierCode`` | string, required | Code of the carrier that is marked as having shipped the order.
         ``shipDate`` | string, optional | Date order was shipped.
         ``trackingNumber`` | string, optional | Tracking number of shipment.
         ``notifyCustomer``  | boolean, optional | Specifies whether the customer should be notified of the shipment. Default value: false
         ``notifySalesChannel`` | boolean, optional | Specifies whether the sales channel should be notified of the shipment. Default value: false
      operationId: MarkAnOrderAsShipped
      parameters:
        - name: Content-Type
          in: header
          description: ""
          required: true
          style: simple
          explode: false
          schema:
            type: string
            example: application/json
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MarkanOrderasShippedrequest"
            example: |-
              {
                  "orderId": 93348442,
                  "carrierCode": "usps",
                  "shipDate": "2014-04-01",
                  "trackingNumber": "913492493294329421",
                  "notifyCustomer": true,
                  "notifySalesChannel": true
              }
        required: true
      responses:
        "200":
          description: ""
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MarkanOrderasShippedresponse"
              example:
                orderId: 123456789
                orderNumber: ABC123
      deprecated: false
  /orders/removetag:
    post:
      tags:
        - Orders
      summary: Removes a tag from the specified order.
      description: |-
        Removes a tag from the specified order.  The body of this request has the following attributes:
        Name               |Data Type          |Description
        -------------------|-------------------|-------------------
        ``orderId`` | number, required | Identifies the order whose tag will be removed.
        ``tagId`` | number, required | Identifies the tag to remove.
      operationId: RemoveTagFromOrder
      parameters:
        - name: Content-Type
          in: header
          description: ""
          required: true
          style: simple
          explode: false
          schema:
            type: string
            example: application/json
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RemoveTagfromOrderrequest"
            example: |-
              {
                "orderId": 123456,
                "tagId": 1234
              }
        required: true
      responses:
        "200":
          description: ""
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RemoveTagfromOrderresponse"
              example:
                success: true
                message: Tag removed successfully.
      deprecated: false
  /orders/restorefromhold:
    post:
      tags:
        - Orders
      summary: Change the status of the given order from On Hold to Awaiting Shipment
      description: |-
        This method will change the status of the given order from On Hold to Awaiting Shipment. This endpoint is used when a holdUntil Date is attached to an order.
        The body of this request should specify the following attributes:
        Name               |Data Type          |Description
        -------------------|-------------------|-------------------
        ``orderId`` | number, required | Identifies the order that will be restored to ``awaiting_shipment`` from ``on_hold``.
      operationId: RestoreOrderFromOnHold
      parameters:
        - name: Content-Type
          in: header
          description: ""
          required: true
          style: simple
          explode: false
          schema:
            type: string
            example: application/json
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RestoreOrderfromOnHoldrequest"
            example: |-
              {
                "orderId": 1234567
              }
        required: true
      responses:
        "200":
          description: ""
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestoreOrderfromOnHoldresponse"
              example:
                success: true
                message: The requested order has been restored
      deprecated: false
  /orders/unassignuser:
    post:
      tags:
        - Orders
      summary: Unassigns a user from an order.
      description: |-
        Unassigns a user from an order.  The body of this request should specify the following attributes:
        Name               |Data Type          |Description
        -------------------|-------------------|-------------------
        ``orderIds`` | number, required | Identifies set of orders that will have the user unassigned.  Please note that if ANY of the orders within the array are not found, then no orders will have their users unassigned.
      operationId: UnassignUserFromOrder
      parameters:
        - name: Content-Type
          in: header
          description: ""
          required: true
          style: simple
          explode: false
          schema:
            type: string
            example: application/json
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UnassignUserfromOrderrequest"
            example: |-
              {
                "orderIds": [
                  123456789,
                  12345679
                  ]
              }
        required: true
      responses:
        "200":
          description: ""
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnassignUserfromOrderresponse"
              example:
                success: true
                message: User unassigned successfully.
      deprecated: false
  /products/{productId}:
    get:
      tags:
        - Products
      summary: Get product
      description: ""
      operationId: GetProduct
      parameters:
        - name: productId
          in: path
          description: The system generated identifier for the Product.
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            example: 12345678
      responses:
        "200":
          description: ""
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetProductresponse"
              example:
                aliases: null
                productId: 12345678
                sku: "1004"
                name: Coffee Mug
                price: 26
                defaultCost: 0
                length: 3
                width: 3
                height: 3
                weightOz: 26
                internalNotes: null
                fulfillmentSku: F1004
                createDate: "2014-09-04T09:18:01.293"
                modifyDate: "2014-09-18T12:38:43.893"
                active: true
                productCategory:
                  categoryId: 9999
                  name: Door Closers
                productType: null
                warehouseLocation: Bin 22
                defaultCarrierCode: fedex
                defaultServiceCode: fedex_home_delivery
                defaultPackageCode: package
                defaultIntlCarrierCode: ups
                defaultIntlServiceCode: ups_worldwide_saver
                defaultIntlPackageCode: package
                defaultConfirmation: direct_signature
                defaultIntlConfirmation: adult_signature
                customsDescription: null
                customsValue: null
                customsTariffNo: null
                customsCountryCode: null
                noCustoms: null
                tags:
                  - tagId: 9180
                    name: APItest
      deprecated: false
    put:
      tags:
        - Products
      summary: Updates an existing product.
      description: Updates an existing product. This call does not currently support partial updates. The entire resource must be provided in the body of the request.
      operationId: UpdateProduct
      parameters:
        - name: productId
          in: path
          description: The system generated identifier for the Product.
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            example: 12345678
        - name: Content-Type
          in: header
          description: ""
          required: true
          style: simple
          explode: false
          schema:
            type: string
            example: application/json
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateProductrequest"
            example: |-
              {
                      "aliases": null,
                      "productId": 123456789,
                      "sku": "",
                      "name": "Beautiful",
                      "price": 0,
                      "defaultCost": null,
                      "length": null,
                      "width": null,
                      "height": null,
                      "weightOz": null,
                      "internalNotes": null,
                      "fulfillmentSku": null,
                      "active": true,
                      "productCategory": null,
                      "productType": null,
                      "warehouseLocation": null,
                      "defaultCarrierCode": null,
                      "defaultServiceCode": null,
                      "defaultPackageCode": null,
                      "defaultIntlCarrierCode": null,
                      "defaultIntlServiceCode": null,
                      "defaultIntlPackageCode": null,
                      "defaultConfirmation": null,
                      "defaultIntlConfirmation": null,
                      "customsDescription": null,
                      "customsValue": null,
                      "customsTariffNo": null,
                      "customsCountryCode": null,
                      "noCustoms": null,
                      "tags": null
                  }
        required: true
      responses:
        "200":
          description: ""
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateProductresponse"
              example:
                success: true
                message: The requested product has been updated
      deprecated: false
  /products:
    get:
      tags:
        - Products
      summary: List products.
      description: |-
        Obtains a list of products that match the specified criteria.  All of the available filters are optional.  They do not need to be included in the URL.  If you do include them, here's what the URL may look like:
        Url format with filters:
        ```
        /products?sku={sku}
        &name={name}
        &productCategoryId={productCategoryId}
        &productTypeId={productTypeId}
        &tagId={tagId}
        &startDate={startDate}
        &endDate={endDate}
        &showInactive={showInactive}
        &sortBy={sortBy}
        &sortDir={sortDir}
        &page={page}
        &pageSize={pageSize}
        ```
      operationId: ListProducts
      parameters:
        - name: sku
          in: query
          description: Returns products that match the specified SKU.
          schema:
            type: string
        - name: name
          in: query
          description: Returns products that match the specified product name.
          schema:
            type: string
        - name: productCategoryId
          in: query
          description: Returns products that match the specified productCategoryId.
          schema:
            type: string
        - name: productTypeId
          in: query
          description: Returns products that match the specified productTypeId.
          schema:
            type: string
        - name: tagId
          in: query
          description: Returns products that match the specified tagId.
          schema:
            type: string
        - name: startDate
          in: query
          description: Returns products that were created after the specified date.
          schema:
            type: string
        - name: endDate
          in: query
          description: Returns products that were created before the specified date.
          schema:
            type: string
        - name: sortBy
          in: query
          description: Sorts the order of the response based off the specified value.
          schema:
            $ref: "#/components/schemas/sortBy3"
        - name: sortDir
          in: query
          description: Sets the direction of the sort order.
          schema:
            $ref: "#/components/schemas/sortDir"
        - name: page
          in: query
          description: Page number.
          schema:
            type: string
        - name: pageSize
          in: query
          description: Requested page size. Max value is 500.
          schema:
            type: string
        - name: showInactive
          in: query
          description: Specifies whether the list should include inactive products.
          schema:
            type: string
      responses:
        "200":
          description: ""
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListProductsResponse"
      deprecated: false
  /shipments:
    get:
      tags:
        - Shipments
      summary: List shipments.
      description: |-
        Obtains a list of shipments that match the specified criteria.  Please note the following:
        - Only valid shipments with labels generated in ShipStation will be returned in the response. Orders that have been marked as shipped either through the UI or the API will not appear as they are considered external shipments.
        - To include every shipment's associated shipmentItems in the response, be sure to set the `includeShipmentItems` parameter to `true`.
        All of the available filters are optional.  They do not need to be included in the URL.  If you do include them, here's what the URL may look like:
        Url format with filters:
        ```
        shipments?recipientName={recipientName}
        &recipientCountryCode={recipientCountryCode}
        &orderNumber={orderNumber}
        &orderId={orderId}
        &carrierCode={carrierCode}
        &serviceCode={serviceCode}
        &trackingNumber={trackingNumber}
        &createDateStart={createDateStart}
        &createDateEnd={createDateEnd}
        &shipDateStart={shipDateStart}
        &shipDateEnd={shipDateEnd}
        &voidDateStart={voidDateStart}
        &voidDateEnd={voidDateEnd}
        &storeId={storeId}
        &includeShipmentItems={includeShipmentItems}
        &sortBy={sortBy}
        &sortDir={sortDir}
        &page={page}
        &pageSize={pageSize}
        ```
      operationId: ListShipments
      parameters:
        - name: recipientName
          in: query
          description: Returns shipments shipped to the specified recipient name.
          schema:
            type: string
        - name: recipientCountryCode
          in: query
          description: Returns shipments shipped to the specified country code.
          schema:
            type: string
        - name: orderNumber
          in: query
          description: Returns shipments whose orders have the specified order number.
          schema:
            type: string
        - name: orderId
          in: query
          description: Returns shipments whose orders have the specified order ID.
          schema:
            type: integer
        - name: carrierCode
          in: query
          description: Returns shipments shipped with the specified carrier.
          schema:
            type: string
        - name: serviceCode
          in: query
          description: Returns shipments shipped with the specified shipping service.
          schema:
            type: string
        - name: trackingNumber
          in: query
          description: Returns shipments with the specified tracking number.
          schema:
            type: string
        - name: createDateStart
          in: query
          description: Returns shipments created on or after the specified ``createDate``
          schema:
            type: string
            example: "2015-01-01 00:00:00"
        - name: createDateEnd
          in: query
          description: Returns shipments created on or before the specified ``createDate``
          schema:
            type: string
            example: "2015-01-08 00:00:00"
        - name: shipDateStart
          in: query
          description: Returns shipments with the ``shipDate`` on or after the specified date
          schema:
            type: string
            example: "2015-01-01"
        - name: shipDateEnd
          in: query
          description: Returns shipments with the ``shipDate`` on or before the specified date
          schema:
            type: string
            example: "2015-01-08"
        - name: voidDateStart
          in: query
          description: Returns shipments voided on or after the specified date
          schema:
            type: string
            example: "2015-01-01 00:00:00"
        - name: voidDateEnd
          in: query
          description: Returns shipments voided on or before the specified date
          schema:
            type: string
            example: "2015-01-08 00:00:00"
        - name: storeId
          in: query
          description: Returns shipments whose orders belong to the specified store ID.
          schema:
            type: integer
            example: 304352
        - name: includeShipmentItems
          in: query
          description: "Specifies whether to include shipment items with results Default value: false."
          schema:
            type: boolean
            example: false
        - name: sortBy
          in: query
          description: Sort the responses by a set value.  The response will be sorted based off the ascending dates (oldest to most current.)  If left empty, the response will be sorted by ascending ``createDate``.
          schema:
            $ref: "#/components/schemas/sortBy1"
        - name: sortDir
          in: query
          description: Sets the direction of the sort order.
          schema:
            $ref: "#/components/schemas/sortDir"
        - name: page
          in: query
          description: page number.
          schema:
            type: integer
        - name: pageSize
          in: query
          description: page size.
          schema:
            type: integer
      responses:
        "200":
          description: ""
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListShipmentsResponse"
              example:
                shipments:
                  - shipmentId: 33974374
                    orderId: 43945660
                    orderKey: 8061c220f0794a9b92460b8bae6837e4
                    userId: 123456AB-ab12-3c4d-5e67-89f1abc1defa
                    orderNumber: 100038-1
                    createDate: "2014-10-03T06:51:33.627"
                    shipDate: "2014-10-03"
                    shipmentCost: 1.93
                    insuranceCost: 0
                    trackingNumber: "9400111899561704681189"
                    isReturnLabel: false
                    batchNumber: "100301"
                    carrierCode: stamps_com
                    serviceCode: usps_first_class_mail
                    packageCode: package
                    confirmation: delivery
                    warehouseId: 16079
                    voided: false
                    voidDate: null
                    marketplaceNotified: true
                    notifyErrorMessage: null
                    shipTo:
                      name: Yoda
                      company: ""
                      street1: 12223 LOWDEN LN
                      street2: ""
                      street3: null
                      city: MANCHACA
                      state: TX
                      postalCode: 78652-3602
                      country: US
                      phone: "2101235544"
                      residential: null
                    weight:
                      value: 1
                      units: ounces
                    dimensions: null
                    insuranceOptions:
                      provider: null
                      insureShipment: false
                      insuredValue: 0
                    advancedOptions: null
                    shipmentItems:
                      - orderItemId: 56568665
                        lineItemKey: null
                        sku: SQ3785739
                        name: Potato Kitten -
                        imageUrl: null
                        weight: null
                        quantity: 1
                        unitPrice: 1
                        warehouseLocation: null
                        options: null
                        productId: 7565777
                        fulfillmentSku: null
                    labelData: null
                    formData: null
                  - shipmentId: 33974373
                    orderId: 43337328
                    userId: 123456AB-ab12-3c4d-5e67-89f1abc1defa
                    orderNumber: "100028"
                    createDate: "2014-10-03T06:51:59.943"
                    shipDate: "2014-10-03"
                    shipmentCost: 1.93
                    insuranceCost: 0
                    trackingNumber: "9400111899561704681196"
                    isReturnLabel: false
                    batchNumber: "100300"
                    carrierCode: stamps_com
                    serviceCode: usps_first_class_mail
                    packageCode: package
                    confirmation: delivery
                    warehouseId: 14265
                    voided: false
                    voidDate: null
                    marketplaceNotified: true
                    notifyErrorMessage: null
                    shipTo:
                      name: Luke Skywalker
                      company: SS
                      street1: 2815 EXPOSITION BLVD
                      street2: ""
                      street3: null
                      city: AUSTIN
                      state: TX
                      postalCode: 78703-1221
                      country: US
                      phone: ""
                      residential: null
                    weight:
                      value: 1
                      units: ounces
                    dimensions: null
                    insuranceOptions:
                      provider: null
                      insureShipment: false
                      insuredValue: 0
                    advancedOptions: null
                    shipmentItems:
                      - orderItemId: 55827278
                        lineItemKey: null
                        sku: test
                        name: test
                        imageUrl: null
                        weight: null
                        quantity: 1
                        unitPrice: 1
                        warehouseLocation: null
                        options: null
                        productId: 7541107
                        fulfillmentSku: null
                    labelData: null
                    formData: null
                total: 2
                page: 1
                pages: 0
      deprecated: false
  /shipments/createlabel:
    post:
      tags:
        - Shipments
      summary: Create a shipment label
      description: |-
        Creates a shipping label.  The ``labelData`` field returned in the response is a base64 encoded PDF value. Simply decode and save the output as a PDF file to retrieve a printable label.  The body of this request has the following attributes:
        Name               |Data Type          |Description
        -------------------|-------------------|-------------------
         ``carrierCode`` | string, required | Identifies the carrier to be used for this label.
         ``serviceCode`` | string, required | Identifies the shipping service to be used for this label.
         ``packageCode`` | string, required | Identifies the packing type that should be used for this label.
         ``confirmation`` | string, optional | The type of delivery confirmation that is to be used once the shipment is created.  Possible values: ``none``, ``delivery``, ``signature``, ``adult_signature``, and ``direct_signature``.  ``direct_signature`` is available for FedEx only.
         ``shipDate`` | string, required | The date the shipment will be shipped.
         ``weight`` | Weight, required | Shipment's weight.  Use the [**Weight**](https://www.shipstation.com/developer-api/#/reference/model-weight) model.
         ``dimensions`` | Dimensions, optional | Shipment's dimensions.  Use the [**Dimensions**](https://www.shipstation.com/developer-api/#/reference/model-dimensions) model.
         ``shipFrom`` | Address, required | Address indicating shipment's origin.  Use the [**Address**](https://www.shipstation.com/developer-api/#/reference/model-address) model.
         ``shipTo`` | Address, required | Address indicating shipment's destination.  Use the [**Address**](https://www.shipstation.com/developer-api/#/reference/model-address) model.
         ``returnTo`` | Address, optional | Address indicating return address displayed on the label.  Use the [**Address**](https://www.shipstation.com/developer-api/#/reference/model-address) model.
         ``insuranceOptions`` | InsuranceOptions, optional | The shipping insurance information associated with this order.  
         ``internationalOptions`` | InternationalOptions, optional | Customs information that can be used to generate customs documents for international orders.  Use the [**InternationalOptions**](https://www.shipstation.com/developer-api/#/reference/model-internationaloptions) model.
         ``advancedOptions`` | AdvancedOptions, optional | Various advanced options that may be available depending on the shipping carrier that is used to ship the order.  Use the [**AdvancedOptions**](https://www.shipstation.com/developer-api/#/reference/model-advancedoptions) model. 
         ``testLabel`` | boolean, optional | Specifies whether a test label should be created. Default value: false.
      operationId: CreateShipmentLabel
      parameters:
        - name: Content-Type
          in: header
          description: ""
          required: true
          style: simple
          explode: false
          schema:
            type: string
            example: application/json
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateShipmentLabelrequest"
            example: |-
              {
                "carrierCode": "fedex",
                "serviceCode": "fedex_ground",
                "packageCode": "package",
                "confirmation": "delivery",
                "shipDate": "2014-04-03",
                "weight": {
                  "value": 3,
                  "units": "ounces"
                },
                "dimensions": {
                  "units": "inches",
                  "length": 7,
                  "width": 5,
                  "height": 6
                },
                "shipFrom": {
                  "name": "Jason Hodges",
                  "company": "ShipStation",
                  "street1": "2815 Exposition Blvd",
                  "street2": "Ste 2353242",
                  "street3": null,
                  "city": "Austin",
                  "state": "TX",
                  "postalCode": "78703",
                  "country": "US",
                  "phone": null,
                  "residential": false
                },
                "shipTo": {
                  "name": "The President",
                  "company": "US Govt",
                  "street1": "1600 Pennsylvania Ave",
                  "street2": "Oval Office",
                  "street3": null,
                  "city": "Washington",
                  "state": "DC",
                  "postalCode": "20500",
                  "country": "US",
                  "phone": null,
                  "residential": false
                },
                "insuranceOptions": null,
                "internationalOptions": null,
                "advancedOptions": null,
                "testLabel": false
              }
        required: true
      responses:
        "200":
          description: ""
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateShipmentLabelresponse"
              example:
                shipmentId: 123456789
                orderId: null
                userId: null
                customerEmail: null
                orderNumber: null
                createDate: "2016-04-03T12:11:36.863"
                shipDate: "2016-04-03"
                shipmentCost: 9.06
                insuranceCost: 0
                trackingNumber: "782390443992"
                isReturnLabel: false
                batchNumber: null
                carrierCode: fedex
                serviceCode: fedex_ground
                packageCode: package
                confirmation: delivery
                warehouseId: null
                voided: false
                voidDate: null
                marketplaceNotified: false
                notifyErrorMessage: null
                shipTo: null
                weight: null
                dimensions: null
                insuranceOptions: null
                advancedOptions: null
                shipmentItems: null
                labelData: JVBERi0xLjQKJeLjz9MKMiAwIG9iago8PC9MZW5ndGggNjIvRmlsdGVyL0ZsYXRlRGVjb2RlPj5zdHJlYW0KeJwr5HIK4TI2U...
                formData: null
      deprecated: false
  /shipments/getrates:
    post:
      tags:
        - Shipments
      summary: Retrieves shipping rates for the specified shipping details.
      description: |-
        Retrieves shipping rates for the specified shipping details.  The body of this request should specify the following attributes:
        Name               |Data Type          |Description
        -------------------|-------------------|-------------------
         ``carrierCode`` | string, required | Returns rates for the specified carrier.
         ``serviceCode`` | string, optional | Returns rates for the specified shipping service.
         ``packageCode`` | string, optional | Returns rates for the specified package type.
         ``fromPostalCode`` | string, required | Originating postal code.
         ``toState`` | string, optional | Destination State/Province. Please use two-character state/province abbreviation. Note this field is required for the following carriers: UPS
         ``toCountry`` | string, required | Destination Country.  Please use the two-character ISO country code.
         ``toPostalCode`` | string, required | Destination Postal Code.
         ``toCity`` | string, optional | Destination City.
         ``weight`` | Weight, required | Shipment's weight.  Use ``Weight`` object.
         ``dimensions`` | Dimensions, optional | Shipment's dimensions.  Use ``Dimensions`` object. 
         ``confirmation`` | string, optional | The type of delivery confirmation that is to be used once the shipment is created.  Possible values: ``none``, ``delivery``, ``signature``, ``adult_signature``, and ``direct_signature``.  ``direct_signature`` is available for FedEx only.
         ``residential`` | boolean, optional | Returns rates that account for the specified delivery confirmation type. Default value: false
      operationId: GetRates
      parameters:
        - name: Content-Type
          in: header
          description: ""
          required: true
          style: simple
          explode: false
          schema:
            type: string
            example: application/json
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetRatesrequest"
            example: |-
              {
                "carrierCode": "fedex",
                "serviceCode": null,
                "packageCode": null,
                "fromPostalCode": "78703",
                "toState": "DC",
                "toCountry": "US",
                "toPostalCode": "20500",
                "toCity": "Washington",
                "weight": {
                  "value": 3,
                  "units": "ounces"
                },
                "dimensions": {
                  "units": "inches",
                  "length": 7,
                  "width": 5,
                  "height": 6
                },
                "confirmation": "delivery",
                "residential": false
              }
        required: true
      responses:
        "200":
          description: ""
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/GetRatesresponse"
                description: ""
              example:
                - serviceName: FedEx First Overnight®
                  serviceCode: fedex_first_overnight
                  shipmentCost: 87.8
                  otherCost: 2.63
                - serviceName: FedEx Priority Overnight®
                  serviceCode: fedex_priority_overnight
                  shipmentCost: 50.23
                  otherCost: 1.51
                - serviceName: FedEx Standard Overnight®
                  serviceCode: fedex_standard_overnight
                  shipmentCost: 46.96
                  otherCost: 1.41
                - serviceName: FedEx 2Day® A.M.
                  serviceCode: fedex_2day_am
                  shipmentCost: 23.04
                  otherCost: 0.69
                - serviceName: FedEx 2Day®
                  serviceCode: fedex_2day
                  shipmentCost: 20.03
                  otherCost: 0.6
                - serviceName: FedEx Express Saver®
                  serviceCode: fedex_express_saver
                  shipmentCost: 14.28
                  otherCost: 0.43
                - serviceName: FedEx Ground®
                  serviceCode: fedex_ground
                  shipmentCost: 8.25
                  otherCost: 0.33
      deprecated: false
  /shipments/voidlabel:
    post:
      tags:
        - Shipments
      summary: Voids the specified label by shipmentId.
      description: |-
        Voids the specified label by shipmentId.  The body of this request should specify the following attributes:
        Name               |Data Type          |Description
        -------------------|-------------------|-------------------
         ``shipmentId`` | number, required | ID of the shipment to void.
      operationId: VoidLabel
      parameters:
        - name: Content-Type
          in: header
          description: ""
          required: true
          style: simple
          explode: false
          schema:
            type: string
            example: application/json
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VoidLabelrequest"
            example: |-
              {
                "shipmentId": 12345
              }
        required: true
      responses:
        "200":
          description: ""
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VoidLabelresponse"
              example:
                approved: true
                message: Label voided successfully
      deprecated: false
  /stores/{storeId}:
    get:
      tags:
        - Stores
      summary: Get store
      description: ""
      operationId: GetStore
      parameters:
        - name: storeId
          in: path
          description: A unique ID generated by ShipStation and assigned to each store.
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            example: 12345
      responses:
        "200":
          description: ""
          headers:
            Authorization:
              content:
                text/plain:
                  schema:
                    type: string
                  example: < Enter your Basic Authorization string here >
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetStoreresponse"
              example:
                storeId: 12345
                storeName: WooCommerce Store
                marketplaceId: 36
                marketplaceName: WooCommerce
                accountName: null
                email: null
                integrationUrl: http://shipstation-test.wpengine.com
                active: true
                companyName: ""
                phone: ""
                publicEmail: ""
                website: ""
                refreshDate: "2014-12-16T17:47:05.457"
                lastRefreshAttempt: "2014-12-16T09:47:05.457"
                createDate: "2014-11-06T15:21:13.223"
                modifyDate: "2014-11-10T08:02:19.117"
                autoRefresh: true
                statusMappings:
                  - orderStatus: awaiting_payment
                    statusKey: Pending
                  - orderStatus: awaiting_shipment
                    statusKey: Processing
                  - orderStatus: shipped
                    statusKey: Completed
                  - orderStatus: cancelled
                    statusKey: Cancelled
                  - orderStatus: on_hold
                    statusKey: On-hold
      deprecated: false
    put:
      tags:
        - Stores
      summary: Update store
      description: Updates an existing store. This call does not currently support partial updates. The entire resource must be provided in the body of the request.
      operationId: UpdateStore
      parameters:
        - name: storeId
          in: path
          description: A unique ID generated by ShipStation and assigned to each store.
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            example: 12345
        - name: Content-Type
          in: header
          description: ""
          required: true
          style: simple
          explode: false
          schema:
            type: string
            example: application/json
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateStorerequest"
            example: |-
              {
                  "storeId": 12345,
                  "storeName": "WooCommerce Store",
                  "marketplaceId": 36,
                  "marketplaceName": "WooCommerce",
                  "accountName": null,
                  "email": null,
                  "integrationUrl": "http://shipstation-test.wpengine.com",
                  "active": true,
                  "companyName": "",
                  "phone": "",
                  "publicEmail": "",
                  "website": "",
                  "refreshDate": "2014-12-16T17:47:05.457",
                  "lastRefreshAttempt": "2014-12-16T09:47:05.457",
                  "createDate": "2014-11-06T15:21:13.223",
                  "modifyDate": "2014-11-10T08:02:19.117",
                  "autoRefresh": true,
                  "statusMappings": [
                      {
                          "orderStatus": "awaiting_payment",
                          "statusKey": "Pending"
                      },
                      {
                          "orderStatus": "awaiting_shipment",
                          "statusKey": "Processing"
                      },
                      {
                          "orderStatus": "shipped",
                          "statusKey": "Completed"
                      },
                      {
                          "orderStatus": "cancelled",
                          "statusKey": "Cancelled"
                      },
                      {
                          "orderStatus": "on_hold",
                          "statusKey": "On-hold"
                      }
                  ]
              }
        required: true
      responses:
        "200":
          description: ""
          headers:
            Authorization:
              content:
                text/plain:
                  schema:
                    type: string
                  example: < Enter your Basic Authorization string here >
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateStoreresponse"
              example:
                storeId: 12345
                storeName: WooCommerce Store
                marketplaceId: 36
                marketplaceName: WooCommerce
                accountName: null
                email: null
                integrationUrl: http://shipstation-test.wpengine.com
                active: true
                companyName: ""
                phone: ""
                publicEmail: ""
                website: ""
                refreshDate: "2014-12-16T17:47:05.457"
                lastRefreshAttempt: "2014-12-16T09:47:05.457"
                createDate: "2014-11-06T15:21:13.223"
                modifyDate: "2014-11-10T08:02:19.117"
                autoRefresh: true
                statusMappings:
                  - orderStatus: awaiting_payment
                    statusKey: Pending
                  - orderStatus: awaiting_shipment
                    statusKey: Processing
                  - orderStatus: shipped
                    statusKey: Completed
                  - orderStatus: cancelled
                    statusKey: Cancelled
                  - orderStatus: on_hold
                    statusKey: On-hold
      deprecated: false
  /stores/getrefreshstatus:
    get:
      tags:
        - Stores
      summary: Retrieves the refresh status of a given store.
      operationId: GetStoreRefreshStatus
      parameters:
        - name: storeId
          in: query
          description: Specifies the store whose status will be retrieved.
          schema:
            type: integer
            example: 12345
      responses:
        "200":
          description: ""
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetStoreRefreshStatusresponse"
              example:
                storeId: 12345
                refreshStatusId: 2
                refreshStatus: Updating orders
                lastRefreshAttempt: 8-13-2014
                refreshDate: 8-13-2014
      deprecated: false
  /stores/refreshstore:
    post:
      tags:
        - Stores
      summary: Refresh store
      description: Initiates a store refresh.
      operationId: RefreshStore
      parameters:
        - name: Content-Type
          in: header
          description: ""
          required: true
          style: simple
          explode: false
          schema:
            type: string
            example: application/json
        - name: storeId
          in: query
          description: Specifies the store which will get refreshed.  If the storeId is not specified, a store refresh will be initiated for all refreshable stores on that account.
          schema:
            type: integer
        - name: refreshDate
          in: query
          description: Specifies the starting date for new order imports.  If the refreshDate is not specified, ShipStation will use the last recorded refreshDate for that store.
          schema:
            type: string
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RefreshStorerequest"
            example: |-
              {
                "storeId": 12345,
                "refreshDate": "12-08-2014"
              }
        required: true
      responses:
        "200":
          description: ""
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RefreshStoreresponse"
              example:
                success: true
                message: A store refresh has been initiated for Store ID 12345
      deprecated: false
  /stores:
    get:
      tags:
        - Stores
      summary: Retrieve the list of installed stores on the account.
      operationId: ListStores
      parameters:
        - name: showInactive
          in: query
          description: Determines whether inactive stores will be returned in the list of stores.
          schema:
            type: boolean
            example: false
        - name: marketplaceId
          in: query
          description: Returns stores of this marketplace type.
          schema:
            type: integer
      responses:
        "200":
          description: ""
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ListStoresresponse"
                description: ""
              example:
                - storeId: 22766
                  storeName: ShipStation Manual Store
                  marketplaceId: 0
                  marketplaceName: ShipStation
                  accountName: null
                  email: null
                  integrationUrl: null
                  active: true
                  companyName: ""
                  phone: ""
                  publicEmail: testemail@email.com
                  website: ""
                  refreshDate: "2014-12-03T11:46:11.283"
                  lastRefreshAttempt: "2014-12-03T11:46:53.433"
                  createDate: "2014-07-25T11:05:55.307"
                  modifyDate: "2014-11-12T08:45:20.55"
                  autoRefresh: false
                - storeId: 25748
                  storeName: Ashley's Test WooCommerce
                  marketplaceId: 36
                  marketplaceName: WooCommerce
                  accountName: null
                  email: null
                  integrationUrl: http://shipstation.wpengine.com/
                  active: true
                  companyName: ""
                  phone: ""
                  publicEmail: ""
                  website: ""
                  refreshDate: "2014-11-26T22:28:14.07"
                  lastRefreshAttempt: "2014-11-26T14:28:14.07"
                  createDate: "2014-11-10T08:53:48.077"
                  modifyDate: "2014-12-03T14:53:50.557"
                  autoRefresh: true
      deprecated: false
  /stores/marketplaces:
    get:
      tags:
        - Stores
      summary: Lists the marketplaces that can be integrated with ShipStation.
      operationId: ListMarketplaces
      parameters: []
      responses:
        "200":
          description: ""
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ListMarketplacesresponse"
                description: ""
              example:
                - name: 3DCart
                  marketplaceId: 23
                  canRefresh: true
                  supportsCustomMappings: true
                  supportsCustomStatuses: false
                  canConfirmShipments: true
                - name: Amazon
                  marketplaceId: 2
                  canRefresh: true
                  supportsCustomMappings: true
                  supportsCustomStatuses: false
                  canConfirmShipments: true
                - name: Amazon CA
                  marketplaceId: 32
                  canRefresh: true
                  supportsCustomMappings: true
                  supportsCustomStatuses: false
                  canConfirmShipments: true
      deprecated: false
  /stores/deactivate:
    post:
      tags:
        - Stores
      summary: Deactivate store
      description: |-
        Deactivates the specified store.
        The body of this request has the following attributes:
        Name               |Data Type          |Description
        -------------------|-------------------|-------------------
        ``storeId``  | number, required | ID of the store to deactivate.
      operationId: DeactivateStore
      parameters:
        - name: Content-Type
          in: header
          description: ""
          required: true
          style: simple
          explode: false
          schema:
            type: string
            example: application/json
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeactivateStorerequest"
            example: |-
              {
                "storeId": "12345"
              }
        required: true
      responses:
        "200":
          description: ""
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeactivateStoreresponse"
              example:
                success: "true"
                message: The requested store has been reactivated.
      deprecated: false
  /stores/reactivate:
    post:
      tags:
        - Stores
      summary: Reactivate store
      description: |-
        Reactivates the specified store. Note: stores are active by default
        The body of this request has the following attributes:
        Name               |Data Type          |Description
        -------------------|-------------------|-------------------
        ``storeId``  | number, required | ID of the store to reactivate.
      operationId: ReactivateStore
      parameters:
        - name: Content-Type
          in: header
          description: ""
          required: true
          style: simple
          explode: false
          schema:
            type: string
            example: application/json
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReactivateStorerequest"
            example: |-
              {
                "storeId": "12345"
              }
        required: true
      responses:
        "200":
          description: ""
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReactivateStoreresponse"
              example:
                success: "true"
                message: The requested store has been reactivated.
      deprecated: false
  /users:
    get:
      tags:
        - Users
      summary: List users
      description: ""
      operationId: ListUsers
      parameters:
        - name: showInactive
          in: query
          description: Determines whether inactive users will be returned in the response.
          schema:
            type: boolean
            example: false
      responses:
        "200":
          description: ""
          headers:
            Authorization:
              content:
                text/plain:
                  schema:
                    type: string
                  example: < Enter your Basic Authorization string here >
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListUsersresponse"
              example:
                userId: 123456AB-ab12-3c4d-5e67-89f1abc1defa
                userName: SS-user1
                name: Shipping Employee 1
      deprecated: false
  /warehouses/{warehouseId}:
    get:
      tags:
        - Warehouses
      summary: Returns a list of active Ship From Locations (formerly known as warehouses) on the ShipStation account. Warehouses are now called "Ship From Locations" in the UI.
      operationId: GetWarehouse
      parameters:
        - name: warehouseId
          in: path
          description: A unique ID generated by ShipStation and assigned to each Ship From Location (formerly known as warehouse).
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            example: 12345678
      responses:
        "200":
          description: ""
          headers:
            Authorization:
              content:
                text/plain:
                  schema:
                    type: string
                  example: < Enter your Basic Authorization string here >
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetWarehouseresponse"
              example:
                warehouseId: 12345
                warehouseName: API Ship From Location
                originAddress:
                  name: API Warehouse
                  company: ShipStation
                  street1: 2815 Exposition Blvd
                  street2: null
                  street3: null
                  city: Austin
                  state: TX
                  postalCode: "78703"
                  country: US
                  phone: 512-555-5555
                  residential: true
                  addressVerified: null
                returnAddress:
                  name: API Ship From Location
                  company: ShipStation
                  street1: 2815 Exposition Blvd
                  street2: null
                  street3: null
                  city: Austin
                  state: TX
                  postalCode: "78703"
                  country: US
                  phone: 512-555-5555
                  residential: null
                  addressVerified: null
                createDate: "2015-07-02T08:38:31.487"
                isDefault: true
      deprecated: false
    put:
      tags:
        - Warehouses
      summary: Updates an existing Ship From Location (formerly known as warehouse). 
      description: Updates an existing Ship From Location (formerly known as warehouse). This call does not currently support partial updates. The entire resource must be provided in the body of the request. If a "returnAddress" object is not specified, your "originAddress" will be used as your "returnAddress".
      operationId: UpdateWarehouse
      parameters:
        - name: Content-Type
          in: header
          description: ""
          required: true
          style: simple
          explode: false
          schema:
            type: string
            example: application/json
        - name: warehouseId
          in: path
          description: A unique ID generated by ShipStation and assigned to each Ship From Location (formerly known as warehouse).
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            example: 12345678
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateWarehouserequest"
            example: |-
              {
                  "warehouseId": 12345,
                  "warehouseName": "API Ship From Location",
                  "originAddress": {
                    "name": "API Warehouse",
                    "company": "ShipStation",
                    "street1": "2815 Exposition Blvd",
                    "street2": null,
                    "street3": null,
                    "city": "Austin",
                    "state": "TX",
                    "postalCode": "78703",
                    "country": "US",
                    "phone": "512-555-5555",
                    "residential": true,
                    "addressVerified": null
                  },
                  "returnAddress": {
                    "name": "API Ship From Location",
                    "company": "ShipStation",
                    "street1": "2815 Exposition Blvd",
                    "street2": null,
                    "street3": null,
                    "city": "Austin",
                    "state": "TX",
                    "postalCode": "78703",
                    "country": "US",
                    "phone": "512-555-5555",
                    "residential": null,
                    "addressVerified": null
                  },
                  "createDate": "2015-07-02T08:38:31.4870000",
                  "isDefault": true
                }
        required: true
      responses:
        "200":
          description: ""
          headers:
            Authorization:
              content:
                text/plain:
                  schema:
                    type: string
                  example: < Enter your Basic Authorization string here >
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateWarehouseresponse"
              example:
                warehouseId: 12345
                warehouseName: API Ship From Location
                originAddress:
                  name: API Warehouse
                  company: ShipStation
                  street1: 2815 Exposition Blvd
                  street2: null
                  street3: null
                  city: Austin
                  state: TX
                  postalCode: "78703"
                  country: US
                  phone: 512-555-5555
                  residential: true
                  addressVerified: null
                returnAddress:
                  name: API Ship From Location
                  company: ShipStation
                  street1: 2815 Exposition Blvd
                  street2: null
                  street3: null
                  city: Austin
                  state: TX
                  postalCode: "78703"
                  country: US
                  phone: 512-555-5555
                  residential: null
                  addressVerified: null
                createDate: "2015-07-02T08:38:31.487"
                isDefault: true
      deprecated: false
    delete:
      tags:
        - Warehouses
      summary: Delete warehouse
      description: Removes warehouse from ShipStation's UI. Note this is a "soft" delete action so the warehouse will still exist in the database, but will be set to inactive
      operationId: DeleteWarehouse
      parameters:
        - name: warehouseId
          in: path
          description: A unique ID generated by ShipStation and assigned to each Ship From Location (formerly known as warehouse).
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            example: 12345678
      responses:
        "200":
          description: ""
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteWarehouseresponse"
              example:
                success: true
                message: The requested warehouse has been deleted.
      deprecated: false
  /warehouses/createwarehouse:
    post:
      tags:
        - Warehouses
      summary: Create warehouse
      description: |-
        Adds a Ship From Location (formerly known as warehouse) to your account.  The body of this request should specify the following attributes:
        Name               |Data Type          |Description
        -------------------|-------------------|-------------------
         ``warehouseName`` | string, optional | Name of Ship From Location.
         ``originAddress`` | Address, required | The origin address.  Shipping rates will be calculated from this address.  Use the [**Address**](https://www.shipstation.com/developer-api/#/reference/model-address) model.
         ``returnAddress`` | Address, optional | The return address.  If a "returnAddress" is not specified, your "originAddress" will be used as your "returnAddress". Use the [**Address**](https://www.shipstation.com/developer-api/#/reference/model-address) model.
         ``isDefault`` | boolean, optional | Specifies whether or not this will be your default Ship From Location.
      operationId: CreateWarehouse
      parameters:
        - name: Content-Type
          in: header
          description: ""
          required: true
          style: simple
          explode: false
          schema:
            type: string
            example: application/json
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateWarehouserequest"
            example: |-
              {
                "warehouseName": "New Ship From Location",
                "originAddress": {
                  "name": "NM Warehouse",
                  "company": "White Sands Co.",
                  "street1": "4704 Arabela Dr.",
                  "street2": null,
                  "street3": null,
                  "city": "Las Cruces",
                  "state": "NM",
                  "postalCode": "80012",
                  "country": "US",
                  "phone": "512-111-2222",
                  "residential": true
                },
                "returnAddress": null,
                "isDefault": false
              }
        required: true
      responses:
        "200":
          description: ""
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateWarehouseresponse"
              example:
                warehouseId: 17977
                warehouseName: New Ship From Location
                originAddress:
                  name: NM Warehouse
                  company: White Sands Co
                  street1: 4704 Arabela Dr.
                  street2: ""
                  street3: ""
                  city: Las Cruces
                  state: NM
                  postalCode: "88012"
                  country: US
                  phone: 512-111-2222
                  residential: true
                returnAddress:
                  name: NM Warehouse
                  company: White Sands Co
                  street1: 4704 Arabela Dr.
                  street2: ""
                  street3: ""
                  city: Las Cruces
                  state: NM
                  postalCode: "88012"
                  country: US
                  phone: 512-111-2222
                  residential: null
                createDate: "2014-10-21T08:11:43.88"
                isDefault: false
      deprecated: false
  /warehouses:
    get:
      tags:
        - Warehouses
      summary: Retrieves a list of your Ship From Locations (formerly known as warehouses).
      operationId: ListWarehouses
      parameters: []
      responses:
        "200":
          description: ""
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ListWarehousesresponse"
                description: ""
              example:
                - warehouseId: 17977
                  warehouseName: Main warehouse
                  originAddress:
                    name: Spring warehouse
                    company: ""
                    street1: "123 S SPRING RD  "
                    street2: ""
                    street3: ""
                    city: Elmurst
                    state: IL
                    postalCode: "60126"
                    country: US
                    phone: "5121112222"
                    residential: false
                  returnAddress:
                    name: Chicago House
                    company: ""
                    street1: "123 S SPRING RD  "
                    street2: ""
                    street3: ""
                    city: Elmurst
                    state: IL
                    postalCode: "60126"
                    country: US
                    phone: "5121112222"
                    residential: null
                  createDate: "2014-10-21T08:11:43.88"
                  isDefault: true
                - warehouseId: 14265
                  warehouseName: Austin
                  originAddress:
                    name: Austin
                    company: ShipStation
                    street1: 2815 Exposition Blvd
                    street2: ""
                    street3: ""
                    city: Austin
                    state: TX
                    postalCode: "78703"
                    country: US
                    phone: "5124445555"
                    residential: false
                  returnAddress:
                    name: ShipStation
                    company: ShipStation
                    street1: 2815 Exposition Blvd
                    street2: ""
                    street3: ""
                    city: Austin
                    state: TX
                    postalCode: "78703"
                    country: US
                    phone: "5124445555"
                    residential: null
                  createDate: "2014-05-27T09:54:29.96"
                  isDefault: false
      deprecated: false
  /webhooks:
    get:
      tags:
        - Webhooks
      summary: Retrieves a list of registered webhooks for the account
      operationId: ListWebhooks
      parameters: []
      responses:
        "200":
          description: ""
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListWebhooksresponse"
              example:
                webhooks:
                  - IsLabelAPIHook: false
                    WebHookID: 123
                    SellerID: 100000
                    StoreID: 12345
                    HookType: ITEM_ORDER_NOTIFY
                    MessageFormat: Json
                    Url: http://example.endpoint/orders
                    Name: My Order Webhook
                    BulkCopyBatchID: null
                    BulkCopyRecordID: null
                    Active: true
                    WebhookLogs: []
                    Seller: null
                    Store: null
                  - IsLabelAPIHook: false
                    WebHookID: 456
                    SellerID: 100000
                    StoreID: 98765
                    HookType: SHIP_NOTIFY
                    MessageFormat: Json
                    Url: https://example.endpoint/shipment
                    Name: My Shipment Webhook
                    BulkCopyBatchID: null
                    BulkCopyRecordID: null
                    Active: true
                    WebhookLogs: []
                    Seller: null
                    Store: null
      deprecated: false
  /webhooks/subscribe:
    post:
      tags:
        - Webhooks
      summary: Subscribe to webhook
      description: |-
        Subscribes to a specific type of webhook. If a ``store_id`` is passed in, the webhooks will only be triggered for that specific ``store_id``.
        The ``event`` type that is passed in will determine what type of webhooks will be sent.
        Webhooks can be viewed & edited via the ShipStation Application under Integrations in the [**Account Settings**](https://ss.shipstation.com/#/settings/integrations).
        NOTE: Webhooks will be sent to the URL specified in the ``target_url``. The HTTP request will be sent via POST and will contain a [**webhook JSON object**](https://www.shipstation.com/developer-api/#/reference/model-webhook) in the body.
        The body of this request to subscribe has the following attributes:
        Name               |Data Type          |Description
        -------------------|-------------------|-------------------
        ``target_url``  | string, required | The URL to send the webhooks to
        ``event`` | string, required | The type of webhook to subscribe to. Must contain one of the following values: ORDER_NOTIFY, ITEM_ORDER_NOTIFY, SHIP_NOTIFY, ITEM_SHIP_NOTIFY
        ``store_id`` | int, optional | If passed in, the webhooks will only be triggered for this ``store_id``
        ``friendly_name`` | string, optional | Display name for the webhook
      operationId: SubscribeToWebhook
      parameters:
        - name: Content-Type
          in: header
          description: ""
          required: true
          style: simple
          explode: false
          schema:
            type: string
            example: application/json
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SubscribetoWebhookrequest"
            example: |-
              {
                "target_url": "http://someexamplewebhookurl.com/neworder",
                "event": "ORDER_NOTIFY",
                "store_id": null,
                "friendly_name": "My Webhook"
              }
        required: true
      responses:
        "200":
          description: ""
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SubscribetoWebhookresponse"
              example:
                id: 123456
      deprecated: false
  /webhooks/{webhookId}:
    delete:
      tags:
        - Webhooks
      summary: Unsubscribe to Webhook
      description: Unsubscribes from a certain webhook.
      operationId: UnsubscribeToWebhook
      parameters:
        - name: webhookId
          in: path
          description: A unique ID generated by ShipStation and assigned to each webhook.
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            example: 12345
        - name: Content-Type
          in: header
          description: ""
          required: true
          style: simple
          explode: false
          schema:
            type: string
            example: application/json
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
components:
  schemas:
    RegisterAccountrequest:
      title: RegisterAccountrequest
      required:
        - firstName
        - lastName
        - email
        - password
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        password:
          type: string
        companyName:
          type: string
        addr1:
          type: string
        addr2:
          type: string
        city:
          type: string
        state:
          type: string
        zip:
          type: string
        countryCode:
          type: string
        phone:
          type: string
      example:
        firstName: John
        lastName: Smith
        email: jsmithtest@gmail.com
        password: testpw1234
        shippingOriginCountryCode: US
        companyName: Droid Repair LLC
        addr1: 542 Midichlorian Rd.
        addr2: ""
        city: Austin
        state: TX
        zip: "78703"
        countryCode: US
        phone: "5124111234"
    RegisterAccountresponse:
      title: RegisterAccountresponse
      required:
        - message
        - sellerId
        - success
        - apiKey
        - apiSecret
      type: object
      properties:
        message:
          type: string
        sellerId:
          type: integer
          format: int32
        success:
          type: boolean
        apiKey:
          type: string
        apiSecret:
          type: string
      example:
        message: ShipStation account created.
        sellerId: 123456
        success: true
        apiKey: abcdt9845hjmgfklj3498gkljdkuyekl
        apiSecret: 1234iou983lkj8mnxgfwu509hkhdy7u3
    ListTagsresponse:
      title: ListTagsresponse
      required:
        - tagId
        - name
        - color
      type: object
      properties:
        tagId:
          type: integer
          format: int32
          example: 8362
        name:
          type: string
          example: Backorder
        color:
          type: string
          example: "#800080"
      example:
        tagId: 8362
        name: Backorder
        color: "#800080"
    ListCarriersresponse:
      title: ListCarriersresponse
      required:
        - name
        - code
        - accountNumber
        - requiresFundedAccount
        - balance
        - shippingProviderId
        - primary
      type: object
      properties:
        name:
          type: string
          example: Stamps.com
        code:
          type: string
          example: stamps_com
        accountNumber:
          type: string
          example: SS123
        requiresFundedAccount:
          type: boolean
          example: true
        balance:
          type: number
          example: 24.27
        nickname:
          type: string
          nullable: true
        shippingProviderId:
          type: integer
          format: int32
          example: 12345
        primary:
          type: boolean
          example: true
      example:
        name: Stamps.com
        code: stamps_com
        accountNumber: SS123
        requiresFundedAccount: true
        balance: 24.27
        nickname: "null"
        shippingProviderId: 12345
        primary: true
    GetCarrierresponse:
      title: GetCarrierresponse
      required:
        - name
        - code
        - accountNumber
        - requiresFundedAccount
        - balance
        - shippingProviderId
        - primary
      type: object
      properties:
        name:
          type: string
        code:
          type: string
        accountNumber:
          type: string
        requiresFundedAccount:
          type: boolean
        balance:
          type: number
        nickname:
          type: string
          nullable: true
        shippingProviderId:
          type: integer
          format: int32
        primary:
          type: boolean
      example:
        name: Stamps.com
        code: stamps_com
        accountNumber: SS123
        requiresFundedAccount: true
        balance: 24.27
        nickname: null
        shippingProviderId: 12345
        primary: true
    AddFundsrequest:
      title: AddFundsrequest
      required:
        - carrierCode
        - amount
      type: object
      properties:
        carrierCode:
          type: string
        amount:
          type: number
      example:
        carrierCode: fedex
        amount: 20
    AddFundsresponse:
      title: AddFundsresponse
      required:
        - name
        - code
        - accountNumber
        - requiresFundedAccount
        - balance
      type: object
      properties:
        name:
          type: string
        code:
          type: string
        accountNumber:
          type: string
        requiresFundedAccount:
          type: boolean
        balance:
          type: number
      example:
        name: Stamps.com
        code: stamps_com
        accountNumber: SS123
        requiresFundedAccount: true
        balance: 24.14
    ListPackagesresponse:
      title: ListPackagesresponse
      required:
        - carrierCode
        - code
        - name
        - domestic
        - international
      type: object
      properties:
        carrierCode:
          type: string
          example: express_1
        code:
          type: string
          example: cubic
        name:
          type: string
          example: Cubic
        domestic:
          type: boolean
          example: true
        international:
          type: boolean
          example: false
      example:
        carrierCode: express_1
        code: cubic
        name: Cubic
        domestic: true
        international: false
    ListServicesresponse:
      title: ListServicesresponse
      required:
        - carrierCode
        - code
        - name
        - domestic
        - international
      type: object
      properties:
        carrierCode:
          type: string
          example: fedex
        code:
          type: string
          example: fedex_ground
        name:
          type: string
          example: FedEx Ground®
        domestic:
          type: boolean
          example: true
        international:
          type: boolean
          example: false
      example:
        carrierCode: fedex
        code: fedex_ground
        name: FedEx Ground®
        domestic: true
        international: false
    GetCustomerresponse:
      title: GetCustomerresponse
      required:
        - customerId
        - createDate
        - modifyDate
        - name
        - company
        - street1
        - street2
        - city
        - state
        - postalCode
        - countryCode
        - phone
        - email
        - addressVerified
        - marketplaceUsernames
        - tags
      type: object
      properties:
        customerId:
          type: integer
          format: int32
        createDate:
          type: string
        modifyDate:
          type: string
        name:
          type: string
        company:
          type: string
        street1:
          type: string
        street2:
          type: string
        city:
          type: string
        state:
          type: string
        postalCode:
          type: string
        countryCode:
          type: string
        phone:
          type: string
        email:
          type: string
        addressVerified:
          type: string
        marketplaceUsernames:
          type: array
          items:
            $ref: "#/components/schemas/MarketplaceUsername"
          description: ""
        tags:
          type: array
          items:
            $ref: "#/components/schemas/Tag"
          description: ""
      example:
        customerId: 12345678
        createDate: '"2014-11-18T10:33:01.19"'
        modifyDate: '"2014-11-18T10:33:01.19"'
        name: Cam Newton
        company: Test Company
        street1: 123 War Eagle Lane
        street2: ""
        city: Auburn
        state: AL
        postalCode: "36830"
        countryCode: US
        phone: 555-555-5555
        email: supermancam@example.com
        addressVerified: Verified
        marketplaceUsernames:
          - customerUserId: 67195020
            customerId: 12345678
            createDate: '"2015-04-27T12:35:03.83"'
            modifyDate: '"2015-05-14T08:16:15.27"'
            marketplaceId: 0
            marketplace: ShipStation
            username: camtheman@gmail.com
          - customerUserId: 37568588
            customerId: 12345678
            createDate: '"2014-11-18T10:33:01.197"'
            modifyDate: '"2014-11-18T10:33:01.197"'
            marketplaceId: 36
            marketplace: WooCommerce
            username: supercam@example.com
          - customerUserId: 46038940
            customerId: 12345678
            createDate: "null"
            modifyDate: "null"
            marketplaceId: 67
            marketplace: TradeGecko
            username: camtheman@gmail.com
        tags:
          - tagId: 1234
            name: Expedited
          - tagId: 9725
            name: 00 BULK ORDERED
    MarketplaceUsername:
      title: MarketplaceUsername
      required:
        - customerUserId
        - customerId
        - createDate
        - modifyDate
        - marketplaceId
        - marketplace
        - username
      type: object
      properties:
        customerUserId:
          type: integer
          format: int32
          example: 67195020
        customerId:
          type: integer
          format: int32
          example: 12345678
        createDate:
          type: string
          example: 4/27/2015 12:35:03 PM
        modifyDate:
          type: string
          example: 5/14/2015 8:16:15 AM
        marketplaceId:
          type: integer
          format: int32
          example: 0
        marketplace:
          type: string
          example: ShipStation
        username:
          type: string
          example: camtheman@gmail.com
      example:
        customerUserId: 67195020
        customerId: 12345678
        createDate: '"2015-04-27T12:35:03.83"'
        modifyDate: '"2015-05-14T08:16:15.27"'
        marketplaceId: 0
        marketplace: ShipStation
        username: camtheman@gmail.com
    Tag:
      title: Tag
      required:
        - tagId
        - name
      type: object
      properties:
        tagId:
          type: integer
          format: int32
          example: 1234
        name:
          type: string
          example: Expedited
      example:
        tagId: 1234
        name: Expedited
    sortBy:
      title: sortBy
      enum:
        - Name
        - ModifyDate
        - CreateDate
      type: string
      example: Name
    sortDir:
      title: sortDir
      enum:
        - ASC
        - DESC
      type: string
      example: ASC
    ListCustomersResponse:
      title: ListCustomersResponse
      required:
        - customers
        - total
        - page
        - pages
      type: object
      properties:
        customers:
          type: array
          items:
            $ref: "#/components/schemas/Customer"
          description: ""
        total:
          type: integer
          format: int32
        page:
          type: integer
          format: int32
        pages:
          type: integer
          format: int32
      example:
        customers:
          - customerId: 12345678
            createDate: '"2014-11-18T10:33:01.19"'
            modifyDate: '"2014-11-18T10:33:01.19"'
            name: Cam Newton
            company: Test Company
            street1: 123 War Eagle Lane
            street2: ""
            city: Auburn
            state: AL
            postalCode: "36830"
            countryCode: US
            phone: 555-555-5555
            email: supermancam@example.com
            addressVerified: Verified
            marketplaceUsernames:
              - customerUserId: 67195020
                customerId: 12345678
                createDate: '"2015-04-27T12:35:03.83"'
                modifyDate: '"2015-05-14T08:16:15.27"'
                marketplaceId: 0
                marketplace: ShipStation
                username: camtheman@gmail.com
              - customerUserId: 37568588
                customerId: 12345678
                createDate: '"2014-11-18T10:33:01.197"'
                modifyDate: '"2014-11-18T10:33:01.197"'
                marketplaceId: 36
                marketplace: WooCommerce
                username: supercam@example.com
              - customerUserId: 46038940
                customerId: 12345678
                createDate: "null"
                modifyDate: "null"
                marketplaceId: 67
                marketplace: TradeGecko
                username: camtheman@gmail.com
            tags:
              - tagId: 1234
                name: Expedited
              - tagId: 9725
                name: 00 BULK ORDERED
          - customerId: 87654321
            createDate: '"2015-06-21T12:48:07.54"'
            name: Bo Jackson
            company: Test Company
            street1: 456 Heisman Ave
            street2: ""
            city: Auburn
            state: AL
            postalCode: "36830"
            countryCode: US
            phone: 555-555-5555
            email: boknows@example.com
            addressVerified: Verified
            marketplaceUsernames:
              - customerUserId: 77215410
                customerId: 87654321
                createDate: '"2015-08-27T14:36:05.75"'
                modifyDate: '"2015-09-01T09:18:25.31"'
                marketplaceId: 0
                marketplace: ShipStation
                username: boknows@gmail.com
              - customerUserId: 43759100
                customerId: 87654321
                createDate: '"2015-07-05T11:38:01.197"'
                modifyDate: '"2015-07-05T11:38:01.197"'
                marketplaceId: 36
                marketplace: WooCommerce
                username: boknows@example.com
              - customerUserId: 81565241
                customerId: 87654321
                createDate: "null"
                modifyDate: "null"
                marketplaceId: 67
                marketplace: TradeGecko
                username: bo@gmail.com
            tags:
              - tagId: 1234
                name: Expedited
              - tagId: 9725
                name: 00 BULK ORDERED
        total: 2
        page: 1
        pages: 1
    Customer:
      title: Customer
      required:
        - customerId
        - createDate
        - name
        - company
        - street1
        - street2
        - city
        - state
        - postalCode
        - countryCode
        - phone
        - email
        - addressVerified
        - marketplaceUsernames
        - tags
      type: object
      properties:
        customerId:
          type: integer
          format: int32
          example: 12345678
        createDate:
          type: string
          example: 11/18/2014 10:33:01 AM
        modifyDate:
          type: string
          example: 11/18/2014 10:33:01 AM
        name:
          type: string
          example: Cam Newton
        company:
          type: string
          example: Test Company
        street1:
          type: string
          example: 123 War Eagle Lane
        street2:
          type: string
        city:
          type: string
          example: Auburn
        state:
          type: string
          example: AL
        postalCode:
          type: string
          example: "36830"
        countryCode:
          type: string
          example: US
        phone:
          type: string
          example: 555-555-5555
        email:
          type: string
          example: supermancam@example.com
        addressVerified:
          type: string
          example: Verified
        marketplaceUsernames:
          type: array
          items:
            $ref: "#/components/schemas/MarketplaceUsername"
          description: ""
        tags:
          type: array
          items:
            $ref: "#/components/schemas/Tag"
          description: ""
    Fulfillment:
      title: Fulfillment
      required:
        - fulfillmentId
        - orderId
        - orderNumber
        - userId
        - customerEmail
        - trackingNumber
        - createDate
        - shipDate
        - carrierCode
        - fulfillmentFee
        - voidRequested
        - voided
        - marketplaceNotified
        - shipTo
      type: object
      properties:
        fulfillmentId:
          type: integer
          format: int32
          example: 33974374
        orderId:
          type: integer
          format: int32
          example: 191759016
        orderNumber:
          type: string
          example: "101"
        userId:
          type: string
          example: c9f06d74-95de-4263-9b04-e87095cababf
        customerEmail:
          type: string
          example: apisupport@shipstation.com
        trackingNumber:
          type: string
          example: "783408231234"
        createDate:
          type: string
          example: 6/7/2016 8:50:50 AM
        shipDate:
          type: string
          example: 6/7/2016 12:00:00 AM
        voidDate:
          type: string
          nullable: true
        deliveryDate:
          type: string
          nullable: true
        carrierCode:
          type: string
          example: USPS
        fulfillmentProviderCode:
          type: string
          nullable: true
        fulfillmentServiceCode:
          type: string
          nullable: true
        fulfillmentFee:
          type: integer
          format: int32
          example: 0
        voidRequested:
          type: boolean
          example: false
        voided:
          type: boolean
          example: false
        marketplaceNotified:
          type: boolean
          example: true
        notifyErrorMessage:
          type: string
          nullable: true
        shipTo:
          $ref: "#/components/schemas/ShipTo"
    ShipTo:
      title: ShipTo
      required:
        - name
        - street1
        - city
        - state
        - postalCode
        - country
        - phone
      type: object
      properties:
        name:
          type: string
          example: Yoda
        company:
          type: string
          nullable: true
        street1:
          type: string
          example: "3800 N Lamar Blvd # 220"
        street2:
          type: string
          nullable: true
        street3:
          type: string
          nullable: true
        city:
          type: string
          example: AUSTIN
        state:
          type: string
          example: TX
        postalCode:
          type: string
          example: "78756"
        country:
          type: string
          example: US
        phone:
          type: string
          example: 512-485-4282
        residential:
          type: string
          nullable: true
        addressVerified:
          type: string
          nullable: true
      example:
        name: Yoda
        company: null
        street1: "3800 N Lamar Blvd # 220"
        street2: null
        street3: null
        city: AUSTIN
        state: TX
        postalCode: "78756"
        country: US
        phone: 512-485-4282
        residential: null
        addressVerified: null
    sortBy1:
      title: sortBy1
      enum:
        - ShipDate
        - CreateDate
      type: string
      example: ShipDate
    ListFulfillmentsResponse:
      title: ListFulfillmentsResponse
      required:
        - fulfillments
        - total
        - page
        - pages
      type: object
      properties:
        fulfillments:
          type: array
          items:
            $ref: "#/components/schemas/Fulfillment"
          description: ""
        total:
          type: integer
          format: int32
        page:
          type: integer
          format: int32
        pages:
          type: integer
          format: int32
      example:
        fulfillments:
          - fulfillmentId: 33974374
            orderId: 191759016
            orderNumber: "101"
            userId: c9f06d74-95de-4263-9b04-e87095cababf
            customerEmail: apisupport@shipstation.com
            trackingNumber: "783408231234"
            createDate: "2016-06-07T08:50:50.067"
            shipDate: "2016-06-07T00:00:00"
            voidDate: null
            deliveryDate: null
            carrierCode: USPS
            fulfillmentProviderCode: null
            fulfillmentServiceCode: null
            fulfillmentFee: 0
            voidRequested: false
            voided: false
            marketplaceNotified: true
            notifyErrorMessage: null
            shipTo:
              name: Yoda
              company: null
              street1: "3800 N Lamar Blvd # 220"
              street2: null
              street3: null
              city: AUSTIN
              state: TX
              postalCode: "78756"
              country: US
              phone: 512-485-4282
              residential: null
              addressVerified: null
          - fulfillmentId: 246310
            orderId: 193699927
            orderNumber: "101"
            userId: c9f06d74-95de-4263-9b04-e87095cababf
            customerEmail: apisupport@shipstation.com
            trackingNumber: "664756278745"
            createDate: "2016-06-08T12:54:53.347"
            shipDate: "2016-06-08T00:00:00"
            voidDate: null
            deliveryDate: null
            carrierCode: FedEx
            fulfillmentProviderCode: null
            fulfillmentServiceCode: null
            fulfillmentFee: 0
            voidRequested: false
            voided: false
            marketplaceNotified: true
            notifyErrorMessage: null
            shipTo:
              name: Yoda
              company: null
              street1: "3800 N Lamar Blvd # 220"
              street2: null
              street3: null
              city: AUSTIN
              state: TX
              postalCode: "78756"
              country: US
              phone: 512-485-4282
              residential: null
              addressVerified: null
        total: 2
        page: 1
        pages: 0
    GetOrderresponse:
      title: GetOrderresponse
      required:
        - orderId
        - orderNumber
        - orderKey
        - orderDate
        - createDate
        - modifyDate
        - paymentDate
        - shipByDate
        - orderStatus
        - customerId
        - customerUsername
        - customerEmail
        - billTo
        - shipTo
        - items
        - orderTotal
        - amountPaid
        - taxAmount
        - shippingAmount
        - customerNotes
        - internalNotes
        - gift
        - giftMessage
        - paymentMethod
        - requestedShippingService
        - carrierCode
        - serviceCode
        - packageCode
        - confirmation
        - shipDate
        - weight
        - dimensions
        - insuranceOptions
        - internationalOptions
        - advancedOptions
        - externallyFulfilled
      type: object
      properties:
        orderId:
          type: integer
          format: int32
        orderNumber:
          type: string
        orderKey:
          type: string
        orderDate:
          type: string
        createDate:
          type: string
        modifyDate:
          type: string
        paymentDate:
          type: string
        shipByDate:
          type: string
        orderStatus:
          type: string
        customerId:
          type: integer
          format: int32
        customerUsername:
          type: string
        customerEmail:
          type: string
        billTo:
          $ref: "#/components/schemas/BillTo"
        shipTo:
          $ref: "#/components/schemas/ShipTo2"
        items:
          type: array
          items:
            $ref: "#/components/schemas/Item"
          description: ""
        orderTotal:
          type: number
        amountPaid:
          type: number
        taxAmount:
          type: integer
          format: int32
        shippingAmount:
          type: integer
          format: int32
        customerNotes:
          type: string
        internalNotes:
          type: string
        gift:
          type: boolean
        giftMessage:
          type: string
        paymentMethod:
          type: string
        requestedShippingService:
          type: string
        carrierCode:
          type: string
        serviceCode:
          type: string
        packageCode:
          type: string
        confirmation:
          type: string
        shipDate:
          type: string
        holdUntilDate:
          type: string
          nullable: true
        weight:
          $ref: "#/components/schemas/Weight"
        dimensions:
          $ref: "#/components/schemas/Dimensions"
        insuranceOptions:
          $ref: "#/components/schemas/InsuranceOptions"
        internationalOptions:
          $ref: "#/components/schemas/InternationalOptions"
        advancedOptions:
          $ref: "#/components/schemas/AdvancedOptions"
        tagIds:
          type: string
          nullable: true
        userId:
          type: string
          nullable: true
        externallyFulfilled:
          type: boolean
        externallyFulfilledBy:
          type: string
          nullable: true
    BillTo:
      title: BillTo
      required:
        - name
      type: object
      properties:
        name:
          type: string
        company:
          type: string
          nullable: true
        street1:
          type: string
          nullable: true
        street2:
          type: string
          nullable: true
        street3:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
        state:
          type: string
          nullable: true
        postalCode:
          type: string
          nullable: true
        country:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
        residential:
          type: string
          nullable: true
        addressVerified:
          type: string
          nullable: true
      example:
        name: Sherlock Holmes
        company: null
        street1: null
        street2: null
        street3: null
        city: null
        state: null
        postalCode: null
        country: null
        phone: null
        residential: null
        addressVerified: null
    ShipTo2:
      title: ShipTo2
      required:
        - name
        - company
        - street1
        - street2
        - city
        - state
        - postalCode
        - country
        - phone
        - residential
        - addressVerified
      type: object
      properties:
        name:
          type: string
        company:
          type: string
        street1:
          type: string
        street2:
          type: string
        street3:
          type: string
          nullable: true
        city:
          type: string
        state:
          type: string
        postalCode:
          type: string
        country:
          type: string
        phone:
          type: string
        residential:
          type: boolean
        addressVerified:
          type: string
      example:
        name: The President
        company: US Govt
        street1: 1600 Pennsylvania Ave
        street2: Oval Office
        street3: null
        city: Washington
        state: DC
        postalCode: "20500"
        country: US
        phone: 555-555-5555
        residential: false
        addressVerified: Address validation warning
    Item:
      title: Item
      required:
        - orderItemId
        - lineItemKey
        - sku
        - name
        - weight
        - quantity
        - unitPrice
        - warehouseLocation
        - options
        - productId
        - adjustment
        - createDate
        - modifyDate
      type: object
      properties:
        orderItemId:
          type: integer
          format: int32
          example: 128836912
        lineItemKey:
          type: string
          example: vd08-MSLbtx
        sku:
          type: string
          example: ABC123
        name:
          type: string
          example: "Test item #1"
        imageUrl:
          type: string
          nullable: true
        weight:
          $ref: "#/components/schemas/Weight"
        quantity:
          type: integer
          format: int32
          example: 2
        unitPrice:
          type: number
          example: 99.99
        taxAmount:
          type: string
          nullable: true
        shippingAmount:
          type: string
          nullable: true
        warehouseLocation:
          type: string
          example: Aisle 1, Bin 7
        options:
          type: array
          items:
            $ref: "#/components/schemas/Option"
          description: ""
        productId:
          type: integer
          format: int32
          example: 7239919
        fulfillmentSku:
          type: string
          nullable: true
        adjustment:
          type: boolean
          example: false
        upc:
          type: string
          nullable: true
        createDate:
          type: string
          example: 7/16/2015 2:00:34 PM
        modifyDate:
          type: string
          example: 7/16/2015 2:00:34 PM
    Weight:
      title: Weight
      required:
        - value
        - units
      type: object
      properties:
        value:
          type: integer
          format: int32
          example: 24
        units:
          type: string
          example: ounces
      example:
        value: 24
        units: ounces
    Option:
      title: Option
      type: object
      properties:
        name:
          type: string
          example: Size
        value:
          type: string
          example: Large
      example:
        name: Size
        value: Large
    Dimensions:
      title: Dimensions
      required:
        - units
        - length
        - width
        - height
      type: object
      properties:
        units:
          type: string
        length:
          type: integer
          format: int32
        width:
          type: integer
          format: int32
        height:
          type: integer
          format: int32
      example:
        units: inches
        length: 7
        width: 5
        height: 6
    InsuranceOptions:
      title: InsuranceOptions
      required:
        - provider
        - insureShipment
        - insuredValue
      type: object
      properties:
        provider:
          type: string
        insureShipment:
          type: boolean
        insuredValue:
          type: integer
          format: int32
      example:
        provider: carrier
        insureShipment: true
        insuredValue: 200
    InternationalOptions:
      title: InternationalOptions
      type: object
      properties:
        contents:
          type: string
          nullable: true
        customsItems:
          type: string
          nullable: true
        nonDelivery:
          type: string
          nullable: true
      example:
        contents: null
        customsItems: null
        nonDelivery: null
    AdvancedOptions:
      title: AdvancedOptions
      required:
        - warehouseId
        - nonMachinable
        - saturdayDelivery
        - containsAlcohol
        - mergedOrSplit
        - mergedIds
        - storeId
        - customField1
        - customField2
        - customField3
        - source
      type: object
      properties:
        warehouseId:
          type: integer
          format: int32
        nonMachinable:
          type: boolean
        saturdayDelivery:
          type: boolean
        containsAlcohol:
          type: boolean
        mergedOrSplit:
          type: boolean
        mergedIds:
          type: array
          items:
            type: string
          description: ""
        parentId:
          type: string
          nullable: true
        storeId:
          type: integer
          format: int32
        customField1:
          type: string
        customField2:
          type: string
        customField3:
          type: string
        source:
          type: string
        billToParty:
          type: string
          nullable: true
        billToAccount:
          type: string
          nullable: true
        billToPostalCode:
          type: string
          nullable: true
        billToCountryCode:
          type: string
          nullable: true
      example:
        warehouseId: 98765
        nonMachinable: false
        saturdayDelivery: false
        containsAlcohol: false
        mergedOrSplit: false
        mergedIds: []
        parentId: null
        storeId: 12345
        customField1: "Custom data that you can add to an order. See Custom Field #2 & #3 for more info!"
        customField2: Per UI settings, this information can appear on some carrier's shipping labels. See link below
        customField3: https://help.shipstation.com/hc/en-us/articles/206639957
        source: Webstore
        billToParty: null
        billToAccount: null
        billToPostalCode: null
        billToCountryCode: null
    DeleteOrderresponse:
      title: DeleteOrderresponse
      required:
        - success
        - message
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
      example:
        success: true
        message: The requested order has been deleted.
    AddTagtoOrderrequest:
      title: AddTagtoOrderrequest
      required:
        - orderId
        - tagId
      type: object
      properties:
        orderId:
          type: integer
          format: int32
        tagId:
          type: integer
          format: int32
      example:
        orderId: 123456
        tagId: 1234
    AddTagtoOrderresponse:
      title: AddTagtoOrderresponse
      required:
        - success
        - message
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
      example:
        success: true
        message: Tag added successfully.
    AssignUsertoOrderrequest:
      title: AssignUsertoOrderrequest
      required:
        - orderIds
        - userId
      type: object
      properties:
        orderIds:
          type: array
          items:
            type: integer
            format: int32
          description: ""
        userId:
          type: string
      example:
        orderIds:
          - 123456789
          - 12345679
        userId: 123456AB-ab12-3c4d-5e67-89f1abc1defa
    AssignUsertoOrderresponse:
      title: AssignUsertoOrderresponse
      required:
        - success
        - message
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
      example:
        success: true
        message: User assigned successfully.
    CreateLabelforOrderrequest:
      title: CreateLabelforOrderrequest
      required:
        - orderId
        - carrierCode
        - serviceCode
        - packageCode
        - shipDate
        - weight
        - testLabel
      type: object
      properties:
        orderId:
          type: integer
          format: int32
        carrierCode:
          type: string
        serviceCode:
          type: string
        packageCode:
          type: string
        confirmation:
          type: string
          nullable: true
        shipDate:
          type: string
        weight:
          $ref: "#/components/schemas/Weight"
        dimensions:
          type: string
          nullable: true
        insuranceOptions:
          type: string
          nullable: true
        internationalOptions:
          type: string
          nullable: true
        advancedOptions:
          type: string
          nullable: true
        testLabel:
          type: boolean
      example:
        orderId: 93348442
        carrierCode: fedex
        serviceCode: fedex_2day
        packageCode: package
        confirmation: null
        shipDate: "2014-04-03"
        weight:
          value: 2
          units: pounds
        dimensions: null
        insuranceOptions: null
        internationalOptions: null
        advancedOptions: null
        testLabel: false
    CreateLabelforOrderresponse:
      title: CreateLabelforOrderresponse
      required:
        - shipmentId
        - shipmentCost
        - insuranceCost
        - trackingNumber
        - labelData
      type: object
      properties:
        shipmentId:
          type: integer
          format: int32
        shipmentCost:
          type: number
        insuranceCost:
          type: integer
          format: int32
        trackingNumber:
          type: string
        labelData:
          type: string
        formData:
          type: string
          nullable: true
      example:
        shipmentId: 72513480
        shipmentCost: 7.3
        insuranceCost: 0
        trackingNumber: "248201115029520"
        labelData: JVBERi0xLjQKJeLjz9MKMiAwIG9iago8PC9MZW5ndGggNjIvRmlsdGVyL0ZsYXRlRGVjb2RlPj5zdHJlYW0KeJwr5HIK4TI2UzC2NFMISeFyDeEK5CpUMFQwAEJDBV0jCz0LBV1jY0M9I4XkXAX9iDRDBZd8hUAuAEdGC7cKZW5kc3RyZWFtCmVuZG9iago0IDAgb2JqCjw8L1R5cGUvUGFnZS9NZWRpYUJveFswIDAgMjg4IDQzMl0vUmVzb3VyY2VzPDwvUHJvY1NldCBbL1BERiAvVGV4dCAvSW1hZ2VCIC9JbWFnZUMgL0ltYWdlSV0vWE9iamVjdDw8L1hmMSAxIDAgUj4+Pj4vQ29udGVudHMgMiAwIFIvUGFyZW50....
        formData: null
    CreateOrUpdateOrderrequest:
      title: Create/UpdateOrderrequest
      required:
        - orderNumber
        - orderKey
        - orderDate
        - paymentDate
        - shipByDate
        - orderStatus
        - customerId
        - customerUsername
        - customerEmail
        - billTo
        - shipTo
        - items
        - amountPaid
        - taxAmount
        - shippingAmount
        - customerNotes
        - internalNotes
        - gift
        - giftMessage
        - paymentMethod
        - requestedShippingService
        - carrierCode
        - serviceCode
        - packageCode
        - confirmation
        - shipDate
        - weight
        - dimensions
        - insuranceOptions
        - internationalOptions
        - advancedOptions
        - tagIds
      type: object
      properties:
        orderNumber:
          type: string
        orderKey:
          type: string
        orderDate:
          type: string
        paymentDate:
          type: string
        shipByDate:
          type: string
        orderStatus:
          type: string
        customerId:
          type: integer
          format: int32
        customerUsername:
          type: string
        customerEmail:
          type: string
        billTo:
          $ref: "#/components/schemas/BillTo1"
        shipTo:
          $ref: "#/components/schemas/ShipTo3"
        items:
          type: array
          items:
            $ref: "#/components/schemas/Item1"
          description: ""
        amountPaid:
          type: number
        taxAmount:
          type: integer
          format: int32
        shippingAmount:
          type: integer
          format: int32
        customerNotes:
          type: string
        internalNotes:
          type: string
        gift:
          type: boolean
        giftMessage:
          type: string
        paymentMethod:
          type: string
        requestedShippingService:
          type: string
        carrierCode:
          type: string
        serviceCode:
          type: string
        packageCode:
          type: string
        confirmation:
          type: string
        shipDate:
          type: string
        weight:
          $ref: "#/components/schemas/Weight"
        dimensions:
          $ref: "#/components/schemas/Dimensions"
        insuranceOptions:
          $ref: "#/components/schemas/InsuranceOptions"
        internationalOptions:
          $ref: "#/components/schemas/InternationalOptions1"
        advancedOptions:
          $ref: "#/components/schemas/AdvancedOptions"
        tagIds:
          type: array
          items:
            type: integer
            format: int32
          description: ""
    BillTo1:
      title: BillTo1
      required:
        - name
      type: object
      properties:
        name:
          type: string
        company:
          type: string
          nullable: true
        street1:
          type: string
          nullable: true
        street2:
          type: string
          nullable: true
        street3:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
        state:
          type: string
          nullable: true
        postalCode:
          type: string
          nullable: true
        country:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
        residential:
          type: string
          nullable: true
      example:
        name: The President
        company: null
        street1: null
        street2: null
        street3: null
        city: null
        state: null
        postalCode: null
        country: null
        phone: null
        residential: null
    ShipTo3:
      title: ShipTo3
      required:
        - name
        - company
        - street1
        - street2
        - city
        - state
        - postalCode
        - country
        - phone
        - residential
      type: object
      properties:
        name:
          type: string
        company:
          type: string
        street1:
          type: string
        street2:
          type: string
        street3:
          type: string
          nullable: true
        city:
          type: string
        state:
          type: string
        postalCode:
          type: string
        country:
          type: string
        phone:
          type: string
        residential:
          type: boolean
      example:
        name: The President
        company: US Govt
        street1: 1600 Pennsylvania Ave
        street2: Oval Office
        street3: null
        city: Washington
        state: DC
        postalCode: "20500"
        country: US
        phone: 555-555-5555
        residential: true
    Item1:
      title: Item1
      required:
        - lineItemKey
        - sku
        - name
        - weight
        - quantity
        - unitPrice
        - taxAmount
        - shippingAmount
        - warehouseLocation
        - options
        - productId
        - adjustment
        - upc
      type: object
      properties:
        lineItemKey:
          type: string
          example: vd08-MSLbtx
        sku:
          type: string
          example: ABC123
        name:
          type: string
          example: "Test item #1"
        imageUrl:
          type: string
          nullable: true
        weight:
          $ref: "#/components/schemas/Weight"
        quantity:
          type: integer
          format: int32
          example: 2
        unitPrice:
          type: number
          example: 99.99
        taxAmount:
          type: number
          example: 2.5
        shippingAmount:
          type: number
          example: 5
        warehouseLocation:
          type: string
          example: Aisle 1, Bin 7
        options:
          type: array
          items:
            $ref: "#/components/schemas/Option"
          description: ""
        productId:
          type: integer
          format: int32
          example: 123456
        fulfillmentSku:
          type: string
          nullable: true
        adjustment:
          type: boolean
          example: false
        upc:
          type: string
          example: 32-65-98
    InternationalOptions1:
      title: InternationalOptions1
      type: object
      properties:
        contents:
          type: string
          nullable: true
        customsItems:
          type: string
          nullable: true
      example:
        contents: null
        customsItems: null
    CreateOrUpdateOrderresponse:
      title: Create/UpdateOrderresponse
      required:
        - orderId
        - orderNumber
        - orderKey
        - orderDate
        - createDate
        - modifyDate
        - paymentDate
        - shipByDate
        - orderStatus
        - customerUsername
        - customerEmail
        - billTo
        - shipTo
        - items
        - orderTotal
        - amountPaid
        - taxAmount
        - shippingAmount
        - customerNotes
        - internalNotes
        - gift
        - giftMessage
        - paymentMethod
        - requestedShippingService
        - carrierCode
        - serviceCode
        - packageCode
        - confirmation
        - shipDate
        - weight
        - dimensions
        - insuranceOptions
        - internationalOptions
        - advancedOptions
        - externallyFulfilled
      type: object
      properties:
        orderId:
          type: integer
          format: int32
        orderNumber:
          type: string
        orderKey:
          type: string
        orderDate:
          type: string
        createDate:
          type: string
        modifyDate:
          type: string
        paymentDate:
          type: string
        shipByDate:
          type: string
        orderStatus:
          type: string
        customerId:
          type: string
          nullable: true
        customerUsername:
          type: string
        customerEmail:
          type: string
        billTo:
          $ref: "#/components/schemas/BillTo"
        shipTo:
          $ref: "#/components/schemas/ShipTo2"
        items:
          type: array
          items:
            $ref: "#/components/schemas/Item2"
          description: ""
        orderTotal:
          type: number
        amountPaid:
          type: number
        taxAmount:
          type: integer
          format: int32
        shippingAmount:
          type: integer
          format: int32
        customerNotes:
          type: string
        internalNotes:
          type: string
        gift:
          type: boolean
        giftMessage:
          type: string
        paymentMethod:
          type: string
        requestedShippingService:
          type: string
        carrierCode:
          type: string
        serviceCode:
          type: string
        packageCode:
          type: string
        confirmation:
          type: string
        shipDate:
          type: string
        holdUntilDate:
          type: string
          nullable: true
        weight:
          $ref: "#/components/schemas/Weight"
        dimensions:
          $ref: "#/components/schemas/Dimensions"
        insuranceOptions:
          $ref: "#/components/schemas/InsuranceOptions"
        internationalOptions:
          $ref: "#/components/schemas/InternationalOptions"
        advancedOptions:
          $ref: "#/components/schemas/AdvancedOptions"
        tagIds:
          type: string
          nullable: true
        userId:
          type: string
          nullable: true
        externallyFulfilled:
          type: boolean
        externallyFulfilledBy:
          type: string
          nullable: true
    Item2:
      title: Item2
      required:
        - orderItemId
        - lineItemKey
        - sku
        - name
        - weight
        - quantity
        - unitPrice
        - taxAmount
        - shippingAmount
        - warehouseLocation
        - options
        - adjustment
        - upc
        - createDate
        - modifyDate
      type: object
      properties:
        orderItemId:
          type: integer
          format: int32
          example: 192210956
        lineItemKey:
          type: string
          example: vd08-MSLbtx
        sku:
          type: string
          example: ABC123
        name:
          type: string
          example: "Test item #1"
        imageUrl:
          type: string
          nullable: true
        weight:
          $ref: "#/components/schemas/Weight"
        quantity:
          type: integer
          format: int32
          example: 2
        unitPrice:
          type: number
          example: 99.99
        taxAmount:
          type: number
          example: 2.5
        shippingAmount:
          type: integer
          format: int32
          example: 5
        warehouseLocation:
          type: string
          example: Aisle 1, Bin 7
        options:
          type: array
          items:
            $ref: "#/components/schemas/Option"
          description: ""
        productId:
          type: string
          nullable: true
        fulfillmentSku:
          type: string
          nullable: true
        adjustment:
          type: boolean
          example: false
        upc:
          type: string
          example: 32-65-98
        createDate:
          type: string
          example: 2/16/2016 3:16:53 PM
        modifyDate:
          type: string
          example: 2/16/2016 3:16:53 PM
    CreateOrUpdateMultipleOrdersrequest:
      title: Create/UpdateMultipleOrdersrequest
      required:
        - orderNumber
        - orderKey
        - orderDate
        - paymentDate
        - shipByDate
        - orderStatus
        - customerId
        - customerUsername
        - customerEmail
        - billTo
        - shipTo
        - items
        - amountPaid
        - taxAmount
        - shippingAmount
        - customerNotes
        - internalNotes
        - gift
        - giftMessage
        - paymentMethod
        - requestedShippingService
        - carrierCode
        - serviceCode
        - packageCode
        - confirmation
        - shipDate
        - weight
        - dimensions
        - insuranceOptions
        - internationalOptions
        - advancedOptions
        - tagIds
      type: object
      properties:
        orderNumber:
          type: string
          example: TEST-ORDER-API-DOCS
        orderKey:
          type: string
          example: 0f6bec18-3e89-4881-83aa-f392d84f4c74
        orderDate:
          type: string
          example: 6/29/2015 8:46:27 AM
        paymentDate:
          type: string
          example: 6/29/2015 8:46:27 AM
        shipByDate:
          type: string
          example: 7/5/2015 12:00:00 AM
        orderStatus:
          type: string
          example: awaiting_shipment
        customerId:
          type: integer
          format: int32
          example: 37701499
        customerUsername:
          type: string
          example: headhoncho@whitehouse.gov
        customerEmail:
          type: string
          example: headhoncho@whitehouse.gov
        billTo:
          $ref: "#/components/schemas/BillTo1"
        shipTo:
          $ref: "#/components/schemas/ShipTo3"
        items:
          type: array
          items:
            $ref: "#/components/schemas/Item1"
          description: ""
        amountPaid:
          type: number
          example: 218.73
        taxAmount:
          type: integer
          format: int32
          example: 5
        shippingAmount:
          type: integer
          format: int32
          example: 10
        customerNotes:
          type: string
          example: Please ship as soon as possible!
        internalNotes:
          type: string
          example: Customer called and would like to upgrade shipping
        gift:
          type: boolean
          example: true
        giftMessage:
          type: string
          example: Thank you!
        paymentMethod:
          type: string
          example: Credit Card
        requestedShippingService:
          type: string
          example: Priority Mail
        carrierCode:
          type: string
          example: fedex
        serviceCode:
          type: string
          example: fedex_2day
        packageCode:
          type: string
          example: package
        confirmation:
          type: string
          example: delivery
        shipDate:
          type: string
          example: "2015-07-02"
        weight:
          $ref: "#/components/schemas/Weight"
        dimensions:
          $ref: "#/components/schemas/Dimensions"
        insuranceOptions:
          $ref: "#/components/schemas/InsuranceOptions"
        internationalOptions:
          $ref: "#/components/schemas/InternationalOptions1"
        advancedOptions:
          $ref: "#/components/schemas/AdvancedOptions"
        tagIds:
          type: array
          items:
            type: integer
            format: int32
          description: ""
    CreateOrUpdateMultipleOrdersresponse:
      title: Create/UpdateMultipleOrdersresponse
      required:
        - hasErrors
        - results
      type: object
      properties:
        hasErrors:
          type: boolean
        results:
          type: array
          items:
            $ref: "#/components/schemas/Result"
          description: ""
      example:
        hasErrors: false
        results:
          - orderId: 58345234
            orderNumber: TEST-ORDER-API-DOCS
            orderKey: 0f6bec18-3e89-4881-83aa-f392d84f4c74
            success: true
            errorMessage: null
    Result:
      title: Result
      required:
        - orderId
        - orderNumber
        - orderKey
        - success
      type: object
      properties:
        orderId:
          type: integer
          format: int32
          example: 58345234
        orderNumber:
          type: string
          example: TEST-ORDER-API-DOCS
        orderKey:
          type: string
          example: 0f6bec18-3e89-4881-83aa-f392d84f4c74
        success:
          type: boolean
          example: true
        errorMessage:
          type: string
          nullable: true
    HoldOrderUntilrequest:
      title: HoldOrderUntilrequest
      required:
        - orderId
        - holdUntilDate
      type: object
      properties:
        orderId:
          type: integer
          format: int32
        holdUntilDate:
          type: string
      example:
        orderId: 1072467
        holdUntilDate: "2014-12-01"
    HoldOrderUntilresponse:
      title: HoldOrderUntilresponse
      required:
        - success
        - message
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
      example:
        success: true
        message: Order held successfully.
    Order:
      title: Order
      required:
        - orderId
        - orderNumber
        - orderKey
        - orderDate
        - createDate
        - modifyDate
        - paymentDate
        - shipByDate
        - orderStatus
        - customerId
        - customerUsername
        - customerEmail
        - billTo
        - shipTo
        - items
        - orderTotal
        - amountPaid
        - taxAmount
        - shippingAmount
        - customerNotes
        - internalNotes
        - gift
        - requestedShippingService
        - carrierCode
        - serviceCode
        - packageCode
        - confirmation
        - shipDate
        - weight
        - dimensions
        - insuranceOptions
        - internationalOptions
        - advancedOptions
        - externallyFulfilled
      type: object
      properties:
        orderId:
          type: integer
          format: int32
          example: 987654321
        orderNumber:
          type: string
          example: Test-International-API-DOCS
        orderKey:
          type: string
          example: Test-International-API-DOCS
        orderDate:
          type: string
          example: 6/28/2015 5:46:27 PM
        createDate:
          type: string
          example: 8/17/2015 9:24:14 AM
        modifyDate:
          type: string
          example: 8/17/2015 9:24:16 AM
        paymentDate:
          type: string
          example: 6/28/2015 5:46:27 PM
        shipByDate:
          type: string
          example: 7/5/2015 12:00:00 AM
        orderStatus:
          type: string
          example: awaiting_shipment
        customerId:
          type: integer
          format: int32
          example: 63310475
        customerUsername:
          type: string
          example: sholmes1854@methodsofdetection.com
        customerEmail:
          type: string
          example: sholmes1854@methodsofdetection.com
        billTo:
          $ref: "#/components/schemas/BillTo"
        shipTo:
          $ref: "#/components/schemas/ShipTo6"
        items:
          type: array
          items:
            $ref: "#/components/schemas/Item4"
          description: ""
        orderTotal:
          type: number
          example: 387.97
        amountPaid:
          type: number
          example: 412.97
        taxAmount:
          type: number
          example: 27.99
        shippingAmount:
          type: integer
          format: int32
          example: 35
        customerNotes:
          type: string
          example: Please be careful when packing the disguise kits in with the cane.
        internalNotes:
          type: string
          example: Mr. Holmes called to upgrade his shipping to expedited
        gift:
          type: boolean
          example: false
        giftMessage:
          type: string
          nullable: true
        paymentMethod:
          type: string
          nullable: true
        requestedShippingService:
          type: string
          example: Priority Mail Int
        carrierCode:
          type: string
          example: stamps_com
        serviceCode:
          type: string
          example: usps_priority_mail_international
        packageCode:
          type: string
          example: package
        confirmation:
          type: string
          example: delivery
        shipDate:
          type: string
          example: "2015-04-25"
        holdUntilDate:
          type: string
          nullable: true
        weight:
          $ref: "#/components/schemas/Weight"
        dimensions:
          $ref: "#/components/schemas/Dimensions"
        insuranceOptions:
          $ref: "#/components/schemas/InsuranceOptions4"
        internationalOptions:
          $ref: "#/components/schemas/InternationalOptions4"
        advancedOptions:
          $ref: "#/components/schemas/AdvancedOptions4"
        tagIds:
          type: string
          nullable: true
        userId:
          type: string
          nullable: true
        externallyFulfilled:
          type: boolean
          example: false
        externallyFulfilledBy:
          type: string
          nullable: true
    ShipTo6:
      title: ShipTo6
      required:
        - name
        - company
        - street1
        - street2
        - city
        - state
        - postalCode
        - country
        - residential
        - addressVerified
      type: object
      properties:
        name:
          type: string
          example: Sherlock Holmes
        company:
          type: string
        street1:
          type: string
          example: 221 B Baker St
        street2:
          type: string
        street3:
          type: string
          nullable: true
        city:
          type: string
          example: London
        state:
          type: string
        postalCode:
          type: string
          example: NW1 6XE
        country:
          type: string
          example: GB
        phone:
          type: string
          nullable: true
        residential:
          type: boolean
          example: true
        addressVerified:
          type: string
          example: Address not yet validated
      example:
        name: Sherlock Holmes
        company: ""
        street1: 221 B Baker St
        street2: ""
        street3: null
        city: London
        state: ""
        postalCode: NW1 6XE
        country: GB
        phone: null
        residential: true
        addressVerified: Address not yet validated
    Item4:
      title: Item4
      required:
        - orderItemId
        - sku
        - name
        - weight
        - quantity
        - unitPrice
        - warehouseLocation
        - options
        - productId
        - fulfillmentSku
        - adjustment
        - createDate
        - modifyDate
      type: object
      properties:
        orderItemId:
          type: integer
          format: int32
          example: 136282568
        lineItemKey:
          type: string
          nullable: true
        sku:
          type: string
          example: Ele-1234
        name:
          type: string
          example: Elementary Disguise Kit
        imageUrl:
          type: string
          nullable: true
        weight:
          $ref: "#/components/schemas/Weight"
        quantity:
          type: integer
          format: int32
          example: 2
        unitPrice:
          type: number
          example: 49.99
        taxAmount:
          type: string
          nullable: true
        shippingAmount:
          type: string
          nullable: true
        warehouseLocation:
          type: string
          example: Aisle 1, Bin 7
        options:
          type: array
          items:
            $ref: "#/components/schemas/Option"
          description: ""
        productId:
          type: integer
          format: int32
          example: 11780610
        fulfillmentSku:
          type: string
          example: Ele-1234
        adjustment:
          type: boolean
          example: false
        upc:
          type: string
          nullable: true
        createDate:
          type: string
          example: 8/17/2015 9:24:14 AM
        modifyDate:
          type: string
          example: 8/17/2015 9:24:14 AM
      example:
        orderItemId: 136282568
        lineItemKey: "null"
        sku: Ele-1234
        name: Elementary Disguise Kit
        imageUrl: "null"
        weight:
          value: 12
          units: ounces
        quantity: 2
        unitPrice: 49.99
        taxAmount: "null"
        shippingAmount: "null"
        warehouseLocation: Aisle 1, Bin 7
        options: []
        productId: 11780610
        fulfillmentSku: Ele-1234
        adjustment: false
        upc: "null"
        createDate: '"2015-08-17T09:24:14.78"'
        modifyDate: '"2015-08-17T09:24:14.78"'
    InsuranceOptions4:
      title: InsuranceOptions4
      required:
        - insureShipment
        - insuredValue
      type: object
      properties:
        provider:
          type: string
          nullable: true
        insureShipment:
          type: boolean
          example: false
        insuredValue:
          type: integer
          format: int32
          example: 0
      example:
        provider: null
        insureShipment: false
        insuredValue: 0
    InternationalOptions4:
      title: InternationalOptions4
      required:
        - contents
        - customsItems
        - nonDelivery
      type: object
      properties:
        contents:
          type: string
          example: merchandise
        customsItems:
          type: array
          items:
            $ref: "#/components/schemas/CustomsItem"
          description: ""
        nonDelivery:
          type: string
          example: return_to_sender
    CustomsItem:
      title: CustomsItem
      required:
        - customsItemId
        - description
        - quantity
        - value
        - countryOfOrigin
      type: object
      properties:
        customsItemId:
          type: integer
          format: int32
          example: 11558268
        description:
          type: string
          example: Fine White Oak Cane
        quantity:
          type: integer
          format: int32
          example: 1
        value:
          type: integer
          format: int32
          example: 225
        harmonizedTariffCode:
          type: string
          nullable: true
        countryOfOrigin:
          type: string
          example: US
    AdvancedOptions4:
      title: AdvancedOptions4
      required:
        - warehouseId
        - nonMachinable
        - saturdayDelivery
        - containsAlcohol
        - mergedOrSplit
        - mergedIds
        - storeId
        - customField1
        - customField2
      type: object
      properties:
        warehouseId:
          type: integer
          format: int32
          example: 98765
        nonMachinable:
          type: boolean
          example: false
        saturdayDelivery:
          type: boolean
          example: false
        containsAlcohol:
          type: boolean
          example: false
        mergedOrSplit:
          type: boolean
          example: false
        mergedIds:
          type: array
          items:
            type: string
          description: ""
        parentId:
          type: string
          nullable: true
        storeId:
          type: integer
          format: int32
          example: 12345
        customField1:
          type: string
          example: "SKU: CN-9876 x 1"
        customField2:
          type: string
          example: "SKU: Ele-123 x 2"
        customField3:
          type: string
          nullable: true
        source:
          type: string
          nullable: true
        billToParty:
          type: string
          nullable: true
        billToAccount:
          type: string
          nullable: true
        billToPostalCode:
          type: string
          nullable: true
        billToCountryCode:
          type: string
          nullable: true
      example:
        warehouseId: 98765
        nonMachinable: false
        saturdayDelivery: false
        containsAlcohol: false
        mergedOrSplit: false
        mergedIds: []
        parentId: null
        storeId: 12345
        customField1: "SKU: CN-9876 x 1"
        customField2: "SKU: Ele-123 x 2"
        customField3: null
        source: null
        billToParty: null
        billToAccount: null
        billToPostalCode: null
        billToCountryCode: null
    orderStatus:
      title: orderStatus
      enum:
        - awaiting_payment
        - awaiting_shipment
        - pending_fulfillment
        - shipped
        - on_hold
        - cancelled
      type: string
      example: awaiting_payment
    sortBy2:
      title: sortBy2
      enum:
        - OrderDate
        - ModifyDate
        - CreateDate
      type: string
      example: OrderDate
    ListOrdersResponse:
      title: ListOrdersResponse
      required:
        - orders
        - total
        - page
        - pages
      type: object
      properties:
        orders:
          type: array
          items:
            $ref: "#/components/schemas/Order"
          description: ""
        total:
          type: integer
          format: int32
        page:
          type: integer
          format: int32
        pages:
          type: integer
          format: int32
    ListOrdersbyTagresponse:
      title: ListOrdersbyTagresponse
      required:
        - orders
        - total
        - page
        - pages
      type: object
      properties:
        orders:
          type: array
          items:
            $ref: "#/components/schemas/Order2"
          description: ""
        total:
          type: integer
          format: int32
        page:
          type: integer
          format: int32
        pages:
          type: integer
          format: int32
    Order2:
      title: Order2
      required:
        - orderId
        - orderNumber
        - orderKey
        - orderDate
        - createDate
        - modifyDate
        - paymentDate
        - shipByDate
        - orderStatus
        - customerId
        - customerUsername
        - customerEmail
        - billTo
        - shipTo
        - items
        - orderTotal
        - amountPaid
        - taxAmount
        - shippingAmount
        - customerNotes
        - internalNotes
        - gift
        - giftMessage
        - paymentMethod
        - requestedShippingService
        - carrierCode
        - serviceCode
        - packageCode
        - confirmation
        - shipDate
        - weight
        - dimensions
        - insuranceOptions
        - internationalOptions
        - advancedOptions
        - tagIds
        - userId
        - externallyFulfilled
      type: object
      properties:
        orderId:
          type: integer
          format: int32
          example: 123456789
        orderNumber:
          type: string
          example: TEST-ORDER-API-DOCS
        orderKey:
          type: string
          example: 0f6bec18-3e89-4881-83aa-f392d84f4c74
        orderDate:
          type: string
          example: 6/29/2015 8:46:27 AM
        createDate:
          type: string
          example: 8/17/2015 9:43:03 AM
        modifyDate:
          type: string
          example: 8/17/2015 9:43:12 AM
        paymentDate:
          type: string
          example: 6/29/2015 8:46:27 AM
        shipByDate:
          type: string
          example: 7/5/2015 12:00:00 AM
        orderStatus:
          type: string
          example: awaiting_shipment
        customerId:
          type: integer
          format: int32
          example: 37701499
        customerUsername:
          type: string
          example: headhoncho@whitehouse.gov
        customerEmail:
          type: string
          example: headhoncho@whitehouse.gov
        billTo:
          $ref: "#/components/schemas/BillTo"
        shipTo:
          $ref: "#/components/schemas/ShipTo2"
        items:
          type: array
          items:
            $ref: "#/components/schemas/Item6"
          description: ""
        orderTotal:
          type: number
          example: 194.43
        amountPaid:
          type: number
          example: 218.73
        taxAmount:
          type: integer
          format: int32
          example: 5
        shippingAmount:
          type: integer
          format: int32
          example: 10
        customerNotes:
          type: string
          example: Please ship as soon as possible!
        internalNotes:
          type: string
          example: Customer called and would like to upgrade shipping
        gift:
          type: boolean
          example: true
        giftMessage:
          type: string
          example: Thank you!
        paymentMethod:
          type: string
          example: Credit Card
        requestedShippingService:
          type: string
          example: Priority Mail
        carrierCode:
          type: string
          example: fedex
        serviceCode:
          type: string
          example: fedex_2day
        packageCode:
          type: string
          example: package
        confirmation:
          type: string
          example: delivery
        shipDate:
          type: string
          example: "2015-07-02"
        holdUntilDate:
          type: string
          nullable: true
        weight:
          $ref: "#/components/schemas/Weight"
        dimensions:
          $ref: "#/components/schemas/Dimensions"
        insuranceOptions:
          $ref: "#/components/schemas/InsuranceOptions"
        internationalOptions:
          $ref: "#/components/schemas/InternationalOptions"
        advancedOptions:
          $ref: "#/components/schemas/AdvancedOptions"
        tagIds:
          type: array
          items:
            type: integer
            format: int32
          description: ""
        userId:
          type: string
          example: b854f701-e0c2-4156-90fe-19c77cdef27c
        externallyFulfilled:
          type: boolean
          example: false
        externallyFulfilledBy:
          type: string
          nullable: true
    Item6:
      title: Item6
      required:
        - orderItemId
        - lineItemKey
        - sku
        - name
        - weight
        - quantity
        - unitPrice
        - taxAmount
        - shippingAmount
        - warehouseLocation
        - options
        - productId
        - adjustment
        - upc
        - createDate
        - modifyDate
      type: object
      properties:
        orderItemId:
          type: integer
          format: int32
          example: 136289188
        lineItemKey:
          type: string
          example: vd08-MSLbtx
        sku:
          type: string
          example: ABC123
        name:
          type: string
          example: "Test item #1"
        imageUrl:
          type: string
          nullable: true
        weight:
          $ref: "#/components/schemas/Weight"
        quantity:
          type: integer
          format: int32
          example: 2
        unitPrice:
          type: number
          example: 99.99
        taxAmount:
          type: number
          example: 2.5
        shippingAmount:
          type: integer
          format: int32
          example: 5
        warehouseLocation:
          type: string
          example: Aisle 1, Bin 7
        options:
          type: array
          items:
            $ref: "#/components/schemas/Option"
          description: ""
        productId:
          type: integer
          format: int32
          example: 7239919
        fulfillmentSku:
          type: string
          nullable: true
        adjustment:
          type: boolean
          example: false
        upc:
          type: string
          example: 32-65-98
        createDate:
          type: string
          example: 8/17/2015 9:43:03 AM
        modifyDate:
          type: string
          example: 8/17/2015 9:43:03 AM
    MarkanOrderasShippedrequest:
      title: MarkanOrderasShippedrequest
      required:
        - orderId
        - carrierCode
        - shipDate
        - trackingNumber
        - notifyCustomer
        - notifySalesChannel
      type: object
      properties:
        orderId:
          type: integer
          format: int32
        carrierCode:
          type: string
        shipDate:
          type: string
        trackingNumber:
          type: string
        notifyCustomer:
          type: boolean
        notifySalesChannel:
          type: boolean
      example:
        orderId: 93348442
        carrierCode: usps
        shipDate: "2014-04-01"
        trackingNumber: "913492493294329421"
        notifyCustomer: true
        notifySalesChannel: true
    MarkanOrderasShippedresponse:
      title: MarkanOrderasShippedresponse
      required:
        - orderId
        - orderNumber
      type: object
      properties:
        orderId:
          type: integer
          format: int32
        orderNumber:
          type: string
      example:
        orderId: 123456789
        orderNumber: ABC123
    RemoveTagfromOrderrequest:
      title: RemoveTagfromOrderrequest
      required:
        - orderId
        - tagId
      type: object
      properties:
        orderId:
          type: integer
          format: int32
        tagId:
          type: integer
          format: int32
      example:
        orderId: 123456
        tagId: 1234
    RemoveTagfromOrderresponse:
      title: RemoveTagfromOrderresponse
      required:
        - success
        - message
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
      example:
        success: true
        message: Tag removed successfully.
    RestoreOrderfromOnHoldrequest:
      title: RestoreOrderfromOnHoldrequest
      required:
        - orderId
      type: object
      properties:
        orderId:
          type: integer
          format: int32
      example:
        orderId: 1234567
    RestoreOrderfromOnHoldresponse:
      title: RestoreOrderfromOnHoldresponse
      required:
        - success
        - message
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
      example:
        success: true
        message: The requested order has been restored
    UnassignUserfromOrderrequest:
      title: UnassignUserfromOrderrequest
      required:
        - orderIds
      type: object
      properties:
        orderIds:
          type: array
          items:
            type: integer
            format: int32
          description: ""
      example:
        orderIds:
          - 123456789
          - 12345679
    UnassignUserfromOrderresponse:
      title: UnassignUserfromOrderresponse
      required:
        - success
        - message
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
      example:
        success: true
        message: User unassigned successfully.
    GetProductresponse:
      title: GetProductresponse
      required:
        - productId
        - sku
        - name
        - price
        - defaultCost
        - length
        - width
        - height
        - weightOz
        - fulfillmentSku
        - createDate
        - modifyDate
        - active
        - productCategory
        - warehouseLocation
        - defaultCarrierCode
        - defaultServiceCode
        - defaultPackageCode
        - defaultIntlCarrierCode
        - defaultIntlServiceCode
        - defaultIntlPackageCode
        - defaultConfirmation
        - defaultIntlConfirmation
        - tags
      type: object
      properties:
        aliases:
          type: string
          nullable: true
        productId:
          type: integer
          format: int32
        sku:
          type: string
        name:
          type: string
        price:
          type: integer
          format: int32
        defaultCost:
          type: integer
          format: int32
        length:
          type: integer
          format: int32
        width:
          type: integer
          format: int32
        height:
          type: integer
          format: int32
        weightOz:
          type: integer
          format: int32
        internalNotes:
          type: string
          nullable: true
        fulfillmentSku:
          type: string
        createDate:
          type: string
        modifyDate:
          type: string
        active:
          type: boolean
        productCategory:
          $ref: "#/components/schemas/ProductCategory"
        productType:
          type: string
          nullable: true
        warehouseLocation:
          type: string
        defaultCarrierCode:
          type: string
        defaultServiceCode:
          type: string
        defaultPackageCode:
          type: string
        defaultIntlCarrierCode:
          type: string
        defaultIntlServiceCode:
          type: string
        defaultIntlPackageCode:
          type: string
        defaultConfirmation:
          type: string
        defaultIntlConfirmation:
          type: string
        customsDescription:
          type: string
          nullable: true
        customsValue:
          type: string
          nullable: true
        customsTariffNo:
          type: string
          nullable: true
        customsCountryCode:
          type: string
          nullable: true
        noCustoms:
          type: string
          nullable: true
        tags:
          type: array
          items:
            $ref: "#/components/schemas/Tag"
          description: ""
      example:
        aliases: null
        productId: 12345678
        sku: "1004"
        name: Coffee Mug
        price: 26
        defaultCost: 0
        length: 3
        width: 3
        height: 3
        weightOz: 26
        internalNotes: null
        fulfillmentSku: F1004
        createDate: "2014-09-04T09:18:01.293"
        modifyDate: "2014-09-18T12:38:43.893"
        active: true
        productCategory:
          categoryId: 9999
          name: Door Closers
        productType: null
        warehouseLocation: Bin 22
        defaultCarrierCode: fedex
        defaultServiceCode: fedex_home_delivery
        defaultPackageCode: package
        defaultIntlCarrierCode: ups
        defaultIntlServiceCode: ups_worldwide_saver
        defaultIntlPackageCode: package
        defaultConfirmation: direct_signature
        defaultIntlConfirmation: adult_signature
        customsDescription: null
        customsValue: null
        customsTariffNo: null
        customsCountryCode: null
        noCustoms: null
        tags:
          - tagId: 9180
            name: APItest
    ProductCategory:
      title: ProductCategory
      required:
        - categoryId
        - name
      type: object
      properties:
        categoryId:
          type: integer
          format: int32
        name:
          type: string
      example:
        categoryId: 9999
        name: Door Closers
    UpdateProductrequest:
      title: UpdateProductrequest
      required:
        - productId
        - sku
        - name
        - price
        - active
      type: object
      properties:
        aliases:
          type: string
          nullable: true
        productId:
          type: integer
          format: int32
        sku:
          type: string
        name:
          type: string
        price:
          type: integer
          format: int32
        defaultCost:
          type: string
          nullable: true
        length:
          type: string
          nullable: true
        width:
          type: string
          nullable: true
        height:
          type: string
          nullable: true
        weightOz:
          type: string
          nullable: true
        internalNotes:
          type: string
          nullable: true
        fulfillmentSku:
          type: string
          nullable: true
        active:
          type: boolean
        productCategory:
          type: string
          nullable: true
        productType:
          type: string
          nullable: true
        warehouseLocation:
          type: string
          nullable: true
        defaultCarrierCode:
          type: string
          nullable: true
        defaultServiceCode:
          type: string
          nullable: true
        defaultPackageCode:
          type: string
          nullable: true
        defaultIntlCarrierCode:
          type: string
          nullable: true
        defaultIntlServiceCode:
          type: string
          nullable: true
        defaultIntlPackageCode:
          type: string
          nullable: true
        defaultConfirmation:
          type: string
          nullable: true
        defaultIntlConfirmation:
          type: string
          nullable: true
        customsDescription:
          type: string
          nullable: true
        customsValue:
          type: string
          nullable: true
        customsTariffNo:
          type: string
          nullable: true
        customsCountryCode:
          type: string
          nullable: true
        noCustoms:
          type: string
          nullable: true
        tags:
          type: string
          nullable: true
      example:
        aliases: null
        productId: 123456789
        sku: ""
        name: Beautiful
        price: 0
        defaultCost: null
        length: null
        width: null
        height: null
        weightOz: null
        internalNotes: null
        fulfillmentSku: null
        active: true
        productCategory: null
        productType: null
        warehouseLocation: null
        defaultCarrierCode: null
        defaultServiceCode: null
        defaultPackageCode: null
        defaultIntlCarrierCode: null
        defaultIntlServiceCode: null
        defaultIntlPackageCode: null
        defaultConfirmation: null
        defaultIntlConfirmation: null
        customsDescription: null
        customsValue: null
        customsTariffNo: null
        customsCountryCode: null
        noCustoms: null
        tags: null
    UpdateProductresponse:
      title: UpdateProductresponse
      required:
        - success
        - message
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
      example:
        success: true
        message: The requested product has been updated
    Product:
      title: Product
      required:
        - productId
        - sku
        - name
        - price
        - defaultCost
        - length
        - width
        - height
        - weightOz
        - fulfillmentSku
        - createDate
        - modifyDate
        - active
        - productCategory
        - warehouseLocation
        - defaultCarrierCode
        - defaultServiceCode
        - defaultPackageCode
        - defaultIntlCarrierCode
        - defaultIntlServiceCode
        - defaultIntlPackageCode
        - defaultConfirmation
        - defaultIntlConfirmation
        - tags
      type: object
      properties:
        aliases:
          type: string
          nullable: true
        productId:
          type: integer
          format: int32
          example: 7854008
        sku:
          type: string
          example: "1004"
        name:
          type: string
          example: Coffee Mug
        price:
          type: integer
          format: int32
          example: 26
        defaultCost:
          type: integer
          format: int32
          example: 0
        length:
          type: integer
          format: int32
          example: 3
        width:
          type: integer
          format: int32
          example: 3
        height:
          type: integer
          format: int32
          example: 3
        weightOz:
          type: integer
          format: int32
          example: 26
        internalNotes:
          type: string
          nullable: true
        fulfillmentSku:
          type: string
          example: F1004
        createDate:
          type: string
          example: 9/4/2014 9:18:01 AM
        modifyDate:
          type: string
          example: 9/18/2014 12:38:43 PM
        active:
          type: boolean
          example: true
        productCategory:
          $ref: "#/components/schemas/ProductCategory"
        productType:
          type: string
          nullable: true
        warehouseLocation:
          type: string
          example: Bin 22
        defaultCarrierCode:
          type: string
          example: fedex
        defaultServiceCode:
          type: string
          example: fedex_home_delivery
        defaultPackageCode:
          type: string
          example: package
        defaultIntlCarrierCode:
          type: string
          example: ups
        defaultIntlServiceCode:
          type: string
          example: ups_worldwide_saver
        defaultIntlPackageCode:
          type: string
          example: package
        defaultConfirmation:
          type: string
          example: direct_signature
        defaultIntlConfirmation:
          type: string
          example: adult_signature
        customsDescription:
          type: string
          nullable: true
        customsValue:
          type: string
          nullable: true
        customsTariffNo:
          type: string
          nullable: true
        customsCountryCode:
          type: string
          nullable: true
        noCustoms:
          type: string
          nullable: true
        tags:
          type: array
          items:
            $ref: "#/components/schemas/Tag"
          description: ""
    sortBy3:
      title: sortBy3
      enum:
        - SKU
        - ModifyDate
        - CreateDate
      type: string
      example: SKU
    ListProductsResponse:
      title: ListProductsResponse
      required:
        - products
        - total
        - page
        - pages
      type: object
      properties:
        products:
          type: array
          items:
            $ref: "#/components/schemas/Product"
          description: ""
        total:
          type: integer
          format: int32
        page:
          type: integer
          format: int32
        pages:
          type: integer
          format: int32
    Shipment:
      title: Shipment
      required:
        - shipmentId
        - orderId
        - userId
        - orderNumber
        - createDate
        - shipDate
        - shipmentCost
        - insuranceCost
        - trackingNumber
        - isReturnLabel
        - batchNumber
        - carrierCode
        - serviceCode
        - packageCode
        - confirmation
        - warehouseId
        - voided
        - marketplaceNotified
        - shipTo
        - weight
        - insuranceOptions
        - shipmentItems
      type: object
      properties:
        shipmentId:
          type: integer
          format: int32
          example: 33974374
        orderId:
          type: integer
          format: int32
          example: 43945660
        orderKey:
          type: string
          example: 8061c220f0794a9b92460b8bae6837e4
        userId:
          type: string
          example: 123456AB-ab12-3c4d-5e67-89f1abc1defa
        orderNumber:
          type: string
          example: 100038-1
        createDate:
          type: string
          example: 10/3/2014 6:51:33 AM
        shipDate:
          type: string
          example: "2014-10-03"
        shipmentCost:
          type: number
          example: 1.93
        insuranceCost:
          type: integer
          format: int32
          example: 0
        trackingNumber:
          type: string
          example: "9400111899561704681189"
        isReturnLabel:
          type: boolean
          example: false
        batchNumber:
          type: string
          example: "100301"
        carrierCode:
          type: string
          example: stamps_com
        serviceCode:
          type: string
          example: usps_first_class_mail
        packageCode:
          type: string
          example: package
        confirmation:
          type: string
          example: delivery
        warehouseId:
          type: integer
          format: int32
          example: 16079
        voided:
          type: boolean
          example: false
        voidDate:
          type: string
          nullable: true
        marketplaceNotified:
          type: boolean
          example: true
        notifyErrorMessage:
          type: string
          nullable: true
        shipTo:
          $ref: "#/components/schemas/ShipTo9"
        weight:
          $ref: "#/components/schemas/Weight"
        dimensions:
          type: string
          nullable: true
        insuranceOptions:
          $ref: "#/components/schemas/InsuranceOptions4"
        advancedOptions:
          type: string
          nullable: true
        shipmentItems:
          type: array
          items:
            $ref: "#/components/schemas/ShipmentItem"
          description: ""
        labelData:
          type: string
          nullable: true
        formData:
          type: string
          nullable: true
    ShipTo9:
      title: ShipTo9
      required:
        - name
        - company
        - street1
        - street2
        - city
        - state
        - postalCode
        - country
        - phone
      type: object
      properties:
        name:
          type: string
          example: Yoda
        company:
          type: string
        street1:
          type: string
          example: 12223 LOWDEN LN
        street2:
          type: string
        street3:
          type: string
          nullable: true
        city:
          type: string
          example: MANCHACA
        state:
          type: string
          example: TX
        postalCode:
          type: string
          example: 78652-3602
        country:
          type: string
          example: US
        phone:
          type: string
          example: "2101235544"
        residential:
          type: string
          nullable: true
      example:
        name: Yoda
        company: ""
        street1: 12223 LOWDEN LN
        street2: ""
        street3: null
        city: MANCHACA
        state: TX
        postalCode: 78652-3602
        country: US
        phone: "2101235544"
        residential: null
    ShipmentItem:
      title: ShipmentItem
      required:
        - orderItemId
        - sku
        - name
        - quantity
        - unitPrice
        - productId
      type: object
      properties:
        orderItemId:
          type: integer
          format: int32
          example: 56568665
        lineItemKey:
          type: string
          nullable: true
        sku:
          type: string
          example: SQ3785739
        name:
          type: string
          example: Potato Kitten -
        imageUrl:
          type: string
          nullable: true
        weight:
          type: string
          nullable: true
        quantity:
          type: integer
          format: int32
          example: 1
        unitPrice:
          type: integer
          format: int32
          example: 1
        warehouseLocation:
          type: string
          nullable: true
        options:
          type: string
          nullable: true
        productId:
          type: integer
          format: int32
          example: 7565777
        fulfillmentSku:
          type: string
          nullable: true
      example:
        orderItemId: 56568665
        lineItemKey: null
        sku: SQ3785739
        name: Potato Kitten -
        imageUrl: null
        weight: null
        quantity: 1
        unitPrice: 1
        warehouseLocation: null
        options: null
        productId: 7565777
        fulfillmentSku: null
    ListShipmentsResponse:
      title: ListShipmentsResponse
      required:
        - shipments
        - total
        - page
        - pages
      type: object
      properties:
        shipments:
          type: array
          items:
            $ref: "#/components/schemas/Shipment"
          description: ""
        total:
          type: integer
          format: int32
        page:
          type: integer
          format: int32
        pages:
          type: integer
          format: int32
      example:
        shipments:
          - shipmentId: 33974374
            orderId: 43945660
            orderKey: 8061c220f0794a9b92460b8bae6837e4
            userId: 123456AB-ab12-3c4d-5e67-89f1abc1defa
            orderNumber: 100038-1
            createDate: "2014-10-03T06:51:33.627"
            shipDate: "2014-10-03"
            shipmentCost: 1.93
            insuranceCost: 0
            trackingNumber: "9400111899561704681189"
            isReturnLabel: false
            batchNumber: "100301"
            carrierCode: stamps_com
            serviceCode: usps_first_class_mail
            packageCode: package
            confirmation: delivery
            warehouseId: 16079
            voided: false
            voidDate: null
            marketplaceNotified: true
            notifyErrorMessage: null
            shipTo:
              name: Yoda
              company: ""
              street1: 12223 LOWDEN LN
              street2: ""
              street3: null
              city: MANCHACA
              state: TX
              postalCode: 78652-3602
              country: US
              phone: "2101235544"
              residential: null
            weight:
              value: 1
              units: ounces
            dimensions: null
            insuranceOptions:
              provider: null
              insureShipment: false
              insuredValue: 0
            advancedOptions: null
            shipmentItems:
              - orderItemId: 56568665
                lineItemKey: null
                sku: SQ3785739
                name: Potato Kitten -
                imageUrl: null
                weight: null
                quantity: 1
                unitPrice: 1
                warehouseLocation: null
                options: null
                productId: 7565777
                fulfillmentSku: null
            labelData: null
            formData: null
          - shipmentId: 33974373
            orderId: 43337328
            userId: 123456AB-ab12-3c4d-5e67-89f1abc1defa
            orderNumber: "100028"
            createDate: "2014-10-03T06:51:59.943"
            shipDate: "2014-10-03"
            shipmentCost: 1.93
            insuranceCost: 0
            trackingNumber: "9400111899561704681196"
            isReturnLabel: false
            batchNumber: "100300"
            carrierCode: stamps_com
            serviceCode: usps_first_class_mail
            packageCode: package
            confirmation: delivery
            warehouseId: 14265
            voided: false
            voidDate: null
            marketplaceNotified: true
            notifyErrorMessage: null
            shipTo:
              name: Luke Skywalker
              company: SS
              street1: 2815 EXPOSITION BLVD
              street2: ""
              street3: null
              city: AUSTIN
              state: TX
              postalCode: 78703-1221
              country: US
              phone: ""
              residential: null
            weight:
              value: 1
              units: ounces
            dimensions: null
            insuranceOptions:
              provider: null
              insureShipment: false
              insuredValue: 0
            advancedOptions: null
            shipmentItems:
              - orderItemId: 55827278
                lineItemKey: null
                sku: test
                name: test
                imageUrl: null
                weight: null
                quantity: 1
                unitPrice: 1
                warehouseLocation: null
                options: null
                productId: 7541107
                fulfillmentSku: null
            labelData: null
            formData: null
        total: 2
        page: 1
        pages: 0
    CreateShipmentLabelrequest:
      title: CreateShipmentLabelrequest
      required:
        - carrierCode
        - serviceCode
        - packageCode
        - shipDate
        - weight
        - shipFrom
        - shipTo
        - testLabel
      type: object
      properties:
        carrierCode:
          type: string
        serviceCode:
          type: string
        packageCode:
          type: string
        confirmation:
          type: string
        shipDate:
          type: string
        weight:
          $ref: "#/components/schemas/Weight"
        dimensions:
          $ref: "#/components/schemas/Dimensions"
        shipFrom:
          $ref: "#/components/schemas/ShipFrom"
        shipTo:
          $ref: "#/components/schemas/ShipTo11"
        insuranceOptions:
          type: string
          nullable: true
        internationalOptions:
          type: string
          nullable: true
        advancedOptions:
          type: string
          nullable: true
        testLabel:
          type: boolean
      example:
        carrierCode: fedex
        serviceCode: fedex_ground
        packageCode: package
        confirmation: delivery
        shipDate: "2014-04-03"
        weight:
          value: 3
          units: ounces
        dimensions:
          units: inches
          length: 7
          width: 5
          height: 6
        shipFrom:
          name: Jason Hodges
          company: ShipStation
          street1: 2815 Exposition Blvd
          street2: Ste 2353242
          street3: null
          city: Austin
          state: TX
          postalCode: "78703"
          country: US
          phone: null
          residential: false
        shipTo:
          name: The President
          company: US Govt
          street1: 1600 Pennsylvania Ave
          street2: Oval Office
          street3: null
          city: Washington
          state: DC
          postalCode: "20500"
          country: US
          phone: null
          residential: false
        insuranceOptions: null
        internationalOptions: null
        advancedOptions: null
        testLabel: false
    ShipFrom:
      title: ShipFrom
      required:
        - name
        - company
        - street1
        - street2
        - city
        - state
        - postalCode
        - country
        - residential
      type: object
      properties:
        name:
          type: string
        company:
          type: string
        street1:
          type: string
        street2:
          type: string
        street3:
          type: string
          nullable: true
        city:
          type: string
        state:
          type: string
        postalCode:
          type: string
        country:
          type: string
        phone:
          type: string
          nullable: true
        residential:
          type: boolean
    ShipTo11:
      title: ShipTo11
      required:
        - name
        - company
        - street1
        - street2
        - city
        - state
        - postalCode
        - country
        - residential
      type: object
      properties:
        name:
          type: string
        company:
          type: string
        street1:
          type: string
        street2:
          type: string
        street3:
          type: string
          nullable: true
        city:
          type: string
        state:
          type: string
        postalCode:
          type: string
        country:
          type: string
        phone:
          type: string
          nullable: true
        residential:
          type: boolean
    CreateShipmentLabelresponse:
      title: CreateShipmentLabelresponse
      required:
        - shipmentId
        - createDate
        - shipDate
        - shipmentCost
        - insuranceCost
        - trackingNumber
        - isReturnLabel
        - carrierCode
        - serviceCode
        - packageCode
        - confirmation
        - voided
        - marketplaceNotified
        - labelData
      type: object
      properties:
        shipmentId:
          type: integer
          format: int32
        orderId:
          type: string
          nullable: true
        userId:
          type: string
          nullable: true
        customerEmail:
          type: string
          nullable: true
        orderNumber:
          type: string
          nullable: true
        createDate:
          type: string
        shipDate:
          type: string
        shipmentCost:
          type: number
        insuranceCost:
          type: integer
          format: int32
        trackingNumber:
          type: string
        isReturnLabel:
          type: boolean
        batchNumber:
          type: string
          nullable: true
        carrierCode:
          type: string
        serviceCode:
          type: string
        packageCode:
          type: string
        confirmation:
          type: string
        warehouseId:
          type: string
          nullable: true
        voided:
          type: boolean
        voidDate:
          type: string
          nullable: true
        marketplaceNotified:
          type: boolean
        notifyErrorMessage:
          type: string
          nullable: true
        shipTo:
          type: string
          nullable: true
        weight:
          type: string
          nullable: true
        dimensions:
          type: string
          nullable: true
        insuranceOptions:
          type: string
          nullable: true
        advancedOptions:
          type: string
          nullable: true
        shipmentItems:
          type: string
          nullable: true
        labelData:
          type: string
        formData:
          type: string
          nullable: true
      example:
        shipmentId: 123456789
        orderId: null
        userId: null
        customerEmail: null
        orderNumber: null
        createDate: "2016-04-03T12:11:36.863"
        shipDate: "2016-04-03"
        shipmentCost: 9.06
        insuranceCost: 0
        trackingNumber: "782390443992"
        isReturnLabel: false
        batchNumber: null
        carrierCode: fedex
        serviceCode: fedex_ground
        packageCode: package
        confirmation: delivery
        warehouseId: null
        voided: false
        voidDate: null
        marketplaceNotified: false
        notifyErrorMessage: null
        shipTo: null
        weight: null
        dimensions: null
        insuranceOptions: null
        advancedOptions: null
        shipmentItems: null
        labelData: JVBERi0xLjQKJeLjz9MKMiAwIG9iago8PC9MZW5ndGggNjIvRmlsdGVyL0ZsYXRlRGVjb2RlPj5zdHJlYW0KeJwr5HIK4TI2U...
        formData: null
    GetRatesrequest:
      title: GetRatesrequest
      required:
        - carrierCode
        - fromPostalCode
        - toState
        - toCountry
        - toPostalCode
        - toCity
        - weight
        - dimensions
        - confirmation
        - residential
      type: object
      properties:
        carrierCode:
          type: string
        serviceCode:
          type: string
          nullable: true
        packageCode:
          type: string
          nullable: true
        fromPostalCode:
          type: string
        toState:
          type: string
        toCountry:
          type: string
        toPostalCode:
          type: string
        toCity:
          type: string
        weight:
          $ref: "#/components/schemas/Weight"
        dimensions:
          $ref: "#/components/schemas/Dimensions"
        confirmation:
          type: string
        residential:
          type: boolean
      example:
        carrierCode: fedex
        serviceCode: null
        packageCode: null
        fromPostalCode: "78703"
        toState: DC
        toCountry: US
        toPostalCode: "20500"
        toCity: Washington
        weight:
          value: 3
          units: ounces
        dimensions:
          units: inches
          length: 7
          width: 5
          height: 6
        confirmation: delivery
        residential: false
    GetRatesresponse:
      title: GetRatesresponse
      required:
        - serviceName
        - serviceCode
        - shipmentCost
        - otherCost
      type: object
      properties:
        serviceName:
          type: string
          example: FedEx First Overnight®
        serviceCode:
          type: string
          example: fedex_first_overnight
        shipmentCost:
          type: number
          example: 87.8
        otherCost:
          type: number
          example: 2.63
      example:
        serviceName: FedEx First Overnight®
        serviceCode: fedex_first_overnight
        shipmentCost: 87.8
        otherCost: 2.63
    VoidLabelrequest:
      title: VoidLabelrequest
      required:
        - shipmentId
      type: object
      properties:
        shipmentId:
          type: integer
          format: int32
      example:
        shipmentId: 12345
    VoidLabelresponse:
      title: VoidLabelresponse
      required:
        - approved
        - message
      type: object
      properties:
        approved:
          type: boolean
        message:
          type: string
      example:
        approved: true
        message: Label voided successfully
    GetStoreresponse:
      title: GetStoreresponse
      required:
        - storeId
        - storeName
        - marketplaceId
        - marketplaceName
        - integrationUrl
        - active
        - companyName
        - phone
        - publicEmail
        - website
        - refreshDate
        - lastRefreshAttempt
        - createDate
        - modifyDate
        - autoRefresh
        - statusMappings
      type: object
      properties:
        storeId:
          type: integer
          format: int32
        storeName:
          type: string
        marketplaceId:
          type: integer
          format: int32
        marketplaceName:
          type: string
        accountName:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        integrationUrl:
          type: string
        active:
          type: boolean
        companyName:
          type: string
        phone:
          type: string
        publicEmail:
          type: string
        website:
          type: string
        refreshDate:
          type: string
        lastRefreshAttempt:
          type: string
        createDate:
          type: string
        modifyDate:
          type: string
        autoRefresh:
          type: boolean
        statusMappings:
          type: array
          items:
            $ref: "#/components/schemas/StatusMapping"
          description: ""
      example:
        storeId: 12345
        storeName: WooCommerce Store
        marketplaceId: 36
        marketplaceName: WooCommerce
        accountName: null
        email: null
        integrationUrl: http://shipstation-test.wpengine.com
        active: true
        companyName: ""
        phone: ""
        publicEmail: ""
        website: ""
        refreshDate: "2014-12-16T17:47:05.457"
        lastRefreshAttempt: "2014-12-16T09:47:05.457"
        createDate: "2014-11-06T15:21:13.223"
        modifyDate: "2014-11-10T08:02:19.117"
        autoRefresh: true
        statusMappings:
          - orderStatus: awaiting_payment
            statusKey: Pending
          - orderStatus: awaiting_shipment
            statusKey: Processing
          - orderStatus: shipped
            statusKey: Completed
          - orderStatus: cancelled
            statusKey: Cancelled
          - orderStatus: on_hold
            statusKey: On-hold
    StatusMapping:
      title: StatusMapping
      required:
        - orderStatus
        - statusKey
      type: object
      properties:
        orderStatus:
          type: string
          example: awaiting_payment
        statusKey:
          type: string
          example: Pending
    UpdateStorerequest:
      title: UpdateStorerequest
      required:
        - storeId
        - storeName
        - marketplaceId
        - marketplaceName
        - integrationUrl
        - active
        - companyName
        - phone
        - publicEmail
        - website
        - refreshDate
        - lastRefreshAttempt
        - createDate
        - modifyDate
        - autoRefresh
        - statusMappings
      type: object
      properties:
        storeId:
          type: integer
          format: int32
        storeName:
          type: string
        marketplaceId:
          type: integer
          format: int32
        marketplaceName:
          type: string
        accountName:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        integrationUrl:
          type: string
        active:
          type: boolean
        companyName:
          type: string
        phone:
          type: string
        publicEmail:
          type: string
        website:
          type: string
        refreshDate:
          type: string
        lastRefreshAttempt:
          type: string
        createDate:
          type: string
        modifyDate:
          type: string
        autoRefresh:
          type: boolean
        statusMappings:
          type: array
          items:
            $ref: "#/components/schemas/StatusMapping"
          description: ""
      example:
        storeId: 12345
        storeName: WooCommerce Store
        marketplaceId: 36
        marketplaceName: WooCommerce
        accountName: null
        email: null
        integrationUrl: http://shipstation-test.wpengine.com
        active: true
        companyName: ""
        phone: ""
        publicEmail: ""
        website: ""
        refreshDate: "2014-12-16T17:47:05.457"
        lastRefreshAttempt: "2014-12-16T09:47:05.457"
        createDate: "2014-11-06T15:21:13.223"
        modifyDate: "2014-11-10T08:02:19.117"
        autoRefresh: true
        statusMappings:
          - orderStatus: awaiting_payment
            statusKey: Pending
          - orderStatus: awaiting_shipment
            statusKey: Processing
          - orderStatus: shipped
            statusKey: Completed
          - orderStatus: cancelled
            statusKey: Cancelled
          - orderStatus: on_hold
            statusKey: On-hold
    UpdateStoreresponse:
      title: UpdateStoreresponse
      required:
        - storeId
        - storeName
        - marketplaceId
        - marketplaceName
        - integrationUrl
        - active
        - companyName
        - phone
        - publicEmail
        - website
        - refreshDate
        - lastRefreshAttempt
        - createDate
        - modifyDate
        - autoRefresh
        - statusMappings
      type: object
      properties:
        storeId:
          type: integer
          format: int32
        storeName:
          type: string
        marketplaceId:
          type: integer
          format: int32
        marketplaceName:
          type: string
        accountName:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        integrationUrl:
          type: string
        active:
          type: boolean
        companyName:
          type: string
        phone:
          type: string
        publicEmail:
          type: string
        website:
          type: string
        refreshDate:
          type: string
        lastRefreshAttempt:
          type: string
        createDate:
          type: string
        modifyDate:
          type: string
        autoRefresh:
          type: boolean
        statusMappings:
          type: array
          items:
            $ref: "#/components/schemas/StatusMapping"
          description: ""
      example:
        storeId: 12345
        storeName: WooCommerce Store
        marketplaceId: 36
        marketplaceName: WooCommerce
        accountName: null
        email: null
        integrationUrl: http://shipstation-test.wpengine.com
        active: true
        companyName: ""
        phone: ""
        publicEmail: ""
        website: ""
        refreshDate: "2014-12-16T17:47:05.457"
        lastRefreshAttempt: "2014-12-16T09:47:05.457"
        createDate: "2014-11-06T15:21:13.223"
        modifyDate: "2014-11-10T08:02:19.117"
        autoRefresh: true
        statusMappings:
          - orderStatus: awaiting_payment
            statusKey: Pending
          - orderStatus: awaiting_shipment
            statusKey: Processing
          - orderStatus: shipped
            statusKey: Completed
          - orderStatus: cancelled
            statusKey: Cancelled
          - orderStatus: on_hold
            statusKey: On-hold
    GetStoreRefreshStatusresponse:
      title: GetStoreRefreshStatusresponse
      required:
        - storeId
        - refreshStatusId
        - refreshStatus
        - lastRefreshAttempt
        - refreshDate
      type: object
      properties:
        storeId:
          type: integer
          format: int32
        refreshStatusId:
          type: integer
          format: int32
        refreshStatus:
          type: string
        lastRefreshAttempt:
          type: string
        refreshDate:
          type: string
      example:
        storeId: 12345
        refreshStatusId: 2
        refreshStatus: Updating orders
        lastRefreshAttempt: 8-13-2014
        refreshDate: 8-13-2014
    RefreshStorerequest:
      title: RefreshStorerequest
      required:
        - storeId
        - refreshDate
      type: object
      properties:
        storeId:
          type: integer
          format: int32
        refreshDate:
          type: string
      example:
        storeId: 12345
        refreshDate: 12-08-2014
    RefreshStoreresponse:
      title: RefreshStoreresponse
      required:
        - success
        - message
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
      example:
        success: true
        message: A store refresh has been initiated for Store ID 12345
    ListStoresresponse:
      title: ListStoresresponse
      required:
        - storeId
        - storeName
        - marketplaceId
        - marketplaceName
        - active
        - companyName
        - phone
        - publicEmail
        - website
        - refreshDate
        - lastRefreshAttempt
        - createDate
        - modifyDate
        - autoRefresh
      type: object
      properties:
        storeId:
          type: integer
          format: int32
          example: 22766
        storeName:
          type: string
          example: ShipStation Manual Store
        marketplaceId:
          type: integer
          format: int32
          example: 0
        marketplaceName:
          type: string
          example: ShipStation
        accountName:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        integrationUrl:
          type: string
          nullable: true
        active:
          type: boolean
          example: true
        companyName:
          type: string
        phone:
          type: string
        publicEmail:
          type: string
          example: testemail@email.com
        website:
          type: string
        refreshDate:
          type: string
          example: 12/3/2014 11:46:11 AM
        lastRefreshAttempt:
          type: string
          example: 12/3/2014 11:46:53 AM
        createDate:
          type: string
          example: 7/25/2014 11:05:55 AM
        modifyDate:
          type: string
          example: 11/12/2014 8:45:20 AM
        autoRefresh:
          type: boolean
          example: false
      example:
        storeId: 22766
        storeName: ShipStation Manual Store
        marketplaceId: 0
        marketplaceName: ShipStation
        accountName: null
        email: null
        integrationUrl: null
        active: true
        companyName: ""
        phone: ""
        publicEmail: testemail@email.com
        website: ""
        refreshDate: "2014-12-03T11:46:11.283"
        lastRefreshAttempt: "2014-12-03T11:46:53.433"
        createDate: "2014-07-25T11:05:55.307"
        modifyDate: "2014-11-12T08:45:20.55"
        autoRefresh: false
    ListMarketplacesresponse:
      title: ListMarketplacesresponse
      required:
        - name
        - marketplaceId
        - canRefresh
        - supportsCustomMappings
        - supportsCustomStatuses
        - canConfirmShipments
      type: object
      properties:
        name:
          type: string
          example: 3DCart
        marketplaceId:
          type: integer
          format: int32
          example: 23
        canRefresh:
          type: boolean
          example: true
        supportsCustomMappings:
          type: boolean
          example: true
        supportsCustomStatuses:
          type: boolean
          example: false
        canConfirmShipments:
          type: boolean
          example: true
      example:
        name: 3DCart
        marketplaceId: 23
        canRefresh: true
        supportsCustomMappings: true
        supportsCustomStatuses: false
        canConfirmShipments: true
    DeactivateStorerequest:
      title: DeactivateStorerequest
      required:
        - storeId
      type: object
      properties:
        storeId:
          type: string
      example:
        storeId: "12345"
    DeactivateStoreresponse:
      title: DeactivateStoreresponse
      required:
        - success
        - message
      type: object
      properties:
        success:
          type: string
        message:
          type: string
      example:
        success: "true"
        message: The requested store has been reactivated.
    ReactivateStorerequest:
      title: ReactivateStorerequest
      required:
        - storeId
      type: object
      properties:
        storeId:
          type: string
      example:
        storeId: "12345"
    ReactivateStoreresponse:
      title: ReactivateStoreresponse
      required:
        - success
        - message
      type: object
      properties:
        success:
          type: string
        message:
          type: string
      example:
        success: "true"
        message: The requested store has been reactivated.
    ListUsersresponse:
      title: ListUsersresponse
      required:
        - userId
        - userName
        - name
      type: object
      properties:
        userId:
          type: string
        userName:
          type: string
        name:
          type: string
      example:
        userId: 123456AB-ab12-3c4d-5e67-89f1abc1defa
        userName: SS-user1
        name: Shipping Employee 1
    GetWarehouseresponse:
      title: GetWarehouseresponse
      required:
        - warehouseId
        - warehouseName
        - originAddress
        - returnAddress
        - createDate
        - isDefault
      type: object
      properties:
        warehouseId:
          type: integer
          format: int32
        warehouseName:
          type: string
        originAddress:
          $ref: "#/components/schemas/OriginAddress"
        returnAddress:
          $ref: "#/components/schemas/ReturnAddress"
        createDate:
          type: string
        isDefault:
          type: boolean
      example:
        warehouseId: 12345
        warehouseName: API Ship From Location
        originAddress:
          name: API Warehouse
          company: ShipStation
          street1: 2815 Exposition Blvd
          street2: null
          street3: null
          city: Austin
          state: TX
          postalCode: "78703"
          country: US
          phone: 512-555-5555
          residential: true
          addressVerified: null
        returnAddress:
          name: API Ship From Location
          company: ShipStation
          street1: 2815 Exposition Blvd
          street2: null
          street3: null
          city: Austin
          state: TX
          postalCode: "78703"
          country: US
          phone: 512-555-5555
          residential: null
          addressVerified: null
        createDate: "2015-07-02T08:38:31.487"
        isDefault: true
    OriginAddress:
      title: OriginAddress
      required:
        - name
        - company
        - street1
        - city
        - state
        - postalCode
        - country
        - phone
        - residential
      type: object
      properties:
        name:
          type: string
        company:
          type: string
        street1:
          type: string
        street2:
          type: string
          nullable: true
        street3:
          type: string
          nullable: true
        city:
          type: string
        state:
          type: string
        postalCode:
          type: string
        country:
          type: string
        phone:
          type: string
        residential:
          type: boolean
        addressVerified:
          type: string
          nullable: true
    ReturnAddress:
      title: ReturnAddress
      required:
        - name
        - company
        - street1
        - city
        - state
        - postalCode
        - country
        - phone
      type: object
      properties:
        name:
          type: string
        company:
          type: string
        street1:
          type: string
        street2:
          type: string
          nullable: true
        street3:
          type: string
          nullable: true
        city:
          type: string
        state:
          type: string
        postalCode:
          type: string
        country:
          type: string
        phone:
          type: string
        residential:
          type: string
          nullable: true
        addressVerified:
          type: string
          nullable: true
    UpdateWarehouserequest:
      title: UpdateWarehouserequest
      required:
        - warehouseId
        - warehouseName
        - originAddress
        - returnAddress
        - createDate
        - isDefault
      type: object
      properties:
        warehouseId:
          type: integer
          format: int32
        warehouseName:
          type: string
        originAddress:
          $ref: "#/components/schemas/OriginAddress"
        returnAddress:
          $ref: "#/components/schemas/ReturnAddress"
        createDate:
          type: string
        isDefault:
          type: boolean
      example:
        warehouseId: 12345
        warehouseName: API Ship From Location
        originAddress:
          name: API Warehouse
          company: ShipStation
          street1: 2815 Exposition Blvd
          street2: null
          street3: null
          city: Austin
          state: TX
          postalCode: "78703"
          country: US
          phone: 512-555-5555
          residential: true
          addressVerified: null
        returnAddress:
          name: API Ship From Location
          company: ShipStation
          street1: 2815 Exposition Blvd
          street2: null
          street3: null
          city: Austin
          state: TX
          postalCode: "78703"
          country: US
          phone: 512-555-5555
          residential: null
          addressVerified: null
        createDate: "2015-07-02T08:38:31.487"
        isDefault: true
    UpdateWarehouseresponse:
      title: UpdateWarehouseresponse
      required:
        - warehouseId
        - warehouseName
        - originAddress
        - returnAddress
        - createDate
        - isDefault
      type: object
      properties:
        warehouseId:
          type: integer
          format: int32
        warehouseName:
          type: string
        originAddress:
          $ref: "#/components/schemas/OriginAddress"
        returnAddress:
          $ref: "#/components/schemas/ReturnAddress"
        createDate:
          type: string
        isDefault:
          type: boolean
      example:
        warehouseId: 12345
        warehouseName: API Ship From Location
        originAddress:
          name: API Warehouse
          company: ShipStation
          street1: 2815 Exposition Blvd
          street2: null
          street3: null
          city: Austin
          state: TX
          postalCode: "78703"
          country: US
          phone: 512-555-5555
          residential: true
          addressVerified: null
        returnAddress:
          name: API Ship From Location
          company: ShipStation
          street1: 2815 Exposition Blvd
          street2: null
          street3: null
          city: Austin
          state: TX
          postalCode: "78703"
          country: US
          phone: 512-555-5555
          residential: null
          addressVerified: null
        createDate: "2015-07-02T08:38:31.487"
        isDefault: true
    DeleteWarehouseresponse:
      title: DeleteWarehouseresponse
      required:
        - success
        - message
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
      example:
        success: true
        message: The requested warehouse has been deleted.
    CreateWarehouserequest:
      title: CreateWarehouserequest
      required:
        - warehouseName
        - originAddress
        - isDefault
      type: object
      properties:
        warehouseName:
          type: string
        originAddress:
          $ref: "#/components/schemas/OriginAddress3"
        returnAddress:
          type: string
          nullable: true
        isDefault:
          type: boolean
      example:
        warehouseName: New Ship From Location
        originAddress:
          name: NM Warehouse
          company: White Sands Co.
          street1: 4704 Arabela Dr.
          street2: null
          street3: null
          city: Las Cruces
          state: NM
          postalCode: "80012"
          country: US
          phone: 512-111-2222
          residential: true
        returnAddress: null
        isDefault: false
    OriginAddress3:
      title: OriginAddress3
      required:
        - name
        - company
        - street1
        - city
        - state
        - postalCode
        - country
        - phone
        - residential
      type: object
      properties:
        name:
          type: string
        company:
          type: string
        street1:
          type: string
        street2:
          type: string
          nullable: true
        street3:
          type: string
          nullable: true
        city:
          type: string
        state:
          type: string
        postalCode:
          type: string
        country:
          type: string
        phone:
          type: string
        residential:
          type: boolean
    CreateWarehouseresponse:
      title: CreateWarehouseresponse
      required:
        - warehouseId
        - warehouseName
        - originAddress
        - returnAddress
        - createDate
        - isDefault
      type: object
      properties:
        warehouseId:
          type: integer
          format: int32
        warehouseName:
          type: string
        originAddress:
          $ref: "#/components/schemas/OriginAddress4"
        returnAddress:
          $ref: "#/components/schemas/ReturnAddress3"
        createDate:
          type: string
        isDefault:
          type: boolean
      example:
        warehouseId: 17977
        warehouseName: New Ship From Location
        originAddress:
          name: NM Warehouse
          company: White Sands Co
          street1: 4704 Arabela Dr.
          street2: ""
          street3: ""
          city: Las Cruces
          state: NM
          postalCode: "88012"
          country: US
          phone: 512-111-2222
          residential: true
        returnAddress:
          name: NM Warehouse
          company: White Sands Co
          street1: 4704 Arabela Dr.
          street2: ""
          street3: ""
          city: Las Cruces
          state: NM
          postalCode: "88012"
          country: US
          phone: 512-111-2222
          residential: null
        createDate: "2014-10-21T08:11:43.88"
        isDefault: false
    OriginAddress4:
      title: OriginAddress4
      required:
        - name
        - company
        - street1
        - street2
        - street3
        - city
        - state
        - postalCode
        - country
        - phone
        - residential
      type: object
      properties:
        name:
          type: string
        company:
          type: string
        street1:
          type: string
        street2:
          type: string
        street3:
          type: string
        city:
          type: string
        state:
          type: string
        postalCode:
          type: string
        country:
          type: string
        phone:
          type: string
        residential:
          type: boolean
      example:
        name: Spring warehouse
        company: ""
        street1: "123 S SPRING RD  "
        street2: ""
        street3: ""
        city: Elmurst
        state: IL
        postalCode: "60126"
        country: US
        phone: "5121112222"
        residential: false
    ReturnAddress3:
      title: ReturnAddress3
      required:
        - name
        - company
        - street1
        - street2
        - street3
        - city
        - state
        - postalCode
        - country
        - phone
      type: object
      properties:
        name:
          type: string
        company:
          type: string
        street1:
          type: string
        street2:
          type: string
        street3:
          type: string
        city:
          type: string
        state:
          type: string
        postalCode:
          type: string
        country:
          type: string
        phone:
          type: string
        residential:
          type: string
          nullable: true
      example:
        name: Chicago House
        company: ""
        street1: "123 S SPRING RD  "
        street2: ""
        street3: ""
        city: Elmurst
        state: IL
        postalCode: "60126"
        country: US
        phone: "5121112222"
        residential: null
    ListWarehousesresponse:
      title: ListWarehousesresponse
      required:
        - warehouseId
        - warehouseName
        - originAddress
        - returnAddress
        - createDate
        - isDefault
      type: object
      properties:
        warehouseId:
          type: integer
          format: int32
          example: 17977
        warehouseName:
          type: string
          example: Main warehouse
        originAddress:
          $ref: "#/components/schemas/OriginAddress4"
        returnAddress:
          $ref: "#/components/schemas/ReturnAddress3"
        createDate:
          type: string
          example: 10/21/2014 8:11:43 AM
        isDefault:
          type: boolean
          example: true
      example:
        warehouseId: 17977
        warehouseName: Main warehouse
        originAddress:
          name: Spring warehouse
          company: ""
          street1: "123 S SPRING RD  "
          street2: ""
          street3: ""
          city: Elmurst
          state: IL
          postalCode: "60126"
          country: US
          phone: "5121112222"
          residential: false
        returnAddress:
          name: Chicago House
          company: ""
          street1: "123 S SPRING RD  "
          street2: ""
          street3: ""
          city: Elmurst
          state: IL
          postalCode: "60126"
          country: US
          phone: "5121112222"
          residential: null
        createDate: "2014-10-21T08:11:43.88"
        isDefault: true
    ListWebhooksresponse:
      title: ListWebhooksresponse
      required:
        - webhooks
      type: object
      properties:
        webhooks:
          type: array
          items:
            $ref: "#/components/schemas/Webhook"
          description: ""
      example:
        webhooks:
          - IsLabelAPIHook: false
            WebHookID: 123
            SellerID: 100000
            StoreID: 12345
            HookType: ITEM_ORDER_NOTIFY
            MessageFormat: Json
            Url: http://example.endpoint/orders
            Name: My Order Webhook
            BulkCopyBatchID: null
            BulkCopyRecordID: null
            Active: true
            WebhookLogs: []
            Seller: null
            Store: null
          - IsLabelAPIHook: false
            WebHookID: 456
            SellerID: 100000
            StoreID: 98765
            HookType: SHIP_NOTIFY
            MessageFormat: Json
            Url: https://example.endpoint/shipment
            Name: My Shipment Webhook
            BulkCopyBatchID: null
            BulkCopyRecordID: null
            Active: true
            WebhookLogs: []
            Seller: null
            Store: null
    Webhook:
      title: Webhook
      required:
        - IsLabelAPIHook
        - WebHookID
        - SellerID
        - StoreID
        - HookType
        - MessageFormat
        - Url
        - Name
        - Active
        - WebhookLogs
      type: object
      properties:
        IsLabelAPIHook:
          type: boolean
          example: false
        WebHookID:
          type: integer
          format: int32
          example: 123
        SellerID:
          type: integer
          format: int32
          example: 100000
        StoreID:
          type: integer
          format: int32
          example: 12345
        HookType:
          type: string
          example: ITEM_ORDER_NOTIFY
        MessageFormat:
          type: string
          example: Json
        Url:
          type: string
          example: http://example.endpoint/orders
        Name:
          type: string
          example: My Order Webhook
        BulkCopyBatchID:
          type: string
          nullable: true
        BulkCopyRecordID:
          type: string
          nullable: true
        Active:
          type: boolean
          example: true
        WebhookLogs:
          type: array
          items:
            type: string
          description: ""
        Seller:
          type: string
          nullable: true
        Store:
          type: string
          nullable: true
    SubscribetoWebhookrequest:
      title: SubscribetoWebhookrequest
      required:
        - target_url
        - event
        - friendly_name
      type: object
      properties:
        target_url:
          type: string
        event:
          type: string
        store_id:
          type: string
          nullable: true
        friendly_name:
          type: string
      example:
        target_url: http://someexamplewebhookurl.com/neworder
        event: ORDER_NOTIFY
        store_id: null
        friendly_name: My Webhook
    SubscribetoWebhookresponse:
      title: SubscribetoWebhookresponse
      required:
        - id
      type: object
      properties:
        id:
          type: integer
          format: int32
      example:
        id: 123456
  securitySchemes:
    httpBasic:
      type: http
      scheme: basic
security:
  - httpBasic: []
tags:
  - name: Accounts
    description: ""
  - name: Carriers
    description: ""
  - name: Customers
    description: ""
  - name: Fulfillments
    description: ""
  - name: Orders
    description: ""
  - name: Products
    description: ""
  - name: Shipments
    description: ""
  - name: Stores
    description: ""
  - name: Users
    description: ""
  - name: Warehouses
    description: ""
  - name: Webhooks
    description: ""
