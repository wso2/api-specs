openapi: 3.0.1
info:
  x-ballerina-display:
      label: ISBNdb
      iconPath: "icon.png"
  title: ISBNdb API v2
  description: >
    This is a generated connector for [ISBNdb API v2.0.0](https://isbndb.com/apidocs/v2) OpenAPI specification.

    The ISBNdb.com API exposes data such as title, author, publisher and publish date about books.
  x-ballerina-init-description: >
    The connector initialization requires setting the API credentials.

    Create a [ISBNdb Account](https://isbndb.com/isbn-database) by selecting a pricing plan and obtain tokens following [this guide](https://isbndb.com/apidocs/v2).
  version: 2.0.0
servers:
- url: https://api2.isbndb.com/
paths:
  /author/{name}:
    get:
      tags:
      - Author
      summary: Gets author details
      description: Returns the name and a list of books by the author.
      operationId: getAuthorDetails
      parameters:
      - name: name
        in: path
        description: The name of an author in the Author's database
        required: true
        schema:
          type: string
      - name: page
        in: query
        description: The number of page to retrieve, please note the API will not
          return more than 10,000 results no matter how you paginate them
        schema:
          type: integer
          default: 1
      - name: pageSize
        in: query
        description: How many items should be returned per page, maximum of 1,000
        schema:
          type: integer
          default: 20
      responses:
        200:
          description: The author name was found in the database
          headers:
            Access-Control-Allow-Origin:
              description: CORS Header to allow different origin responses
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Author'
        404:
          description: Author not found
          content: {}
      security:
      - lambda_token: []
  /authors/{query}:
    get:
      tags:
      - Author
      summary: Search authors
      description: This returns a list of authors whos name matches the given query
      operationId: searchAuthors
      parameters:
      - name: pageSize
        in: query
        description: How many items should be returned per page, maximum of 1,000
        schema:
          type: string
      - name: query
        in: path
        description: A string to search for in the Author’s database
        required: true
        schema:
          type: string
      - name: page
        in: query
        description: The number of page to retrieve, please note the API will not
          return more than 10,000 results no matter how you paginate them
        schema:
          type: string
      responses:
        200:
          description: The query string found results in the author's database
          headers:
            Access-Control-Allow-Origin:
              description: CORS Header to allow different origin responses
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorQueryResults'
        404:
          description: There are no results in the author's database for the given
            query
          content: {}
      security:
      - lambda_token: []
  /book/{isbn}:
    get:
      tags:
      - Book
      summary: Gets book details
      description: Returns the book details
      operationId: getBookDetails
      parameters:
      - name: isbn
        in: path
        description: an ISBN 10 or ISBN 13 in the Books database
        required: true
        schema:
          type: string
      - name: with_prices
        in: query
        description: indicate if shows Real Time Prices. Only with the Pro plan
        schema:
          type: string
          enum:
          - "1"
          - "0"
      responses:
        200:
          description: The book ISBN was found in the database
          headers:
            Access-Control-Allow-Origin:
              description: CORS Header to allow different origin responses
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
        404:
          description: Book not found
          content: {}
      security:
      - lambda_token: []
  /books:
    post:
      tags:
      - Book
      summary: Search books
      operationId: searchBooks
      description: 'This returns a list of books that match the query. Only with the
        Premium and Pro plans. This endpoint has no pagination but it has the following
        limits: You can only send up to 1,000 ISBN numbers per request. If you send
        100 ISBN numbers you will get information back for all 100 books in the response
        provided the ISBNs do exist in the ISBNdb Database. ISBN Numbers not found
        in the ISBNdb database will not be part of the response. There is a limit
        of up to 6MB response size, if the limit is exceeded you will get a 500 error
        reply.'
      requestBody:
        description: Request payload to search to search books
        content:
          application/json:
            schema:
              required:
              - isbns
              properties:
                isbns:
                  type: array
                  description: a list of ISBN 10 or ISBN 13 in the Books database
                  items:
                    type: string
          multipart/form-data:
            schema:
              required:
              - isbns
              properties:
                isbns:
                  type: array
                  description: a list of ISBN 10 or ISBN 13 in the Books database
                  items:
                    type: string
        required: true
      responses:
        200:
          description: The query string found results in the book's database
          headers:
            Access-Control-Allow-Origin:
              description: CORS Header to allow different origin responses
              schema:
                type: string
          content: {}
      security:
      - lambda_token: []
  /books/{query}:
    get:
      tags:
      - Book
      summary: Search books
      description: This returns a list of books that match the query
      operationId: searchBooksByQuery
      parameters:
      - name: query
        in: path
        description: A string to search for in the Book’s database
        required: true
        schema:
          type: string
      - name: page
        in: query
        description: The number of page to retrieve, please note the API will not
          return more than 10,000 results no matter how you paginate them
        schema:
          type: integer
          default: 1
      - name: pageSize
        in: query
        description: How many items should be returned per page, maximum of 1,000
        schema:
          type: integer
          default: 20
      - name: column
        in: query
        description: |
          Search limited to this column:
           * `` - Empty value search in every column
           * `title` - Only searches in Books Title
           * `author` - Only searches books by the given Author
           * `date_published` - Only searches books in a given year, e.g. 1998
        schema:
          type: string
          enum:
          - title
          - author
          - date_published
      - name: beta
        in: query
        description: A integer (1 or 0) for enable or disable beta searching.
        schema:
          type: integer
          default: 0
      responses:
        200:
          description: The query string found results in the books's database
          headers:
            Access-Control-Allow-Origin:
              description: CORS Header to allow different origin responses
              schema:
                type: string
          content: {}
        404:
          description: There are no results in the book's database for the given query
          content: {}
      security:
      - lambda_token: []
  /publisher/{name}:
    get:
      tags:
      - Publisher
      summary: Gets publisher details
      operationId: getPublisherDetails
      description: Returns details and a list of books by the publisher.
      parameters:
      - name: name
        in: path
        description: The name of a publisher in the Publisher's database
        required: true
        schema:
          type: string
      - name: page
        in: query
        description: The number of page to retrieve, please note the API will not
          return more than 10,000 results no matter how you paginate them
        schema:
          type: integer
          default: 1
      - name: pageSize
        in: query
        description: How many items should be returned per page, maximum of 1,000
        schema:
          type: integer
          default: 20
      responses:
        200:
          description: The publisher name was found in the database
          headers:
            Access-Control-Allow-Origin:
              description: CORS Header to allow different origin responses
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Publisher'
        404:
          description: Publisher not found
          content: {}
      security:
      - lambda_token: []
  /publishers/{query}:
    get:
      tags:
      - Publisher
      summary: Search publishers
      operationId: searchPublishers
      description: This returns a list of publishers that match the given query
      parameters:
      - name: pageSize
        in: query
        description: How many items should be returned per page, maximum of 1,000
        schema:
          type: string
      - name: query
        in: path
        description: A string to search for in the Publisher’s database
        required: true
        schema:
          type: string
      - name: page
        in: query
        description: The number of page to retrieve, please note the API will not
          return more than 10,000 results no matter how you paginate them
        schema:
          type: string
      responses:
        200:
          description: The query string found results in the publisher's database
          headers:
            Access-Control-Allow-Origin:
              description: CORS Header to allow different origin responses
              schema:
                type: string
          content: {}
        404:
          description: No results found.
          content: {}
      security:
      - lambda_token: []
  /search/{index}:
    get:
      tags:
      - Search
      summary: Search all ISBNDB databases
      operationId: searchISBNDB
      description: Uses a determined index and query string to search in any of the
        ISBNDB's databases
      parameters:
      - name: index
        in: path
        description: 'Only this values are valids: subjects, publishers, authors y
          books'
        required: true
        schema:
          type: string
          enum:
          - subjects
          - publishers
          - authors
          - books
      - name: page
        in: query
        description: The number of page to retrieve, please note the API will not
          return more than 10,000 results no matter how you paginate them
        schema:
          type: string
      - name: pageSize
        in: query
        description: How many items should be returned per page, maximum of 1,000
        schema:
          type: string
      - name: isbn
        in: query
        description: an ISBN 10 in the Books database
        schema:
          type: string
      - name: isbn13
        in: query
        description: an ISBN 13 in the Books database
        schema:
          type: string
      - name: author
        in: query
        description: The name of an author in the Author's database
        schema:
          type: string
      - name: text
        in: query
        description: A string to search for determinated index database
        schema:
          type: string
      - name: subject
        in: query
        description: A subject in the Subject's database
        schema:
          type: string
      - name: publisher
        in: query
        description: The name of a publisher in the Publisher's database
        schema:
          type: string
      responses:
        200:
          description: Results were found in the requested database
          headers:
            Access-Control-Allow-Origin:
              description: CORS Header to allow different origin responses
              schema:
                type: string
          content: {}
        404:
          description: No results found in the requested database
          content: {}
      security:
      - lambda_token: []
  /stats:
    get:
      tags:
      - Stats
      summary: Gets status on the ISBNDB Database
      operationId: getISBNDBStatus
      description: Returns a status object about the ISBNDB database.
      responses:
        200:
          description: Stats on the ISBNDB sucessfully retrieved
          headers:
            Access-Control-Allow-Origin:
              description: CORS Header to allow different origin responses
              schema:
                type: string
          content: {}
      security:
      - lambda_token: []
  /subject/{name}:
    get:
      tags:
      - Subject
      summary: Gets subject details
      operationId: getSubjectDetails
      description: Returns details and a list of books with subject.
      parameters:
      - name: name
        in: path
        description: A subject in the Subject's database
        required: true
        schema:
          type: string
      responses:
        200:
          description: The subject was found in the database
          headers:
            Access-Control-Allow-Origin:
              description: CORS Header to allow different origin responses
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subject'
        404:
          description: Subject not found
          content: {}
      security:
      - lambda_token: []
  /subjects/{query}:
    get:
      tags:
      - Subject
      summary: Search subjects
      operationId: searchSubject
      description: This returns a list of subjects that match the given query
      parameters:
      - name: pageSize
        in: query
        description: How many items should be returned per page, maximum of 1,000
        schema:
          type: string
      - name: query
        in: path
        description: A string to search for in the Subject’s database
        required: true
        schema:
          type: string
      - name: page
        in: query
        description: The number of page to retrieve, please note the API will not
          return more than 10,000 results no matter how you paginate them
        schema:
          type: string
      responses:
        200:
          description: The query string found results in the subject's database
          headers:
            Access-Control-Allow-Origin:
              description: CORS Header to allow different origin responses
              schema:
                type: string
          content: {}
        404:
          description: There are no results in the subject's database for the given
            query
          content: {}
      security:
      - lambda_token: []
components:
  schemas:
    AuthorQueryResults:
      type: object
      properties:
        total:
          type: integer
        authors:
          type: array
          items:
            type: string
      description: Describes the results of a query in the author's database
    Book:
      type: object
      properties:
        title:
          type: string
        title_long:
          type: string
        isbn:
          type: string
        isbn13:
          type: string
        dewey_decimal:
          type: string
        binding:
          type: string
        publisher:
          type: string
        language:
          type: string
        date_published:
          type: string
          format: date-time
        edition:
          type: string
        pages:
          type: integer
        dimensions:
          type: string
        overview:
          type: string
        image:
          $ref: '#/components/schemas/CoverLink'
        msrp:
          type: number
        excerpt:
          type: string
        synopsys:
          type: string
        authors:
          type: array
          items:
            type: string
        subjects:
          type: array
          items:
            type: string
        reviews:
          type: array
          items:
            type: string
        prices:
          type: array
          description: Only shows if the query param 'with_prices' is present.
          items:
            $ref: '#/components/schemas/Merchant'
        related:
          type: object
          properties:
            type:
              type: string
      description: Describes a book in the book's database
    Author:
      type: object
      properties:
        author:
          description: Author name
          type: string
        books:
          description: Detail about books written by author
          type: array
          items:
            $ref: '#/components/schemas/Book'
      description: Describes the name of an author and the books written by that author
        in the database
    Publisher:
      type: object
      description : Describes about book publisher details
      properties:
        name:
          type: string
          description : Name of book publisher
        books:
          type: array
          description : Details of books published
          items:
            type: object
            description: Details of books published
            properties:
              isbn:
                type: string
    Subject:
      type: object
      description : Describes about what the book is about
      properties:
        subject:
          type: string
        parent:
          type: string
    CoverLink:
      type: string
      description: The link to the cover image
    Merchant:
      type: object
      properties:
        condition:
          type: string
        merchant:
          type: string
        merchant_logo:
          type: string
        merchant_logo_offset:
          type: object
          properties:
            x:
              type: string
              description: Merchant logo x-offset
            y:
              type: string
              description: Merchant logo y-offset
        shipping:
          type: string
        price:
          type: string
        total:
          type: string
        link:
          type: string
      description: Describe the conditions of the price by merchant. Only with the
        Pro plan
  securitySchemes:
    lambda_token:
      description: All requests on the ISBNdb.com API needs to include an API key. The API key can be provided as part of the query string or as a request header. The name of the API key needs to be `Authorization`.
      type: apiKey
      name: Authorization
      in: header
      x-amazon-apigateway-authtype: custom
