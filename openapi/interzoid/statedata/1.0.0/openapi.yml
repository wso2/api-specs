openapi: 3.0.0
servers:
  - url: https://api.interzoid.com
info:
  x-ballerina-display:
      label: Interzoid State Data
      iconPath: "icon.png"
  contact:
    email: support@interzoid.com
    name: API Support
    url: https://www.interzoid.com
    x-twitter: interzoid
  description: >
    This is a generated connector for [Interzoid State Data API v1.0.0]
    (https://www.interzoid.com/services/getstateabbreviation) OpenAPI specification.

    This API provides the two-letter state abbreviation 
    (or the province abbreviation for Canada) for the purposes of standardizing state name data, 
    improving query results, analytics, and data merging.

    For additional help getting started with the API, 
    visit [Interzoid State Data API](https://www.interzoid.com/services/getstateabbreviation).
  x-ballerina-init-description: >
    The connector initialization requires setting the API credentials.

    Create an [Interzoid Account](https://www.interzoid.com/register) 
    and obtain tokens by log into [Interzoid Account](https://www.interzoid.com/account).
  license:
    name: Interzoid license
    url: https://www.interzoid.com/license
  termsOfService: https://www.interzoid.com/terms
  title: Interzoid State Data Standardization API
  version: 1.0.0
  x-apisguru-categories:
    - developer_tools
  x-logo:
    url: https://twitter.com/interzoid/profile_image?size=original
  x-origin:
    - format: openapi
      url: https://oas.interzoid.com/api/getstateabbreviation.json
      version: "3.0"
  x-providerName: interzoid.com
  x-serviceName: getstateabbreviation
externalDocs:
  description: API home page and documentation
  url: https://www.interzoid.com/services/getstateabbreviation
security:
  - ApiKeyAuth : []
components:
  securitySchemes:
    ApiKeyAuth:
      description: All requests on the State Data API needs to include an API key. The API key can be provided as part of the query string or as a request header. The name of the API key needs to be `license`.
      type: apiKey
      in: query
      name: license
  schemas: 
    StateData:
      description: State data
      properties:
        Abbreviation:
          type: string
        Code:
          type: string
        Credits:
          type: string
        State:
          type: string
paths:
  /getstateabbreviation:
    get:
      description: Gets a two-letter abbreviation for a state or province given a permutation of state or province data.
      operationId: getstateabbreviation
      parameters:
        - description: State (or province) name from which to retrieve the two letter abbreviation.
          in: query
          name: state
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StateData'
          description: State (or province) standardized two-letter abbreviation
        "400":
          description: bad request - insufficient parameters
        "402":
          description: credits exhausted
        "403":
          description: invalid license API key
        "405":
          description: method not allowed
        "500":
          description: internal server error
      summary: Gets a two-letter abbreviation for a state or province name data
      tags:
        - State Data Standardization