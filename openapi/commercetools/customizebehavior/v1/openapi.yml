openapi: 3.0.0
info:
  title: Commercetools
  version: v1
  description: >-
    This is a generated connector for [Commercetools API v1](https://docs.commercetools.com/api/) OpenAPI specification. 
    
    The commercetools Platform HTTP API(Customize Behavior) offers an interface for programmatic access to the data stored on the platform and associated functionality for customize behavior.
  x-ballerina-init-description: >
    The connector initialization requires setting the API credentials.
    Create and configure an OAuth2 client credentials by following [this guide](https://docs.commercetools.com/api/authorization).
  x-ballerina-display:
    label: Commercetools Customize Behavior
    iconPath: "icon.png"

security:
  - bearerAuth: [] 
paths:
  /{projectKey}/extensions/key={key}:
    parameters:
      - name: projectKey
        in: path
        required: true
        schema:
          type: string
      - name: key
        in: path
        required: true
        schema:
          type: string
    get:
      tags:
        - "customizeData"
      security:
        - oauth_2_0:
            - "manage_extensions:{projectKey}"
      operationId: getExtensionByKey
      description: |-
        Retrieves the representation of an extension by its key.
      parameters:
        - name: expand
          in: query
          required: false
          style: form
          schema:
            type: "array"
            items:
              $ref: '#/components/schemas/Expansion'
          explode: true
      responses:
        200:
          description: |-
            200
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/Extension'

        400:
          description: |-
            ## Bad Request

            A 400 is the most commonly expected error response and indicates that a request failed due to providing bad input.
            Bad input can be a malformed request body, missing required parameters, wrongly typed or malformed parameters or
            a parameter that references another resource that does not exist. Clients need to resolve the problems mentioned
            in the response before re-sending the request.

            The following general error codes can appear in responses with the HTTP status code `400`:

            * `InvalidInput`
              Invalid input has been sent to the service.
              The client application should validate the input according to the constraints described in the error message
              before sending the request.

            * `InvalidOperation`
              The resource(s) involved in the request are not in a valid state for the operation. The client application
              should validate the constraints described in the error message before sending the request.

            * `InvalidField`
              A field has an invalid value.
              Extra fields:
              * `field` - String
                The name of the field.
              * `invalidValue` - *
                The invalid value.
              * `allowedValues` - Array of * - Optional
                A fixed set of allowed values for the field, if any.

            * `RequiredField`
              A required field is missing a value.
              Extra fields:
              * `field` - String
                The name of the field.

            * `DuplicateField`
              A value for a field conflicts with an existing duplicate value.
              Extra fields:
              * `field` - String
                The name of the field.
              * `duplicateValue` - *
                The offending duplicate value.
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

        401:
          description: |-
            ## Unauthorized

            A 401 indicates that the request is not properly authenticated.
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

        403:
          description: |-
            ## Forbidden

            A 403 indicates that the authenticated client is not allowed to perform the request.
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

        404:
          description: |-
            ## Not Found

            A 404 indicates that the addressed resource was not found / does not exist.

            The following general error codes can appear in responses with the HTTP status code `404`:

            * `ResourceNotFound`
              The resource addressed by the request URL does not exist.
          content: {}
        500:
          description: |-
            ## Internal Server Error

            A 500 indicates that a request failed due to a server-side problem that needs to be resolved before subsequent
            requests can succeed. It either indicates a temporary unavailability or permanent server-side problem that needs
            to be reported and resolved.

            The following general error codes can appear in responses with the HTTP status code `500`:

            * `General`
              A server-side problem occurred that is not further specified.
              These errors [should be reported](http://support.commercetools.com/).
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

        502:
          description: |-
            A 502 indicates that a request failed due to a server-side problem caused by platform scaling.
            The client application should retry the request with exponential backoff up to a point where further delay is unacceptable.
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

        503:
          description: |-
            ## Service Unavailable

            The following general error codes can appear in responses with the HTTP status code `503`:

            * `OverCapacity`
              The service is having trouble handling the load. The client application should retry the request with
              exponential backoff up to a point where further delay is unacceptable.

            * `PendingOperation`
              A previous conflicting operation is still pending and needs to finish before the request can succeed.
              The client application should retry the request with exponential backoff up to a point where further delay
              is unaceptable. If these errors persist, [should be reported](http://support.commercetools.com/).
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

    post:
      tags:
        - "customizeData"
      security:
        - oauth_2_0:
            - "manage_extensions:{projectKey}"
      operationId: updateExtensionByKey
      parameters:
        - name: expand
          in: query
          required: false
          style: form
          schema:
            type: "array"
            items:
              $ref: '#/components/schemas/Expansion'
          explode: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExtensionUpdate'

      responses:
        200:
          description: |-
            200
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/Extension'

        409:
          description: |-
            ## Conflict

            A 409 indicates that the current version of the resource targeted by the request (with the intention to modify or delete it) is different from that provided in the request.
            In response to this, the client will usually want to request the newest version of the resource to see what has been changed and decide what changes to apply to the newest version.

            A 409 Conflict indicates a concurrent modification and usually occurs on a versioned resource, which requires the client to provide the version of the resource to perform a change.

            The following general error codes can appear in responses with the HTTP status code `409`:

            * `ConcurrentModification`
              The request conflicts with the current state of the involved resource(s).
              Typically, the request attempts to modify a resource that is out of date,
              i.e. that has been modified by another client since the last time it was retrieved.
              The client application should resolve the conflict (with or without involving the end-user)
              before retrying the request.
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

        400:
          description: |-
            ## Bad Request

            A 400 is the most commonly expected error response and indicates that a request failed due to providing bad input.
            Bad input can be a malformed request body, missing required parameters, wrongly typed or malformed parameters or
            a parameter that references another resource that does not exist. Clients need to resolve the problems mentioned
            in the response before re-sending the request.

            The following general error codes can appear in responses with the HTTP status code `400`:

            * `InvalidInput`
              Invalid input has been sent to the service.
              The client application should validate the input according to the constraints described in the error message
              before sending the request.

            * `InvalidOperation`
              The resource(s) involved in the request are not in a valid state for the operation. The client application
              should validate the constraints described in the error message before sending the request.

            * `InvalidField`
              A field has an invalid value.
              Extra fields:
              * `field` - String
                The name of the field.
              * `invalidValue` - *
                The invalid value.
              * `allowedValues` - Array of * - Optional
                A fixed set of allowed values for the field, if any.

            * `RequiredField`
              A required field is missing a value.
              Extra fields:
              * `field` - String
                The name of the field.

            * `DuplicateField`
              A value for a field conflicts with an existing duplicate value.
              Extra fields:
              * `field` - String
                The name of the field.
              * `duplicateValue` - *
                The offending duplicate value.
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

        401:
          description: |-
            ## Unauthorized

            A 401 indicates that the request is not properly authenticated.
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

        403:
          description: |-
            ## Forbidden

            A 403 indicates that the authenticated client is not allowed to perform the request.
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

        404:
          description: |-
            ## Not Found

            A 404 indicates that the addressed resource was not found / does not exist.

            The following general error codes can appear in responses with the HTTP status code `404`:

            * `ResourceNotFound`
              The resource addressed by the request URL does not exist.
          content: {}
        500:
          description: |-
            ## Internal Server Error

            A 500 indicates that a request failed due to a server-side problem that needs to be resolved before subsequent
            requests can succeed. It either indicates a temporary unavailability or permanent server-side problem that needs
            to be reported and resolved.

            The following general error codes can appear in responses with the HTTP status code `500`:

            * `General`
              A server-side problem occurred that is not further specified.
              These errors [should be reported](http://support.commercetools.com/).
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

        502:
          description: |-
            A 502 indicates that a request failed due to a server-side problem caused by platform scaling.
            The client application should retry the request with exponential backoff up to a point where further delay is unacceptable.
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

        503:
          description: |-
            ## Service Unavailable

            The following general error codes can appear in responses with the HTTP status code `503`:

            * `OverCapacity`
              The service is having trouble handling the load. The client application should retry the request with
              exponential backoff up to a point where further delay is unacceptable.

            * `PendingOperation`
              A previous conflicting operation is still pending and needs to finish before the request can succeed.
              The client application should retry the request with exponential backoff up to a point where further delay
              is unaceptable. If these errors persist, [should be reported](http://support.commercetools.com/).
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

    delete:
      tags:
        - "customizeData"
      security:
        - oauth_2_0:
            - "manage_extensions:{projectKey}"
      operationId: deleteExtensionByKey
      parameters:
        - name: version
          in: query
          required: true
          style: form
          schema:
            type: "number"
            format: "double"
          explode: true
        - name: expand
          in: query
          required: false
          style: form
          schema:
            type: "array"
            items:
              $ref: '#/components/schemas/Expansion'
          explode: true
      responses:
        200:
          description: |-
            200
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/Extension'

        409:
          description: |-
            ## Conflict

            A 409 indicates that the current version of the resource targeted by the request (with the intention to modify or delete it) is different from that provided in the request.
            In response to this, the client will usually want to request the newest version of the resource to see what has been changed and decide what changes to apply to the newest version.

            A 409 Conflict indicates a concurrent modification and usually occurs on a versioned resource, which requires the client to provide the version of the resource to perform a change.

            The following general error codes can appear in responses with the HTTP status code `409`:

            * `ConcurrentModification`
              The request conflicts with the current state of the involved resource(s).
              Typically, the request attempts to modify a resource that is out of date,
              i.e. that has been modified by another client since the last time it was retrieved.
              The client application should resolve the conflict (with or without involving the end-user)
              before retrying the request.
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

        400:
          description: |-
            ## Bad Request

            A 400 is the most commonly expected error response and indicates that a request failed due to providing bad input.
            Bad input can be a malformed request body, missing required parameters, wrongly typed or malformed parameters or
            a parameter that references another resource that does not exist. Clients need to resolve the problems mentioned
            in the response before re-sending the request.

            The following general error codes can appear in responses with the HTTP status code `400`:

            * `InvalidInput`
              Invalid input has been sent to the service.
              The client application should validate the input according to the constraints described in the error message
              before sending the request.

            * `InvalidOperation`
              The resource(s) involved in the request are not in a valid state for the operation. The client application
              should validate the constraints described in the error message before sending the request.

            * `InvalidField`
              A field has an invalid value.
              Extra fields:
              * `field` - String
                The name of the field.
              * `invalidValue` - *
                The invalid value.
              * `allowedValues` - Array of * - Optional
                A fixed set of allowed values for the field, if any.

            * `RequiredField`
              A required field is missing a value.
              Extra fields:
              * `field` - String
                The name of the field.

            * `DuplicateField`
              A value for a field conflicts with an existing duplicate value.
              Extra fields:
              * `field` - String
                The name of the field.
              * `duplicateValue` - *
                The offending duplicate value.
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

        401:
          description: |-
            ## Unauthorized

            A 401 indicates that the request is not properly authenticated.
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

        403:
          description: |-
            ## Forbidden

            A 403 indicates that the authenticated client is not allowed to perform the request.
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

        404:
          description: |-
            ## Not Found

            A 404 indicates that the addressed resource was not found / does not exist.

            The following general error codes can appear in responses with the HTTP status code `404`:

            * `ResourceNotFound`
              The resource addressed by the request URL does not exist.
          content: {}
        500:
          description: |-
            ## Internal Server Error

            A 500 indicates that a request failed due to a server-side problem that needs to be resolved before subsequent
            requests can succeed. It either indicates a temporary unavailability or permanent server-side problem that needs
            to be reported and resolved.

            The following general error codes can appear in responses with the HTTP status code `500`:

            * `General`
              A server-side problem occurred that is not further specified.
              These errors [should be reported](http://support.commercetools.com/).
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

        502:
          description: |-
            A 502 indicates that a request failed due to a server-side problem caused by platform scaling.
            The client application should retry the request with exponential backoff up to a point where further delay is unacceptable.
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

        503:
          description: |-
            ## Service Unavailable

            The following general error codes can appear in responses with the HTTP status code `503`:

            * `OverCapacity`
              The service is having trouble handling the load. The client application should retry the request with
              exponential backoff up to a point where further delay is unacceptable.

            * `PendingOperation`
              A previous conflicting operation is still pending and needs to finish before the request can succeed.
              The client application should retry the request with exponential backoff up to a point where further delay
              is unaceptable. If these errors persist, [should be reported](http://support.commercetools.com/).
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
  /{projectKey}/extensions/{id}:
    parameters:
      - name: projectKey
        in: path
        required: true
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: string
    get:
      tags:
        - "customizeData" 
      security:
        - oauth_2_0:
            - "manage_extensions:{projectKey}"
      operationId: getExtensionByID
      description: |-
        Retrieves the representation of an extension by its id.
      parameters:
        - name: expand
          in: query
          required: false
          style: form
          schema:
            type: "array"
            items:
              $ref: '#/components/schemas/Expansion'
          explode: true
      responses:
        200:
          description: |-
            200
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/Extension'

        400:
          description: |-
            ## Bad Request

            A 400 is the most commonly expected error response and indicates that a request failed due to providing bad input.
            Bad input can be a malformed request body, missing required parameters, wrongly typed or malformed parameters or
            a parameter that references another resource that does not exist. Clients need to resolve the problems mentioned
            in the response before re-sending the request.

            The following general error codes can appear in responses with the HTTP status code `400`:

            * `InvalidInput`
              Invalid input has been sent to the service.
              The client application should validate the input according to the constraints described in the error message
              before sending the request.

            * `InvalidOperation`
              The resource(s) involved in the request are not in a valid state for the operation. The client application
              should validate the constraints described in the error message before sending the request.

            * `InvalidField`
              A field has an invalid value.
              Extra fields:
              * `field` - String
                The name of the field.
              * `invalidValue` - *
                The invalid value.
              * `allowedValues` - Array of * - Optional
                A fixed set of allowed values for the field, if any.

            * `RequiredField`
              A required field is missing a value.
              Extra fields:
              * `field` - String
                The name of the field.

            * `DuplicateField`
              A value for a field conflicts with an existing duplicate value.
              Extra fields:
              * `field` - String
                The name of the field.
              * `duplicateValue` - *
                The offending duplicate value.
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

        401:
          description: |-
            ## Unauthorized

            A 401 indicates that the request is not properly authenticated.
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

        403:
          description: |-
            ## Forbidden

            A 403 indicates that the authenticated client is not allowed to perform the request.
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

        404:
          description: |-
            ## Not Found

            A 404 indicates that the addressed resource was not found / does not exist.

            The following general error codes can appear in responses with the HTTP status code `404`:

            * `ResourceNotFound`
              The resource addressed by the request URL does not exist.
          content: {}
        500:
          description: |-
            ## Internal Server Error

            A 500 indicates that a request failed due to a server-side problem that needs to be resolved before subsequent
            requests can succeed. It either indicates a temporary unavailability or permanent server-side problem that needs
            to be reported and resolved.

            The following general error codes can appear in responses with the HTTP status code `500`:

            * `General`
              A server-side problem occurred that is not further specified.
              These errors [should be reported](http://support.commercetools.com/).
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

        502:
          description: |-
            A 502 indicates that a request failed due to a server-side problem caused by platform scaling.
            The client application should retry the request with exponential backoff up to a point where further delay is unacceptable.
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

        503:
          description: |-
            ## Service Unavailable

            The following general error codes can appear in responses with the HTTP status code `503`:

            * `OverCapacity`
              The service is having trouble handling the load. The client application should retry the request with
              exponential backoff up to a point where further delay is unacceptable.

            * `PendingOperation`
              A previous conflicting operation is still pending and needs to finish before the request can succeed.
              The client application should retry the request with exponential backoff up to a point where further delay
              is unaceptable. If these errors persist, [should be reported](http://support.commercetools.com/).
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

    post:
      tags:
        - "customizeData" 
      security:
        - oauth_2_0:
            - "manage_extensions:{projectKey}"
      operationId: updateExtensionByID
      parameters:
        - name: expand
          in: query
          required: false
          style: form
          schema:
            type: "array"
            items:
              $ref: '#/components/schemas/Expansion'
          explode: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExtensionUpdate'

      responses:
        200:
          description: |-
            200
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/Extension'

        409:
          description: |-
            ## Conflict

            A 409 indicates that the current version of the resource targeted by the request (with the intention to modify or delete it) is different from that provided in the request.
            In response to this, the client will usually want to request the newest version of the resource to see what has been changed and decide what changes to apply to the newest version.

            A 409 Conflict indicates a concurrent modification and usually occurs on a versioned resource, which requires the client to provide the version of the resource to perform a change.

            The following general error codes can appear in responses with the HTTP status code `409`:

            * `ConcurrentModification`
              The request conflicts with the current state of the involved resource(s).
              Typically, the request attempts to modify a resource that is out of date,
              i.e. that has been modified by another client since the last time it was retrieved.
              The client application should resolve the conflict (with or without involving the end-user)
              before retrying the request.
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

        400:
          description: |-
            ## Bad Request

            A 400 is the most commonly expected error response and indicates that a request failed due to providing bad input.
            Bad input can be a malformed request body, missing required parameters, wrongly typed or malformed parameters or
            a parameter that references another resource that does not exist. Clients need to resolve the problems mentioned
            in the response before re-sending the request.

            The following general error codes can appear in responses with the HTTP status code `400`:

            * `InvalidInput`
              Invalid input has been sent to the service.
              The client application should validate the input according to the constraints described in the error message
              before sending the request.

            * `InvalidOperation`
              The resource(s) involved in the request are not in a valid state for the operation. The client application
              should validate the constraints described in the error message before sending the request.

            * `InvalidField`
              A field has an invalid value.
              Extra fields:
              * `field` - String
                The name of the field.
              * `invalidValue` - *
                The invalid value.
              * `allowedValues` - Array of * - Optional
                A fixed set of allowed values for the field, if any.

            * `RequiredField`
              A required field is missing a value.
              Extra fields:
              * `field` - String
                The name of the field.

            * `DuplicateField`
              A value for a field conflicts with an existing duplicate value.
              Extra fields:
              * `field` - String
                The name of the field.
              * `duplicateValue` - *
                The offending duplicate value.
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

        401:
          description: |-
            ## Unauthorized

            A 401 indicates that the request is not properly authenticated.
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

        403:
          description: |-
            ## Forbidden

            A 403 indicates that the authenticated client is not allowed to perform the request.
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

        404:
          description: |-
            ## Not Found

            A 404 indicates that the addressed resource was not found / does not exist.

            The following general error codes can appear in responses with the HTTP status code `404`:

            * `ResourceNotFound`
              The resource addressed by the request URL does not exist.
          content: {}
        500:
          description: |-
            ## Internal Server Error

            A 500 indicates that a request failed due to a server-side problem that needs to be resolved before subsequent
            requests can succeed. It either indicates a temporary unavailability or permanent server-side problem that needs
            to be reported and resolved.

            The following general error codes can appear in responses with the HTTP status code `500`:

            * `General`
              A server-side problem occurred that is not further specified.
              These errors [should be reported](http://support.commercetools.com/).
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

        502:
          description: |-
            A 502 indicates that a request failed due to a server-side problem caused by platform scaling.
            The client application should retry the request with exponential backoff up to a point where further delay is unacceptable.
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

        503:
          description: |-
            ## Service Unavailable

            The following general error codes can appear in responses with the HTTP status code `503`:

            * `OverCapacity`
              The service is having trouble handling the load. The client application should retry the request with
              exponential backoff up to a point where further delay is unacceptable.

            * `PendingOperation`
              A previous conflicting operation is still pending and needs to finish before the request can succeed.
              The client application should retry the request with exponential backoff up to a point where further delay
              is unaceptable. If these errors persist, [should be reported](http://support.commercetools.com/).
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

    delete:
      tags:
        - "customizeData" 
      security:
        - oauth_2_0:
            - "manage_extensions:{projectKey}"
      operationId: deleteExtensionByID
      parameters:
        - name: version
          in: query
          required: true
          style: form
          schema:
            type: "number"
            format: "double"
          explode: true
        - name: expand
          in: query
          required: false
          style: form
          schema:
            type: "array"
            items:
              $ref: '#/components/schemas/Expansion'
          explode: true
      responses:
        200:
          description: |-
            200
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/Extension'

        409:
          description: |-
            ## Conflict

            A 409 indicates that the current version of the resource targeted by the request (with the intention to modify or delete it) is different from that provided in the request.
            In response to this, the client will usually want to request the newest version of the resource to see what has been changed and decide what changes to apply to the newest version.

            A 409 Conflict indicates a concurrent modification and usually occurs on a versioned resource, which requires the client to provide the version of the resource to perform a change.

            The following general error codes can appear in responses with the HTTP status code `409`:

            * `ConcurrentModification`
              The request conflicts with the current state of the involved resource(s).
              Typically, the request attempts to modify a resource that is out of date,
              i.e. that has been modified by another client since the last time it was retrieved.
              The client application should resolve the conflict (with or without involving the end-user)
              before retrying the request.
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

        400:
          description: |-
            ## Bad Request

            A 400 is the most commonly expected error response and indicates that a request failed due to providing bad input.
            Bad input can be a malformed request body, missing required parameters, wrongly typed or malformed parameters or
            a parameter that references another resource that does not exist. Clients need to resolve the problems mentioned
            in the response before re-sending the request.

            The following general error codes can appear in responses with the HTTP status code `400`:

            * `InvalidInput`
              Invalid input has been sent to the service.
              The client application should validate the input according to the constraints described in the error message
              before sending the request.

            * `InvalidOperation`
              The resource(s) involved in the request are not in a valid state for the operation. The client application
              should validate the constraints described in the error message before sending the request.

            * `InvalidField`
              A field has an invalid value.
              Extra fields:
              * `field` - String
                The name of the field.
              * `invalidValue` - *
                The invalid value.
              * `allowedValues` - Array of * - Optional
                A fixed set of allowed values for the field, if any.

            * `RequiredField`
              A required field is missing a value.
              Extra fields:
              * `field` - String
                The name of the field.

            * `DuplicateField`
              A value for a field conflicts with an existing duplicate value.
              Extra fields:
              * `field` - String
                The name of the field.
              * `duplicateValue` - *
                The offending duplicate value.
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

        401:
          description: |-
            ## Unauthorized

            A 401 indicates that the request is not properly authenticated.
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

        403:
          description: |-
            ## Forbidden

            A 403 indicates that the authenticated client is not allowed to perform the request.
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

        404:
          description: |-
            ## Not Found

            A 404 indicates that the addressed resource was not found / does not exist.

            The following general error codes can appear in responses with the HTTP status code `404`:

            * `ResourceNotFound`
              The resource addressed by the request URL does not exist.
          content: {}
        500:
          description: |-
            ## Internal Server Error

            A 500 indicates that a request failed due to a server-side problem that needs to be resolved before subsequent
            requests can succeed. It either indicates a temporary unavailability or permanent server-side problem that needs
            to be reported and resolved.

            The following general error codes can appear in responses with the HTTP status code `500`:

            * `General`
              A server-side problem occurred that is not further specified.
              These errors [should be reported](http://support.commercetools.com/).
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

        502:
          description: |-
            A 502 indicates that a request failed due to a server-side problem caused by platform scaling.
            The client application should retry the request with exponential backoff up to a point where further delay is unacceptable.
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

        503:
          description: |-
            ## Service Unavailable

            The following general error codes can appear in responses with the HTTP status code `503`:

            * `OverCapacity`
              The service is having trouble handling the load. The client application should retry the request with
              exponential backoff up to a point where further delay is unacceptable.

            * `PendingOperation`
              A previous conflicting operation is still pending and needs to finish before the request can succeed.
              The client application should retry the request with exponential backoff up to a point where further delay
              is unaceptable. If these errors persist, [should be reported](http://support.commercetools.com/).
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
  /{projectKey}/extensions:
    description: |-
      Extend the behavior of an API with your business logic
    parameters:
      - name: projectKey
        in: path
        required: true
        schema:
          type: string
    get:
      tags:
        - "customizeData" 
      security:
        - oauth_2_0:
            - "manage_extensions:{projectKey}"
      operationId: queryExtensions
      parameters:
        - name: expand
          in: query
          required: false
          style: form
          schema:
            type: "array"
            items:
              $ref: '#/components/schemas/Expansion'
          explode: true
        - name: sort
          in: query
          required: false
          style: form
          schema:
            type: "array"
            items:
              $ref: '#/components/schemas/Sort'
          explode: true
        - name: limit
          in: query
          required: false
          style: form
          schema:
            type: "number"
            format: "double"
          explode: true
        - name: offset
          in: query
          required: false
          style: form
          schema:
            type: "number"
            format: "double"
          explode: true
        - name: withTotal
          x-annotation-default: true
          in: query
          required: false
          style: form
          schema:
            type: "boolean"
          explode: true
        - name: where
          in: query
          required: false
          style: form
          schema:
            type: "array"
            items:
              $ref: '#/components/schemas/QueryPredicate'
          explode: true
        - name: /^var[.][a-zA-Z0-9]+$/
          in: query
          required: false
          style: form
          schema:
            type: "array"
            items:
              type: "string"
          explode: true
      responses:
        200:
          description: |-
            200
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ExtensionPagedQueryResponse'

        400:
          description: |-
            ## Bad Request

            A 400 is the most commonly expected error response and indicates that a request failed due to providing bad input.
            Bad input can be a malformed request body, missing required parameters, wrongly typed or malformed parameters or
            a parameter that references another resource that does not exist. Clients need to resolve the problems mentioned
            in the response before re-sending the request.

            The following general error codes can appear in responses with the HTTP status code `400`:

            * `InvalidInput`
              Invalid input has been sent to the service.
              The client application should validate the input according to the constraints described in the error message
              before sending the request.

            * `InvalidOperation`
              The resource(s) involved in the request are not in a valid state for the operation. The client application
              should validate the constraints described in the error message before sending the request.

            * `InvalidField`
              A field has an invalid value.
              Extra fields:
              * `field` - String
                The name of the field.
              * `invalidValue` - *
                The invalid value.
              * `allowedValues` - Array of * - Optional
                A fixed set of allowed values for the field, if any.

            * `RequiredField`
              A required field is missing a value.
              Extra fields:
              * `field` - String
                The name of the field.

            * `DuplicateField`
              A value for a field conflicts with an existing duplicate value.
              Extra fields:
              * `field` - String
                The name of the field.
              * `duplicateValue` - *
                The offending duplicate value.
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

        401:
          description: |-
            ## Unauthorized

            A 401 indicates that the request is not properly authenticated.
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

        403:
          description: |-
            ## Forbidden

            A 403 indicates that the authenticated client is not allowed to perform the request.
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

        404:
          description: |-
            ## Not Found

            A 404 indicates that the addressed resource was not found / does not exist.

            The following general error codes can appear in responses with the HTTP status code `404`:

            * `ResourceNotFound`
              The resource addressed by the request URL does not exist.
          content: {}
        500:
          description: |-
            ## Internal Server Error

            A 500 indicates that a request failed due to a server-side problem that needs to be resolved before subsequent
            requests can succeed. It either indicates a temporary unavailability or permanent server-side problem that needs
            to be reported and resolved.

            The following general error codes can appear in responses with the HTTP status code `500`:

            * `General`
              A server-side problem occurred that is not further specified.
              These errors [should be reported](http://support.commercetools.com/).
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

        502:
          description: |-
            A 502 indicates that a request failed due to a server-side problem caused by platform scaling.
            The client application should retry the request with exponential backoff up to a point where further delay is unacceptable.
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

        503:
          description: |-
            ## Service Unavailable

            The following general error codes can appear in responses with the HTTP status code `503`:

            * `OverCapacity`
              The service is having trouble handling the load. The client application should retry the request with
              exponential backoff up to a point where further delay is unacceptable.

            * `PendingOperation`
              A previous conflicting operation is still pending and needs to finish before the request can succeed.
              The client application should retry the request with exponential backoff up to a point where further delay
              is unaceptable. If these errors persist, [should be reported](http://support.commercetools.com/).
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

    post:
      tags:
        - "customizeData" 
      security:
        - oauth_2_0:
            - "manage_extensions:{projectKey}"
      operationId: createExtensions
      description: |-
        Currently, a maximum of 25 extensions can be created per project.
      parameters:
        - name: expand
          in: query
          required: false
          style: form
          schema:
            type: "array"
            items:
              $ref: '#/components/schemas/Expansion'
          explode: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExtensionDraft'

      responses:
        201:
          description: |-
            201
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/Extension'

        400:
          description: |-
            ## Bad Request

            A 400 is the most commonly expected error response and indicates that a request failed due to providing bad input.
            Bad input can be a malformed request body, missing required parameters, wrongly typed or malformed parameters or
            a parameter that references another resource that does not exist. Clients need to resolve the problems mentioned
            in the response before re-sending the request.

            The following general error codes can appear in responses with the HTTP status code `400`:

            * `InvalidInput`
              Invalid input has been sent to the service.
              The client application should validate the input according to the constraints described in the error message
              before sending the request.

            * `InvalidOperation`
              The resource(s) involved in the request are not in a valid state for the operation. The client application
              should validate the constraints described in the error message before sending the request.

            * `InvalidField`
              A field has an invalid value.
              Extra fields:
              * `field` - String
                The name of the field.
              * `invalidValue` - *
                The invalid value.
              * `allowedValues` - Array of * - Optional
                A fixed set of allowed values for the field, if any.

            * `RequiredField`
              A required field is missing a value.
              Extra fields:
              * `field` - String
                The name of the field.

            * `DuplicateField`
              A value for a field conflicts with an existing duplicate value.
              Extra fields:
              * `field` - String
                The name of the field.
              * `duplicateValue` - *
                The offending duplicate value.
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

        401:
          description: |-
            ## Unauthorized

            A 401 indicates that the request is not properly authenticated.
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

        403:
          description: |-
            ## Forbidden

            A 403 indicates that the authenticated client is not allowed to perform the request.
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

        404:
          description: |-
            ## Not Found

            A 404 indicates that the addressed resource was not found / does not exist.

            The following general error codes can appear in responses with the HTTP status code `404`:

            * `ResourceNotFound`
              The resource addressed by the request URL does not exist.
          content: {}
        500:
          description: |-
            ## Internal Server Error

            A 500 indicates that a request failed due to a server-side problem that needs to be resolved before subsequent
            requests can succeed. It either indicates a temporary unavailability or permanent server-side problem that needs
            to be reported and resolved.

            The following general error codes can appear in responses with the HTTP status code `500`:

            * `General`
              A server-side problem occurred that is not further specified.
              These errors [should be reported](http://support.commercetools.com/).
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

        502:
          description: |-
            A 502 indicates that a request failed due to a server-side problem caused by platform scaling.
            The client application should retry the request with exponential backoff up to a point where further delay is unacceptable.
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

        503:
          description: |-
            ## Service Unavailable

            The following general error codes can appear in responses with the HTTP status code `503`:

            * `OverCapacity`
              The service is having trouble handling the load. The client application should retry the request with
              exponential backoff up to a point where further delay is unacceptable.

            * `PendingOperation`
              A previous conflicting operation is still pending and needs to finish before the request can succeed.
              The client application should retry the request with exponential backoff up to a point where further delay
              is unaceptable. If these errors persist, [should be reported](http://support.commercetools.com/).
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
  /{projectKey}/subscriptions:
    description: |-
      Subscriptions allow you to be notified of new messages or changes via a Message Queue of your choice
    parameters:
      - name: projectKey
        in: path
        required: true
        schema:
          type: string
    get:
      tags:
        - "customizeData"
      security:
        - oauth_2_0:
            - "manage_subscriptions:{projectKey}"
      operationId: querySubscriptions
      parameters:
        - name: expand
          in: query
          required: false
          style: form
          schema:
            type: "array"
            items:
              $ref: '#/components/schemas/Expansion'
          explode: true
        - name: sort
          in: query
          required: false
          style: form
          schema:
            type: "array"
            items:
              $ref: '#/components/schemas/Sort'
          explode: true
        - name: limit
          in: query
          required: false
          style: form
          schema:
            type: "number"
            format: "double"
          explode: true
        - name: offset
          in: query
          required: false
          style: form
          schema:
            type: "number"
            format: "double"
          explode: true
        - name: withTotal
          x-annotation-default: true
          in: query
          required: false
          style: form
          schema:
            type: "boolean"
          explode: true
        - name: where
          in: query
          required: false
          style: form
          schema:
            type: "array"
            items:
              $ref: '#/components/schemas/QueryPredicate'
          explode: true
        - name: /^var[.][a-zA-Z0-9]+$/
          in: query
          required: false
          style: form
          schema:
            type: "array"
            items:
              type: "string"
          explode: true
      responses:
        200:
          description: |-
            200
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/SubscriptionPagedQueryResponse'

        400:
          description: |-
            ## Bad Request

            A 400 is the most commonly expected error response and indicates that a request failed due to providing bad input.
            Bad input can be a malformed request body, missing required parameters, wrongly typed or malformed parameters or
            a parameter that references another resource that does not exist. Clients need to resolve the problems mentioned
            in the response before re-sending the request.

            The following general error codes can appear in responses with the HTTP status code `400`:

            * `InvalidInput`
              Invalid input has been sent to the service.
              The client application should validate the input according to the constraints described in the error message
              before sending the request.

            * `InvalidOperation`
              The resource(s) involved in the request are not in a valid state for the operation. The client application
              should validate the constraints described in the error message before sending the request.

            * `InvalidField`
              A field has an invalid value.
              Extra fields:
              * `field` - String
                The name of the field.
              * `invalidValue` - *
                The invalid value.
              * `allowedValues` - Array of * - Optional
                A fixed set of allowed values for the field, if any.

            * `RequiredField`
              A required field is missing a value.
              Extra fields:
              * `field` - String
                The name of the field.

            * `DuplicateField`
              A value for a field conflicts with an existing duplicate value.
              Extra fields:
              * `field` - String
                The name of the field.
              * `duplicateValue` - *
                The offending duplicate value.
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

        401:
          description: |-
            ## Unauthorized

            A 401 indicates that the request is not properly authenticated.
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

        403:
          description: |-
            ## Forbidden

            A 403 indicates that the authenticated client is not allowed to perform the request.
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

        404:
          description: |-
            ## Not Found

            A 404 indicates that the addressed resource was not found / does not exist.

            The following general error codes can appear in responses with the HTTP status code `404`:

            * `ResourceNotFound`
              The resource addressed by the request URL does not exist.
          content: {}
        500:
          description: |-
            ## Internal Server Error

            A 500 indicates that a request failed due to a server-side problem that needs to be resolved before subsequent
            requests can succeed. It either indicates a temporary unavailability or permanent server-side problem that needs
            to be reported and resolved.

            The following general error codes can appear in responses with the HTTP status code `500`:

            * `General`
              A server-side problem occurred that is not further specified.
              These errors [should be reported](http://support.commercetools.com/).
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

        502:
          description: |-
            A 502 indicates that a request failed due to a server-side problem caused by platform scaling.
            The client application should retry the request with exponential backoff up to a point where further delay is unacceptable.
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

        503:
          description: |-
            ## Service Unavailable

            The following general error codes can appear in responses with the HTTP status code `503`:

            * `OverCapacity`
              The service is having trouble handling the load. The client application should retry the request with
              exponential backoff up to a point where further delay is unacceptable.

            * `PendingOperation`
              A previous conflicting operation is still pending and needs to finish before the request can succeed.
              The client application should retry the request with exponential backoff up to a point where further delay
              is unaceptable. If these errors persist, [should be reported](http://support.commercetools.com/).
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

    post:
      tags:
        - "customizeData"
      security:
        - oauth_2_0:
            - "manage_subscriptions:{projectKey}"
      operationId: createSubscriptions
      description: |-
        The creation of a Subscription is eventually consistent, it may take up to a minute before it becomes fully active.
        In order to test that the destination is correctly configured, a test message will be put into the queue.
        If the message could not be delivered, the subscription will not be created.
        The payload of the test message is a notification of type ResourceCreated for the resourceTypeId subscription.
        Currently, a maximum of 25 subscriptions can be created per project.
      parameters:
        - name: expand
          in: query
          required: false
          style: form
          schema:
            type: "array"
            items:
              $ref: '#/components/schemas/Expansion'
          explode: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionDraft'

      responses:
        201:
          description: |-
            201
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/Subscription'

        400:
          description: |-
            ## Bad Request

            A 400 is the most commonly expected error response and indicates that a request failed due to providing bad input.
            Bad input can be a malformed request body, missing required parameters, wrongly typed or malformed parameters or
            a parameter that references another resource that does not exist. Clients need to resolve the problems mentioned
            in the response before re-sending the request.

            The following general error codes can appear in responses with the HTTP status code `400`:

            * `InvalidInput`
              Invalid input has been sent to the service.
              The client application should validate the input according to the constraints described in the error message
              before sending the request.

            * `InvalidOperation`
              The resource(s) involved in the request are not in a valid state for the operation. The client application
              should validate the constraints described in the error message before sending the request.

            * `InvalidField`
              A field has an invalid value.
              Extra fields:
              * `field` - String
                The name of the field.
              * `invalidValue` - *
                The invalid value.
              * `allowedValues` - Array of * - Optional
                A fixed set of allowed values for the field, if any.

            * `RequiredField`
              A required field is missing a value.
              Extra fields:
              * `field` - String
                The name of the field.

            * `DuplicateField`
              A value for a field conflicts with an existing duplicate value.
              Extra fields:
              * `field` - String
                The name of the field.
              * `duplicateValue` - *
                The offending duplicate value.
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

        401:
          description: |-
            ## Unauthorized

            A 401 indicates that the request is not properly authenticated.
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

        403:
          description: |-
            ## Forbidden

            A 403 indicates that the authenticated client is not allowed to perform the request.
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

        404:
          description: |-
            ## Not Found

            A 404 indicates that the addressed resource was not found / does not exist.

            The following general error codes can appear in responses with the HTTP status code `404`:

            * `ResourceNotFound`
              The resource addressed by the request URL does not exist.
          content: {}
        500:
          description: |-
            ## Internal Server Error

            A 500 indicates that a request failed due to a server-side problem that needs to be resolved before subsequent
            requests can succeed. It either indicates a temporary unavailability or permanent server-side problem that needs
            to be reported and resolved.

            The following general error codes can appear in responses with the HTTP status code `500`:

            * `General`
              A server-side problem occurred that is not further specified.
              These errors [should be reported](http://support.commercetools.com/).
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

        502:
          description: |-
            A 502 indicates that a request failed due to a server-side problem caused by platform scaling.
            The client application should retry the request with exponential backoff up to a point where further delay is unacceptable.
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

        503:
          description: |-
            ## Service Unavailable

            The following general error codes can appear in responses with the HTTP status code `503`:

            * `OverCapacity`
              The service is having trouble handling the load. The client application should retry the request with
              exponential backoff up to a point where further delay is unacceptable.

            * `PendingOperation`
              A previous conflicting operation is still pending and needs to finish before the request can succeed.
              The client application should retry the request with exponential backoff up to a point where further delay
              is unaceptable. If these errors persist, [should be reported](http://support.commercetools.com/).
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
  /{projectKey}/subscriptions/key={key}:
    parameters:
      - name: projectKey
        in: path
        required: true
        schema:
          type: string
      - name: key
        in: path
        required: true
        schema:
          type: string
    get:
      tags:
        - "customizeData"
      security:
        - oauth_2_0:
            - "manage_subscriptions:{projectKey}"
      operationId: getSubscriptionByKey
      description: |-
        Retrieves the representation of a subscription by its key.
      parameters:
        - name: expand
          in: query
          required: false
          style: form
          schema:
            type: "array"
            items:
              $ref: '#/components/schemas/Expansion'
          explode: true
      responses:
        200:
          description: |-
            200
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/Subscription'

        400:
          description: |-
            ## Bad Request

            A 400 is the most commonly expected error response and indicates that a request failed due to providing bad input.
            Bad input can be a malformed request body, missing required parameters, wrongly typed or malformed parameters or
            a parameter that references another resource that does not exist. Clients need to resolve the problems mentioned
            in the response before re-sending the request.

            The following general error codes can appear in responses with the HTTP status code `400`:

            * `InvalidInput`
              Invalid input has been sent to the service.
              The client application should validate the input according to the constraints described in the error message
              before sending the request.

            * `InvalidOperation`
              The resource(s) involved in the request are not in a valid state for the operation. The client application
              should validate the constraints described in the error message before sending the request.

            * `InvalidField`
              A field has an invalid value.
              Extra fields:
              * `field` - String
                The name of the field.
              * `invalidValue` - *
                The invalid value.
              * `allowedValues` - Array of * - Optional
                A fixed set of allowed values for the field, if any.

            * `RequiredField`
              A required field is missing a value.
              Extra fields:
              * `field` - String
                The name of the field.

            * `DuplicateField`
              A value for a field conflicts with an existing duplicate value.
              Extra fields:
              * `field` - String
                The name of the field.
              * `duplicateValue` - *
                The offending duplicate value.
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

        401:
          description: |-
            ## Unauthorized

            A 401 indicates that the request is not properly authenticated.
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

        403:
          description: |-
            ## Forbidden

            A 403 indicates that the authenticated client is not allowed to perform the request.
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

        404:
          description: |-
            ## Not Found

            A 404 indicates that the addressed resource was not found / does not exist.

            The following general error codes can appear in responses with the HTTP status code `404`:

            * `ResourceNotFound`
              The resource addressed by the request URL does not exist.
          content: {}
        500:
          description: |-
            ## Internal Server Error

            A 500 indicates that a request failed due to a server-side problem that needs to be resolved before subsequent
            requests can succeed. It either indicates a temporary unavailability or permanent server-side problem that needs
            to be reported and resolved.

            The following general error codes can appear in responses with the HTTP status code `500`:

            * `General`
              A server-side problem occurred that is not further specified.
              These errors [should be reported](http://support.commercetools.com/).
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

        502:
          description: |-
            A 502 indicates that a request failed due to a server-side problem caused by platform scaling.
            The client application should retry the request with exponential backoff up to a point where further delay is unacceptable.
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

        503:
          description: |-
            ## Service Unavailable

            The following general error codes can appear in responses with the HTTP status code `503`:

            * `OverCapacity`
              The service is having trouble handling the load. The client application should retry the request with
              exponential backoff up to a point where further delay is unacceptable.

            * `PendingOperation`
              A previous conflicting operation is still pending and needs to finish before the request can succeed.
              The client application should retry the request with exponential backoff up to a point where further delay
              is unaceptable. If these errors persist, [should be reported](http://support.commercetools.com/).
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

    post:
      tags:
        - "customizeData"
      security:
        - oauth_2_0:
            - "manage_subscriptions:{projectKey}"
      operationId: updateSubscriptionByKey
      parameters:
        - name: expand
          in: query
          required: false
          style: form
          schema:
            type: "array"
            items:
              $ref: '#/components/schemas/Expansion'
          explode: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionUpdate'

      responses:
        200:
          description: |-
            200
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/Subscription'

        409:
          description: |-
            ## Conflict

            A 409 indicates that the current version of the resource targeted by the request (with the intention to modify or delete it) is different from that provided in the request.
            In response to this, the client will usually want to request the newest version of the resource to see what has been changed and decide what changes to apply to the newest version.

            A 409 Conflict indicates a concurrent modification and usually occurs on a versioned resource, which requires the client to provide the version of the resource to perform a change.

            The following general error codes can appear in responses with the HTTP status code `409`:

            * `ConcurrentModification`
              The request conflicts with the current state of the involved resource(s).
              Typically, the request attempts to modify a resource that is out of date,
              i.e. that has been modified by another client since the last time it was retrieved.
              The client application should resolve the conflict (with or without involving the end-user)
              before retrying the request.
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

        400:
          description: |-
            ## Bad Request

            A 400 is the most commonly expected error response and indicates that a request failed due to providing bad input.
            Bad input can be a malformed request body, missing required parameters, wrongly typed or malformed parameters or
            a parameter that references another resource that does not exist. Clients need to resolve the problems mentioned
            in the response before re-sending the request.

            The following general error codes can appear in responses with the HTTP status code `400`:

            * `InvalidInput`
              Invalid input has been sent to the service.
              The client application should validate the input according to the constraints described in the error message
              before sending the request.

            * `InvalidOperation`
              The resource(s) involved in the request are not in a valid state for the operation. The client application
              should validate the constraints described in the error message before sending the request.

            * `InvalidField`
              A field has an invalid value.
              Extra fields:
              * `field` - String
                The name of the field.
              * `invalidValue` - *
                The invalid value.
              * `allowedValues` - Array of * - Optional
                A fixed set of allowed values for the field, if any.

            * `RequiredField`
              A required field is missing a value.
              Extra fields:
              * `field` - String
                The name of the field.

            * `DuplicateField`
              A value for a field conflicts with an existing duplicate value.
              Extra fields:
              * `field` - String
                The name of the field.
              * `duplicateValue` - *
                The offending duplicate value.
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

        401:
          description: |-
            ## Unauthorized

            A 401 indicates that the request is not properly authenticated.
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

        403:
          description: |-
            ## Forbidden

            A 403 indicates that the authenticated client is not allowed to perform the request.
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

        404:
          description: |-
            ## Not Found

            A 404 indicates that the addressed resource was not found / does not exist.

            The following general error codes can appear in responses with the HTTP status code `404`:

            * `ResourceNotFound`
              The resource addressed by the request URL does not exist.
          content: {}
        500:
          description: |-
            ## Internal Server Error

            A 500 indicates that a request failed due to a server-side problem that needs to be resolved before subsequent
            requests can succeed. It either indicates a temporary unavailability or permanent server-side problem that needs
            to be reported and resolved.

            The following general error codes can appear in responses with the HTTP status code `500`:

            * `General`
              A server-side problem occurred that is not further specified.
              These errors [should be reported](http://support.commercetools.com/).
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

        502:
          description: |-
            A 502 indicates that a request failed due to a server-side problem caused by platform scaling.
            The client application should retry the request with exponential backoff up to a point where further delay is unacceptable.
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

        503:
          description: |-
            ## Service Unavailable

            The following general error codes can appear in responses with the HTTP status code `503`:

            * `OverCapacity`
              The service is having trouble handling the load. The client application should retry the request with
              exponential backoff up to a point where further delay is unacceptable.

            * `PendingOperation`
              A previous conflicting operation is still pending and needs to finish before the request can succeed.
              The client application should retry the request with exponential backoff up to a point where further delay
              is unaceptable. If these errors persist, [should be reported](http://support.commercetools.com/).
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

    delete:
      tags:
        - "customizeData"
      security:
        - oauth_2_0:
            - "manage_subscriptions:{projectKey}"
      operationId: deleteSubscriptionByKey
      parameters:
        - name: version
          in: query
          required: true
          style: form
          schema:
            type: "number"
            format: "double"
          explode: true
        - name: expand
          in: query
          required: false
          style: form
          schema:
            type: "array"
            items:
              $ref: '#/components/schemas/Expansion'
          explode: true
      responses:
        200:
          description: |-
            200
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/Subscription'

        409:
          description: |-
            ## Conflict

            A 409 indicates that the current version of the resource targeted by the request (with the intention to modify or delete it) is different from that provided in the request.
            In response to this, the client will usually want to request the newest version of the resource to see what has been changed and decide what changes to apply to the newest version.

            A 409 Conflict indicates a concurrent modification and usually occurs on a versioned resource, which requires the client to provide the version of the resource to perform a change.

            The following general error codes can appear in responses with the HTTP status code `409`:

            * `ConcurrentModification`
              The request conflicts with the current state of the involved resource(s).
              Typically, the request attempts to modify a resource that is out of date,
              i.e. that has been modified by another client since the last time it was retrieved.
              The client application should resolve the conflict (with or without involving the end-user)
              before retrying the request.
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

        400:
          description: |-
            ## Bad Request

            A 400 is the most commonly expected error response and indicates that a request failed due to providing bad input.
            Bad input can be a malformed request body, missing required parameters, wrongly typed or malformed parameters or
            a parameter that references another resource that does not exist. Clients need to resolve the problems mentioned
            in the response before re-sending the request.

            The following general error codes can appear in responses with the HTTP status code `400`:

            * `InvalidInput`
              Invalid input has been sent to the service.
              The client application should validate the input according to the constraints described in the error message
              before sending the request.

            * `InvalidOperation`
              The resource(s) involved in the request are not in a valid state for the operation. The client application
              should validate the constraints described in the error message before sending the request.

            * `InvalidField`
              A field has an invalid value.
              Extra fields:
              * `field` - String
                The name of the field.
              * `invalidValue` - *
                The invalid value.
              * `allowedValues` - Array of * - Optional
                A fixed set of allowed values for the field, if any.

            * `RequiredField`
              A required field is missing a value.
              Extra fields:
              * `field` - String
                The name of the field.

            * `DuplicateField`
              A value for a field conflicts with an existing duplicate value.
              Extra fields:
              * `field` - String
                The name of the field.
              * `duplicateValue` - *
                The offending duplicate value.
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

        401:
          description: |-
            ## Unauthorized

            A 401 indicates that the request is not properly authenticated.
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

        403:
          description: |-
            ## Forbidden

            A 403 indicates that the authenticated client is not allowed to perform the request.
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

        404:
          description: |-
            ## Not Found

            A 404 indicates that the addressed resource was not found / does not exist.

            The following general error codes can appear in responses with the HTTP status code `404`:

            * `ResourceNotFound`
              The resource addressed by the request URL does not exist.
          content: {}
        500:
          description: |-
            ## Internal Server Error

            A 500 indicates that a request failed due to a server-side problem that needs to be resolved before subsequent
            requests can succeed. It either indicates a temporary unavailability or permanent server-side problem that needs
            to be reported and resolved.

            The following general error codes can appear in responses with the HTTP status code `500`:

            * `General`
              A server-side problem occurred that is not further specified.
              These errors [should be reported](http://support.commercetools.com/).
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

        502:
          description: |-
            A 502 indicates that a request failed due to a server-side problem caused by platform scaling.
            The client application should retry the request with exponential backoff up to a point where further delay is unacceptable.
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

        503:
          description: |-
            ## Service Unavailable

            The following general error codes can appear in responses with the HTTP status code `503`:

            * `OverCapacity`
              The service is having trouble handling the load. The client application should retry the request with
              exponential backoff up to a point where further delay is unacceptable.

            * `PendingOperation`
              A previous conflicting operation is still pending and needs to finish before the request can succeed.
              The client application should retry the request with exponential backoff up to a point where further delay
              is unaceptable. If these errors persist, [should be reported](http://support.commercetools.com/).
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
  /{projectKey}/subscriptions/{id}:
    parameters:
      - name: projectKey
        in: path
        required: true
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: string
    get:
      tags:
        - "customizeData"
      security:
        - oauth_2_0:
            - "manage_subscriptions:{projectKey}"
      operationId: getSubscriptionByID
      description: |-
        Retrieves the representation of a subscription by its id.
      parameters:
        - name: expand
          in: query
          required: false
          style: form
          schema:
            type: "array"
            items:
              $ref: '#/components/schemas/Expansion'
          explode: true
      responses:
        200:
          description: |-
            200
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/Subscription'

        400:
          description: |-
            ## Bad Request

            A 400 is the most commonly expected error response and indicates that a request failed due to providing bad input.
            Bad input can be a malformed request body, missing required parameters, wrongly typed or malformed parameters or
            a parameter that references another resource that does not exist. Clients need to resolve the problems mentioned
            in the response before re-sending the request.

            The following general error codes can appear in responses with the HTTP status code `400`:

            * `InvalidInput`
              Invalid input has been sent to the service.
              The client application should validate the input according to the constraints described in the error message
              before sending the request.

            * `InvalidOperation`
              The resource(s) involved in the request are not in a valid state for the operation. The client application
              should validate the constraints described in the error message before sending the request.

            * `InvalidField`
              A field has an invalid value.
              Extra fields:
              * `field` - String
                The name of the field.
              * `invalidValue` - *
                The invalid value.
              * `allowedValues` - Array of * - Optional
                A fixed set of allowed values for the field, if any.

            * `RequiredField`
              A required field is missing a value.
              Extra fields:
              * `field` - String
                The name of the field.

            * `DuplicateField`
              A value for a field conflicts with an existing duplicate value.
              Extra fields:
              * `field` - String
                The name of the field.
              * `duplicateValue` - *
                The offending duplicate value.
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

        401:
          description: |-
            ## Unauthorized

            A 401 indicates that the request is not properly authenticated.
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

        403:
          description: |-
            ## Forbidden

            A 403 indicates that the authenticated client is not allowed to perform the request.
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

        404:
          description: |-
            ## Not Found

            A 404 indicates that the addressed resource was not found / does not exist.

            The following general error codes can appear in responses with the HTTP status code `404`:

            * `ResourceNotFound`
              The resource addressed by the request URL does not exist.
          content: {}
        500:
          description: |-
            ## Internal Server Error

            A 500 indicates that a request failed due to a server-side problem that needs to be resolved before subsequent
            requests can succeed. It either indicates a temporary unavailability or permanent server-side problem that needs
            to be reported and resolved.

            The following general error codes can appear in responses with the HTTP status code `500`:

            * `General`
              A server-side problem occurred that is not further specified.
              These errors [should be reported](http://support.commercetools.com/).
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

        502:
          description: |-
            A 502 indicates that a request failed due to a server-side problem caused by platform scaling.
            The client application should retry the request with exponential backoff up to a point where further delay is unacceptable.
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

        503:
          description: |-
            ## Service Unavailable

            The following general error codes can appear in responses with the HTTP status code `503`:

            * `OverCapacity`
              The service is having trouble handling the load. The client application should retry the request with
              exponential backoff up to a point where further delay is unacceptable.

            * `PendingOperation`
              A previous conflicting operation is still pending and needs to finish before the request can succeed.
              The client application should retry the request with exponential backoff up to a point where further delay
              is unaceptable. If these errors persist, [should be reported](http://support.commercetools.com/).
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

    post:
      tags:
        - "customizeData"
      security:
        - oauth_2_0:
            - "manage_subscriptions:{projectKey}"
      operationId: updateSubscriptionByID
      parameters:
        - name: expand
          in: query
          required: false
          style: form
          schema:
            type: "array"
            items:
              $ref: '#/components/schemas/Expansion'
          explode: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionUpdate'

      responses:
        200:
          description: |-
            200
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/Subscription'

        409:
          description: |-
            ## Conflict

            A 409 indicates that the current version of the resource targeted by the request (with the intention to modify or delete it) is different from that provided in the request.
            In response to this, the client will usually want to request the newest version of the resource to see what has been changed and decide what changes to apply to the newest version.

            A 409 Conflict indicates a concurrent modification and usually occurs on a versioned resource, which requires the client to provide the version of the resource to perform a change.

            The following general error codes can appear in responses with the HTTP status code `409`:

            * `ConcurrentModification`
              The request conflicts with the current state of the involved resource(s).
              Typically, the request attempts to modify a resource that is out of date,
              i.e. that has been modified by another client since the last time it was retrieved.
              The client application should resolve the conflict (with or without involving the end-user)
              before retrying the request.
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

        400:
          description: |-
            ## Bad Request

            A 400 is the most commonly expected error response and indicates that a request failed due to providing bad input.
            Bad input can be a malformed request body, missing required parameters, wrongly typed or malformed parameters or
            a parameter that references another resource that does not exist. Clients need to resolve the problems mentioned
            in the response before re-sending the request.

            The following general error codes can appear in responses with the HTTP status code `400`:

            * `InvalidInput`
              Invalid input has been sent to the service.
              The client application should validate the input according to the constraints described in the error message
              before sending the request.

            * `InvalidOperation`
              The resource(s) involved in the request are not in a valid state for the operation. The client application
              should validate the constraints described in the error message before sending the request.

            * `InvalidField`
              A field has an invalid value.
              Extra fields:
              * `field` - String
                The name of the field.
              * `invalidValue` - *
                The invalid value.
              * `allowedValues` - Array of * - Optional
                A fixed set of allowed values for the field, if any.

            * `RequiredField`
              A required field is missing a value.
              Extra fields:
              * `field` - String
                The name of the field.

            * `DuplicateField`
              A value for a field conflicts with an existing duplicate value.
              Extra fields:
              * `field` - String
                The name of the field.
              * `duplicateValue` - *
                The offending duplicate value.
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

        401:
          description: |-
            ## Unauthorized

            A 401 indicates that the request is not properly authenticated.
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

        403:
          description: |-
            ## Forbidden

            A 403 indicates that the authenticated client is not allowed to perform the request.
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

        404:
          description: |-
            ## Not Found

            A 404 indicates that the addressed resource was not found / does not exist.

            The following general error codes can appear in responses with the HTTP status code `404`:

            * `ResourceNotFound`
              The resource addressed by the request URL does not exist.
          content: {}
        500:
          description: |-
            ## Internal Server Error

            A 500 indicates that a request failed due to a server-side problem that needs to be resolved before subsequent
            requests can succeed. It either indicates a temporary unavailability or permanent server-side problem that needs
            to be reported and resolved.

            The following general error codes can appear in responses with the HTTP status code `500`:

            * `General`
              A server-side problem occurred that is not further specified.
              These errors [should be reported](http://support.commercetools.com/).
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

        502:
          description: |-
            A 502 indicates that a request failed due to a server-side problem caused by platform scaling.
            The client application should retry the request with exponential backoff up to a point where further delay is unacceptable.
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

        503:
          description: |-
            ## Service Unavailable

            The following general error codes can appear in responses with the HTTP status code `503`:

            * `OverCapacity`
              The service is having trouble handling the load. The client application should retry the request with
              exponential backoff up to a point where further delay is unacceptable.

            * `PendingOperation`
              A previous conflicting operation is still pending and needs to finish before the request can succeed.
              The client application should retry the request with exponential backoff up to a point where further delay
              is unaceptable. If these errors persist, [should be reported](http://support.commercetools.com/).
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

    delete:
      tags:
        - "customizeData"
      security:
        - oauth_2_0:
            - "manage_subscriptions:{projectKey}"
      operationId: deleteSubscriptionByID
      parameters:
        - name: version
          in: query
          required: true
          style: form
          schema:
            type: "number"
            format: "double"
          explode: true
        - name: expand
          in: query
          required: false
          style: form
          schema:
            type: "array"
            items:
              $ref: '#/components/schemas/Expansion'
          explode: true
      responses:
        200:
          description: |-
            200
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/Subscription'

        409:
          description: |-
            ## Conflict

            A 409 indicates that the current version of the resource targeted by the request (with the intention to modify or delete it) is different from that provided in the request.
            In response to this, the client will usually want to request the newest version of the resource to see what has been changed and decide what changes to apply to the newest version.

            A 409 Conflict indicates a concurrent modification and usually occurs on a versioned resource, which requires the client to provide the version of the resource to perform a change.

            The following general error codes can appear in responses with the HTTP status code `409`:

            * `ConcurrentModification`
              The request conflicts with the current state of the involved resource(s).
              Typically, the request attempts to modify a resource that is out of date,
              i.e. that has been modified by another client since the last time it was retrieved.
              The client application should resolve the conflict (with or without involving the end-user)
              before retrying the request.
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

        400:
          description: |-
            ## Bad Request

            A 400 is the most commonly expected error response and indicates that a request failed due to providing bad input.
            Bad input can be a malformed request body, missing required parameters, wrongly typed or malformed parameters or
            a parameter that references another resource that does not exist. Clients need to resolve the problems mentioned
            in the response before re-sending the request.

            The following general error codes can appear in responses with the HTTP status code `400`:

            * `InvalidInput`
              Invalid input has been sent to the service.
              The client application should validate the input according to the constraints described in the error message
              before sending the request.

            * `InvalidOperation`
              The resource(s) involved in the request are not in a valid state for the operation. The client application
              should validate the constraints described in the error message before sending the request.

            * `InvalidField`
              A field has an invalid value.
              Extra fields:
              * `field` - String
                The name of the field.
              * `invalidValue` - *
                The invalid value.
              * `allowedValues` - Array of * - Optional
                A fixed set of allowed values for the field, if any.

            * `RequiredField`
              A required field is missing a value.
              Extra fields:
              * `field` - String
                The name of the field.

            * `DuplicateField`
              A value for a field conflicts with an existing duplicate value.
              Extra fields:
              * `field` - String
                The name of the field.
              * `duplicateValue` - *
                The offending duplicate value.
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

        401:
          description: |-
            ## Unauthorized

            A 401 indicates that the request is not properly authenticated.
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

        403:
          description: |-
            ## Forbidden

            A 403 indicates that the authenticated client is not allowed to perform the request.
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

        404:
          description: |-
            ## Not Found

            A 404 indicates that the addressed resource was not found / does not exist.

            The following general error codes can appear in responses with the HTTP status code `404`:

            * `ResourceNotFound`
              The resource addressed by the request URL does not exist.
          content: {}
        500:
          description: |-
            ## Internal Server Error

            A 500 indicates that a request failed due to a server-side problem that needs to be resolved before subsequent
            requests can succeed. It either indicates a temporary unavailability or permanent server-side problem that needs
            to be reported and resolved.

            The following general error codes can appear in responses with the HTTP status code `500`:

            * `General`
              A server-side problem occurred that is not further specified.
              These errors [should be reported](http://support.commercetools.com/).
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

        502:
          description: |-
            A 502 indicates that a request failed due to a server-side problem caused by platform scaling.
            The client application should retry the request with exponential backoff up to a point where further delay is unacceptable.
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

        503:
          description: |-
            ## Service Unavailable

            The following general error codes can appear in responses with the HTTP status code `503`:

            * `OverCapacity`
              The service is having trouble handling the load. The client application should retry the request with
              exponential backoff up to a point where further delay is unacceptable.

            * `PendingOperation`
              A previous conflicting operation is still pending and needs to finish before the request can succeed.
              The client application should retry the request with exponential backoff up to a point where further delay
              is unaceptable. If these errors persist, [should be reported](http://support.commercetools.com/).
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
  /{projectKey}/messages/{id}:
    parameters:
      - name: projectKey
        in: path
        required: true
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: string
    get:
      tags:
        - "customizeData" 
      security:
        - oauth_2_0:
            - "view_messages:{projectKey}"
      operationId: getMessageByID
      parameters:
        - name: expand
          in: query
          required: false
          style: form
          schema:
            type: "array"
            items:
              $ref: '#/components/schemas/Expansion'
          explode: true
      responses:
        200:
          description: |-
            200
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/Message'

        400:
          description: |-
            ## Bad Request

            A 400 is the most commonly expected error response and indicates that a request failed due to providing bad input.
            Bad input can be a malformed request body, missing required parameters, wrongly typed or malformed parameters or
            a parameter that references another resource that does not exist. Clients need to resolve the problems mentioned
            in the response before re-sending the request.

            The following general error codes can appear in responses with the HTTP status code `400`:

            * `InvalidInput`
              Invalid input has been sent to the service.
              The client application should validate the input according to the constraints described in the error message
              before sending the request.

            * `InvalidOperation`
              The resource(s) involved in the request are not in a valid state for the operation. The client application
              should validate the constraints described in the error message before sending the request.

            * `InvalidField`
              A field has an invalid value.
              Extra fields:
              * `field` - String
                The name of the field.
              * `invalidValue` - *
                The invalid value.
              * `allowedValues` - Array of * - Optional
                A fixed set of allowed values for the field, if any.

            * `RequiredField`
              A required field is missing a value.
              Extra fields:
              * `field` - String
                The name of the field.

            * `DuplicateField`
              A value for a field conflicts with an existing duplicate value.
              Extra fields:
              * `field` - String
                The name of the field.
              * `duplicateValue` - *
                The offending duplicate value.
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

        401:
          description: |-
            ## Unauthorized

            A 401 indicates that the request is not properly authenticated.
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

        403:
          description: |-
            ## Forbidden

            A 403 indicates that the authenticated client is not allowed to perform the request.
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

        404:
          description: |-
            ## Not Found

            A 404 indicates that the addressed resource was not found / does not exist.

            The following general error codes can appear in responses with the HTTP status code `404`:

            * `ResourceNotFound`
              The resource addressed by the request URL does not exist.
          content: {}
        500:
          description: |-
            ## Internal Server Error

            A 500 indicates that a request failed due to a server-side problem that needs to be resolved before subsequent
            requests can succeed. It either indicates a temporary unavailability or permanent server-side problem that needs
            to be reported and resolved.

            The following general error codes can appear in responses with the HTTP status code `500`:

            * `General`
              A server-side problem occurred that is not further specified.
              These errors [should be reported](http://support.commercetools.com/).
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

        502:
          description: |-
            A 502 indicates that a request failed due to a server-side problem caused by platform scaling.
            The client application should retry the request with exponential backoff up to a point where further delay is unacceptable.
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

        503:
          description: |-
            ## Service Unavailable

            The following general error codes can appear in responses with the HTTP status code `503`:

            * `OverCapacity`
              The service is having trouble handling the load. The client application should retry the request with
              exponential backoff up to a point where further delay is unacceptable.

            * `PendingOperation`
              A previous conflicting operation is still pending and needs to finish before the request can succeed.
              The client application should retry the request with exponential backoff up to a point where further delay
              is unaceptable. If these errors persist, [should be reported](http://support.commercetools.com/).
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
  /{projectKey}/messages:
    description: |-
      A message represents a change or an action performed on a resource (like an Order or a Product).
    parameters:
      - name: projectKey
        in: path
        required: true
        schema:
          type: string
    get:
      tags:
        - "customizeData"
      security:
        - oauth_2_0:
            - "view_messages:{projectKey}"
      operationId: queryMessages
      parameters:
        - name: expand
          in: query
          required: false
          style: form
          schema:
            type: "array"
            items:
              $ref: '#/components/schemas/Expansion'
          explode: true
        - name: sort
          in: query
          required: false
          style: form
          schema:
            type: "array"
            items:
              $ref: '#/components/schemas/Sort'
          explode: true
        - name: limit
          in: query
          required: false
          style: form
          schema:
            type: "number"
            format: "double"
          explode: true
        - name: offset
          in: query
          required: false
          style: form
          schema:
            type: "number"
            format: "double"
          explode: true
        - name: withTotal
          x-annotation-default: true
          in: query
          required: false
          style: form
          schema:
            type: "boolean"
          explode: true
        - name: where
          in: query
          required: false
          style: form
          schema:
            type: "array"
            items:
              $ref: '#/components/schemas/QueryPredicate'
          explode: true
        - name: /^var[.][a-zA-Z0-9]+$/
          in: query
          required: false
          style: form
          schema:
            type: "array"
            items:
              type: "string"
          explode: true
      responses:
        200:
          description: |-
            200
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/MessagePagedQueryResponse'

        400:
          description: |-
            ## Bad Request

            A 400 is the most commonly expected error response and indicates that a request failed due to providing bad input.
            Bad input can be a malformed request body, missing required parameters, wrongly typed or malformed parameters or
            a parameter that references another resource that does not exist. Clients need to resolve the problems mentioned
            in the response before re-sending the request.

            The following general error codes can appear in responses with the HTTP status code `400`:

            * `InvalidInput`
              Invalid input has been sent to the service.
              The client application should validate the input according to the constraints described in the error message
              before sending the request.

            * `InvalidOperation`
              The resource(s) involved in the request are not in a valid state for the operation. The client application
              should validate the constraints described in the error message before sending the request.

            * `InvalidField`
              A field has an invalid value.
              Extra fields:
              * `field` - String
                The name of the field.
              * `invalidValue` - *
                The invalid value.
              * `allowedValues` - Array of * - Optional
                A fixed set of allowed values for the field, if any.

            * `RequiredField`
              A required field is missing a value.
              Extra fields:
              * `field` - String
                The name of the field.

            * `DuplicateField`
              A value for a field conflicts with an existing duplicate value.
              Extra fields:
              * `field` - String
                The name of the field.
              * `duplicateValue` - *
                The offending duplicate value.
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

        401:
          description: |-
            ## Unauthorized

            A 401 indicates that the request is not properly authenticated.
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

        403:
          description: |-
            ## Forbidden

            A 403 indicates that the authenticated client is not allowed to perform the request.
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

        404:
          description: |-
            ## Not Found

            A 404 indicates that the addressed resource was not found / does not exist.

            The following general error codes can appear in responses with the HTTP status code `404`:

            * `ResourceNotFound`
              The resource addressed by the request URL does not exist.
          content: {}
        500:
          description: |-
            ## Internal Server Error

            A 500 indicates that a request failed due to a server-side problem that needs to be resolved before subsequent
            requests can succeed. It either indicates a temporary unavailability or permanent server-side problem that needs
            to be reported and resolved.

            The following general error codes can appear in responses with the HTTP status code `500`:

            * `General`
              A server-side problem occurred that is not further specified.
              These errors [should be reported](http://support.commercetools.com/).
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

        502:
          description: |-
            A 502 indicates that a request failed due to a server-side problem caused by platform scaling.
            The client application should retry the request with exponential backoff up to a point where further delay is unacceptable.
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

        503:
          description: |-
            ## Service Unavailable

            The following general error codes can appear in responses with the HTTP status code `503`:

            * `OverCapacity`
              The service is having trouble handling the load. The client application should retry the request with
              exponential backoff up to a point where further delay is unacceptable.

            * `PendingOperation`
              A previous conflicting operation is still pending and needs to finish before the request can succeed.
              The client application should retry the request with exponential backoff up to a point where further delay
              is unaceptable. If these errors persist, [should be reported](http://support.commercetools.com/).
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'


components:
  securitySchemes:
    oauth_2_0:
      type: oauth2
      description: |
        HTTP API authorization uses [OAuth2](http://tools.ietf.org/html/rfc6750).

        Clients must obtain an access token from the auth service using one of
        the authorization flows described below, before they are able to make authorized requests
        to other commercetools services. On successful completion of an authorization flow,
        a client will be given an `access_token`, which they need to include in requests
        to authorized service endpoints via the HTTP `Authorization` header like this:

      flows:
          clientCredentials:
            tokenUrl: " "
            scopes:
              "manage_project:{projectKey}": ""
              "manage_products:{projectKey}": ""
              "view_products:{projectKey}": ""
              "manage_orders:{projectKey}": ""
              "manage_orders:{projectKey}:{storeKey}": ""
              "view_orders:{projectKey}": ""
              "view_orders:{projectKey}:{storeKey}": ""
              "manage_customers:{projectKey}": ""
              "view_customers:{projectKey}": ""
              "manage_payments:{projectKey}": ""
              "view_payments:{projectKey}": ""
              "manage_subscriptions:{projectKey}": ""
              "manage_extensions:{projectKey}": ""
              "manage_types:{projectKey}": ""
              "view_types:{projectKey}": ""
              "view_shopping_lists:{projectKey}": ""
              "manage_shopping_lists:{projectKey}": ""
              "manage_my_orders:{projectKey}": ""
              "manage_my_orders:{projectKey}:{storeKey}": ""
              "manage_my_profile:{projectKey}": ""
              "view_project_settings:{projectKey}": ""
              "view_published_products:{projectKey}": ""
              "manage_cart_discounts:{projectKey}": ""
              "view_cart_discounts:{projectKey}": ""
              "manage_customer_groups:{projectKey}": ""
              "view_customer_groups:{projectKey}": ""
              "view_shipping_methods:{projectKey}": ""
              "manage_shipping_methods:{projectKey}": ""
              "manage_tax_categories:{projectKey}": ""
              "view_tax_categories:{projectKey}": ""
              "manage_categories:{projectKey}": ""
              "view_categories:{projectKey}": ""
    bearerAuth:
      type: http
      scheme: bearer
  schemas:
    PagedQueryResponse:
      type: "object"
      properties:
        limit:
          type: "integer"
          format: "int64"
        count:
          type: "integer"
          format: "int64"
        total:
          type: "integer"
          format: "int64"
        offset:
          type: "integer"
          format: "int64"
        results:
          type: "array"
          items:
            $ref: '#/components/schemas/BaseResource'
        meta:
          type: "string"
          additionalProperties: true
    Update:
      type: "object"
      properties:
        version:
          type: "integer"
          format: "int64"
        actions:
          type: "array"
          items:
            $ref: '#/components/schemas/UpdateAction'
    UpdateAction:
      type: "object"
      properties:
        action:
          type: "string"
    ApiClient:
      type: "object"
      properties:
        id:
          type: "string"
        name:
          type: "string"
        scope:
          type: "string"
        secret:
          type: "string"
        lastUsedAt:
          type: "string"
          format: "date-only"
        deleteAt:
          type: "string"
          format: "datetime"
        createdAt:
          type: "string"
          format: "datetime"
    ApiClientDraft:
      type: "object"
      properties:
        name:
          type: "string"
        scope:
          type: "string"
        deleteDaysAfterCreation:
          type: "integer"
          format: "int64"
    ApiClientPagedQueryResponse:
      type: "object"
      properties:
        limit:
          type: "integer"
          format: "int64"
        offset:
          type: "integer"
          format: "int64"
        count:
          type: "integer"
          format: "int64"
        total:
          type: "integer"
          format: "int64"
        results:
          type: "array"
          items:
            $ref: '#/components/schemas/ApiClient'
    CartDiscount:
      allOf:
      - $ref: '#/components/schemas/BaseResource'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          name:
            $ref: '#/components/schemas/LocalizedString'
          key:
            type: "string"
          description:
            $ref: '#/components/schemas/LocalizedString'
          value:
            $ref: '#/components/schemas/CartDiscountValue'
          cartPredicate:
            type: "string"
          target:
            $ref: '#/components/schemas/CartDiscountTarget'
          sortOrder:
            type: "string"
          isActive:
            type: "boolean"
          validFrom:
            type: "string"
            format: "datetime"
          validUntil:
            type: "string"
            format: "datetime"
          requiresDiscountCode:
            type: "boolean"
          references:
            type: "array"
            items:
              $ref: '#/components/schemas/Reference'
          stackingMode:
            $ref: '#/components/schemas/StackingMode'
          custom:
            $ref: '#/components/schemas/CustomFields'
    CartDiscountCustomLineItemsTarget:
      allOf:
      - $ref: '#/components/schemas/CartDiscountTarget'
      - type: "object"
        properties:
          type:
            type: "string"
          predicate:
            type: "string"
    CartDiscountDraft:
      type: "object"
      properties:
        name:
          $ref: '#/components/schemas/LocalizedString'
        key:
          type: "string"
        description:
          $ref: '#/components/schemas/LocalizedString'
        value:
          $ref: '#/components/schemas/CartDiscountValueDraft'
        cartPredicate:
          type: "string"
        target:
          $ref: '#/components/schemas/CartDiscountTarget'
        sortOrder:
          type: "string"
        isActive:
          type: "boolean"
        validFrom:
          type: "string"
          format: "datetime"
        validUntil:
          type: "string"
          format: "datetime"
        requiresDiscountCode:
          type: "boolean"
        stackingMode:
          $ref: '#/components/schemas/StackingMode'
        custom:
          $ref: '#/components/schemas/CustomFieldsDraft'
    CartDiscountLineItemsTarget:
      allOf:
      - $ref: '#/components/schemas/CartDiscountTarget'
      - type: "object"
        properties:
          type:
            type: "string"
          predicate:
            type: "string"
    CartDiscountPagedQueryResponse:
      type: "object"
      properties:
        limit:
          type: "integer"
          format: "int64"
        count:
          type: "integer"
          format: "int64"
        total:
          type: "integer"
          format: "int64"
        offset:
          type: "integer"
          format: "int64"
        results:
          type: "array"
          items:
            $ref: '#/components/schemas/CartDiscount'
    CartDiscountReference:
      allOf:
      - $ref: '#/components/schemas/Reference'
      - type: "object"
        properties:
          typeId:
            $ref: '#/components/schemas/ReferenceTypeId'
          id:
            type: "string"
          obj:
            $ref: '#/components/schemas/CartDiscount'
    CartDiscountResourceIdentifier:
      allOf:
      - $ref: '#/components/schemas/ResourceIdentifier'
      - type: "object"
        properties:
          typeId:
            $ref: '#/components/schemas/ReferenceTypeId'
          id:
            type: "string"
          key:
            type: "string"
    CartDiscountShippingCostTarget:
      allOf:
      - $ref: '#/components/schemas/CartDiscountTarget'
      - type: "object"
        properties:
          type:
            type: "string"
    CartDiscountTarget:
      type: "object"
      discriminator:
        propertyName: type
        mapping:
          customLineItems: '#/components/schemas/CartDiscountCustomLineItemsTarget'
          lineItems: '#/components/schemas/CartDiscountLineItemsTarget'
          shipping: '#/components/schemas/CartDiscountShippingCostTarget'
          multiBuyCustomLineItems: '#/components/schemas/MultiBuyCustomLineItemsTarget'
          multiBuyLineItems: '#/components/schemas/MultiBuyLineItemsTarget'
      properties:
        type:
          type: "string"
    CartDiscountUpdate:
      type: "object"
      properties:
        version:
          type: "integer"
          format: "int64"
        actions:
          type: "array"
          items:
            $ref: '#/components/schemas/CartDiscountUpdateAction'
    CartDiscountUpdateAction:
      type: "object"
      discriminator:
        propertyName: action
        mapping:
          changeCartPredicate: '#/components/schemas/CartDiscountChangeCartPredicateAction'
          changeIsActive: '#/components/schemas/CartDiscountChangeIsActiveAction'
          changeName: '#/components/schemas/CartDiscountChangeNameAction'
          changeRequiresDiscountCode: '#/components/schemas/CartDiscountChangeRequiresDiscountCodeAction'
          changeSortOrder: '#/components/schemas/CartDiscountChangeSortOrderAction'
          changeStackingMode: '#/components/schemas/CartDiscountChangeStackingModeAction'
          changeTarget: '#/components/schemas/CartDiscountChangeTargetAction'
          changeValue: '#/components/schemas/CartDiscountChangeValueAction'
          setCustomField: '#/components/schemas/CartDiscountSetCustomFieldAction'
          setCustomType: '#/components/schemas/CartDiscountSetCustomTypeAction'
          setDescription: '#/components/schemas/CartDiscountSetDescriptionAction'
          setKey: '#/components/schemas/CartDiscountSetKeyAction'
          setValidFrom: '#/components/schemas/CartDiscountSetValidFromAction'
          setValidFromAndUntil: '#/components/schemas/CartDiscountSetValidFromAndUntilAction'
          setValidUntil: '#/components/schemas/CartDiscountSetValidUntilAction'
      properties:
        action:
          type: "string"
    CartDiscountValue:
      type: "object"
      discriminator:
        propertyName: type
        mapping:
          absolute: '#/components/schemas/CartDiscountValueAbsolute'
          fixed: '#/components/schemas/CartDiscountValueFixed'
          giftLineItem: '#/components/schemas/CartDiscountValueGiftLineItem'
          relative: '#/components/schemas/CartDiscountValueRelative'
      properties:
        type:
          type: "string"
    CartDiscountValueAbsolute:
      allOf:
      - $ref: '#/components/schemas/CartDiscountValue'
      - type: "object"
        properties:
          type:
            type: "string"
          money:
            type: "array"
            items:
              $ref: '#/components/schemas/TypedMoney'
    CartDiscountValueAbsoluteDraft:
      allOf:
      - $ref: '#/components/schemas/CartDiscountValueDraft'
      - type: "object"
        properties:
          type:
            type: "string"
          money:
            type: "array"
            items:
              $ref: '#/components/schemas/Money'
    CartDiscountValueDraft:
      type: "object"
      discriminator:
        propertyName: type
        mapping:
          absolute: '#/components/schemas/CartDiscountValueAbsoluteDraft'
          fixed: '#/components/schemas/CartDiscountValueFixedDraft'
          giftLineItem: '#/components/schemas/CartDiscountValueGiftLineItemDraft'
          relative: '#/components/schemas/CartDiscountValueRelativeDraft'
      properties:
        type:
          type: "string"
    CartDiscountValueFixed:
      allOf:
      - $ref: '#/components/schemas/CartDiscountValue'
      - type: "object"
        properties:
          type:
            type: "string"
          money:
            type: "array"
            items:
              $ref: '#/components/schemas/TypedMoney'
    CartDiscountValueFixedDraft:
      allOf:
      - $ref: '#/components/schemas/CartDiscountValueDraft'
      - type: "object"
        properties:
          type:
            type: "string"
          money:
            type: "array"
            items:
              $ref: '#/components/schemas/Money'
    CartDiscountValueGiftLineItem:
      allOf:
      - $ref: '#/components/schemas/CartDiscountValue'
      - type: "object"
        properties:
          type:
            type: "string"
          product:
            $ref: '#/components/schemas/ProductReference'
          variantId:
            type: "integer"
            format: "int64"
          supplyChannel:
            $ref: '#/components/schemas/ChannelReference'
          distributionChannel:
            $ref: '#/components/schemas/ChannelReference'
    CartDiscountValueGiftLineItemDraft:
      allOf:
      - $ref: '#/components/schemas/CartDiscountValueDraft'
      - type: "object"
        properties:
          type:
            type: "string"
          product:
            $ref: '#/components/schemas/ProductResourceIdentifier'
          variantId:
            type: "integer"
            format: "int64"
          supplyChannel:
            $ref: '#/components/schemas/ChannelResourceIdentifier'
          distributionChannel:
            $ref: '#/components/schemas/ChannelResourceIdentifier'
    CartDiscountValueRelative:
      allOf:
      - $ref: '#/components/schemas/CartDiscountValue'
      - type: "object"
        properties:
          type:
            type: "string"
          permyriad:
            type: "integer"
            format: "int64"
    CartDiscountValueRelativeDraft:
      allOf:
      - $ref: '#/components/schemas/CartDiscountValueDraft'
      - type: "object"
        properties:
          type:
            type: "string"
          permyriad:
            type: "integer"
            format: "int64"
    MultiBuyCustomLineItemsTarget:
      allOf:
      - $ref: '#/components/schemas/CartDiscountTarget'
      - type: "object"
        properties:
          type:
            type: "string"
          predicate:
            type: "string"
          triggerQuantity:
            type: "integer"
            format: "int32"
          discountedQuantity:
            type: "integer"
            format: "int32"
          maxOccurrence:
            type: "integer"
            format: "int32"
          selectionMode:
            $ref: '#/components/schemas/SelectionMode'
    MultiBuyLineItemsTarget:
      allOf:
      - $ref: '#/components/schemas/CartDiscountTarget'
      - type: "object"
        properties:
          type:
            type: "string"
          predicate:
            type: "string"
          triggerQuantity:
            type: "integer"
            format: "int32"
          discountedQuantity:
            type: "integer"
            format: "int32"
          maxOccurrence:
            type: "integer"
            format: "int32"
          selectionMode:
            $ref: '#/components/schemas/SelectionMode'
    SelectionMode:
      type: "string"
      enum:
      - Cheapest
      - MostExpensive
      x-annotation-package: "CartDiscount"
    StackingMode:
      type: "string"
      enum:
      - Stacking
      - StopAfterThisDiscount
      x-annotation-package: "CartDiscount"
    CartDiscountChangeCartPredicateAction:
      allOf:
      - $ref: '#/components/schemas/CartDiscountUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          cartPredicate:
            type: "string"
    CartDiscountChangeIsActiveAction:
      allOf:
      - $ref: '#/components/schemas/CartDiscountUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          isActive:
            type: "boolean"
    CartDiscountChangeNameAction:
      allOf:
      - $ref: '#/components/schemas/CartDiscountUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          name:
            $ref: '#/components/schemas/LocalizedString'
    CartDiscountChangeRequiresDiscountCodeAction:
      allOf:
      - $ref: '#/components/schemas/CartDiscountUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          requiresDiscountCode:
            type: "boolean"
    CartDiscountChangeSortOrderAction:
      allOf:
      - $ref: '#/components/schemas/CartDiscountUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          sortOrder:
            type: "string"
    CartDiscountChangeStackingModeAction:
      allOf:
      - $ref: '#/components/schemas/CartDiscountUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          stackingMode:
            $ref: '#/components/schemas/StackingMode'
    CartDiscountChangeTargetAction:
      allOf:
      - $ref: '#/components/schemas/CartDiscountUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          target:
            $ref: '#/components/schemas/CartDiscountTarget'
    CartDiscountChangeValueAction:
      allOf:
      - $ref: '#/components/schemas/CartDiscountUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          value:
            $ref: '#/components/schemas/CartDiscountValueDraft'
    CartDiscountSetCustomFieldAction:
      allOf:
      - $ref: '#/components/schemas/CartDiscountUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          name:
            type: "string"
          value:
            anyOf:
              - type: "string"
              - type: "object"
              - type: "array"
                items:
                    type: "string"
              - type: "number"
              - type: "integer"
              - type: "boolean"
    CartDiscountSetCustomTypeAction:
      allOf:
      - $ref: '#/components/schemas/CartDiscountUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          type:
            $ref: '#/components/schemas/TypeResourceIdentifier'
          fields:
            type: string
            additionalProperties: true
    CartDiscountSetDescriptionAction:
      allOf:
      - $ref: '#/components/schemas/CartDiscountUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          description:
            $ref: '#/components/schemas/LocalizedString'
    CartDiscountSetKeyAction:
      allOf:
      - $ref: '#/components/schemas/CartDiscountUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          key:
            type: "string"
    CartDiscountSetValidFromAction:
      allOf:
      - $ref: '#/components/schemas/CartDiscountUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          validFrom:
            type: "string"
            format: "datetime"
    CartDiscountSetValidFromAndUntilAction:
      allOf:
      - $ref: '#/components/schemas/CartDiscountUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          validFrom:
            type: "string"
            format: "datetime"
          validUntil:
            type: "string"
            format: "datetime"
    CartDiscountSetValidUntilAction:
      allOf:
      - $ref: '#/components/schemas/CartDiscountUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          validUntil:
            type: "string"
            format: "datetime"
    Cart:
      allOf:
      - $ref: '#/components/schemas/BaseResource'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          key:
            type: "string"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          customerId:
            type: "string"
          customerEmail:
            type: "string"
          anonymousId:
            type: "string"
          store:
            $ref: '#/components/schemas/StoreKeyReference'
          lineItems:
            type: "array"
            items:
              $ref: '#/components/schemas/LineItem'
          customLineItems:
            type: "array"
            items:
              $ref: '#/components/schemas/CustomLineItem'
          totalPrice:
            $ref: '#/components/schemas/TypedMoney'
          taxedPrice:
            $ref: '#/components/schemas/TaxedPrice'
          cartState:
            $ref: '#/components/schemas/CartState'
          shippingAddress:
            $ref: '#/components/schemas/Address'
          billingAddress:
            $ref: '#/components/schemas/Address'
          inventoryMode:
            $ref: '#/components/schemas/InventoryMode'
          taxMode:
            $ref: '#/components/schemas/TaxMode'
          taxRoundingMode:
            $ref: '#/components/schemas/RoundingMode'
          taxCalculationMode:
            $ref: '#/components/schemas/TaxCalculationMode'
          customerGroup:
            $ref: '#/components/schemas/CustomerGroupReference'
          country:
            $ref: '#/components/schemas/CountryCode'
          shippingInfo:
            $ref: '#/components/schemas/ShippingInfo'
          discountCodes:
            type: "array"
            items:
              $ref: '#/components/schemas/DiscountCodeInfo'
          custom:
            $ref: '#/components/schemas/CustomFields'
          paymentInfo:
            $ref: '#/components/schemas/PaymentInfo'
          locale:
            type: "string"
          deleteDaysAfterLastModification:
            type: "integer"
            format: "int32"
          refusedGifts:
            type: "array"
            items:
              $ref: '#/components/schemas/CartDiscountReference'
          origin:
            $ref: '#/components/schemas/CartOrigin'
          shippingRateInput:
            $ref: '#/components/schemas/ShippingRateInput'
          itemShippingAddresses:
            type: "array"
            items:
              $ref: '#/components/schemas/Address'
    CartDraft:
      type: "object"
      properties:
        currency:
          $ref: '#/components/schemas/CurrencyCode'
        key:
          type: "string"
        customerId:
          type: "string"
        customerEmail:
          type: "string"
        customerGroup:
          $ref: '#/components/schemas/CustomerGroupResourceIdentifier'
        anonymousId:
          type: "string"
        store:
          $ref: '#/components/schemas/StoreResourceIdentifier'
        country:
          type: "string"
        inventoryMode:
          $ref: '#/components/schemas/InventoryMode'
        taxMode:
          $ref: '#/components/schemas/TaxMode'
        taxRoundingMode:
          $ref: '#/components/schemas/RoundingMode'
        taxCalculationMode:
          $ref: '#/components/schemas/TaxCalculationMode'
        lineItems:
          type: "array"
          items:
            $ref: '#/components/schemas/LineItemDraft'
        customLineItems:
          type: "array"
          items:
            $ref: '#/components/schemas/CustomLineItemDraft'
        shippingAddress:
          $ref: '#/components/schemas/BaseAddress'
        billingAddress:
          $ref: '#/components/schemas/BaseAddress'
        shippingMethod:
          $ref: '#/components/schemas/ShippingMethodResourceIdentifier'
        externalTaxRateForShippingMethod:
          $ref: '#/components/schemas/ExternalTaxRateDraft'
        custom:
          $ref: '#/components/schemas/CustomFieldsDraft'
        locale:
          type: "string"
        deleteDaysAfterLastModification:
          type: "integer"
          format: "int64"
        origin:
          $ref: '#/components/schemas/CartOrigin'
        shippingRateInput:
          $ref: '#/components/schemas/ShippingRateInputDraft'
        itemShippingAddresses:
          type: "array"
          items:
            $ref: '#/components/schemas/BaseAddress'
        discountCodes:
          type: "array"
          items:
            type: "string"
    CartOrigin:
      type: "string"
      enum:
      - Customer
      - Merchant
      x-annotation-package: "Cart"
      x-annotation-docs-uri: "https://docs.commercetools.com/http-api-projects-carts.html#cartorigin"
    CartPagedQueryResponse:
      type: "object"
      properties:
        limit:
          type: "integer"
          format: "int64"
        count:
          type: "integer"
          format: "int64"
        total:
          type: "integer"
          format: "int64"
        offset:
          type: "integer"
          format: "int64"
        results:
          type: "array"
          items:
            $ref: '#/components/schemas/Cart'
    CartReference:
      allOf:
      - $ref: '#/components/schemas/Reference'
      - type: "object"
        properties:
          typeId:
            $ref: '#/components/schemas/ReferenceTypeId'
          id:
            type: "string"
          obj:
            $ref: '#/components/schemas/Cart'
    CartResourceIdentifier:
      allOf:
      - $ref: '#/components/schemas/ResourceIdentifier'
      - type: "object"
        properties:
          typeId:
            $ref: '#/components/schemas/ReferenceTypeId'
          id:
            type: "string"
          key:
            type: "string"
    CartState:
      type: "string"
      enum:
      - Active
      - Merged
      - Ordered
      x-annotation-package: "Cart"
      x-annotation-docs-uri: "https://docs.commercetools.com/http-api-projects-carts.html#cartstate"
    CartUpdate:
      type: "object"
      properties:
        version:
          type: "integer"
          format: "int64"
        actions:
          type: "array"
          items:
            $ref: '#/components/schemas/CartUpdateAction'
    CartUpdateAction:
      type: "object"
      discriminator:
        propertyName: action
        mapping:
          addCustomLineItem: '#/components/schemas/CartAddCustomLineItemAction'
          addDiscountCode: '#/components/schemas/CartAddDiscountCodeAction'
          addItemShippingAddress: '#/components/schemas/CartAddItemShippingAddressAction'
          addLineItem: '#/components/schemas/CartAddLineItemAction'
          addPayment: '#/components/schemas/CartAddPaymentAction'
          addShoppingList: '#/components/schemas/CartAddShoppingListAction'
          applyDeltaToCustomLineItemShippingDetailsTargets: '#/components/schemas/CartApplyDeltaToCustomLineItemShippingDetailsTargetsAction'
          applyDeltaToLineItemShippingDetailsTargets: '#/components/schemas/CartApplyDeltaToLineItemShippingDetailsTargetsAction'
          changeCustomLineItemMoney: '#/components/schemas/CartChangeCustomLineItemMoneyAction'
          changeCustomLineItemQuantity: '#/components/schemas/CartChangeCustomLineItemQuantityAction'
          changeLineItemQuantity: '#/components/schemas/CartChangeLineItemQuantityAction'
          changeTaxCalculationMode: '#/components/schemas/CartChangeTaxCalculationModeAction'
          changeTaxMode: '#/components/schemas/CartChangeTaxModeAction'
          changeTaxRoundingMode: '#/components/schemas/CartChangeTaxRoundingModeAction'
          recalculate: '#/components/schemas/CartRecalculateAction'
          removeCustomLineItem: '#/components/schemas/CartRemoveCustomLineItemAction'
          removeDiscountCode: '#/components/schemas/CartRemoveDiscountCodeAction'
          removeItemShippingAddress: '#/components/schemas/CartRemoveItemShippingAddressAction'
          removeLineItem: '#/components/schemas/CartRemoveLineItemAction'
          removePayment: '#/components/schemas/CartRemovePaymentAction'
          setAnonymousId: '#/components/schemas/CartSetAnonymousIdAction'
          setBillingAddress: '#/components/schemas/CartSetBillingAddressAction'
          setBillingAddressCustomField: '#/components/schemas/CartSetBillingAddressCustomFieldAction'
          setBillingAddressCustomType: '#/components/schemas/CartSetBillingAddressCustomTypeAction'
          setCartTotalTax: '#/components/schemas/CartSetCartTotalTaxAction'
          setCountry: '#/components/schemas/CartSetCountryAction'
          setCustomField: '#/components/schemas/CartSetCustomFieldAction'
          setCustomLineItemCustomField: '#/components/schemas/CartSetCustomLineItemCustomFieldAction'
          setCustomLineItemCustomType: '#/components/schemas/CartSetCustomLineItemCustomTypeAction'
          setCustomLineItemShippingDetails: '#/components/schemas/CartSetCustomLineItemShippingDetailsAction'
          setCustomLineItemTaxAmount: '#/components/schemas/CartSetCustomLineItemTaxAmountAction'
          setCustomLineItemTaxRate: '#/components/schemas/CartSetCustomLineItemTaxRateAction'
          setCustomShippingMethod: '#/components/schemas/CartSetCustomShippingMethodAction'
          setCustomType: '#/components/schemas/CartSetCustomTypeAction'
          setCustomerEmail: '#/components/schemas/CartSetCustomerEmailAction'
          setCustomerGroup: '#/components/schemas/CartSetCustomerGroupAction'
          setCustomerId: '#/components/schemas/CartSetCustomerIdAction'
          setDeleteDaysAfterLastModification: '#/components/schemas/CartSetDeleteDaysAfterLastModificationAction'
          setDeliveryAddressCustomField: '#/components/schemas/CartSetDeliveryAddressCustomFieldAction'
          setDeliveryAddressCustomType: '#/components/schemas/CartSetDeliveryAddressCustomTypeAction'
          setItemShippingAddressCustomField: '#/components/schemas/CartSetItemShippingAddressCustomFieldAction'
          setItemShippingAddressCustomType: '#/components/schemas/CartSetItemShippingAddressCustomTypeAction'
          setKey: '#/components/schemas/CartSetKeyAction'
          setLineItemCustomField: '#/components/schemas/CartSetLineItemCustomFieldAction'
          setLineItemCustomType: '#/components/schemas/CartSetLineItemCustomTypeAction'
          setLineItemDistributionChannel: '#/components/schemas/CartSetLineItemDistributionChannelAction'
          setLineItemPrice: '#/components/schemas/CartSetLineItemPriceAction'
          setLineItemShippingDetails: '#/components/schemas/CartSetLineItemShippingDetailsAction'
          setLineItemSupplyChannel: '#/components/schemas/CartSetLineItemSupplyChannelAction'
          setLineItemTaxAmount: '#/components/schemas/CartSetLineItemTaxAmountAction'
          setLineItemTaxRate: '#/components/schemas/CartSetLineItemTaxRateAction'
          setLineItemTotalPrice: '#/components/schemas/CartSetLineItemTotalPriceAction'
          setLocale: '#/components/schemas/CartSetLocaleAction'
          setShippingAddress: '#/components/schemas/CartSetShippingAddressAction'
          setShippingAddressCustomField: '#/components/schemas/CartSetShippingAddressCustomFieldAction'
          setShippingAddressCustomType: '#/components/schemas/CartSetShippingAddressCustomTypeAction'
          setShippingMethod: '#/components/schemas/CartSetShippingMethodAction'
          setShippingMethodTaxAmount: '#/components/schemas/CartSetShippingMethodTaxAmountAction'
          setShippingMethodTaxRate: '#/components/schemas/CartSetShippingMethodTaxRateAction'
          setShippingRateInput: '#/components/schemas/CartSetShippingRateInputAction'
          updateItemShippingAddress: '#/components/schemas/CartUpdateItemShippingAddressAction'
      properties:
        action:
          type: "string"
    ClassificationShippingRateInput:
      allOf:
      - $ref: '#/components/schemas/ShippingRateInput'
      - type: "object"
        properties:
          type:
            type: "string"
          key:
            type: "string"
          label:
            $ref: '#/components/schemas/LocalizedString'
    ClassificationShippingRateInputDraft:
      allOf:
      - $ref: '#/components/schemas/ShippingRateInputDraft'
      - type: "object"
        properties:
          type:
            type: "string"
          key:
            type: "string"
    CustomLineItem:
      type: "object"
      properties:
        id:
          type: "string"
        name:
          $ref: '#/components/schemas/LocalizedString'
        money:
          $ref: '#/components/schemas/TypedMoney'
        taxedPrice:
          $ref: '#/components/schemas/TaxedItemPrice'
        totalPrice:
          $ref: '#/components/schemas/TypedMoney'
        slug:
          type: "string"
        quantity:
          type: "integer"
          format: "int64"
        state:
          type: "array"
          items:
            $ref: '#/components/schemas/ItemState'
        taxCategory:
          $ref: '#/components/schemas/TaxCategoryReference'
        taxRate:
          $ref: '#/components/schemas/TaxRate'
        discountedPricePerQuantity:
          type: "array"
          items:
            $ref: '#/components/schemas/DiscountedLineItemPriceForQuantity'
        custom:
          $ref: '#/components/schemas/CustomFields'
        shippingDetails:
          $ref: '#/components/schemas/ItemShippingDetails'
    CustomLineItemDraft:
      type: "object"
      properties:
        name:
          $ref: '#/components/schemas/LocalizedString'
        quantity:
          type: "integer"
          format: "int64"
        money:
          $ref: '#/components/schemas/Money'
        slug:
          type: "string"
        taxCategory:
          $ref: '#/components/schemas/TaxCategoryResourceIdentifier'
        externalTaxRate:
          $ref: '#/components/schemas/ExternalTaxRateDraft'
        custom:
          $ref: '#/components/schemas/CustomFieldsDraft'
        shippingDetails:
          $ref: '#/components/schemas/ItemShippingDetailsDraft'
    DiscountCodeInfo:
      type: "object"
      properties:
        discountCode:
          $ref: '#/components/schemas/DiscountCodeReference'
        state:
          $ref: '#/components/schemas/DiscountCodeState'
    DiscountCodeState:
      type: "string"
      enum:
      - NotActive
      - DoesNotMatchCart
      - MatchesCart
      - MaxApplicationReached
      - ApplicationStoppedByPreviousDiscount
      - NotValid
      x-annotation-package: "Cart"
      x-annotation-docs-uri: "https://docs.commercetools.com/http-api-projects-carts.html#discountcodestate"
    DiscountedLineItemPortion:
      type: "object"
      properties:
        discount:
          $ref: '#/components/schemas/CartDiscountReference'
        discountedAmount:
          $ref: '#/components/schemas/TypedMoney'
    DiscountedLineItemPrice:
      type: "object"
      properties:
        value:
          $ref: '#/components/schemas/TypedMoney'
        includedDiscounts:
          type: "array"
          items:
            $ref: '#/components/schemas/DiscountedLineItemPortion'
    DiscountedLineItemPriceForQuantity:
      type: "object"
      properties:
        quantity:
          type: "number"
          format: "double"
        discountedPrice:
          $ref: '#/components/schemas/DiscountedLineItemPrice'
    ExternalLineItemTotalPrice:
      type: "object"
      properties:
        price:
          $ref: '#/components/schemas/Money'
        totalPrice:
          $ref: '#/components/schemas/Money'
    ExternalTaxAmountDraft:
      type: "object"
      properties:
        totalGross:
          $ref: '#/components/schemas/Money'
        taxRate:
          $ref: '#/components/schemas/ExternalTaxRateDraft'
    ExternalTaxRateDraft:
      type: "object"
      properties:
        name:
          type: "string"
        amount:
          type: "number"
          format: "double"
        country:
          type: "string"
        state:
          type: "string"
        subRates:
          type: "array"
          items:
            $ref: '#/components/schemas/SubRate'
        includedInPrice:
          type: "boolean"
    InventoryMode:
      type: "string"
      enum:
      - TrackOnly
      - ReserveOnOrder
      - None
      x-annotation-package: "Cart"
      x-annotation-docs-uri: "https://docs.commercetools.com/http-api-projects-carts.html#inventorymode"
    ItemShippingDetails:
      type: "object"
      properties:
        targets:
          type: "array"
          items:
            $ref: '#/components/schemas/ItemShippingTarget'
        valid:
          type: "boolean"
    ItemShippingDetailsDraft:
      type: "object"
      properties:
        targets:
          type: "array"
          items:
            $ref: '#/components/schemas/ItemShippingTarget'
    ItemShippingTarget:
      type: "object"
      properties:
        addressKey:
          type: "string"
        quantity:
          type: "number"
          format: "double"
    LineItem:
      type: "object"
      properties:
        id:
          type: "string"
        productId:
          type: "string"
        productKey:
          type: "string"
        name:
          $ref: '#/components/schemas/LocalizedString'
        productSlug:
          $ref: '#/components/schemas/LocalizedString'
        productType:
          $ref: '#/components/schemas/ProductTypeReference'
        variant:
          $ref: '#/components/schemas/ProductVariant'
        price:
          $ref: '#/components/schemas/Price'
        taxedPrice:
          $ref: '#/components/schemas/TaxedItemPrice'
        totalPrice:
          $ref: '#/components/schemas/TypedMoney'
        quantity:
          type: "integer"
          format: "int64"
        addedAt:
          type: "string"
          format: "datetime"
        state:
          type: "array"
          items:
            $ref: '#/components/schemas/ItemState'
        taxRate:
          $ref: '#/components/schemas/TaxRate'
        supplyChannel:
          $ref: '#/components/schemas/ChannelReference'
        distributionChannel:
          $ref: '#/components/schemas/ChannelReference'
        discountedPricePerQuantity:
          type: "array"
          items:
            $ref: '#/components/schemas/DiscountedLineItemPriceForQuantity'
        priceMode:
          $ref: '#/components/schemas/LineItemPriceMode'
        lineItemMode:
          $ref: '#/components/schemas/LineItemMode'
        custom:
          $ref: '#/components/schemas/CustomFields'
        shippingDetails:
          $ref: '#/components/schemas/ItemShippingDetails'
        lastModifiedAt:
          type: "string"
          format: "datetime"
    LineItemDraft:
      type: "object"
      properties:
        productId:
          type: "string"
        variantId:
          type: "integer"
          format: "int64"
        sku:
          type: "string"
        quantity:
          type: "integer"
          format: "int64"
        addedAt:
          type: "string"
          format: "datetime"
        supplyChannel:
          $ref: '#/components/schemas/ChannelResourceIdentifier'
        distributionChannel:
          $ref: '#/components/schemas/ChannelResourceIdentifier'
        externalTaxRate:
          $ref: '#/components/schemas/ExternalTaxRateDraft'
        custom:
          $ref: '#/components/schemas/CustomFieldsDraft'
        externalPrice:
          $ref: '#/components/schemas/Money'
        externalTotalPrice:
          $ref: '#/components/schemas/ExternalLineItemTotalPrice'
        shippingDetails:
          $ref: '#/components/schemas/ItemShippingDetailsDraft'
    LineItemMode:
      type: "string"
      enum:
      - Standard
      - GiftLineItem
      x-annotation-package: "Cart"
    LineItemPriceMode:
      type: "string"
      enum:
      - Platform
      - ExternalTotal
      - ExternalPrice
      x-annotation-package: "Cart"
    ReplicaCartDraft:
      type: "object"
      properties:
        reference:
          anyOf:
            - type: "string"
            - type: "object"
            - type: "array"
              items:
                type: "string"
            - type: "number"
            - type: "integer"
            - type: "boolean"
        key:
          type: "string"
    RoundingMode:
      type: "string"
      enum:
      - HalfEven
      - HalfUp
      - HalfDown
      x-annotation-package: "Cart"
    ScoreShippingRateInput:
      allOf:
      - $ref: '#/components/schemas/ShippingRateInput'
      - type: "object"
        properties:
          type:
            type: "string"
          score:
            type: "number"
            format: "double"
    ScoreShippingRateInputDraft:
      allOf:
      - $ref: '#/components/schemas/ShippingRateInputDraft'
      - type: "object"
        properties:
          type:
            type: "string"
          score:
            type: "number"
            format: "double"
    ShippingInfo:
      type: "object"
      properties:
        shippingMethodName:
          type: "string"
        price:
          $ref: '#/components/schemas/TypedMoney'
        shippingRate:
          $ref: '#/components/schemas/ShippingRate'
        taxedPrice:
          $ref: '#/components/schemas/TaxedItemPrice'
        taxRate:
          $ref: '#/components/schemas/TaxRate'
        taxCategory:
          $ref: '#/components/schemas/TaxCategoryReference'
        shippingMethod:
          $ref: '#/components/schemas/ShippingMethodReference'
        deliveries:
          type: "array"
          items:
            $ref: '#/components/schemas/Delivery'
        discountedPrice:
          $ref: '#/components/schemas/DiscountedLineItemPrice'
        shippingMethodState:
          $ref: '#/components/schemas/ShippingMethodState'
    ShippingMethodState:
      type: "string"
      enum:
      - DoesNotMatchCart
      - MatchesCart
      x-annotation-package: "Cart"
      x-annotation-docs-uri: "https://docs.commercetools.com/http-api-projects-carts.html#shippingmethodstate"
    ShippingRateInput:
      type: "object"
      discriminator:
        propertyName: type
        mapping:
          Classification: '#/components/schemas/ClassificationShippingRateInput'
          Score: '#/components/schemas/ScoreShippingRateInput'
      properties:
        type:
          type: "string"
    ShippingRateInputDraft:
      type: "object"
      discriminator:
        propertyName: type
        mapping:
          Classification: '#/components/schemas/ClassificationShippingRateInputDraft'
          Score: '#/components/schemas/ScoreShippingRateInputDraft'
      properties:
        type:
          type: "string"
    TaxCalculationMode:
      type: "string"
      enum:
      - LineItemLevel
      - UnitPriceLevel
      x-annotation-package: "Cart"
    TaxMode:
      type: "string"
      enum:
      - Platform
      - External
      - ExternalAmount
      - Disabled
      x-annotation-package: "Cart"
    TaxPortion:
      type: "object"
      properties:
        name:
          type: "string"
        rate:
          type: "number"
          format: "double"
        amount:
          $ref: '#/components/schemas/TypedMoney'
    TaxPortionDraft:
      type: "object"
      properties:
        name:
          type: "string"
        rate:
          type: "number"
          format: "double"
        amount:
          $ref: '#/components/schemas/Money'
    TaxedItemPrice:
      type: "object"
      properties:
        totalNet:
          $ref: '#/components/schemas/TypedMoney'
        totalGross:
          $ref: '#/components/schemas/TypedMoney'
    TaxedPrice:
      type: "object"
      properties:
        totalNet:
          $ref: '#/components/schemas/TypedMoney'
        totalGross:
          $ref: '#/components/schemas/TypedMoney'
        taxPortions:
          type: "array"
          items:
            $ref: '#/components/schemas/TaxPortion'
    TaxedPriceDraft:
      type: "object"
      properties:
        totalNet:
          $ref: '#/components/schemas/Money'
        totalGross:
          $ref: '#/components/schemas/Money'
        taxPortions:
          type: "array"
          items:
            $ref: '#/components/schemas/TaxPortionDraft'
    CartAddCustomLineItemAction:
      allOf:
      - $ref: '#/components/schemas/CartUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          money:
            $ref: '#/components/schemas/Money'
          name:
            $ref: '#/components/schemas/LocalizedString'
          quantity:
            type: "integer"
            format: "int64"
          slug:
            type: "string"
          taxCategory:
            $ref: '#/components/schemas/TaxCategoryResourceIdentifier'
          custom:
            $ref: '#/components/schemas/CustomFieldsDraft'
          externalTaxRate:
            $ref: '#/components/schemas/ExternalTaxRateDraft'
    CartAddDiscountCodeAction:
      allOf:
      - $ref: '#/components/schemas/CartUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          code:
            type: "string"
    CartAddItemShippingAddressAction:
      allOf:
      - $ref: '#/components/schemas/CartUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          address:
            $ref: '#/components/schemas/BaseAddress'
    CartAddLineItemAction:
      allOf:
      - $ref: '#/components/schemas/CartUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          custom:
            $ref: '#/components/schemas/CustomFieldsDraft'
          distributionChannel:
            $ref: '#/components/schemas/ChannelResourceIdentifier'
          externalTaxRate:
            $ref: '#/components/schemas/ExternalTaxRateDraft'
          productId:
            type: "string"
          variantId:
            type: "integer"
            format: "int64"
          sku:
            type: "string"
          quantity:
            type: "integer"
            format: "int64"
          supplyChannel:
            $ref: '#/components/schemas/ChannelResourceIdentifier'
          externalPrice:
            $ref: '#/components/schemas/Money'
          externalTotalPrice:
            $ref: '#/components/schemas/ExternalLineItemTotalPrice'
          shippingDetails:
            $ref: '#/components/schemas/ItemShippingDetailsDraft'
    CartAddPaymentAction:
      allOf:
      - $ref: '#/components/schemas/CartUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          payment:
            $ref: '#/components/schemas/PaymentResourceIdentifier'
    CartAddShoppingListAction:
      allOf:
      - $ref: '#/components/schemas/CartUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          shoppingList:
            $ref: '#/components/schemas/ShoppingListResourceIdentifier'
          supplyChannel:
            $ref: '#/components/schemas/ChannelResourceIdentifier'
          distributionChannel:
            $ref: '#/components/schemas/ChannelResourceIdentifier'
    CartApplyDeltaToCustomLineItemShippingDetailsTargetsAction:
      allOf:
      - $ref: '#/components/schemas/CartUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          customLineItemId:
            type: "string"
          targetsDelta:
            type: "array"
            items:
              $ref: '#/components/schemas/ItemShippingTarget'
    CartApplyDeltaToLineItemShippingDetailsTargetsAction:
      allOf:
      - $ref: '#/components/schemas/CartUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          lineItemId:
            type: "string"
          targetsDelta:
            type: "array"
            items:
              $ref: '#/components/schemas/ItemShippingTarget'
    CartChangeCustomLineItemMoneyAction:
      allOf:
      - $ref: '#/components/schemas/CartUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          customLineItemId:
            type: "string"
          money:
            $ref: '#/components/schemas/Money'
    CartChangeCustomLineItemQuantityAction:
      allOf:
      - $ref: '#/components/schemas/CartUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          customLineItemId:
            type: "string"
          quantity:
            type: "integer"
            format: "int64"
    CartChangeLineItemQuantityAction:
      allOf:
      - $ref: '#/components/schemas/CartUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          lineItemId:
            type: "string"
          quantity:
            type: "integer"
            format: "int64"
          externalPrice:
            $ref: '#/components/schemas/Money'
          externalTotalPrice:
            $ref: '#/components/schemas/ExternalLineItemTotalPrice'
    CartChangeTaxCalculationModeAction:
      allOf:
      - $ref: '#/components/schemas/CartUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          taxCalculationMode:
            $ref: '#/components/schemas/TaxCalculationMode'
    CartChangeTaxModeAction:
      allOf:
      - $ref: '#/components/schemas/CartUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          taxMode:
            $ref: '#/components/schemas/TaxMode'
    CartChangeTaxRoundingModeAction:
      allOf:
      - $ref: '#/components/schemas/CartUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          taxRoundingMode:
            $ref: '#/components/schemas/RoundingMode'
    CartRecalculateAction:
      allOf:
      - $ref: '#/components/schemas/CartUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          updateProductData:
            type: "boolean"
    CartRemoveCustomLineItemAction:
      allOf:
      - $ref: '#/components/schemas/CartUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          customLineItemId:
            type: "string"
    CartRemoveDiscountCodeAction:
      allOf:
      - $ref: '#/components/schemas/CartUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          discountCode:
            $ref: '#/components/schemas/DiscountCodeReference'
    CartRemoveItemShippingAddressAction:
      allOf:
      - $ref: '#/components/schemas/CartUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          addressKey:
            type: "string"
    CartRemoveLineItemAction:
      allOf:
      - $ref: '#/components/schemas/CartUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          lineItemId:
            type: "string"
          quantity:
            type: "integer"
            format: "int64"
          externalPrice:
            $ref: '#/components/schemas/Money'
          externalTotalPrice:
            $ref: '#/components/schemas/ExternalLineItemTotalPrice'
          shippingDetailsToRemove:
            $ref: '#/components/schemas/ItemShippingDetailsDraft'
    CartRemovePaymentAction:
      allOf:
      - $ref: '#/components/schemas/CartUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          payment:
            $ref: '#/components/schemas/PaymentResourceIdentifier'
    CartSetAnonymousIdAction:
      allOf:
      - $ref: '#/components/schemas/CartUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          anonymousId:
            type: "string"
    CartSetBillingAddressAction:
      allOf:
      - $ref: '#/components/schemas/CartUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          address:
            $ref: '#/components/schemas/BaseAddress'
    CartSetBillingAddressCustomFieldAction:
      allOf:
      - $ref: '#/components/schemas/CartUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          name:
            type: "string"
          value:
            anyOf:
              - type: "string"
              - type: "object"
              - type: "array"
                items:
                    type: "string"
              - type: "number"
              - type: "integer"
              - type: "boolean"
    CartSetBillingAddressCustomTypeAction:
      allOf:
      - $ref: '#/components/schemas/CartUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          type:
            $ref: '#/components/schemas/TypeResourceIdentifier'
          fields:
            $ref: '#/components/schemas/FieldContainer'
    CartSetCartTotalTaxAction:
      allOf:
      - $ref: '#/components/schemas/CartUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          externalTotalGross:
            $ref: '#/components/schemas/Money'
          externalTaxPortions:
            type: "array"
            items:
              $ref: '#/components/schemas/TaxPortionDraft'
    CartSetCountryAction:
      allOf:
      - $ref: '#/components/schemas/CartUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          country:
            $ref: '#/components/schemas/CountryCode'
    CartSetCustomFieldAction:
      allOf:
      - $ref: '#/components/schemas/CartUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          name:
            type: "string"
          value:
            anyOf:
              - type: "string"
              - type: "object"
              - type: "array"
                items:
                    type: string
              - type: "number"
              - type: "integer"
              - type: "boolean"
    CartSetCustomLineItemCustomFieldAction:
      allOf:
      - $ref: '#/components/schemas/CartUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          customLineItemId:
            type: "string"
          name:
            type: "string"
          value:
            anyOf:
              - type: "string"
              - type: "object"
              - type: "array"
                items:
                    type: "string"
              - type: "number"
              - type: "integer"
              - type: "boolean"
    CartSetCustomLineItemCustomTypeAction:
      allOf:
      - $ref: '#/components/schemas/CartUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          customLineItemId:
            type: "string"
          type:
            $ref: '#/components/schemas/TypeResourceIdentifier'
          fields:
            $ref: '#/components/schemas/FieldContainer'
    CartSetCustomLineItemShippingDetailsAction:
      allOf:
      - $ref: '#/components/schemas/CartUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          customLineItemId:
            type: "string"
          shippingDetails:
            $ref: '#/components/schemas/ItemShippingDetailsDraft'
    CartSetCustomLineItemTaxAmountAction:
      allOf:
      - $ref: '#/components/schemas/CartUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          customLineItemId:
            type: "string"
          externalTaxAmount:
            $ref: '#/components/schemas/ExternalTaxAmountDraft'
    CartSetCustomLineItemTaxRateAction:
      allOf:
      - $ref: '#/components/schemas/CartUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          customLineItemId:
            type: "string"
          externalTaxRate:
            $ref: '#/components/schemas/ExternalTaxRateDraft'
    CartSetCustomShippingMethodAction:
      allOf:
      - $ref: '#/components/schemas/CartUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          shippingMethodName:
            type: "string"
          shippingRate:
            $ref: '#/components/schemas/ShippingRateDraft'
          taxCategory:
            $ref: '#/components/schemas/TaxCategoryResourceIdentifier'
          externalTaxRate:
            $ref: '#/components/schemas/ExternalTaxRateDraft'
    CartSetCustomTypeAction:
      allOf:
      - $ref: '#/components/schemas/CartUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          type:
            $ref: '#/components/schemas/TypeResourceIdentifier'
          fields:
            $ref: '#/components/schemas/FieldContainer'
    CartSetCustomerEmailAction:
      allOf:
      - $ref: '#/components/schemas/CartUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          email:
            type: "string"
    CartSetCustomerGroupAction:
      allOf:
      - $ref: '#/components/schemas/CartUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          customerGroup:
            $ref: '#/components/schemas/CustomerGroupResourceIdentifier'
    CartSetCustomerIdAction:
      allOf:
      - $ref: '#/components/schemas/CartUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          customerId:
            type: "string"
    CartSetDeleteDaysAfterLastModificationAction:
      allOf:
      - $ref: '#/components/schemas/CartUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          deleteDaysAfterLastModification:
            type: "integer"
            format: "int32"
    CartSetDeliveryAddressCustomFieldAction:
      allOf:
      - $ref: '#/components/schemas/CartUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          deliveryId:
            type: "string"
          name:
            type: "string"
          value:
            anyOf:
              - type: "string"
              - type: "object"
              - type: "array"
                items:
                    type: "string"
              - type: "number"
              - type: "integer"
              - type: "boolean"
    CartSetDeliveryAddressCustomTypeAction:
      allOf:
      - $ref: '#/components/schemas/CartUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          deliveryId:
            type: "string"
          type:
            $ref: '#/components/schemas/TypeResourceIdentifier'
          fields:
            $ref: '#/components/schemas/FieldContainer'
    CartSetItemShippingAddressCustomFieldAction:
      allOf:
      - $ref: '#/components/schemas/CartUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          addressKey:
            type: "string"
          name:
            type: "string"
          value:
            anyOf:
              - type: "string"
              - type: "object"
              - type: "array"
                items:
                    type: "string"
              - type: "number"
              - type: "integer"
              - type: "boolean"
    CartSetItemShippingAddressCustomTypeAction:
      allOf:
      - $ref: '#/components/schemas/CartUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          addressKey:
            type: "string"
          type:
            $ref: '#/components/schemas/TypeResourceIdentifier'
          fields:
            $ref: '#/components/schemas/FieldContainer'
    CartSetKeyAction:
      allOf:
      - $ref: '#/components/schemas/CartUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          key:
            type: "string"
    CartSetLineItemCustomFieldAction:
      allOf:
      - $ref: '#/components/schemas/CartUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          lineItemId:
            type: "string"
          name:
            type: "string"
          value:
            anyOf:
              - type: "string"
              - type: "object"
              - type: "array"
                items:
                    type: "string"
              - type: "number"
              - type: "integer"
              - type: "boolean"
    CartSetLineItemCustomTypeAction:
      allOf:
      - $ref: '#/components/schemas/CartUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          lineItemId:
            type: "string"
          type:
            $ref: '#/components/schemas/TypeResourceIdentifier'
          fields:
            $ref: '#/components/schemas/FieldContainer'
    CartSetLineItemDistributionChannelAction:
      allOf:
      - $ref: '#/components/schemas/CartUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          lineItemId:
            type: "string"
          distributionChannel:
            $ref: '#/components/schemas/ChannelResourceIdentifier'
    CartSetLineItemPriceAction:
      allOf:
      - $ref: '#/components/schemas/CartUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          lineItemId:
            type: "string"
          externalPrice:
            $ref: '#/components/schemas/Money'
    CartSetLineItemShippingDetailsAction:
      allOf:
      - $ref: '#/components/schemas/CartUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          lineItemId:
            type: "string"
          shippingDetails:
            $ref: '#/components/schemas/ItemShippingDetailsDraft'
    CartSetLineItemSupplyChannelAction:
      allOf:
      - $ref: '#/components/schemas/CartUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          lineItemId:
            type: "string"
          supplyChannel:
            $ref: '#/components/schemas/ChannelResourceIdentifier'
    CartSetLineItemTaxAmountAction:
      allOf:
      - $ref: '#/components/schemas/CartUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          lineItemId:
            type: "string"
          externalTaxAmount:
            $ref: '#/components/schemas/ExternalTaxAmountDraft'
    CartSetLineItemTaxRateAction:
      allOf:
      - $ref: '#/components/schemas/CartUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          lineItemId:
            type: "string"
          externalTaxRate:
            $ref: '#/components/schemas/ExternalTaxRateDraft'
    CartSetLineItemTotalPriceAction:
      allOf:
      - $ref: '#/components/schemas/CartUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          lineItemId:
            type: "string"
          externalTotalPrice:
            $ref: '#/components/schemas/ExternalLineItemTotalPrice'
    CartSetLocaleAction:
      allOf:
      - $ref: '#/components/schemas/CartUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          locale:
            type: "string"
    CartSetShippingAddressAction:
      allOf:
      - $ref: '#/components/schemas/CartUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          address:
            $ref: '#/components/schemas/BaseAddress'
    CartSetShippingAddressCustomFieldAction:
      allOf:
      - $ref: '#/components/schemas/CartUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          name:
            type: "string"
          value:
            anyOf:
              - type: "string"
              - type: "object"
              - type: "array"
                items:
                    type: "string"
              - type: "number"
              - type: "integer"
              - type: "boolean"
    CartSetShippingAddressCustomTypeAction:
      allOf:
      - $ref: '#/components/schemas/CartUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          type:
            $ref: '#/components/schemas/TypeResourceIdentifier'
          fields:
            $ref: '#/components/schemas/FieldContainer'
    CartSetShippingMethodAction:
      allOf:
      - $ref: '#/components/schemas/CartUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          shippingMethod:
            $ref: '#/components/schemas/ShippingMethodResourceIdentifier'
          externalTaxRate:
            $ref: '#/components/schemas/ExternalTaxRateDraft'
    CartSetShippingMethodTaxAmountAction:
      allOf:
      - $ref: '#/components/schemas/CartUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          externalTaxAmount:
            $ref: '#/components/schemas/ExternalTaxAmountDraft'
    CartSetShippingMethodTaxRateAction:
      allOf:
      - $ref: '#/components/schemas/CartUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          externalTaxRate:
            $ref: '#/components/schemas/ExternalTaxRateDraft'
    CartSetShippingRateInputAction:
      allOf:
      - $ref: '#/components/schemas/CartUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          shippingRateInput:
            $ref: '#/components/schemas/ShippingRateInputDraft'
    CartUpdateItemShippingAddressAction:
      allOf:
      - $ref: '#/components/schemas/CartUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          address:
            $ref: '#/components/schemas/BaseAddress'
    Category:
      allOf:
      - $ref: '#/components/schemas/BaseResource'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          name:
            $ref: '#/components/schemas/LocalizedString'
          slug:
            $ref: '#/components/schemas/LocalizedString'
          description:
            $ref: '#/components/schemas/LocalizedString'
          ancestors:
            type: "array"
            items:
              $ref: '#/components/schemas/CategoryReference'
          parent:
            $ref: '#/components/schemas/CategoryReference'
          orderHint:
            type: "string"
          externalId:
            type: "string"
          metaTitle:
            $ref: '#/components/schemas/LocalizedString'
          metaDescription:
            $ref: '#/components/schemas/LocalizedString'
          metaKeywords:
            $ref: '#/components/schemas/LocalizedString'
          custom:
            $ref: '#/components/schemas/CustomFields'
          assets:
            type: "array"
            items:
              $ref: '#/components/schemas/Asset'
          key:
            type: "string"
    CategoryDraft:
      type: "object"
      properties:
        name:
          $ref: '#/components/schemas/LocalizedString'
        slug:
          $ref: '#/components/schemas/LocalizedString'
        description:
          $ref: '#/components/schemas/LocalizedString'
        parent:
          $ref: '#/components/schemas/CategoryResourceIdentifier'
        orderHint:
          type: "string"
        externalId:
          type: "string"
        metaTitle:
          $ref: '#/components/schemas/LocalizedString'
        metaDescription:
          $ref: '#/components/schemas/LocalizedString'
        metaKeywords:
          $ref: '#/components/schemas/LocalizedString'
        custom:
          $ref: '#/components/schemas/CustomFieldsDraft'
        assets:
          type: "array"
          items:
            $ref: '#/components/schemas/AssetDraft'
        key:
          type: "string"
    CategoryPagedQueryResponse:
      type: "object"
      properties:
        limit:
          type: "integer"
          format: "int64"
        count:
          type: "integer"
          format: "int64"
        total:
          type: "integer"
          format: "int64"
        offset:
          type: "integer"
          format: "int64"
        results:
          type: "array"
          items:
            $ref: '#/components/schemas/Category'
    CategoryReference:
      allOf:
      - $ref: '#/components/schemas/Reference'
      - type: "object"
        properties:
          typeId:
            $ref: '#/components/schemas/ReferenceTypeId'
          id:
            type: "string"
          obj:
            $ref: '#/components/schemas/Category'
    CategoryResourceIdentifier:
      allOf:
      - $ref: '#/components/schemas/ResourceIdentifier'
      - type: "object"
        properties:
          typeId:
            $ref: '#/components/schemas/ReferenceTypeId'
          id:
            type: "string"
          key:
            type: "string"
    CategoryUpdate:
      type: "object"
      properties:
        version:
          type: "integer"
          format: "int64"
        actions:
          type: "array"
          items:
            $ref: '#/components/schemas/CategoryUpdateAction'
    CategoryUpdateAction:
      type: "object"
      discriminator:
        propertyName: action
        mapping:
          addAsset: '#/components/schemas/CategoryAddAssetAction'
          changeAssetName: '#/components/schemas/CategoryChangeAssetNameAction'
          changeAssetOrder: '#/components/schemas/CategoryChangeAssetOrderAction'
          changeName: '#/components/schemas/CategoryChangeNameAction'
          changeOrderHint: '#/components/schemas/CategoryChangeOrderHintAction'
          changeParent: '#/components/schemas/CategoryChangeParentAction'
          changeSlug: '#/components/schemas/CategoryChangeSlugAction'
          removeAsset: '#/components/schemas/CategoryRemoveAssetAction'
          setAssetCustomField: '#/components/schemas/CategorySetAssetCustomFieldAction'
          setAssetCustomType: '#/components/schemas/CategorySetAssetCustomTypeAction'
          setAssetDescription: '#/components/schemas/CategorySetAssetDescriptionAction'
          setAssetKey: '#/components/schemas/CategorySetAssetKeyAction'
          setAssetSources: '#/components/schemas/CategorySetAssetSourcesAction'
          setAssetTags: '#/components/schemas/CategorySetAssetTagsAction'
          setCustomField: '#/components/schemas/CategorySetCustomFieldAction'
          setCustomType: '#/components/schemas/CategorySetCustomTypeAction'
          setDescription: '#/components/schemas/CategorySetDescriptionAction'
          setExternalId: '#/components/schemas/CategorySetExternalIdAction'
          setKey: '#/components/schemas/CategorySetKeyAction'
          setMetaDescription: '#/components/schemas/CategorySetMetaDescriptionAction'
          setMetaKeywords: '#/components/schemas/CategorySetMetaKeywordsAction'
          setMetaTitle: '#/components/schemas/CategorySetMetaTitleAction'
      properties:
        action:
          type: "string"
    CategoryAddAssetAction:
      allOf:
      - $ref: '#/components/schemas/CategoryUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          asset:
            $ref: '#/components/schemas/AssetDraft'
          position:
            type: "integer"
            format: "int32"
    CategoryChangeAssetNameAction:
      allOf:
      - $ref: '#/components/schemas/CategoryUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          assetId:
            type: "string"
          assetKey:
            type: "string"
          name:
            $ref: '#/components/schemas/LocalizedString'
    CategoryChangeAssetOrderAction:
      allOf:
      - $ref: '#/components/schemas/CategoryUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          assetOrder:
            type: "array"
            items:
              type: "string"
    CategoryChangeNameAction:
      allOf:
      - $ref: '#/components/schemas/CategoryUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          name:
            $ref: '#/components/schemas/LocalizedString'
    CategoryChangeOrderHintAction:
      allOf:
      - $ref: '#/components/schemas/CategoryUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          orderHint:
            type: "string"
    CategoryChangeParentAction:
      allOf:
      - $ref: '#/components/schemas/CategoryUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          parent:
            $ref: '#/components/schemas/CategoryResourceIdentifier'
    CategoryChangeSlugAction:
      allOf:
      - $ref: '#/components/schemas/CategoryUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          slug:
            $ref: '#/components/schemas/LocalizedString'
    CategoryRemoveAssetAction:
      allOf:
      - $ref: '#/components/schemas/CategoryUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          assetId:
            type: "string"
          assetKey:
            type: "string"
    CategorySetAssetCustomFieldAction:
      allOf:
      - $ref: '#/components/schemas/CategoryUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          assetId:
            type: "string"
          assetKey:
            type: "string"
          name:
            type: "string"
          value:
            anyOf:
              - type: "string"
              - type: "object"
              - type: "array"
                items:
                    type: "string"
              - type: "number"
              - type: "integer"
              - type: "boolean"
    CategorySetAssetCustomTypeAction:
      allOf:
      - $ref: '#/components/schemas/CategoryUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          assetId:
            type: "string"
          assetKey:
            type: "string"
          type:
            $ref: '#/components/schemas/TypeResourceIdentifier'
          fields:
            type: "string"
            additionalProperties: true
    CategorySetAssetDescriptionAction:
      allOf:
      - $ref: '#/components/schemas/CategoryUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          assetId:
            type: "string"
          assetKey:
            type: "string"
          description:
            $ref: '#/components/schemas/LocalizedString'
    CategorySetAssetKeyAction:
      allOf:
      - $ref: '#/components/schemas/CategoryUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          assetId:
            type: "string"
          assetKey:
            type: "string"
    CategorySetAssetSourcesAction:
      allOf:
      - $ref: '#/components/schemas/CategoryUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          assetId:
            type: "string"
          assetKey:
            type: "string"
          sources:
            type: "array"
            items:
              $ref: '#/components/schemas/AssetSource'
    CategorySetAssetTagsAction:
      allOf:
      - $ref: '#/components/schemas/CategoryUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          assetId:
            type: "string"
          assetKey:
            type: "string"
          tags:
            type: "array"
            items:
              type: "string"
    CategorySetCustomFieldAction:
      allOf:
      - $ref: '#/components/schemas/CategoryUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          name:
            type: "string"
          value:
            anyOf:
              - type: "string"
              - type: "object"
              - type: "array"
                items:
                    type: "string"
              - type: "number"
              - type: "integer"
              - type: "boolean"
    CategorySetCustomTypeAction:
      allOf:
      - $ref: '#/components/schemas/CategoryUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          type:
            $ref: '#/components/schemas/TypeResourceIdentifier'
          fields:
            $ref: '#/components/schemas/FieldContainer'
    CategorySetDescriptionAction:
      allOf:
      - $ref: '#/components/schemas/CategoryUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          description:
            $ref: '#/components/schemas/LocalizedString'
    CategorySetExternalIdAction:
      allOf:
      - $ref: '#/components/schemas/CategoryUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          externalId:
            type: "string"
    CategorySetKeyAction:
      allOf:
      - $ref: '#/components/schemas/CategoryUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          key:
            type: "string"
    CategorySetMetaDescriptionAction:
      allOf:
      - $ref: '#/components/schemas/CategoryUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          metaDescription:
            $ref: '#/components/schemas/LocalizedString'
    CategorySetMetaKeywordsAction:
      allOf:
      - $ref: '#/components/schemas/CategoryUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          metaKeywords:
            $ref: '#/components/schemas/LocalizedString'
    CategorySetMetaTitleAction:
      allOf:
      - $ref: '#/components/schemas/CategoryUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          metaTitle:
            $ref: '#/components/schemas/LocalizedString'
    Channel:
      allOf:
      - $ref: '#/components/schemas/BaseResource'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          key:
            type: "string"
          roles:
            type: "array"
            items:
              $ref: '#/components/schemas/ChannelRoleEnum'
          name:
            $ref: '#/components/schemas/LocalizedString'
          description:
            $ref: '#/components/schemas/LocalizedString'
          address:
            $ref: '#/components/schemas/Address'
          reviewRatingStatistics:
            $ref: '#/components/schemas/ReviewRatingStatistics'
          custom:
            $ref: '#/components/schemas/CustomFields'
          geoLocation:
            $ref: '#/components/schemas/GeoJson'
    ChannelDraft:
      type: "object"
      properties:
        key:
          type: "string"
        roles:
          type: "array"
          items:
            $ref: '#/components/schemas/ChannelRoleEnum'
        name:
          $ref: '#/components/schemas/LocalizedString'
        description:
          $ref: '#/components/schemas/LocalizedString'
        address:
          $ref: '#/components/schemas/BaseAddress'
        custom:
          $ref: '#/components/schemas/CustomFieldsDraft'
        geoLocation:
          $ref: '#/components/schemas/GeoJson'
    ChannelPagedQueryResponse:
      type: "object"
      properties:
        limit:
          type: "integer"
          format: "int64"
        offset:
          type: "integer"
          format: "int64"
        count:
          type: "integer"
          format: "int64"
        total:
          type: "integer"
          format: "int64"
        results:
          type: "array"
          items:
            $ref: '#/components/schemas/Channel'
    ChannelReference:
      allOf:
      - $ref: '#/components/schemas/Reference'
      - type: "object"
        properties:
          typeId:
            $ref: '#/components/schemas/ReferenceTypeId'
          id:
            type: "string"
          obj:
            $ref: '#/components/schemas/Channel'
    ChannelResourceIdentifier:
      allOf:
      - $ref: '#/components/schemas/ResourceIdentifier'
      - type: "object"
        properties:
          typeId:
            $ref: '#/components/schemas/ReferenceTypeId'
          id:
            type: "string"
          key:
            type: "string"
    ChannelRoleEnum:
      type: "string"
      enum:
      - InventorySupply
      - ProductDistribution
      - OrderExport
      - OrderImport
      - Primary
      x-annotation-package: "Channel"
      x-annotation-docs-uri: "https://docs.commercetools.com/api/projects/channels#channelroleenum"
      x-annotation-enumDescriptions:
        InventorySupply: "Channel can be used to track inventory entries (for example, Channels
         with this role can be treated as warehouses).n"
        ProductDistribution: "Channel can be used to expose Products to a specific distribution
         Channel.nThe Channel can be used by a Cart to [select](/../api/projects/carts#lineitem-price-selection)
         a Product Price.n"
        OrderExport: "Channel can be used to track order export activities.n"
        OrderImport: "Channel can be used to track order import activities.n"
        Primary: "This role can be combined with the other roles (for example, with `InventorySupply`).
         If used, the Channel is considered as the primary or main channel among Channels
         of the same type.n"
    ChannelUpdate:
      type: "object"
      properties:
        version:
          type: "integer"
          format: "int64"
        actions:
          type: "array"
          items:
            $ref: '#/components/schemas/ChannelUpdateAction'
    ChannelUpdateAction:
      type: "object"
      discriminator:
        propertyName: action
        mapping:
          addRoles: '#/components/schemas/ChannelAddRolesAction'
          changeDescription: '#/components/schemas/ChannelChangeDescriptionAction'
          changeKey: '#/components/schemas/ChannelChangeKeyAction'
          changeName: '#/components/schemas/ChannelChangeNameAction'
          removeRoles: '#/components/schemas/ChannelRemoveRolesAction'
          setAddress: '#/components/schemas/ChannelSetAddressAction'
          setAddressCustomField: '#/components/schemas/ChannelSetAddressCustomFieldAction'
          setAddressCustomType: '#/components/schemas/ChannelSetAddressCustomTypeAction'
          setCustomField: '#/components/schemas/ChannelSetCustomFieldAction'
          setCustomType: '#/components/schemas/ChannelSetCustomTypeAction'
          setGeoLocation: '#/components/schemas/ChannelSetGeoLocationAction'
          setRoles: '#/components/schemas/ChannelSetRolesAction'
      properties:
        action:
          type: "string"
    ChannelAddRolesAction:
      allOf:
      - $ref: '#/components/schemas/ChannelUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          roles:
            type: "array"
            items:
              $ref: '#/components/schemas/ChannelRoleEnum'
    ChannelChangeDescriptionAction:
      allOf:
      - $ref: '#/components/schemas/ChannelUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          description:
            $ref: '#/components/schemas/LocalizedString'
    ChannelChangeKeyAction:
      allOf:
      - $ref: '#/components/schemas/ChannelUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          key:
            type: "string"
    ChannelChangeNameAction:
      allOf:
      - $ref: '#/components/schemas/ChannelUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          name:
            $ref: '#/components/schemas/LocalizedString'
    ChannelRemoveRolesAction:
      allOf:
      - $ref: '#/components/schemas/ChannelUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          roles:
            type: "array"
            items:
              $ref: '#/components/schemas/ChannelRoleEnum'
    ChannelSetAddressAction:
      allOf:
      - $ref: '#/components/schemas/ChannelUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          address:
            $ref: '#/components/schemas/BaseAddress'
    ChannelSetAddressCustomFieldAction:
      allOf:
      - $ref: '#/components/schemas/ChannelUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          name:
            type: "string"
          value:
            anyOf:
              - type: "string"
              - type: "object"
              - type: "array"
                items:
                    type: "string"
              - type: "number"
              - type: "integer"
              - type: "boolean"
    ChannelSetAddressCustomTypeAction:
      allOf:
      - $ref: '#/components/schemas/ChannelUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          type:
            $ref: '#/components/schemas/TypeResourceIdentifier'
          fields:
            $ref: '#/components/schemas/FieldContainer'
    ChannelSetCustomFieldAction:
      allOf:
      - $ref: '#/components/schemas/ChannelUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          name:
            type: "string"
          value:
            anyOf:
              - type: "string"
              - type: "object"
              - type: "array"
                items:
                    type: "string"
              - type: "number"
              - type: "integer"
              - type: "boolean"
    ChannelSetCustomTypeAction:
      allOf:
      - $ref: '#/components/schemas/ChannelUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          type:
            $ref: '#/components/schemas/TypeResourceIdentifier'
          fields:
            $ref: '#/components/schemas/FieldContainer'
    ChannelSetGeoLocationAction:
      allOf:
      - $ref: '#/components/schemas/ChannelUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          geoLocation:
            $ref: '#/components/schemas/GeoJson'
    ChannelSetRolesAction:
      allOf:
      - $ref: '#/components/schemas/ChannelUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          roles:
            type: "array"
            items:
              $ref: '#/components/schemas/ChannelRoleEnum'
    Address:
      allOf:
      - $ref: '#/components/schemas/BaseAddress'
      - type: "object"
        properties:
          id:
            type: "string"
          key:
            type: "string"
          title:
            type: "string"
          salutation:
            type: "string"
          firstName:
            type: "string"
          lastName:
            type: "string"
          streetName:
            type: "string"
          streetNumber:
            type: "string"
          additionalStreetInfo:
            type: "string"
          postalCode:
            type: "string"
          city:
            type: "string"
          region:
            type: "string"
          state:
            type: "string"
          country:
            $ref: '#/components/schemas/CountryCode'
          company:
            type: "string"
          department:
            type: "string"
          building:
            type: "string"
          apartment:
            type: "string"
          pOBox:
            type: "string"
          phone:
            type: "string"
          mobile:
            type: "string"
          email:
            type: "string"
          fax:
            type: "string"
          additionalAddressInfo:
            type: "string"
          externalId:
            type: "string"
          custom:
            $ref: '#/components/schemas/CustomFields'
    AddressDraft:
      allOf:
      - $ref: '#/components/schemas/BaseAddress'
      - type: "object"
        properties:
          id:
            type: "string"
          key:
            type: "string"
          title:
            type: "string"
          salutation:
            type: "string"
          firstName:
            type: "string"
          lastName:
            type: "string"
          streetName:
            type: "string"
          streetNumber:
            type: "string"
          additionalStreetInfo:
            type: "string"
          postalCode:
            type: "string"
          city:
            type: "string"
          region:
            type: "string"
          state:
            type: "string"
          country:
            $ref: '#/components/schemas/CountryCode'
          company:
            type: "string"
          department:
            type: "string"
          building:
            type: "string"
          apartment:
            type: "string"
          pOBox:
            type: "string"
          phone:
            type: "string"
          mobile:
            type: "string"
          email:
            type: "string"
          fax:
            type: "string"
          additionalAddressInfo:
            type: "string"
          externalId:
            type: "string"
          custom:
            $ref: '#/components/schemas/CustomFieldsDraft'
    Asset:
      type: "object"
      properties:
        id:
          type: "string"
        sources:
          type: "array"
          items:
            $ref: '#/components/schemas/AssetSource'
        name:
          $ref: '#/components/schemas/LocalizedString'
        description:
          $ref: '#/components/schemas/LocalizedString'
        tags:
          type: "array"
          items:
            type: "string"
        custom:
          $ref: '#/components/schemas/CustomFields'
        key:
          type: "string"
    AssetDimensions:
      type: "object"
      properties:
        w:
          type: "integer"
          format: "int32"
        h:
          type: "integer"
          format: "int32"
    AssetDraft:
      type: "object"
      properties:
        sources:
          type: "array"
          items:
            $ref: '#/components/schemas/AssetSource'
        name:
          $ref: '#/components/schemas/LocalizedString'
        description:
          $ref: '#/components/schemas/LocalizedString'
        tags:
          type: "array"
          items:
            type: "string"
        custom:
          $ref: '#/components/schemas/CustomFieldsDraft'
        key:
          type: "string"
    AssetSource:
      type: "object"
      properties:
        uri:
          type: "string"
        key:
          type: "string"
        dimensions:
          $ref: '#/components/schemas/AssetDimensions'
        contentType:
          type: "string"
    BaseAddress:
      type: "object"
      properties:
        id:
          type: "string"
        key:
          type: "string"
        title:
          type: "string"
        salutation:
          type: "string"
        firstName:
          type: "string"
        lastName:
          type: "string"
        streetName:
          type: "string"
        streetNumber:
          type: "string"
        additionalStreetInfo:
          type: "string"
        postalCode:
          type: "string"
        city:
          type: "string"
        region:
          type: "string"
        state:
          type: "string"
        country:
          $ref: '#/components/schemas/CountryCode'
        company:
          type: "string"
        department:
          type: "string"
        building:
          type: "string"
        apartment:
          type: "string"
        pOBox:
          type: "string"
        phone:
          type: "string"
        mobile:
          type: "string"
        email:
          type: "string"
        fax:
          type: "string"
        additionalAddressInfo:
          type: "string"
        externalId:
          type: "string"
    BaseResource:
      type: "object"
      properties:
        id:
          type: "string"
        version:
          type: "integer"
          format: "int64"
        createdAt:
          type: "string"
          format: "datetime"
        lastModifiedAt:
          type: "string"
          format: "datetime"
    CentPrecisionMoney:
      allOf:
      - $ref: '#/components/schemas/TypedMoney'
      - type: "object"
        properties:
          type:
            $ref: '#/components/schemas/MoneyType'
          fractionDigits:
            type: "integer"
            format: "int32"
          centAmount:
            type: "integer"
            format: "int64"
          currencyCode:
            $ref: '#/components/schemas/CurrencyCode'
    CentPrecisionMoneyDraft:
      allOf:
      - $ref: '#/components/schemas/TypedMoneyDraft'
      - type: "object"
        properties:
          centAmount:
            type: "integer"
            format: "int64"
          currencyCode:
            $ref: '#/components/schemas/CurrencyCode'
          type:
            $ref: '#/components/schemas/MoneyType'
          fractionDigits:
            type: "integer"
            format: "int32"
    ClientLogging:
      type: "object"
      properties:
        clientId:
          type: "string"
        externalUserId:
          type: "string"
        customer:
          $ref: '#/components/schemas/CustomerReference'
        anonymousId:
          type: "string"
    CountryCode:
      type: "string"
    CreatedBy:
      allOf:
      - $ref: '#/components/schemas/ClientLogging'
      - type: "object"
        properties:
          clientId:
            type: "string"
          externalUserId:
            type: "string"
          customer:
            $ref: '#/components/schemas/CustomerReference'
          anonymousId:
            type: "string"
    CurrencyCode:
      type: "string"
    DiscountedPrice:
      type: "object"
      properties:
        value:
          $ref: '#/components/schemas/TypedMoney'
        discount:
          $ref: '#/components/schemas/ProductDiscountReference'
    DiscountedPriceDraft:
      type: "object"
      properties:
        value:
          $ref: '#/components/schemas/Money'
        discount:
          $ref: '#/components/schemas/ProductDiscountReference'
    Expansion:
      type: "string"
    GeoJson:
      type: "object"
      discriminator:
        propertyName: type
        mapping:
          Point: '#/components/schemas/GeoJsonPoint'
      properties:
        type:
          type: "string"
    GeoJsonPoint:
      allOf:
      - $ref: '#/components/schemas/GeoJson'
      - type: "object"
        properties:
          type:
            type: "string"
          coordinates:
            type: "array"
            items:
              type: "number"
              format: "double"
    HighPrecisionMoney:
      allOf:
      - $ref: '#/components/schemas/TypedMoney'
      - type: "object"
        properties:
          type:
            $ref: '#/components/schemas/MoneyType'
          fractionDigits:
            type: "integer"
            format: "int32"
          centAmount:
            type: "integer"
            format: "int64"
          currencyCode:
            $ref: '#/components/schemas/CurrencyCode'
          preciseAmount:
            type: "integer"
            format: "int64"
    HighPrecisionMoneyDraft:
      allOf:
      - $ref: '#/components/schemas/TypedMoneyDraft'
      - type: "object"
        properties:
          centAmount:
            type: "integer"
            format: "int64"
          currencyCode:
            $ref: '#/components/schemas/CurrencyCode'
          type:
            $ref: '#/components/schemas/MoneyType'
          fractionDigits:
            type: "integer"
            format: "int32"
          preciseAmount:
            type: "integer"
            format: "int64"
    Image:
      type: "object"
      properties:
        url:
          type: "string"
        dimensions:
          $ref: '#/components/schemas/ImageDimensions'
        label:
          type: "string"
    ImageDimensions:
      type: "object"
      properties:
        w:
          type: "integer"
          format: "int32"
        h:
          type: "integer"
          format: "int32"
    KeyReference:
      type: "object"
      discriminator:
        propertyName: typeId
        mapping:
          store: '#/components/schemas/StoreKeyReference'
      properties:
        typeId:
          $ref: '#/components/schemas/ReferenceTypeId'
        key:
          type: "string"
    LastModifiedBy:
      allOf:
      - $ref: '#/components/schemas/ClientLogging'
      - type: "object"
        properties:
          clientId:
            type: "string"
          externalUserId:
            type: "string"
          customer:
            $ref: '#/components/schemas/CustomerReference'
          anonymousId:
            type: "string"
    Locale:
      type: "string"
    LocalizedString:
      type: "object"
      additionalProperties:
        type: "string"
    Money:
      type: "object"
      properties:
        centAmount:
          type: "integer"
          format: "int64"
        currencyCode:
          $ref: '#/components/schemas/CurrencyCode'
    MoneyType:
      type: "string"
      enum:
      - centPrecision
      - highPrecision
      x-annotation-package: "Common"
      x-annotation-docs-uri: "https://docs.commercetools.com/http-api-types.html#money"
    Price:
      type: "object"
      properties:
        id:
          type: "string"
        value:
          $ref: '#/components/schemas/TypedMoney'
        country:
          $ref: '#/components/schemas/CountryCode'
        customerGroup:
          $ref: '#/components/schemas/CustomerGroupReference'
        channel:
          $ref: '#/components/schemas/ChannelReference'
        validFrom:
          type: "string"
          format: "datetime"
        validUntil:
          type: "string"
          format: "datetime"
        discounted:
          $ref: '#/components/schemas/DiscountedPrice'
        custom:
          $ref: '#/components/schemas/CustomFields'
        tiers:
          type: "array"
          items:
            $ref: '#/components/schemas/PriceTier'
    PriceDraft:
      type: "object"
      properties:
        value:
          $ref: '#/components/schemas/Money'
        country:
          $ref: '#/components/schemas/CountryCode'
        customerGroup:
          $ref: '#/components/schemas/CustomerGroupResourceIdentifier'
        channel:
          $ref: '#/components/schemas/ChannelResourceIdentifier'
        validFrom:
          type: "string"
          format: "datetime"
        validUntil:
          type: "string"
          format: "datetime"
        custom:
          $ref: '#/components/schemas/CustomFieldsDraft'
        tiers:
          type: "array"
          items:
            $ref: '#/components/schemas/PriceTierDraft'
        discounted:
          $ref: '#/components/schemas/DiscountedPriceDraft'
    PriceTier:
      type: "object"
      properties:
        minimumQuantity:
          type: "integer"
          format: "int64"
        value:
          $ref: '#/components/schemas/TypedMoney'
    PriceTierDraft:
      type: "object"
      properties:
        minimumQuantity:
          type: "integer"
          format: "int64"
        value:
          $ref: '#/components/schemas/Money'
    QueryPredicate:
      type: "string"
    QueryPrice:
      type: "object"
      properties:
        id:
          type: "string"
        value:
          $ref: '#/components/schemas/Money'
        country:
          $ref: '#/components/schemas/CountryCode'
        customerGroup:
          $ref: '#/components/schemas/CustomerGroupReference'
        channel:
          $ref: '#/components/schemas/ChannelReference'
        validFrom:
          type: "string"
          format: "datetime"
        validUntil:
          type: "string"
          format: "datetime"
        discounted:
          $ref: '#/components/schemas/DiscountedPriceDraft'
        custom:
          $ref: '#/components/schemas/CustomFields'
        tiers:
          type: "array"
          items:
            $ref: '#/components/schemas/PriceTierDraft'
    Reference:
      type: "object"
      discriminator:
        propertyName: typeId
        mapping:
          cart-discount: '#/components/schemas/CartDiscountReference'
          cart: '#/components/schemas/CartReference'
          category: '#/components/schemas/CategoryReference'
          channel: '#/components/schemas/ChannelReference'
          key-value-document: '#/components/schemas/CustomObjectReference'
          customer-group: '#/components/schemas/CustomerGroupReference'
          customer: '#/components/schemas/CustomerReference'
          discount-code: '#/components/schemas/DiscountCodeReference'
          inventory-entry: '#/components/schemas/InventoryEntryReference'
          order-edit: '#/components/schemas/OrderEditReference'
          order: '#/components/schemas/OrderReference'
          payment: '#/components/schemas/PaymentReference'
          product-discount: '#/components/schemas/ProductDiscountReference'
          product: '#/components/schemas/ProductReference'
          product-selection: '#/components/schemas/ProductSelectionReference'
          product-type: '#/components/schemas/ProductTypeReference'
          review: '#/components/schemas/ReviewReference'
          shipping-method: '#/components/schemas/ShippingMethodReference'
          shopping-list: '#/components/schemas/ShoppingListReference'
          state: '#/components/schemas/StateReference'
          store: '#/components/schemas/StoreReference'
          tax-category: '#/components/schemas/TaxCategoryReference'
          type: '#/components/schemas/TypeReference'
          zone: '#/components/schemas/ZoneReference'
      properties:
        typeId:
          $ref: '#/components/schemas/ReferenceTypeId'
        id:
          type: "string"
    ReferenceTypeId:
      type: "string"
      enum:
      - cart
      - cart-discount
      - category
      - channel
      - customer
      - customer-email-token
      - customer-group
      - customer-password-token
      - discount-code
      - extension
      - inventory-entry
      - key-value-document
      - order
      - order-edit
      - payment
      - product
      - product-discount
      - product-selection
      - product-type
      - review
      - shipping-method
      - shopping-list
      - state
      - store
      - subscription
      - tax-category
      - type
      - zone
      x-annotation-package: "Common"
    ResourceIdentifier:
      type: "object"
      discriminator:
        propertyName: typeId
        mapping:
          cart-discount: '#/components/schemas/CartDiscountResourceIdentifier'
          cart: '#/components/schemas/CartResourceIdentifier'
          category: '#/components/schemas/CategoryResourceIdentifier'
          channel: '#/components/schemas/ChannelResourceIdentifier'
          customer-group: '#/components/schemas/CustomerGroupResourceIdentifier'
          customer: '#/components/schemas/CustomerResourceIdentifier'
          discount-code: '#/components/schemas/DiscountCodeResourceIdentifier'
          inventory-entry: '#/components/schemas/InventoryEntryResourceIdentifier'
          order-edit: '#/components/schemas/OrderEditResourceIdentifier'
          order: '#/components/schemas/OrderResourceIdentifier'
          payment: '#/components/schemas/PaymentResourceIdentifier'
          product-discount: '#/components/schemas/ProductDiscountResourceIdentifier'
          product: '#/components/schemas/ProductResourceIdentifier'
          product-selection: '#/components/schemas/ProductSelectionResourceIdentifier'
          product-type: '#/components/schemas/ProductTypeResourceIdentifier'
          review: '#/components/schemas/ReviewResourceIdentifier'
          shipping-method: '#/components/schemas/ShippingMethodResourceIdentifier'
          shopping-list: '#/components/schemas/ShoppingListResourceIdentifier'
          state: '#/components/schemas/StateResourceIdentifier'
          store: '#/components/schemas/StoreResourceIdentifier'
          tax-category: '#/components/schemas/TaxCategoryResourceIdentifier'
          type: '#/components/schemas/TypeResourceIdentifier'
          zone: '#/components/schemas/ZoneResourceIdentifier'
      properties:
        typeId:
          $ref: '#/components/schemas/ReferenceTypeId'
        id:
          type: "string"
        key:
          type: "string"
    ScopedPrice:
      type: "object"
      properties:
        id:
          type: "string"
        value:
          $ref: '#/components/schemas/TypedMoney'
        currentValue:
          $ref: '#/components/schemas/TypedMoney'
        country:
          $ref: '#/components/schemas/CountryCode'
        customerGroup:
          $ref: '#/components/schemas/CustomerGroupReference'
        channel:
          $ref: '#/components/schemas/ChannelReference'
        validFrom:
          type: "string"
          format: "datetime"
        validUntil:
          type: "string"
          format: "datetime"
        discounted:
          $ref: '#/components/schemas/DiscountedPrice'
        custom:
          $ref: '#/components/schemas/CustomFields'
    Sort:
      type: "string"
    TypedMoney:
      type: "object"
      discriminator:
        propertyName: type
        mapping:
          centPrecision: '#/components/schemas/CentPrecisionMoney'
          highPrecision: '#/components/schemas/HighPrecisionMoney'
      properties:
        type:
          $ref: '#/components/schemas/MoneyType'
        fractionDigits:
          type: "integer"
          format: "int32"
        centAmount:
          type: "integer"
          format: "int64"
        currencyCode:
          $ref: '#/components/schemas/CurrencyCode'
    TypedMoneyDraft:
      allOf:
      - $ref: '#/components/schemas/Money'
      - type: "object"
        discriminator:
          propertyName: type
          mapping:
            centPrecision: '#/components/schemas/CentPrecisionMoneyDraft'
            highPrecision: '#/components/schemas/HighPrecisionMoneyDraft'
        properties:
          centAmount:
            type: "integer"
            format: "int64"
          currencyCode:
            $ref: '#/components/schemas/CurrencyCode'
          type:
            $ref: '#/components/schemas/MoneyType'
          fractionDigits:
            type: "integer"
            format: "int32"
    CustomObject:
      allOf:
      - $ref: '#/components/schemas/BaseResource'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          container:
            type: "string"
          key:
            type: "string"
          value:
            anyOf:
              - type: "string"
              - type: "object"
              - type: "array"
                items:
                    type: "string"
              - type: "number"
              - type: "integer"
              - type: "boolean"
    CustomObjectDraft:
      type: "object"
      properties:
        container:
          type: "string"
        key:
          type: "string"
        value:
          anyOf:
            - type: "string"
            - type: "object"
            - type: "array"
              items:
                type: "string"
            - type: "number"
            - type: "integer"
            - type: "boolean"
        version:
          type: "integer"
          format: "int64"
    CustomObjectPagedQueryResponse:
      type: "object"
      properties:
        limit:
          type: "integer"
          format: "int64"
        count:
          type: "integer"
          format: "int64"
        total:
          type: "integer"
          format: "int64"
        offset:
          type: "integer"
          format: "int64"
        results:
          type: "array"
          items:
            $ref: '#/components/schemas/CustomObject'
    CustomObjectReference:
      allOf:
      - $ref: '#/components/schemas/Reference'
      - type: "object"
        properties:
          typeId:
            $ref: '#/components/schemas/ReferenceTypeId'
          id:
            type: "string"
          obj:
            $ref: '#/components/schemas/CustomObject'
    CustomerGroup:
      allOf:
      - $ref: '#/components/schemas/BaseResource'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          key:
            type: "string"
          name:
            type: "string"
          custom:
            $ref: '#/components/schemas/CustomFields'
    CustomerGroupDraft:
      type: "object"
      properties:
        key:
          type: "string"
        groupName:
          type: "string"
        custom:
          $ref: '#/components/schemas/CustomFieldsDraft'
    CustomerGroupPagedQueryResponse:
      type: "object"
      properties:
        limit:
          type: "integer"
          format: "int64"
        offset:
          type: "integer"
          format: "int64"
        count:
          type: "integer"
          format: "int64"
        total:
          type: "integer"
          format: "int64"
        results:
          type: "array"
          items:
            $ref: '#/components/schemas/CustomerGroup'
    CustomerGroupReference:
      allOf:
      - $ref: '#/components/schemas/Reference'
      - type: "object"
        properties:
          typeId:
            $ref: '#/components/schemas/ReferenceTypeId'
          id:
            type: "string"
          obj:
            $ref: '#/components/schemas/CustomerGroup'
    CustomerGroupResourceIdentifier:
      allOf:
      - $ref: '#/components/schemas/ResourceIdentifier'
      - type: "object"
        properties:
          typeId:
            $ref: '#/components/schemas/ReferenceTypeId'
          id:
            type: "string"
          key:
            type: "string"
    CustomerGroupUpdate:
      type: "object"
      properties:
        version:
          type: "integer"
          format: "int64"
        actions:
          type: "array"
          items:
            $ref: '#/components/schemas/CustomerGroupUpdateAction'
    CustomerGroupUpdateAction:
      type: "object"
      discriminator:
        propertyName: action
        mapping:
          changeName: '#/components/schemas/CustomerGroupChangeNameAction'
          setCustomField: '#/components/schemas/CustomerGroupSetCustomFieldAction'
          setCustomType: '#/components/schemas/CustomerGroupSetCustomTypeAction'
          setKey: '#/components/schemas/CustomerGroupSetKeyAction'
      properties:
        action:
          type: "string"
    CustomerGroupChangeNameAction:
      allOf:
      - $ref: '#/components/schemas/CustomerGroupUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          name:
            type: "string"
    CustomerGroupSetCustomFieldAction:
      allOf:
      - $ref: '#/components/schemas/CustomerGroupUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          name:
            type: "string"
          value:
            anyOf:
              - type: "string"
              - type: "object"
              - type: "array"
                items:
                    type: "string"
              - type: "number"
              - type: "integer"
              - type: "boolean"
    CustomerGroupSetCustomTypeAction:
      allOf:
      - $ref: '#/components/schemas/CustomerGroupUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          type:
            $ref: '#/components/schemas/TypeResourceIdentifier'
          fields:
            $ref: '#/components/schemas/FieldContainer'
    CustomerGroupSetKeyAction:
      allOf:
      - $ref: '#/components/schemas/CustomerGroupUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          key:
            type: "string"
    AnonymousCartSignInMode:
      type: "string"
      enum:
      - MergeWithExistingCustomerCart
      - UseAsNewActiveCustomerCart
      x-annotation-package: "Customer"
    Customer:
      allOf:
      - $ref: '#/components/schemas/BaseResource'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          customerNumber:
            type: "string"
          email:
            type: "string"
          password:
            type: "string"
          firstName:
            type: "string"
          lastName:
            type: "string"
          middleName:
            type: "string"
          title:
            type: "string"
          dateOfBirth:
            type: "string"
            format: "date-only"
          companyName:
            type: "string"
          vatId:
            type: "string"
          addresses:
            type: "array"
            items:
              $ref: '#/components/schemas/Address'
          defaultShippingAddressId:
            type: "string"
          shippingAddressIds:
            type: "array"
            items:
              type: "string"
          defaultBillingAddressId:
            type: "string"
          billingAddressIds:
            type: "array"
            items:
              type: "string"
          isEmailVerified:
            type: "boolean"
          externalId:
            type: "string"
          customerGroup:
            $ref: '#/components/schemas/CustomerGroupReference'
          custom:
            $ref: '#/components/schemas/CustomFields'
          locale:
            type: "string"
          salutation:
            type: "string"
          key:
            type: "string"
          stores:
            type: "array"
            items:
              $ref: '#/components/schemas/StoreKeyReference'
    CustomerChangePassword:
      type: "object"
      properties:
        id:
          type: "string"
        version:
          type: "integer"
          format: "int64"
        currentPassword:
          type: "string"
        newPassword:
          type: "string"
    CustomerCreateEmailToken:
      type: "object"
      properties:
        id:
          type: "string"
        version:
          type: "integer"
          format: "int64"
        ttlMinutes:
          type: "integer"
          format: "int64"
    CustomerCreatePasswordResetToken:
      type: "object"
      properties:
        email:
          type: "string"
        ttlMinutes:
          type: "integer"
          format: "int64"
    CustomerDraft:
      type: "object"
      properties:
        customerNumber:
          type: "string"
        email:
          type: "string"
        password:
          type: "string"
        firstName:
          type: "string"
        lastName:
          type: "string"
        middleName:
          type: "string"
        title:
          type: "string"
        anonymousCartId:
          type: "string"
        anonymousCart:
          $ref: '#/components/schemas/CartResourceIdentifier'
        anonymousId:
          type: "string"
        dateOfBirth:
          type: "string"
          format: "date-only"
        companyName:
          type: "string"
        vatId:
          type: "string"
        addresses:
          type: "array"
          items:
            $ref: '#/components/schemas/BaseAddress'
        defaultShippingAddress:
          type: "integer"
          format: "int32"
        shippingAddresses:
          type: "array"
          items:
            type: "integer"
            format: "int32"
        defaultBillingAddress:
          type: "integer"
          format: "int32"
        billingAddresses:
          type: "array"
          items:
            type: "integer"
            format: "int32"
        isEmailVerified:
          type: "boolean"
        externalId:
          type: "string"
        customerGroup:
          $ref: '#/components/schemas/CustomerGroupResourceIdentifier'
        custom:
          $ref: '#/components/schemas/CustomFieldsDraft'
        locale:
          type: "string"
        salutation:
          type: "string"
        key:
          type: "string"
        stores:
          type: "array"
          items:
            $ref: '#/components/schemas/StoreResourceIdentifier'
    CustomerEmailVerify:
      type: "object"
      properties:
        version:
          type: "integer"
          format: "int64"
        tokenValue:
          type: "string"
    CustomerPagedQueryResponse:
      type: "object"
      properties:
        limit:
          type: "integer"
          format: "int64"
        count:
          type: "integer"
          format: "int64"
        total:
          type: "integer"
          format: "int64"
        offset:
          type: "integer"
          format: "int64"
        results:
          type: "array"
          items:
            $ref: '#/components/schemas/Customer'
    CustomerReference:
      allOf:
      - $ref: '#/components/schemas/Reference'
      - type: "object"
        properties:
          typeId:
            $ref: '#/components/schemas/ReferenceTypeId'
          id:
            type: "string"
          obj:
            $ref: '#/components/schemas/Customer'
    CustomerResetPassword:
      type: "object"
      properties:
        tokenValue:
          type: "string"
        newPassword:
          type: "string"
        version:
          type: "integer"
          format: "int64"
    CustomerResourceIdentifier:
      allOf:
      - $ref: '#/components/schemas/ResourceIdentifier'
      - type: "object"
        properties:
          typeId:
            $ref: '#/components/schemas/ReferenceTypeId'
          id:
            type: "string"
          key:
            type: "string"
    CustomerSignInResult:
      type: "object"
      properties:
        customer:
          $ref: '#/components/schemas/Customer'
        cart:
          $ref: '#/components/schemas/Cart'
    CustomerSignin:
      type: "object"
      properties:
        email:
          type: "string"
        password:
          type: "string"
        anonymousCartId:
          type: "string"
        anonymousCart:
          $ref: '#/components/schemas/CartResourceIdentifier'
        anonymousCartSignInMode:
          $ref: '#/components/schemas/AnonymousCartSignInMode'
        anonymousId:
          type: "string"
        updateProductData:
          type: "boolean"
    CustomerToken:
      type: "object"
      properties:
        id:
          type: "string"
        createdAt:
          type: "string"
          format: "datetime"
        lastModifiedAt:
          type: "string"
          format: "datetime"
        customerId:
          type: "string"
        expiresAt:
          type: "string"
          format: "datetime"
        value:
          type: "string"
    CustomerUpdate:
      type: "object"
      properties:
        version:
          type: "integer"
          format: "int64"
        actions:
          type: "array"
          items:
            $ref: '#/components/schemas/CustomerUpdateAction'
    CustomerUpdateAction:
      type: "object"
      discriminator:
        propertyName: action
        mapping:
          addAddress: '#/components/schemas/CustomerAddAddressAction'
          addBillingAddressId: '#/components/schemas/CustomerAddBillingAddressIdAction'
          addShippingAddressId: '#/components/schemas/CustomerAddShippingAddressIdAction'
          addStore: '#/components/schemas/CustomerAddStoreAction'
          changeAddress: '#/components/schemas/CustomerChangeAddressAction'
          changeEmail: '#/components/schemas/CustomerChangeEmailAction'
          removeAddress: '#/components/schemas/CustomerRemoveAddressAction'
          removeBillingAddressId: '#/components/schemas/CustomerRemoveBillingAddressIdAction'
          removeShippingAddressId: '#/components/schemas/CustomerRemoveShippingAddressIdAction'
          removeStore: '#/components/schemas/CustomerRemoveStoreAction'
          setAddressCustomField: '#/components/schemas/CustomerSetAddressCustomFieldAction'
          setAddressCustomType: '#/components/schemas/CustomerSetAddressCustomTypeAction'
          setCompanyName: '#/components/schemas/CustomerSetCompanyNameAction'
          setCustomField: '#/components/schemas/CustomerSetCustomFieldAction'
          setCustomType: '#/components/schemas/CustomerSetCustomTypeAction'
          setCustomerGroup: '#/components/schemas/CustomerSetCustomerGroupAction'
          setCustomerNumber: '#/components/schemas/CustomerSetCustomerNumberAction'
          setDateOfBirth: '#/components/schemas/CustomerSetDateOfBirthAction'
          setDefaultBillingAddress: '#/components/schemas/CustomerSetDefaultBillingAddressAction'
          setDefaultShippingAddress: '#/components/schemas/CustomerSetDefaultShippingAddressAction'
          setExternalId: '#/components/schemas/CustomerSetExternalIdAction'
          setFirstName: '#/components/schemas/CustomerSetFirstNameAction'
          setKey: '#/components/schemas/CustomerSetKeyAction'
          setLastName: '#/components/schemas/CustomerSetLastNameAction'
          setLocale: '#/components/schemas/CustomerSetLocaleAction'
          setMiddleName: '#/components/schemas/CustomerSetMiddleNameAction'
          setSalutation: '#/components/schemas/CustomerSetSalutationAction'
          setStores: '#/components/schemas/CustomerSetStoresAction'
          setTitle: '#/components/schemas/CustomerSetTitleAction'
          setVatId: '#/components/schemas/CustomerSetVatIdAction'
      properties:
        action:
          type: "string"
    MyCustomerChangePassword:
      type: "object"
      properties:
        version:
          type: "integer"
          format: "int64"
        currentPassword:
          type: "string"
        newPassword:
          type: "string"
    CustomerAddAddressAction:
      allOf:
      - $ref: '#/components/schemas/CustomerUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          address:
            $ref: '#/components/schemas/BaseAddress'
    CustomerAddBillingAddressIdAction:
      allOf:
      - $ref: '#/components/schemas/CustomerUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          addressId:
            type: "string"
          addressKey:
            type: "string"
    CustomerAddShippingAddressIdAction:
      allOf:
      - $ref: '#/components/schemas/CustomerUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          addressId:
            type: "string"
          addressKey:
            type: "string"
    CustomerAddStoreAction:
      allOf:
      - $ref: '#/components/schemas/CustomerUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          store:
            $ref: '#/components/schemas/StoreResourceIdentifier'
    CustomerChangeAddressAction:
      allOf:
      - $ref: '#/components/schemas/CustomerUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          addressId:
            type: "string"
          addressKey:
            type: "string"
          address:
            $ref: '#/components/schemas/BaseAddress'
    CustomerChangeEmailAction:
      allOf:
      - $ref: '#/components/schemas/CustomerUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          email:
            type: "string"
    CustomerRemoveAddressAction:
      allOf:
      - $ref: '#/components/schemas/CustomerUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          addressId:
            type: "string"
          addressKey:
            type: "string"
    CustomerRemoveBillingAddressIdAction:
      allOf:
      - $ref: '#/components/schemas/CustomerUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          addressId:
            type: "string"
          addressKey:
            type: "string"
    CustomerRemoveShippingAddressIdAction:
      allOf:
      - $ref: '#/components/schemas/CustomerUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          addressId:
            type: "string"
          addressKey:
            type: "string"
    CustomerRemoveStoreAction:
      allOf:
      - $ref: '#/components/schemas/CustomerUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          store:
            $ref: '#/components/schemas/StoreResourceIdentifier'
    CustomerSetAddressCustomFieldAction:
      allOf:
      - $ref: '#/components/schemas/CustomerUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          addressId:
            type: "string"
          name:
            type: "string"
          value:
            anyOf:
              - type: "string"
              - type: "object"
              - type: "array"
                items:
                    type: "string"
              - type: "number"
              - type: "integer"
              - type: "boolean"
    CustomerSetAddressCustomTypeAction:
      allOf:
      - $ref: '#/components/schemas/CustomerUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          type:
            $ref: '#/components/schemas/TypeResourceIdentifier'
          fields:
            $ref: '#/components/schemas/FieldContainer'
          addressId:
            type: "string"
    CustomerSetCompanyNameAction:
      allOf:
      - $ref: '#/components/schemas/CustomerUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          companyName:
            type: "string"
    CustomerSetCustomFieldAction:
      allOf:
      - $ref: '#/components/schemas/CustomerUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          name:
            type: "string"
          value:
            anyOf:
              - type: "string"
              - type: "object"
              - type: "array"
                items:
                    type: "string"
              - type: "number"
              - type: "integer"
              - type: "boolean"
    CustomerSetCustomTypeAction:
      allOf:
      - $ref: '#/components/schemas/CustomerUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          type:
            $ref: '#/components/schemas/TypeResourceIdentifier'
          fields:
            $ref: '#/components/schemas/FieldContainer'
    CustomerSetCustomerGroupAction:
      allOf:
      - $ref: '#/components/schemas/CustomerUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          customerGroup:
            $ref: '#/components/schemas/CustomerGroupResourceIdentifier'
    CustomerSetCustomerNumberAction:
      allOf:
      - $ref: '#/components/schemas/CustomerUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          customerNumber:
            type: "string"
    CustomerSetDateOfBirthAction:
      allOf:
      - $ref: '#/components/schemas/CustomerUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          dateOfBirth:
            type: "string"
            format: "date-only"
    CustomerSetDefaultBillingAddressAction:
      allOf:
      - $ref: '#/components/schemas/CustomerUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          addressId:
            type: "string"
          addressKey:
            type: "string"
    CustomerSetDefaultShippingAddressAction:
      allOf:
      - $ref: '#/components/schemas/CustomerUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          addressId:
            type: "string"
          addressKey:
            type: "string"
    CustomerSetExternalIdAction:
      allOf:
      - $ref: '#/components/schemas/CustomerUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          externalId:
            type: "string"
    CustomerSetFirstNameAction:
      allOf:
      - $ref: '#/components/schemas/CustomerUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          firstName:
            type: "string"
    CustomerSetKeyAction:
      allOf:
      - $ref: '#/components/schemas/CustomerUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          key:
            type: "string"
    CustomerSetLastNameAction:
      allOf:
      - $ref: '#/components/schemas/CustomerUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          lastName:
            type: "string"
    CustomerSetLocaleAction:
      allOf:
      - $ref: '#/components/schemas/CustomerUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          locale:
            type: "string"
    CustomerSetMiddleNameAction:
      allOf:
      - $ref: '#/components/schemas/CustomerUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          middleName:
            type: "string"
    CustomerSetSalutationAction:
      allOf:
      - $ref: '#/components/schemas/CustomerUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          salutation:
            type: "string"
    CustomerSetStoresAction:
      allOf:
      - $ref: '#/components/schemas/CustomerUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          stores:
            type: "array"
            items:
              $ref: '#/components/schemas/StoreResourceIdentifier'
    CustomerSetTitleAction:
      allOf:
      - $ref: '#/components/schemas/CustomerUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          title:
            type: "string"
    CustomerSetVatIdAction:
      allOf:
      - $ref: '#/components/schemas/CustomerUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          vatId:
            type: "string"
    DiscountCode:
      allOf:
      - $ref: '#/components/schemas/BaseResource'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          name:
            $ref: '#/components/schemas/LocalizedString'
          description:
            $ref: '#/components/schemas/LocalizedString'
          code:
            type: "string"
          cartDiscounts:
            type: "array"
            items:
              $ref: '#/components/schemas/CartDiscountReference'
          cartPredicate:
            type: "string"
          isActive:
            type: "boolean"
          references:
            type: "array"
            items:
              $ref: '#/components/schemas/Reference'
          maxApplications:
            type: "integer"
            format: "int64"
          maxApplicationsPerCustomer:
            type: "integer"
            format: "int64"
          custom:
            $ref: '#/components/schemas/CustomFields'
          groups:
            type: "array"
            items:
              type: "string"
          validFrom:
            type: "string"
            format: "datetime"
          validUntil:
            type: "string"
            format: "datetime"
          applicationVersion:
            type: "integer"
            format: "int64"
    DiscountCodeDraft:
      type: "object"
      properties:
        name:
          $ref: '#/components/schemas/LocalizedString'
        description:
          $ref: '#/components/schemas/LocalizedString'
        code:
          type: "string"
        cartDiscounts:
          type: "array"
          items:
            $ref: '#/components/schemas/CartDiscountResourceIdentifier'
        cartPredicate:
          type: "string"
        isActive:
          type: "boolean"
        maxApplications:
          type: "integer"
          format: "int64"
        maxApplicationsPerCustomer:
          type: "integer"
          format: "int64"
        custom:
          $ref: '#/components/schemas/CustomFieldsDraft'
        groups:
          type: "array"
          items:
            type: "string"
        validFrom:
          type: "string"
          format: "datetime"
        validUntil:
          type: "string"
          format: "datetime"
    DiscountCodePagedQueryResponse:
      type: "object"
      properties:
        limit:
          type: "integer"
          format: "int64"
        count:
          type: "integer"
          format: "int64"
        total:
          type: "integer"
          format: "int64"
        offset:
          type: "integer"
          format: "int64"
        results:
          type: "array"
          items:
            $ref: '#/components/schemas/DiscountCode'
    DiscountCodeReference:
      allOf:
      - $ref: '#/components/schemas/Reference'
      - type: "object"
        properties:
          typeId:
            $ref: '#/components/schemas/ReferenceTypeId'
          id:
            type: "string"
          obj:
            $ref: '#/components/schemas/DiscountCode'
    DiscountCodeResourceIdentifier:
      allOf:
      - $ref: '#/components/schemas/ResourceIdentifier'
      - type: "object"
        properties:
          typeId:
            $ref: '#/components/schemas/ReferenceTypeId'
          id:
            type: "string"
          key:
            type: "string"
    DiscountCodeUpdate:
      type: "object"
      properties:
        version:
          type: "integer"
          format: "int64"
        actions:
          type: "array"
          items:
            $ref: '#/components/schemas/DiscountCodeUpdateAction'
    DiscountCodeUpdateAction:
      type: "object"
      discriminator:
        propertyName: action
        mapping:
          changeCartDiscounts: '#/components/schemas/DiscountCodeChangeCartDiscountsAction'
          changeGroups: '#/components/schemas/DiscountCodeChangeGroupsAction'
          changeIsActive: '#/components/schemas/DiscountCodeChangeIsActiveAction'
          setCartPredicate: '#/components/schemas/DiscountCodeSetCartPredicateAction'
          setCustomField: '#/components/schemas/DiscountCodeSetCustomFieldAction'
          setCustomType: '#/components/schemas/DiscountCodeSetCustomTypeAction'
          setDescription: '#/components/schemas/DiscountCodeSetDescriptionAction'
          setMaxApplications: '#/components/schemas/DiscountCodeSetMaxApplicationsAction'
          setMaxApplicationsPerCustomer: '#/components/schemas/DiscountCodeSetMaxApplicationsPerCustomerAction'
          setName: '#/components/schemas/DiscountCodeSetNameAction'
          setValidFrom: '#/components/schemas/DiscountCodeSetValidFromAction'
          setValidFromAndUntil: '#/components/schemas/DiscountCodeSetValidFromAndUntilAction'
          setValidUntil: '#/components/schemas/DiscountCodeSetValidUntilAction'
      properties:
        action:
          type: "string"
    DiscountCodeChangeCartDiscountsAction:
      allOf:
      - $ref: '#/components/schemas/DiscountCodeUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          cartDiscounts:
            type: "array"
            items:
              $ref: '#/components/schemas/CartDiscountResourceIdentifier'
    DiscountCodeChangeGroupsAction:
      allOf:
      - $ref: '#/components/schemas/DiscountCodeUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          groups:
            type: "array"
            items:
              type: "string"
    DiscountCodeChangeIsActiveAction:
      allOf:
      - $ref: '#/components/schemas/DiscountCodeUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          isActive:
            type: "boolean"
    DiscountCodeSetCartPredicateAction:
      allOf:
      - $ref: '#/components/schemas/DiscountCodeUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          cartPredicate:
            type: "string"
    DiscountCodeSetCustomFieldAction:
      allOf:
      - $ref: '#/components/schemas/DiscountCodeUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          name:
            type: "string"
          value:
            anyOf:
              - type: "string"
              - type: "object"
              - type: "array"
                items:
                    type: "string"
              - type: "number"
              - type: "integer"
              - type: "boolean"
    DiscountCodeSetCustomTypeAction:
      allOf:
      - $ref: '#/components/schemas/DiscountCodeUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          type:
            $ref: '#/components/schemas/TypeResourceIdentifier'
          fields:
            $ref: '#/components/schemas/FieldContainer'
    DiscountCodeSetDescriptionAction:
      allOf:
      - $ref: '#/components/schemas/DiscountCodeUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          description:
            $ref: '#/components/schemas/LocalizedString'
    DiscountCodeSetMaxApplicationsAction:
      allOf:
      - $ref: '#/components/schemas/DiscountCodeUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          maxApplications:
            type: "integer"
            format: "int64"
    DiscountCodeSetMaxApplicationsPerCustomerAction:
      allOf:
      - $ref: '#/components/schemas/DiscountCodeUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          maxApplicationsPerCustomer:
            type: "integer"
            format: "int64"
    DiscountCodeSetNameAction:
      allOf:
      - $ref: '#/components/schemas/DiscountCodeUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          name:
            $ref: '#/components/schemas/LocalizedString'
    DiscountCodeSetValidFromAction:
      allOf:
      - $ref: '#/components/schemas/DiscountCodeUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          validFrom:
            type: "string"
            format: "datetime"
    DiscountCodeSetValidFromAndUntilAction:
      allOf:
      - $ref: '#/components/schemas/DiscountCodeUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          validFrom:
            type: "string"
            format: "datetime"
          validUntil:
            type: "string"
            format: "datetime"
    DiscountCodeSetValidUntilAction:
      allOf:
      - $ref: '#/components/schemas/DiscountCodeUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          validUntil:
            type: "string"
            format: "datetime"
    AccessDeniedError:
      allOf:
      - $ref: '#/components/schemas/ErrorObject'
      - type: "object"
        properties:
          code:
            type: "string"
          message:
            type: "string"
    AnonymousIdAlreadyInUseError:
      allOf:
      - $ref: '#/components/schemas/ErrorObject'
      - type: "object"
        properties:
          code:
            type: "string"
          message:
            type: "string"
    AttributeDefinitionAlreadyExistsError:
      allOf:
      - $ref: '#/components/schemas/ErrorObject'
      - type: "object"
        properties:
          code:
            type: "string"
          message:
            type: "string"
          conflictingProductTypeId:
            type: "string"
          conflictingProductTypeName:
            type: "string"
          conflictingAttributeName:
            type: "string"
    AttributeDefinitionTypeConflictError:
      allOf:
      - $ref: '#/components/schemas/ErrorObject'
      - type: "object"
        properties:
          code:
            type: "string"
          message:
            type: "string"
          conflictingProductTypeId:
            type: "string"
          conflictingProductTypeName:
            type: "string"
          conflictingAttributeName:
            type: "string"
    AttributeNameDoesNotExistError:
      allOf:
      - $ref: '#/components/schemas/ErrorObject'
      - type: "object"
        properties:
          code:
            type: "string"
          message:
            type: "string"
          invalidAttributeName:
            type: "string"
    BadGatewayError:
      allOf:
      - $ref: '#/components/schemas/ErrorObject'
      - type: "object"
        properties:
          code:
            type: "string"
          message:
            type: "string"
    ConcurrentModificationError:
      allOf:
      - $ref: '#/components/schemas/ErrorObject'
      - type: "object"
        properties:
          code:
            type: "string"
          message:
            type: "string"
          currentVersion:
            type: "integer"
            format: "int64"
    DiscountCodeNonApplicableError:
      allOf:
      - $ref: '#/components/schemas/ErrorObject'
      - type: "object"
        properties:
          code:
            type: "string"
          message:
            type: "string"
          discountCode:
            type: "string"
          reason:
            type: "string"
          dicountCodeId:
            type: "string"
          validFrom:
            type: "string"
            format: "datetime"
          validUntil:
            type: "string"
            format: "datetime"
          validityCheckTime:
            type: "string"
            format: "datetime"
    DuplicateAttributeValueError:
      allOf:
      - $ref: '#/components/schemas/ErrorObject'
      - type: "object"
        properties:
          code:
            type: "string"
          message:
            type: "string"
          attribute:
            $ref: '#/components/schemas/Attribute'
    DuplicateAttributeValuesError:
      allOf:
      - $ref: '#/components/schemas/ErrorObject'
      - type: "object"
        properties:
          code:
            type: "string"
          message:
            type: "string"
          attributes:
            type: "array"
            items:
              $ref: '#/components/schemas/Attribute'
    DuplicateEnumValuesError:
      allOf:
      - $ref: '#/components/schemas/ErrorObject'
      - type: "object"
        properties:
          code:
            type: "string"
          message:
            type: "string"
          duplicates:
            type: "array"
            items:
              type: "string"
    DuplicateFieldError:
      allOf:
      - $ref: '#/components/schemas/ErrorObject'
      - type: "object"
        properties:
          code:
            type: "string"
          message:
            type: "string"
          field:
            type: "string"
          duplicateValue:
            anyOf:
              - type: "string"
              - type: "object"
              - type: "array"
                items:
                    type: "string"
              - type: "number"
              - type: "integer"
              - type: "boolean"
          conflictingResource:
            $ref: '#/components/schemas/Reference'
    DuplicateFieldWithConflictingResourceError:
      allOf:
      - $ref: '#/components/schemas/ErrorObject'
      - type: "object"
        properties:
          code:
            type: "string"
          message:
            type: "string"
          field:
            type: "string"
          duplicateValue:
            anyOf:
              - type: "string"
              - type: "object"
              - type: "array"
                items:
                    type: "string"
              - type: "number"
              - type: "integer"
              - type: "boolean"
          conflictingResource:
            $ref: '#/components/schemas/Reference'
    DuplicatePriceScopeError:
      allOf:
      - $ref: '#/components/schemas/ErrorObject'
      - type: "object"
        properties:
          code:
            type: "string"
          message:
            type: "string"
          conflictingPrices:
            type: "array"
            items:
              $ref: '#/components/schemas/Price'
    DuplicateVariantValuesError:
      allOf:
      - $ref: '#/components/schemas/ErrorObject'
      - type: "object"
        properties:
          code:
            type: "string"
          message:
            type: "string"
          variantValues:
            $ref: '#/components/schemas/VariantValues'
    EditPreviewFailedError:
      allOf:
      - $ref: '#/components/schemas/ErrorObject'
      - type: "object"
        properties:
          code:
            type: "string"
          message:
            type: "string"
          result:
            $ref: '#/components/schemas/OrderEditPreviewFailure'
    EnumKeyAlreadyExistsError:
      allOf:
      - $ref: '#/components/schemas/ErrorObject'
      - type: "object"
        properties:
          code:
            type: "string"
          message:
            type: "string"
          conflictingEnumKey:
            type: "string"
          conflictingAttributeName:
            type: "string"
    EnumKeyDoesNotExistError:
      allOf:
      - $ref: '#/components/schemas/ErrorObject'
      - type: "object"
        properties:
          code:
            type: "string"
          message:
            type: "string"
          conflictingEnumKey:
            type: "string"
          conflictingAttributeName:
            type: "string"
    EnumValueIsUsedError:
      allOf:
      - $ref: '#/components/schemas/ErrorObject'
      - type: "object"
        properties:
          code:
            type: "string"
          message:
            type: "string"
    EnumValuesMustMatchError:
      allOf:
      - $ref: '#/components/schemas/ErrorObject'
      - type: "object"
        properties:
          code:
            type: "string"
          message:
            type: "string"
    ErrorByExtension:
      type: "object"
      properties:
        id:
          type: "string"
        key:
          type: "string"
    ErrorObject:
      type: "object"
      discriminator:
        propertyName: code
        mapping:
          access_denied: '#/components/schemas/AccessDeniedError'
          AnonymousIdAlreadyInUse: '#/components/schemas/AnonymousIdAlreadyInUseError'
          AttributeDefinitionAlreadyExists: '#/components/schemas/AttributeDefinitionAlreadyExistsError'
          AttributeDefinitionTypeConflict: '#/components/schemas/AttributeDefinitionTypeConflictError'
          AttributeNameDoesNotExist: '#/components/schemas/AttributeNameDoesNotExistError'
          BadGateway: '#/components/schemas/BadGatewayError'
          ConcurrentModification: '#/components/schemas/ConcurrentModificationError'
          DiscountCodeNonApplicable: '#/components/schemas/DiscountCodeNonApplicableError'
          DuplicateAttributeValue: '#/components/schemas/DuplicateAttributeValueError'
          DuplicateAttributeValues: '#/components/schemas/DuplicateAttributeValuesError'
          DuplicateEnumValues: '#/components/schemas/DuplicateEnumValuesError'
          DuplicateField: '#/components/schemas/DuplicateFieldError'
          DuplicateFieldWithConflictingResource: '#/components/schemas/DuplicateFieldWithConflictingResourceError'
          DuplicatePriceScope: '#/components/schemas/DuplicatePriceScopeError'
          DuplicateVariantValues: '#/components/schemas/DuplicateVariantValuesError'
          EditPreviewFailed: '#/components/schemas/EditPreviewFailedError'
          EnumKeyAlreadyExists: '#/components/schemas/EnumKeyAlreadyExistsError'
          EnumKeyDoesNotExist: '#/components/schemas/EnumKeyDoesNotExistError'
          EnumValueIsUsed: '#/components/schemas/EnumValueIsUsedError'
          EnumValuesMustMatch: '#/components/schemas/EnumValuesMustMatchError'
          ExtensionBadResponse: '#/components/schemas/ExtensionBadResponseError'
          ExtensionNoResponse: '#/components/schemas/ExtensionNoResponseError'
          ExtensionUpdateActionsFailed: '#/components/schemas/ExtensionUpdateActionsFailedError'
          ExternalOAuthFailed: '#/components/schemas/ExternalOAuthFailedError'
          FeatureRemoved: '#/components/schemas/FeatureRemovedError'
          General: '#/components/schemas/GeneralError'
          insufficient_scope: '#/components/schemas/InsufficientScopeError'
          InternalConstraintViolated: '#/components/schemas/InternalConstraintViolatedError'
          InvalidCredentials: '#/components/schemas/InvalidCredentialsError'
          InvalidCurrentPassword: '#/components/schemas/InvalidCurrentPasswordError'
          InvalidField: '#/components/schemas/InvalidFieldError'
          InvalidInput: '#/components/schemas/InvalidInputError'
          InvalidItemShippingDetails: '#/components/schemas/InvalidItemShippingDetailsError'
          InvalidJsonInput: '#/components/schemas/InvalidJsonInputError'
          InvalidOperation: '#/components/schemas/InvalidOperationError'
          InvalidSubject: '#/components/schemas/InvalidSubjectError'
          invalid_token: '#/components/schemas/InvalidTokenError'
          LanguageUsedInStores: '#/components/schemas/LanguageUsedInStoresError'
          MatchingPriceNotFound: '#/components/schemas/MatchingPriceNotFoundError'
          MaxResourceLimitExceeded: '#/components/schemas/MaxResourceLimitExceededError'
          MissingRoleOnChannel: '#/components/schemas/MissingRoleOnChannelError'
          MissingTaxRateForCountry: '#/components/schemas/MissingTaxRateForCountryError'
          NoMatchingProductDiscountFound: '#/components/schemas/NoMatchingProductDiscountFoundError'
          NotEnabled: '#/components/schemas/NotEnabledError'
          ObjectNotFound: '#/components/schemas/ObjectNotFoundError'
          OutOfStock: '#/components/schemas/OutOfStockError'
          OverCapacity: '#/components/schemas/OverCapacityError'
          PendingOperation: '#/components/schemas/PendingOperationError'
          PriceChanged: '#/components/schemas/PriceChangedError'
          ProjectNotConfiguredForLanguages: '#/components/schemas/ProjectNotConfiguredForLanguagesError'
          QueryComplexityLimitExceeded: '#/components/schemas/QueryComplexityLimitExceededError'
          QueryTimedOut: '#/components/schemas/QueryTimedOutError'
          ReferenceExists: '#/components/schemas/ReferenceExistsError'
          ReferencedResourceNotFound: '#/components/schemas/ReferencedResourceNotFoundError'
          RequiredField: '#/components/schemas/RequiredFieldError'
          ResourceNotFound: '#/components/schemas/ResourceNotFoundError'
          ResourceSizeLimitExceeded: '#/components/schemas/ResourceSizeLimitExceededError'
          SearchDeactivated: '#/components/schemas/SearchDeactivatedError'
          SearchExecutionFailure: '#/components/schemas/SearchExecutionFailureError'
          SearchFacetPathNotFound: '#/components/schemas/SearchFacetPathNotFoundError'
          SearchIndexingInProgress: '#/components/schemas/SearchIndexingInProgressError'
          SemanticError: '#/components/schemas/SemanticErrorError'
          ShippingMethodDoesNotMatchCart: '#/components/schemas/ShippingMethodDoesNotMatchCartError'
          SyntaxError: '#/components/schemas/SyntaxErrorError'
          WeakPassword: '#/components/schemas/WeakPasswordError'
      properties:
        code:
          type: "string"
        message:
          type: "string"
    ErrorResponse:
      type: "object"
      properties:
        statusCode:
          type: "integer"
          format: "int32"
        message:
          type: "string"
        error:
          type: "string"
        error_description:
          type: "string"
        errors:
          type: "array"
          items:
            $ref: '#/components/schemas/ErrorObject'
    ExtensionBadResponseError:
      allOf:
      - $ref: '#/components/schemas/ErrorObject'
      - type: "object"
        properties:
          code:
            type: "string"
          message:
            type: "string"
          localizedMessage:
            $ref: '#/components/schemas/LocalizedString'
          extensionExtraInfo:
            type: "string"
            additionalProperties: true
          errorByExtension:
            $ref: '#/components/schemas/ErrorByExtension'
    ExtensionNoResponseError:
      allOf:
      - $ref: '#/components/schemas/ErrorObject'
      - type: "object"
        properties:
          code:
            type: "string"
          message:
            type: "string"
          extensionId:
            type: "string"
          extensionKey:
            type: "string"
    ExtensionUpdateActionsFailedError:
      allOf:
      - $ref: '#/components/schemas/ErrorObject'
      - type: "object"
        properties:
          code:
            type: "string"
          message:
            type: "string"
          localizedMessage:
            $ref: '#/components/schemas/LocalizedString'
          extensionExtraInfo:
            type: "string"
            additionalProperties: true
          errorByExtension:
            $ref: '#/components/schemas/ErrorByExtension'
    ExternalOAuthFailedError:
      allOf:
      - $ref: '#/components/schemas/ErrorObject'
      - type: "object"
        properties:
          code:
            type: "string"
          message:
            type: "string"
    FeatureRemovedError:
      allOf:
      - $ref: '#/components/schemas/ErrorObject'
      - type: "object"
        properties:
          code:
            type: "string"
          message:
            type: "string"
    GeneralError:
      allOf:
      - $ref: '#/components/schemas/ErrorObject'
      - type: "object"
        properties:
          code:
            type: "string"
          message:
            type: "string"
    InsufficientScopeError:
      allOf:
      - $ref: '#/components/schemas/ErrorObject'
      - type: "object"
        properties:
          code:
            type: "string"
          message:
            type: "string"
    InternalConstraintViolatedError:
      allOf:
      - $ref: '#/components/schemas/ErrorObject'
      - type: "object"
        properties:
          code:
            type: "string"
          message:
            type: "string"
    InvalidCredentialsError:
      allOf:
      - $ref: '#/components/schemas/ErrorObject'
      - type: "object"
        properties:
          code:
            type: "string"
          message:
            type: "string"
    InvalidCurrentPasswordError:
      allOf:
      - $ref: '#/components/schemas/ErrorObject'
      - type: "object"
        properties:
          code:
            type: "string"
          message:
            type: "string"
    InvalidFieldError:
      allOf:
      - $ref: '#/components/schemas/ErrorObject'
      - type: "object"
        properties:
          code:
            type: "string"
          message:
            type: "string"
          field:
            type: "string"
          invalidValue:
            anyOf:
              - type: "string"
              - type: "object"
              - type: "array"
                items:
                    type: "string"
              - type: "number"
              - type: "integer"
              - type: "boolean"
          allowedValues:
            type: "array"
            items:
              anyOf:
                - type: "string"
                - type: "object"
                - type: "array"
                  items:
                    type: "string"
                - type: "number"
                - type: "integer"
                - type: "boolean"
    InvalidInputError:
      allOf:
      - $ref: '#/components/schemas/ErrorObject'
      - type: "object"
        properties:
          code:
            type: "string"
          message:
            type: "string"
    InvalidItemShippingDetailsError:
      allOf:
      - $ref: '#/components/schemas/ErrorObject'
      - type: "object"
        properties:
          code:
            type: "string"
          message:
            type: "string"
          subject:
            type: "string"
          itemId:
            type: "string"
    InvalidJsonInputError:
      allOf:
      - $ref: '#/components/schemas/ErrorObject'
      - type: "object"
        properties:
          code:
            type: "string"
          message:
            type: "string"
    InvalidOperationError:
      allOf:
      - $ref: '#/components/schemas/ErrorObject'
      - type: "object"
        properties:
          code:
            type: "string"
          message:
            type: "string"
    InvalidSubjectError:
      allOf:
      - $ref: '#/components/schemas/ErrorObject'
      - type: "object"
        properties:
          code:
            type: "string"
          message:
            type: "string"
    InvalidTokenError:
      allOf:
      - $ref: '#/components/schemas/ErrorObject'
      - type: "object"
        properties:
          code:
            type: "string"
          message:
            type: "string"
    LanguageUsedInStoresError:
      allOf:
      - $ref: '#/components/schemas/ErrorObject'
      - type: "object"
        properties:
          code:
            type: "string"
          message:
            type: "string"
    MatchingPriceNotFoundError:
      allOf:
      - $ref: '#/components/schemas/ErrorObject'
      - type: "object"
        properties:
          code:
            type: "string"
          message:
            type: "string"
          productId:
            type: "string"
          variantId:
            type: "integer"
            format: "int32"
          currency:
            type: "string"
          country:
            type: "string"
          customerGroup:
            $ref: '#/components/schemas/CustomerGroupReference'
          channel:
            $ref: '#/components/schemas/ChannelReference'
    MaxResourceLimitExceededError:
      allOf:
      - $ref: '#/components/schemas/ErrorObject'
      - type: "object"
        properties:
          code:
            type: "string"
          message:
            type: "string"
          exceededResource:
            $ref: '#/components/schemas/ReferenceTypeId'
    MissingRoleOnChannelError:
      allOf:
      - $ref: '#/components/schemas/ErrorObject'
      - type: "object"
        properties:
          code:
            type: "string"
          message:
            type: "string"
          channel:
            $ref: '#/components/schemas/ChannelResourceIdentifier'
          missingRole:
            $ref: '#/components/schemas/ChannelRoleEnum'
    MissingTaxRateForCountryError:
      allOf:
      - $ref: '#/components/schemas/ErrorObject'
      - type: "object"
        properties:
          code:
            type: "string"
          message:
            type: "string"
          taxCategoryId:
            type: "string"
          country:
            type: "string"
          state:
            type: "string"
    NoMatchingProductDiscountFoundError:
      allOf:
      - $ref: '#/components/schemas/ErrorObject'
      - type: "object"
        properties:
          code:
            type: "string"
          message:
            type: "string"
    NotEnabledError:
      allOf:
      - $ref: '#/components/schemas/ErrorObject'
      - type: "object"
        properties:
          code:
            type: "string"
          message:
            type: "string"
    ObjectNotFoundError:
      allOf:
      - $ref: '#/components/schemas/ErrorObject'
      - type: "object"
        properties:
          code:
            type: "string"
          message:
            type: "string"
    OutOfStockError:
      allOf:
      - $ref: '#/components/schemas/ErrorObject'
      - type: "object"
        properties:
          code:
            type: "string"
          message:
            type: "string"
          lineItems:
            type: "array"
            items:
              type: "string"
          skus:
            type: "array"
            items:
              type: "string"
    OverCapacityError:
      allOf:
      - $ref: '#/components/schemas/ErrorObject'
      - type: "object"
        properties:
          code:
            type: "string"
          message:
            type: "string"
    PendingOperationError:
      allOf:
      - $ref: '#/components/schemas/ErrorObject'
      - type: "object"
        properties:
          code:
            type: "string"
          message:
            type: "string"
    PriceChangedError:
      allOf:
      - $ref: '#/components/schemas/ErrorObject'
      - type: "object"
        properties:
          code:
            type: "string"
          message:
            type: "string"
          lineItems:
            type: "array"
            items:
              type: "string"
          shipping:
            type: "boolean"
    ProjectNotConfiguredForLanguagesError:
      allOf:
      - $ref: '#/components/schemas/ErrorObject'
      - type: "object"
        properties:
          code:
            type: "string"
          message:
            type: "string"
          languages:
            type: "array"
            items:
              type: "string"
    QueryComplexityLimitExceededError:
      allOf:
      - $ref: '#/components/schemas/ErrorObject'
      - type: "object"
        properties:
          code:
            type: "string"
          message:
            type: "string"
    QueryTimedOutError:
      allOf:
      - $ref: '#/components/schemas/ErrorObject'
      - type: "object"
        properties:
          code:
            type: "string"
          message:
            type: "string"
    ReferenceExistsError:
      allOf:
      - $ref: '#/components/schemas/ErrorObject'
      - type: "object"
        properties:
          code:
            type: "string"
          message:
            type: "string"
          referencedBy:
            $ref: '#/components/schemas/ReferenceTypeId'
    ReferencedResourceNotFoundError:
      allOf:
      - $ref: '#/components/schemas/ErrorObject'
      - type: "object"
        properties:
          code:
            type: "string"
          message:
            type: "string"
          typeId:
            $ref: '#/components/schemas/ReferenceTypeId'
          id:
            type: "string"
          key:
            type: "string"
    RequiredFieldError:
      allOf:
      - $ref: '#/components/schemas/ErrorObject'
      - type: "object"
        properties:
          code:
            type: "string"
          message:
            type: "string"
          field:
            type: "string"
    ResourceNotFoundError:
      allOf:
      - $ref: '#/components/schemas/ErrorObject'
      - type: "object"
        properties:
          code:
            type: "string"
          message:
            type: "string"
    ResourceSizeLimitExceededError:
      allOf:
      - $ref: '#/components/schemas/ErrorObject'
      - type: "object"
        properties:
          code:
            type: "string"
          message:
            type: "string"
    SearchDeactivatedError:
      allOf:
      - $ref: '#/components/schemas/ErrorObject'
      - type: "object"
        properties:
          code:
            type: "string"
          message:
            type: "string"
    SearchExecutionFailureError:
      allOf:
      - $ref: '#/components/schemas/ErrorObject'
      - type: "object"
        properties:
          code:
            type: "string"
          message:
            type: "string"
    SearchFacetPathNotFoundError:
      allOf:
      - $ref: '#/components/schemas/ErrorObject'
      - type: "object"
        properties:
          code:
            type: "string"
          message:
            type: "string"
    SearchIndexingInProgressError:
      allOf:
      - $ref: '#/components/schemas/ErrorObject'
      - type: "object"
        properties:
          code:
            type: "string"
          message:
            type: "string"
    SemanticErrorError:
      allOf:
      - $ref: '#/components/schemas/ErrorObject'
      - type: "object"
        properties:
          code:
            type: "string"
          message:
            type: "string"
    ShippingMethodDoesNotMatchCartError:
      allOf:
      - $ref: '#/components/schemas/ErrorObject'
      - type: "object"
        properties:
          code:
            type: "string"
          message:
            type: "string"
    SyntaxErrorError:
      allOf:
      - $ref: '#/components/schemas/ErrorObject'
      - type: "object"
        properties:
          code:
            type: "string"
          message:
            type: "string"
    VariantValues:
      type: "object"
      properties:
        sku:
          type: "string"
        prices:
          type: "array"
          items:
            $ref: '#/components/schemas/PriceDraft'
        attributes:
          type: "array"
          items:
            $ref: '#/components/schemas/Attribute'
    WeakPasswordError:
      allOf:
      - $ref: '#/components/schemas/ErrorObject'
      - type: "object"
        properties:
          code:
            type: "string"
          message:
            type: "string"
    Extension:
      allOf:
      - $ref: '#/components/schemas/BaseResource'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          key:
            type: "string"
          destination:
            $ref: '#/components/schemas/ExtensionDestination'
          triggers:
            type: "array"
            items:
              $ref: '#/components/schemas/ExtensionTrigger'
          timeoutInMs:
            type: "integer"
            format: "int32"
    ExtensionAWSLambdaDestination:
      allOf:
      - $ref: '#/components/schemas/ExtensionDestination'
      - type: "object"
        properties:
          type:
            type: "string"
          arn:
            type: "string"
          accessKey:
            type: "string"
          accessSecret:
            type: "string"
    ExtensionAction:
      type: "string"
      enum:
      - Create
      - Update
      x-annotation-package: "Extension"
    ExtensionAuthorizationHeaderAuthentication:
      allOf:
      - $ref: '#/components/schemas/ExtensionHttpDestinationAuthentication'
      - type: "object"
        properties:
          type:
            type: "string"
          headerValue:
            type: "string"
    ExtensionAzureFunctionsAuthentication:
      allOf:
      - $ref: '#/components/schemas/ExtensionHttpDestinationAuthentication'
      - type: "object"
        properties:
          type:
            type: "string"
          key:
            type: "string"
    ExtensionDestination:
      type: "object"
      discriminator:
        propertyName: type
        mapping:
          AWSLambda: '#/components/schemas/ExtensionAWSLambdaDestination'
          HTTP: '#/components/schemas/ExtensionHttpDestination'
      properties:
        type:
          type: "string"
    ExtensionDraft:
      type: "object"
      properties:
        key:
          type: "string"
        destination:
          $ref: '#/components/schemas/ExtensionDestination'
        triggers:
          type: "array"
          items:
            $ref: '#/components/schemas/ExtensionTrigger'
        timeoutInMs:
          type: "integer"
          format: "int32"
    ExtensionHttpDestination:
      allOf:
      - $ref: '#/components/schemas/ExtensionDestination'
      - type: "object"
        properties:
          type:
            type: "string"
          url:
            type: "string"
          authentication:
            $ref: '#/components/schemas/ExtensionHttpDestinationAuthentication'
    ExtensionHttpDestinationAuthentication:
      type: "object"
      discriminator:
        propertyName: type
        mapping:
          AuthorizationHeader: '#/components/schemas/ExtensionAuthorizationHeaderAuthentication'
          AzureFunctions: '#/components/schemas/ExtensionAzureFunctionsAuthentication'
      properties:
        type:
          type: "string"
    ExtensionInput:
      type: "object"
      properties:
        action:
          $ref: '#/components/schemas/ExtensionAction'
        resource:
          $ref: '#/components/schemas/Reference'
    ExtensionPagedQueryResponse:
      type: "object"
      properties:
        limit:
          type: "integer"
          format: "int64"
        count:
          type: "integer"
          format: "int64"
        total:
          type: "integer"
          format: "int64"
        offset:
          type: "integer"
          format: "int64"
        results:
          type: "array"
          items:
            $ref: '#/components/schemas/Extension'
    ExtensionResourceTypeId:
      type: "string"
      enum:
      - cart
      - order
      - payment
      - customer
      x-annotation-package: "Extension"
    ExtensionTrigger:
      type: "object"
      properties:
        resourceTypeId:
          $ref: '#/components/schemas/ExtensionResourceTypeId'
        actions:
          type: "array"
          items:
            $ref: '#/components/schemas/ExtensionAction'
    ExtensionUpdate:
      type: "object"
      properties:
        version:
          type: "integer"
          format: "int64"
        actions:
          type: "array"
          items:
            $ref: '#/components/schemas/ExtensionUpdateAction'
    ExtensionUpdateAction:
      type: "object"
      discriminator:
        propertyName: action
        mapping:
          changeDestination: '#/components/schemas/ExtensionChangeDestinationAction'
          changeTriggers: '#/components/schemas/ExtensionChangeTriggersAction'
          setKey: '#/components/schemas/ExtensionSetKeyAction'
          setTimeoutInMs: '#/components/schemas/ExtensionSetTimeoutInMsAction'
      properties:
        action:
          type: "string"
    ExtensionChangeDestinationAction:
      allOf:
      - $ref: '#/components/schemas/ExtensionUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          destination:
            $ref: '#/components/schemas/ExtensionDestination'
    ExtensionChangeTriggersAction:
      allOf:
      - $ref: '#/components/schemas/ExtensionUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          triggers:
            type: "array"
            items:
              $ref: '#/components/schemas/ExtensionTrigger'
    ExtensionSetKeyAction:
      allOf:
      - $ref: '#/components/schemas/ExtensionUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          key:
            type: "string"
    ExtensionSetTimeoutInMsAction:
      allOf:
      - $ref: '#/components/schemas/ExtensionUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          timeoutInMs:
            type: "integer"
            format: "int32"
    GraphQLError:
      type: "object"
      properties:
        message:
          type: "string"
        locations:
          type: "array"
          items:
            $ref: '#/components/schemas/GraphQLErrorLocation'
        path:
          type: "array"
          items:
            anyOf:
              - type: "string"
              - type: "object"
              - type: "array"
                items:
                    type: "string"
              - type: "number"
              - type: "integer"
              - type: "boolean"
    GraphQLErrorLocation:
      type: "object"
      properties:
        line:
          type: "integer"
          format: "int32"
        column:
          type: "integer"
          format: "int32"
    GraphQLRequest:
      type: "object"
      properties:
        query:
          type: "string"
        operationName:
          type: "string"
        variables:
          $ref: '#/components/schemas/GraphQLVariablesMap'
    GraphQLResponse:
      type: "object"
      properties:
        data:
          anyOf:
            - type: "string"
            - type: "object"
            - type: "array"
              items:
                type: "string"
            - type: "number"
            - type: "integer"
            - type: "boolean"
        errors:
          type: "array"
          items:
            $ref: '#/components/schemas/GraphQLError'
    GraphQLVariablesMap:
      type: "object"
      additionalProperties:
        type: "string"
    InventoryEntry:
      allOf:
      - $ref: '#/components/schemas/BaseResource'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          sku:
            type: "string"
          supplyChannel:
            $ref: '#/components/schemas/ChannelReference'
          quantityOnStock:
            type: "integer"
            format: "int64"
          availableQuantity:
            type: "integer"
            format: "int64"
          restockableInDays:
            type: "integer"
            format: "int64"
          expectedDelivery:
            type: "string"
            format: "datetime"
          custom:
            $ref: '#/components/schemas/CustomFields'
    InventoryEntryDraft:
      type: "object"
      properties:
        sku:
          type: "string"
        supplyChannel:
          $ref: '#/components/schemas/ChannelResourceIdentifier'
        quantityOnStock:
          type: "integer"
          format: "int64"
        restockableInDays:
          type: "integer"
          format: "int64"
        expectedDelivery:
          type: "string"
          format: "datetime"
        custom:
          $ref: '#/components/schemas/CustomFieldsDraft'
    InventoryEntryReference:
      allOf:
      - $ref: '#/components/schemas/Reference'
      - type: "object"
        properties:
          typeId:
            $ref: '#/components/schemas/ReferenceTypeId'
          id:
            type: "string"
          obj:
            $ref: '#/components/schemas/InventoryEntry'
    InventoryEntryResourceIdentifier:
      allOf:
      - $ref: '#/components/schemas/ResourceIdentifier'
      - type: "object"
        properties:
          typeId:
            $ref: '#/components/schemas/ReferenceTypeId'
          id:
            type: "string"
          key:
            type: "string"
    InventoryEntryUpdate:
      type: "object"
      properties:
        version:
          type: "integer"
          format: "int64"
        actions:
          type: "array"
          items:
            $ref: '#/components/schemas/InventoryEntryUpdateAction'
    InventoryEntryUpdateAction:
      type: "object"
      discriminator:
        propertyName: action
        mapping:
          addQuantity: '#/components/schemas/InventoryEntryAddQuantityAction'
          changeQuantity: '#/components/schemas/InventoryEntryChangeQuantityAction'
          removeQuantity: '#/components/schemas/InventoryEntryRemoveQuantityAction'
          setCustomField: '#/components/schemas/InventoryEntrySetCustomFieldAction'
          setCustomType: '#/components/schemas/InventoryEntrySetCustomTypeAction'
          setExpectedDelivery: '#/components/schemas/InventoryEntrySetExpectedDeliveryAction'
          setRestockableInDays: '#/components/schemas/InventoryEntrySetRestockableInDaysAction'
          setSupplyChannel: '#/components/schemas/InventoryEntrySetSupplyChannelAction'
      properties:
        action:
          type: "string"
    InventoryPagedQueryResponse:
      type: "object"
      properties:
        limit:
          type: "integer"
          format: "int64"
        count:
          type: "integer"
          format: "int64"
        total:
          type: "integer"
          format: "int64"
        offset:
          type: "integer"
          format: "int64"
        results:
          type: "array"
          items:
            $ref: '#/components/schemas/InventoryEntry'
    InventoryEntryAddQuantityAction:
      allOf:
      - $ref: '#/components/schemas/InventoryEntryUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          quantity:
            type: "integer"
            format: "int64"
    InventoryEntryChangeQuantityAction:
      allOf:
      - $ref: '#/components/schemas/InventoryEntryUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          quantity:
            type: "integer"
            format: "int64"
    InventoryEntryRemoveQuantityAction:
      allOf:
      - $ref: '#/components/schemas/InventoryEntryUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          quantity:
            type: "integer"
            format: "int64"
    InventoryEntrySetCustomFieldAction:
      allOf:
      - $ref: '#/components/schemas/InventoryEntryUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          name:
            type: "string"
          value:
            anyOf:
              - type: "string"
              - type: "object"
              - type: "array"
                items:
                    type: "string"
              - type: "number"
              - type: "integer"
              - type: "boolean"
    InventoryEntrySetCustomTypeAction:
      allOf:
      - $ref: '#/components/schemas/InventoryEntryUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          type:
            $ref: '#/components/schemas/TypeResourceIdentifier'
          fields:
            $ref: '#/components/schemas/FieldContainer'
    InventoryEntrySetExpectedDeliveryAction:
      allOf:
      - $ref: '#/components/schemas/InventoryEntryUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          expectedDelivery:
            type: "string"
            format: "datetime"
    InventoryEntrySetRestockableInDaysAction:
      allOf:
      - $ref: '#/components/schemas/InventoryEntryUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          restockableInDays:
            type: "integer"
            format: "int64"
    InventoryEntrySetSupplyChannelAction:
      allOf:
      - $ref: '#/components/schemas/InventoryEntryUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          supplyChannel:
            $ref: '#/components/schemas/ChannelResourceIdentifier'
    MyCartDraft:
      type: "object"
      properties:
        currency:
          $ref: '#/components/schemas/CurrencyCode'
        customerEmail:
          type: "string"
        country:
          type: "string"
        inventoryMode:
          $ref: '#/components/schemas/InventoryMode'
        lineItems:
          type: "array"
          items:
            $ref: '#/components/schemas/MyLineItemDraft'
        shippingAddress:
          $ref: '#/components/schemas/BaseAddress'
        billingAddress:
          $ref: '#/components/schemas/BaseAddress'
        shippingMethod:
          $ref: '#/components/schemas/ShippingMethodResourceIdentifier'
        custom:
          $ref: '#/components/schemas/CustomFieldsDraft'
        locale:
          type: "string"
        taxMode:
          $ref: '#/components/schemas/TaxMode'
        deleteDaysAfterLastModification:
          type: "integer"
          format: "int64"
        itemShippingAddresses:
          type: "array"
          items:
            $ref: '#/components/schemas/BaseAddress'
        store:
          $ref: '#/components/schemas/StoreKeyReference'
        discountCodes:
          type: "array"
          items:
            $ref: '#/components/schemas/DiscountCodeInfo'
    MyCartUpdate:
      type: "object"
      properties:
        version:
          type: "integer"
          format: "int64"
        actions:
          type: "array"
          items:
            $ref: '#/components/schemas/MyCartUpdateAction'
    MyCartUpdateAction:
      type: "object"
      discriminator:
        propertyName: action
        mapping:
          addDiscountCode: '#/components/schemas/MyCartAddDiscountCodeAction'
          addItemShippingAddress: '#/components/schemas/MyCartAddItemShippingAddressAction'
          addLineItem: '#/components/schemas/MyCartAddLineItemAction'
          addPayment: '#/components/schemas/MyCartAddPaymentAction'
          applyDeltaToLineItemShippingDetailsTargets: '#/components/schemas/MyCartApplyDeltaToLineItemShippingDetailsTargetsAction'
          changeLineItemQuantity: '#/components/schemas/MyCartChangeLineItemQuantityAction'
          changeTaxMode: '#/components/schemas/MyCartChangeTaxModeAction'
          recalculate: '#/components/schemas/MyCartRecalculateAction'
          removeDiscountCode: '#/components/schemas/MyCartRemoveDiscountCodeAction'
          removeItemShippingAddress: '#/components/schemas/MyCartRemoveItemShippingAddressAction'
          removeLineItem: '#/components/schemas/MyCartRemoveLineItemAction'
          removePayment: '#/components/schemas/MyCartRemovePaymentAction'
          setBillingAddress: '#/components/schemas/MyCartSetBillingAddressAction'
          setCountry: '#/components/schemas/MyCartSetCountryAction'
          setCustomField: '#/components/schemas/MyCartSetCustomFieldAction'
          setCustomType: '#/components/schemas/MyCartSetCustomTypeAction'
          setCustomerEmail: '#/components/schemas/MyCartSetCustomerEmailAction'
          setDeleteDaysAfterLastModification: '#/components/schemas/MyCartSetDeleteDaysAfterLastModificationAction'
          setLineItemCustomField: '#/components/schemas/MyCartSetLineItemCustomFieldAction'
          setLineItemCustomType: '#/components/schemas/MyCartSetLineItemCustomTypeAction'
          setLineItemDistributionChannel: '#/components/schemas/MyCartSetLineItemDistributionChannelAction'
          setLineItemShippingDetails: '#/components/schemas/MyCartSetLineItemShippingDetailsAction'
          setLineItemSupplyChannel: '#/components/schemas/MyCartSetLineItemSupplyChannelAction'
          setLocale: '#/components/schemas/MyCartSetLocaleAction'
          setShippingAddress: '#/components/schemas/MyCartSetShippingAddressAction'
          setShippingMethod: '#/components/schemas/MyCartSetShippingMethodAction'
          updateItemShippingAddress: '#/components/schemas/MyCartUpdateItemShippingAddressAction'
      properties:
        action:
          type: "string"
    MyCustomerDraft:
      type: "object"
      properties:
        email:
          type: "string"
        password:
          type: "string"
        firstName:
          type: "string"
        lastName:
          type: "string"
        middleName:
          type: "string"
        title:
          type: "string"
        dateOfBirth:
          type: "string"
          format: "date-only"
        companyName:
          type: "string"
        vatId:
          type: "string"
        addresses:
          type: "array"
          items:
            $ref: '#/components/schemas/BaseAddress'
        defaultShippingAddress:
          type: "integer"
          format: "int64"
        defaultBillingAddress:
          type: "integer"
          format: "int64"
        custom:
          $ref: '#/components/schemas/CustomFields'
        locale:
          type: "string"
        stores:
          type: "array"
          items:
            $ref: '#/components/schemas/StoreResourceIdentifier'
    MyCustomerUpdate:
      type: "object"
      properties:
        version:
          type: "integer"
          format: "int64"
        actions:
          type: "array"
          items:
            $ref: '#/components/schemas/MyCustomerUpdateAction'
    MyCustomerUpdateAction:
      type: "object"
      discriminator:
        propertyName: action
        mapping:
          addAddress: '#/components/schemas/MyCustomerAddAddressAction'
          addBillingAddressId: '#/components/schemas/MyCustomerAddBillingAddressIdAction'
          addShippingAddressId: '#/components/schemas/MyCustomerAddShippingAddressIdAction'
          changeAddress: '#/components/schemas/MyCustomerChangeAddressAction'
          changeEmail: '#/components/schemas/MyCustomerChangeEmailAction'
          removeAddress: '#/components/schemas/MyCustomerRemoveAddressAction'
          removeBillingAddressId: '#/components/schemas/MyCustomerRemoveBillingAddressIdAction'
          removeShippingAddressId: '#/components/schemas/MyCustomerRemoveShippingAddressIdAction'
          setCompanyName: '#/components/schemas/MyCustomerSetCompanyNameAction'
          setCustomField: '#/components/schemas/MyCustomerSetCustomFieldAction'
          setCustomType: '#/components/schemas/MyCustomerSetCustomTypeAction'
          setDateOfBirth: '#/components/schemas/MyCustomerSetDateOfBirthAction'
          setDefaultBillingAddress: '#/components/schemas/MyCustomerSetDefaultBillingAddressAction'
          setDefaultShippingAddress: '#/components/schemas/MyCustomerSetDefaultShippingAddressAction'
          setFirstName: '#/components/schemas/MyCustomerSetFirstNameAction'
          setLastName: '#/components/schemas/MyCustomerSetLastNameAction'
          setLocale: '#/components/schemas/MyCustomerSetLocaleAction'
          setMiddleName: '#/components/schemas/MyCustomerSetMiddleNameAction'
          setSalutation: '#/components/schemas/MyCustomerSetSalutationAction'
          setTitle: '#/components/schemas/MyCustomerSetTitleAction'
          setVatId: '#/components/schemas/MyCustomerSetVatIdAction'
      properties:
        action:
          type: "string"
    MyLineItemDraft:
      type: "object"
      properties:
        productId:
          type: "string"
        variantId:
          type: "integer"
          format: "int64"
        quantity:
          type: "integer"
          format: "int64"
        addedAt:
          type: "string"
          format: "datetime"
        supplyChannel:
          $ref: '#/components/schemas/ChannelResourceIdentifier'
        distributionChannel:
          $ref: '#/components/schemas/ChannelResourceIdentifier'
        custom:
          $ref: '#/components/schemas/CustomFieldsDraft'
        shippingDetails:
          $ref: '#/components/schemas/ItemShippingDetailsDraft'
        sku:
          type: "string"
    MyOrderFromCartDraft:
      type: "object"
      properties:
        id:
          type: "string"
        version:
          type: "integer"
          format: "int64"
    MyPayment:
      type: "object"
      properties:
        id:
          type: "string"
        version:
          type: "integer"
          format: "int64"
        customer:
          $ref: '#/components/schemas/CustomerReference'
        anonymousId:
          type: "string"
        amountPlanned:
          $ref: '#/components/schemas/TypedMoney'
        paymentMethodInfo:
          $ref: '#/components/schemas/PaymentMethodInfo'
        transactions:
          type: "array"
          items:
            $ref: '#/components/schemas/Transaction'
        custom:
          $ref: '#/components/schemas/CustomFields'
    MyPaymentDraft:
      type: "object"
      properties:
        amountPlanned:
          $ref: '#/components/schemas/Money'
        paymentMethodInfo:
          $ref: '#/components/schemas/PaymentMethodInfo'
        custom:
          $ref: '#/components/schemas/CustomFieldsDraft'
        transaction:
          $ref: '#/components/schemas/MyTransactionDraft'
    MyPaymentPagedQueryResponse:
      type: "object"
      properties:
        limit:
          type: "integer"
          format: "int64"
        count:
          type: "integer"
          format: "int64"
        total:
          type: "integer"
          format: "int64"
        offset:
          type: "integer"
          format: "int64"
        results:
          type: "array"
          items:
            $ref: '#/components/schemas/MyPayment'
    MyPaymentUpdate:
      type: "object"
      properties:
        version:
          type: "integer"
          format: "int64"
        actions:
          type: "array"
          items:
            $ref: '#/components/schemas/MyPaymentUpdateAction'
    MyPaymentUpdateAction:
      type: "object"
      discriminator:
        propertyName: action
        mapping:
          addTransaction: '#/components/schemas/MyPaymentAddTransactionAction'
          changeAmountPlanned: '#/components/schemas/MyPaymentChangeAmountPlannedAction'
          setCustomField: '#/components/schemas/MyPaymentSetCustomFieldAction'
          setMethodInfoInterface: '#/components/schemas/MyPaymentSetMethodInfoInterfaceAction'
          setMethodInfoMethod: '#/components/schemas/MyPaymentSetMethodInfoMethodAction'
          setMethodInfoName: '#/components/schemas/MyPaymentSetMethodInfoNameAction'
          setTransactionCustomField: '#/components/schemas/MyPaymentSetTransactionCustomFieldAction'
      properties:
        action:
          type: "string"
    MyShoppingListDraft:
      type: "object"
      properties:
        name:
          $ref: '#/components/schemas/LocalizedString'
        description:
          $ref: '#/components/schemas/LocalizedString'
        lineItems:
          type: "array"
          items:
            $ref: '#/components/schemas/ShoppingListLineItemDraft'
        textLineItems:
          type: "array"
          items:
            $ref: '#/components/schemas/TextLineItemDraft'
        custom:
          $ref: '#/components/schemas/CustomFieldsDraft'
        deleteDaysAfterLastModification:
          type: "integer"
          format: "int64"
        store:
          $ref: '#/components/schemas/StoreResourceIdentifier'
    MyShoppingListUpdate:
      type: "object"
      properties:
        version:
          type: "integer"
          format: "int64"
        actions:
          type: "array"
          items:
            $ref: '#/components/schemas/MyShoppingListUpdateAction'
    MyShoppingListUpdateAction:
      type: "object"
      discriminator:
        propertyName: action
        mapping:
          addLineItem: '#/components/schemas/MyShoppingListAddLineItemAction'
          addTextLineItem: '#/components/schemas/MyShoppingListAddTextLineItemAction'
          changeLineItemQuantity: '#/components/schemas/MyShoppingListChangeLineItemQuantityAction'
          changeLineItemsOrder: '#/components/schemas/MyShoppingListChangeLineItemsOrderAction'
          changeName: '#/components/schemas/MyShoppingListChangeNameAction'
          changeTextLineItemName: '#/components/schemas/MyShoppingListChangeTextLineItemNameAction'
          changeTextLineItemQuantity: '#/components/schemas/MyShoppingListChangeTextLineItemQuantityAction'
          changeTextLineItemsOrder: '#/components/schemas/MyShoppingListChangeTextLineItemsOrderAction'
          removeLineItem: '#/components/schemas/MyShoppingListRemoveLineItemAction'
          removeTextLineItem: '#/components/schemas/MyShoppingListRemoveTextLineItemAction'
          setCustomField: '#/components/schemas/MyShoppingListSetCustomFieldAction'
          setCustomType: '#/components/schemas/MyShoppingListSetCustomTypeAction'
          setDeleteDaysAfterLastModification: '#/components/schemas/MyShoppingListSetDeleteDaysAfterLastModificationAction'
          setDescription: '#/components/schemas/MyShoppingListSetDescriptionAction'
          setLineItemCustomField: '#/components/schemas/MyShoppingListSetLineItemCustomFieldAction'
          setLineItemCustomType: '#/components/schemas/MyShoppingListSetLineItemCustomTypeAction'
          setTextLineItemCustomField: '#/components/schemas/MyShoppingListSetTextLineItemCustomFieldAction'
          setTextLineItemCustomType: '#/components/schemas/MyShoppingListSetTextLineItemCustomTypeAction'
          setTextLineItemDescription: '#/components/schemas/MyShoppingListSetTextLineItemDescriptionAction'
      properties:
        action:
          type: "string"
    MyTransactionDraft:
      type: "object"
      properties:
        timestamp:
          type: "string"
          format: "datetime"
        type:
          $ref: '#/components/schemas/TransactionType'
        amount:
          $ref: '#/components/schemas/Money'
        interactionId:
          type: "string"
        custom:
          $ref: '#/components/schemas/CustomFields'
    MyCartAddDiscountCodeAction:
      allOf:
      - $ref: '#/components/schemas/MyCartUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          code:
            type: "string"
    MyCartAddItemShippingAddressAction:
      allOf:
      - $ref: '#/components/schemas/MyCartUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          address:
            $ref: '#/components/schemas/BaseAddress'
    MyCartAddLineItemAction:
      allOf:
      - $ref: '#/components/schemas/MyCartUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          custom:
            $ref: '#/components/schemas/CustomFieldsDraft'
          distributionChannel:
            $ref: '#/components/schemas/ChannelResourceIdentifier'
          externalTaxRate:
            $ref: '#/components/schemas/ExternalTaxRateDraft'
          productId:
            type: "string"
          variantId:
            type: "integer"
            format: "int64"
          sku:
            type: "string"
          quantity:
            type: "integer"
            format: "int64"
          supplyChannel:
            $ref: '#/components/schemas/ChannelResourceIdentifier'
          externalPrice:
            $ref: '#/components/schemas/Money'
          externalTotalPrice:
            $ref: '#/components/schemas/ExternalLineItemTotalPrice'
          shippingDetails:
            $ref: '#/components/schemas/ItemShippingDetailsDraft'
          addedAt:
            type: "string"
            format: "datetime"
    MyCartAddPaymentAction:
      allOf:
      - $ref: '#/components/schemas/MyCartUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          payment:
            $ref: '#/components/schemas/PaymentResourceIdentifier'
    MyCartApplyDeltaToLineItemShippingDetailsTargetsAction:
      allOf:
      - $ref: '#/components/schemas/MyCartUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          lineItemId:
            type: "string"
          targetsDelta:
            type: "array"
            items:
              $ref: '#/components/schemas/ItemShippingTarget'
    MyCartChangeLineItemQuantityAction:
      allOf:
      - $ref: '#/components/schemas/MyCartUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          lineItemId:
            type: "string"
          quantity:
            type: "integer"
            format: "int64"
          externalPrice:
            $ref: '#/components/schemas/Money'
          externalTotalPrice:
            $ref: '#/components/schemas/ExternalLineItemTotalPrice'
    MyCartChangeTaxModeAction:
      allOf:
      - $ref: '#/components/schemas/MyCartUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          taxMode:
            $ref: '#/components/schemas/TaxMode'
    MyCartRecalculateAction:
      allOf:
      - $ref: '#/components/schemas/MyCartUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          updateProductData:
            type: "boolean"
    MyCartRemoveDiscountCodeAction:
      allOf:
      - $ref: '#/components/schemas/MyCartUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          discountCode:
            $ref: '#/components/schemas/DiscountCodeReference'
    MyCartRemoveItemShippingAddressAction:
      allOf:
      - $ref: '#/components/schemas/MyCartUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          addressKey:
            type: "string"
    MyCartRemoveLineItemAction:
      allOf:
      - $ref: '#/components/schemas/MyCartUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          lineItemId:
            type: "string"
          quantity:
            type: "integer"
            format: "int64"
          externalPrice:
            $ref: '#/components/schemas/Money'
          externalTotalPrice:
            $ref: '#/components/schemas/ExternalLineItemTotalPrice'
          shippingDetailsToRemove:
            $ref: '#/components/schemas/ItemShippingDetailsDraft'
    MyCartRemovePaymentAction:
      allOf:
      - $ref: '#/components/schemas/MyCartUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          payment:
            $ref: '#/components/schemas/PaymentResourceIdentifier'
    MyCartSetBillingAddressAction:
      allOf:
      - $ref: '#/components/schemas/MyCartUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          address:
            $ref: '#/components/schemas/BaseAddress'
    MyCartSetCountryAction:
      allOf:
      - $ref: '#/components/schemas/MyCartUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          country:
            $ref: '#/components/schemas/CountryCode'
    MyCartSetCustomFieldAction:
      allOf:
      - $ref: '#/components/schemas/MyCartUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          name:
            type: "string"
          value:
            anyOf:
              - type: "string"
              - type: "object"
              - type: "array"
                items:
                    type: "string"
              - type: "number"
              - type: "integer"
              - type: "boolean"
    MyCartSetCustomTypeAction:
      allOf:
      - $ref: '#/components/schemas/MyCartUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          type:
            $ref: '#/components/schemas/TypeResourceIdentifier'
          fields:
            $ref: '#/components/schemas/FieldContainer'
    MyCartSetCustomerEmailAction:
      allOf:
      - $ref: '#/components/schemas/MyCartUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          email:
            type: "string"
    MyCartSetDeleteDaysAfterLastModificationAction:
      allOf:
      - $ref: '#/components/schemas/MyCartUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          deleteDaysAfterLastModification:
            type: "integer"
            format: "int32"
    MyCartSetLineItemCustomFieldAction:
      allOf:
      - $ref: '#/components/schemas/MyCartUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          lineItemId:
            type: "string"
          name:
            type: "string"
          value:
            anyOf:
              - type: "string"
              - type: "object"
              - type: "array"
                items:
                    type: "string"
              - type: "number"
              - type: "integer"
              - type: "boolean"
    MyCartSetLineItemCustomTypeAction:
      allOf:
      - $ref: '#/components/schemas/MyCartUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          lineItemId:
            type: "string"
          type:
            $ref: '#/components/schemas/TypeResourceIdentifier'
          fields:
            $ref: '#/components/schemas/FieldContainer'
    MyCartSetLineItemDistributionChannelAction:
      allOf:
      - $ref: '#/components/schemas/MyCartUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          lineItemId:
            type: "string"
          distributionChannel:
            $ref: '#/components/schemas/ChannelResourceIdentifier'
    MyCartSetLineItemShippingDetailsAction:
      allOf:
      - $ref: '#/components/schemas/MyCartUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          lineItemId:
            type: "string"
          shippingDetails:
            $ref: '#/components/schemas/ItemShippingDetailsDraft'
    MyCartSetLineItemSupplyChannelAction:
      allOf:
      - $ref: '#/components/schemas/MyCartUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          lineItemId:
            type: "string"
          supplyChannel:
            $ref: '#/components/schemas/ChannelResourceIdentifier'
    MyCartSetLocaleAction:
      allOf:
      - $ref: '#/components/schemas/MyCartUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          locale:
            type: "string"
    MyCartSetShippingAddressAction:
      allOf:
      - $ref: '#/components/schemas/MyCartUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          address:
            $ref: '#/components/schemas/BaseAddress'
    MyCartSetShippingMethodAction:
      allOf:
      - $ref: '#/components/schemas/MyCartUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          shippingMethod:
            $ref: '#/components/schemas/ShippingMethodResourceIdentifier'
          externalTaxRate:
            $ref: '#/components/schemas/ExternalTaxRateDraft'
    MyCartUpdateItemShippingAddressAction:
      allOf:
      - $ref: '#/components/schemas/MyCartUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          address:
            $ref: '#/components/schemas/BaseAddress'
    MyCustomerAddAddressAction:
      allOf:
      - $ref: '#/components/schemas/MyCustomerUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          address:
            $ref: '#/components/schemas/BaseAddress'
    MyCustomerAddBillingAddressIdAction:
      allOf:
      - $ref: '#/components/schemas/MyCustomerUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          addressId:
            type: "string"
          addressKey:
            type: "string"
    MyCustomerAddShippingAddressIdAction:
      allOf:
      - $ref: '#/components/schemas/MyCustomerUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          addressId:
            type: "string"
          addressKey:
            type: "string"
    MyCustomerChangeAddressAction:
      allOf:
      - $ref: '#/components/schemas/MyCustomerUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          addressId:
            type: "string"
          addressKey:
            type: "string"
          address:
            $ref: '#/components/schemas/BaseAddress'
    MyCustomerChangeEmailAction:
      allOf:
      - $ref: '#/components/schemas/MyCustomerUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          email:
            type: "string"
    MyCustomerRemoveAddressAction:
      allOf:
      - $ref: '#/components/schemas/MyCustomerUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          addressId:
            type: "string"
          addressKey:
            type: "string"
    MyCustomerRemoveBillingAddressIdAction:
      allOf:
      - $ref: '#/components/schemas/MyCustomerUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          addressId:
            type: "string"
          addressKey:
            type: "string"
    MyCustomerRemoveShippingAddressIdAction:
      allOf:
      - $ref: '#/components/schemas/MyCustomerUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          addressId:
            type: "string"
          addressKey:
            type: "string"
    MyCustomerSetCompanyNameAction:
      allOf:
      - $ref: '#/components/schemas/MyCustomerUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          companyName:
            type: "string"
    MyCustomerSetCustomFieldAction:
      allOf:
      - $ref: '#/components/schemas/MyCustomerUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          name:
            type: "string"
          value:
            anyOf:
              - type: "string"
              - type: "object"
              - type: "array"
                items:
                    type: "string"
              - type: "number"
              - type: "integer"
              - type: "boolean"
    MyCustomerSetCustomTypeAction:
      allOf:
      - $ref: '#/components/schemas/MyCustomerUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          type:
            $ref: '#/components/schemas/TypeResourceIdentifier'
          fields:
            $ref: '#/components/schemas/FieldContainer'
    MyCustomerSetDateOfBirthAction:
      allOf:
      - $ref: '#/components/schemas/MyCustomerUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          dateOfBirth:
            type: "string"
            format: "date-only"
    MyCustomerSetDefaultBillingAddressAction:
      allOf:
      - $ref: '#/components/schemas/MyCustomerUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          addressId:
            type: "string"
          addressKey:
            type: "string"
    MyCustomerSetDefaultShippingAddressAction:
      allOf:
      - $ref: '#/components/schemas/MyCustomerUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          addressId:
            type: "string"
          addressKey:
            type: "string"
    MyCustomerSetFirstNameAction:
      allOf:
      - $ref: '#/components/schemas/MyCustomerUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          firstName:
            type: "string"
    MyCustomerSetLastNameAction:
      allOf:
      - $ref: '#/components/schemas/MyCustomerUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          lastName:
            type: "string"
    MyCustomerSetLocaleAction:
      allOf:
      - $ref: '#/components/schemas/MyCustomerUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          locale:
            type: "string"
    MyCustomerSetMiddleNameAction:
      allOf:
      - $ref: '#/components/schemas/MyCustomerUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          middleName:
            type: "string"
    MyCustomerSetSalutationAction:
      allOf:
      - $ref: '#/components/schemas/MyCustomerUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          salutation:
            type: "string"
    MyCustomerSetTitleAction:
      allOf:
      - $ref: '#/components/schemas/MyCustomerUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          title:
            type: "string"
    MyCustomerSetVatIdAction:
      allOf:
      - $ref: '#/components/schemas/MyCustomerUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          vatId:
            type: "string"
    MyPaymentAddTransactionAction:
      allOf:
      - $ref: '#/components/schemas/MyPaymentUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          transaction:
            $ref: '#/components/schemas/TransactionDraft'
    MyPaymentChangeAmountPlannedAction:
      allOf:
      - $ref: '#/components/schemas/MyPaymentUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          amount:
            $ref: '#/components/schemas/Money'
    MyPaymentSetCustomFieldAction:
      allOf:
      - $ref: '#/components/schemas/MyPaymentUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          name:
            type: "string"
          value:
            anyOf:
              - type: "string"
              - type: "object"
              - type: "array"
                items:
                    type: "string"
              - type: "number"
              - type: "integer"
              - type: "boolean"
    MyPaymentSetMethodInfoInterfaceAction:
      allOf:
      - $ref: '#/components/schemas/MyPaymentUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          interface:
            type: "string"
    MyPaymentSetMethodInfoMethodAction:
      allOf:
      - $ref: '#/components/schemas/MyPaymentUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          method:
            type: "string"
    MyPaymentSetMethodInfoNameAction:
      allOf:
      - $ref: '#/components/schemas/MyPaymentUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          name:
            $ref: '#/components/schemas/LocalizedString'
    MyPaymentSetTransactionCustomFieldAction:
      allOf:
      - $ref: '#/components/schemas/MyPaymentUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          name:
            type: "string"
          value:
            anyOf:
              - type: "string"
              - type: "object"
              - type: "array"
                items:
                    type: "string"
              - type: "number"
              - type: "integer"
              - type: "boolean"
    MyShoppingListAddLineItemAction:
      allOf:
      - $ref: '#/components/schemas/MyShoppingListUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          sku:
            type: "string"
          productId:
            type: "string"
          variantId:
            type: "integer"
            format: "int64"
          quantity:
            type: "integer"
            format: "int64"
          addedAt:
            type: "string"
            format: "datetime"
          custom:
            $ref: '#/components/schemas/CustomFieldsDraft'
    MyShoppingListAddTextLineItemAction:
      allOf:
      - $ref: '#/components/schemas/MyShoppingListUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          name:
            $ref: '#/components/schemas/LocalizedString'
          description:
            $ref: '#/components/schemas/LocalizedString'
          quantity:
            type: "integer"
            format: "int64"
          addedAt:
            type: "string"
            format: "datetime"
          custom:
            $ref: '#/components/schemas/CustomFieldsDraft'
    MyShoppingListChangeLineItemQuantityAction:
      allOf:
      - $ref: '#/components/schemas/MyShoppingListUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          lineItemId:
            type: "string"
          quantity:
            type: "integer"
            format: "int64"
    MyShoppingListChangeLineItemsOrderAction:
      allOf:
      - $ref: '#/components/schemas/MyShoppingListUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          lineItemOrder:
            type: "array"
            items:
              type: "string"
    MyShoppingListChangeNameAction:
      allOf:
      - $ref: '#/components/schemas/MyShoppingListUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          name:
            $ref: '#/components/schemas/LocalizedString'
    MyShoppingListChangeTextLineItemNameAction:
      allOf:
      - $ref: '#/components/schemas/MyShoppingListUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          textLineItemId:
            type: "string"
          name:
            $ref: '#/components/schemas/LocalizedString'
    MyShoppingListChangeTextLineItemQuantityAction:
      allOf:
      - $ref: '#/components/schemas/MyShoppingListUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          textLineItemId:
            type: "string"
          quantity:
            type: "integer"
            format: "int64"
    MyShoppingListChangeTextLineItemsOrderAction:
      allOf:
      - $ref: '#/components/schemas/MyShoppingListUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          textLineItemOrder:
            type: "array"
            items:
              type: "string"
    MyShoppingListRemoveLineItemAction:
      allOf:
      - $ref: '#/components/schemas/MyShoppingListUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          lineItemId:
            type: "string"
          quantity:
            type: "integer"
            format: "int64"
    MyShoppingListRemoveTextLineItemAction:
      allOf:
      - $ref: '#/components/schemas/MyShoppingListUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          textLineItemId:
            type: "string"
          quantity:
            type: "integer"
            format: "int64"
    MyShoppingListSetCustomFieldAction:
      allOf:
      - $ref: '#/components/schemas/MyShoppingListUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          name:
            type: "string"
          value:
            anyOf:
              - type: "string"
              - type: "object"
              - type: "array"
                items:
                    type: "string"
              - type: "number"
              - type: "integer"
              - type: "boolean"
    MyShoppingListSetCustomTypeAction:
      allOf:
      - $ref: '#/components/schemas/MyShoppingListUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          type:
            $ref: '#/components/schemas/TypeResourceIdentifier'
          fields:
            $ref: '#/components/schemas/FieldContainer'
    MyShoppingListSetDeleteDaysAfterLastModificationAction:
      allOf:
      - $ref: '#/components/schemas/MyShoppingListUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          deleteDaysAfterLastModification:
            type: "integer"
            format: "int64"
    MyShoppingListSetDescriptionAction:
      allOf:
      - $ref: '#/components/schemas/MyShoppingListUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          description:
            $ref: '#/components/schemas/LocalizedString'
    MyShoppingListSetLineItemCustomFieldAction:
      allOf:
      - $ref: '#/components/schemas/MyShoppingListUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          lineItemId:
            type: "string"
          name:
            type: "string"
          value:
            anyOf:
              - type: "string"
              - type: "object"
              - type: "array"
                items:
                    type: "string"
              - type: "number"
              - type: "integer"
              - type: "boolean"
    MyShoppingListSetLineItemCustomTypeAction:
      allOf:
      - $ref: '#/components/schemas/MyShoppingListUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          lineItemId:
            type: "string"
          type:
            $ref: '#/components/schemas/TypeResourceIdentifier'
          fields:
            $ref: '#/components/schemas/FieldContainer'
    MyShoppingListSetTextLineItemCustomFieldAction:
      allOf:
      - $ref: '#/components/schemas/MyShoppingListUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          textLineItemId:
            type: "string"
          name:
            type: "string"
          value:
            anyOf:
              - type: "string"
              - type: "object"
              - type: "array"
                items:
                    type: "string"
              - type: "number"
              - type: "integer"
              - type: "boolean"
    MyShoppingListSetTextLineItemCustomTypeAction:
      allOf:
      - $ref: '#/components/schemas/MyShoppingListUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          textLineItemId:
            type: "string"
          type:
            $ref: '#/components/schemas/TypeResourceIdentifier'
          fields:
            $ref: '#/components/schemas/FieldContainer'
    MyShoppingListSetTextLineItemDescriptionAction:
      allOf:
      - $ref: '#/components/schemas/MyShoppingListUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          textLineItemId:
            type: "string"
          description:
            $ref: '#/components/schemas/LocalizedString'
    CategoryCreatedMessage:
      allOf:
      - $ref: '#/components/schemas/Message'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          sequenceNumber:
            type: "integer"
            format: "int64"
          resource:
            $ref: '#/components/schemas/Reference'
          resourceVersion:
            type: "integer"
            format: "int64"
          type:
            type: "string"
          resourceUserProvidedIdentifiers:
            $ref: '#/components/schemas/UserProvidedIdentifiers'
          category:
            $ref: '#/components/schemas/Category'
    CategorySlugChangedMessage:
      allOf:
      - $ref: '#/components/schemas/Message'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          sequenceNumber:
            type: "integer"
            format: "int64"
          resource:
            $ref: '#/components/schemas/Reference'
          resourceVersion:
            type: "integer"
            format: "int64"
          type:
            type: "string"
          resourceUserProvidedIdentifiers:
            $ref: '#/components/schemas/UserProvidedIdentifiers'
          slug:
            $ref: '#/components/schemas/LocalizedString'
          oldSlug:
            $ref: '#/components/schemas/LocalizedString'
    ContainerAndKey:
      type: "object"
      properties:
        key:
          type: "string"
        container:
          type: "string"
    CustomLineItemStateTransitionMessage:
      allOf:
      - $ref: '#/components/schemas/Message'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          sequenceNumber:
            type: "integer"
            format: "int64"
          resource:
            $ref: '#/components/schemas/Reference'
          resourceVersion:
            type: "integer"
            format: "int64"
          type:
            type: "string"
          resourceUserProvidedIdentifiers:
            $ref: '#/components/schemas/UserProvidedIdentifiers'
          customLineItemId:
            type: "string"
          transitionDate:
            type: "string"
            format: "datetime"
          quantity:
            type: "integer"
            format: "int64"
          fromState:
            $ref: '#/components/schemas/StateReference'
          toState:
            $ref: '#/components/schemas/StateReference'
    CustomerAddressAddedMessage:
      allOf:
      - $ref: '#/components/schemas/Message'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          sequenceNumber:
            type: "integer"
            format: "int64"
          resource:
            $ref: '#/components/schemas/Reference'
          resourceVersion:
            type: "integer"
            format: "int64"
          type:
            type: "string"
          resourceUserProvidedIdentifiers:
            $ref: '#/components/schemas/UserProvidedIdentifiers'
          address:
            $ref: '#/components/schemas/Address'
    CustomerAddressChangedMessage:
      allOf:
      - $ref: '#/components/schemas/Message'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          sequenceNumber:
            type: "integer"
            format: "int64"
          resource:
            $ref: '#/components/schemas/Reference'
          resourceVersion:
            type: "integer"
            format: "int64"
          type:
            type: "string"
          resourceUserProvidedIdentifiers:
            $ref: '#/components/schemas/UserProvidedIdentifiers'
          address:
            $ref: '#/components/schemas/Address'
    CustomerAddressRemovedMessage:
      allOf:
      - $ref: '#/components/schemas/Message'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          sequenceNumber:
            type: "integer"
            format: "int64"
          resource:
            $ref: '#/components/schemas/Reference'
          resourceVersion:
            type: "integer"
            format: "int64"
          type:
            type: "string"
          resourceUserProvidedIdentifiers:
            $ref: '#/components/schemas/UserProvidedIdentifiers'
          address:
            $ref: '#/components/schemas/Address'
    CustomerCompanyNameSetMessage:
      allOf:
      - $ref: '#/components/schemas/Message'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          sequenceNumber:
            type: "integer"
            format: "int64"
          resource:
            $ref: '#/components/schemas/Reference'
          resourceVersion:
            type: "integer"
            format: "int64"
          type:
            type: "string"
          resourceUserProvidedIdentifiers:
            $ref: '#/components/schemas/UserProvidedIdentifiers'
          companyName:
            type: "string"
    CustomerCreatedMessage:
      allOf:
      - $ref: '#/components/schemas/Message'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          sequenceNumber:
            type: "integer"
            format: "int64"
          resource:
            $ref: '#/components/schemas/Reference'
          resourceVersion:
            type: "integer"
            format: "int64"
          type:
            type: "string"
          resourceUserProvidedIdentifiers:
            $ref: '#/components/schemas/UserProvidedIdentifiers'
          customer:
            $ref: '#/components/schemas/Customer'
    CustomerDateOfBirthSetMessage:
      allOf:
      - $ref: '#/components/schemas/Message'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          sequenceNumber:
            type: "integer"
            format: "int64"
          resource:
            $ref: '#/components/schemas/Reference'
          resourceVersion:
            type: "integer"
            format: "int64"
          type:
            type: "string"
          resourceUserProvidedIdentifiers:
            $ref: '#/components/schemas/UserProvidedIdentifiers'
          dateOfBirth:
            type: "string"
            format: "date-only"
    CustomerDeletedMessage:
      allOf:
      - $ref: '#/components/schemas/Message'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          sequenceNumber:
            type: "integer"
            format: "int64"
          resource:
            $ref: '#/components/schemas/Reference'
          resourceVersion:
            type: "integer"
            format: "int64"
          type:
            type: "string"
          resourceUserProvidedIdentifiers:
            $ref: '#/components/schemas/UserProvidedIdentifiers'
    CustomerEmailChangedMessage:
      allOf:
      - $ref: '#/components/schemas/Message'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          sequenceNumber:
            type: "integer"
            format: "int64"
          resource:
            $ref: '#/components/schemas/Reference'
          resourceVersion:
            type: "integer"
            format: "int64"
          type:
            type: "string"
          resourceUserProvidedIdentifiers:
            $ref: '#/components/schemas/UserProvidedIdentifiers'
          email:
            type: "string"
    CustomerEmailVerifiedMessage:
      allOf:
      - $ref: '#/components/schemas/Message'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          sequenceNumber:
            type: "integer"
            format: "int64"
          resource:
            $ref: '#/components/schemas/Reference'
          resourceVersion:
            type: "integer"
            format: "int64"
          type:
            type: "string"
          resourceUserProvidedIdentifiers:
            $ref: '#/components/schemas/UserProvidedIdentifiers'
    CustomerFirstNameSetMessage:
      allOf:
      - $ref: '#/components/schemas/Message'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          sequenceNumber:
            type: "integer"
            format: "int64"
          resource:
            $ref: '#/components/schemas/Reference'
          resourceVersion:
            type: "integer"
            format: "int64"
          type:
            type: "string"
          resourceUserProvidedIdentifiers:
            $ref: '#/components/schemas/UserProvidedIdentifiers'
          firstName:
            type: "string"
    CustomerGroupSetMessage:
      allOf:
      - $ref: '#/components/schemas/Message'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          sequenceNumber:
            type: "integer"
            format: "int64"
          resource:
            $ref: '#/components/schemas/Reference'
          resourceVersion:
            type: "integer"
            format: "int64"
          type:
            type: "string"
          resourceUserProvidedIdentifiers:
            $ref: '#/components/schemas/UserProvidedIdentifiers'
          customerGroup:
            $ref: '#/components/schemas/CustomerGroupReference'
    CustomerLastNameSetMessage:
      allOf:
      - $ref: '#/components/schemas/Message'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          sequenceNumber:
            type: "integer"
            format: "int64"
          resource:
            $ref: '#/components/schemas/Reference'
          resourceVersion:
            type: "integer"
            format: "int64"
          type:
            type: "string"
          resourceUserProvidedIdentifiers:
            $ref: '#/components/schemas/UserProvidedIdentifiers'
          lastName:
            type: "string"
    CustomerPasswordUpdatedMessage:
      allOf:
      - $ref: '#/components/schemas/Message'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          sequenceNumber:
            type: "integer"
            format: "int64"
          resource:
            $ref: '#/components/schemas/Reference'
          resourceVersion:
            type: "integer"
            format: "int64"
          type:
            type: "string"
          resourceUserProvidedIdentifiers:
            $ref: '#/components/schemas/UserProvidedIdentifiers'
          reset:
            type: "boolean"
    CustomerTitleSetMessage:
      allOf:
      - $ref: '#/components/schemas/Message'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          sequenceNumber:
            type: "integer"
            format: "int64"
          resource:
            $ref: '#/components/schemas/Reference'
          resourceVersion:
            type: "integer"
            format: "int64"
          type:
            type: "string"
          resourceUserProvidedIdentifiers:
            $ref: '#/components/schemas/UserProvidedIdentifiers'
          title:
            type: "string"
    DeliveryAddedMessage:
      allOf:
      - $ref: '#/components/schemas/Message'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          sequenceNumber:
            type: "integer"
            format: "int64"
          resource:
            $ref: '#/components/schemas/Reference'
          resourceVersion:
            type: "integer"
            format: "int64"
          type:
            type: "string"
          resourceUserProvidedIdentifiers:
            $ref: '#/components/schemas/UserProvidedIdentifiers'
          delivery:
            $ref: '#/components/schemas/Delivery'
    DeliveryAddressSetMessage:
      allOf:
      - $ref: '#/components/schemas/Message'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          sequenceNumber:
            type: "integer"
            format: "int64"
          resource:
            $ref: '#/components/schemas/Reference'
          resourceVersion:
            type: "integer"
            format: "int64"
          type:
            type: "string"
          resourceUserProvidedIdentifiers:
            $ref: '#/components/schemas/UserProvidedIdentifiers'
          deliveryId:
            type: "string"
          address:
            $ref: '#/components/schemas/Address'
          oldAddress:
            $ref: '#/components/schemas/Address'
    DeliveryItemsUpdatedMessage:
      allOf:
      - $ref: '#/components/schemas/Message'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          sequenceNumber:
            type: "integer"
            format: "int64"
          resource:
            $ref: '#/components/schemas/Reference'
          resourceVersion:
            type: "integer"
            format: "int64"
          type:
            type: "string"
          resourceUserProvidedIdentifiers:
            $ref: '#/components/schemas/UserProvidedIdentifiers'
          deliveryId:
            type: "string"
          items:
            type: "array"
            items:
              $ref: '#/components/schemas/DeliveryItem'
          oldItems:
            type: "array"
            items:
              $ref: '#/components/schemas/DeliveryItem'
    DeliveryRemovedMessage:
      allOf:
      - $ref: '#/components/schemas/Message'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          sequenceNumber:
            type: "integer"
            format: "int64"
          resource:
            $ref: '#/components/schemas/Reference'
          resourceVersion:
            type: "integer"
            format: "int64"
          type:
            type: "string"
          resourceUserProvidedIdentifiers:
            $ref: '#/components/schemas/UserProvidedIdentifiers'
          delivery:
            $ref: '#/components/schemas/Delivery'
    InventoryEntryCreatedMessage:
      allOf:
      - $ref: '#/components/schemas/Message'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          sequenceNumber:
            type: "integer"
            format: "int64"
          resource:
            $ref: '#/components/schemas/Reference'
          resourceVersion:
            type: "integer"
            format: "int64"
          type:
            type: "string"
          resourceUserProvidedIdentifiers:
            $ref: '#/components/schemas/UserProvidedIdentifiers'
          inventoryEntry:
            $ref: '#/components/schemas/InventoryEntry'
    InventoryEntryDeletedMessage:
      allOf:
      - $ref: '#/components/schemas/Message'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          sequenceNumber:
            type: "integer"
            format: "int64"
          resource:
            $ref: '#/components/schemas/Reference'
          resourceVersion:
            type: "integer"
            format: "int64"
          type:
            type: "string"
          resourceUserProvidedIdentifiers:
            $ref: '#/components/schemas/UserProvidedIdentifiers'
          sku:
            type: "string"
          supplyChannel:
            $ref: '#/components/schemas/ChannelReference'
    InventoryEntryQuantitySetMessage:
      allOf:
      - $ref: '#/components/schemas/Message'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          sequenceNumber:
            type: "integer"
            format: "int64"
          resource:
            $ref: '#/components/schemas/Reference'
          resourceVersion:
            type: "integer"
            format: "int64"
          type:
            type: "string"
          resourceUserProvidedIdentifiers:
            $ref: '#/components/schemas/UserProvidedIdentifiers'
          oldQuantityOnStock:
            type: "integer"
            format: "int64"
          newQuantityOnStock:
            type: "integer"
            format: "int64"
          oldAvailableQuantity:
            type: "integer"
            format: "int64"
          newAvailableQuantity:
            type: "integer"
            format: "int64"
          supplyChannel:
            $ref: '#/components/schemas/ChannelReference'
    LineItemStateTransitionMessage:
      allOf:
      - $ref: '#/components/schemas/Message'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          sequenceNumber:
            type: "integer"
            format: "int64"
          resource:
            $ref: '#/components/schemas/Reference'
          resourceVersion:
            type: "integer"
            format: "int64"
          type:
            type: "string"
          resourceUserProvidedIdentifiers:
            $ref: '#/components/schemas/UserProvidedIdentifiers'
          lineItemId:
            type: "string"
          transitionDate:
            type: "string"
            format: "datetime"
          quantity:
            type: "integer"
            format: "int64"
          fromState:
            $ref: '#/components/schemas/StateReference'
          toState:
            $ref: '#/components/schemas/StateReference'
    Message:
      allOf:
      - $ref: '#/components/schemas/BaseResource'
      - type: "object"
        discriminator:
          propertyName: type
          mapping:
            CategoryCreated: '#/components/schemas/CategoryCreatedMessage'
            CategorySlugChanged: '#/components/schemas/CategorySlugChangedMessage'
            CustomLineItemStateTransition: '#/components/schemas/CustomLineItemStateTransitionMessage'
            CustomerAddressAdded: '#/components/schemas/CustomerAddressAddedMessage'
            CustomerAddressChanged: '#/components/schemas/CustomerAddressChangedMessage'
            CustomerAddressRemoved: '#/components/schemas/CustomerAddressRemovedMessage'
            CustomerCompanyNameSet: '#/components/schemas/CustomerCompanyNameSetMessage'
            CustomerCreated: '#/components/schemas/CustomerCreatedMessage'
            CustomerDateOfBirthSet: '#/components/schemas/CustomerDateOfBirthSetMessage'
            CustomerDeleted: '#/components/schemas/CustomerDeletedMessage'
            CustomerEmailChanged: '#/components/schemas/CustomerEmailChangedMessage'
            CustomerEmailVerified: '#/components/schemas/CustomerEmailVerifiedMessage'
            CustomerFirstNameSet: '#/components/schemas/CustomerFirstNameSetMessage'
            CustomerGroupSet: '#/components/schemas/CustomerGroupSetMessage'
            CustomerLastNameSet: '#/components/schemas/CustomerLastNameSetMessage'
            CustomerPasswordUpdated: '#/components/schemas/CustomerPasswordUpdatedMessage'
            CustomerTitleSet: '#/components/schemas/CustomerTitleSetMessage'
            DeliveryAdded: '#/components/schemas/DeliveryAddedMessage'
            DeliveryAddressSet: '#/components/schemas/DeliveryAddressSetMessage'
            DeliveryItemsUpdated: '#/components/schemas/DeliveryItemsUpdatedMessage'
            DeliveryRemoved: '#/components/schemas/DeliveryRemovedMessage'
            InventoryEntryCreated: '#/components/schemas/InventoryEntryCreatedMessage'
            InventoryEntryDeleted: '#/components/schemas/InventoryEntryDeletedMessage'
            InventoryEntryQuantitySet: '#/components/schemas/InventoryEntryQuantitySetMessage'
            LineItemStateTransition: '#/components/schemas/LineItemStateTransitionMessage'
            OrderBillingAddressSet: '#/components/schemas/OrderBillingAddressSetMessage'
            OrderCreated: '#/components/schemas/OrderCreatedMessage'
            OrderCustomLineItemDiscountSet: '#/components/schemas/OrderCustomLineItemDiscountSetMessage'
            OrderCustomerEmailSet: '#/components/schemas/OrderCustomerEmailSetMessage'
            OrderCustomerGroupSet: '#/components/schemas/OrderCustomerGroupSetMessage'
            OrderCustomerSet: '#/components/schemas/OrderCustomerSetMessage'
            OrderDeleted: '#/components/schemas/OrderDeletedMessage'
            OrderDiscountCodeAdded: '#/components/schemas/OrderDiscountCodeAddedMessage'
            OrderDiscountCodeRemoved: '#/components/schemas/OrderDiscountCodeRemovedMessage'
            OrderDiscountCodeStateSet: '#/components/schemas/OrderDiscountCodeStateSetMessage'
            OrderEditApplied: '#/components/schemas/OrderEditAppliedMessage'
            OrderImported: '#/components/schemas/OrderImportedMessage'
            OrderLineItemAdded: '#/components/schemas/OrderLineItemAddedMessage'
            OrderLineItemDiscountSet: '#/components/schemas/OrderLineItemDiscountSetMessage'
            OrderLineItemDistributionChannelSet: '#/components/schemas/OrderLineItemDistributionChannelSetMessage'
            OrderLineItemRemoved: '#/components/schemas/OrderLineItemRemovedMessage'
            OrderPaymentAdded: '#/components/schemas/OrderPaymentAddedMessage'
            OrderPaymentStateChanged: '#/components/schemas/OrderPaymentStateChangedMessage'
            ReturnInfoAdded: '#/components/schemas/OrderReturnInfoAddedMessage'
            ReturnInfoSet: '#/components/schemas/OrderReturnInfoSetMessage'
            OrderReturnShipmentStateChanged: '#/components/schemas/OrderReturnShipmentStateChangedMessage'
            OrderShipmentStateChanged: '#/components/schemas/OrderShipmentStateChangedMessage'
            OrderShippingAddressSet: '#/components/schemas/OrderShippingAddressSetMessage'
            OrderShippingInfoSet: '#/components/schemas/OrderShippingInfoSetMessage'
            OrderShippingRateInputSet: '#/components/schemas/OrderShippingRateInputSetMessage'
            OrderStateChanged: '#/components/schemas/OrderStateChangedMessage'
            OrderStateTransition: '#/components/schemas/OrderStateTransitionMessage'
            OrderStoreSet: '#/components/schemas/OrderStoreSetMessage'
            ParcelAddedToDelivery: '#/components/schemas/ParcelAddedToDeliveryMessage'
            ParcelItemsUpdated: '#/components/schemas/ParcelItemsUpdatedMessage'
            ParcelMeasurementsUpdated: '#/components/schemas/ParcelMeasurementsUpdatedMessage'
            ParcelRemovedFromDelivery: '#/components/schemas/ParcelRemovedFromDeliveryMessage'
            ParcelTrackingDataUpdated: '#/components/schemas/ParcelTrackingDataUpdatedMessage'
            PaymentCreated: '#/components/schemas/PaymentCreatedMessage'
            PaymentInteractionAdded: '#/components/schemas/PaymentInteractionAddedMessage'
            PaymentStatusInterfaceCodeSet: '#/components/schemas/PaymentStatusInterfaceCodeSetMessage'
            PaymentStatusStateTransition: '#/components/schemas/PaymentStatusStateTransitionMessage'
            PaymentTransactionAdded: '#/components/schemas/PaymentTransactionAddedMessage'
            PaymentTransactionStateChanged: '#/components/schemas/PaymentTransactionStateChangedMessage'
            ProductAddedToCategory: '#/components/schemas/ProductAddedToCategoryMessage'
            ProductCreated: '#/components/schemas/ProductCreatedMessage'
            ProductDeleted: '#/components/schemas/ProductDeletedMessage'
            ProductImageAdded: '#/components/schemas/ProductImageAddedMessage'
            ProductPriceDiscountsSet: '#/components/schemas/ProductPriceDiscountsSetMessage'
            ProductPriceExternalDiscountSet: '#/components/schemas/ProductPriceExternalDiscountSetMessage'
            ProductPublished: '#/components/schemas/ProductPublishedMessage'
            ProductRemovedFromCategory: '#/components/schemas/ProductRemovedFromCategoryMessage'
            ProductRevertedStagedChanges: '#/components/schemas/ProductRevertedStagedChangesMessage'
            ProductSelectionCreated: '#/components/schemas/ProductSelectionCreatedMessage'
            ProductSelectionDeleted: '#/components/schemas/ProductSelectionDeletedMessage'
            ProductSelectionProductAdded: '#/components/schemas/ProductSelectionProductAddedMessage'
            ProductSelectionProductRemoved: '#/components/schemas/ProductSelectionProductRemovedMessage'
            ProductSlugChanged: '#/components/schemas/ProductSlugChangedMessage'
            ProductStateTransition: '#/components/schemas/ProductStateTransitionMessage'
            ProductUnpublished: '#/components/schemas/ProductUnpublishedMessage'
            ProductVariantAdded: '#/components/schemas/ProductVariantAddedMessage'
            ProductVariantDeleted: '#/components/schemas/ProductVariantDeletedMessage'
            ReviewCreated: '#/components/schemas/ReviewCreatedMessage'
            ReviewRatingSet: '#/components/schemas/ReviewRatingSetMessage'
            ReviewStateTransition: '#/components/schemas/ReviewStateTransitionMessage'
            StoreCreated: '#/components/schemas/StoreCreatedMessage'
            StoreDeleted: '#/components/schemas/StoreDeletedMessage'
            StoreProductSelectionsChanged: '#/components/schemas/StoreProductSelectionsChangedMessage'
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          sequenceNumber:
            type: "integer"
            format: "int64"
          resource:
            $ref: '#/components/schemas/Reference'
          resourceVersion:
            type: "integer"
            format: "int64"
          type:
            type: "string"
          resourceUserProvidedIdentifiers:
            $ref: '#/components/schemas/UserProvidedIdentifiers'
    MessageConfiguration:
      type: "object"
      properties:
        enabled:
          type: "boolean"
        deleteDaysAfterCreation:
          type: "integer"
          format: "int32"
    MessageConfigurationDraft:
      type: "object"
      properties:
        enabled:
          type: "boolean"
        deleteDaysAfterCreation:
          type: "integer"
          format: "int32"
    MessagePagedQueryResponse:
      type: "object"
      properties:
        limit:
          type: "integer"
          format: "int64"
        count:
          type: "integer"
          format: "int64"
        total:
          type: "integer"
          format: "int64"
        offset:
          type: "integer"
          format: "int64"
        results:
          type: "array"
          items:
            $ref: '#/components/schemas/Message'
    OrderBillingAddressSetMessage:
      allOf:
      - $ref: '#/components/schemas/Message'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          sequenceNumber:
            type: "integer"
            format: "int64"
          resource:
            $ref: '#/components/schemas/Reference'
          resourceVersion:
            type: "integer"
            format: "int64"
          type:
            type: "string"
          resourceUserProvidedIdentifiers:
            $ref: '#/components/schemas/UserProvidedIdentifiers'
          address:
            $ref: '#/components/schemas/Address'
          oldAddress:
            $ref: '#/components/schemas/Address'
    OrderCreatedMessage:
      allOf:
      - $ref: '#/components/schemas/Message'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          sequenceNumber:
            type: "integer"
            format: "int64"
          resource:
            $ref: '#/components/schemas/Reference'
          resourceVersion:
            type: "integer"
            format: "int64"
          type:
            type: "string"
          resourceUserProvidedIdentifiers:
            $ref: '#/components/schemas/UserProvidedIdentifiers'
          order:
            $ref: '#/components/schemas/Order'
    OrderCustomLineItemDiscountSetMessage:
      allOf:
      - $ref: '#/components/schemas/Message'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          sequenceNumber:
            type: "integer"
            format: "int64"
          resource:
            $ref: '#/components/schemas/Reference'
          resourceVersion:
            type: "integer"
            format: "int64"
          type:
            type: "string"
          resourceUserProvidedIdentifiers:
            $ref: '#/components/schemas/UserProvidedIdentifiers'
          customLineItemId:
            type: "string"
          discountedPricePerQuantity:
            type: "array"
            items:
              $ref: '#/components/schemas/DiscountedLineItemPriceForQuantity'
          taxedPrice:
            $ref: '#/components/schemas/TaxedItemPrice'
    OrderCustomerEmailSetMessage:
      allOf:
      - $ref: '#/components/schemas/Message'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          sequenceNumber:
            type: "integer"
            format: "int64"
          resource:
            $ref: '#/components/schemas/Reference'
          resourceVersion:
            type: "integer"
            format: "int64"
          type:
            type: "string"
          resourceUserProvidedIdentifiers:
            $ref: '#/components/schemas/UserProvidedIdentifiers'
          email:
            type: "string"
          oldEmail:
            type: "string"
    OrderCustomerGroupSetMessage:
      allOf:
      - $ref: '#/components/schemas/Message'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          sequenceNumber:
            type: "integer"
            format: "int64"
          resource:
            $ref: '#/components/schemas/Reference'
          resourceVersion:
            type: "integer"
            format: "int64"
          type:
            type: "string"
          resourceUserProvidedIdentifiers:
            $ref: '#/components/schemas/UserProvidedIdentifiers'
          customerGroup:
            $ref: '#/components/schemas/CustomerGroupReference'
          oldCustomerGroup:
            $ref: '#/components/schemas/CustomerGroupReference'
    OrderCustomerSetMessage:
      allOf:
      - $ref: '#/components/schemas/Message'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          sequenceNumber:
            type: "integer"
            format: "int64"
          resource:
            $ref: '#/components/schemas/Reference'
          resourceVersion:
            type: "integer"
            format: "int64"
          type:
            type: "string"
          resourceUserProvidedIdentifiers:
            $ref: '#/components/schemas/UserProvidedIdentifiers'
          customer:
            $ref: '#/components/schemas/CustomerReference'
          customerGroup:
            $ref: '#/components/schemas/CustomerGroupReference'
          oldCustomer:
            $ref: '#/components/schemas/CustomerReference'
          oldCustomerGroup:
            $ref: '#/components/schemas/CustomerGroupReference'
    OrderDeletedMessage:
      allOf:
      - $ref: '#/components/schemas/Message'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          sequenceNumber:
            type: "integer"
            format: "int64"
          resource:
            $ref: '#/components/schemas/Reference'
          resourceVersion:
            type: "integer"
            format: "int64"
          type:
            type: "string"
          resourceUserProvidedIdentifiers:
            $ref: '#/components/schemas/UserProvidedIdentifiers'
          order:
            $ref: '#/components/schemas/Order'
    OrderDiscountCodeAddedMessage:
      allOf:
      - $ref: '#/components/schemas/Message'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          sequenceNumber:
            type: "integer"
            format: "int64"
          resource:
            $ref: '#/components/schemas/Reference'
          resourceVersion:
            type: "integer"
            format: "int64"
          type:
            type: "string"
          resourceUserProvidedIdentifiers:
            $ref: '#/components/schemas/UserProvidedIdentifiers'
          discountCode:
            $ref: '#/components/schemas/DiscountCodeReference'
    OrderDiscountCodeRemovedMessage:
      allOf:
      - $ref: '#/components/schemas/Message'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          sequenceNumber:
            type: "integer"
            format: "int64"
          resource:
            $ref: '#/components/schemas/Reference'
          resourceVersion:
            type: "integer"
            format: "int64"
          type:
            type: "string"
          resourceUserProvidedIdentifiers:
            $ref: '#/components/schemas/UserProvidedIdentifiers'
          discountCode:
            $ref: '#/components/schemas/DiscountCodeReference'
    OrderDiscountCodeStateSetMessage:
      allOf:
      - $ref: '#/components/schemas/Message'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          sequenceNumber:
            type: "integer"
            format: "int64"
          resource:
            $ref: '#/components/schemas/Reference'
          resourceVersion:
            type: "integer"
            format: "int64"
          type:
            type: "string"
          resourceUserProvidedIdentifiers:
            $ref: '#/components/schemas/UserProvidedIdentifiers'
          discountCode:
            $ref: '#/components/schemas/DiscountCodeReference'
          state:
            $ref: '#/components/schemas/DiscountCodeState'
          oldState:
            $ref: '#/components/schemas/DiscountCodeState'
    OrderEditAppliedMessage:
      allOf:
      - $ref: '#/components/schemas/Message'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          sequenceNumber:
            type: "integer"
            format: "int64"
          resource:
            $ref: '#/components/schemas/Reference'
          resourceVersion:
            type: "integer"
            format: "int64"
          type:
            type: "string"
          resourceUserProvidedIdentifiers:
            $ref: '#/components/schemas/UserProvidedIdentifiers'
          edit:
            $ref: '#/components/schemas/OrderEditReference'
          result:
            $ref: '#/components/schemas/OrderEditApplied'
    OrderImportedMessage:
      allOf:
      - $ref: '#/components/schemas/Message'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          sequenceNumber:
            type: "integer"
            format: "int64"
          resource:
            $ref: '#/components/schemas/Reference'
          resourceVersion:
            type: "integer"
            format: "int64"
          type:
            type: "string"
          resourceUserProvidedIdentifiers:
            $ref: '#/components/schemas/UserProvidedIdentifiers'
          order:
            $ref: '#/components/schemas/Order'
    OrderLineItemAddedMessage:
      allOf:
      - $ref: '#/components/schemas/Message'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          sequenceNumber:
            type: "integer"
            format: "int64"
          resource:
            $ref: '#/components/schemas/Reference'
          resourceVersion:
            type: "integer"
            format: "int64"
          type:
            type: "string"
          resourceUserProvidedIdentifiers:
            $ref: '#/components/schemas/UserProvidedIdentifiers'
          lineItem:
            $ref: '#/components/schemas/LineItem'
          addedQuantity:
            type: "integer"
            format: "int64"
    OrderLineItemDiscountSetMessage:
      allOf:
      - $ref: '#/components/schemas/Message'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          sequenceNumber:
            type: "integer"
            format: "int64"
          resource:
            $ref: '#/components/schemas/Reference'
          resourceVersion:
            type: "integer"
            format: "int64"
          type:
            type: "string"
          resourceUserProvidedIdentifiers:
            $ref: '#/components/schemas/UserProvidedIdentifiers'
          lineItemId:
            type: "string"
          discountedPricePerQuantity:
            type: "array"
            items:
              $ref: '#/components/schemas/DiscountedLineItemPriceForQuantity'
          totalPrice:
            $ref: '#/components/schemas/Money'
          taxedPrice:
            $ref: '#/components/schemas/TaxedItemPrice'
    OrderLineItemDistributionChannelSetMessage:
      allOf:
      - $ref: '#/components/schemas/Message'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          sequenceNumber:
            type: "integer"
            format: "int64"
          resource:
            $ref: '#/components/schemas/Reference'
          resourceVersion:
            type: "integer"
            format: "int64"
          type:
            type: "string"
          resourceUserProvidedIdentifiers:
            $ref: '#/components/schemas/UserProvidedIdentifiers'
          lineItemId:
            type: "string"
          distributionChannel:
            $ref: '#/components/schemas/ChannelReference'
    OrderLineItemRemovedMessage:
      allOf:
      - $ref: '#/components/schemas/Message'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          sequenceNumber:
            type: "integer"
            format: "int64"
          resource:
            $ref: '#/components/schemas/Reference'
          resourceVersion:
            type: "integer"
            format: "int64"
          type:
            type: "string"
          resourceUserProvidedIdentifiers:
            $ref: '#/components/schemas/UserProvidedIdentifiers'
          lineItemId:
            type: "string"
          removedQuantity:
            type: "integer"
            format: "int64"
          newQuantity:
            type: "integer"
            format: "int64"
          newState:
            type: "array"
            items:
              $ref: '#/components/schemas/ItemState'
          newTotalPrice:
            $ref: '#/components/schemas/TypedMoney'
          newTaxedPrice:
            $ref: '#/components/schemas/TaxedItemPrice'
          newPrice:
            $ref: '#/components/schemas/Price'
          newShippingDetail:
            $ref: '#/components/schemas/ItemShippingDetails'
    OrderPaymentAddedMessage:
      allOf:
      - $ref: '#/components/schemas/Message'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          sequenceNumber:
            type: "integer"
            format: "int64"
          resource:
            $ref: '#/components/schemas/Reference'
          resourceVersion:
            type: "integer"
            format: "int64"
          type:
            type: "string"
          resourceUserProvidedIdentifiers:
            $ref: '#/components/schemas/UserProvidedIdentifiers'
          payment:
            $ref: '#/components/schemas/PaymentReference'
    OrderPaymentStateChangedMessage:
      allOf:
      - $ref: '#/components/schemas/Message'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          sequenceNumber:
            type: "integer"
            format: "int64"
          resource:
            $ref: '#/components/schemas/Reference'
          resourceVersion:
            type: "integer"
            format: "int64"
          type:
            type: "string"
          resourceUserProvidedIdentifiers:
            $ref: '#/components/schemas/UserProvidedIdentifiers'
          paymentState:
            $ref: '#/components/schemas/PaymentState'
          oldPaymentState:
            $ref: '#/components/schemas/PaymentState'
    OrderReturnInfoAddedMessage:
      allOf:
      - $ref: '#/components/schemas/Message'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          sequenceNumber:
            type: "integer"
            format: "int64"
          resource:
            $ref: '#/components/schemas/Reference'
          resourceVersion:
            type: "integer"
            format: "int64"
          type:
            type: "string"
          resourceUserProvidedIdentifiers:
            $ref: '#/components/schemas/UserProvidedIdentifiers'
          returnInfo:
            $ref: '#/components/schemas/ReturnInfo'
    OrderReturnInfoSetMessage:
      allOf:
      - $ref: '#/components/schemas/Message'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          sequenceNumber:
            type: "integer"
            format: "int64"
          resource:
            $ref: '#/components/schemas/Reference'
          resourceVersion:
            type: "integer"
            format: "int64"
          type:
            type: "string"
          resourceUserProvidedIdentifiers:
            $ref: '#/components/schemas/UserProvidedIdentifiers'
          returnInfo:
            type: "array"
            items:
              $ref: '#/components/schemas/ReturnInfo'
    OrderReturnShipmentStateChangedMessage:
      allOf:
      - $ref: '#/components/schemas/Message'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          sequenceNumber:
            type: "integer"
            format: "int64"
          resource:
            $ref: '#/components/schemas/Reference'
          resourceVersion:
            type: "integer"
            format: "int64"
          type:
            type: "string"
          resourceUserProvidedIdentifiers:
            $ref: '#/components/schemas/UserProvidedIdentifiers'
          returnItemId:
            type: "string"
          returnShipmentState:
            $ref: '#/components/schemas/ReturnShipmentState'
    OrderShipmentStateChangedMessage:
      allOf:
      - $ref: '#/components/schemas/Message'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          sequenceNumber:
            type: "integer"
            format: "int64"
          resource:
            $ref: '#/components/schemas/Reference'
          resourceVersion:
            type: "integer"
            format: "int64"
          type:
            type: "string"
          resourceUserProvidedIdentifiers:
            $ref: '#/components/schemas/UserProvidedIdentifiers'
          shipmentState:
            $ref: '#/components/schemas/ShipmentState'
          oldShipmentState:
            $ref: '#/components/schemas/ShipmentState'
    OrderShippingAddressSetMessage:
      allOf:
      - $ref: '#/components/schemas/Message'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          sequenceNumber:
            type: "integer"
            format: "int64"
          resource:
            $ref: '#/components/schemas/Reference'
          resourceVersion:
            type: "integer"
            format: "int64"
          type:
            type: "string"
          resourceUserProvidedIdentifiers:
            $ref: '#/components/schemas/UserProvidedIdentifiers'
          address:
            $ref: '#/components/schemas/Address'
          oldAddress:
            $ref: '#/components/schemas/Address'
    OrderShippingInfoSetMessage:
      allOf:
      - $ref: '#/components/schemas/Message'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          sequenceNumber:
            type: "integer"
            format: "int64"
          resource:
            $ref: '#/components/schemas/Reference'
          resourceVersion:
            type: "integer"
            format: "int64"
          type:
            type: "string"
          resourceUserProvidedIdentifiers:
            $ref: '#/components/schemas/UserProvidedIdentifiers'
          shippingInfo:
            $ref: '#/components/schemas/ShippingInfo'
          oldShippingInfo:
            $ref: '#/components/schemas/ShippingInfo'
    OrderShippingRateInputSetMessage:
      allOf:
      - $ref: '#/components/schemas/Message'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          sequenceNumber:
            type: "integer"
            format: "int64"
          resource:
            $ref: '#/components/schemas/Reference'
          resourceVersion:
            type: "integer"
            format: "int64"
          type:
            type: "string"
          resourceUserProvidedIdentifiers:
            $ref: '#/components/schemas/UserProvidedIdentifiers'
          shippingRateInput:
            $ref: '#/components/schemas/ShippingRateInput'
          oldShippingRateInput:
            $ref: '#/components/schemas/ShippingRateInput'
    OrderStateChangedMessage:
      allOf:
      - $ref: '#/components/schemas/Message'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          sequenceNumber:
            type: "integer"
            format: "int64"
          resource:
            $ref: '#/components/schemas/Reference'
          resourceVersion:
            type: "integer"
            format: "int64"
          type:
            type: "string"
          resourceUserProvidedIdentifiers:
            $ref: '#/components/schemas/UserProvidedIdentifiers'
          orderState:
            $ref: '#/components/schemas/OrderState'
          oldOrderState:
            $ref: '#/components/schemas/OrderState'
    OrderStateTransitionMessage:
      allOf:
      - $ref: '#/components/schemas/Message'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          sequenceNumber:
            type: "integer"
            format: "int64"
          resource:
            $ref: '#/components/schemas/Reference'
          resourceVersion:
            type: "integer"
            format: "int64"
          type:
            type: "string"
          resourceUserProvidedIdentifiers:
            $ref: '#/components/schemas/UserProvidedIdentifiers'
          state:
            $ref: '#/components/schemas/StateReference'
          oldState:
            $ref: '#/components/schemas/StateReference'
          force:
            type: "boolean"
    OrderStoreSetMessage:
      allOf:
      - $ref: '#/components/schemas/Message'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          sequenceNumber:
            type: "integer"
            format: "int64"
          resource:
            $ref: '#/components/schemas/Reference'
          resourceVersion:
            type: "integer"
            format: "int64"
          type:
            type: "string"
          resourceUserProvidedIdentifiers:
            $ref: '#/components/schemas/UserProvidedIdentifiers'
          store:
            $ref: '#/components/schemas/StoreKeyReference'
    ParcelAddedToDeliveryMessage:
      allOf:
      - $ref: '#/components/schemas/Message'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          sequenceNumber:
            type: "integer"
            format: "int64"
          resource:
            $ref: '#/components/schemas/Reference'
          resourceVersion:
            type: "integer"
            format: "int64"
          type:
            type: "string"
          resourceUserProvidedIdentifiers:
            $ref: '#/components/schemas/UserProvidedIdentifiers'
          delivery:
            $ref: '#/components/schemas/Delivery'
          parcel:
            $ref: '#/components/schemas/Parcel'
    ParcelItemsUpdatedMessage:
      allOf:
      - $ref: '#/components/schemas/Message'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          sequenceNumber:
            type: "integer"
            format: "int64"
          resource:
            $ref: '#/components/schemas/Reference'
          resourceVersion:
            type: "integer"
            format: "int64"
          type:
            type: "string"
          resourceUserProvidedIdentifiers:
            $ref: '#/components/schemas/UserProvidedIdentifiers'
          parcelId:
            type: "string"
          deliveryId:
            type: "string"
          items:
            type: "array"
            items:
              $ref: '#/components/schemas/DeliveryItem'
          oldItems:
            type: "array"
            items:
              $ref: '#/components/schemas/DeliveryItem'
    ParcelMeasurementsUpdatedMessage:
      allOf:
      - $ref: '#/components/schemas/Message'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          sequenceNumber:
            type: "integer"
            format: "int64"
          resource:
            $ref: '#/components/schemas/Reference'
          resourceVersion:
            type: "integer"
            format: "int64"
          type:
            type: "string"
          resourceUserProvidedIdentifiers:
            $ref: '#/components/schemas/UserProvidedIdentifiers'
          deliveryId:
            type: "string"
          parcelId:
            type: "string"
          measurements:
            $ref: '#/components/schemas/ParcelMeasurements'
    ParcelRemovedFromDeliveryMessage:
      allOf:
      - $ref: '#/components/schemas/Message'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          sequenceNumber:
            type: "integer"
            format: "int64"
          resource:
            $ref: '#/components/schemas/Reference'
          resourceVersion:
            type: "integer"
            format: "int64"
          type:
            type: "string"
          resourceUserProvidedIdentifiers:
            $ref: '#/components/schemas/UserProvidedIdentifiers'
          deliveryId:
            type: "string"
          parcel:
            $ref: '#/components/schemas/Parcel'
    ParcelTrackingDataUpdatedMessage:
      allOf:
      - $ref: '#/components/schemas/Message'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          sequenceNumber:
            type: "integer"
            format: "int64"
          resource:
            $ref: '#/components/schemas/Reference'
          resourceVersion:
            type: "integer"
            format: "int64"
          type:
            type: "string"
          resourceUserProvidedIdentifiers:
            $ref: '#/components/schemas/UserProvidedIdentifiers'
          deliveryId:
            type: "string"
          parcelId:
            type: "string"
          trackingData:
            $ref: '#/components/schemas/TrackingData'
    PaymentCreatedMessage:
      allOf:
      - $ref: '#/components/schemas/Message'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          sequenceNumber:
            type: "integer"
            format: "int64"
          resource:
            $ref: '#/components/schemas/Reference'
          resourceVersion:
            type: "integer"
            format: "int64"
          type:
            type: "string"
          resourceUserProvidedIdentifiers:
            $ref: '#/components/schemas/UserProvidedIdentifiers'
          payment:
            $ref: '#/components/schemas/Payment'
    PaymentInteractionAddedMessage:
      allOf:
      - $ref: '#/components/schemas/Message'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          sequenceNumber:
            type: "integer"
            format: "int64"
          resource:
            $ref: '#/components/schemas/Reference'
          resourceVersion:
            type: "integer"
            format: "int64"
          type:
            type: "string"
          resourceUserProvidedIdentifiers:
            $ref: '#/components/schemas/UserProvidedIdentifiers'
          interaction:
            $ref: '#/components/schemas/CustomFields'
    PaymentStatusInterfaceCodeSetMessage:
      allOf:
      - $ref: '#/components/schemas/Message'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          sequenceNumber:
            type: "integer"
            format: "int64"
          resource:
            $ref: '#/components/schemas/Reference'
          resourceVersion:
            type: "integer"
            format: "int64"
          type:
            type: "string"
          resourceUserProvidedIdentifiers:
            $ref: '#/components/schemas/UserProvidedIdentifiers'
          paymentId:
            type: "string"
          interfaceCode:
            type: "string"
    PaymentStatusStateTransitionMessage:
      allOf:
      - $ref: '#/components/schemas/Message'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          sequenceNumber:
            type: "integer"
            format: "int64"
          resource:
            $ref: '#/components/schemas/Reference'
          resourceVersion:
            type: "integer"
            format: "int64"
          type:
            type: "string"
          resourceUserProvidedIdentifiers:
            $ref: '#/components/schemas/UserProvidedIdentifiers'
          state:
            $ref: '#/components/schemas/StateReference'
          force:
            type: "boolean"
    PaymentTransactionAddedMessage:
      allOf:
      - $ref: '#/components/schemas/Message'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          sequenceNumber:
            type: "integer"
            format: "int64"
          resource:
            $ref: '#/components/schemas/Reference'
          resourceVersion:
            type: "integer"
            format: "int64"
          type:
            type: "string"
          resourceUserProvidedIdentifiers:
            $ref: '#/components/schemas/UserProvidedIdentifiers'
          transaction:
            $ref: '#/components/schemas/Transaction'
    PaymentTransactionStateChangedMessage:
      allOf:
      - $ref: '#/components/schemas/Message'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          sequenceNumber:
            type: "integer"
            format: "int64"
          resource:
            $ref: '#/components/schemas/Reference'
          resourceVersion:
            type: "integer"
            format: "int64"
          type:
            type: "string"
          resourceUserProvidedIdentifiers:
            $ref: '#/components/schemas/UserProvidedIdentifiers'
          transactionId:
            type: "string"
          state:
            $ref: '#/components/schemas/TransactionState'
    ProductAddedToCategoryMessage:
      allOf:
      - $ref: '#/components/schemas/Message'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          sequenceNumber:
            type: "integer"
            format: "int64"
          resource:
            $ref: '#/components/schemas/Reference'
          resourceVersion:
            type: "integer"
            format: "int64"
          type:
            type: "string"
          resourceUserProvidedIdentifiers:
            $ref: '#/components/schemas/UserProvidedIdentifiers'
          category:
            $ref: '#/components/schemas/CategoryReference'
          staged:
            type: "boolean"
    ProductCreatedMessage:
      allOf:
      - $ref: '#/components/schemas/Message'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          sequenceNumber:
            type: "integer"
            format: "int64"
          resource:
            $ref: '#/components/schemas/Reference'
          resourceVersion:
            type: "integer"
            format: "int64"
          type:
            type: "string"
          resourceUserProvidedIdentifiers:
            $ref: '#/components/schemas/UserProvidedIdentifiers'
          productProjection:
            $ref: '#/components/schemas/ProductProjection'
    ProductDeletedMessage:
      allOf:
      - $ref: '#/components/schemas/Message'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          sequenceNumber:
            type: "integer"
            format: "int64"
          resource:
            $ref: '#/components/schemas/Reference'
          resourceVersion:
            type: "integer"
            format: "int64"
          type:
            type: "string"
          resourceUserProvidedIdentifiers:
            $ref: '#/components/schemas/UserProvidedIdentifiers'
          removedImageUrls:
            type: "array"
            items:
              type: "string"
          currentProjection:
            $ref: '#/components/schemas/ProductProjection'
    ProductImageAddedMessage:
      allOf:
      - $ref: '#/components/schemas/Message'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          sequenceNumber:
            type: "integer"
            format: "int64"
          resource:
            $ref: '#/components/schemas/Reference'
          resourceVersion:
            type: "integer"
            format: "int64"
          type:
            type: "string"
          resourceUserProvidedIdentifiers:
            $ref: '#/components/schemas/UserProvidedIdentifiers'
          variantId:
            type: "integer"
            format: "int64"
          image:
            $ref: '#/components/schemas/Image'
          staged:
            type: "boolean"
    ProductPriceDiscountsSetMessage:
      allOf:
      - $ref: '#/components/schemas/Message'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          sequenceNumber:
            type: "integer"
            format: "int64"
          resource:
            $ref: '#/components/schemas/Reference'
          resourceVersion:
            type: "integer"
            format: "int64"
          type:
            type: "string"
          resourceUserProvidedIdentifiers:
            $ref: '#/components/schemas/UserProvidedIdentifiers'
          updatedPrices:
            type: "array"
            items:
              $ref: '#/components/schemas/ProductPriceDiscountsSetUpdatedPrice'
    ProductPriceDiscountsSetUpdatedPrice:
      type: "object"
      properties:
        variantId:
          type: "integer"
          format: "int32"
        variantKey:
          type: "string"
        sku:
          type: "string"
        priceId:
          type: "string"
        discounted:
          $ref: '#/components/schemas/DiscountedPrice'
        staged:
          type: "boolean"
    ProductPriceExternalDiscountSetMessage:
      allOf:
      - $ref: '#/components/schemas/Message'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          sequenceNumber:
            type: "integer"
            format: "int64"
          resource:
            $ref: '#/components/schemas/Reference'
          resourceVersion:
            type: "integer"
            format: "int64"
          type:
            type: "string"
          resourceUserProvidedIdentifiers:
            $ref: '#/components/schemas/UserProvidedIdentifiers'
          variantId:
            type: "integer"
            format: "int32"
          variantKey:
            type: "string"
          sku:
            type: "string"
          priceId:
            type: "string"
          discounted:
            $ref: '#/components/schemas/DiscountedPrice'
          staged:
            type: "boolean"
    ProductPublishedMessage:
      allOf:
      - $ref: '#/components/schemas/Message'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          sequenceNumber:
            type: "integer"
            format: "int64"
          resource:
            $ref: '#/components/schemas/Reference'
          resourceVersion:
            type: "integer"
            format: "int64"
          type:
            type: "string"
          resourceUserProvidedIdentifiers:
            $ref: '#/components/schemas/UserProvidedIdentifiers'
          removedImageUrls:
            type: "array"
            items:
              type: "string"
          productProjection:
            $ref: '#/components/schemas/ProductProjection'
          scope:
            $ref: '#/components/schemas/ProductPublishScope'
    ProductRemovedFromCategoryMessage:
      allOf:
      - $ref: '#/components/schemas/Message'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          sequenceNumber:
            type: "integer"
            format: "int64"
          resource:
            $ref: '#/components/schemas/Reference'
          resourceVersion:
            type: "integer"
            format: "int64"
          type:
            type: "string"
          resourceUserProvidedIdentifiers:
            $ref: '#/components/schemas/UserProvidedIdentifiers'
          category:
            $ref: '#/components/schemas/CategoryReference'
          staged:
            type: "boolean"
    ProductRevertedStagedChangesMessage:
      allOf:
      - $ref: '#/components/schemas/Message'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          sequenceNumber:
            type: "integer"
            format: "int64"
          resource:
            $ref: '#/components/schemas/Reference'
          resourceVersion:
            type: "integer"
            format: "int64"
          type:
            type: "string"
          resourceUserProvidedIdentifiers:
            $ref: '#/components/schemas/UserProvidedIdentifiers'
          removedImageUrls:
            type: "array"
            items:
              type: "string"
    ProductSelectionCreatedMessage:
      allOf:
      - $ref: '#/components/schemas/Message'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          sequenceNumber:
            type: "integer"
            format: "int64"
          resource:
            $ref: '#/components/schemas/Reference'
          resourceVersion:
            type: "integer"
            format: "int64"
          type:
            type: "string"
          resourceUserProvidedIdentifiers:
            $ref: '#/components/schemas/UserProvidedIdentifiers'
          productSelection:
            $ref: '#/components/schemas/ProductSelectionType'
    ProductSelectionDeletedMessage:
      allOf:
      - $ref: '#/components/schemas/Message'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          sequenceNumber:
            type: "integer"
            format: "int64"
          resource:
            $ref: '#/components/schemas/Reference'
          resourceVersion:
            type: "integer"
            format: "int64"
          type:
            type: "string"
          resourceUserProvidedIdentifiers:
            $ref: '#/components/schemas/UserProvidedIdentifiers'
          name:
            $ref: '#/components/schemas/LocalizedString'
    ProductSelectionProductAddedMessage:
      allOf:
      - $ref: '#/components/schemas/Message'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          sequenceNumber:
            type: "integer"
            format: "int64"
          resource:
            $ref: '#/components/schemas/Reference'
          resourceVersion:
            type: "integer"
            format: "int64"
          type:
            type: "string"
          resourceUserProvidedIdentifiers:
            $ref: '#/components/schemas/UserProvidedIdentifiers'
          product:
            $ref: '#/components/schemas/ProductReference'
    ProductSelectionProductRemovedMessage:
      allOf:
      - $ref: '#/components/schemas/Message'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          sequenceNumber:
            type: "integer"
            format: "int64"
          resource:
            $ref: '#/components/schemas/Reference'
          resourceVersion:
            type: "integer"
            format: "int64"
          type:
            type: "string"
          resourceUserProvidedIdentifiers:
            $ref: '#/components/schemas/UserProvidedIdentifiers'
          product:
            $ref: '#/components/schemas/ProductReference'
    ProductSlugChangedMessage:
      allOf:
      - $ref: '#/components/schemas/Message'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          sequenceNumber:
            type: "integer"
            format: "int64"
          resource:
            $ref: '#/components/schemas/Reference'
          resourceVersion:
            type: "integer"
            format: "int64"
          type:
            type: "string"
          resourceUserProvidedIdentifiers:
            $ref: '#/components/schemas/UserProvidedIdentifiers'
          slug:
            $ref: '#/components/schemas/LocalizedString'
          oldSlug:
            $ref: '#/components/schemas/LocalizedString'
    ProductStateTransitionMessage:
      allOf:
      - $ref: '#/components/schemas/Message'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          sequenceNumber:
            type: "integer"
            format: "int64"
          resource:
            $ref: '#/components/schemas/Reference'
          resourceVersion:
            type: "integer"
            format: "int64"
          type:
            type: "string"
          resourceUserProvidedIdentifiers:
            $ref: '#/components/schemas/UserProvidedIdentifiers'
          state:
            $ref: '#/components/schemas/StateReference'
          force:
            type: "boolean"
    ProductUnpublishedMessage:
      allOf:
      - $ref: '#/components/schemas/Message'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          sequenceNumber:
            type: "integer"
            format: "int64"
          resource:
            $ref: '#/components/schemas/Reference'
          resourceVersion:
            type: "integer"
            format: "int64"
          type:
            type: "string"
          resourceUserProvidedIdentifiers:
            $ref: '#/components/schemas/UserProvidedIdentifiers'
    ProductVariantAddedMessage:
      allOf:
      - $ref: '#/components/schemas/Message'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          sequenceNumber:
            type: "integer"
            format: "int64"
          resource:
            $ref: '#/components/schemas/Reference'
          resourceVersion:
            type: "integer"
            format: "int64"
          type:
            type: "string"
          resourceUserProvidedIdentifiers:
            $ref: '#/components/schemas/UserProvidedIdentifiers'
          variant:
            $ref: '#/components/schemas/ProductVariant'
          staged:
            type: "boolean"
    ProductVariantDeletedMessage:
      allOf:
      - $ref: '#/components/schemas/Message'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          sequenceNumber:
            type: "integer"
            format: "int64"
          resource:
            $ref: '#/components/schemas/Reference'
          resourceVersion:
            type: "integer"
            format: "int64"
          type:
            type: "string"
          resourceUserProvidedIdentifiers:
            $ref: '#/components/schemas/UserProvidedIdentifiers'
          variant:
            $ref: '#/components/schemas/ProductVariant'
          removedImageUrls:
            type: "array"
            items:
              type: "string"
    ReviewCreatedMessage:
      allOf:
      - $ref: '#/components/schemas/Message'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          sequenceNumber:
            type: "integer"
            format: "int64"
          resource:
            $ref: '#/components/schemas/Reference'
          resourceVersion:
            type: "integer"
            format: "int64"
          type:
            type: "string"
          resourceUserProvidedIdentifiers:
            $ref: '#/components/schemas/UserProvidedIdentifiers'
          review:
            $ref: '#/components/schemas/Review'
    ReviewRatingSetMessage:
      allOf:
      - $ref: '#/components/schemas/Message'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          sequenceNumber:
            type: "integer"
            format: "int64"
          resource:
            $ref: '#/components/schemas/Reference'
          resourceVersion:
            type: "integer"
            format: "int64"
          type:
            type: "string"
          resourceUserProvidedIdentifiers:
            $ref: '#/components/schemas/UserProvidedIdentifiers'
          oldRating:
            type: "number"
            format: "double"
          newRating:
            type: "number"
            format: "double"
          includedInStatistics:
            type: "boolean"
          target:
            $ref: '#/components/schemas/Reference'
    ReviewStateTransitionMessage:
      allOf:
      - $ref: '#/components/schemas/Message'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          sequenceNumber:
            type: "integer"
            format: "int64"
          resource:
            $ref: '#/components/schemas/Reference'
          resourceVersion:
            type: "integer"
            format: "int64"
          type:
            type: "string"
          resourceUserProvidedIdentifiers:
            $ref: '#/components/schemas/UserProvidedIdentifiers'
          oldState:
            $ref: '#/components/schemas/StateReference'
          newState:
            $ref: '#/components/schemas/StateReference'
          oldIncludedInStatistics:
            type: "boolean"
          newIncludedInStatistics:
            type: "boolean"
          target:
            $ref: '#/components/schemas/Reference'
          force:
            type: "boolean"
    StoreCreatedMessage:
      allOf:
      - $ref: '#/components/schemas/Message'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          sequenceNumber:
            type: "integer"
            format: "int64"
          resource:
            $ref: '#/components/schemas/Reference'
          resourceVersion:
            type: "integer"
            format: "int64"
          type:
            type: "string"
          resourceUserProvidedIdentifiers:
            $ref: '#/components/schemas/UserProvidedIdentifiers'
          name:
            $ref: '#/components/schemas/LocalizedString'
          languages:
            type: "array"
            items:
              type: "string"
          distributionChannels:
            type: "array"
            items:
              $ref: '#/components/schemas/ChannelReference'
          supplyChannels:
            type: "array"
            items:
              $ref: '#/components/schemas/ChannelReference'
          productSelections:
            type: "array"
            items:
              $ref: '#/components/schemas/ProductSelectionSetting'
          custom:
            $ref: '#/components/schemas/CustomFields'
    StoreDeletedMessage:
      allOf:
      - $ref: '#/components/schemas/Message'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          sequenceNumber:
            type: "integer"
            format: "int64"
          resource:
            $ref: '#/components/schemas/Reference'
          resourceVersion:
            type: "integer"
            format: "int64"
          type:
            type: "string"
          resourceUserProvidedIdentifiers:
            $ref: '#/components/schemas/UserProvidedIdentifiers'
    StoreProductSelectionsChangedMessage:
      allOf:
      - $ref: '#/components/schemas/Message'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          sequenceNumber:
            type: "integer"
            format: "int64"
          resource:
            $ref: '#/components/schemas/Reference'
          resourceVersion:
            type: "integer"
            format: "int64"
          type:
            type: "string"
          resourceUserProvidedIdentifiers:
            $ref: '#/components/schemas/UserProvidedIdentifiers'
          addedProductSelections:
            type: "array"
            items:
              $ref: '#/components/schemas/ProductSelectionSetting'
          removedProductSelections:
            type: "array"
            items:
              $ref: '#/components/schemas/ProductSelectionSetting'
          updatedProductSelections:
            type: "array"
            items:
              $ref: '#/components/schemas/ProductSelectionSetting'
    UserProvidedIdentifiers:
      type: "object"
      properties:
        key:
          type: "string"
        externalId:
          type: "string"
        orderNumber:
          type: "string"
        customerNumber:
          type: "string"
        sku:
          type: "string"
        slug:
          $ref: '#/components/schemas/LocalizedString'
        containerAndKey:
          $ref: '#/components/schemas/ContainerAndKey'
    CategoryCreatedMessagePayload:
      allOf:
      - $ref: '#/components/schemas/MessagePayload'
      - type: "object"
        properties:
          type:
            type: "string"
          category:
            $ref: '#/components/schemas/Category'
    CategorySlugChangedMessagePayload:
      allOf:
      - $ref: '#/components/schemas/MessagePayload'
      - type: "object"
        properties:
          type:
            type: "string"
          slug:
            $ref: '#/components/schemas/LocalizedString'
          oldSlug:
            $ref: '#/components/schemas/LocalizedString'
    CustomLineItemStateTransitionMessagePayload:
      allOf:
      - $ref: '#/components/schemas/MessagePayload'
      - type: "object"
        properties:
          type:
            type: "string"
          customLineItemId:
            type: "string"
          transitionDate:
            type: "string"
            format: "datetime"
          quantity:
            type: "integer"
            format: "int64"
          fromState:
            $ref: '#/components/schemas/StateReference'
          toState:
            $ref: '#/components/schemas/StateReference'
    CustomerAddressAddedMessagePayload:
      allOf:
      - $ref: '#/components/schemas/MessagePayload'
      - type: "object"
        properties:
          type:
            type: "string"
          address:
            $ref: '#/components/schemas/Address'
    CustomerAddressChangedMessagePayload:
      allOf:
      - $ref: '#/components/schemas/MessagePayload'
      - type: "object"
        properties:
          type:
            type: "string"
          address:
            $ref: '#/components/schemas/Address'
    CustomerAddressRemovedMessagePayload:
      allOf:
      - $ref: '#/components/schemas/MessagePayload'
      - type: "object"
        properties:
          type:
            type: "string"
          address:
            $ref: '#/components/schemas/Address'
    CustomerCompanyNameSetMessagePayload:
      allOf:
      - $ref: '#/components/schemas/MessagePayload'
      - type: "object"
        properties:
          type:
            type: "string"
          companyName:
            type: "string"
    CustomerCreatedMessagePayload:
      allOf:
      - $ref: '#/components/schemas/MessagePayload'
      - type: "object"
        properties:
          type:
            type: "string"
          customer:
            $ref: '#/components/schemas/Customer'
    CustomerDateOfBirthSetMessagePayload:
      allOf:
      - $ref: '#/components/schemas/MessagePayload'
      - type: "object"
        properties:
          type:
            type: "string"
          dateOfBirth:
            type: "string"
            format: "date-only"
    CustomerDeletedMessagePayload:
      allOf:
      - $ref: '#/components/schemas/MessagePayload'
      - type: "object"
        properties:
          type:
            type: "string"
    CustomerEmailChangedMessagePayload:
      allOf:
      - $ref: '#/components/schemas/MessagePayload'
      - type: "object"
        properties:
          type:
            type: "string"
          email:
            type: "string"
    CustomerEmailVerifiedMessagePayload:
      allOf:
      - $ref: '#/components/schemas/MessagePayload'
      - type: "object"
        properties:
          type:
            type: "string"
    CustomerFirstNameSetMessagePayload:
      allOf:
      - $ref: '#/components/schemas/MessagePayload'
      - type: "object"
        properties:
          type:
            type: "string"
          firstName:
            type: "string"
    CustomerGroupSetMessagePayload:
      allOf:
      - $ref: '#/components/schemas/MessagePayload'
      - type: "object"
        properties:
          type:
            type: "string"
          customerGroup:
            $ref: '#/components/schemas/CustomerGroupReference'
    CustomerLastNameSetMessagePayload:
      allOf:
      - $ref: '#/components/schemas/MessagePayload'
      - type: "object"
        properties:
          type:
            type: "string"
          lastName:
            type: "string"
    CustomerPasswordUpdatedMessagePayload:
      allOf:
      - $ref: '#/components/schemas/MessagePayload'
      - type: "object"
        properties:
          type:
            type: "string"
          reset:
            type: "boolean"
    CustomerTitleSetMessagePayload:
      allOf:
      - $ref: '#/components/schemas/MessagePayload'
      - type: "object"
        properties:
          type:
            type: "string"
          title:
            type: "string"
    DeliveryAddedMessagePayload:
      allOf:
      - $ref: '#/components/schemas/MessagePayload'
      - type: "object"
        properties:
          type:
            type: "string"
          delivery:
            $ref: '#/components/schemas/Delivery'
    DeliveryAddressSetMessagePayload:
      allOf:
      - $ref: '#/components/schemas/MessagePayload'
      - type: "object"
        properties:
          type:
            type: "string"
          deliveryId:
            type: "string"
          address:
            $ref: '#/components/schemas/Address'
          oldAddress:
            $ref: '#/components/schemas/Address'
    DeliveryItemsUpdatedMessagePayload:
      allOf:
      - $ref: '#/components/schemas/MessagePayload'
      - type: "object"
        properties:
          type:
            type: "string"
          deliveryId:
            type: "string"
          items:
            type: "array"
            items:
              $ref: '#/components/schemas/DeliveryItem'
          oldItems:
            type: "array"
            items:
              $ref: '#/components/schemas/DeliveryItem'
    DeliveryRemovedMessagePayload:
      allOf:
      - $ref: '#/components/schemas/MessagePayload'
      - type: "object"
        properties:
          type:
            type: "string"
          delivery:
            $ref: '#/components/schemas/Delivery'
    InventoryEntryCreatedMessagePayload:
      allOf:
      - $ref: '#/components/schemas/MessagePayload'
      - type: "object"
        properties:
          type:
            type: "string"
          inventoryEntry:
            $ref: '#/components/schemas/InventoryEntry'
    InventoryEntryDeletedMessagePayload:
      allOf:
      - $ref: '#/components/schemas/MessagePayload'
      - type: "object"
        properties:
          type:
            type: "string"
          sku:
            type: "string"
          supplyChannel:
            $ref: '#/components/schemas/ChannelReference'
    InventoryEntryQuantitySetMessagePayload:
      allOf:
      - $ref: '#/components/schemas/MessagePayload'
      - type: "object"
        properties:
          type:
            type: "string"
          oldQuantityOnStock:
            type: "integer"
            format: "int64"
          newQuantityOnStock:
            type: "integer"
            format: "int64"
          oldAvailableQuantity:
            type: "integer"
            format: "int64"
          newAvailableQuantity:
            type: "integer"
            format: "int64"
          supplyChannel:
            $ref: '#/components/schemas/ChannelReference'
    LineItemStateTransitionMessagePayload:
      allOf:
      - $ref: '#/components/schemas/MessagePayload'
      - type: "object"
        properties:
          type:
            type: "string"
          lineItemId:
            type: "string"
          transitionDate:
            type: "string"
            format: "datetime"
          quantity:
            type: "integer"
            format: "int64"
          fromState:
            $ref: '#/components/schemas/StateReference'
          toState:
            $ref: '#/components/schemas/StateReference'
    MessagePayload:
      type: "object"
      discriminator:
        propertyName: type
        mapping:
          CategoryCreated: '#/components/schemas/CategoryCreatedMessagePayload'
          CategorySlugChanged: '#/components/schemas/CategorySlugChangedMessagePayload'
          CustomLineItemStateTransition: '#/components/schemas/CustomLineItemStateTransitionMessagePayload'
          CustomerAddressAdded: '#/components/schemas/CustomerAddressAddedMessagePayload'
          CustomerAddressChanged: '#/components/schemas/CustomerAddressChangedMessagePayload'
          CustomerAddressRemoved: '#/components/schemas/CustomerAddressRemovedMessagePayload'
          CustomerCompanyNameSet: '#/components/schemas/CustomerCompanyNameSetMessagePayload'
          CustomerCreated: '#/components/schemas/CustomerCreatedMessagePayload'
          CustomerDateOfBirthSet: '#/components/schemas/CustomerDateOfBirthSetMessagePayload'
          CustomerDeleted: '#/components/schemas/CustomerDeletedMessagePayload'
          CustomerEmailChanged: '#/components/schemas/CustomerEmailChangedMessagePayload'
          CustomerEmailVerified: '#/components/schemas/CustomerEmailVerifiedMessagePayload'
          CustomerFirstNameSet: '#/components/schemas/CustomerFirstNameSetMessagePayload'
          CustomerGroupSet: '#/components/schemas/CustomerGroupSetMessagePayload'
          CustomerLastNameSet: '#/components/schemas/CustomerLastNameSetMessagePayload'
          CustomerPasswordUpdated: '#/components/schemas/CustomerPasswordUpdatedMessagePayload'
          CustomerTitleSet: '#/components/schemas/CustomerTitleSetMessagePayload'
          DeliveryAdded: '#/components/schemas/DeliveryAddedMessagePayload'
          DeliveryAddressSet: '#/components/schemas/DeliveryAddressSetMessagePayload'
          DeliveryItemsUpdated: '#/components/schemas/DeliveryItemsUpdatedMessagePayload'
          DeliveryRemoved: '#/components/schemas/DeliveryRemovedMessagePayload'
          InventoryEntryCreated: '#/components/schemas/InventoryEntryCreatedMessagePayload'
          InventoryEntryDeleted: '#/components/schemas/InventoryEntryDeletedMessagePayload'
          InventoryEntryQuantitySet: '#/components/schemas/InventoryEntryQuantitySetMessagePayload'
          LineItemStateTransition: '#/components/schemas/LineItemStateTransitionMessagePayload'
          OrderBillingAddressSet: '#/components/schemas/OrderBillingAddressSetMessagePayload'
          OrderCreated: '#/components/schemas/OrderCreatedMessagePayload'
          OrderCustomLineItemDiscountSet: '#/components/schemas/OrderCustomLineItemDiscountSetMessagePayload'
          OrderCustomerEmailSet: '#/components/schemas/OrderCustomerEmailSetMessagePayload'
          OrderCustomerGroupSet: '#/components/schemas/OrderCustomerGroupSetMessagePayload'
          OrderCustomerSet: '#/components/schemas/OrderCustomerSetMessagePayload'
          OrderDeleted: '#/components/schemas/OrderDeletedMessagePayload'
          OrderDiscountCodeAdded: '#/components/schemas/OrderDiscountCodeAddedMessagePayload'
          OrderDiscountCodeRemoved: '#/components/schemas/OrderDiscountCodeRemovedMessagePayload'
          OrderDiscountCodeStateSet: '#/components/schemas/OrderDiscountCodeStateSetMessagePayload'
          OrderEditApplied: '#/components/schemas/OrderEditAppliedMessagePayload'
          OrderImported: '#/components/schemas/OrderImportedMessagePayload'
          OrderLineItemAdded: '#/components/schemas/OrderLineItemAddedMessagePayload'
          OrderLineItemDiscountSet: '#/components/schemas/OrderLineItemDiscountSetMessagePayload'
          OrderLineItemDistributionChannelSet: '#/components/schemas/OrderLineItemDistributionChannelSetMessagePayload'
          OrderLineItemRemoved: '#/components/schemas/OrderLineItemRemovedMessagePayload'
          OrderPaymentAdded: '#/components/schemas/OrderPaymentAddedMessagePayload'
          OrderPaymentStateChanged: '#/components/schemas/OrderPaymentStateChangedMessagePayload'
          ReturnInfoAdded: '#/components/schemas/OrderReturnInfoAddedMessagePayload'
          ReturnInfoSet: '#/components/schemas/OrderReturnInfoSetMessagePayload'
          OrderReturnShipmentStateChanged: '#/components/schemas/OrderReturnShipmentStateChangedMessagePayload'
          OrderShipmentStateChanged: '#/components/schemas/OrderShipmentStateChangedMessagePayload'
          OrderShippingAddressSet: '#/components/schemas/OrderShippingAddressSetMessagePayload'
          OrderShippingInfoSet: '#/components/schemas/OrderShippingInfoSetMessagePayload'
          OrderShippingRateInputSet: '#/components/schemas/OrderShippingRateInputSetMessagePayload'
          OrderStateChanged: '#/components/schemas/OrderStateChangedMessagePayload'
          OrderStateTransition: '#/components/schemas/OrderStateTransitionMessagePayload'
          OrderStoreSet: '#/components/schemas/OrderStoreSetMessagePayload'
          ParcelAddedToDelivery: '#/components/schemas/ParcelAddedToDeliveryMessagePayload'
          ParcelItemsUpdated: '#/components/schemas/ParcelItemsUpdatedMessagePayload'
          ParcelMeasurementsUpdated: '#/components/schemas/ParcelMeasurementsUpdatedMessagePayload'
          ParcelRemovedFromDelivery: '#/components/schemas/ParcelRemovedFromDeliveryMessagePayload'
          ParcelTrackingDataUpdated: '#/components/schemas/ParcelTrackingDataUpdatedMessagePayload'
          PaymentCreated: '#/components/schemas/PaymentCreatedMessagePayload'
          PaymentInteractionAdded: '#/components/schemas/PaymentInteractionAddedMessagePayload'
          PaymentStatusInterfaceCodeSet: '#/components/schemas/PaymentStatusInterfaceCodeSetMessagePayload'
          PaymentStatusStateTransition: '#/components/schemas/PaymentStatusStateTransitionMessagePayload'
          PaymentTransactionAdded: '#/components/schemas/PaymentTransactionAddedMessagePayload'
          PaymentTransactionStateChanged: '#/components/schemas/PaymentTransactionStateChangedMessagePayload'
          ProductAddedToCategory: '#/components/schemas/ProductAddedToCategoryMessagePayload'
          ProductCreated: '#/components/schemas/ProductCreatedMessagePayload'
          ProductDeleted: '#/components/schemas/ProductDeletedMessagePayload'
          ProductImageAdded: '#/components/schemas/ProductImageAddedMessagePayload'
          ProductPriceDiscountsSet: '#/components/schemas/ProductPriceDiscountsSetMessagePayload'
          ProductPriceExternalDiscountSet: '#/components/schemas/ProductPriceExternalDiscountSetMessagePayload'
          ProductPublished: '#/components/schemas/ProductPublishedMessagePayload'
          ProductRemovedFromCategory: '#/components/schemas/ProductRemovedFromCategoryMessagePayload'
          ProductRevertedStagedChanges: '#/components/schemas/ProductRevertedStagedChangesMessagePayload'
          ProductSelectionCreated: '#/components/schemas/ProductSelectionCreatedMessagePayload'
          ProductSelectionDeleted: '#/components/schemas/ProductSelectionDeletedMessagePayload'
          ProductSelectionProductAdded: '#/components/schemas/ProductSelectionProductAddedMessagePayload'
          ProductSelectionProductRemoved: '#/components/schemas/ProductSelectionProductRemovedMessagePayload'
          ProductSlugChanged: '#/components/schemas/ProductSlugChangedMessagePayload'
          ProductStateTransition: '#/components/schemas/ProductStateTransitionMessagePayload'
          ProductUnpublished: '#/components/schemas/ProductUnpublishedMessagePayload'
          ProductVariantAdded: '#/components/schemas/ProductVariantAddedMessagePayload'
          ProductVariantDeleted: '#/components/schemas/ProductVariantDeletedMessagePayload'
          ReviewCreated: '#/components/schemas/ReviewCreatedMessagePayload'
          ReviewRatingSet: '#/components/schemas/ReviewRatingSetMessagePayload'
          ReviewStateTransition: '#/components/schemas/ReviewStateTransitionMessagePayload'
          ShoppingListStoreSet: '#/components/schemas/ShoppingListStoreSetMessagePayload'
          StoreCreated: '#/components/schemas/StoreCreatedMessagePayload'
          StoreDeleted: '#/components/schemas/StoreDeletedMessagePayload'
          StoreProductSelectionsChanged: '#/components/schemas/StoreProductSelectionsChangedMessagePayload'
      properties:
        type:
          type: "string"
    OrderBillingAddressSetMessagePayload:
      allOf:
      - $ref: '#/components/schemas/MessagePayload'
      - type: "object"
        properties:
          type:
            type: "string"
          address:
            $ref: '#/components/schemas/Address'
          oldAddress:
            $ref: '#/components/schemas/Address'
    OrderCreatedMessagePayload:
      allOf:
      - $ref: '#/components/schemas/MessagePayload'
      - type: "object"
        properties:
          type:
            type: "string"
          order:
            $ref: '#/components/schemas/Order'
    OrderCustomLineItemDiscountSetMessagePayload:
      allOf:
      - $ref: '#/components/schemas/MessagePayload'
      - type: "object"
        properties:
          type:
            type: "string"
          customLineItemId:
            type: "string"
          discountedPricePerQuantity:
            type: "array"
            items:
              $ref: '#/components/schemas/DiscountedLineItemPriceForQuantity'
          taxedPrice:
            $ref: '#/components/schemas/TaxedItemPrice'
    OrderCustomerEmailSetMessagePayload:
      allOf:
      - $ref: '#/components/schemas/MessagePayload'
      - type: "object"
        properties:
          type:
            type: "string"
          email:
            type: "string"
          oldEmail:
            type: "string"
    OrderCustomerGroupSetMessagePayload:
      allOf:
      - $ref: '#/components/schemas/MessagePayload'
      - type: "object"
        properties:
          type:
            type: "string"
          customerGroup:
            $ref: '#/components/schemas/CustomerGroupReference'
          oldCustomerGroup:
            $ref: '#/components/schemas/CustomerGroupReference'
    OrderCustomerSetMessagePayload:
      allOf:
      - $ref: '#/components/schemas/MessagePayload'
      - type: "object"
        properties:
          type:
            type: "string"
          customer:
            $ref: '#/components/schemas/CustomerReference'
          customerGroup:
            $ref: '#/components/schemas/CustomerGroupReference'
          oldCustomer:
            $ref: '#/components/schemas/CustomerReference'
          oldCustomerGroup:
            $ref: '#/components/schemas/CustomerGroupReference'
    OrderDeletedMessagePayload:
      allOf:
      - $ref: '#/components/schemas/MessagePayload'
      - type: "object"
        properties:
          type:
            type: "string"
          order:
            $ref: '#/components/schemas/Order'
    OrderDiscountCodeAddedMessagePayload:
      allOf:
      - $ref: '#/components/schemas/MessagePayload'
      - type: "object"
        properties:
          type:
            type: "string"
          discountCode:
            $ref: '#/components/schemas/DiscountCodeReference'
    OrderDiscountCodeRemovedMessagePayload:
      allOf:
      - $ref: '#/components/schemas/MessagePayload'
      - type: "object"
        properties:
          type:
            type: "string"
          discountCode:
            $ref: '#/components/schemas/DiscountCodeReference'
    OrderDiscountCodeStateSetMessagePayload:
      allOf:
      - $ref: '#/components/schemas/MessagePayload'
      - type: "object"
        properties:
          type:
            type: "string"
          discountCode:
            $ref: '#/components/schemas/DiscountCodeReference'
          state:
            $ref: '#/components/schemas/DiscountCodeState'
          oldState:
            $ref: '#/components/schemas/DiscountCodeState'
    OrderEditAppliedMessagePayload:
      allOf:
      - $ref: '#/components/schemas/MessagePayload'
      - type: "object"
        properties:
          type:
            type: "string"
          edit:
            $ref: '#/components/schemas/OrderEditReference'
          result:
            $ref: '#/components/schemas/OrderEditApplied'
    OrderImportedMessagePayload:
      allOf:
      - $ref: '#/components/schemas/MessagePayload'
      - type: "object"
        properties:
          type:
            type: "string"
          order:
            $ref: '#/components/schemas/Order'
    OrderLineItemAddedMessagePayload:
      allOf:
      - $ref: '#/components/schemas/MessagePayload'
      - type: "object"
        properties:
          type:
            type: "string"
          lineItem:
            $ref: '#/components/schemas/LineItem'
          addedQuantity:
            type: "integer"
            format: "int64"
    OrderLineItemDiscountSetMessagePayload:
      allOf:
      - $ref: '#/components/schemas/MessagePayload'
      - type: "object"
        properties:
          type:
            type: "string"
          lineItemId:
            type: "string"
          discountedPricePerQuantity:
            type: "array"
            items:
              $ref: '#/components/schemas/DiscountedLineItemPriceForQuantity'
          totalPrice:
            $ref: '#/components/schemas/Money'
          taxedPrice:
            $ref: '#/components/schemas/TaxedItemPrice'
    OrderLineItemDistributionChannelSetMessagePayload:
      allOf:
      - $ref: '#/components/schemas/MessagePayload'
      - type: "object"
        properties:
          type:
            type: "string"
          lineItemId:
            type: "string"
          distributionChannel:
            $ref: '#/components/schemas/ChannelReference'
    OrderLineItemRemovedMessagePayload:
      allOf:
      - $ref: '#/components/schemas/MessagePayload'
      - type: "object"
        properties:
          type:
            type: "string"
          lineItemId:
            type: "string"
          removedQuantity:
            type: "integer"
            format: "int64"
          newQuantity:
            type: "integer"
            format: "int64"
          newState:
            type: "array"
            items:
              $ref: '#/components/schemas/ItemState'
          newTotalPrice:
            $ref: '#/components/schemas/TypedMoney'
          newTaxedPrice:
            $ref: '#/components/schemas/TaxedItemPrice'
          newPrice:
            $ref: '#/components/schemas/Price'
          newShippingDetail:
            $ref: '#/components/schemas/ItemShippingDetails'
    OrderPaymentAddedMessagePayload:
      allOf:
      - $ref: '#/components/schemas/MessagePayload'
      - type: "object"
        properties:
          type:
            type: "string"
          payment:
            $ref: '#/components/schemas/PaymentReference'
    OrderPaymentStateChangedMessagePayload:
      allOf:
      - $ref: '#/components/schemas/MessagePayload'
      - type: "object"
        properties:
          type:
            type: "string"
          paymentState:
            $ref: '#/components/schemas/PaymentState'
          oldPaymentState:
            $ref: '#/components/schemas/PaymentState'
    OrderReturnInfoAddedMessagePayload:
      allOf:
      - $ref: '#/components/schemas/MessagePayload'
      - type: "object"
        properties:
          type:
            type: "string"
          returnInfo:
            $ref: '#/components/schemas/ReturnInfo'
    OrderReturnInfoSetMessagePayload:
      allOf:
      - $ref: '#/components/schemas/MessagePayload'
      - type: "object"
        properties:
          type:
            type: "string"
          returnInfo:
            type: "array"
            items:
              $ref: '#/components/schemas/ReturnInfo'
    OrderReturnShipmentStateChangedMessagePayload:
      allOf:
      - $ref: '#/components/schemas/MessagePayload'
      - type: "object"
        properties:
          type:
            type: "string"
          returnItemId:
            type: "string"
          returnShipmentState:
            $ref: '#/components/schemas/ReturnShipmentState'
    OrderShipmentStateChangedMessagePayload:
      allOf:
      - $ref: '#/components/schemas/MessagePayload'
      - type: "object"
        properties:
          type:
            type: "string"
          shipmentState:
            $ref: '#/components/schemas/ShipmentState'
          oldShipmentState:
            $ref: '#/components/schemas/ShipmentState'
    OrderShippingAddressSetMessagePayload:
      allOf:
      - $ref: '#/components/schemas/MessagePayload'
      - type: "object"
        properties:
          type:
            type: "string"
          address:
            $ref: '#/components/schemas/Address'
          oldAddress:
            $ref: '#/components/schemas/Address'
    OrderShippingInfoSetMessagePayload:
      allOf:
      - $ref: '#/components/schemas/MessagePayload'
      - type: "object"
        properties:
          type:
            type: "string"
          shippingInfo:
            $ref: '#/components/schemas/ShippingInfo'
          oldShippingInfo:
            $ref: '#/components/schemas/ShippingInfo'
    OrderShippingRateInputSetMessagePayload:
      allOf:
      - $ref: '#/components/schemas/MessagePayload'
      - type: "object"
        properties:
          type:
            type: "string"
          shippingRateInput:
            $ref: '#/components/schemas/ShippingRateInput'
          oldShippingRateInput:
            $ref: '#/components/schemas/ShippingRateInput'
    OrderStateChangedMessagePayload:
      allOf:
      - $ref: '#/components/schemas/MessagePayload'
      - type: "object"
        properties:
          type:
            type: "string"
          orderState:
            $ref: '#/components/schemas/OrderState'
          oldOrderState:
            $ref: '#/components/schemas/OrderState'
    OrderStateTransitionMessagePayload:
      allOf:
      - $ref: '#/components/schemas/MessagePayload'
      - type: "object"
        properties:
          type:
            type: "string"
          state:
            $ref: '#/components/schemas/StateReference'
          oldState:
            $ref: '#/components/schemas/StateReference'
          force:
            type: "boolean"
    OrderStoreSetMessagePayload:
      allOf:
      - $ref: '#/components/schemas/MessagePayload'
      - type: "object"
        properties:
          type:
            type: "string"
          store:
            $ref: '#/components/schemas/StoreKeyReference'
    ParcelAddedToDeliveryMessagePayload:
      allOf:
      - $ref: '#/components/schemas/MessagePayload'
      - type: "object"
        properties:
          type:
            type: "string"
          delivery:
            $ref: '#/components/schemas/Delivery'
          parcel:
            $ref: '#/components/schemas/Parcel'
    ParcelItemsUpdatedMessagePayload:
      allOf:
      - $ref: '#/components/schemas/MessagePayload'
      - type: "object"
        properties:
          type:
            type: "string"
          parcelId:
            type: "string"
          deliveryId:
            type: "string"
          items:
            type: "array"
            items:
              $ref: '#/components/schemas/DeliveryItem'
          oldItems:
            type: "array"
            items:
              $ref: '#/components/schemas/DeliveryItem'
    ParcelMeasurementsUpdatedMessagePayload:
      allOf:
      - $ref: '#/components/schemas/MessagePayload'
      - type: "object"
        properties:
          type:
            type: "string"
          deliveryId:
            type: "string"
          parcelId:
            type: "string"
          measurements:
            $ref: '#/components/schemas/ParcelMeasurements'
    ParcelRemovedFromDeliveryMessagePayload:
      allOf:
      - $ref: '#/components/schemas/MessagePayload'
      - type: "object"
        properties:
          type:
            type: "string"
          deliveryId:
            type: "string"
          parcel:
            $ref: '#/components/schemas/Parcel'
    ParcelTrackingDataUpdatedMessagePayload:
      allOf:
      - $ref: '#/components/schemas/MessagePayload'
      - type: "object"
        properties:
          type:
            type: "string"
          deliveryId:
            type: "string"
          parcelId:
            type: "string"
          trackingData:
            $ref: '#/components/schemas/TrackingData'
    PaymentCreatedMessagePayload:
      allOf:
      - $ref: '#/components/schemas/MessagePayload'
      - type: "object"
        properties:
          type:
            type: "string"
          payment:
            $ref: '#/components/schemas/Payment'
    PaymentInteractionAddedMessagePayload:
      allOf:
      - $ref: '#/components/schemas/MessagePayload'
      - type: "object"
        properties:
          type:
            type: "string"
          interaction:
            $ref: '#/components/schemas/CustomFields'
    PaymentStatusInterfaceCodeSetMessagePayload:
      allOf:
      - $ref: '#/components/schemas/MessagePayload'
      - type: "object"
        properties:
          type:
            type: "string"
          paymentId:
            type: "string"
          interfaceCode:
            type: "string"
    PaymentStatusStateTransitionMessagePayload:
      allOf:
      - $ref: '#/components/schemas/MessagePayload'
      - type: "object"
        properties:
          type:
            type: "string"
          state:
            $ref: '#/components/schemas/StateReference'
          force:
            type: "boolean"
    PaymentTransactionAddedMessagePayload:
      allOf:
      - $ref: '#/components/schemas/MessagePayload'
      - type: "object"
        properties:
          type:
            type: "string"
          transaction:
            $ref: '#/components/schemas/Transaction'
    PaymentTransactionStateChangedMessagePayload:
      allOf:
      - $ref: '#/components/schemas/MessagePayload'
      - type: "object"
        properties:
          type:
            type: "string"
          transactionId:
            type: "string"
          state:
            $ref: '#/components/schemas/TransactionState'
    ProductAddedToCategoryMessagePayload:
      allOf:
      - $ref: '#/components/schemas/MessagePayload'
      - type: "object"
        properties:
          type:
            type: "string"
          category:
            $ref: '#/components/schemas/CategoryReference'
          staged:
            type: "boolean"
    ProductCreatedMessagePayload:
      allOf:
      - $ref: '#/components/schemas/MessagePayload'
      - type: "object"
        properties:
          type:
            type: "string"
          productProjection:
            $ref: '#/components/schemas/ProductProjection'
    ProductDeletedMessagePayload:
      allOf:
      - $ref: '#/components/schemas/MessagePayload'
      - type: "object"
        properties:
          type:
            type: "string"
          removedImageUrls:
            type: "array"
            items:
              type: "string"
          currentProjection:
            $ref: '#/components/schemas/ProductProjection'
    ProductImageAddedMessagePayload:
      allOf:
      - $ref: '#/components/schemas/MessagePayload'
      - type: "object"
        properties:
          type:
            type: "string"
          variantId:
            type: "integer"
            format: "int64"
          image:
            $ref: '#/components/schemas/Image'
          staged:
            type: "boolean"
    ProductPriceDiscountsSetMessagePayload:
      allOf:
      - $ref: '#/components/schemas/MessagePayload'
      - type: "object"
        properties:
          type:
            type: "string"
          updatedPrices:
            type: "array"
            items:
              $ref: '#/components/schemas/ProductPriceDiscountsSetUpdatedPrice'
    ProductPriceExternalDiscountSetMessagePayload:
      allOf:
      - $ref: '#/components/schemas/MessagePayload'
      - type: "object"
        properties:
          type:
            type: "string"
          variantId:
            type: "integer"
            format: "int32"
          variantKey:
            type: "string"
          sku:
            type: "string"
          priceId:
            type: "string"
          discounted:
            $ref: '#/components/schemas/DiscountedPrice'
          staged:
            type: "boolean"
    ProductPublishedMessagePayload:
      allOf:
      - $ref: '#/components/schemas/MessagePayload'
      - type: "object"
        properties:
          type:
            type: "string"
          removedImageUrls:
            type: "array"
            items:
              type: "string"
          productProjection:
            $ref: '#/components/schemas/ProductProjection'
          scope:
            $ref: '#/components/schemas/ProductPublishScope'
    ProductRemovedFromCategoryMessagePayload:
      allOf:
      - $ref: '#/components/schemas/MessagePayload'
      - type: "object"
        properties:
          type:
            type: "string"
          category:
            $ref: '#/components/schemas/CategoryReference'
          staged:
            type: "boolean"
    ProductRevertedStagedChangesMessagePayload:
      allOf:
      - $ref: '#/components/schemas/MessagePayload'
      - type: "object"
        properties:
          type:
            type: "string"
          removedImageUrls:
            type: "array"
            items:
              type: "string"
    ProductSelectionCreatedMessagePayload:
      allOf:
      - $ref: '#/components/schemas/MessagePayload'
      - type: "object"
        properties:
          type:
            type: "string"
          productSelection:
            $ref: '#/components/schemas/ProductSelectionType'
    ProductSelectionDeletedMessagePayload:
      allOf:
      - $ref: '#/components/schemas/MessagePayload'
      - type: "object"
        properties:
          type:
            type: "string"
          name:
            $ref: '#/components/schemas/LocalizedString'
    ProductSelectionProductAddedMessagePayload:
      allOf:
      - $ref: '#/components/schemas/MessagePayload'
      - type: "object"
        properties:
          type:
            type: "string"
          product:
            $ref: '#/components/schemas/ProductReference'
    ProductSelectionProductRemovedMessagePayload:
      allOf:
      - $ref: '#/components/schemas/MessagePayload'
      - type: "object"
        properties:
          type:
            type: "string"
          product:
            $ref: '#/components/schemas/ProductReference'
    ProductSlugChangedMessagePayload:
      allOf:
      - $ref: '#/components/schemas/MessagePayload'
      - type: "object"
        properties:
          type:
            type: "string"
          slug:
            $ref: '#/components/schemas/LocalizedString'
          oldSlug:
            $ref: '#/components/schemas/LocalizedString'
    ProductStateTransitionMessagePayload:
      allOf:
      - $ref: '#/components/schemas/MessagePayload'
      - type: "object"
        properties:
          type:
            type: "string"
          state:
            $ref: '#/components/schemas/StateReference'
          force:
            type: "boolean"
    ProductUnpublishedMessagePayload:
      allOf:
      - $ref: '#/components/schemas/MessagePayload'
      - type: "object"
        properties:
          type:
            type: "string"
    ProductVariantAddedMessagePayload:
      allOf:
      - $ref: '#/components/schemas/MessagePayload'
      - type: "object"
        properties:
          type:
            type: "string"
          variant:
            $ref: '#/components/schemas/ProductVariant'
          staged:
            type: "boolean"
    ProductVariantDeletedMessagePayload:
      allOf:
      - $ref: '#/components/schemas/MessagePayload'
      - type: "object"
        properties:
          type:
            type: "string"
          variant:
            $ref: '#/components/schemas/ProductVariant'
          removedImageUrls:
            type: "array"
            items:
              type: "string"
    ReviewCreatedMessagePayload:
      allOf:
      - $ref: '#/components/schemas/MessagePayload'
      - type: "object"
        properties:
          type:
            type: "string"
          review:
            $ref: '#/components/schemas/Review'
    ReviewRatingSetMessagePayload:
      allOf:
      - $ref: '#/components/schemas/MessagePayload'
      - type: "object"
        properties:
          type:
            type: "string"
          oldRating:
            type: "number"
            format: "double"
          newRating:
            type: "number"
            format: "double"
          includedInStatistics:
            type: "boolean"
          target:
            $ref: '#/components/schemas/Reference'
    ReviewStateTransitionMessagePayload:
      allOf:
      - $ref: '#/components/schemas/MessagePayload'
      - type: "object"
        properties:
          type:
            type: "string"
          oldState:
            $ref: '#/components/schemas/StateReference'
          newState:
            $ref: '#/components/schemas/StateReference'
          oldIncludedInStatistics:
            type: "boolean"
          newIncludedInStatistics:
            type: "boolean"
          target:
            $ref: '#/components/schemas/Reference'
          force:
            type: "boolean"
    ShoppingListStoreSetMessagePayload:
      allOf:
      - $ref: '#/components/schemas/MessagePayload'
      - type: "object"
        properties:
          type:
            type: "string"
          store:
            $ref: '#/components/schemas/StoreKeyReference'
    StoreCreatedMessagePayload:
      allOf:
      - $ref: '#/components/schemas/MessagePayload'
      - type: "object"
        properties:
          type:
            type: "string"
          name:
            $ref: '#/components/schemas/LocalizedString'
          languages:
            type: "array"
            items:
              type: "string"
          distributionChannels:
            type: "array"
            items:
              $ref: '#/components/schemas/ChannelReference'
          supplyChannels:
            type: "array"
            items:
              $ref: '#/components/schemas/ChannelReference'
          productSelections:
            type: "array"
            items:
              $ref: '#/components/schemas/ProductSelectionSetting'
          custom:
            $ref: '#/components/schemas/CustomFields'
    StoreDeletedMessagePayload:
      allOf:
      - $ref: '#/components/schemas/MessagePayload'
      - type: "object"
        properties:
          type:
            type: "string"
    StoreProductSelectionsChangedMessagePayload:
      allOf:
      - $ref: '#/components/schemas/MessagePayload'
      - type: "object"
        properties:
          type:
            type: "string"
          addedProductSelections:
            type: "array"
            items:
              $ref: '#/components/schemas/ProductSelectionSetting'
          removedProductSelections:
            type: "array"
            items:
              $ref: '#/components/schemas/ProductSelectionSetting'
          updatedProductSelections:
            type: "array"
            items:
              $ref: '#/components/schemas/ProductSelectionSetting'
    OrderEdit:
      allOf:
      - $ref: '#/components/schemas/BaseResource'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          key:
            type: "string"
          resource:
            $ref: '#/components/schemas/OrderReference'
          stagedActions:
            type: "array"
            items:
              $ref: '#/components/schemas/StagedOrderUpdateAction'
          custom:
            $ref: '#/components/schemas/CustomFields'
          result:
            $ref: '#/components/schemas/OrderEditResult'
          comment:
            type: "string"
    OrderEditApplied:
      allOf:
      - $ref: '#/components/schemas/OrderEditResult'
      - type: "object"
        properties:
          type:
            type: "string"
          appliedAt:
            type: "string"
            format: "datetime"
          excerptBeforeEdit:
            $ref: '#/components/schemas/OrderExcerpt'
          excerptAfterEdit:
            $ref: '#/components/schemas/OrderExcerpt'
    OrderEditApply:
      type: "object"
      properties:
        editVersion:
          type: "integer"
          format: "int32"
        resourceVersion:
          type: "integer"
          format: "int32"
    OrderEditDraft:
      type: "object"
      properties:
        key:
          type: "string"
        resource:
          $ref: '#/components/schemas/OrderReference'
        stagedActions:
          type: "array"
          items:
            $ref: '#/components/schemas/StagedOrderUpdateAction'
        custom:
          $ref: '#/components/schemas/CustomFieldsDraft'
        comment:
          type: "string"
        dryRun:
          type: "boolean"
    OrderEditNotProcessed:
      allOf:
      - $ref: '#/components/schemas/OrderEditResult'
      - type: "object"
        properties:
          type:
            type: "string"
    OrderEditPagedQueryResponse:
      type: "object"
      properties:
        limit:
          type: "integer"
          format: "int64"
        count:
          type: "integer"
          format: "int64"
        total:
          type: "integer"
          format: "int64"
        offset:
          type: "integer"
          format: "int64"
        results:
          type: "array"
          items:
            $ref: '#/components/schemas/OrderEdit'
    OrderEditPreviewFailure:
      allOf:
      - $ref: '#/components/schemas/OrderEditResult'
      - type: "object"
        properties:
          type:
            type: "string"
          errors:
            type: "array"
            items:
              $ref: '#/components/schemas/ErrorObject'
    OrderEditPreviewSuccess:
      allOf:
      - $ref: '#/components/schemas/OrderEditResult'
      - type: "object"
        properties:
          type:
            type: "string"
          preview:
            $ref: '#/components/schemas/StagedOrder'
          messagePayloads:
            type: "array"
            items:
              $ref: '#/components/schemas/MessagePayload'
    OrderEditReference:
      allOf:
      - $ref: '#/components/schemas/Reference'
      - type: "object"
        properties:
          typeId:
            $ref: '#/components/schemas/ReferenceTypeId'
          id:
            type: "string"
          obj:
            $ref: '#/components/schemas/OrderEdit'
    OrderEditResourceIdentifier:
      allOf:
      - $ref: '#/components/schemas/ResourceIdentifier'
      - type: "object"
        properties:
          typeId:
            $ref: '#/components/schemas/ReferenceTypeId'
          id:
            type: "string"
          key:
            type: "string"
    OrderEditResult:
      type: "object"
      discriminator:
        propertyName: type
        mapping:
          Applied: '#/components/schemas/OrderEditApplied'
          NotProcessed: '#/components/schemas/OrderEditNotProcessed'
          PreviewFailure: '#/components/schemas/OrderEditPreviewFailure'
          PreviewSuccess: '#/components/schemas/OrderEditPreviewSuccess'
      properties:
        type:
          type: "string"
    OrderEditUpdate:
      type: "object"
      properties:
        version:
          type: "integer"
          format: "int64"
        actions:
          type: "array"
          items:
            $ref: '#/components/schemas/OrderEditUpdateAction'
        dryRun:
          type: "boolean"
    OrderEditUpdateAction:
      type: "object"
      discriminator:
        propertyName: action
        mapping:
          addStagedAction: '#/components/schemas/OrderEditAddStagedActionAction'
          setComment: '#/components/schemas/OrderEditSetCommentAction'
          setCustomField: '#/components/schemas/OrderEditSetCustomFieldAction'
          setCustomType: '#/components/schemas/OrderEditSetCustomTypeAction'
          setKey: '#/components/schemas/OrderEditSetKeyAction'
          setStagedActions: '#/components/schemas/OrderEditSetStagedActionsAction'
      properties:
        action:
          type: "string"
    OrderExcerpt:
      type: "object"
      properties:
        totalPrice:
          $ref: '#/components/schemas/TypedMoney'
        taxedPrice:
          $ref: '#/components/schemas/TaxedPrice'
        version:
          type: "integer"
          format: "int32"
    StagedOrder:
      allOf:
      - $ref: '#/components/schemas/Order'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          completedAt:
            type: "string"
            format: "datetime"
          orderNumber:
            type: "string"
          customerId:
            type: "string"
          customerEmail:
            type: "string"
          anonymousId:
            type: "string"
          store:
            $ref: '#/components/schemas/StoreKeyReference'
          lineItems:
            type: "array"
            items:
              $ref: '#/components/schemas/LineItem'
          customLineItems:
            type: "array"
            items:
              $ref: '#/components/schemas/CustomLineItem'
          totalPrice:
            $ref: '#/components/schemas/TypedMoney'
          taxedPrice:
            $ref: '#/components/schemas/TaxedPrice'
          shippingAddress:
            $ref: '#/components/schemas/Address'
          billingAddress:
            $ref: '#/components/schemas/Address'
          taxMode:
            $ref: '#/components/schemas/TaxMode'
          taxRoundingMode:
            $ref: '#/components/schemas/RoundingMode'
          customerGroup:
            $ref: '#/components/schemas/CustomerGroupReference'
          country:
            type: "string"
          orderState:
            $ref: '#/components/schemas/OrderState'
          state:
            $ref: '#/components/schemas/StateReference'
          shipmentState:
            $ref: '#/components/schemas/ShipmentState'
          paymentState:
            $ref: '#/components/schemas/PaymentState'
          shippingInfo:
            $ref: '#/components/schemas/ShippingInfo'
          syncInfo:
            type: "array"
            items:
              $ref: '#/components/schemas/SyncInfo'
          returnInfo:
            type: "array"
            items:
              $ref: '#/components/schemas/ReturnInfo'
          discountCodes:
            type: "array"
            items:
              $ref: '#/components/schemas/DiscountCodeInfo'
          lastMessageSequenceNumber:
            type: "integer"
            format: "int64"
          cart:
            $ref: '#/components/schemas/CartReference'
          custom:
            $ref: '#/components/schemas/CustomFields'
          paymentInfo:
            $ref: '#/components/schemas/PaymentInfo'
          locale:
            type: "string"
          inventoryMode:
            $ref: '#/components/schemas/InventoryMode'
          origin:
            $ref: '#/components/schemas/CartOrigin'
          taxCalculationMode:
            $ref: '#/components/schemas/TaxCalculationMode'
          shippingRateInput:
            $ref: '#/components/schemas/ShippingRateInput'
          itemShippingAddresses:
            type: "array"
            items:
              $ref: '#/components/schemas/Address'
          refusedGifts:
            type: "array"
            items:
              $ref: '#/components/schemas/CartDiscountReference'
    StagedOrderUpdateAction:
      type: "object"
      discriminator:
        propertyName: action
        mapping:
          addCustomLineItem: '#/components/schemas/StagedOrderAddCustomLineItemAction'
          addDelivery: '#/components/schemas/StagedOrderAddDeliveryAction'
          addDiscountCode: '#/components/schemas/StagedOrderAddDiscountCodeAction'
          addItemShippingAddress: '#/components/schemas/StagedOrderAddItemShippingAddressAction'
          addLineItem: '#/components/schemas/StagedOrderAddLineItemAction'
          addParcelToDelivery: '#/components/schemas/StagedOrderAddParcelToDeliveryAction'
          addPayment: '#/components/schemas/StagedOrderAddPaymentAction'
          addReturnInfo: '#/components/schemas/StagedOrderAddReturnInfoAction'
          addShoppingList: '#/components/schemas/StagedOrderAddShoppingListAction'
          changeCustomLineItemMoney: '#/components/schemas/StagedOrderChangeCustomLineItemMoneyAction'
          changeCustomLineItemQuantity: '#/components/schemas/StagedOrderChangeCustomLineItemQuantityAction'
          changeLineItemQuantity: '#/components/schemas/StagedOrderChangeLineItemQuantityAction'
          changeOrderState: '#/components/schemas/StagedOrderChangeOrderStateAction'
          changePaymentState: '#/components/schemas/StagedOrderChangePaymentStateAction'
          changeShipmentState: '#/components/schemas/StagedOrderChangeShipmentStateAction'
          changeTaxCalculationMode: '#/components/schemas/StagedOrderChangeTaxCalculationModeAction'
          changeTaxMode: '#/components/schemas/StagedOrderChangeTaxModeAction'
          changeTaxRoundingMode: '#/components/schemas/StagedOrderChangeTaxRoundingModeAction'
          importCustomLineItemState: '#/components/schemas/StagedOrderImportCustomLineItemStateAction'
          importLineItemState: '#/components/schemas/StagedOrderImportLineItemStateAction'
          removeCustomLineItem: '#/components/schemas/StagedOrderRemoveCustomLineItemAction'
          removeDelivery: '#/components/schemas/StagedOrderRemoveDeliveryAction'
          removeDiscountCode: '#/components/schemas/StagedOrderRemoveDiscountCodeAction'
          removeItemShippingAddress: '#/components/schemas/StagedOrderRemoveItemShippingAddressAction'
          removeLineItem: '#/components/schemas/StagedOrderRemoveLineItemAction'
          removeParcelFromDelivery: '#/components/schemas/StagedOrderRemoveParcelFromDeliveryAction'
          removePayment: '#/components/schemas/StagedOrderRemovePaymentAction'
          setBillingAddress: '#/components/schemas/StagedOrderSetBillingAddressAction'
          setBillingAddressCustomField: '#/components/schemas/StagedOrderSetBillingAddressCustomFieldAction'
          setBillingAddressCustomType: '#/components/schemas/StagedOrderSetBillingAddressCustomTypeAction'
          setCountry: '#/components/schemas/StagedOrderSetCountryAction'
          setCustomField: '#/components/schemas/StagedOrderSetCustomFieldAction'
          setCustomLineItemCustomField: '#/components/schemas/StagedOrderSetCustomLineItemCustomFieldAction'
          setCustomLineItemCustomType: '#/components/schemas/StagedOrderSetCustomLineItemCustomTypeAction'
          setCustomLineItemShippingDetails: '#/components/schemas/StagedOrderSetCustomLineItemShippingDetailsAction'
          setCustomLineItemTaxAmount: '#/components/schemas/StagedOrderSetCustomLineItemTaxAmountAction'
          setCustomLineItemTaxRate: '#/components/schemas/StagedOrderSetCustomLineItemTaxRateAction'
          setCustomShippingMethod: '#/components/schemas/StagedOrderSetCustomShippingMethodAction'
          setCustomType: '#/components/schemas/StagedOrderSetCustomTypeAction'
          setCustomerEmail: '#/components/schemas/StagedOrderSetCustomerEmailAction'
          setCustomerGroup: '#/components/schemas/StagedOrderSetCustomerGroupAction'
          setCustomerId: '#/components/schemas/StagedOrderSetCustomerIdAction'
          setDeliveryAddress: '#/components/schemas/StagedOrderSetDeliveryAddressAction'
          setDeliveryAddressCustomField: '#/components/schemas/StagedOrderSetDeliveryAddressCustomFieldAction'
          setDeliveryAddressCustomType: '#/components/schemas/StagedOrderSetDeliveryAddressCustomTypeAction'
          setDeliveryCustomField: '#/components/schemas/StagedOrderSetDeliveryCustomFieldAction'
          setDeliveryCustomType: '#/components/schemas/StagedOrderSetDeliveryCustomTypeAction'
          setDeliveryItems: '#/components/schemas/StagedOrderSetDeliveryItemsAction'
          setItemShippingAddressCustomField: '#/components/schemas/StagedOrderSetItemShippingAddressCustomFieldAction'
          setItemShippingAddressCustomType: '#/components/schemas/StagedOrderSetItemShippingAddressCustomTypeAction'
          setLineItemCustomField: '#/components/schemas/StagedOrderSetLineItemCustomFieldAction'
          setLineItemCustomType: '#/components/schemas/StagedOrderSetLineItemCustomTypeAction'
          setLineItemDistributionChannel: '#/components/schemas/StagedOrderSetLineItemDistributionChannelAction'
          setLineItemPrice: '#/components/schemas/StagedOrderSetLineItemPriceAction'
          setLineItemShippingDetails: '#/components/schemas/StagedOrderSetLineItemShippingDetailsAction'
          setLineItemTaxAmount: '#/components/schemas/StagedOrderSetLineItemTaxAmountAction'
          setLineItemTaxRate: '#/components/schemas/StagedOrderSetLineItemTaxRateAction'
          setLineItemTotalPrice: '#/components/schemas/StagedOrderSetLineItemTotalPriceAction'
          setLocale: '#/components/schemas/StagedOrderSetLocaleAction'
          setOrderNumber: '#/components/schemas/StagedOrderSetOrderNumberAction'
          setOrderTotalTax: '#/components/schemas/StagedOrderSetOrderTotalTaxAction'
          setParcelCustomField: '#/components/schemas/StagedOrderSetParcelCustomFieldAction'
          setParcelCustomType: '#/components/schemas/StagedOrderSetParcelCustomTypeAction'
          setParcelItems: '#/components/schemas/StagedOrderSetParcelItemsAction'
          setParcelMeasurements: '#/components/schemas/StagedOrderSetParcelMeasurementsAction'
          setParcelTrackingData: '#/components/schemas/StagedOrderSetParcelTrackingDataAction'
          setReturnInfo: '#/components/schemas/StagedOrderSetReturnInfoAction'
          setReturnItemCustomField: '#/components/schemas/StagedOrderSetReturnItemCustomFieldAction'
          setReturnItemCustomType: '#/components/schemas/StagedOrderSetReturnItemCustomTypeAction'
          setReturnPaymentState: '#/components/schemas/StagedOrderSetReturnPaymentStateAction'
          setReturnShipmentState: '#/components/schemas/StagedOrderSetReturnShipmentStateAction'
          setShippingAddress: '#/components/schemas/StagedOrderSetShippingAddressAction'
          setShippingAddressAndCustomShippingMethod: '#/components/schemas/StagedOrderSetShippingAddressAndCustomShippingMethodAction'
          setShippingAddressAndShippingMethod: '#/components/schemas/StagedOrderSetShippingAddressAndShippingMethodAction'
          setShippingAddressCustomField: '#/components/schemas/StagedOrderSetShippingAddressCustomFieldAction'
          setShippingAddressCustomType: '#/components/schemas/StagedOrderSetShippingAddressCustomTypeAction'
          setShippingMethod: '#/components/schemas/StagedOrderSetShippingMethodAction'
          setShippingMethodTaxAmount: '#/components/schemas/StagedOrderSetShippingMethodTaxAmountAction'
          setShippingMethodTaxRate: '#/components/schemas/StagedOrderSetShippingMethodTaxRateAction'
          setShippingRateInput: '#/components/schemas/StagedOrderSetShippingRateInputAction'
          transitionCustomLineItemState: '#/components/schemas/StagedOrderTransitionCustomLineItemStateAction'
          transitionLineItemState: '#/components/schemas/StagedOrderTransitionLineItemStateAction'
          transitionState: '#/components/schemas/StagedOrderTransitionStateAction'
          updateItemShippingAddress: '#/components/schemas/StagedOrderUpdateItemShippingAddressAction'
          updateSyncInfo: '#/components/schemas/StagedOrderUpdateSyncInfoAction'
      properties:
        action:
          type: "string"
    OrderEditAddStagedActionAction:
      allOf:
      - $ref: '#/components/schemas/OrderEditUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          stagedAction:
            $ref: '#/components/schemas/StagedOrderUpdateAction'
    OrderEditSetCommentAction:
      allOf:
      - $ref: '#/components/schemas/OrderEditUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          comment:
            type: "string"
    OrderEditSetCustomFieldAction:
      allOf:
      - $ref: '#/components/schemas/OrderEditUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          name:
            type: "string"
          value:
            anyOf:
              - type: "string"
              - type: "object"
              - type: "array"
                items:
                    type: "string"
              - type: "number"
              - type: "integer"
              - type: "boolean"
    OrderEditSetCustomTypeAction:
      allOf:
      - $ref: '#/components/schemas/OrderEditUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          type:
            $ref: '#/components/schemas/TypeResourceIdentifier'
          fields:
            type: "string"
            additionalProperties: true
    OrderEditSetKeyAction:
      allOf:
      - $ref: '#/components/schemas/OrderEditUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          key:
            type: "string"
    OrderEditSetStagedActionsAction:
      allOf:
      - $ref: '#/components/schemas/OrderEditUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          stagedActions:
            type: "array"
            items:
              $ref: '#/components/schemas/StagedOrderUpdateAction'
    StagedOrderAddCustomLineItemAction:
      allOf:
      - $ref: '#/components/schemas/StagedOrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          money:
            $ref: '#/components/schemas/Money'
          name:
            $ref: '#/components/schemas/LocalizedString'
          quantity:
            type: "number"
            format: "double"
          slug:
            type: "string"
          taxCategory:
            $ref: '#/components/schemas/TaxCategoryResourceIdentifier'
          custom:
            $ref: '#/components/schemas/CustomFieldsDraft'
          externalTaxRate:
            $ref: '#/components/schemas/ExternalTaxRateDraft'
    StagedOrderAddDeliveryAction:
      allOf:
      - $ref: '#/components/schemas/StagedOrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          items:
            type: "array"
            items:
              $ref: '#/components/schemas/DeliveryItem'
          address:
            $ref: '#/components/schemas/BaseAddress'
          parcels:
            type: "array"
            items:
              $ref: '#/components/schemas/ParcelDraft'
          custom:
            $ref: '#/components/schemas/CustomFields'
    StagedOrderAddDiscountCodeAction:
      allOf:
      - $ref: '#/components/schemas/StagedOrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          code:
            type: "string"
    StagedOrderAddItemShippingAddressAction:
      allOf:
      - $ref: '#/components/schemas/StagedOrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          address:
            $ref: '#/components/schemas/BaseAddress'
    StagedOrderAddLineItemAction:
      allOf:
      - $ref: '#/components/schemas/StagedOrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          custom:
            $ref: '#/components/schemas/CustomFieldsDraft'
          distributionChannel:
            $ref: '#/components/schemas/ChannelResourceIdentifier'
          externalTaxRate:
            $ref: '#/components/schemas/ExternalTaxRateDraft'
          productId:
            type: "string"
          variantId:
            type: "integer"
            format: "int64"
          sku:
            type: "string"
          quantity:
            type: "number"
            format: "double"
          addedAt:
            type: "string"
            format: "datetime"
          supplyChannel:
            $ref: '#/components/schemas/ChannelResourceIdentifier'
          externalPrice:
            $ref: '#/components/schemas/Money'
          externalTotalPrice:
            $ref: '#/components/schemas/ExternalLineItemTotalPrice'
          shippingDetails:
            $ref: '#/components/schemas/ItemShippingDetailsDraft'
    StagedOrderAddParcelToDeliveryAction:
      allOf:
      - $ref: '#/components/schemas/StagedOrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          deliveryId:
            type: "string"
          measurements:
            $ref: '#/components/schemas/ParcelMeasurements'
          trackingData:
            $ref: '#/components/schemas/TrackingData'
          items:
            type: "array"
            items:
              $ref: '#/components/schemas/DeliveryItem'
    StagedOrderAddPaymentAction:
      allOf:
      - $ref: '#/components/schemas/StagedOrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          payment:
            $ref: '#/components/schemas/PaymentResourceIdentifier'
    StagedOrderAddReturnInfoAction:
      allOf:
      - $ref: '#/components/schemas/StagedOrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          returnTrackingId:
            type: "string"
          items:
            type: "array"
            items:
              $ref: '#/components/schemas/ReturnItemDraft'
          returnDate:
            type: "string"
            format: "datetime"
    StagedOrderAddShoppingListAction:
      allOf:
      - $ref: '#/components/schemas/StagedOrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          shoppingList:
            $ref: '#/components/schemas/ShoppingListResourceIdentifier'
          supplyChannel:
            $ref: '#/components/schemas/ChannelResourceIdentifier'
          distributionChannel:
            $ref: '#/components/schemas/ChannelResourceIdentifier'
    StagedOrderChangeCustomLineItemMoneyAction:
      allOf:
      - $ref: '#/components/schemas/StagedOrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          customLineItemId:
            type: "string"
          money:
            $ref: '#/components/schemas/Money'
    StagedOrderChangeCustomLineItemQuantityAction:
      allOf:
      - $ref: '#/components/schemas/StagedOrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          customLineItemId:
            type: "string"
          quantity:
            type: "number"
            format: "double"
    StagedOrderChangeLineItemQuantityAction:
      allOf:
      - $ref: '#/components/schemas/StagedOrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          lineItemId:
            type: "string"
          quantity:
            type: "number"
            format: "double"
          externalPrice:
            $ref: '#/components/schemas/Money'
          externalTotalPrice:
            $ref: '#/components/schemas/ExternalLineItemTotalPrice'
    StagedOrderChangeOrderStateAction:
      allOf:
      - $ref: '#/components/schemas/StagedOrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          orderState:
            $ref: '#/components/schemas/OrderState'
    StagedOrderChangePaymentStateAction:
      allOf:
      - $ref: '#/components/schemas/StagedOrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          paymentState:
            $ref: '#/components/schemas/PaymentState'
    StagedOrderChangeShipmentStateAction:
      allOf:
      - $ref: '#/components/schemas/StagedOrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          shipmentState:
            $ref: '#/components/schemas/ShipmentState'
    StagedOrderChangeTaxCalculationModeAction:
      allOf:
      - $ref: '#/components/schemas/StagedOrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          taxCalculationMode:
            $ref: '#/components/schemas/TaxCalculationMode'
    StagedOrderChangeTaxModeAction:
      allOf:
      - $ref: '#/components/schemas/StagedOrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          taxMode:
            $ref: '#/components/schemas/TaxMode'
    StagedOrderChangeTaxRoundingModeAction:
      allOf:
      - $ref: '#/components/schemas/StagedOrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          taxRoundingMode:
            $ref: '#/components/schemas/RoundingMode'
    StagedOrderImportCustomLineItemStateAction:
      allOf:
      - $ref: '#/components/schemas/StagedOrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          customLineItemId:
            type: "string"
          state:
            type: "array"
            items:
              $ref: '#/components/schemas/ItemState'
    StagedOrderImportLineItemStateAction:
      allOf:
      - $ref: '#/components/schemas/StagedOrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          lineItemId:
            type: "string"
          state:
            type: "array"
            items:
              $ref: '#/components/schemas/ItemState'
    StagedOrderRemoveCustomLineItemAction:
      allOf:
      - $ref: '#/components/schemas/StagedOrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          customLineItemId:
            type: "string"
    StagedOrderRemoveDeliveryAction:
      allOf:
      - $ref: '#/components/schemas/StagedOrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          deliveryId:
            type: "string"
    StagedOrderRemoveDiscountCodeAction:
      allOf:
      - $ref: '#/components/schemas/StagedOrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          discountCode:
            $ref: '#/components/schemas/DiscountCodeReference'
    StagedOrderRemoveItemShippingAddressAction:
      allOf:
      - $ref: '#/components/schemas/StagedOrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          addressKey:
            type: "string"
    StagedOrderRemoveLineItemAction:
      allOf:
      - $ref: '#/components/schemas/StagedOrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          lineItemId:
            type: "string"
          quantity:
            type: "number"
            format: "double"
          externalPrice:
            $ref: '#/components/schemas/Money'
          externalTotalPrice:
            $ref: '#/components/schemas/ExternalLineItemTotalPrice'
          shippingDetailsToRemove:
            $ref: '#/components/schemas/ItemShippingDetailsDraft'
    StagedOrderRemoveParcelFromDeliveryAction:
      allOf:
      - $ref: '#/components/schemas/StagedOrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          parcelId:
            type: "string"
    StagedOrderRemovePaymentAction:
      allOf:
      - $ref: '#/components/schemas/StagedOrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          payment:
            $ref: '#/components/schemas/PaymentResourceIdentifier'
    StagedOrderSetBillingAddressAction:
      allOf:
      - $ref: '#/components/schemas/StagedOrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          address:
            $ref: '#/components/schemas/BaseAddress'
    StagedOrderSetBillingAddressCustomFieldAction:
      allOf:
      - $ref: '#/components/schemas/StagedOrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          name:
            type: "string"
          value:
            anyOf:
              - type: "string"
              - type: "object"
              - type: "array"
                items:
                    type: "string"
              - type: "number"
              - type: "integer"
              - type: "boolean"
    StagedOrderSetBillingAddressCustomTypeAction:
      allOf:
      - $ref: '#/components/schemas/StagedOrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          type:
            $ref: '#/components/schemas/TypeResourceIdentifier'
          fields:
            $ref: '#/components/schemas/FieldContainer'
    StagedOrderSetCountryAction:
      allOf:
      - $ref: '#/components/schemas/StagedOrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          country:
            type: "string"
    StagedOrderSetCustomFieldAction:
      allOf:
      - $ref: '#/components/schemas/StagedOrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          name:
            type: "string"
          value:
            anyOf:
              - type: "string"
              - type: "object"
              - type: "array"
                items:
                    type: "string"
              - type: "number"
              - type: "integer"
              - type: "boolean"
    StagedOrderSetCustomLineItemCustomFieldAction:
      allOf:
      - $ref: '#/components/schemas/StagedOrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          customLineItemId:
            type: "string"
          name:
            type: "string"
          value:
            anyOf:
              - type: "string"
              - type: "object"
              - type: "array"
                items:
                    type: "string"
              - type: "number"
              - type: "integer"
              - type: "boolean"
    StagedOrderSetCustomLineItemCustomTypeAction:
      allOf:
      - $ref: '#/components/schemas/StagedOrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          customLineItemId:
            type: "string"
          type:
            $ref: '#/components/schemas/TypeResourceIdentifier'
          fields:
            $ref: '#/components/schemas/FieldContainer'
    StagedOrderSetCustomLineItemShippingDetailsAction:
      allOf:
      - $ref: '#/components/schemas/StagedOrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          customLineItemId:
            type: "string"
          shippingDetails:
            $ref: '#/components/schemas/ItemShippingDetailsDraft'
    StagedOrderSetCustomLineItemTaxAmountAction:
      allOf:
      - $ref: '#/components/schemas/StagedOrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          customLineItemId:
            type: "string"
          externalTaxAmount:
            $ref: '#/components/schemas/ExternalTaxAmountDraft'
    StagedOrderSetCustomLineItemTaxRateAction:
      allOf:
      - $ref: '#/components/schemas/StagedOrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          customLineItemId:
            type: "string"
          externalTaxRate:
            $ref: '#/components/schemas/ExternalTaxRateDraft'
    StagedOrderSetCustomShippingMethodAction:
      allOf:
      - $ref: '#/components/schemas/StagedOrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          shippingMethodName:
            type: "string"
          shippingRate:
            $ref: '#/components/schemas/ShippingRateDraft'
          taxCategory:
            $ref: '#/components/schemas/TaxCategoryResourceIdentifier'
          externalTaxRate:
            $ref: '#/components/schemas/ExternalTaxRateDraft'
    StagedOrderSetCustomTypeAction:
      allOf:
      - $ref: '#/components/schemas/StagedOrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          type:
            $ref: '#/components/schemas/TypeResourceIdentifier'
          fields:
            $ref: '#/components/schemas/FieldContainer'
    StagedOrderSetCustomerEmailAction:
      allOf:
      - $ref: '#/components/schemas/StagedOrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          email:
            type: "string"
    StagedOrderSetCustomerGroupAction:
      allOf:
      - $ref: '#/components/schemas/StagedOrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          customerGroup:
            $ref: '#/components/schemas/CustomerGroupResourceIdentifier'
    StagedOrderSetCustomerIdAction:
      allOf:
      - $ref: '#/components/schemas/StagedOrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          customerId:
            type: "string"
    StagedOrderSetDeliveryAddressAction:
      allOf:
      - $ref: '#/components/schemas/StagedOrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          deliveryId:
            type: "string"
          address:
            $ref: '#/components/schemas/BaseAddress'
    StagedOrderSetDeliveryAddressCustomFieldAction:
      allOf:
      - $ref: '#/components/schemas/StagedOrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          deliveryId:
            type: "string"
          name:
            type: "string"
          value:
            anyOf:
              - type: "string"
              - type: "object"
              - type: "array"
                items:
                    type: "string"
              - type: "number"
              - type: "integer"
              - type: "boolean"
    StagedOrderSetDeliveryAddressCustomTypeAction:
      allOf:
      - $ref: '#/components/schemas/StagedOrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          deliveryId:
            type: "string"
          type:
            $ref: '#/components/schemas/TypeResourceIdentifier'
          fields:
            $ref: '#/components/schemas/FieldContainer'
    StagedOrderSetDeliveryCustomFieldAction:
      allOf:
      - $ref: '#/components/schemas/StagedOrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          name:
            type: "string"
          value:
            anyOf:
              - type: "string"
              - type: "object"
              - type: "array"
                items:
                    type: "string"
              - type: "number"
              - type: "integer"
              - type: "boolean"
    StagedOrderSetDeliveryCustomTypeAction:
      allOf:
      - $ref: '#/components/schemas/StagedOrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          type:
            $ref: '#/components/schemas/TypeResourceIdentifier'
          fields:
            type: "string"
            additionalProperties: true
    StagedOrderSetDeliveryItemsAction:
      allOf:
      - $ref: '#/components/schemas/StagedOrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          deliveryId:
            type: "string"
          items:
            type: "array"
            items:
              $ref: '#/components/schemas/DeliveryItem'
    StagedOrderSetItemShippingAddressCustomFieldAction:
      allOf:
      - $ref: '#/components/schemas/StagedOrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          addressKey:
            type: "string"
          name:
            type: "string"
          value:
            anyOf:
              - type: "string"
              - type: "object"
              - type: "array"
                items:
                    type: "string"
              - type: "number"
              - type: "integer"
              - type: "boolean"
    StagedOrderSetItemShippingAddressCustomTypeAction:
      allOf:
      - $ref: '#/components/schemas/StagedOrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          addressKey:
            type: "string"
          type:
            $ref: '#/components/schemas/TypeResourceIdentifier'
          fields:
            $ref: '#/components/schemas/FieldContainer'
    StagedOrderSetLineItemCustomFieldAction:
      allOf:
      - $ref: '#/components/schemas/StagedOrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          lineItemId:
            type: "string"
          name:
            type: "string"
          value:
            anyOf:
              - type: "string"
              - type: "object"
              - type: "array"
                items:
                    type: "string"
              - type: "number"
              - type: "integer"
              - type: "boolean"
    StagedOrderSetLineItemCustomTypeAction:
      allOf:
      - $ref: '#/components/schemas/StagedOrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          lineItemId:
            type: "string"
          type:
            $ref: '#/components/schemas/TypeResourceIdentifier'
          fields:
            $ref: '#/components/schemas/FieldContainer'
    StagedOrderSetLineItemDistributionChannelAction:
      allOf:
      - $ref: '#/components/schemas/StagedOrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          lineItemId:
            type: "string"
          distributionChannel:
            $ref: '#/components/schemas/ChannelResourceIdentifier'
    StagedOrderSetLineItemPriceAction:
      allOf:
      - $ref: '#/components/schemas/StagedOrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          lineItemId:
            type: "string"
          externalPrice:
            $ref: '#/components/schemas/Money'
    StagedOrderSetLineItemShippingDetailsAction:
      allOf:
      - $ref: '#/components/schemas/StagedOrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          lineItemId:
            type: "string"
          shippingDetails:
            $ref: '#/components/schemas/ItemShippingDetailsDraft'
    StagedOrderSetLineItemTaxAmountAction:
      allOf:
      - $ref: '#/components/schemas/StagedOrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          lineItemId:
            type: "string"
          externalTaxAmount:
            $ref: '#/components/schemas/ExternalTaxAmountDraft'
    StagedOrderSetLineItemTaxRateAction:
      allOf:
      - $ref: '#/components/schemas/StagedOrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          lineItemId:
            type: "string"
          externalTaxRate:
            $ref: '#/components/schemas/ExternalTaxRateDraft'
    StagedOrderSetLineItemTotalPriceAction:
      allOf:
      - $ref: '#/components/schemas/StagedOrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          lineItemId:
            type: "string"
          externalTotalPrice:
            $ref: '#/components/schemas/ExternalLineItemTotalPrice'
    StagedOrderSetLocaleAction:
      allOf:
      - $ref: '#/components/schemas/StagedOrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          locale:
            type: "string"
    StagedOrderSetOrderNumberAction:
      allOf:
      - $ref: '#/components/schemas/StagedOrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          orderNumber:
            type: "string"
    StagedOrderSetOrderTotalTaxAction:
      allOf:
      - $ref: '#/components/schemas/StagedOrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          externalTotalGross:
            $ref: '#/components/schemas/Money'
          externalTaxPortions:
            type: "array"
            items:
              $ref: '#/components/schemas/TaxPortionDraft'
    StagedOrderSetParcelCustomFieldAction:
      allOf:
      - $ref: '#/components/schemas/StagedOrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          parcelId:
            type: "string"
          name:
            type: "string"
          value:
            anyOf:
              - type: "string"
              - type: "object"
              - type: "array"
                items:
                    type: "string"
              - type: "number"
              - type: "integer"
              - type: "boolean"
    StagedOrderSetParcelCustomTypeAction:
      allOf:
      - $ref: '#/components/schemas/StagedOrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          parcelId:
            type: "string"
          type:
            $ref: '#/components/schemas/TypeResourceIdentifier'
          fields:
            type: "string"
            additionalProperties: true
    StagedOrderSetParcelItemsAction:
      allOf:
      - $ref: '#/components/schemas/StagedOrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          parcelId:
            type: "string"
          items:
            type: "array"
            items:
              $ref: '#/components/schemas/DeliveryItem'
    StagedOrderSetParcelMeasurementsAction:
      allOf:
      - $ref: '#/components/schemas/StagedOrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          parcelId:
            type: "string"
          measurements:
            $ref: '#/components/schemas/ParcelMeasurements'
    StagedOrderSetParcelTrackingDataAction:
      allOf:
      - $ref: '#/components/schemas/StagedOrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          parcelId:
            type: "string"
          trackingData:
            $ref: '#/components/schemas/TrackingData'
    StagedOrderSetReturnInfoAction:
      allOf:
      - $ref: '#/components/schemas/StagedOrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          items:
            type: "array"
            items:
              $ref: '#/components/schemas/ReturnInfoDraft'
    StagedOrderSetReturnItemCustomFieldAction:
      allOf:
      - $ref: '#/components/schemas/StagedOrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          returnItemId:
            type: "string"
          name:
            type: "string"
          value:
            anyOf:
              - type: "string"
              - type: "object"
              - type: "array"
                items:
                    type: "string"
              - type: "number"
              - type: "integer"
              - type: "boolean"
    StagedOrderSetReturnItemCustomTypeAction:
      allOf:
      - $ref: '#/components/schemas/StagedOrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          returnItemId:
            type: "string"
          type:
            $ref: '#/components/schemas/TypeResourceIdentifier'
          fields:
            type: "string"
            additionalProperties: true
    StagedOrderSetReturnPaymentStateAction:
      allOf:
      - $ref: '#/components/schemas/StagedOrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          returnItemId:
            type: "string"
          paymentState:
            $ref: '#/components/schemas/ReturnPaymentState'
    StagedOrderSetReturnShipmentStateAction:
      allOf:
      - $ref: '#/components/schemas/StagedOrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          returnItemId:
            type: "string"
          shipmentState:
            $ref: '#/components/schemas/ReturnShipmentState'
    StagedOrderSetShippingAddressAction:
      allOf:
      - $ref: '#/components/schemas/StagedOrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          address:
            $ref: '#/components/schemas/BaseAddress'
    StagedOrderSetShippingAddressAndCustomShippingMethodAction:
      allOf:
      - $ref: '#/components/schemas/StagedOrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          address:
            $ref: '#/components/schemas/BaseAddress'
          shippingMethodName:
            type: "string"
          shippingRate:
            $ref: '#/components/schemas/ShippingRateDraft'
          taxCategory:
            $ref: '#/components/schemas/TaxCategoryResourceIdentifier'
          externalTaxRate:
            $ref: '#/components/schemas/ExternalTaxRateDraft'
    StagedOrderSetShippingAddressAndShippingMethodAction:
      allOf:
      - $ref: '#/components/schemas/StagedOrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          address:
            $ref: '#/components/schemas/BaseAddress'
          shippingMethod:
            $ref: '#/components/schemas/ShippingMethodResourceIdentifier'
          externalTaxRate:
            $ref: '#/components/schemas/ExternalTaxRateDraft'
    StagedOrderSetShippingAddressCustomFieldAction:
      allOf:
      - $ref: '#/components/schemas/StagedOrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          name:
            type: "string"
          value:
            anyOf:
              - type: "string"
              - type: "object"
              - type: "array"
                items:
                    type: "string"
              - type: "number"
              - type: "integer"
              - type: "boolean"
    StagedOrderSetShippingAddressCustomTypeAction:
      allOf:
      - $ref: '#/components/schemas/StagedOrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          type:
            $ref: '#/components/schemas/TypeResourceIdentifier'
          fields:
            $ref: '#/components/schemas/FieldContainer'
    StagedOrderSetShippingMethodAction:
      allOf:
      - $ref: '#/components/schemas/StagedOrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          shippingMethod:
            $ref: '#/components/schemas/ShippingMethodResourceIdentifier'
          externalTaxRate:
            $ref: '#/components/schemas/ExternalTaxRateDraft'
    StagedOrderSetShippingMethodTaxAmountAction:
      allOf:
      - $ref: '#/components/schemas/StagedOrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          externalTaxAmount:
            $ref: '#/components/schemas/ExternalTaxAmountDraft'
    StagedOrderSetShippingMethodTaxRateAction:
      allOf:
      - $ref: '#/components/schemas/StagedOrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          externalTaxRate:
            $ref: '#/components/schemas/ExternalTaxRateDraft'
    StagedOrderSetShippingRateInputAction:
      allOf:
      - $ref: '#/components/schemas/StagedOrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          shippingRateInput:
            $ref: '#/components/schemas/ShippingRateInputDraft'
    StagedOrderTransitionCustomLineItemStateAction:
      allOf:
      - $ref: '#/components/schemas/StagedOrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          customLineItemId:
            type: "string"
          quantity:
            type: "integer"
            format: "int64"
          fromState:
            $ref: '#/components/schemas/StateResourceIdentifier'
          toState:
            $ref: '#/components/schemas/StateResourceIdentifier'
          actualTransitionDate:
            type: "string"
            format: "datetime"
    StagedOrderTransitionLineItemStateAction:
      allOf:
      - $ref: '#/components/schemas/StagedOrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          lineItemId:
            type: "string"
          quantity:
            type: "integer"
            format: "int64"
          fromState:
            $ref: '#/components/schemas/StateResourceIdentifier'
          toState:
            $ref: '#/components/schemas/StateResourceIdentifier'
          actualTransitionDate:
            type: "string"
            format: "datetime"
    StagedOrderTransitionStateAction:
      allOf:
      - $ref: '#/components/schemas/StagedOrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          state:
            $ref: '#/components/schemas/StateResourceIdentifier'
          force:
            type: "boolean"
    StagedOrderUpdateItemShippingAddressAction:
      allOf:
      - $ref: '#/components/schemas/StagedOrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          address:
            $ref: '#/components/schemas/BaseAddress'
    StagedOrderUpdateSyncInfoAction:
      allOf:
      - $ref: '#/components/schemas/StagedOrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          channel:
            $ref: '#/components/schemas/ChannelResourceIdentifier'
          externalId:
            type: "string"
          syncedAt:
            type: "string"
            format: "datetime"
    Hit:
      type: "object"
      properties:
        id:
          type: "string"
        version:
          type: "integer"
          format: "int64"
        relevance:
          type: "number"
          format: "double"
    OrderPagedSearchResponse:
      type: "object"
      properties:
        total:
          type: "integer"
          format: "int64"
        offset:
          type: "integer"
          format: "int64"
        limit:
          type: "integer"
          format: "int64"
        hits:
          type: "array"
          items:
            $ref: '#/components/schemas/Hit'
    CustomLineItemImportDraft:
      type: "object"
      properties:
        name:
          $ref: '#/components/schemas/LocalizedString'
        quantity:
          type: "integer"
          format: "int64"
        money:
          $ref: '#/components/schemas/Money'
        slug:
          type: "string"
        state:
          type: "array"
          items:
            $ref: '#/components/schemas/ItemState'
        taxRate:
          $ref: '#/components/schemas/TaxRate'
        taxCategory:
          $ref: '#/components/schemas/TaxCategoryResourceIdentifier'
        custom:
          $ref: '#/components/schemas/CustomFieldsDraft'
        shippingDetails:
          $ref: '#/components/schemas/ItemShippingDetailsDraft'
    CustomLineItemReturnItem:
      allOf:
      - $ref: '#/components/schemas/ReturnItem'
      - type: "object"
        properties:
          id:
            type: "string"
          quantity:
            type: "integer"
            format: "int64"
          type:
            type: "string"
          comment:
            type: "string"
          shipmentState:
            $ref: '#/components/schemas/ReturnShipmentState'
          paymentState:
            $ref: '#/components/schemas/ReturnPaymentState'
          custom:
            $ref: '#/components/schemas/CustomFields'
          lastModifiedAt:
            type: "string"
            format: "datetime"
          createdAt:
            type: "string"
            format: "datetime"
          customLineItemId:
            type: "string"
    Delivery:
      type: "object"
      properties:
        id:
          type: "string"
        createdAt:
          type: "string"
          format: "datetime"
        items:
          type: "array"
          items:
            $ref: '#/components/schemas/DeliveryItem'
        parcels:
          type: "array"
          items:
            $ref: '#/components/schemas/Parcel'
        address:
          $ref: '#/components/schemas/Address'
        custom:
          $ref: '#/components/schemas/CustomFields'
    DeliveryItem:
      type: "object"
      properties:
        id:
          type: "string"
        quantity:
          type: "integer"
          format: "int64"
    DiscountedLineItemPriceDraft:
      type: "object"
      properties:
        value:
          $ref: '#/components/schemas/Money'
        includedDiscounts:
          type: "array"
          items:
            $ref: '#/components/schemas/DiscountedLineItemPortion'
    ItemState:
      type: "object"
      properties:
        quantity:
          type: "number"
          format: "double"
        state:
          $ref: '#/components/schemas/StateReference'
    LineItemImportDraft:
      type: "object"
      properties:
        productId:
          type: "string"
        name:
          $ref: '#/components/schemas/LocalizedString'
        variant:
          $ref: '#/components/schemas/ProductVariantImportDraft'
        price:
          $ref: '#/components/schemas/PriceDraft'
        quantity:
          type: "integer"
          format: "int64"
        state:
          type: "array"
          items:
            $ref: '#/components/schemas/ItemState'
        supplyChannel:
          $ref: '#/components/schemas/ChannelResourceIdentifier'
        distributionChannel:
          $ref: '#/components/schemas/ChannelResourceIdentifier'
        taxRate:
          $ref: '#/components/schemas/TaxRate'
        custom:
          $ref: '#/components/schemas/CustomFieldsDraft'
        shippingDetails:
          $ref: '#/components/schemas/ItemShippingDetailsDraft'
    LineItemReturnItem:
      allOf:
      - $ref: '#/components/schemas/ReturnItem'
      - type: "object"
        properties:
          id:
            type: "string"
          quantity:
            type: "integer"
            format: "int64"
          type:
            type: "string"
          comment:
            type: "string"
          shipmentState:
            $ref: '#/components/schemas/ReturnShipmentState'
          paymentState:
            $ref: '#/components/schemas/ReturnPaymentState'
          custom:
            $ref: '#/components/schemas/CustomFields'
          lastModifiedAt:
            type: "string"
            format: "datetime"
          createdAt:
            type: "string"
            format: "datetime"
          lineItemId:
            type: "string"
    Order:
      allOf:
      - $ref: '#/components/schemas/BaseResource'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          completedAt:
            type: "string"
            format: "datetime"
          orderNumber:
            type: "string"
          customerId:
            type: "string"
          customerEmail:
            type: "string"
          anonymousId:
            type: "string"
          store:
            $ref: '#/components/schemas/StoreKeyReference'
          lineItems:
            type: "array"
            items:
              $ref: '#/components/schemas/LineItem'
          customLineItems:
            type: "array"
            items:
              $ref: '#/components/schemas/CustomLineItem'
          totalPrice:
            $ref: '#/components/schemas/TypedMoney'
          taxedPrice:
            $ref: '#/components/schemas/TaxedPrice'
          shippingAddress:
            $ref: '#/components/schemas/Address'
          billingAddress:
            $ref: '#/components/schemas/Address'
          taxMode:
            $ref: '#/components/schemas/TaxMode'
          taxRoundingMode:
            $ref: '#/components/schemas/RoundingMode'
          customerGroup:
            $ref: '#/components/schemas/CustomerGroupReference'
          country:
            type: "string"
          orderState:
            $ref: '#/components/schemas/OrderState'
          state:
            $ref: '#/components/schemas/StateReference'
          shipmentState:
            $ref: '#/components/schemas/ShipmentState'
          paymentState:
            $ref: '#/components/schemas/PaymentState'
          shippingInfo:
            $ref: '#/components/schemas/ShippingInfo'
          syncInfo:
            type: "array"
            items:
              $ref: '#/components/schemas/SyncInfo'
          returnInfo:
            type: "array"
            items:
              $ref: '#/components/schemas/ReturnInfo'
          discountCodes:
            type: "array"
            items:
              $ref: '#/components/schemas/DiscountCodeInfo'
          lastMessageSequenceNumber:
            type: "integer"
            format: "int64"
          cart:
            $ref: '#/components/schemas/CartReference'
          custom:
            $ref: '#/components/schemas/CustomFields'
          paymentInfo:
            $ref: '#/components/schemas/PaymentInfo'
          locale:
            type: "string"
          inventoryMode:
            $ref: '#/components/schemas/InventoryMode'
          origin:
            $ref: '#/components/schemas/CartOrigin'
          taxCalculationMode:
            $ref: '#/components/schemas/TaxCalculationMode'
          shippingRateInput:
            $ref: '#/components/schemas/ShippingRateInput'
          itemShippingAddresses:
            type: "array"
            items:
              $ref: '#/components/schemas/Address'
          refusedGifts:
            type: "array"
            items:
              $ref: '#/components/schemas/CartDiscountReference'
    OrderFromCartDraft:
      type: "object"
      properties:
        id:
          type: "string"
        cart:
          $ref: '#/components/schemas/CartResourceIdentifier'
        version:
          type: "integer"
          format: "int64"
        orderNumber:
          type: "string"
        paymentState:
          $ref: '#/components/schemas/PaymentState'
        shipmentState:
          $ref: '#/components/schemas/ShipmentState'
        orderState:
          $ref: '#/components/schemas/OrderState'
        state:
          $ref: '#/components/schemas/StateResourceIdentifier'
    OrderImportDraft:
      type: "object"
      properties:
        orderNumber:
          type: "string"
        customerId:
          type: "string"
        customerEmail:
          type: "string"
        lineItems:
          type: "array"
          items:
            $ref: '#/components/schemas/LineItemImportDraft'
        customLineItems:
          type: "array"
          items:
            $ref: '#/components/schemas/CustomLineItemImportDraft'
        totalPrice:
          $ref: '#/components/schemas/Money'
        taxedPrice:
          $ref: '#/components/schemas/TaxedPriceDraft'
        shippingAddress:
          $ref: '#/components/schemas/BaseAddress'
        billingAddress:
          $ref: '#/components/schemas/BaseAddress'
        customerGroup:
          $ref: '#/components/schemas/CustomerGroupResourceIdentifier'
        country:
          type: "string"
        orderState:
          $ref: '#/components/schemas/OrderState'
        shipmentState:
          $ref: '#/components/schemas/ShipmentState'
        paymentState:
          $ref: '#/components/schemas/PaymentState'
        shippingInfo:
          $ref: '#/components/schemas/ShippingInfoImportDraft'
        completedAt:
          type: "string"
          format: "datetime"
        custom:
          $ref: '#/components/schemas/CustomFieldsDraft'
        inventoryMode:
          $ref: '#/components/schemas/InventoryMode'
        taxRoundingMode:
          $ref: '#/components/schemas/RoundingMode'
        itemShippingAddresses:
          type: "array"
          items:
            $ref: '#/components/schemas/BaseAddress'
        store:
          $ref: '#/components/schemas/StoreResourceIdentifier'
        origin:
          $ref: '#/components/schemas/CartOrigin'
    OrderPagedQueryResponse:
      type: "object"
      properties:
        limit:
          type: "integer"
          format: "int64"
        count:
          type: "integer"
          format: "int64"
        total:
          type: "integer"
          format: "int64"
        offset:
          type: "integer"
          format: "int64"
        results:
          type: "array"
          items:
            $ref: '#/components/schemas/Order'
    OrderReference:
      allOf:
      - $ref: '#/components/schemas/Reference'
      - type: "object"
        properties:
          typeId:
            $ref: '#/components/schemas/ReferenceTypeId'
          id:
            type: "string"
          obj:
            $ref: '#/components/schemas/Order'
    OrderResourceIdentifier:
      allOf:
      - $ref: '#/components/schemas/ResourceIdentifier'
      - type: "object"
        properties:
          typeId:
            $ref: '#/components/schemas/ReferenceTypeId'
          id:
            type: "string"
          key:
            type: "string"
    OrderSearchQuery:
      type: "string"
    OrderSearchRequest:
      type: "object"
      properties:
        query:
          $ref: '#/components/schemas/OrderSearchQuery'
        sort:
          $ref: '#/components/schemas/OrderSearchSorting'
        limit:
          type: "integer"
          format: "int32"
        offset:
          type: "integer"
          format: "int32"
    OrderSearchSorting:
      type: "string"
    OrderState:
      type: "string"
      enum:
      - Open
      - Confirmed
      - Complete
      - Cancelled
      x-annotation-package: "Order"
      x-annotation-docs-uri: "https://docs.commercetools.com/http-api-projects-orders.html#orderstate"
    OrderUpdate:
      type: "object"
      properties:
        version:
          type: "integer"
          format: "int64"
        actions:
          type: "array"
          items:
            $ref: '#/components/schemas/OrderUpdateAction'
    OrderUpdateAction:
      type: "object"
      discriminator:
        propertyName: action
        mapping:
          addDelivery: '#/components/schemas/OrderAddDeliveryAction'
          addItemShippingAddress: '#/components/schemas/OrderAddItemShippingAddressAction'
          addParcelToDelivery: '#/components/schemas/OrderAddParcelToDeliveryAction'
          addPayment: '#/components/schemas/OrderAddPaymentAction'
          addReturnInfo: '#/components/schemas/OrderAddReturnInfoAction'
          changeOrderState: '#/components/schemas/OrderChangeOrderStateAction'
          changePaymentState: '#/components/schemas/OrderChangePaymentStateAction'
          changeShipmentState: '#/components/schemas/OrderChangeShipmentStateAction'
          importCustomLineItemState: '#/components/schemas/OrderImportCustomLineItemStateAction'
          importLineItemState: '#/components/schemas/OrderImportLineItemStateAction'
          removeDelivery: '#/components/schemas/OrderRemoveDeliveryAction'
          removeItemShippingAddress: '#/components/schemas/OrderRemoveItemShippingAddressAction'
          removeParcelFromDelivery: '#/components/schemas/OrderRemoveParcelFromDeliveryAction'
          removePayment: '#/components/schemas/OrderRemovePaymentAction'
          setBillingAddress: '#/components/schemas/OrderSetBillingAddressAction'
          setBillingAddressCustomField: '#/components/schemas/OrderSetBillingAddressCustomFieldAction'
          setBillingAddressCustomType: '#/components/schemas/OrderSetBillingAddressCustomTypeAction'
          setCustomField: '#/components/schemas/OrderSetCustomFieldAction'
          setCustomLineItemCustomField: '#/components/schemas/OrderSetCustomLineItemCustomFieldAction'
          setCustomLineItemCustomType: '#/components/schemas/OrderSetCustomLineItemCustomTypeAction'
          setCustomLineItemShippingDetails: '#/components/schemas/OrderSetCustomLineItemShippingDetailsAction'
          setCustomType: '#/components/schemas/OrderSetCustomTypeAction'
          setCustomerEmail: '#/components/schemas/OrderSetCustomerEmailAction'
          setCustomerId: '#/components/schemas/OrderSetCustomerIdAction'
          setDeliveryAddress: '#/components/schemas/OrderSetDeliveryAddressAction'
          setDeliveryAddressCustomField: '#/components/schemas/OrderSetDeliveryAddressCustomFieldAction'
          setDeliveryAddressCustomType: '#/components/schemas/OrderSetDeliveryAddressCustomTypeAction'
          setDeliveryCustomField: '#/components/schemas/OrderSetDeliveryCustomFieldAction'
          setDeliveryCustomType: '#/components/schemas/OrderSetDeliveryCustomTypeAction'
          setDeliveryItems: '#/components/schemas/OrderSetDeliveryItemsAction'
          setItemShippingAddressCustomField: '#/components/schemas/OrderSetItemShippingAddressCustomFieldAction'
          setItemShippingAddressCustomType: '#/components/schemas/OrderSetItemShippingAddressCustomTypeAction'
          setLineItemCustomField: '#/components/schemas/OrderSetLineItemCustomFieldAction'
          setLineItemCustomType: '#/components/schemas/OrderSetLineItemCustomTypeAction'
          setLineItemShippingDetails: '#/components/schemas/OrderSetLineItemShippingDetailsAction'
          setLocale: '#/components/schemas/OrderSetLocaleAction'
          setOrderNumber: '#/components/schemas/OrderSetOrderNumberAction'
          setParcelCustomField: '#/components/schemas/OrderSetParcelCustomFieldAction'
          setParcelCustomType: '#/components/schemas/OrderSetParcelCustomTypeAction'
          setParcelItems: '#/components/schemas/OrderSetParcelItemsAction'
          setParcelMeasurements: '#/components/schemas/OrderSetParcelMeasurementsAction'
          setParcelTrackingData: '#/components/schemas/OrderSetParcelTrackingDataAction'
          setReturnInfo: '#/components/schemas/OrderSetReturnInfoAction'
          setReturnItemCustomField: '#/components/schemas/OrderSetReturnItemCustomFieldAction'
          setReturnItemCustomType: '#/components/schemas/OrderSetReturnItemCustomTypeAction'
          setReturnPaymentState: '#/components/schemas/OrderSetReturnPaymentStateAction'
          setReturnShipmentState: '#/components/schemas/OrderSetReturnShipmentStateAction'
          setShippingAddress: '#/components/schemas/OrderSetShippingAddressAction'
          setShippingAddressCustomField: '#/components/schemas/OrderSetShippingAddressCustomFieldAction'
          setShippingAddressCustomType: '#/components/schemas/OrderSetShippingAddressCustomTypeAction'
          setStore: '#/components/schemas/OrderSetStoreAction'
          transitionCustomLineItemState: '#/components/schemas/OrderTransitionCustomLineItemStateAction'
          transitionLineItemState: '#/components/schemas/OrderTransitionLineItemStateAction'
          transitionState: '#/components/schemas/OrderTransitionStateAction'
          updateItemShippingAddress: '#/components/schemas/OrderUpdateItemShippingAddressAction'
          updateSyncInfo: '#/components/schemas/OrderUpdateSyncInfoAction'
      properties:
        action:
          type: "string"
    Parcel:
      type: "object"
      properties:
        id:
          type: "string"
        createdAt:
          type: "string"
          format: "datetime"
        measurements:
          $ref: '#/components/schemas/ParcelMeasurements'
        trackingData:
          $ref: '#/components/schemas/TrackingData'
        items:
          type: "array"
          items:
            $ref: '#/components/schemas/DeliveryItem'
        custom:
          $ref: '#/components/schemas/CustomFields'
    ParcelDraft:
      type: "object"
      properties:
        measurements:
          $ref: '#/components/schemas/ParcelMeasurements'
        trackingData:
          $ref: '#/components/schemas/TrackingData'
        items:
          type: "array"
          items:
            $ref: '#/components/schemas/DeliveryItem'
        custom:
          $ref: '#/components/schemas/CustomFieldsDraft'
    ParcelMeasurements:
      type: "object"
      properties:
        heightInMillimeter:
          type: "number"
          format: "double"
        lengthInMillimeter:
          type: "number"
          format: "double"
        widthInMillimeter:
          type: "number"
          format: "double"
        weightInGram:
          type: "number"
          format: "double"
    PaymentInfo:
      type: "object"
      properties:
        payments:
          type: "array"
          items:
            $ref: '#/components/schemas/PaymentReference'
    PaymentState:
      type: "string"
      enum:
      - BalanceDue
      - Failed
      - Pending
      - CreditOwed
      - Paid
      x-annotation-package: "Order"
      x-annotation-docs-uri: "https://docs.commercetools.com/http-api-projects-orders.html#paymentstate"
    ProductVariantImportDraft:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        sku:
          type: "string"
        prices:
          type: "array"
          items:
            $ref: '#/components/schemas/PriceDraft'
        attributes:
          type: "array"
          items:
            $ref: '#/components/schemas/Attribute'
        images:
          type: "array"
          items:
            $ref: '#/components/schemas/Image'
    ReturnInfo:
      type: "object"
      properties:
        items:
          type: "array"
          items:
            $ref: '#/components/schemas/ReturnItem'
        returnTrackingId:
          type: "string"
        returnDate:
          type: "string"
          format: "datetime"
    ReturnInfoDraft:
      type: "object"
      properties:
        items:
          type: "array"
          items:
            $ref: '#/components/schemas/ReturnItemDraft'
        returnTrackingId:
          type: "string"
        returnDate:
          type: "string"
          format: "datetime"
    ReturnItem:
      type: "object"
      discriminator:
        propertyName: type
        mapping:
          CustomLineItemReturnItem: '#/components/schemas/CustomLineItemReturnItem'
          LineItemReturnItem: '#/components/schemas/LineItemReturnItem'
      properties:
        id:
          type: "string"
        quantity:
          type: "integer"
          format: "int64"
        type:
          type: "string"
        comment:
          type: "string"
        shipmentState:
          $ref: '#/components/schemas/ReturnShipmentState'
        paymentState:
          $ref: '#/components/schemas/ReturnPaymentState'
        custom:
          $ref: '#/components/schemas/CustomFields'
        lastModifiedAt:
          type: "string"
          format: "datetime"
        createdAt:
          type: "string"
          format: "datetime"
    ReturnItemDraft:
      type: "object"
      properties:
        quantity:
          type: "integer"
          format: "int64"
        lineItemId:
          type: "string"
        customLineItemId:
          type: "string"
        comment:
          type: "string"
        shipmentState:
          $ref: '#/components/schemas/ReturnShipmentState'
        custom:
          $ref: '#/components/schemas/CustomFieldsDraft'
    ReturnPaymentState:
      type: "string"
      enum:
      - NonRefundable
      - Initial
      - Refunded
      - NotRefunded
      x-annotation-package: "Order"
      x-annotation-docs-uri: "https://docs.commercetools.com/http-api-projects-orders.html#returnpaymentstate"
    ReturnShipmentState:
      type: "string"
      enum:
      - Advised
      - Returned
      - BackInStock
      - Unusable
      x-annotation-package: "Order"
      x-annotation-docs-uri: "https://docs.commercetools.com/http-api-projects-orders.html#returnshipmentstate"
    ShipmentState:
      type: "string"
      enum:
      - Shipped
      - Ready
      - Pending
      - Delayed
      - Partial
      - Backorder
      x-annotation-package: "Order"
      x-annotation-docs-uri: "https://docs.commercetools.com/http-api-projects-orders.html#shipmentstate"
    ShippingInfoImportDraft:
      type: "object"
      properties:
        shippingMethodName:
          type: "string"
        price:
          $ref: '#/components/schemas/Money'
        shippingRate:
          $ref: '#/components/schemas/ShippingRateDraft'
        taxRate:
          $ref: '#/components/schemas/TaxRate'
        taxCategory:
          $ref: '#/components/schemas/TaxCategoryResourceIdentifier'
        shippingMethod:
          $ref: '#/components/schemas/ShippingMethodResourceIdentifier'
        deliveries:
          type: "array"
          items:
            $ref: '#/components/schemas/Delivery'
        discountedPrice:
          $ref: '#/components/schemas/DiscountedLineItemPriceDraft'
        shippingMethodState:
          $ref: '#/components/schemas/ShippingMethodState'
    SyncInfo:
      type: "object"
      properties:
        channel:
          $ref: '#/components/schemas/ChannelReference'
        externalId:
          type: "string"
        syncedAt:
          type: "string"
          format: "datetime"
    TaxedItemPriceDraft:
      type: "object"
      properties:
        totalNet:
          $ref: '#/components/schemas/Money'
        totalGross:
          $ref: '#/components/schemas/Money'
    TrackingData:
      type: "object"
      properties:
        trackingId:
          type: "string"
        carrier:
          type: "string"
        provider:
          type: "string"
        providerTransaction:
          type: "string"
        isReturn:
          type: "boolean"
    OrderAddDeliveryAction:
      allOf:
      - $ref: '#/components/schemas/OrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          items:
            type: "array"
            items:
              $ref: '#/components/schemas/DeliveryItem'
          address:
            $ref: '#/components/schemas/BaseAddress'
          parcels:
            type: "array"
            items:
              $ref: '#/components/schemas/ParcelDraft'
          custom:
            $ref: '#/components/schemas/CustomFields'
    OrderAddItemShippingAddressAction:
      allOf:
      - $ref: '#/components/schemas/OrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          address:
            $ref: '#/components/schemas/BaseAddress'
    OrderAddParcelToDeliveryAction:
      allOf:
      - $ref: '#/components/schemas/OrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          deliveryId:
            type: "string"
          measurements:
            $ref: '#/components/schemas/ParcelMeasurements'
          trackingData:
            $ref: '#/components/schemas/TrackingData'
          items:
            type: "array"
            items:
              $ref: '#/components/schemas/DeliveryItem'
    OrderAddPaymentAction:
      allOf:
      - $ref: '#/components/schemas/OrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          payment:
            $ref: '#/components/schemas/PaymentResourceIdentifier'
    OrderAddReturnInfoAction:
      allOf:
      - $ref: '#/components/schemas/OrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          returnTrackingId:
            type: "string"
          items:
            type: "array"
            items:
              $ref: '#/components/schemas/ReturnItemDraft'
          returnDate:
            type: "string"
            format: "datetime"
    OrderChangeOrderStateAction:
      allOf:
      - $ref: '#/components/schemas/OrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          orderState:
            $ref: '#/components/schemas/OrderState'
    OrderChangePaymentStateAction:
      allOf:
      - $ref: '#/components/schemas/OrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          paymentState:
            $ref: '#/components/schemas/PaymentState'
    OrderChangeShipmentStateAction:
      allOf:
      - $ref: '#/components/schemas/OrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          shipmentState:
            $ref: '#/components/schemas/ShipmentState'
    OrderImportCustomLineItemStateAction:
      allOf:
      - $ref: '#/components/schemas/OrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          customLineItemId:
            type: "string"
          state:
            type: "array"
            items:
              $ref: '#/components/schemas/ItemState'
    OrderImportLineItemStateAction:
      allOf:
      - $ref: '#/components/schemas/OrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          lineItemId:
            type: "string"
          state:
            type: "array"
            items:
              $ref: '#/components/schemas/ItemState'
    OrderRemoveDeliveryAction:
      allOf:
      - $ref: '#/components/schemas/OrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          deliveryId:
            type: "string"
    OrderRemoveItemShippingAddressAction:
      allOf:
      - $ref: '#/components/schemas/OrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          addressKey:
            type: "string"
    OrderRemoveParcelFromDeliveryAction:
      allOf:
      - $ref: '#/components/schemas/OrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          parcelId:
            type: "string"
    OrderRemovePaymentAction:
      allOf:
      - $ref: '#/components/schemas/OrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          payment:
            $ref: '#/components/schemas/PaymentResourceIdentifier'
    OrderSetBillingAddressAction:
      allOf:
      - $ref: '#/components/schemas/OrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          address:
            $ref: '#/components/schemas/BaseAddress'
    OrderSetBillingAddressCustomFieldAction:
      allOf:
      - $ref: '#/components/schemas/OrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          name:
            type: "string"
          value:
            anyOf:
              - type: "string"
              - type: "object"
              - type: "array"
                items:
                    type: "string"
              - type: "number"
              - type: "integer"
              - type: "boolean"
    OrderSetBillingAddressCustomTypeAction:
      allOf:
      - $ref: '#/components/schemas/OrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          type:
            $ref: '#/components/schemas/TypeResourceIdentifier'
          fields:
            $ref: '#/components/schemas/FieldContainer'
    OrderSetCustomFieldAction:
      allOf:
      - $ref: '#/components/schemas/OrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          name:
            type: "string"
          value:
            anyOf:
              - type: "string"
              - type: "object"
              - type: "array"
                items:
                    type: "string"
              - type: "number"
              - type: "integer"
              - type: "boolean"
    OrderSetCustomLineItemCustomFieldAction:
      allOf:
      - $ref: '#/components/schemas/OrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          customLineItemId:
            type: "string"
          name:
            type: "string"
          value:
            anyOf:
              - type: "string"
              - type: "object"
              - type: "array"
                items:
                    type: "string"
              - type: "number"
              - type: "integer"
              - type: "boolean"
    OrderSetCustomLineItemCustomTypeAction:
      allOf:
      - $ref: '#/components/schemas/OrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          customLineItemId:
            type: "string"
          type:
            $ref: '#/components/schemas/TypeResourceIdentifier'
          fields:
            $ref: '#/components/schemas/FieldContainer'
    OrderSetCustomLineItemShippingDetailsAction:
      allOf:
      - $ref: '#/components/schemas/OrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          customLineItemId:
            type: "string"
          shippingDetails:
            $ref: '#/components/schemas/ItemShippingDetailsDraft'
    OrderSetCustomTypeAction:
      allOf:
      - $ref: '#/components/schemas/OrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          type:
            $ref: '#/components/schemas/TypeResourceIdentifier'
          fields:
            $ref: '#/components/schemas/FieldContainer'
    OrderSetCustomerEmailAction:
      allOf:
      - $ref: '#/components/schemas/OrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          email:
            type: "string"
    OrderSetCustomerIdAction:
      allOf:
      - $ref: '#/components/schemas/OrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          customerId:
            type: "string"
    OrderSetDeliveryAddressAction:
      allOf:
      - $ref: '#/components/schemas/OrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          deliveryId:
            type: "string"
          address:
            $ref: '#/components/schemas/BaseAddress'
    OrderSetDeliveryAddressCustomFieldAction:
      allOf:
      - $ref: '#/components/schemas/OrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          deliveryId:
            type: "string"
          name:
            type: "string"
          value:
            anyOf:
              - type: "string"
              - type: "object"
              - type: "array"
                items:
                    type: "string"
              - type: "number"
              - type: "integer"
              - type: "boolean"
    OrderSetDeliveryAddressCustomTypeAction:
      allOf:
      - $ref: '#/components/schemas/OrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          deliveryId:
            type: "string"
          type:
            $ref: '#/components/schemas/TypeResourceIdentifier'
          fields:
            $ref: '#/components/schemas/FieldContainer'
    OrderSetDeliveryCustomFieldAction:
      allOf:
      - $ref: '#/components/schemas/OrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          name:
            type: "string"
          value:
            anyOf:
              - type: "string"
              - type: "object"
              - type: "array"
                items:
                    type: "string"
              - type: "number"
              - type: "integer"
              - type: "boolean"
    OrderSetDeliveryCustomTypeAction:
      allOf:
      - $ref: '#/components/schemas/OrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          type:
            $ref: '#/components/schemas/TypeResourceIdentifier'
          fields:
            $ref: '#/components/schemas/FieldContainer'
    OrderSetDeliveryItemsAction:
      allOf:
      - $ref: '#/components/schemas/OrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          deliveryId:
            type: "string"
          items:
            type: "array"
            items:
              $ref: '#/components/schemas/DeliveryItem'
    OrderSetItemShippingAddressCustomFieldAction:
      allOf:
      - $ref: '#/components/schemas/OrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          addressKey:
            type: "string"
          name:
            type: "string"
          value:
            anyOf:
              - type: "string"
              - type: "object"
              - type: "array"
                items:
                    type: "string"
              - type: "number"
              - type: "integer"
              - type: "boolean"
    OrderSetItemShippingAddressCustomTypeAction:
      allOf:
      - $ref: '#/components/schemas/OrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          addressKey:
            type: "string"
          type:
            $ref: '#/components/schemas/TypeResourceIdentifier'
          fields:
            $ref: '#/components/schemas/FieldContainer'
    OrderSetLineItemCustomFieldAction:
      allOf:
      - $ref: '#/components/schemas/OrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          lineItemId:
            type: "string"
          name:
            type: "string"
          value:
            anyOf:
              - type: "string"
              - type: "object"
              - type: "array"
                items:
                    type: "string"
              - type: "number"
              - type: "integer"
              - type: "boolean"
    OrderSetLineItemCustomTypeAction:
      allOf:
      - $ref: '#/components/schemas/OrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          lineItemId:
            type: "string"
          type:
            $ref: '#/components/schemas/TypeResourceIdentifier'
          fields:
            $ref: '#/components/schemas/FieldContainer'
    OrderSetLineItemShippingDetailsAction:
      allOf:
      - $ref: '#/components/schemas/OrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          lineItemId:
            type: "string"
          shippingDetails:
            $ref: '#/components/schemas/ItemShippingDetailsDraft'
    OrderSetLocaleAction:
      allOf:
      - $ref: '#/components/schemas/OrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          locale:
            type: "string"
    OrderSetOrderNumberAction:
      allOf:
      - $ref: '#/components/schemas/OrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          orderNumber:
            type: "string"
    OrderSetParcelCustomFieldAction:
      allOf:
      - $ref: '#/components/schemas/OrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          parcelId:
            type: "string"
          name:
            type: "string"
          value:
            anyOf:
              - type: "string"
              - type: "object"
              - type: "array"
                items:
                    type: "string"
              - type: "number"
              - type: "integer"
              - type: "boolean"
    OrderSetParcelCustomTypeAction:
      allOf:
      - $ref: '#/components/schemas/OrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          parcelId:
            type: "string"
          type:
            $ref: '#/components/schemas/TypeResourceIdentifier'
          fields:
            $ref: '#/components/schemas/FieldContainer'
    OrderSetParcelItemsAction:
      allOf:
      - $ref: '#/components/schemas/OrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          parcelId:
            type: "string"
          items:
            type: "array"
            items:
              $ref: '#/components/schemas/DeliveryItem'
    OrderSetParcelMeasurementsAction:
      allOf:
      - $ref: '#/components/schemas/OrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          parcelId:
            type: "string"
          measurements:
            $ref: '#/components/schemas/ParcelMeasurements'
    OrderSetParcelTrackingDataAction:
      allOf:
      - $ref: '#/components/schemas/OrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          parcelId:
            type: "string"
          trackingData:
            $ref: '#/components/schemas/TrackingData'
    OrderSetReturnInfoAction:
      allOf:
      - $ref: '#/components/schemas/OrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          items:
            type: "array"
            items:
              $ref: '#/components/schemas/ReturnInfoDraft'
    OrderSetReturnItemCustomFieldAction:
      allOf:
      - $ref: '#/components/schemas/OrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          returnItemId:
            type: "string"
          name:
            type: "string"
          value:
            anyOf:
              - type: "string"
              - type: "object"
              - type: "array"
                items:
                    type: "string"
              - type: "number"
              - type: "integer"
              - type: "boolean"
    OrderSetReturnItemCustomTypeAction:
      allOf:
      - $ref: '#/components/schemas/OrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          returnItemId:
            type: "string"
          type:
            $ref: '#/components/schemas/TypeResourceIdentifier'
          fields:
            $ref: '#/components/schemas/FieldContainer'
    OrderSetReturnPaymentStateAction:
      allOf:
      - $ref: '#/components/schemas/OrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          returnItemId:
            type: "string"
          paymentState:
            $ref: '#/components/schemas/ReturnPaymentState'
    OrderSetReturnShipmentStateAction:
      allOf:
      - $ref: '#/components/schemas/OrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          returnItemId:
            type: "string"
          shipmentState:
            $ref: '#/components/schemas/ReturnShipmentState'
    OrderSetShippingAddressAction:
      allOf:
      - $ref: '#/components/schemas/OrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          address:
            $ref: '#/components/schemas/BaseAddress'
    OrderSetShippingAddressCustomFieldAction:
      allOf:
      - $ref: '#/components/schemas/OrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          name:
            type: "string"
          value:
            anyOf:
              - type: "string"
              - type: "object"
              - type: "array"
                items:
                    type: "string"
              - type: "number"
              - type: "integer"
              - type: "boolean"
    OrderSetShippingAddressCustomTypeAction:
      allOf:
      - $ref: '#/components/schemas/OrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          type:
            $ref: '#/components/schemas/TypeResourceIdentifier'
          fields:
            $ref: '#/components/schemas/FieldContainer'
    OrderSetStoreAction:
      allOf:
      - $ref: '#/components/schemas/OrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          store:
            $ref: '#/components/schemas/StoreResourceIdentifier'
    OrderTransitionCustomLineItemStateAction:
      allOf:
      - $ref: '#/components/schemas/OrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          customLineItemId:
            type: "string"
          quantity:
            type: "integer"
            format: "int64"
          fromState:
            $ref: '#/components/schemas/StateResourceIdentifier'
          toState:
            $ref: '#/components/schemas/StateResourceIdentifier'
          actualTransitionDate:
            type: "string"
            format: "datetime"
    OrderTransitionLineItemStateAction:
      allOf:
      - $ref: '#/components/schemas/OrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          lineItemId:
            type: "string"
          quantity:
            type: "integer"
            format: "int64"
          fromState:
            $ref: '#/components/schemas/StateResourceIdentifier'
          toState:
            $ref: '#/components/schemas/StateResourceIdentifier'
          actualTransitionDate:
            type: "string"
            format: "datetime"
    OrderTransitionStateAction:
      allOf:
      - $ref: '#/components/schemas/OrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          state:
            $ref: '#/components/schemas/StateResourceIdentifier'
          force:
            type: "boolean"
    OrderUpdateItemShippingAddressAction:
      allOf:
      - $ref: '#/components/schemas/OrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          address:
            $ref: '#/components/schemas/BaseAddress'
    OrderUpdateSyncInfoAction:
      allOf:
      - $ref: '#/components/schemas/OrderUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          channel:
            $ref: '#/components/schemas/ChannelResourceIdentifier'
          externalId:
            type: "string"
          syncedAt:
            type: "string"
            format: "datetime"
    Payment:
      allOf:
      - $ref: '#/components/schemas/BaseResource'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          customer:
            $ref: '#/components/schemas/CustomerReference'
          anonymousId:
            type: "string"
          externalId:
            type: "string"
          interfaceId:
            type: "string"
          amountPlanned:
            $ref: '#/components/schemas/TypedMoney'
          amountAuthorized:
            $ref: '#/components/schemas/TypedMoney'
          authorizedUntil:
            type: "string"
          amountPaid:
            $ref: '#/components/schemas/TypedMoney'
          amountRefunded:
            $ref: '#/components/schemas/TypedMoney'
          paymentMethodInfo:
            $ref: '#/components/schemas/PaymentMethodInfo'
          paymentStatus:
            $ref: '#/components/schemas/PaymentStatus'
          transactions:
            type: "array"
            items:
              $ref: '#/components/schemas/Transaction'
          interfaceInteractions:
            type: "array"
            items:
              $ref: '#/components/schemas/CustomFields'
          custom:
            $ref: '#/components/schemas/CustomFields'
          key:
            type: "string"
    PaymentDraft:
      type: "object"
      properties:
        customer:
          $ref: '#/components/schemas/CustomerResourceIdentifier'
        anonymousId:
          type: "string"
        externalId:
          type: "string"
        interfaceId:
          type: "string"
        amountPlanned:
          $ref: '#/components/schemas/Money'
        amountAuthorized:
          $ref: '#/components/schemas/Money'
        authorizedUntil:
          type: "string"
        amountPaid:
          $ref: '#/components/schemas/Money'
        amountRefunded:
          $ref: '#/components/schemas/Money'
        paymentMethodInfo:
          $ref: '#/components/schemas/PaymentMethodInfo'
        paymentStatus:
          $ref: '#/components/schemas/PaymentStatusDraft'
        transactions:
          type: "array"
          items:
            $ref: '#/components/schemas/TransactionDraft'
        interfaceInteractions:
          type: "array"
          items:
            $ref: '#/components/schemas/CustomFieldsDraft'
        custom:
          $ref: '#/components/schemas/CustomFieldsDraft'
        key:
          type: "string"
    PaymentMethodInfo:
      type: "object"
      properties:
        paymentInterface:
          type: "string"
        method:
          type: "string"
        name:
          $ref: '#/components/schemas/LocalizedString'
    PaymentPagedQueryResponse:
      type: "object"
      properties:
        limit:
          type: "integer"
          format: "int64"
        count:
          type: "integer"
          format: "int64"
        total:
          type: "integer"
          format: "int64"
        offset:
          type: "integer"
          format: "int64"
        results:
          type: "array"
          items:
            $ref: '#/components/schemas/Payment'
    PaymentReference:
      allOf:
      - $ref: '#/components/schemas/Reference'
      - type: "object"
        properties:
          typeId:
            $ref: '#/components/schemas/ReferenceTypeId'
          id:
            type: "string"
          obj:
            $ref: '#/components/schemas/Payment'
    PaymentResourceIdentifier:
      allOf:
      - $ref: '#/components/schemas/ResourceIdentifier'
      - type: "object"
        properties:
          typeId:
            $ref: '#/components/schemas/ReferenceTypeId'
          id:
            type: "string"
          key:
            type: "string"
    PaymentStatus:
      type: "object"
      properties:
        interfaceCode:
          type: "string"
        interfaceText:
          type: "string"
        state:
          $ref: '#/components/schemas/StateReference'
    PaymentStatusDraft:
      type: "object"
      properties:
        interfaceCode:
          type: "string"
        interfaceText:
          type: "string"
        state:
          $ref: '#/components/schemas/StateResourceIdentifier'
    PaymentUpdate:
      type: "object"
      properties:
        version:
          type: "integer"
          format: "int64"
        actions:
          type: "array"
          items:
            $ref: '#/components/schemas/PaymentUpdateAction'
    PaymentUpdateAction:
      type: "object"
      discriminator:
        propertyName: action
        mapping:
          addInterfaceInteraction: '#/components/schemas/PaymentAddInterfaceInteractionAction'
          addTransaction: '#/components/schemas/PaymentAddTransactionAction'
          changeAmountPlanned: '#/components/schemas/PaymentChangeAmountPlannedAction'
          changeTransactionInteractionId: '#/components/schemas/PaymentChangeTransactionInteractionIdAction'
          changeTransactionState: '#/components/schemas/PaymentChangeTransactionStateAction'
          changeTransactionTimestamp: '#/components/schemas/PaymentChangeTransactionTimestampAction'
          setAmountPaid: '#/components/schemas/PaymentSetAmountPaidAction'
          setAmountRefunded: '#/components/schemas/PaymentSetAmountRefundedAction'
          setAnonymousId: '#/components/schemas/PaymentSetAnonymousIdAction'
          setAuthorization: '#/components/schemas/PaymentSetAuthorizationAction'
          setCustomField: '#/components/schemas/PaymentSetCustomFieldAction'
          setCustomType: '#/components/schemas/PaymentSetCustomTypeAction'
          setCustomer: '#/components/schemas/PaymentSetCustomerAction'
          setExternalId: '#/components/schemas/PaymentSetExternalIdAction'
          setInterfaceId: '#/components/schemas/PaymentSetInterfaceIdAction'
          setKey: '#/components/schemas/PaymentSetKeyAction'
          setMethodInfoInterface: '#/components/schemas/PaymentSetMethodInfoInterfaceAction'
          setMethodInfoMethod: '#/components/schemas/PaymentSetMethodInfoMethodAction'
          setMethodInfoName: '#/components/schemas/PaymentSetMethodInfoNameAction'
          setStatusInterfaceCode: '#/components/schemas/PaymentSetStatusInterfaceCodeAction'
          setStatusInterfaceText: '#/components/schemas/PaymentSetStatusInterfaceTextAction'
          setTransactionCustomField: '#/components/schemas/PaymentSetTransactionCustomFieldAction'
          setTransactionCustomType: '#/components/schemas/PaymentSetTransactionCustomTypeAction'
          transitionState: '#/components/schemas/PaymentTransitionStateAction'
      properties:
        action:
          type: "string"
    Transaction:
      type: "object"
      properties:
        id:
          type: "string"
        timestamp:
          type: "string"
          format: "datetime"
        type:
          $ref: '#/components/schemas/TransactionType'
        amount:
          $ref: '#/components/schemas/TypedMoney'
        interactionId:
          type: "string"
        state:
          $ref: '#/components/schemas/TransactionState'
        custom:
          $ref: '#/components/schemas/CustomFields'
    TransactionDraft:
      type: "object"
      properties:
        timestamp:
          type: "string"
          format: "datetime"
        type:
          $ref: '#/components/schemas/TransactionType'
        amount:
          $ref: '#/components/schemas/Money'
        interactionId:
          type: "string"
        state:
          $ref: '#/components/schemas/TransactionState'
        custom:
          $ref: '#/components/schemas/CustomFieldsDraft'
    TransactionState:
      type: "string"
      enum:
      - Initial
      - Pending
      - Success
      - Failure
      x-annotation-package: "Payment"
      x-annotation-docs-uri: "https://docs.commercetools.com/http-api-projects-payments.html#transactionstate"
    TransactionType:
      type: "string"
      enum:
      - Authorization
      - CancelAuthorization
      - Charge
      - Refund
      - Chargeback
      x-annotation-package: "Payment"
      x-annotation-docs-uri: "https://docs.commercetools.com/http-api-projects-payments.html#transactiontype"
    PaymentAddInterfaceInteractionAction:
      allOf:
      - $ref: '#/components/schemas/PaymentUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          type:
            $ref: '#/components/schemas/TypeResourceIdentifier'
          fields:
            $ref: '#/components/schemas/FieldContainer'
    PaymentAddTransactionAction:
      allOf:
      - $ref: '#/components/schemas/PaymentUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          transaction:
            $ref: '#/components/schemas/TransactionDraft'
    PaymentChangeAmountPlannedAction:
      allOf:
      - $ref: '#/components/schemas/PaymentUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          amount:
            $ref: '#/components/schemas/Money'
    PaymentChangeTransactionInteractionIdAction:
      allOf:
      - $ref: '#/components/schemas/PaymentUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          transactionId:
            type: "string"
          interactionId:
            type: "string"
    PaymentChangeTransactionStateAction:
      allOf:
      - $ref: '#/components/schemas/PaymentUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          transactionId:
            type: "string"
          state:
            $ref: '#/components/schemas/TransactionState'
    PaymentChangeTransactionTimestampAction:
      allOf:
      - $ref: '#/components/schemas/PaymentUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          transactionId:
            type: "string"
          timestamp:
            type: "string"
            format: "datetime"
    PaymentSetAmountPaidAction:
      allOf:
      - $ref: '#/components/schemas/PaymentUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          amount:
            $ref: '#/components/schemas/Money'
    PaymentSetAmountRefundedAction:
      allOf:
      - $ref: '#/components/schemas/PaymentUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          amount:
            $ref: '#/components/schemas/Money'
    PaymentSetAnonymousIdAction:
      allOf:
      - $ref: '#/components/schemas/PaymentUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          anonymousId:
            type: "string"
    PaymentSetAuthorizationAction:
      allOf:
      - $ref: '#/components/schemas/PaymentUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          amount:
            $ref: '#/components/schemas/Money'
          until:
            type: "string"
            format: "datetime"
    PaymentSetCustomFieldAction:
      allOf:
      - $ref: '#/components/schemas/PaymentUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          name:
            type: "string"
          value:
            anyOf:
              - type: "string"
              - type: "object"
              - type: "array"
                items:
                    type: "string"
              - type: "number"
              - type: "integer"
              - type: "boolean"
    PaymentSetCustomTypeAction:
      allOf:
      - $ref: '#/components/schemas/PaymentUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          type:
            $ref: '#/components/schemas/TypeResourceIdentifier'
          fields:
            $ref: '#/components/schemas/FieldContainer'
    PaymentSetCustomerAction:
      allOf:
      - $ref: '#/components/schemas/PaymentUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          customer:
            $ref: '#/components/schemas/CustomerResourceIdentifier'
    PaymentSetExternalIdAction:
      allOf:
      - $ref: '#/components/schemas/PaymentUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          externalId:
            type: "string"
    PaymentSetInterfaceIdAction:
      allOf:
      - $ref: '#/components/schemas/PaymentUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          interfaceId:
            type: "string"
    PaymentSetKeyAction:
      allOf:
      - $ref: '#/components/schemas/PaymentUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          key:
            type: "string"
    PaymentSetMethodInfoInterfaceAction:
      allOf:
      - $ref: '#/components/schemas/PaymentUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          interface:
            type: "string"
    PaymentSetMethodInfoMethodAction:
      allOf:
      - $ref: '#/components/schemas/PaymentUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          method:
            type: "string"
    PaymentSetMethodInfoNameAction:
      allOf:
      - $ref: '#/components/schemas/PaymentUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          name:
            $ref: '#/components/schemas/LocalizedString'
    PaymentSetStatusInterfaceCodeAction:
      allOf:
      - $ref: '#/components/schemas/PaymentUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          interfaceCode:
            type: "string"
    PaymentSetStatusInterfaceTextAction:
      allOf:
      - $ref: '#/components/schemas/PaymentUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          interfaceText:
            type: "string"
    PaymentSetTransactionCustomFieldAction:
      allOf:
      - $ref: '#/components/schemas/PaymentUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          transactionId:
            type: "string"
          name:
            type: "string"
          value:
            anyOf:
              - type: "string"
              - type: "object"
              - type: "array"
                items:
                    type: "string"
              - type: "number"
              - type: "integer"
              - type: "boolean"
    PaymentSetTransactionCustomTypeAction:
      allOf:
      - $ref: '#/components/schemas/PaymentUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          transactionId:
            type: "string"
          type:
            $ref: '#/components/schemas/TypeResourceIdentifier'
          fields:
            $ref: '#/components/schemas/FieldContainer'
    PaymentTransitionStateAction:
      allOf:
      - $ref: '#/components/schemas/PaymentUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          state:
            $ref: '#/components/schemas/StateResourceIdentifier'
          force:
            type: "boolean"
    ProductDiscount:
      allOf:
      - $ref: '#/components/schemas/BaseResource'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          name:
            $ref: '#/components/schemas/LocalizedString'
          key:
            type: "string"
          description:
            $ref: '#/components/schemas/LocalizedString'
          value:
            $ref: '#/components/schemas/ProductDiscountValue'
          predicate:
            type: "string"
          sortOrder:
            type: "string"
          isActive:
            type: "boolean"
          references:
            type: "array"
            items:
              $ref: '#/components/schemas/Reference'
          validFrom:
            type: "string"
            format: "datetime"
          validUntil:
            type: "string"
            format: "datetime"
    ProductDiscountDraft:
      type: "object"
      properties:
        name:
          $ref: '#/components/schemas/LocalizedString'
        key:
          type: "string"
        description:
          $ref: '#/components/schemas/LocalizedString'
        value:
          $ref: '#/components/schemas/ProductDiscountValueDraft'
        predicate:
          type: "string"
        sortOrder:
          type: "string"
        isActive:
          type: "boolean"
        validFrom:
          type: "string"
          format: "datetime"
        validUntil:
          type: "string"
          format: "datetime"
    ProductDiscountMatchQuery:
      type: "object"
      properties:
        productId:
          type: "string"
        variantId:
          type: "integer"
          format: "int32"
        staged:
          type: "boolean"
        price:
          $ref: '#/components/schemas/QueryPrice'
    ProductDiscountPagedQueryResponse:
      type: "object"
      properties:
        limit:
          type: "integer"
          format: "int64"
        count:
          type: "integer"
          format: "int64"
        total:
          type: "integer"
          format: "int64"
        offset:
          type: "integer"
          format: "int64"
        results:
          type: "array"
          items:
            $ref: '#/components/schemas/ProductDiscount'
    ProductDiscountReference:
      allOf:
      - $ref: '#/components/schemas/Reference'
      - type: "object"
        properties:
          typeId:
            $ref: '#/components/schemas/ReferenceTypeId'
          id:
            type: "string"
          obj:
            $ref: '#/components/schemas/ProductDiscount'
    ProductDiscountResourceIdentifier:
      allOf:
      - $ref: '#/components/schemas/ResourceIdentifier'
      - type: "object"
        properties:
          typeId:
            $ref: '#/components/schemas/ReferenceTypeId'
          id:
            type: "string"
          key:
            type: "string"
    ProductDiscountUpdate:
      type: "object"
      properties:
        version:
          type: "integer"
          format: "int64"
        actions:
          type: "array"
          items:
            $ref: '#/components/schemas/ProductDiscountUpdateAction'
    ProductDiscountUpdateAction:
      type: "object"
      discriminator:
        propertyName: action
        mapping:
          changeIsActive: '#/components/schemas/ProductDiscountChangeIsActiveAction'
          changeName: '#/components/schemas/ProductDiscountChangeNameAction'
          changePredicate: '#/components/schemas/ProductDiscountChangePredicateAction'
          changeSortOrder: '#/components/schemas/ProductDiscountChangeSortOrderAction'
          changeValue: '#/components/schemas/ProductDiscountChangeValueAction'
          setDescription: '#/components/schemas/ProductDiscountSetDescriptionAction'
          setKey: '#/components/schemas/ProductDiscountSetKeyAction'
          setValidFrom: '#/components/schemas/ProductDiscountSetValidFromAction'
          setValidFromAndUntil: '#/components/schemas/ProductDiscountSetValidFromAndUntilAction'
          setValidUntil: '#/components/schemas/ProductDiscountSetValidUntilAction'
      properties:
        action:
          type: "string"
    ProductDiscountValue:
      type: "object"
      discriminator:
        propertyName: type
        mapping:
          absolute: '#/components/schemas/ProductDiscountValueAbsolute'
          external: '#/components/schemas/ProductDiscountValueExternal'
          relative: '#/components/schemas/ProductDiscountValueRelative'
      properties:
        type:
          type: "string"
    ProductDiscountValueAbsolute:
      allOf:
      - $ref: '#/components/schemas/ProductDiscountValue'
      - type: "object"
        properties:
          type:
            type: "string"
          money:
            type: "array"
            items:
              $ref: '#/components/schemas/TypedMoney'
    ProductDiscountValueAbsoluteDraft:
      allOf:
      - $ref: '#/components/schemas/ProductDiscountValueDraft'
      - type: "object"
        properties:
          type:
            type: "string"
          money:
            type: "array"
            items:
              $ref: '#/components/schemas/Money'
    ProductDiscountValueDraft:
      type: "object"
      discriminator:
        propertyName: type
        mapping:
          absolute: '#/components/schemas/ProductDiscountValueAbsoluteDraft'
          external: '#/components/schemas/ProductDiscountValueExternalDraft'
          relative: '#/components/schemas/ProductDiscountValueRelativeDraft'
      properties:
        type:
          type: "string"
    ProductDiscountValueExternal:
      allOf:
      - $ref: '#/components/schemas/ProductDiscountValue'
      - type: "object"
        properties:
          type:
            type: "string"
    ProductDiscountValueExternalDraft:
      allOf:
      - $ref: '#/components/schemas/ProductDiscountValueDraft'
      - type: "object"
        properties:
          type:
            type: "string"
    ProductDiscountValueRelative:
      allOf:
      - $ref: '#/components/schemas/ProductDiscountValue'
      - type: "object"
        properties:
          type:
            type: "string"
          permyriad:
            type: "integer"
            format: "int64"
    ProductDiscountValueRelativeDraft:
      allOf:
      - $ref: '#/components/schemas/ProductDiscountValueDraft'
      - type: "object"
        properties:
          type:
            type: "string"
          permyriad:
            type: "integer"
            format: "int64"
    ProductDiscountChangeIsActiveAction:
      allOf:
      - $ref: '#/components/schemas/ProductDiscountUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          isActive:
            type: "boolean"
    ProductDiscountChangeNameAction:
      allOf:
      - $ref: '#/components/schemas/ProductDiscountUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          name:
            $ref: '#/components/schemas/LocalizedString'
    ProductDiscountChangePredicateAction:
      allOf:
      - $ref: '#/components/schemas/ProductDiscountUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          predicate:
            type: "string"
    ProductDiscountChangeSortOrderAction:
      allOf:
      - $ref: '#/components/schemas/ProductDiscountUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          sortOrder:
            type: "string"
    ProductDiscountChangeValueAction:
      allOf:
      - $ref: '#/components/schemas/ProductDiscountUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          value:
            $ref: '#/components/schemas/ProductDiscountValueDraft'
    ProductDiscountSetDescriptionAction:
      allOf:
      - $ref: '#/components/schemas/ProductDiscountUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          description:
            $ref: '#/components/schemas/LocalizedString'
    ProductDiscountSetKeyAction:
      allOf:
      - $ref: '#/components/schemas/ProductDiscountUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          key:
            type: "string"
    ProductDiscountSetValidFromAction:
      allOf:
      - $ref: '#/components/schemas/ProductDiscountUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          validFrom:
            type: "string"
            format: "datetime"
    ProductDiscountSetValidFromAndUntilAction:
      allOf:
      - $ref: '#/components/schemas/ProductDiscountUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          validFrom:
            type: "string"
            format: "datetime"
          validUntil:
            type: "string"
            format: "datetime"
    ProductDiscountSetValidUntilAction:
      allOf:
      - $ref: '#/components/schemas/ProductDiscountUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          validUntil:
            type: "string"
            format: "datetime"
    AssignedProductReference:
      type: "object"
      properties:
        product:
          $ref: '#/components/schemas/ProductReference'
    IndividualProductSelectionType:
      allOf:
      - $ref: '#/components/schemas/ProductSelectionType'
      - type: "object"
        properties:
          type:
            $ref: '#/components/schemas/ProductSelectionTypeEnum'
          name:
            $ref: '#/components/schemas/LocalizedString'
    ProductSelection:
      allOf:
      - $ref: '#/components/schemas/BaseResource'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          key:
            type: "string"
          name:
            $ref: '#/components/schemas/LocalizedString'
          productCount:
            type: "integer"
            format: "int32"
          type:
            $ref: '#/components/schemas/ProductSelectionTypeEnum'
    ProductSelectionAssignment:
      type: "object"
      properties:
        product:
          $ref: '#/components/schemas/ProductReference'
        productSelection:
          $ref: '#/components/schemas/ProductSelectionReference'
    ProductSelectionDraft:
      type: "object"
      properties:
        key:
          type: "string"
        name:
          $ref: '#/components/schemas/LocalizedString'
    ProductSelectionPagedQueryResponse:
      type: "object"
      properties:
        limit:
          type: "integer"
          format: "int64"
        offset:
          type: "integer"
          format: "int64"
        count:
          type: "integer"
          format: "int64"
        total:
          type: "integer"
          format: "int64"
        results:
          type: "array"
          items:
            $ref: '#/components/schemas/ProductSelection'
    ProductSelectionProductPagedQueryResponse:
      type: "object"
      properties:
        limit:
          type: "integer"
          format: "int64"
        offset:
          type: "integer"
          format: "int64"
        count:
          type: "integer"
          format: "int64"
        total:
          type: "integer"
          format: "int64"
        results:
          type: "array"
          items:
            $ref: '#/components/schemas/AssignedProductReference'
    ProductSelectionReference:
      allOf:
      - $ref: '#/components/schemas/Reference'
      - type: "object"
        properties:
          typeId:
            $ref: '#/components/schemas/ReferenceTypeId'
          id:
            type: "string"
          obj:
            $ref: '#/components/schemas/ProductSelection'
    ProductSelectionResourceIdentifier:
      allOf:
      - $ref: '#/components/schemas/ResourceIdentifier'
      - type: "object"
        properties:
          typeId:
            $ref: '#/components/schemas/ReferenceTypeId'
          id:
            type: "string"
          key:
            type: "string"
    ProductSelectionType:
      type: "object"
      discriminator:
        propertyName: type
        mapping:
          individual: '#/components/schemas/IndividualProductSelectionType'
      properties:
        type:
          $ref: '#/components/schemas/ProductSelectionTypeEnum'
    ProductSelectionTypeEnum:
      type: "string"
      enum:
      - individual
      x-annotation-package: "ProductSelection"
      x-annotation-docs-uri: --- ""
      x-annotation-enumDescriptions:
        individual: "For this type of Product Selections the Products are to be assigned individually
         by using the [Add Product](/projects/product-selections#add-product) update action.n"
    ProductSelectionUpdate:
      type: "object"
      properties:
        version:
          type: "integer"
          format: "int64"
        actions:
          type: "array"
          items:
            $ref: '#/components/schemas/ProductSelectionUpdateAction'
    ProductSelectionUpdateAction:
      type: "object"
      discriminator:
        propertyName: action
        mapping:
          addProduct: '#/components/schemas/ProductSelectionAddProductAction'
          changeName: '#/components/schemas/ProductSelectionChangeNameAction'
          removeProduct: '#/components/schemas/ProductSelectionRemoveProductAction'
          setKey: '#/components/schemas/ProductSelectionSetKeyAction'
      properties:
        action:
          type: "string"
    ProductsInStorePagedQueryResponse:
      type: "object"
      properties:
        limit:
          type: "integer"
          format: "int64"
        offset:
          type: "integer"
          format: "int64"
        count:
          type: "integer"
          format: "int64"
        total:
          type: "integer"
          format: "int64"
        results:
          type: "array"
          items:
            $ref: '#/components/schemas/ProductSelectionAssignment'
    ProductSelectionAddProductAction:
      allOf:
      - $ref: '#/components/schemas/ProductSelectionUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          product:
            $ref: '#/components/schemas/ProductResourceIdentifier'
    ProductSelectionChangeNameAction:
      allOf:
      - $ref: '#/components/schemas/ProductSelectionUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          name:
            $ref: '#/components/schemas/LocalizedString'
    ProductSelectionRemoveProductAction:
      allOf:
      - $ref: '#/components/schemas/ProductSelectionUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          product:
            $ref: '#/components/schemas/ProductResourceIdentifier'
    ProductSelectionSetKeyAction:
      allOf:
      - $ref: '#/components/schemas/ProductSelectionUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          key:
            type: "string"
    AttributeBooleanType:
      allOf:
      - $ref: '#/components/schemas/AttributeType'
      - type: "object"
        properties:
          name:
            type: "string"
    AttributeConstraintEnum:
      type: "string"
      enum:
      - None
      - Unique
      - CombinationUnique
      - SameForAll
      x-annotation-package: "ProductType"
    AttributeConstraintEnumDraft:
      type: "string"
      enum:
      - None
      x-annotation-package: "ProductType"
    AttributeDateTimeType:
      allOf:
      - $ref: '#/components/schemas/AttributeType'
      - type: "object"
        properties:
          name:
            type: "string"
    AttributeDateType:
      allOf:
      - $ref: '#/components/schemas/AttributeType'
      - type: "object"
        properties:
          name:
            type: "string"
    AttributeDefinition:
      type: "object"
      properties:
        type:
          $ref: '#/components/schemas/AttributeType'
        name:
          type: "string"
        label:
          $ref: '#/components/schemas/LocalizedString'
        isRequired:
          type: "boolean"
        attributeConstraint:
          $ref: '#/components/schemas/AttributeConstraintEnum'
        inputTip:
          $ref: '#/components/schemas/LocalizedString'
        inputHint:
          $ref: '#/components/schemas/TextInputHint'
        isSearchable:
          type: "boolean"
    AttributeDefinitionDraft:
      type: "object"
      properties:
        type:
          $ref: '#/components/schemas/AttributeType'
        name:
          type: "string"
        label:
          $ref: '#/components/schemas/LocalizedString'
        isRequired:
          type: "boolean"
        attributeConstraint:
          $ref: '#/components/schemas/AttributeConstraintEnum'
        inputTip:
          $ref: '#/components/schemas/LocalizedString'
        inputHint:
          $ref: '#/components/schemas/TextInputHint'
        isSearchable:
          type: "boolean"
    AttributeEnumType:
      allOf:
      - $ref: '#/components/schemas/AttributeType'
      - type: "object"
        properties:
          name:
            type: "string"
          values:
            type: "array"
            items:
              $ref: '#/components/schemas/AttributePlainEnumValue'
    AttributeLocalizableTextType:
      allOf:
      - $ref: '#/components/schemas/AttributeType'
      - type: "object"
        properties:
          name:
            type: "string"
    AttributeLocalizedEnumType:
      allOf:
      - $ref: '#/components/schemas/AttributeType'
      - type: "object"
        properties:
          name:
            type: "string"
          values:
            type: "array"
            items:
              $ref: '#/components/schemas/AttributeLocalizedEnumValue'
    AttributeLocalizedEnumValue:
      type: "object"
      properties:
        key:
          type: "string"
        label:
          $ref: '#/components/schemas/LocalizedString'
    AttributeMoneyType:
      allOf:
      - $ref: '#/components/schemas/AttributeType'
      - type: "object"
        properties:
          name:
            type: "string"
    AttributeNestedType:
      allOf:
      - $ref: '#/components/schemas/AttributeType'
      - type: "object"
        properties:
          name:
            type: "string"
          typeReference:
            $ref: '#/components/schemas/ProductTypeReference'
    AttributeNumberType:
      allOf:
      - $ref: '#/components/schemas/AttributeType'
      - type: "object"
        properties:
          name:
            type: "string"
    AttributePlainEnumValue:
      type: "object"
      properties:
        key:
          type: "string"
        label:
          type: "string"
    AttributeReferenceType:
      allOf:
      - $ref: '#/components/schemas/AttributeType'
      - type: "object"
        properties:
          name:
            type: "string"
          referenceTypeId:
            $ref: '#/components/schemas/ReferenceTypeId'
    AttributeSetType:
      allOf:
      - $ref: '#/components/schemas/AttributeType'
      - type: "object"
        properties:
          name:
            type: "string"
          elementType:
            $ref: '#/components/schemas/AttributeType'
    AttributeTextType:
      allOf:
      - $ref: '#/components/schemas/AttributeType'
      - type: "object"
        properties:
          name:
            type: "string"
    AttributeTimeType:
      allOf:
      - $ref: '#/components/schemas/AttributeType'
      - type: "object"
        properties:
          name:
            type: "string"
    AttributeType:
      type: "object"
      discriminator:
        propertyName: name
        mapping:
          boolean: '#/components/schemas/AttributeBooleanType'
          datetime: '#/components/schemas/AttributeDateTimeType'
          date: '#/components/schemas/AttributeDateType'
          enum: '#/components/schemas/AttributeEnumType'
          ltext: '#/components/schemas/AttributeLocalizableTextType'
          lenum: '#/components/schemas/AttributeLocalizedEnumType'
          money: '#/components/schemas/AttributeMoneyType'
          nested: '#/components/schemas/AttributeNestedType'
          number: '#/components/schemas/AttributeNumberType'
          reference: '#/components/schemas/AttributeReferenceType'
          set: '#/components/schemas/AttributeSetType'
          text: '#/components/schemas/AttributeTextType'
          time: '#/components/schemas/AttributeTimeType'
      properties:
        name:
          type: "string"
    ProductType:
      allOf:
      - $ref: '#/components/schemas/BaseResource'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          key:
            type: "string"
          name:
            type: "string"
          description:
            type: "string"
          attributes:
            type: "array"
            items:
              $ref: '#/components/schemas/AttributeDefinition'
    ProductTypeDraft:
      type: "object"
      properties:
        key:
          type: "string"
        name:
          type: "string"
        description:
          type: "string"
        attributes:
          type: "array"
          items:
            $ref: '#/components/schemas/AttributeDefinitionDraft'
    ProductTypePagedQueryResponse:
      type: "object"
      properties:
        limit:
          type: "integer"
          format: "int64"
        count:
          type: "integer"
          format: "int64"
        total:
          type: "integer"
          format: "int64"
        offset:
          type: "integer"
          format: "int64"
        results:
          type: "array"
          items:
            $ref: '#/components/schemas/ProductType'
    ProductTypeReference:
      allOf:
      - $ref: '#/components/schemas/Reference'
      - type: "object"
        properties:
          typeId:
            $ref: '#/components/schemas/ReferenceTypeId'
          id:
            type: "string"
          obj:
            $ref: '#/components/schemas/ProductType'
    ProductTypeResourceIdentifier:
      allOf:
      - $ref: '#/components/schemas/ResourceIdentifier'
      - type: "object"
        properties:
          typeId:
            $ref: '#/components/schemas/ReferenceTypeId'
          id:
            type: "string"
          key:
            type: "string"
    ProductTypeUpdate:
      type: "object"
      properties:
        version:
          type: "integer"
          format: "int64"
        actions:
          type: "array"
          items:
            $ref: '#/components/schemas/ProductTypeUpdateAction'
    ProductTypeUpdateAction:
      type: "object"
      discriminator:
        propertyName: action
        mapping:
          addAttributeDefinition: '#/components/schemas/ProductTypeAddAttributeDefinitionAction'
          addLocalizedEnumValue: '#/components/schemas/ProductTypeAddLocalizedEnumValueAction'
          addPlainEnumValue: '#/components/schemas/ProductTypeAddPlainEnumValueAction'
          changeAttributeConstraint: '#/components/schemas/ProductTypeChangeAttributeConstraintAction'
          changeAttributeName: '#/components/schemas/ProductTypeChangeAttributeNameAction'
          changeAttributeOrder: '#/components/schemas/ProductTypeChangeAttributeOrderAction'
          changeAttributeOrderByName: '#/components/schemas/ProductTypeChangeAttributeOrderByNameAction'
          changeDescription: '#/components/schemas/ProductTypeChangeDescriptionAction'
          changeEnumKey: '#/components/schemas/ProductTypeChangeEnumKeyAction'
          changeInputHint: '#/components/schemas/ProductTypeChangeInputHintAction'
          changeIsSearchable: '#/components/schemas/ProductTypeChangeIsSearchableAction'
          changeLabel: '#/components/schemas/ProductTypeChangeLabelAction'
          changeLocalizedEnumValueLabel: '#/components/schemas/ProductTypeChangeLocalizedEnumValueLabelAction'
          changeLocalizedEnumValueOrder: '#/components/schemas/ProductTypeChangeLocalizedEnumValueOrderAction'
          changeName: '#/components/schemas/ProductTypeChangeNameAction'
          changePlainEnumValueLabel: '#/components/schemas/ProductTypeChangePlainEnumValueLabelAction'
          changePlainEnumValueOrder: '#/components/schemas/ProductTypeChangePlainEnumValueOrderAction'
          removeAttributeDefinition: '#/components/schemas/ProductTypeRemoveAttributeDefinitionAction'
          removeEnumValues: '#/components/schemas/ProductTypeRemoveEnumValuesAction'
          setInputTip: '#/components/schemas/ProductTypeSetInputTipAction'
          setKey: '#/components/schemas/ProductTypeSetKeyAction'
      properties:
        action:
          type: "string"
    TextInputHint:
      type: "string"
      enum:
      - SingleLine
      - MultiLine
      x-annotation-package: "ProductType"
    ProductTypeAddAttributeDefinitionAction:
      allOf:
      - $ref: '#/components/schemas/ProductTypeUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          attribute:
            $ref: '#/components/schemas/AttributeDefinitionDraft'
    ProductTypeAddLocalizedEnumValueAction:
      allOf:
      - $ref: '#/components/schemas/ProductTypeUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          attributeName:
            type: "string"
          value:
            $ref: '#/components/schemas/AttributeLocalizedEnumValue'
    ProductTypeAddPlainEnumValueAction:
      allOf:
      - $ref: '#/components/schemas/ProductTypeUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          attributeName:
            type: "string"
          value:
            $ref: '#/components/schemas/AttributePlainEnumValue'
    ProductTypeChangeAttributeConstraintAction:
      allOf:
      - $ref: '#/components/schemas/ProductTypeUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          attributeName:
            type: "string"
          newValue:
            $ref: '#/components/schemas/AttributeConstraintEnumDraft'
    ProductTypeChangeAttributeNameAction:
      allOf:
      - $ref: '#/components/schemas/ProductTypeUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          attributeName:
            type: "string"
          newAttributeName:
            type: "string"
    ProductTypeChangeAttributeOrderAction:
      allOf:
      - $ref: '#/components/schemas/ProductTypeUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          attributes:
            type: "array"
            items:
              $ref: '#/components/schemas/AttributeDefinition'
    ProductTypeChangeAttributeOrderByNameAction:
      allOf:
      - $ref: '#/components/schemas/ProductTypeUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          attributeNames:
            type: "array"
            items:
              type: "string"
    ProductTypeChangeDescriptionAction:
      allOf:
      - $ref: '#/components/schemas/ProductTypeUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          description:
            type: "string"
    ProductTypeChangeEnumKeyAction:
      allOf:
      - $ref: '#/components/schemas/ProductTypeUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          attributeName:
            type: "string"
          key:
            type: "string"
          newKey:
            type: "string"
    ProductTypeChangeInputHintAction:
      allOf:
      - $ref: '#/components/schemas/ProductTypeUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          attributeName:
            type: "string"
          newValue:
            $ref: '#/components/schemas/TextInputHint'
    ProductTypeChangeIsSearchableAction:
      allOf:
      - $ref: '#/components/schemas/ProductTypeUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          attributeName:
            type: "string"
          isSearchable:
            type: "boolean"
    ProductTypeChangeLabelAction:
      allOf:
      - $ref: '#/components/schemas/ProductTypeUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          attributeName:
            type: "string"
          label:
            $ref: '#/components/schemas/LocalizedString'
    ProductTypeChangeLocalizedEnumValueLabelAction:
      allOf:
      - $ref: '#/components/schemas/ProductTypeUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          attributeName:
            type: "string"
          newValue:
            $ref: '#/components/schemas/AttributeLocalizedEnumValue'
    ProductTypeChangeLocalizedEnumValueOrderAction:
      allOf:
      - $ref: '#/components/schemas/ProductTypeUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          attributeName:
            type: "string"
          values:
            type: "array"
            items:
              $ref: '#/components/schemas/AttributeLocalizedEnumValue'
    ProductTypeChangeNameAction:
      allOf:
      - $ref: '#/components/schemas/ProductTypeUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          name:
            type: "string"
    ProductTypeChangePlainEnumValueLabelAction:
      allOf:
      - $ref: '#/components/schemas/ProductTypeUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          attributeName:
            type: "string"
          newValue:
            $ref: '#/components/schemas/AttributePlainEnumValue'
    ProductTypeChangePlainEnumValueOrderAction:
      allOf:
      - $ref: '#/components/schemas/ProductTypeUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          attributeName:
            type: "string"
          values:
            type: "array"
            items:
              $ref: '#/components/schemas/AttributePlainEnumValue'
    ProductTypeRemoveAttributeDefinitionAction:
      allOf:
      - $ref: '#/components/schemas/ProductTypeUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          name:
            type: "string"
    ProductTypeRemoveEnumValuesAction:
      allOf:
      - $ref: '#/components/schemas/ProductTypeUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          attributeName:
            type: "string"
          keys:
            type: "array"
            items:
              type: "string"
    ProductTypeSetInputTipAction:
      allOf:
      - $ref: '#/components/schemas/ProductTypeUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          attributeName:
            type: "string"
          inputTip:
            $ref: '#/components/schemas/LocalizedString'
    ProductTypeSetKeyAction:
      allOf:
      - $ref: '#/components/schemas/ProductTypeUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          key:
            type: "string"
    Attribute:
      type: "object"
      properties:
        name:
          type: "string"
        value:
          anyOf:
            - type: "string"
            - type: "object"
            - type: "array"
              items:
                type: "string"
            - type: "number"
            - type: "integer"
            - type: "boolean"
    AttributeValue:
        anyOf:
        - type: "string"
        - type: "object"
        - type: "array"
          items:
            type: "string"
        - type: "number"
        - type: "integer"
        - type: "boolean"
    CategoryOrderHints:
      type: "object"
      additionalProperties:
        type: "string"
    CustomTokenizer:
      allOf:
      - $ref: '#/components/schemas/SuggestTokenizer'
      - type: "object"
        properties:
          type:
            type: "string"
          inputs:
            type: "array"
            items:
              type: "string"
    FacetResult:
      type: "object"
      discriminator:
        propertyName: type
        mapping:
          filter: '#/components/schemas/FilteredFacetResult'
          range: '#/components/schemas/RangeFacetResult'
          terms: '#/components/schemas/TermFacetResult'
      properties:
        type:
          $ref: '#/components/schemas/FacetTypes'
    FacetResultRange:
      type: "object"
      properties:
        from:
          type: "number"
          format: "double"
        fromStr:
          type: "string"
        to:
          type: "number"
          format: "double"
        toStr:
          type: "string"
        count:
          type: "integer"
          format: "int64"
        productCount:
          type: "integer"
          format: "int64"
        total:
          type: "number"
          format: "double"
        min:
          type: "number"
          format: "double"
        max:
          type: "number"
          format: "double"
        mean:
          type: "number"
          format: "double"
    FacetResultTerm:
      type: "object"
      properties:
        term:
          anyOf:
            - type: "string"
            - type: "object"
            - type: "array"
              items:
                type: "string"
            - type: "number"
            - type: "integer"
            - type: "boolean"
        count:
          type: "integer"
          format: "int64"
        productCount:
          type: "integer"
          format: "int64"
    FacetResults:
      type: "object"
      additionalProperties:
        type: "string"
    FacetTypes:
      type: "string"
      enum:
      - terms
      - range
      - filter
      x-annotation-package: "Product"
    FilteredFacetResult:
      allOf:
      - $ref: '#/components/schemas/FacetResult'
      - type: "object"
        properties:
          type:
            $ref: '#/components/schemas/FacetTypes'
          count:
            type: "integer"
            format: "int64"
          productCount:
            type: "integer"
            format: "int64"
    Product:
      allOf:
      - $ref: '#/components/schemas/BaseResource'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          key:
            type: "string"
          productType:
            $ref: '#/components/schemas/ProductTypeReference'
          masterData:
            $ref: '#/components/schemas/ProductCatalogData'
          taxCategory:
            $ref: '#/components/schemas/TaxCategoryReference'
          state:
            $ref: '#/components/schemas/StateReference'
          reviewRatingStatistics:
            $ref: '#/components/schemas/ReviewRatingStatistics'
    ProductCatalogData:
      type: "object"
      properties:
        published:
          type: "boolean"
        current:
          $ref: '#/components/schemas/ProductData'
        staged:
          $ref: '#/components/schemas/ProductData'
        hasStagedChanges:
          type: "boolean"
    ProductData:
      type: "object"
      properties:
        name:
          $ref: '#/components/schemas/LocalizedString'
        categories:
          type: "array"
          items:
            $ref: '#/components/schemas/CategoryReference'
        categoryOrderHints:
          $ref: '#/components/schemas/CategoryOrderHints'
        description:
          $ref: '#/components/schemas/LocalizedString'
        slug:
          $ref: '#/components/schemas/LocalizedString'
        metaTitle:
          $ref: '#/components/schemas/LocalizedString'
        metaDescription:
          $ref: '#/components/schemas/LocalizedString'
        metaKeywords:
          $ref: '#/components/schemas/LocalizedString'
        masterVariant:
          $ref: '#/components/schemas/ProductVariant'
        variants:
          type: "array"
          items:
            $ref: '#/components/schemas/ProductVariant'
        searchKeywords:
          $ref: '#/components/schemas/SearchKeywords'
    ProductDraft:
      type: "object"
      properties:
        productType:
          $ref: '#/components/schemas/ProductTypeResourceIdentifier'
        name:
          $ref: '#/components/schemas/LocalizedString'
        slug:
          $ref: '#/components/schemas/LocalizedString'
        key:
          type: "string"
        description:
          $ref: '#/components/schemas/LocalizedString'
        categories:
          type: "array"
          items:
            $ref: '#/components/schemas/CategoryResourceIdentifier'
        categoryOrderHints:
          $ref: '#/components/schemas/CategoryOrderHints'
        metaTitle:
          $ref: '#/components/schemas/LocalizedString'
        metaDescription:
          $ref: '#/components/schemas/LocalizedString'
        metaKeywords:
          $ref: '#/components/schemas/LocalizedString'
        masterVariant:
          $ref: '#/components/schemas/ProductVariantDraft'
        variants:
          type: "array"
          items:
            $ref: '#/components/schemas/ProductVariantDraft'
        taxCategory:
          $ref: '#/components/schemas/TaxCategoryResourceIdentifier'
        searchKeywords:
          $ref: '#/components/schemas/SearchKeywords'
        state:
          $ref: '#/components/schemas/StateResourceIdentifier'
        publish:
          type: "boolean"
    ProductPagedQueryResponse:
      type: "object"
      properties:
        limit:
          type: "integer"
          format: "int64"
        count:
          type: "integer"
          format: "int64"
        total:
          type: "integer"
          format: "int64"
        offset:
          type: "integer"
          format: "int64"
        results:
          type: "array"
          items:
            $ref: '#/components/schemas/Product'
    ProductProjection:
      allOf:
      - $ref: '#/components/schemas/BaseResource'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          key:
            type: "string"
          productType:
            $ref: '#/components/schemas/ProductTypeReference'
          name:
            $ref: '#/components/schemas/LocalizedString'
          description:
            $ref: '#/components/schemas/LocalizedString'
          slug:
            $ref: '#/components/schemas/LocalizedString'
          categories:
            type: "array"
            items:
              $ref: '#/components/schemas/CategoryReference'
          categoryOrderHints:
            $ref: '#/components/schemas/CategoryOrderHints'
          metaTitle:
            $ref: '#/components/schemas/LocalizedString'
          metaDescription:
            $ref: '#/components/schemas/LocalizedString'
          metaKeywords:
            $ref: '#/components/schemas/LocalizedString'
          searchKeywords:
            $ref: '#/components/schemas/SearchKeywords'
          hasStagedChanges:
            type: "boolean"
          published:
            type: "boolean"
          masterVariant:
            $ref: '#/components/schemas/ProductVariant'
          variants:
            type: "array"
            items:
              $ref: '#/components/schemas/ProductVariant'
          taxCategory:
            $ref: '#/components/schemas/TaxCategoryReference'
          state:
            $ref: '#/components/schemas/StateReference'
          reviewRatingStatistics:
            $ref: '#/components/schemas/ReviewRatingStatistics'
    ProductProjectionPagedQueryResponse:
      type: "object"
      properties:
        limit:
          type: "integer"
          format: "int64"
        count:
          type: "integer"
          format: "int64"
        total:
          type: "integer"
          format: "int64"
        offset:
          type: "integer"
          format: "int64"
        results:
          type: "array"
          items:
            $ref: '#/components/schemas/ProductProjection'
    ProductProjectionPagedSearchResponse:
      type: "object"
      properties:
        limit:
          type: "integer"
          format: "int64"
        count:
          type: "integer"
          format: "int64"
        total:
          type: "integer"
          format: "int64"
        offset:
          type: "integer"
          format: "int64"
        results:
          type: "array"
          items:
            $ref: '#/components/schemas/ProductProjection'
        facets:
          $ref: '#/components/schemas/FacetResults'
    ProductPublishScope:
      type: "string"
      enum:
      - All
      - Prices
      x-annotation-package: "Cart"
      x-annotation-docs-uri: "https://docs.commercetools.com/http-api-projects-carts.html#cartorigin"
    ProductReference:
      allOf:
      - $ref: '#/components/schemas/Reference'
      - type: "object"
        properties:
          typeId:
            $ref: '#/components/schemas/ReferenceTypeId'
          id:
            type: "string"
          obj:
            $ref: '#/components/schemas/Product'
    ProductResourceIdentifier:
      allOf:
      - $ref: '#/components/schemas/ResourceIdentifier'
      - type: "object"
        properties:
          typeId:
            $ref: '#/components/schemas/ReferenceTypeId'
          id:
            type: "string"
          key:
            type: "string"
    ProductUpdate:
      type: "object"
      properties:
        version:
          type: "integer"
          format: "int64"
        actions:
          type: "array"
          items:
            $ref: '#/components/schemas/ProductUpdateAction'
    ProductUpdateAction:
      type: "object"
      discriminator:
        propertyName: action
        mapping:
          addAsset: '#/components/schemas/ProductAddAssetAction'
          addExternalImage: '#/components/schemas/ProductAddExternalImageAction'
          addPrice: '#/components/schemas/ProductAddPriceAction'
          addToCategory: '#/components/schemas/ProductAddToCategoryAction'
          addVariant: '#/components/schemas/ProductAddVariantAction'
          changeAssetName: '#/components/schemas/ProductChangeAssetNameAction'
          changeAssetOrder: '#/components/schemas/ProductChangeAssetOrderAction'
          changeMasterVariant: '#/components/schemas/ProductChangeMasterVariantAction'
          changeName: '#/components/schemas/ProductChangeNameAction'
          changePrice: '#/components/schemas/ProductChangePriceAction'
          changeSlug: '#/components/schemas/ProductChangeSlugAction'
          legacySetSku: '#/components/schemas/ProductLegacySetSkuAction'
          moveImageToPosition: '#/components/schemas/ProductMoveImageToPositionAction'
          publish: '#/components/schemas/ProductPublishAction'
          removeAsset: '#/components/schemas/ProductRemoveAssetAction'
          removeFromCategory: '#/components/schemas/ProductRemoveFromCategoryAction'
          removeImage: '#/components/schemas/ProductRemoveImageAction'
          removePrice: '#/components/schemas/ProductRemovePriceAction'
          removeVariant: '#/components/schemas/ProductRemoveVariantAction'
          revertStagedChanges: '#/components/schemas/ProductRevertStagedChangesAction'
          revertStagedVariantChanges: '#/components/schemas/ProductRevertStagedVariantChangesAction'
          setAssetCustomField: '#/components/schemas/ProductSetAssetCustomFieldAction'
          setAssetCustomType: '#/components/schemas/ProductSetAssetCustomTypeAction'
          setAssetDescription: '#/components/schemas/ProductSetAssetDescriptionAction'
          setAssetKey: '#/components/schemas/ProductSetAssetKeyAction'
          setAssetSources: '#/components/schemas/ProductSetAssetSourcesAction'
          setAssetTags: '#/components/schemas/ProductSetAssetTagsAction'
          setAttribute: '#/components/schemas/ProductSetAttributeAction'
          setAttributeInAllVariants: '#/components/schemas/ProductSetAttributeInAllVariantsAction'
          setCategoryOrderHint: '#/components/schemas/ProductSetCategoryOrderHintAction'
          setDescription: '#/components/schemas/ProductSetDescriptionAction'
          setDiscountedPrice: '#/components/schemas/ProductSetDiscountedPriceAction'
          setImageLabel: '#/components/schemas/ProductSetImageLabelAction'
          setKey: '#/components/schemas/ProductSetKeyAction'
          setMetaDescription: '#/components/schemas/ProductSetMetaDescriptionAction'
          setMetaKeywords: '#/components/schemas/ProductSetMetaKeywordsAction'
          setMetaTitle: '#/components/schemas/ProductSetMetaTitleAction'
          setPrices: '#/components/schemas/ProductSetPricesAction'
          setProductPriceCustomField: '#/components/schemas/ProductSetProductPriceCustomFieldAction'
          setProductPriceCustomType: '#/components/schemas/ProductSetProductPriceCustomTypeAction'
          setProductVariantKey: '#/components/schemas/ProductSetProductVariantKeyAction'
          setSearchKeywords: '#/components/schemas/ProductSetSearchKeywordsAction'
          setSku: '#/components/schemas/ProductSetSkuAction'
          setTaxCategory: '#/components/schemas/ProductSetTaxCategoryAction'
          transitionState: '#/components/schemas/ProductTransitionStateAction'
          unpublish: '#/components/schemas/ProductUnpublishAction'
      properties:
        action:
          type: "string"
    ProductVariant:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        sku:
          type: "string"
        key:
          type: "string"
        prices:
          type: "array"
          items:
            $ref: '#/components/schemas/Price'
        attributes:
          type: "array"
          items:
            $ref: '#/components/schemas/Attribute'
        price:
          $ref: '#/components/schemas/Price'
        images:
          type: "array"
          items:
            $ref: '#/components/schemas/Image'
        assets:
          type: "array"
          items:
            $ref: '#/components/schemas/Asset'
        availability:
          $ref: '#/components/schemas/ProductVariantAvailability'
        isMatchingVariant:
          type: "boolean"
        scopedPrice:
          $ref: '#/components/schemas/ScopedPrice'
        scopedPriceDiscounted:
          type: "boolean"
    ProductVariantAvailability:
      type: "object"
      properties:
        isOnStock:
          type: "boolean"
        restockableInDays:
          type: "integer"
          format: "int64"
        availableQuantity:
          type: "integer"
          format: "int64"
        channels:
          $ref: '#/components/schemas/ProductVariantChannelAvailabilityMap'
    ProductVariantChannelAvailability:
      type: "object"
      properties:
        isOnStock:
          type: "boolean"
        restockableInDays:
          type: "integer"
          format: "int64"
        availableQuantity:
          type: "integer"
          format: "int64"
    ProductVariantChannelAvailabilityMap:
      type: "object"
      additionalProperties:
        type: "string"
    ProductVariantDraft:
      type: "object"
      properties:
        sku:
          type: "string"
        key:
          type: "string"
        prices:
          type: "array"
          items:
            $ref: '#/components/schemas/PriceDraft'
        attributes:
          type: "array"
          items:
            $ref: '#/components/schemas/Attribute'
        images:
          type: "array"
          items:
            $ref: '#/components/schemas/Image'
        assets:
          type: "array"
          items:
            $ref: '#/components/schemas/AssetDraft'
    RangeFacetResult:
      allOf:
      - $ref: '#/components/schemas/FacetResult'
      - type: "object"
        properties:
          type:
            $ref: '#/components/schemas/FacetTypes'
          ranges:
            type: "array"
            items:
              $ref: '#/components/schemas/FacetResultRange'
    SearchKeyword:
      type: "object"
      properties:
        text:
          type: "string"
        suggestTokenizer:
          $ref: '#/components/schemas/SuggestTokenizer'
    SearchKeywords:
      type: "object"
      additionalProperties:
        type: "string"
    SuggestTokenizer:
      type: "object"
      discriminator:
        propertyName: type
        mapping:
          custom: '#/components/schemas/CustomTokenizer'
          whitespace: '#/components/schemas/WhitespaceTokenizer'
      properties:
        type:
          type: "string"
    Suggestion:
      type: "object"
      properties:
        text:
          type: "string"
    SuggestionResult:
      type: "object"
      additionalProperties:
        type: "string"
    TermFacetResult:
      allOf:
      - $ref: '#/components/schemas/FacetResult'
      - type: "object"
        properties:
          type:
            $ref: '#/components/schemas/FacetTypes'
          dataType:
            $ref: '#/components/schemas/TermFacetResultType'
          missing:
            type: "integer"
            format: "int64"
          total:
            type: "integer"
            format: "int64"
          other:
            type: "integer"
            format: "int64"
          terms:
            type: "array"
            items:
              $ref: '#/components/schemas/FacetResultTerm'
    TermFacetResultType:
      type: "string"
      enum:
      - text
      - date
      - time
      - datetime
      - boolean
      - number
      x-annotation-package: "Product"
    WhitespaceTokenizer:
      allOf:
      - $ref: '#/components/schemas/SuggestTokenizer'
      - type: "object"
        properties:
          type:
            type: "string"
    ProductAddAssetAction:
      allOf:
      - $ref: '#/components/schemas/ProductUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          variantId:
            type: "integer"
            format: "int64"
          sku:
            type: "string"
          staged:
            type: "boolean"
          asset:
            $ref: '#/components/schemas/AssetDraft'
          position:
            type: "integer"
            format: "int32"
    ProductAddExternalImageAction:
      allOf:
      - $ref: '#/components/schemas/ProductUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          variantId:
            type: "integer"
            format: "int64"
          sku:
            type: "string"
          image:
            $ref: '#/components/schemas/Image'
          staged:
            type: "boolean"
    ProductAddPriceAction:
      allOf:
      - $ref: '#/components/schemas/ProductUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          variantId:
            type: "integer"
            format: "int64"
          sku:
            type: "string"
          price:
            $ref: '#/components/schemas/PriceDraft'
          staged:
            type: "boolean"
    ProductAddToCategoryAction:
      allOf:
      - $ref: '#/components/schemas/ProductUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          category:
            $ref: '#/components/schemas/CategoryResourceIdentifier'
          orderHint:
            type: "string"
          staged:
            type: "boolean"
    ProductAddVariantAction:
      allOf:
      - $ref: '#/components/schemas/ProductUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          sku:
            type: "string"
          key:
            type: "string"
          prices:
            type: "array"
            items:
              $ref: '#/components/schemas/PriceDraft'
          images:
            type: "array"
            items:
              $ref: '#/components/schemas/Image'
          attributes:
            type: "array"
            items:
              $ref: '#/components/schemas/Attribute'
          staged:
            type: "boolean"
          assets:
            type: "array"
            items:
              $ref: '#/components/schemas/Asset'
    ProductChangeAssetNameAction:
      allOf:
      - $ref: '#/components/schemas/ProductUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          variantId:
            type: "integer"
            format: "int64"
          sku:
            type: "string"
          staged:
            type: "boolean"
          assetId:
            type: "string"
          assetKey:
            type: "string"
          name:
            $ref: '#/components/schemas/LocalizedString'
    ProductChangeAssetOrderAction:
      allOf:
      - $ref: '#/components/schemas/ProductUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          variantId:
            type: "integer"
            format: "int64"
          sku:
            type: "string"
          staged:
            type: "boolean"
          assetOrder:
            type: "array"
            items:
              type: "string"
    ProductChangeMasterVariantAction:
      allOf:
      - $ref: '#/components/schemas/ProductUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          variantId:
            type: "integer"
            format: "int64"
          sku:
            type: "string"
          staged:
            type: "boolean"
    ProductChangeNameAction:
      allOf:
      - $ref: '#/components/schemas/ProductUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          name:
            $ref: '#/components/schemas/LocalizedString'
          staged:
            type: "boolean"
    ProductChangePriceAction:
      allOf:
      - $ref: '#/components/schemas/ProductUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          priceId:
            type: "string"
          price:
            $ref: '#/components/schemas/PriceDraft'
          staged:
            type: "boolean"
    ProductChangeSlugAction:
      allOf:
      - $ref: '#/components/schemas/ProductUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          slug:
            $ref: '#/components/schemas/LocalizedString'
          staged:
            type: "boolean"
    ProductLegacySetSkuAction:
      allOf:
      - $ref: '#/components/schemas/ProductUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          sku:
            type: "string"
          variantId:
            type: "integer"
            format: "int32"
    ProductMoveImageToPositionAction:
      allOf:
      - $ref: '#/components/schemas/ProductUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          variantId:
            type: "integer"
            format: "int64"
          sku:
            type: "string"
          imageUrl:
            type: "string"
          position:
            type: "integer"
            format: "int64"
          staged:
            type: "boolean"
    ProductPublishAction:
      allOf:
      - $ref: '#/components/schemas/ProductUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          scope:
            $ref: '#/components/schemas/ProductPublishScope'
    ProductRemoveAssetAction:
      allOf:
      - $ref: '#/components/schemas/ProductUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          variantId:
            type: "integer"
            format: "int64"
          sku:
            type: "string"
          staged:
            type: "boolean"
          assetId:
            type: "string"
          assetKey:
            type: "string"
    ProductRemoveFromCategoryAction:
      allOf:
      - $ref: '#/components/schemas/ProductUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          category:
            $ref: '#/components/schemas/CategoryResourceIdentifier'
          staged:
            type: "boolean"
    ProductRemoveImageAction:
      allOf:
      - $ref: '#/components/schemas/ProductUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          variantId:
            type: "integer"
            format: "int64"
          sku:
            type: "string"
          imageUrl:
            type: "string"
          staged:
            type: "boolean"
    ProductRemovePriceAction:
      allOf:
      - $ref: '#/components/schemas/ProductUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          priceId:
            type: "string"
          staged:
            type: "boolean"
    ProductRemoveVariantAction:
      allOf:
      - $ref: '#/components/schemas/ProductUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          id:
            type: "integer"
            format: "int64"
          sku:
            type: "string"
          staged:
            type: "boolean"
    ProductRevertStagedChangesAction:
      allOf:
      - $ref: '#/components/schemas/ProductUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
    ProductRevertStagedVariantChangesAction:
      allOf:
      - $ref: '#/components/schemas/ProductUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          variantId:
            type: "integer"
            format: "int64"
    ProductSetAssetCustomFieldAction:
      allOf:
      - $ref: '#/components/schemas/ProductUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          variantId:
            type: "integer"
            format: "int64"
          sku:
            type: "string"
          staged:
            type: "boolean"
          assetId:
            type: "string"
          assetKey:
            type: "string"
          name:
            type: "string"
          value:
            anyOf:
              - type: "string"
              - type: "object"
              - type: "array"
                items:
                    type: "string"
              - type: "number"
              - type: "integer"
              - type: "boolean"
    ProductSetAssetCustomTypeAction:
      allOf:
      - $ref: '#/components/schemas/ProductUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          variantId:
            type: "integer"
            format: "int64"
          sku:
            type: "string"
          staged:
            type: "boolean"
          assetId:
            type: "string"
          assetKey:
            type: "string"
          type:
            $ref: '#/components/schemas/TypeResourceIdentifier'
          fields:
            type: "string"
            additionalProperties: true
    ProductSetAssetDescriptionAction:
      allOf:
      - $ref: '#/components/schemas/ProductUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          variantId:
            type: "integer"
            format: "int64"
          sku:
            type: "string"
          staged:
            type: "boolean"
          assetId:
            type: "string"
          assetKey:
            type: "string"
          description:
            $ref: '#/components/schemas/LocalizedString'
    ProductSetAssetKeyAction:
      allOf:
      - $ref: '#/components/schemas/ProductUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          variantId:
            type: "integer"
            format: "int64"
          sku:
            type: "string"
          staged:
            type: "boolean"
          assetId:
            type: "string"
          assetKey:
            type: "string"
    ProductSetAssetSourcesAction:
      allOf:
      - $ref: '#/components/schemas/ProductUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          variantId:
            type: "integer"
            format: "int64"
          sku:
            type: "string"
          staged:
            type: "boolean"
          assetId:
            type: "string"
          assetKey:
            type: "string"
          sources:
            type: "array"
            items:
              $ref: '#/components/schemas/AssetSource'
    ProductSetAssetTagsAction:
      allOf:
      - $ref: '#/components/schemas/ProductUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          variantId:
            type: "integer"
            format: "int64"
          sku:
            type: "string"
          staged:
            type: "boolean"
          assetId:
            type: "string"
          assetKey:
            type: "string"
          tags:
            type: "array"
            items:
              type: "string"
    ProductSetAttributeAction:
      allOf:
      - $ref: '#/components/schemas/ProductUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          variantId:
            type: "integer"
            format: "int64"
          sku:
            type: "string"
          name:
            type: "string"
          value:
            anyOf:
              - type: "string"
              - type: "object"
              - type: "array"
                items:
                    type: "string"
              - type: "number"
              - type: "integer"
              - type: "boolean"
          staged:
            type: "boolean"
    ProductSetAttributeInAllVariantsAction:
      allOf:
      - $ref: '#/components/schemas/ProductUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          name:
            type: "string"
          value:
            anyOf:
              - type: "string"
              - type: "object"
              - type: "array"
                items:
                    type: "string"
              - type: "number"
              - type: "integer"
              - type: "boolean"
          staged:
            type: "boolean"
    ProductSetCategoryOrderHintAction:
      allOf:
      - $ref: '#/components/schemas/ProductUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          categoryId:
            type: "string"
          orderHint:
            type: "string"
          staged:
            type: "boolean"
    ProductSetDescriptionAction:
      allOf:
      - $ref: '#/components/schemas/ProductUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          description:
            $ref: '#/components/schemas/LocalizedString'
          staged:
            type: "boolean"
    ProductSetDiscountedPriceAction:
      allOf:
      - $ref: '#/components/schemas/ProductUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          priceId:
            type: "string"
          staged:
            type: "boolean"
          discounted:
            $ref: '#/components/schemas/DiscountedPriceDraft'
    ProductSetImageLabelAction:
      allOf:
      - $ref: '#/components/schemas/ProductUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          sku:
            type: "string"
          variantId:
            type: "integer"
            format: "int64"
          imageUrl:
            type: "string"
          label:
            type: "string"
          staged:
            type: "boolean"
    ProductSetKeyAction:
      allOf:
      - $ref: '#/components/schemas/ProductUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          key:
            type: "string"
    ProductSetMetaDescriptionAction:
      allOf:
      - $ref: '#/components/schemas/ProductUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          metaDescription:
            $ref: '#/components/schemas/LocalizedString'
          staged:
            type: "boolean"
    ProductSetMetaKeywordsAction:
      allOf:
      - $ref: '#/components/schemas/ProductUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          metaKeywords:
            $ref: '#/components/schemas/LocalizedString'
          staged:
            type: "boolean"
    ProductSetMetaTitleAction:
      allOf:
      - $ref: '#/components/schemas/ProductUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          metaTitle:
            $ref: '#/components/schemas/LocalizedString'
          staged:
            type: "boolean"
    ProductSetPricesAction:
      allOf:
      - $ref: '#/components/schemas/ProductUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          variantId:
            type: "integer"
            format: "int64"
          sku:
            type: "string"
          prices:
            type: "array"
            items:
              $ref: '#/components/schemas/PriceDraft'
          staged:
            type: "boolean"
    ProductSetProductPriceCustomFieldAction:
      allOf:
      - $ref: '#/components/schemas/ProductUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          priceId:
            type: "string"
          staged:
            type: "boolean"
          name:
            type: "string"
          value:
            anyOf:
              - type: "string"
              - type: "object"
              - type: "array"
                items:
                    type: "string"
              - type: "number"
              - type: "integer"
              - type: "boolean"
    ProductSetProductPriceCustomTypeAction:
      allOf:
      - $ref: '#/components/schemas/ProductUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          priceId:
            type: "string"
          staged:
            type: "boolean"
          type:
            $ref: '#/components/schemas/TypeResourceIdentifier'
          fields:
            $ref: '#/components/schemas/FieldContainer'
    ProductSetProductVariantKeyAction:
      allOf:
      - $ref: '#/components/schemas/ProductUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          variantId:
            type: "integer"
            format: "int64"
          sku:
            type: "string"
          key:
            type: "string"
          staged:
            type: "boolean"
    ProductSetSearchKeywordsAction:
      allOf:
      - $ref: '#/components/schemas/ProductUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          searchKeywords:
            $ref: '#/components/schemas/SearchKeywords'
          staged:
            type: "boolean"
    ProductSetSkuAction:
      allOf:
      - $ref: '#/components/schemas/ProductUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          variantId:
            type: "integer"
            format: "int64"
          sku:
            type: "string"
          staged:
            type: "boolean"
    ProductSetTaxCategoryAction:
      allOf:
      - $ref: '#/components/schemas/ProductUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          taxCategory:
            $ref: '#/components/schemas/TaxCategoryResourceIdentifier'
    ProductTransitionStateAction:
      allOf:
      - $ref: '#/components/schemas/ProductUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          state:
            $ref: '#/components/schemas/StateResourceIdentifier'
          force:
            type: "boolean"
    ProductUnpublishAction:
      allOf:
      - $ref: '#/components/schemas/ProductUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
    CartClassificationType:
      allOf:
      - $ref: '#/components/schemas/ShippingRateInputType'
      - type: "object"
        properties:
          type:
            $ref: '#/components/schemas/ShippingRateTierType'
          values:
            type: "array"
            items:
              $ref: '#/components/schemas/CustomFieldLocalizedEnumValue'
    CartScoreType:
      allOf:
      - $ref: '#/components/schemas/ShippingRateInputType'
      - type: "object"
        properties:
          type:
            $ref: '#/components/schemas/ShippingRateTierType'
    CartValueType:
      allOf:
      - $ref: '#/components/schemas/ShippingRateInputType'
      - type: "object"
        properties:
          type:
            $ref: '#/components/schemas/ShippingRateTierType'
    CartsConfiguration:
      type: "object"
      properties:
        countryTaxRateFallbackEnabled:
          type: "boolean"
        deleteDaysAfterLastModification:
          type: "integer"
          format: "int64"
    ExternalOAuth:
      type: "object"
      properties:
        url:
          type: "string"
        authorizationHeader:
          type: "string"
    OrderSearchStatus:
      type: "string"
      enum:
      - Activated
      - Deactivated
      x-annotation-package: "Project"
      x-beta: true
    Project:
      type: "object"
      properties:
        version:
          type: "integer"
          format: "int64"
        key:
          type: "string"
        name:
          type: "string"
        countries:
          type: "array"
          items:
            $ref: '#/components/schemas/CountryCode'
        currencies:
          type: "array"
          items:
            $ref: '#/components/schemas/CurrencyCode'
        languages:
          type: "array"
          items:
            $ref: '#/components/schemas/Locale'
        createdAt:
          type: "string"
          format: "datetime"
        trialUntil:
          type: "string"
        messages:
          $ref: '#/components/schemas/MessageConfiguration'
        shippingRateInputType:
          $ref: '#/components/schemas/ShippingRateInputType'
        externalOAuth:
          $ref: '#/components/schemas/ExternalOAuth'
        carts:
          $ref: '#/components/schemas/CartsConfiguration'
        searchIndexing:
          $ref: '#/components/schemas/SearchIndexingConfiguration'
        shoppingLists:
          $ref: '#/components/schemas/ShoppingListsConfiguration'
    ProjectUpdate:
      type: "object"
      properties:
        version:
          type: "integer"
          format: "int64"
        actions:
          type: "array"
          items:
            $ref: '#/components/schemas/ProjectUpdateAction'
    ProjectUpdateAction:
      type: "object"
      discriminator:
        propertyName: action
        mapping:
          changeCartsConfiguration: '#/components/schemas/ProjectChangeCartsConfigurationAction'
          changeCountries: '#/components/schemas/ProjectChangeCountriesAction'
          changeCountryTaxRateFallbackEnabled: '#/components/schemas/ProjectChangeCountryTaxRateFallbackEnabledAction'
          changeCurrencies: '#/components/schemas/ProjectChangeCurrenciesAction'
          changeLanguages: '#/components/schemas/ProjectChangeLanguagesAction'
          changeMessagesConfiguration: '#/components/schemas/ProjectChangeMessagesConfigurationAction'
          changeMessagesEnabled: '#/components/schemas/ProjectChangeMessagesEnabledAction'
          changeName: '#/components/schemas/ProjectChangeNameAction'
          changeOrderSearchStatus: '#/components/schemas/ProjectChangeOrderSearchStatusAction'
          changeProductSearchIndexingEnabled: '#/components/schemas/ProjectChangeProductSearchIndexingEnabledAction'
          changeShoppingListsConfiguration: '#/components/schemas/ProjectChangeShoppingListsConfigurationAction'
          setExternalOAuth: '#/components/schemas/ProjectSetExternalOAuthAction'
          setShippingRateInputType: '#/components/schemas/ProjectSetShippingRateInputTypeAction'
      properties:
        action:
          type: "string"
    SearchIndexingConfiguration:
      type: "object"
      properties:
        products:
          $ref: '#/components/schemas/SearchIndexingConfigurationValues'
        orders:
          $ref: '#/components/schemas/SearchIndexingConfigurationValues'
    SearchIndexingConfigurationStatus:
      type: "string"
      enum:
      - Activated
      - Deactivated
      - Indexing
      x-annotation-package: "Project"
    SearchIndexingConfigurationValues:
      type: "object"
      properties:
        status:
          $ref: '#/components/schemas/SearchIndexingConfigurationStatus'
        lastModifiedAt:
          type: "string"
          format: "datetime"
        lastModifiedBy:
          $ref: '#/components/schemas/LastModifiedBy'
    ShippingRateInputType:
      type: "object"
      discriminator:
        propertyName: type
        mapping:
          CartClassification: '#/components/schemas/CartClassificationType'
          CartScore: '#/components/schemas/CartScoreType'
          CartValue: '#/components/schemas/CartValueType'
      properties:
        type:
          $ref: '#/components/schemas/ShippingRateTierType'
    ShoppingListsConfiguration:
      type: "object"
      properties:
        deleteDaysAfterLastModification:
          type: "integer"
          format: "int64"
    ProjectChangeCartsConfigurationAction:
      allOf:
      - $ref: '#/components/schemas/ProjectUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          cartsConfiguration:
            $ref: '#/components/schemas/CartsConfiguration'
    ProjectChangeCountriesAction:
      allOf:
      - $ref: '#/components/schemas/ProjectUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          countries:
            type: "array"
            items:
              $ref: '#/components/schemas/CountryCode'
    ProjectChangeCountryTaxRateFallbackEnabledAction:
      allOf:
      - $ref: '#/components/schemas/ProjectUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          countryTaxRateFallbackEnabled:
            type: "boolean"
    ProjectChangeCurrenciesAction:
      allOf:
      - $ref: '#/components/schemas/ProjectUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          currencies:
            type: "array"
            items:
              $ref: '#/components/schemas/CurrencyCode'
    ProjectChangeLanguagesAction:
      allOf:
      - $ref: '#/components/schemas/ProjectUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          languages:
            type: "array"
            items:
              $ref: '#/components/schemas/Locale'
    ProjectChangeMessagesConfigurationAction:
      allOf:
      - $ref: '#/components/schemas/ProjectUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          messagesConfiguration:
            $ref: '#/components/schemas/MessageConfigurationDraft'
    ProjectChangeMessagesEnabledAction:
      allOf:
      - $ref: '#/components/schemas/ProjectUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          messagesEnabled:
            type: "boolean"
    ProjectChangeNameAction:
      allOf:
      - $ref: '#/components/schemas/ProjectUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          name:
            type: "string"
    ProjectChangeOrderSearchStatusAction:
      allOf:
      - $ref: '#/components/schemas/ProjectUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          status:
            $ref: '#/components/schemas/OrderSearchStatus'
    ProjectChangeProductSearchIndexingEnabledAction:
      allOf:
      - $ref: '#/components/schemas/ProjectUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          enabled:
            type: "boolean"
    ProjectChangeShoppingListsConfigurationAction:
      allOf:
      - $ref: '#/components/schemas/ProjectUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          shoppingListsConfiguration:
            $ref: '#/components/schemas/ShoppingListsConfiguration'
    ProjectSetExternalOAuthAction:
      allOf:
      - $ref: '#/components/schemas/ProjectUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          externalOAuth:
            $ref: '#/components/schemas/ExternalOAuth'
    ProjectSetShippingRateInputTypeAction:
      allOf:
      - $ref: '#/components/schemas/ProjectUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          shippingRateInputType:
            $ref: '#/components/schemas/ShippingRateInputType'
    Review:
      allOf:
      - $ref: '#/components/schemas/BaseResource'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          key:
            type: "string"
          uniquenessValue:
            type: "string"
          locale:
            type: "string"
          authorName:
            type: "string"
          title:
            type: "string"
          text:
            type: "string"
          target:
            anyOf:
              - type: "string"
              - type: "object"
              - type: "array"
                items:
                    type: "string"
              - type: "number"
              - type: "integer"
              - type: "boolean"
          includedInStatistics:
            type: "boolean"
          rating:
            type: "integer"
            format: "int32"
          state:
            $ref: '#/components/schemas/StateReference'
          customer:
            $ref: '#/components/schemas/CustomerReference'
          custom:
            $ref: '#/components/schemas/CustomFields'
    ReviewDraft:
      type: "object"
      properties:
        key:
          type: "string"
        uniquenessValue:
          type: "string"
        locale:
          type: "string"
        authorName:
          type: "string"
        title:
          type: "string"
        text:
          type: "string"
        target:
          anyOf:
            - type: "string"
            - type: "object"
            - type: "array"
              items:
                type: "string"
            - type: "number"
            - type: "integer"
            - type: "boolean"
        state:
          $ref: '#/components/schemas/StateResourceIdentifier'
        rating:
          type: "integer"
          format: "int32"
        customer:
          $ref: '#/components/schemas/CustomerResourceIdentifier'
        custom:
          $ref: '#/components/schemas/CustomFieldsDraft'
    ReviewPagedQueryResponse:
      type: "object"
      properties:
        limit:
          type: "integer"
          format: "int64"
        count:
          type: "integer"
          format: "int64"
        total:
          type: "integer"
          format: "int64"
        offset:
          type: "integer"
          format: "int64"
        results:
          type: "array"
          items:
            $ref: '#/components/schemas/Review'
    ReviewRatingStatistics:
      type: "object"
      properties:
        averageRating:
          type: "number"
          format: "double"
        highestRating:
          type: "number"
          format: "double"
        lowestRating:
          type: "number"
          format: "double"
        count:
          type: "integer"
          format: "int32"
        ratingsDistribution:
            type: "string"
            additionalProperties: true
    ReviewReference:
      allOf:
      - $ref: '#/components/schemas/Reference'
      - type: "object"
        properties:
          typeId:
            $ref: '#/components/schemas/ReferenceTypeId'
          id:
            type: "string"
          obj:
            $ref: '#/components/schemas/Review'
    ReviewResourceIdentifier:
      allOf:
      - $ref: '#/components/schemas/ResourceIdentifier'
      - type: "object"
        properties:
          typeId:
            $ref: '#/components/schemas/ReferenceTypeId'
          id:
            type: "string"
          key:
            type: "string"
    ReviewUpdate:
      type: "object"
      properties:
        version:
          type: "integer"
          format: "int64"
        actions:
          type: "array"
          items:
            $ref: '#/components/schemas/ReviewUpdateAction'
    ReviewUpdateAction:
      type: "object"
      discriminator:
        propertyName: action
        mapping:
          setAuthorName: '#/components/schemas/ReviewSetAuthorNameAction'
          setCustomField: '#/components/schemas/ReviewSetCustomFieldAction'
          setCustomType: '#/components/schemas/ReviewSetCustomTypeAction'
          setCustomer: '#/components/schemas/ReviewSetCustomerAction'
          setKey: '#/components/schemas/ReviewSetKeyAction'
          setLocale: '#/components/schemas/ReviewSetLocaleAction'
          setRating: '#/components/schemas/ReviewSetRatingAction'
          setTarget: '#/components/schemas/ReviewSetTargetAction'
          setText: '#/components/schemas/ReviewSetTextAction'
          setTitle: '#/components/schemas/ReviewSetTitleAction'
          transitionState: '#/components/schemas/ReviewTransitionStateAction'
      properties:
        action:
          type: "string"
    ReviewSetAuthorNameAction:
      allOf:
      - $ref: '#/components/schemas/ReviewUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          authorName:
            type: "string"
    ReviewSetCustomFieldAction:
      allOf:
      - $ref: '#/components/schemas/ReviewUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          name:
            type: "string"
          value:
            anyOf:
              - type: "string"
              - type: "object"
              - type: "array"
                items:
                    type: "string"
              - type: "number"
              - type: "integer"
              - type: "boolean"
    ReviewSetCustomTypeAction:
      allOf:
      - $ref: '#/components/schemas/ReviewUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          type:
            $ref: '#/components/schemas/TypeResourceIdentifier'
          fields:
            $ref: '#/components/schemas/FieldContainer'
    ReviewSetCustomerAction:
      allOf:
      - $ref: '#/components/schemas/ReviewUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          customer:
            $ref: '#/components/schemas/CustomerResourceIdentifier'
    ReviewSetKeyAction:
      allOf:
      - $ref: '#/components/schemas/ReviewUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          key:
            type: "string"
    ReviewSetLocaleAction:
      allOf:
      - $ref: '#/components/schemas/ReviewUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          locale:
            type: "string"
    ReviewSetRatingAction:
      allOf:
      - $ref: '#/components/schemas/ReviewUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          rating:
            type: "integer"
            format: "int32"
    ReviewSetTargetAction:
      allOf:
      - $ref: '#/components/schemas/ReviewUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          target:
            anyOf:
              - type: "string"
              - type: "object"
              - type: "array"
                items:
                    type: "string"
              - type: "number"
              - type: "integer"
              - type: "boolean"
    ReviewSetTextAction:
      allOf:
      - $ref: '#/components/schemas/ReviewUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          text:
            type: "string"
    ReviewSetTitleAction:
      allOf:
      - $ref: '#/components/schemas/ReviewUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          title:
            type: "string"
    ReviewTransitionStateAction:
      allOf:
      - $ref: '#/components/schemas/ReviewUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          state:
            $ref: '#/components/schemas/StateResourceIdentifier'
          force:
            type: "boolean"
    CartClassificationTier:
      allOf:
      - $ref: '#/components/schemas/ShippingRatePriceTier'
      - type: "object"
        properties:
          type:
            $ref: '#/components/schemas/ShippingRateTierType'
          value:
            type: "string"
          price:
            $ref: '#/components/schemas/Money'
          isMatching:
            type: "boolean"
    CartScoreTier:
      allOf:
      - $ref: '#/components/schemas/ShippingRatePriceTier'
      - type: "object"
        properties:
          type:
            $ref: '#/components/schemas/ShippingRateTierType'
          score:
            type: "number"
            format: "double"
          price:
            $ref: '#/components/schemas/Money'
          priceFunction:
            $ref: '#/components/schemas/PriceFunction'
          isMatching:
            type: "boolean"
    CartValueTier:
      allOf:
      - $ref: '#/components/schemas/ShippingRatePriceTier'
      - type: "object"
        properties:
          type:
            $ref: '#/components/schemas/ShippingRateTierType'
          minimumCentAmount:
            type: "integer"
            format: "int64"
          price:
            $ref: '#/components/schemas/Money'
          isMatching:
            type: "boolean"
    PriceFunction:
      type: "object"
      properties:
        currencyCode:
          $ref: '#/components/schemas/CurrencyCode'
        function:
          type: "string"
    ShippingMethod:
      allOf:
      - $ref: '#/components/schemas/BaseResource'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          key:
            type: "string"
          name:
            type: "string"
          localizedName:
            $ref: '#/components/schemas/LocalizedString'
          description:
            type: "string"
          localizedDescription:
            $ref: '#/components/schemas/LocalizedString'
          taxCategory:
            $ref: '#/components/schemas/TaxCategoryReference'
          zoneRates:
            type: "array"
            items:
              $ref: '#/components/schemas/ZoneRate'
          isDefault:
            type: "boolean"
          predicate:
            type: "string"
          custom:
            $ref: '#/components/schemas/CustomFields'
    ShippingMethodDraft:
      type: "object"
      properties:
        key:
          type: "string"
        name:
          type: "string"
        localizedName:
          $ref: '#/components/schemas/LocalizedString'
        description:
          type: "string"
        localizedDescription:
          $ref: '#/components/schemas/LocalizedString'
        taxCategory:
          $ref: '#/components/schemas/TaxCategoryResourceIdentifier'
        zoneRates:
          type: "array"
          items:
            $ref: '#/components/schemas/ZoneRateDraft'
        isDefault:
          type: "boolean"
        predicate:
          type: "string"
        custom:
          $ref: '#/components/schemas/CustomFieldsDraft'
    ShippingMethodPagedQueryResponse:
      type: "object"
      properties:
        limit:
          type: "integer"
          format: "int64"
        count:
          type: "integer"
          format: "int64"
        total:
          type: "integer"
          format: "int64"
        offset:
          type: "integer"
          format: "int64"
        results:
          type: "array"
          items:
            $ref: '#/components/schemas/ShippingMethod'
    ShippingMethodReference:
      allOf:
      - $ref: '#/components/schemas/Reference'
      - type: "object"
        properties:
          typeId:
            $ref: '#/components/schemas/ReferenceTypeId'
          id:
            type: "string"
          obj:
            $ref: '#/components/schemas/ShippingMethod'
    ShippingMethodResourceIdentifier:
      allOf:
      - $ref: '#/components/schemas/ResourceIdentifier'
      - type: "object"
        properties:
          typeId:
            $ref: '#/components/schemas/ReferenceTypeId'
          id:
            type: "string"
          key:
            type: "string"
    ShippingMethodUpdate:
      type: "object"
      properties:
        version:
          type: "integer"
          format: "int64"
        actions:
          type: "array"
          items:
            $ref: '#/components/schemas/ShippingMethodUpdateAction'
    ShippingMethodUpdateAction:
      type: "object"
      discriminator:
        propertyName: action
        mapping:
          addShippingRate: '#/components/schemas/ShippingMethodAddShippingRateAction'
          addZone: '#/components/schemas/ShippingMethodAddZoneAction'
          changeIsDefault: '#/components/schemas/ShippingMethodChangeIsDefaultAction'
          changeName: '#/components/schemas/ShippingMethodChangeNameAction'
          changeTaxCategory: '#/components/schemas/ShippingMethodChangeTaxCategoryAction'
          removeShippingRate: '#/components/schemas/ShippingMethodRemoveShippingRateAction'
          removeZone: '#/components/schemas/ShippingMethodRemoveZoneAction'
          setCustomField: '#/components/schemas/ShippingMethodSetCustomFieldAction'
          setCustomType: '#/components/schemas/ShippingMethodSetCustomTypeAction'
          setDescription: '#/components/schemas/ShippingMethodSetDescriptionAction'
          setKey: '#/components/schemas/ShippingMethodSetKeyAction'
          setLocalizedDescription: '#/components/schemas/ShippingMethodSetLocalizedDescriptionAction'
          setLocalizedName: '#/components/schemas/ShippingMethodSetLocalizedNameAction'
          setPredicate: '#/components/schemas/ShippingMethodSetPredicateAction'
      properties:
        action:
          type: "string"
    ShippingRate:
      type: "object"
      properties:
        price:
          $ref: '#/components/schemas/TypedMoney'
        freeAbove:
          $ref: '#/components/schemas/TypedMoney'
        isMatching:
          type: "boolean"
        tiers:
          type: "array"
          items:
            $ref: '#/components/schemas/ShippingRatePriceTier'
    ShippingRateDraft:
      type: "object"
      properties:
        price:
          $ref: '#/components/schemas/Money'
        freeAbove:
          $ref: '#/components/schemas/Money'
        tiers:
          type: "array"
          items:
            $ref: '#/components/schemas/ShippingRatePriceTier'
    ShippingRatePriceTier:
      type: "object"
      discriminator:
        propertyName: type
        mapping:
          CartClassification: '#/components/schemas/CartClassificationTier'
          CartScore: '#/components/schemas/CartScoreTier'
          CartValue: '#/components/schemas/CartValueTier'
      properties:
        type:
          $ref: '#/components/schemas/ShippingRateTierType'
    ShippingRateTierType:
      type: "string"
      enum:
      - CartValue
      - CartClassification
      - CartScore
      x-annotation-package: "ShippingMethod"
      x-annotation-docs-uri: "https://docs.commercetools.com/http-api-projects-shippingMethods.html#shippingratepricetier"
    ZoneRate:
      type: "object"
      properties:
        zone:
          $ref: '#/components/schemas/ZoneReference'
        shippingRates:
          type: "array"
          items:
            $ref: '#/components/schemas/ShippingRate'
    ZoneRateDraft:
      type: "object"
      properties:
        zone:
          $ref: '#/components/schemas/ZoneResourceIdentifier'
        shippingRates:
          type: "array"
          items:
            $ref: '#/components/schemas/ShippingRateDraft'
    ShippingMethodAddShippingRateAction:
      allOf:
      - $ref: '#/components/schemas/ShippingMethodUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          zone:
            $ref: '#/components/schemas/ZoneResourceIdentifier'
          shippingRate:
            $ref: '#/components/schemas/ShippingRateDraft'
    ShippingMethodAddZoneAction:
      allOf:
      - $ref: '#/components/schemas/ShippingMethodUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          zone:
            $ref: '#/components/schemas/ZoneResourceIdentifier'
    ShippingMethodChangeIsDefaultAction:
      allOf:
      - $ref: '#/components/schemas/ShippingMethodUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          isDefault:
            type: "boolean"
    ShippingMethodChangeNameAction:
      allOf:
      - $ref: '#/components/schemas/ShippingMethodUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          name:
            type: "string"
    ShippingMethodChangeTaxCategoryAction:
      allOf:
      - $ref: '#/components/schemas/ShippingMethodUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          taxCategory:
            $ref: '#/components/schemas/TaxCategoryResourceIdentifier'
    ShippingMethodRemoveShippingRateAction:
      allOf:
      - $ref: '#/components/schemas/ShippingMethodUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          zone:
            $ref: '#/components/schemas/ZoneResourceIdentifier'
          shippingRate:
            $ref: '#/components/schemas/ShippingRateDraft'
    ShippingMethodRemoveZoneAction:
      allOf:
      - $ref: '#/components/schemas/ShippingMethodUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          zone:
            $ref: '#/components/schemas/ZoneResourceIdentifier'
    ShippingMethodSetCustomFieldAction:
      allOf:
      - $ref: '#/components/schemas/ShippingMethodUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          name:
            type: "string"
          value:
            anyOf:
              - type: "string"
              - type: "object"
              - type: "array"
                items:
                    type: "string"
              - type: "number"
              - type: "integer"
              - type: "boolean"
    ShippingMethodSetCustomTypeAction:
      allOf:
      - $ref: '#/components/schemas/ShippingMethodUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          type:
            $ref: '#/components/schemas/TypeResourceIdentifier'
          fields:
            $ref: '#/components/schemas/FieldContainer'
    ShippingMethodSetDescriptionAction:
      allOf:
      - $ref: '#/components/schemas/ShippingMethodUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          description:
            type: "string"
    ShippingMethodSetKeyAction:
      allOf:
      - $ref: '#/components/schemas/ShippingMethodUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          key:
            type: "string"
    ShippingMethodSetLocalizedDescriptionAction:
      allOf:
      - $ref: '#/components/schemas/ShippingMethodUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          localizedDescription:
            $ref: '#/components/schemas/LocalizedString'
    ShippingMethodSetLocalizedNameAction:
      allOf:
      - $ref: '#/components/schemas/ShippingMethodUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          localizedName:
            $ref: '#/components/schemas/LocalizedString'
    ShippingMethodSetPredicateAction:
      allOf:
      - $ref: '#/components/schemas/ShippingMethodUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          predicate:
            type: "string"
    ShoppingList:
      allOf:
      - $ref: '#/components/schemas/BaseResource'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          custom:
            $ref: '#/components/schemas/CustomFields'
          customer:
            $ref: '#/components/schemas/CustomerReference'
          deleteDaysAfterLastModification:
            type: "integer"
            format: "int64"
          description:
            $ref: '#/components/schemas/LocalizedString'
          key:
            type: "string"
          lineItems:
            type: "array"
            items:
              $ref: '#/components/schemas/ShoppingListLineItem'
          name:
            $ref: '#/components/schemas/LocalizedString'
          slug:
            $ref: '#/components/schemas/LocalizedString'
          textLineItems:
            type: "array"
            items:
              $ref: '#/components/schemas/TextLineItem'
          anonymousId:
            type: "string"
          store:
            $ref: '#/components/schemas/StoreKeyReference'
    ShoppingListDraft:
      type: "object"
      properties:
        custom:
          $ref: '#/components/schemas/CustomFieldsDraft'
        customer:
          $ref: '#/components/schemas/CustomerResourceIdentifier'
        deleteDaysAfterLastModification:
          type: "integer"
          format: "int64"
        description:
          $ref: '#/components/schemas/LocalizedString'
        key:
          type: "string"
        lineItems:
          type: "array"
          items:
            $ref: '#/components/schemas/ShoppingListLineItemDraft'
        name:
          $ref: '#/components/schemas/LocalizedString'
        slug:
          $ref: '#/components/schemas/LocalizedString'
        textLineItems:
          type: "array"
          items:
            $ref: '#/components/schemas/TextLineItemDraft'
        anonymousId:
          type: "string"
        store:
          $ref: '#/components/schemas/StoreResourceIdentifier'
    ShoppingListLineItem:
      type: "object"
      properties:
        addedAt:
          type: "string"
          format: "datetime"
        custom:
          $ref: '#/components/schemas/CustomFields'
        deactivatedAt:
          type: "string"
          format: "datetime"
        id:
          type: "string"
        name:
          $ref: '#/components/schemas/LocalizedString'
        productId:
          type: "string"
        productSlug:
          $ref: '#/components/schemas/LocalizedString'
        productType:
          $ref: '#/components/schemas/ProductTypeReference'
        quantity:
          type: "integer"
          format: "int32"
        variant:
          $ref: '#/components/schemas/ProductVariant'
        variantId:
          type: "integer"
          format: "int64"
    ShoppingListLineItemDraft:
      type: "object"
      properties:
        addedAt:
          type: "string"
          format: "datetime"
        custom:
          $ref: '#/components/schemas/CustomFieldsDraft'
        sku:
          type: "string"
        productId:
          type: "string"
        quantity:
          type: "integer"
          format: "int32"
        variantId:
          type: "integer"
          format: "int64"
    ShoppingListPagedQueryResponse:
      type: "object"
      properties:
        limit:
          type: "integer"
          format: "int64"
        count:
          type: "integer"
          format: "int64"
        total:
          type: "integer"
          format: "int64"
        offset:
          type: "integer"
          format: "int64"
        results:
          type: "array"
          items:
            $ref: '#/components/schemas/ShoppingList'
    ShoppingListReference:
      allOf:
      - $ref: '#/components/schemas/Reference'
      - type: "object"
        properties:
          typeId:
            $ref: '#/components/schemas/ReferenceTypeId'
          id:
            type: "string"
          obj:
            $ref: '#/components/schemas/ShoppingList'
    ShoppingListResourceIdentifier:
      allOf:
      - $ref: '#/components/schemas/ResourceIdentifier'
      - type: "object"
        properties:
          typeId:
            $ref: '#/components/schemas/ReferenceTypeId'
          id:
            type: "string"
          key:
            type: "string"
    ShoppingListUpdate:
      type: "object"
      properties:
        version:
          type: "integer"
          format: "int64"
        actions:
          type: "array"
          items:
            $ref: '#/components/schemas/ShoppingListUpdateAction'
    ShoppingListUpdateAction:
      type: "object"
      discriminator:
        propertyName: action
        mapping:
          addLineItem: '#/components/schemas/ShoppingListAddLineItemAction'
          addTextLineItem: '#/components/schemas/ShoppingListAddTextLineItemAction'
          changeLineItemQuantity: '#/components/schemas/ShoppingListChangeLineItemQuantityAction'
          changeLineItemsOrder: '#/components/schemas/ShoppingListChangeLineItemsOrderAction'
          changeName: '#/components/schemas/ShoppingListChangeNameAction'
          changeTextLineItemName: '#/components/schemas/ShoppingListChangeTextLineItemNameAction'
          changeTextLineItemQuantity: '#/components/schemas/ShoppingListChangeTextLineItemQuantityAction'
          changeTextLineItemsOrder: '#/components/schemas/ShoppingListChangeTextLineItemsOrderAction'
          removeLineItem: '#/components/schemas/ShoppingListRemoveLineItemAction'
          removeTextLineItem: '#/components/schemas/ShoppingListRemoveTextLineItemAction'
          setAnonymousId: '#/components/schemas/ShoppingListSetAnonymousIdAction'
          setCustomField: '#/components/schemas/ShoppingListSetCustomFieldAction'
          setCustomType: '#/components/schemas/ShoppingListSetCustomTypeAction'
          setCustomer: '#/components/schemas/ShoppingListSetCustomerAction'
          setDeleteDaysAfterLastModification: '#/components/schemas/ShoppingListSetDeleteDaysAfterLastModificationAction'
          setDescription: '#/components/schemas/ShoppingListSetDescriptionAction'
          setKey: '#/components/schemas/ShoppingListSetKeyAction'
          setLineItemCustomField: '#/components/schemas/ShoppingListSetLineItemCustomFieldAction'
          setLineItemCustomType: '#/components/schemas/ShoppingListSetLineItemCustomTypeAction'
          setSlug: '#/components/schemas/ShoppingListSetSlugAction'
          setStore: '#/components/schemas/ShoppingListSetStoreAction'
          setTextLineItemCustomField: '#/components/schemas/ShoppingListSetTextLineItemCustomFieldAction'
          setTextLineItemCustomType: '#/components/schemas/ShoppingListSetTextLineItemCustomTypeAction'
          setTextLineItemDescription: '#/components/schemas/ShoppingListSetTextLineItemDescriptionAction'
      properties:
        action:
          type: "string"
    TextLineItem:
      type: "object"
      properties:
        addedAt:
          type: "string"
          format: "datetime"
        custom:
          $ref: '#/components/schemas/CustomFields'
        description:
          $ref: '#/components/schemas/LocalizedString'
        id:
          type: "string"
        name:
          $ref: '#/components/schemas/LocalizedString'
        quantity:
          type: "integer"
          format: "int32"
    TextLineItemDraft:
      type: "object"
      properties:
        addedAt:
          type: "string"
          format: "datetime"
        custom:
          $ref: '#/components/schemas/CustomFieldsDraft'
        description:
          $ref: '#/components/schemas/LocalizedString'
        name:
          $ref: '#/components/schemas/LocalizedString'
        quantity:
          type: "integer"
          format: "int32"
    ShoppingListAddLineItemAction:
      allOf:
      - $ref: '#/components/schemas/ShoppingListUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          sku:
            type: "string"
          productId:
            type: "string"
          variantId:
            type: "integer"
            format: "int64"
          quantity:
            type: "integer"
            format: "int64"
          addedAt:
            type: "string"
            format: "datetime"
          custom:
            $ref: '#/components/schemas/CustomFieldsDraft'
    ShoppingListAddTextLineItemAction:
      allOf:
      - $ref: '#/components/schemas/ShoppingListUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          name:
            $ref: '#/components/schemas/LocalizedString'
          description:
            $ref: '#/components/schemas/LocalizedString'
          quantity:
            type: "integer"
            format: "int64"
          addedAt:
            type: "string"
            format: "datetime"
          custom:
            $ref: '#/components/schemas/CustomFieldsDraft'
    ShoppingListChangeLineItemQuantityAction:
      allOf:
      - $ref: '#/components/schemas/ShoppingListUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          lineItemId:
            type: "string"
          quantity:
            type: "integer"
            format: "int64"
    ShoppingListChangeLineItemsOrderAction:
      allOf:
      - $ref: '#/components/schemas/ShoppingListUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          lineItemOrder:
            type: "array"
            items:
              type: "string"
    ShoppingListChangeNameAction:
      allOf:
      - $ref: '#/components/schemas/ShoppingListUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          name:
            $ref: '#/components/schemas/LocalizedString'
    ShoppingListChangeTextLineItemNameAction:
      allOf:
      - $ref: '#/components/schemas/ShoppingListUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          textLineItemId:
            type: "string"
          name:
            $ref: '#/components/schemas/LocalizedString'
    ShoppingListChangeTextLineItemQuantityAction:
      allOf:
      - $ref: '#/components/schemas/ShoppingListUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          textLineItemId:
            type: "string"
          quantity:
            type: "integer"
            format: "int64"
    ShoppingListChangeTextLineItemsOrderAction:
      allOf:
      - $ref: '#/components/schemas/ShoppingListUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          textLineItemOrder:
            type: "array"
            items:
              type: "string"
    ShoppingListRemoveLineItemAction:
      allOf:
      - $ref: '#/components/schemas/ShoppingListUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          lineItemId:
            type: "string"
          quantity:
            type: "integer"
            format: "int64"
    ShoppingListRemoveTextLineItemAction:
      allOf:
      - $ref: '#/components/schemas/ShoppingListUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          textLineItemId:
            type: "string"
          quantity:
            type: "integer"
            format: "int64"
    ShoppingListSetAnonymousIdAction:
      allOf:
      - $ref: '#/components/schemas/ShoppingListUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          anonymousId:
            type: "string"
    ShoppingListSetCustomFieldAction:
      allOf:
      - $ref: '#/components/schemas/ShoppingListUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          name:
            type: "string"
          value:
            anyOf:
              - type: "string"
              - type: "object"
              - type: "array"
                items:
                    type: "string"
              - type: "number"
              - type: "integer"
              - type: "boolean"
    ShoppingListSetCustomTypeAction:
      allOf:
      - $ref: '#/components/schemas/ShoppingListUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          type:
            $ref: '#/components/schemas/TypeResourceIdentifier'
          fields:
            $ref: '#/components/schemas/FieldContainer'
    ShoppingListSetCustomerAction:
      allOf:
      - $ref: '#/components/schemas/ShoppingListUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          customer:
            $ref: '#/components/schemas/CustomerResourceIdentifier'
    ShoppingListSetDeleteDaysAfterLastModificationAction:
      allOf:
      - $ref: '#/components/schemas/ShoppingListUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          deleteDaysAfterLastModification:
            type: "integer"
            format: "int64"
    ShoppingListSetDescriptionAction:
      allOf:
      - $ref: '#/components/schemas/ShoppingListUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          description:
            $ref: '#/components/schemas/LocalizedString'
    ShoppingListSetKeyAction:
      allOf:
      - $ref: '#/components/schemas/ShoppingListUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          key:
            type: "string"
    ShoppingListSetLineItemCustomFieldAction:
      allOf:
      - $ref: '#/components/schemas/ShoppingListUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          lineItemId:
            type: "string"
          name:
            type: "string"
          value:
            anyOf:
              - type: "string"
              - type: "object"
              - type: "array"
                items:
                    type: "string"
              - type: "number"
              - type: "integer"
              - type: "boolean"
    ShoppingListSetLineItemCustomTypeAction:
      allOf:
      - $ref: '#/components/schemas/ShoppingListUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          lineItemId:
            type: "string"
          type:
            $ref: '#/components/schemas/TypeResourceIdentifier'
          fields:
            $ref: '#/components/schemas/FieldContainer'
    ShoppingListSetSlugAction:
      allOf:
      - $ref: '#/components/schemas/ShoppingListUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          slug:
            $ref: '#/components/schemas/LocalizedString'
    ShoppingListSetStoreAction:
      allOf:
      - $ref: '#/components/schemas/ShoppingListUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          store:
            $ref: '#/components/schemas/StoreResourceIdentifier'
    ShoppingListSetTextLineItemCustomFieldAction:
      allOf:
      - $ref: '#/components/schemas/ShoppingListUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          textLineItemId:
            type: "string"
          name:
            type: "string"
          value:
            anyOf:
              - type: "string"
              - type: "object"
              - type: "array"
                items:
                    type: "string"
              - type: "number"
              - type: "integer"
              - type: "boolean"
    ShoppingListSetTextLineItemCustomTypeAction:
      allOf:
      - $ref: '#/components/schemas/ShoppingListUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          textLineItemId:
            type: "string"
          type:
            $ref: '#/components/schemas/TypeResourceIdentifier'
          fields:
            $ref: '#/components/schemas/FieldContainer'
    ShoppingListSetTextLineItemDescriptionAction:
      allOf:
      - $ref: '#/components/schemas/ShoppingListUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          textLineItemId:
            type: "string"
          description:
            $ref: '#/components/schemas/LocalizedString'
    State:
      allOf:
      - $ref: '#/components/schemas/BaseResource'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          key:
            type: "string"
          type:
            $ref: '#/components/schemas/StateTypeEnum'
          name:
            $ref: '#/components/schemas/LocalizedString'
          description:
            $ref: '#/components/schemas/LocalizedString'
          initial:
            type: "boolean"
          builtIn:
            type: "boolean"
          roles:
            type: "array"
            items:
              $ref: '#/components/schemas/StateRoleEnum'
          transitions:
            type: "array"
            items:
              $ref: '#/components/schemas/StateReference'
    StateDraft:
      type: "object"
      properties:
        key:
          type: "string"
        type:
          $ref: '#/components/schemas/StateTypeEnum'
        name:
          $ref: '#/components/schemas/LocalizedString'
        description:
          $ref: '#/components/schemas/LocalizedString'
        initial:
          type: "boolean"
        roles:
          type: "array"
          items:
            $ref: '#/components/schemas/StateRoleEnum'
        transitions:
          type: "array"
          items:
            $ref: '#/components/schemas/StateResourceIdentifier'
    StatePagedQueryResponse:
      type: "object"
      properties:
        limit:
          type: "integer"
          format: "int64"
        offset:
          type: "integer"
          format: "int64"
        count:
          type: "integer"
          format: "int64"
        total:
          type: "integer"
          format: "int64"
        results:
          type: "array"
          items:
            $ref: '#/components/schemas/State'
    StateReference:
      allOf:
      - $ref: '#/components/schemas/Reference'
      - type: "object"
        properties:
          typeId:
            $ref: '#/components/schemas/ReferenceTypeId'
          id:
            type: "string"
          obj:
            $ref: '#/components/schemas/State'
    StateResourceIdentifier:
      allOf:
      - $ref: '#/components/schemas/ResourceIdentifier'
      - type: "object"
        properties:
          typeId:
            $ref: '#/components/schemas/ReferenceTypeId'
          id:
            type: "string"
          key:
            type: "string"
    StateRoleEnum:
      type: "string"
      enum:
      - ReviewIncludedInStatistics
      - Return
      x-annotation-package: "State"
      x-annotation-docs-uri: "https://docs.commercetools.com/api/projects/states#stateroleenum"
      x-annotation-enumDescriptions:
        ReviewIncludedInStatistics: "If a [Review's](ctp:api:type:Review) `state` has this
         role its `rating` is taken into account for [ReviewRatingStatistics](ctp:api:type:ReviewRatingStatistics).
         This role only applies for the `ReviewState` [StateTypeEnum](ctp:api:type:StateTypeEnum)."
        Return: "Used by [Orders](ctp:api:type:Order) in the update action [transitionLineItemState](ctp:api:type:OrderTransitionLineItemStateAction).
         This role only applies for the `LineItemState` [StateTypeEnum](ctp:api:type:StateTypeEnum)."
    StateTypeEnum:
      type: "string"
      enum:
      - OrderState
      - LineItemState
      - ProductState
      - ReviewState
      - PaymentState
      x-annotation-package: "State"
      x-annotation-enumDescriptions:
        OrderState: "Used by [Orders](ctp:api:type:Order)."
        LineItemState: "Used by [LineItems](ctp:api:type:LineItem) and [CustomLineItems](ctp:api:type:CustomLineItem)
         in [Carts](ctp:api:type:Cart) and [Orders](ctp:api:type:Order)."
        ProductState: "Used by [Products](ctp:api:type:Product)."
        ReviewState: "Used by [Reviews](ctp:api:type:Review)."
        PaymentState: "Used by [PaymentStatus](ctp:api:type:PaymentStatus) in [Payments](ctp:api:type:Payment)."
    StateUpdate:
      type: "object"
      properties:
        version:
          type: "integer"
          format: "int64"
        actions:
          type: "array"
          items:
            $ref: '#/components/schemas/StateUpdateAction'
    StateUpdateAction:
      type: "object"
      discriminator:
        propertyName: action
        mapping:
          addRoles: '#/components/schemas/StateAddRolesAction'
          changeInitial: '#/components/schemas/StateChangeInitialAction'
          changeKey: '#/components/schemas/StateChangeKeyAction'
          changeType: '#/components/schemas/StateChangeTypeAction'
          removeRoles: '#/components/schemas/StateRemoveRolesAction'
          setDescription: '#/components/schemas/StateSetDescriptionAction'
          setName: '#/components/schemas/StateSetNameAction'
          setRoles: '#/components/schemas/StateSetRolesAction'
          setTransitions: '#/components/schemas/StateSetTransitionsAction'
      properties:
        action:
          type: "string"
    StateAddRolesAction:
      allOf:
      - $ref: '#/components/schemas/StateUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          roles:
            type: "array"
            items:
              $ref: '#/components/schemas/StateRoleEnum'
    StateChangeInitialAction:
      allOf:
      - $ref: '#/components/schemas/StateUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          initial:
            type: "boolean"
    StateChangeKeyAction:
      allOf:
      - $ref: '#/components/schemas/StateUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          key:
            type: "string"
    StateChangeTypeAction:
      allOf:
      - $ref: '#/components/schemas/StateUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          type:
            $ref: '#/components/schemas/StateTypeEnum'
    StateRemoveRolesAction:
      allOf:
      - $ref: '#/components/schemas/StateUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          roles:
            type: "array"
            items:
              $ref: '#/components/schemas/StateRoleEnum'
    StateSetDescriptionAction:
      allOf:
      - $ref: '#/components/schemas/StateUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          description:
            $ref: '#/components/schemas/LocalizedString'
    StateSetNameAction:
      allOf:
      - $ref: '#/components/schemas/StateUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          name:
            $ref: '#/components/schemas/LocalizedString'
    StateSetRolesAction:
      allOf:
      - $ref: '#/components/schemas/StateUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          roles:
            type: "array"
            items:
              $ref: '#/components/schemas/StateRoleEnum'
    StateSetTransitionsAction:
      allOf:
      - $ref: '#/components/schemas/StateUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          transitions:
            type: "array"
            items:
              $ref: '#/components/schemas/StateResourceIdentifier'
    ProductSelectionSetting:
      type: "object"
      properties:
        productSelection:
          $ref: '#/components/schemas/ProductSelectionReference'
        active:
          type: "boolean"
    ProductSelectionSettingDraft:
      type: "object"
      properties:
        productSelection:
          $ref: '#/components/schemas/ProductSelectionResourceIdentifier'
        active:
          type: "boolean"
    Store:
      allOf:
      - $ref: '#/components/schemas/BaseResource'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          key:
            type: "string"
          name:
            $ref: '#/components/schemas/LocalizedString'
          languages:
            type: "array"
            items:
              type: "string"
          distributionChannels:
            type: "array"
            items:
              $ref: '#/components/schemas/ChannelReference'
          supplyChannels:
            type: "array"
            items:
              $ref: '#/components/schemas/ChannelReference'
          productSelections:
            type: "array"
            items:
              $ref: '#/components/schemas/ProductSelectionSetting'
          custom:
            $ref: '#/components/schemas/CustomFields'
    StoreDraft:
      type: "object"
      properties:
        key:
          type: "string"
        name:
          $ref: '#/components/schemas/LocalizedString'
        languages:
          type: "array"
          items:
            type: "string"
        distributionChannels:
          type: "array"
          items:
            $ref: '#/components/schemas/ChannelResourceIdentifier'
        supplyChannels:
          type: "array"
          items:
            $ref: '#/components/schemas/ChannelResourceIdentifier'
        productSelections:
          type: "array"
          items:
            $ref: '#/components/schemas/ProductSelectionSettingDraft'
        custom:
          $ref: '#/components/schemas/CustomFieldsDraft'
    StoreKeyReference:
      allOf:
      - $ref: '#/components/schemas/KeyReference'
      - type: "object"
        properties:
          typeId:
            $ref: '#/components/schemas/ReferenceTypeId'
          key:
            type: "string"
    StorePagedQueryResponse:
      type: "object"
      properties:
        limit:
          type: "integer"
          format: "int64"
        count:
          type: "integer"
          format: "int64"
        total:
          type: "integer"
          format: "int64"
        offset:
          type: "integer"
          format: "int64"
        results:
          type: "array"
          items:
            $ref: '#/components/schemas/Store'
    StoreReference:
      allOf:
      - $ref: '#/components/schemas/Reference'
      - type: "object"
        properties:
          typeId:
            $ref: '#/components/schemas/ReferenceTypeId'
          id:
            type: "string"
          obj:
            $ref: '#/components/schemas/Store'
    StoreResourceIdentifier:
      allOf:
      - $ref: '#/components/schemas/ResourceIdentifier'
      - type: "object"
        properties:
          typeId:
            $ref: '#/components/schemas/ReferenceTypeId'
          id:
            type: "string"
          key:
            type: "string"
    StoreUpdate:
      type: "object"
      properties:
        version:
          type: "integer"
          format: "int64"
        actions:
          type: "array"
          items:
            $ref: '#/components/schemas/StoreUpdateAction'
    StoreUpdateAction:
      type: "object"
      discriminator:
        propertyName: action
        mapping:
          addDistributionChannel: '#/components/schemas/StoreAddDistributionChannelAction'
          addProductSelection: '#/components/schemas/StoreAddProductSelectionAction'
          addSupplyChannel: '#/components/schemas/StoreAddSupplyChannelAction'
          changeProductSelectionActive: '#/components/schemas/StoreChangeProductSelectionAction'
          removeDistributionChannel: '#/components/schemas/StoreRemoveDistributionChannelAction'
          removeProductSelection: '#/components/schemas/StoreRemoveProductSelectionAction'
          removeSupplyChannel: '#/components/schemas/StoreRemoveSupplyChannelAction'
          setCustomField: '#/components/schemas/StoreSetCustomFieldAction'
          setCustomType: '#/components/schemas/StoreSetCustomTypeAction'
          setDistributionChannels: '#/components/schemas/StoreSetDistributionChannelsAction'
          setLanguages: '#/components/schemas/StoreSetLanguagesAction'
          setName: '#/components/schemas/StoreSetNameAction'
          setProductSelections: '#/components/schemas/StoreSetProductSelectionsAction'
          setSupplyChannels: '#/components/schemas/StoreSetSupplyChannelsAction'
      properties:
        action:
          type: "string"
    StoreAddDistributionChannelAction:
      allOf:
      - $ref: '#/components/schemas/StoreUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          distributionChannel:
            $ref: '#/components/schemas/ChannelResourceIdentifier'
    StoreAddProductSelectionAction:
      allOf:
      - $ref: '#/components/schemas/StoreUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          productSelection:
            $ref: '#/components/schemas/ProductSelectionSettingDraft'
    StoreAddSupplyChannelAction:
      allOf:
      - $ref: '#/components/schemas/StoreUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          supplyChannel:
            $ref: '#/components/schemas/ChannelResourceIdentifier'
    StoreChangeProductSelectionAction:
      allOf:
      - $ref: '#/components/schemas/StoreUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          productSelection:
            $ref: '#/components/schemas/ResourceIdentifier'
          active:
            type: "boolean"
    StoreRemoveDistributionChannelAction:
      allOf:
      - $ref: '#/components/schemas/StoreUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          distributionChannel:
            $ref: '#/components/schemas/ChannelResourceIdentifier'
    StoreRemoveProductSelectionAction:
      allOf:
      - $ref: '#/components/schemas/StoreUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          productSelection:
            $ref: '#/components/schemas/ResourceIdentifier'
    StoreRemoveSupplyChannelAction:
      allOf:
      - $ref: '#/components/schemas/StoreUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          supplyChannel:
            $ref: '#/components/schemas/ChannelResourceIdentifier'
    StoreSetCustomFieldAction:
      allOf:
      - $ref: '#/components/schemas/StoreUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          name:
            type: "string"
          value:
            anyOf:
              - type: "string"
              - type: "object"
              - type: "array"
                items:
                    type: "string"
              - type: "number"
              - type: "integer"
              - type: "boolean"
    StoreSetCustomTypeAction:
      allOf:
      - $ref: '#/components/schemas/StoreUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          type:
            $ref: '#/components/schemas/TypeResourceIdentifier'
          fields:
            type: "string"
            additionalProperties: true
    StoreSetDistributionChannelsAction:
      allOf:
      - $ref: '#/components/schemas/StoreUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          distributionChannels:
            type: "array"
            items:
              $ref: '#/components/schemas/ChannelResourceIdentifier'
    StoreSetLanguagesAction:
      allOf:
      - $ref: '#/components/schemas/StoreUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          languages:
            type: "array"
            items:
              type: "string"
    StoreSetNameAction:
      allOf:
      - $ref: '#/components/schemas/StoreUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          name:
            $ref: '#/components/schemas/LocalizedString'
    StoreSetProductSelectionsAction:
      allOf:
      - $ref: '#/components/schemas/StoreUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          productSelections:
            type: "array"
            items:
              $ref: '#/components/schemas/ProductSelectionSettingDraft'
    StoreSetSupplyChannelsAction:
      allOf:
      - $ref: '#/components/schemas/StoreUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          supplyChannels:
            type: "array"
            items:
              $ref: '#/components/schemas/ChannelResourceIdentifier'
    AzureEventGridDestination:
      allOf:
      - $ref: '#/components/schemas/Destination'
      - type: "object"
        properties:
          type:
            type: "string"
          uri:
            type: "string"
          accessKey:
            type: "string"
    AzureServiceBusDestination:
      allOf:
      - $ref: '#/components/schemas/Destination'
      - type: "object"
        properties:
          type:
            type: "string"
          connectionString:
            type: "string"
    ChangeSubscription:
      type: "object"
      properties:
        resourceTypeId:
          type: "string"
    DeliveryCloudEventsFormat:
      allOf:
      - $ref: '#/components/schemas/DeliveryFormat'
      - type: "object"
        properties:
          type:
            type: "string"
          cloudEventsVersion:
            type: "string"
    DeliveryFormat:
      type: "object"
      discriminator:
        propertyName: type
        mapping:
          CloudEvents: '#/components/schemas/DeliveryCloudEventsFormat'
          Platform: '#/components/schemas/DeliveryPlatformFormat'
      properties:
        type:
          type: "string"
    DeliveryPlatformFormat:
      allOf:
      - $ref: '#/components/schemas/DeliveryFormat'
      - type: "object"
        properties:
          type:
            type: "string"
    Destination:
      type: "object"
      discriminator:
        propertyName: type
        mapping:
          EventGrid: '#/components/schemas/AzureEventGridDestination'
          AzureServiceBus: '#/components/schemas/AzureServiceBusDestination'
          EventBridge: '#/components/schemas/EventBridgeDestination'
          GoogleCloudPubSub: '#/components/schemas/GoogleCloudPubSubDestination'
          IronMQ: '#/components/schemas/IronMqDestination'
          SNS: '#/components/schemas/SnsDestination'
          SQS: '#/components/schemas/SqsDestination'
      properties:
        type:
          type: "string"
    EventBridgeDestination:
      allOf:
      - $ref: '#/components/schemas/Destination'
      - type: "object"
        properties:
          type:
            type: "string"
          region:
            type: "string"
          accountId:
            type: "string"
    GoogleCloudPubSubDestination:
      allOf:
      - $ref: '#/components/schemas/Destination'
      - type: "object"
        properties:
          type:
            type: "string"
          projectId:
            type: "string"
          topic:
            type: "string"
    IronMqDestination:
      allOf:
      - $ref: '#/components/schemas/Destination'
      - type: "object"
        properties:
          type:
            type: "string"
          uri:
            type: "string"
    MessageDelivery:
      allOf:
      - $ref: '#/components/schemas/SubscriptionDelivery'
      - type: "object"
        properties:
          projectKey:
            type: "string"
          notificationType:
            type: "string"
          resource:
            $ref: '#/components/schemas/Reference'
          resourceUserProvidedIdentifiers:
            $ref: '#/components/schemas/UserProvidedIdentifiers'
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          sequenceNumber:
            type: "integer"
            format: "int64"
          resourceVersion:
            type: "integer"
            format: "int64"
          payloadNotIncluded:
            $ref: '#/components/schemas/PayloadNotIncluded'
    MessageSubscription:
      type: "object"
      properties:
        resourceTypeId:
          type: "string"
        types:
          type: "array"
          items:
            type: "string"
    PayloadNotIncluded:
      type: "object"
      properties:
        reason:
          type: "string"
        payloadType:
          type: "string"
    ResourceCreatedDelivery:
      allOf:
      - $ref: '#/components/schemas/SubscriptionDelivery'
      - type: "object"
        properties:
          projectKey:
            type: "string"
          notificationType:
            type: "string"
          resource:
            $ref: '#/components/schemas/Reference'
          resourceUserProvidedIdentifiers:
            $ref: '#/components/schemas/UserProvidedIdentifiers'
          version:
            type: "integer"
            format: "int64"
          modifiedAt:
            type: "string"
            format: "datetime"
    ResourceDeletedDelivery:
      allOf:
      - $ref: '#/components/schemas/SubscriptionDelivery'
      - type: "object"
        properties:
          projectKey:
            type: "string"
          notificationType:
            type: "string"
          resource:
            $ref: '#/components/schemas/Reference'
          resourceUserProvidedIdentifiers:
            $ref: '#/components/schemas/UserProvidedIdentifiers'
          version:
            type: "integer"
            format: "int64"
          modifiedAt:
            type: "string"
            format: "datetime"
          dataErasure:
            type: "boolean"
    ResourceUpdatedDelivery:
      allOf:
      - $ref: '#/components/schemas/SubscriptionDelivery'
      - type: "object"
        properties:
          projectKey:
            type: "string"
          notificationType:
            type: "string"
          resource:
            $ref: '#/components/schemas/Reference'
          resourceUserProvidedIdentifiers:
            $ref: '#/components/schemas/UserProvidedIdentifiers'
          version:
            type: "integer"
            format: "int64"
          oldVersion:
            type: "integer"
            format: "int64"
          modifiedAt:
            type: "string"
            format: "datetime"
    SnsDestination:
      allOf:
      - $ref: '#/components/schemas/Destination'
      - type: "object"
        properties:
          type:
            type: "string"
          accessKey:
            type: "string"
          accessSecret:
            type: "string"
          topicArn:
            type: "string"
    SqsDestination:
      allOf:
      - $ref: '#/components/schemas/Destination'
      - type: "object"
        properties:
          type:
            type: "string"
          accessKey:
            type: "string"
          accessSecret:
            type: "string"
          queueUrl:
            type: "string"
          region:
            type: "string"
    Subscription:
      allOf:
      - $ref: '#/components/schemas/BaseResource'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          changes:
            type: "array"
            items:
              $ref: '#/components/schemas/ChangeSubscription'
          destination:
            $ref: '#/components/schemas/Destination'
          key:
            type: "string"
          messages:
            type: "array"
            items:
              $ref: '#/components/schemas/MessageSubscription'
          format:
            $ref: '#/components/schemas/DeliveryFormat'
          status:
            $ref: '#/components/schemas/SubscriptionHealthStatus'
    SubscriptionDelivery:
      type: "object"
      discriminator:
        propertyName: notificationType
        mapping:
          Message: '#/components/schemas/MessageDelivery'
          ResourceCreated: '#/components/schemas/ResourceCreatedDelivery'
          ResourceDeleted: '#/components/schemas/ResourceDeletedDelivery'
          ResourceUpdated: '#/components/schemas/ResourceUpdatedDelivery'
      properties:
        projectKey:
          type: "string"
        notificationType:
          type: "string"
        resource:
          $ref: '#/components/schemas/Reference'
        resourceUserProvidedIdentifiers:
          $ref: '#/components/schemas/UserProvidedIdentifiers'
    SubscriptionDraft:
      type: "object"
      properties:
        changes:
          type: "array"
          items:
            $ref: '#/components/schemas/ChangeSubscription'
        destination:
          $ref: '#/components/schemas/Destination'
        key:
          type: "string"
        messages:
          type: "array"
          items:
            $ref: '#/components/schemas/MessageSubscription'
        format:
          $ref: '#/components/schemas/DeliveryFormat'
    SubscriptionHealthStatus:
      type: "string"
      enum:
      - Healthy
      - ConfigurationError
      - ConfigurationErrorDeliveryStopped
      - TemporaryError
      x-annotation-package: "Subscription"
      x-annotation-docs-uri: "https://docs.commercetools.com/http-api-projects-subscriptions.html#subscription-health-status"
    SubscriptionPagedQueryResponse:
      type: "object"
      properties:
        limit:
          type: "integer"
          format: "int64"
        count:
          type: "integer"
          format: "int64"
        total:
          type: "integer"
          format: "int64"
        offset:
          type: "integer"
          format: "int64"
        results:
          type: "array"
          items:
            $ref: '#/components/schemas/Subscription'
    SubscriptionUpdate:
      type: "object"
      properties:
        version:
          type: "integer"
          format: "int64"
        actions:
          type: "array"
          items:
            $ref: '#/components/schemas/SubscriptionUpdateAction'
    SubscriptionUpdateAction:
      type: "object"
      discriminator:
        propertyName: action
        mapping:
          changeDestination: '#/components/schemas/SubscriptionChangeDestinationAction'
          setChanges: '#/components/schemas/SubscriptionSetChangesAction'
          setKey: '#/components/schemas/SubscriptionSetKeyAction'
          setMessages: '#/components/schemas/SubscriptionSetMessagesAction'
      properties:
        action:
          type: "string"
    SubscriptionChangeDestinationAction:
      allOf:
      - $ref: '#/components/schemas/SubscriptionUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          destination:
            $ref: '#/components/schemas/Destination'
    SubscriptionSetChangesAction:
      allOf:
      - $ref: '#/components/schemas/SubscriptionUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          changes:
            type: "array"
            items:
              $ref: '#/components/schemas/ChangeSubscription'
    SubscriptionSetKeyAction:
      allOf:
      - $ref: '#/components/schemas/SubscriptionUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          key:
            type: "string"
    SubscriptionSetMessagesAction:
      allOf:
      - $ref: '#/components/schemas/SubscriptionUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          messages:
            type: "array"
            items:
              $ref: '#/components/schemas/MessageSubscription'
    SubRate:
      type: "object"
      properties:
        name:
          type: "string"
        amount:
          type: "number"
          format: "double"
    TaxCategory:
      allOf:
      - $ref: '#/components/schemas/BaseResource'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          name:
            type: "string"
          description:
            type: "string"
          rates:
            type: "array"
            items:
              $ref: '#/components/schemas/TaxRate'
          key:
            type: "string"
    TaxCategoryDraft:
      type: "object"
      properties:
        name:
          type: "string"
        description:
          type: "string"
        rates:
          type: "array"
          items:
            $ref: '#/components/schemas/TaxRateDraft'
        key:
          type: "string"
    TaxCategoryPagedQueryResponse:
      type: "object"
      properties:
        limit:
          type: "integer"
          format: "int64"
        offset:
          type: "integer"
          format: "int64"
        count:
          type: "integer"
          format: "int64"
        total:
          type: "integer"
          format: "int64"
        results:
          type: "array"
          items:
            $ref: '#/components/schemas/TaxCategory'
    TaxCategoryReference:
      allOf:
      - $ref: '#/components/schemas/Reference'
      - type: "object"
        properties:
          typeId:
            $ref: '#/components/schemas/ReferenceTypeId'
          id:
            type: "string"
          obj:
            $ref: '#/components/schemas/TaxCategory'
    TaxCategoryResourceIdentifier:
      allOf:
      - $ref: '#/components/schemas/ResourceIdentifier'
      - type: "object"
        properties:
          typeId:
            $ref: '#/components/schemas/ReferenceTypeId'
          id:
            type: "string"
          key:
            type: "string"
    TaxCategoryUpdate:
      type: "object"
      properties:
        version:
          type: "integer"
          format: "int64"
        actions:
          type: "array"
          items:
            $ref: '#/components/schemas/TaxCategoryUpdateAction'
    TaxCategoryUpdateAction:
      type: "object"
      discriminator:
        propertyName: action
        mapping:
          addTaxRate: '#/components/schemas/TaxCategoryAddTaxRateAction'
          changeName: '#/components/schemas/TaxCategoryChangeNameAction'
          removeTaxRate: '#/components/schemas/TaxCategoryRemoveTaxRateAction'
          replaceTaxRate: '#/components/schemas/TaxCategoryReplaceTaxRateAction'
          setDescription: '#/components/schemas/TaxCategorySetDescriptionAction'
          setKey: '#/components/schemas/TaxCategorySetKeyAction'
      properties:
        action:
          type: "string"
    TaxRate:
      type: "object"
      properties:
        id:
          type: "string"
        name:
          type: "string"
        amount:
          type: "number"
          format: "double"
        includedInPrice:
          type: "boolean"
        country:
          $ref: '#/components/schemas/CountryCode'
        state:
          type: "string"
        subRates:
          type: "array"
          items:
            $ref: '#/components/schemas/SubRate'
    TaxRateDraft:
      type: "object"
      properties:
        name:
          type: "string"
        amount:
          type: "number"
          format: "double"
        includedInPrice:
          type: "boolean"
        country:
          $ref: '#/components/schemas/CountryCode'
        state:
          type: "string"
        subRates:
          type: "array"
          items:
            $ref: '#/components/schemas/SubRate'
    TaxCategoryAddTaxRateAction:
      allOf:
      - $ref: '#/components/schemas/TaxCategoryUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          taxRate:
            $ref: '#/components/schemas/TaxRateDraft'
    TaxCategoryChangeNameAction:
      allOf:
      - $ref: '#/components/schemas/TaxCategoryUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          name:
            type: "string"
    TaxCategoryRemoveTaxRateAction:
      allOf:
      - $ref: '#/components/schemas/TaxCategoryUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          taxRateId:
            type: "string"
    TaxCategoryReplaceTaxRateAction:
      allOf:
      - $ref: '#/components/schemas/TaxCategoryUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          taxRateId:
            type: "string"
          taxRate:
            $ref: '#/components/schemas/TaxRateDraft'
    TaxCategorySetDescriptionAction:
      allOf:
      - $ref: '#/components/schemas/TaxCategoryUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          description:
            type: "string"
    TaxCategorySetKeyAction:
      allOf:
      - $ref: '#/components/schemas/TaxCategoryUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          key:
            type: "string"
    CustomFieldBooleanType:
      allOf:
      - $ref: '#/components/schemas/FieldType'
      - type: "object"
        properties:
          name:
            type: "string"
    CustomFieldDateTimeType:
      allOf:
      - $ref: '#/components/schemas/FieldType'
      - type: "object"
        properties:
          name:
            type: "string"
    CustomFieldDateType:
      allOf:
      - $ref: '#/components/schemas/FieldType'
      - type: "object"
        properties:
          name:
            type: "string"
    CustomFieldEnumType:
      allOf:
      - $ref: '#/components/schemas/FieldType'
      - type: "object"
        properties:
          name:
            type: "string"
          values:
            type: "array"
            items:
              $ref: '#/components/schemas/CustomFieldEnumValue'
    CustomFieldEnumValue:
      type: "object"
      properties:
        key:
          type: "string"
        label:
          type: "string"
    CustomFieldLocalizedEnumType:
      allOf:
      - $ref: '#/components/schemas/FieldType'
      - type: "object"
        properties:
          name:
            type: "string"
          values:
            type: "array"
            items:
              $ref: '#/components/schemas/CustomFieldLocalizedEnumValue'
    CustomFieldLocalizedEnumValue:
      type: "object"
      properties:
        key:
          type: "string"
        label:
          $ref: '#/components/schemas/LocalizedString'
    CustomFieldLocalizedStringType:
      allOf:
      - $ref: '#/components/schemas/FieldType'
      - type: "object"
        properties:
          name:
            type: "string"
    CustomFieldMoneyType:
      allOf:
      - $ref: '#/components/schemas/FieldType'
      - type: "object"
        properties:
          name:
            type: "string"
    CustomFieldNumberType:
      allOf:
      - $ref: '#/components/schemas/FieldType'
      - type: "object"
        properties:
          name:
            type: "string"
    CustomFieldReferenceType:
      allOf:
      - $ref: '#/components/schemas/FieldType'
      - type: "object"
        properties:
          name:
            type: "string"
          referenceTypeId:
            $ref: '#/components/schemas/ReferenceTypeId'
    CustomFieldSetType:
      allOf:
      - $ref: '#/components/schemas/FieldType'
      - type: "object"
        properties:
          name:
            type: "string"
          elementType:
            $ref: '#/components/schemas/FieldType'
    CustomFieldStringType:
      allOf:
      - $ref: '#/components/schemas/FieldType'
      - type: "object"
        properties:
          name:
            type: "string"
    CustomFieldTimeType:
      allOf:
      - $ref: '#/components/schemas/FieldType'
      - type: "object"
        properties:
          name:
            type: "string"
    CustomFields:
      type: "object"
      properties:
        type:
          $ref: '#/components/schemas/TypeReference'
        fields:
          $ref: '#/components/schemas/FieldContainer'
    CustomFieldsDraft:
      type: "object"
      properties:
        type:
          $ref: '#/components/schemas/TypeResourceIdentifier'
        fields:
          $ref: '#/components/schemas/FieldContainer'
    FieldContainer:
      type: "object"
      additionalProperties:
        type: "string"
    FieldDefinition:
      type: "object"
      properties:
        type:
          $ref: '#/components/schemas/FieldType'
        name:
          type: "string"
        label:
          $ref: '#/components/schemas/LocalizedString'
        required:
          type: "boolean"
        inputHint:
          $ref: '#/components/schemas/TypeTextInputHint'
    FieldType:
      type: "object"
      discriminator:
        propertyName: name
        mapping:
          Boolean: '#/components/schemas/CustomFieldBooleanType'
          DateTime: '#/components/schemas/CustomFieldDateTimeType'
          Date: '#/components/schemas/CustomFieldDateType'
          Enum: '#/components/schemas/CustomFieldEnumType'
          LocalizedEnum: '#/components/schemas/CustomFieldLocalizedEnumType'
          LocalizedString: '#/components/schemas/CustomFieldLocalizedStringType'
          Money: '#/components/schemas/CustomFieldMoneyType'
          Number: '#/components/schemas/CustomFieldNumberType'
          Reference: '#/components/schemas/CustomFieldReferenceType'
          Set: '#/components/schemas/CustomFieldSetType'
          String: '#/components/schemas/CustomFieldStringType'
          Time: '#/components/schemas/CustomFieldTimeType'
      properties:
        name:
          type: "string"
    ResourceTypeId:
      type: "string"
      enum:
      - address
      - asset
      - category
      - channel
      - customer
      - order
      - order-edit
      - inventory-entry
      - line-item
      - custom-line-item
      - product-price
      - payment
      - payment-interface-interaction
      - review
      - shipping-method
      - shopping-list
      - shopping-list-text-line-item
      - discount-code
      - cart-discount
      - customer-group
      - store
      x-annotation-package: "Type"
    Type:
      allOf:
      - $ref: '#/components/schemas/BaseResource'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          key:
            type: "string"
          name:
            $ref: '#/components/schemas/LocalizedString'
          description:
            $ref: '#/components/schemas/LocalizedString'
          resourceTypeIds:
            type: "array"
            items:
              $ref: '#/components/schemas/ResourceTypeId'
          fieldDefinitions:
            type: "array"
            items:
              $ref: '#/components/schemas/FieldDefinition'
    TypeDraft:
      type: "object"
      properties:
        key:
          type: "string"
        name:
          $ref: '#/components/schemas/LocalizedString'
        description:
          $ref: '#/components/schemas/LocalizedString'
        resourceTypeIds:
          type: "array"
          items:
            $ref: '#/components/schemas/ResourceTypeId'
        fieldDefinitions:
          type: "array"
          items:
            $ref: '#/components/schemas/FieldDefinition'
    TypePagedQueryResponse:
      type: "object"
      properties:
        limit:
          type: "integer"
          format: "int64"
        count:
          type: "integer"
          format: "int64"
        total:
          type: "integer"
          format: "int64"
        offset:
          type: "integer"
          format: "int64"
        results:
          type: "array"
          items:
            $ref: '#/components/schemas/Type'
    TypeReference:
      allOf:
      - $ref: '#/components/schemas/Reference'
      - type: "object"
        properties:
          typeId:
            $ref: '#/components/schemas/ReferenceTypeId'
          id:
            type: "string"
          obj:
            $ref: '#/components/schemas/Type'
    TypeResourceIdentifier:
      allOf:
      - $ref: '#/components/schemas/ResourceIdentifier'
      - type: "object"
        properties:
          typeId:
            $ref: '#/components/schemas/ReferenceTypeId'
          id:
            type: "string"
          key:
            type: "string"
    TypeTextInputHint:
      type: "string"
      enum:
      - SingleLine
      - MultiLine
      x-annotation-package: "Type"
    TypeUpdate:
      type: "object"
      properties:
        version:
          type: "integer"
          format: "int64"
        actions:
          type: "array"
          items:
            $ref: '#/components/schemas/TypeUpdateAction'
    TypeUpdateAction:
      type: "object"
      discriminator:
        propertyName: action
        mapping:
          addEnumValue: '#/components/schemas/TypeAddEnumValueAction'
          addFieldDefinition: '#/components/schemas/TypeAddFieldDefinitionAction'
          addLocalizedEnumValue: '#/components/schemas/TypeAddLocalizedEnumValueAction'
          changeEnumValueLabel: '#/components/schemas/TypeChangeEnumValueLabelAction'
          changeEnumValueOrder: '#/components/schemas/TypeChangeEnumValueOrderAction'
          changeFieldDefinitionOrder: '#/components/schemas/TypeChangeFieldDefinitionOrderAction'
          changeInputHint: '#/components/schemas/TypeChangeInputHintAction'
          changeKey: '#/components/schemas/TypeChangeKeyAction'
          changeLabel: '#/components/schemas/TypeChangeLabelAction'
          changeLocalizedEnumValueLabel: '#/components/schemas/TypeChangeLocalizedEnumValueLabelAction'
          changeLocalizedEnumValueOrder: '#/components/schemas/TypeChangeLocalizedEnumValueOrderAction'
          changeName: '#/components/schemas/TypeChangeNameAction'
          removeFieldDefinition: '#/components/schemas/TypeRemoveFieldDefinitionAction'
          setDescription: '#/components/schemas/TypeSetDescriptionAction'
      properties:
        action:
          type: "string"
    TypeAddEnumValueAction:
      allOf:
      - $ref: '#/components/schemas/TypeUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          fieldName:
            type: "string"
          value:
            $ref: '#/components/schemas/CustomFieldEnumValue'
    TypeAddFieldDefinitionAction:
      allOf:
      - $ref: '#/components/schemas/TypeUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          fieldDefinition:
            $ref: '#/components/schemas/FieldDefinition'
    TypeAddLocalizedEnumValueAction:
      allOf:
      - $ref: '#/components/schemas/TypeUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          fieldName:
            type: "string"
          value:
            $ref: '#/components/schemas/CustomFieldLocalizedEnumValue'
    TypeChangeEnumValueLabelAction:
      allOf:
      - $ref: '#/components/schemas/TypeUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          fieldName:
            type: "string"
          value:
            $ref: '#/components/schemas/CustomFieldEnumValue'
    TypeChangeEnumValueOrderAction:
      allOf:
      - $ref: '#/components/schemas/TypeUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          fieldName:
            type: "string"
          keys:
            type: "array"
            items:
              type: "string"
    TypeChangeFieldDefinitionOrderAction:
      allOf:
      - $ref: '#/components/schemas/TypeUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          fieldNames:
            type: "array"
            items:
              type: "string"
    TypeChangeInputHintAction:
      allOf:
      - $ref: '#/components/schemas/TypeUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          fieldName:
            type: "string"
          inputHint:
            $ref: '#/components/schemas/TypeTextInputHint'
    TypeChangeKeyAction:
      allOf:
      - $ref: '#/components/schemas/TypeUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          key:
            type: "string"
    TypeChangeLabelAction:
      allOf:
      - $ref: '#/components/schemas/TypeUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          fieldName:
            type: "string"
          label:
            $ref: '#/components/schemas/LocalizedString'
    TypeChangeLocalizedEnumValueLabelAction:
      allOf:
      - $ref: '#/components/schemas/TypeUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          fieldName:
            type: "string"
          value:
            $ref: '#/components/schemas/CustomFieldLocalizedEnumValue'
    TypeChangeLocalizedEnumValueOrderAction:
      allOf:
      - $ref: '#/components/schemas/TypeUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          fieldName:
            type: "string"
          keys:
            type: "array"
            items:
              type: "string"
    TypeChangeNameAction:
      allOf:
      - $ref: '#/components/schemas/TypeUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          name:
            $ref: '#/components/schemas/LocalizedString'
    TypeRemoveFieldDefinitionAction:
      allOf:
      - $ref: '#/components/schemas/TypeUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          fieldName:
            type: "string"
    TypeSetDescriptionAction:
      allOf:
      - $ref: '#/components/schemas/TypeUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          description:
            $ref: '#/components/schemas/LocalizedString'
    Location:
      type: "object"
      properties:
        country:
          $ref: '#/components/schemas/CountryCode'
        state:
          type: "string"
    Zone:
      allOf:
      - $ref: '#/components/schemas/BaseResource'
      - type: "object"
        properties:
          id:
            type: "string"
          version:
            type: "integer"
            format: "int64"
          createdAt:
            type: "string"
            format: "datetime"
          lastModifiedAt:
            type: "string"
            format: "datetime"
          lastModifiedBy:
            $ref: '#/components/schemas/LastModifiedBy'
          createdBy:
            $ref: '#/components/schemas/CreatedBy'
          key:
            type: "string"
          name:
            type: "string"
          description:
            type: "string"
          locations:
            type: "array"
            items:
              $ref: '#/components/schemas/Location'
    ZoneDraft:
      type: "object"
      properties:
        key:
          type: "string"
        name:
          type: "string"
        description:
          type: "string"
        locations:
          type: "array"
          items:
            $ref: '#/components/schemas/Location'
    ZonePagedQueryResponse:
      type: "object"
      properties:
        limit:
          type: "integer"
          format: "int64"
        offset:
          type: "integer"
          format: "int64"
        count:
          type: "integer"
          format: "int64"
        total:
          type: "integer"
          format: "int64"
        results:
          type: "array"
          items:
            $ref: '#/components/schemas/Zone'
    ZoneReference:
      allOf:
      - $ref: '#/components/schemas/Reference'
      - type: "object"
        properties:
          typeId:
            $ref: '#/components/schemas/ReferenceTypeId'
          id:
            type: "string"
          obj:
            $ref: '#/components/schemas/Zone'
    ZoneResourceIdentifier:
      allOf:
      - $ref: '#/components/schemas/ResourceIdentifier'
      - type: "object"
        properties:
          typeId:
            $ref: '#/components/schemas/ReferenceTypeId'
          id:
            type: "string"
          key:
            type: "string"
    ZoneUpdate:
      type: "object"
      properties:
        version:
          type: "integer"
          format: "int64"
        actions:
          type: "array"
          items:
            $ref: '#/components/schemas/ZoneUpdateAction'
    ZoneUpdateAction:
      type: "object"
      discriminator:
        propertyName: action
        mapping:
          addLocation: '#/components/schemas/ZoneAddLocationAction'
          changeName: '#/components/schemas/ZoneChangeNameAction'
          removeLocation: '#/components/schemas/ZoneRemoveLocationAction'
          setDescription: '#/components/schemas/ZoneSetDescriptionAction'
          setKey: '#/components/schemas/ZoneSetKeyAction'
      properties:
        action:
          type: "string"
    ZoneAddLocationAction:
      allOf:
      - $ref: '#/components/schemas/ZoneUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          location:
            $ref: '#/components/schemas/Location'
    ZoneChangeNameAction:
      allOf:
      - $ref: '#/components/schemas/ZoneUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          name:
            type: "string"
    ZoneRemoveLocationAction:
      allOf:
      - $ref: '#/components/schemas/ZoneUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          location:
            $ref: '#/components/schemas/Location'
    ZoneSetDescriptionAction:
      allOf:
      - $ref: '#/components/schemas/ZoneUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          description:
            type: "string"
    ZoneSetKeyAction:
      allOf:
      - $ref: '#/components/schemas/ZoneUpdateAction'
      - type: "object"
        properties:
          action:
            type: "string"
          key:
            type: "string"
    URLEncodedPayload:
       type: "string"
       additionalProperties: true

