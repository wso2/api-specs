openapi: 3.0.3
info:
  x-ballerina-display:
      label: journey.io
      iconPath: "icon.png"
  title: journy.io API docs
  description: "This is a generated connector for [Journey.io API v1.0.0](https://www.journey.io/) OpenAPI specification.

  The journy.io API is organized around REST. Our API has predictable resource-oriented URLs, returns JSON-encoded responses, and uses standard HTTP response codes, authentication, and verbs."
  x-ballerina-init-description: >
    The connector initialization requires setting the API credentials.
  
    Create a [Journy.io account](https://www.journey.io) and obtain the API Key following [this guide](https://developers.journy.io/#section/Authentication).
  version: 1.0.0
  x-logo:
    url: ./developers.png
    altText: Journy.io
  termsOfService: 'https://www.journy.io/terms-of-use/'
  contact:
    name: Support
    url: 'https://help.journy.io'
    email: hi@journy.io
externalDocs:
  description: API Documentation
  url: 'https://developers.journy.io'
servers:
  - description: Production
    url: 'https://api.journy.io'
tags:
  - name: Users
    description: Endpoints for creating or updating users
  - name: Accounts
    description: Endpoints for creating or updating accounts
  - name: Events
    description: Endpoints for adding events
  - name: Websites
    description: Endpoints for managing websites
  - name: Validation
    description: Endpoints for validating API keys
security:
  - api_key: []

paths:
  /link:
    post:
      description: Endpoint used to link web activity to a user.
      summary: Link web activity to user
      operationId: link
      x-key-permissions:
        - TrackData
      x-codeSamples:
        - lang: JavaScript
          source: |-
            // https://github.com/journy-io/js-sdk

            import { Client } from "@journyio/sdk";

            const client = Client.withDefaults('your-api-key');

            await client.link({
              deviceId: request.cookies["__journey"],

              userId: request.user.id,
              // or
              email: request.user.email,
            });
        - lang: PHP
          source: |-
            <?php

            // https://github.com/journy-io/php-sdk

            use JournyIO\SDK\Client;

            $client = Client::withDefaults("your-api-key");

            $client->link([
                "deviceId" => "deviceId",

                "userId" => "userId",
                // or
                "email" => "email",
            ]);
        - lang: Python
          source: |-
            # https://github.com/journy-io/python-sdk

            from journyio.client import Client, Config
            from journyio.user_identified import UserIdentified

            config = Config("api-key-secret")
            http_client = HttpClientRequests()
            client = Client(http_client, config)

            user = UserIdentified("userId", "name@domain.tld")
            # or
            user = UserIdentified.by_user_id("userId")
            # or
            user = UserIdentified.by_email("name@domain.tld")

            client.link(user, "deviceId")
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Link web activity to user
              required:
                - deviceId
                - identification
              properties:
                deviceId:
                  type: string
                  format: non-empty-string
                identification:
                  type: object
                  description: 'User identification requires a userId, email or both'
                  properties:
                    email:
                      type: string
                      format: email
                      description: Email address of the user
                    userId:
                      type: string
                      format: user-id
                      description: Unique identifier for the user in your database
                  minProperties: 1
      responses:
        '201':
          description: Object was created
          headers:
            X-RateLimit-Limit:
              schema:
                type: integer
              description: Request limit per minute.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests left for the time window.
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    description: >-
                      The basic response containing the unique ID of the request
                      and the response status
                    required:
                      - meta
                    properties:
                      meta:
                        type: object
                        required:
                          - requestId
                          - status
                        properties:
                          requestId:
                            type: string
                          status:
                            type: number
                  - type: object
                    description: The object was created
                    required:
                      - message
                    properties:
                      message:
                        type: string
        '400':
          description: 'Bad request, some fields or parameters are incorrect'
          headers:
            X-RateLimit-Limit:
              schema:
                type: integer
              description: Request limit per minute.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests left for the time window.
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - type: object
                        description: >-
                          The basic response containing the unique ID of the
                          request and the response status
                        required:
                          - meta
                        properties:
                          meta:
                            type: object
                            required:
                              - requestId
                              - status
                            properties:
                              requestId:
                                type: string
                              status:
                                type: number
                      - type: object
                        description: The error message should specify what cause the error
                        required:
                          - message
                        properties:
                          message:
                            type: string
                  - type: object
                    description: Specify the fields and/ or parameters that had errors
                    required:
                      - errors
                    properties:
                      errors:
                        type: object
                        description: >-
                          Map that sums up all received values that seemed
                          incorrect
                        properties:
                          fields:
                            description: All input fields that seemed incorrect
                            type: object
                            additionalProperties:
                              type: string
                          parameters:
                            type: object
                            description: >-
                              All query-, header- and path- parameters that
                              seemed incorrect
                            properties:
                              query:
                                type: object
                                additionalProperties:
                                  type: string
                              header:
                                type: object
                                additionalProperties:
                                  type: string
                              path:
                                type: object
                                additionalProperties:
                                  type: string
        '401':
          description: >-
            No API Key was provided or the key is not authorised to perform the
            action
          headers:
            X-RateLimit-Limit:
              schema:
                type: integer
              description: Request limit per minute.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests left for the time window.
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    description: >-
                      The basic response containing the unique ID of the request
                      and the response status
                    required:
                      - meta
                    properties:
                      meta:
                        type: object
                        required:
                          - requestId
                          - status
                        properties:
                          requestId:
                            type: string
                          status:
                            type: number
                  - type: object
                    description: The error message should specify what cause the error
                    required:
                      - message
                    properties:
                      message:
                        type: string
        '403':
          description: The API Key provided is currently not enabled
          headers:
            X-RateLimit-Limit:
              schema:
                type: integer
              description: Request limit per minute.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests left for the time window.
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    description: >-
                      The basic response containing the unique ID of the request
                      and the response status
                    required:
                      - meta
                    properties:
                      meta:
                        type: object
                        required:
                          - requestId
                          - status
                        properties:
                          requestId:
                            type: string
                          status:
                            type: number
                  - type: object
                    description: The error message should specify what cause the error
                    required:
                      - message
                    properties:
                      message:
                        type: string
        '429':
          description: Too many API requests were send
          headers:
            X-RateLimit-Limit:
              schema:
                type: integer
              description: Request limit per minute.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests left for the time window.
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    description: >-
                      The basic response containing the unique ID of the request
                      and the response status
                    required:
                      - meta
                    properties:
                      meta:
                        type: object
                        required:
                          - requestId
                          - status
                        properties:
                          requestId:
                            type: string
                          status:
                            type: number
                  - type: object
                    description: The error message should specify what cause the error
                    required:
                      - message
                    properties:
                      message:
                        type: string
        '500':
          description: An unexpected error occurred
          headers:
            X-RateLimit-Limit:
              schema:
                type: integer
              description: Request limit per minute.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests left for the time window.
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    description: >-
                      The basic response containing the unique ID of the request
                      and the response status
                    required:
                      - meta
                    properties:
                      meta:
                        type: object
                        required:
                          - requestId
                          - status
                        properties:
                          requestId:
                            type: string
                          status:
                            type: number
                  - type: object
                    description: The error message should specify what cause the error
                    required:
                      - message
                    properties:
                      message:
                        type: string
  /events:
    post:
      description: Endpoint used to push an event for a user or an account.
      summary: Push event
      operationId: trackJourneyEvent
      x-key-permissions:
        - TrackData
      x-codeSamples:
        - lang: JavaScript
          source: >-
            // https://github.com/journy-io/js-sdk


            import { Client, Event, UserIdentified, AccountIdentified } from
            "@journyio/sdk";


            const client = Client.withDefaults('your-api-key');


            event = Event.forUser("login", UserIdentified.byUserId("userId"));


            event = Event.forUser("some_historic_event",
            UserIdentified.byUserId("userId"))
              .happenedAt(new Date(...))
            ;


            event = Event.forAccount("reached_monthly_volume",
            AccountIdentified.byAccountId("accountId"))
              .withMetadata({
                "number": 1313,
                "string": "string",
                "boolean": true,
              })
            ;


            event = Event.forUserInAccount(
              "updated_settings",
              UserIdentified.byUserId("userId"),
              AccountIdentified.byAccountId("accountId")
            );


            await client.addEvent(event);
        - lang: PHP
          source: >-
            <?php


            // https://github.com/journy-io/php-sdk


            use JournyIO\SDK\Client;

            use JournyIO\SDK\Event;

            use JournyIO\SDK\UserIdentified;

            use JournyIO\SDK\AccountIdentified;


            $client = Client::withDefaults("your-api-key");


            $event = Event::forUser("login",
            UserIdentified::byUserId("userId"));


            $event = Event::forUser("some_historic_event",
            UserIdentified::byUserId("userId"))
                ->happenedAt(new \DateTimeImmutable("now"))
            ;


            $event = Event::forAccount("reached_monthly_volume",
            AccountIdentified::byAccountId("accountId"))
                ->withMetadata([
                    "number" => 13313,
                    "string" => "string",
                    "boolean" => true,
                ])
            ;


            $event = Event::forUserInAccount(
                "updated_settings",
                UserIdentified::byUserId("userId"),
                AccountIdentified::byAccountId("accountId")
            );


            $client->addEvent($event);
        - lang: Python
          source: |-
            # https://github.com/journy-io/python-sdk

            from journyio.client import Client, Config
            from datetime import datetime
            from journyio.events import Event, Metadata
            from journyio.account_identified import AccountIdentified
            from journyio.user_identified import UserIdentified

            config = Config("api-key-secret")
            http_client = HttpClientRequests()
            client = Client(http_client, config)

            account = AccountIdentified("accountId", "www.domain.tld")
            user = UserIdentified("userId", "name@domain.tld")

            metadata = Metadata()
            metadata["number"] = 454554
            metadata["boolean"] = False
            metadata["string"] = "string"

            event = Event()
                .for_user_in_account("settings_updated", user, account)
                .happened_at(datetime.now())
                .with_metadata(metadata)

            client.add_event(event)
      tags:
        - Events
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Event for a user or an account
              required:
                - identification
                - name
              properties:
                identification:
                  type: object
                  description: 'Event identification requires a user, account or both'
                  properties:
                    account:
                      type: object
                      description: >-
                        Account identification requires an accountId, domain or
                        both
                      properties:
                        domain:
                          type: string
                          format: top-level-domain
                          description: >-
                            The domain associated with the account (e.g.
                            acme-inc.com)
                        accountId:
                          type: string
                          format: account-id
                          description: Unique identifier for the account in your database
                      minProperties: 1
                    user:
                      type: object
                      description: 'User identification requires a userId, email or both'
                      properties:
                        email:
                          type: string
                          format: email
                          description: Email address of the user
                        userId:
                          type: string
                          format: user-id
                          description: Unique identifier for the user in your database
                      minProperties: 1
                  minProperties: 1
                name:
                  type: string
                  format: event-name
                metadata:
                  type: object
                  description: >-
                    Event metadata, possible values are strings, booleans,
                    numbers and datetimes (ISO 8601)
                  additionalProperties:
                    oneOf:
                      - type: string
                      - type: boolean
                      - type: number
                      - type: string
                        format: datetime
                triggeredAt:
                  description: If left blank this defaults to the current datetime
                  type: string
                  format: datetime
      responses:
        '201':
          description: Object was created
          headers:
            X-RateLimit-Limit:
              schema:
                type: integer
              description: Request limit per minute.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests left for the time window.
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    description: >-
                      The basic response containing the unique ID of the request
                      and the response status
                    required:
                      - meta
                    properties:
                      meta:
                        type: object
                        required:
                          - requestId
                          - status
                        properties:
                          requestId:
                            type: string
                          status:
                            type: number
                  - type: object
                    description: The object was created
                    required:
                      - message
                    properties:
                      message:
                        type: string
        '400':
          description: 'Bad request, some fields or parameters are incorrect'
          headers:
            X-RateLimit-Limit:
              schema:
                type: integer
              description: Request limit per minute.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests left for the time window.
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - type: object
                        description: >-
                          The basic response containing the unique ID of the
                          request and the response status
                        required:
                          - meta
                        properties:
                          meta:
                            type: object
                            required:
                              - requestId
                              - status
                            properties:
                              requestId:
                                type: string
                              status:
                                type: number
                      - type: object
                        description: The error message should specify what cause the error
                        required:
                          - message
                        properties:
                          message:
                            type: string
                  - type: object
                    description: Specify the fields and/ or parameters that had errors
                    required:
                      - errors
                    properties:
                      errors:
                        type: object
                        description: >-
                          Map that sums up all received values that seemed
                          incorrect
                        properties:
                          fields:
                            description: All input fields that seemed incorrect
                            type: object
                            additionalProperties:
                              type: string
                          parameters:
                            type: object
                            description: >-
                              All query-, header- and path- parameters that
                              seemed incorrect
                            properties:
                              query:
                                type: object
                                additionalProperties:
                                  type: string
                              header:
                                type: object
                                additionalProperties:
                                  type: string
                              path:
                                type: object
                                additionalProperties:
                                  type: string
        '401':
          description: >-
            No API Key was provided or the key is not authorised to perform the
            action
          headers:
            X-RateLimit-Limit:
              schema:
                type: integer
              description: Request limit per minute.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests left for the time window.
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    description: >-
                      The basic response containing the unique ID of the request
                      and the response status
                    required:
                      - meta
                    properties:
                      meta:
                        type: object
                        required:
                          - requestId
                          - status
                        properties:
                          requestId:
                            type: string
                          status:
                            type: number
                  - type: object
                    description: The error message should specify what cause the error
                    required:
                      - message
                    properties:
                      message:
                        type: string
        '403':
          description: The API Key provided is currently not enabled
          headers:
            X-RateLimit-Limit:
              schema:
                type: integer
              description: Request limit per minute.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests left for the time window.
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    description: >-
                      The basic response containing the unique ID of the request
                      and the response status
                    required:
                      - meta
                    properties:
                      meta:
                        type: object
                        required:
                          - requestId
                          - status
                        properties:
                          requestId:
                            type: string
                          status:
                            type: number
                  - type: object
                    description: The error message should specify what cause the error
                    required:
                      - message
                    properties:
                      message:
                        type: string
        '429':
          description: Too many API requests were send
          headers:
            X-RateLimit-Limit:
              schema:
                type: integer
              description: Request limit per minute.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests left for the time window.
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    description: >-
                      The basic response containing the unique ID of the request
                      and the response status
                    required:
                      - meta
                    properties:
                      meta:
                        type: object
                        required:
                          - requestId
                          - status
                        properties:
                          requestId:
                            type: string
                          status:
                            type: number
                  - type: object
                    description: The error message should specify what cause the error
                    required:
                      - message
                    properties:
                      message:
                        type: string
        '500':
          description: An unexpected error occurred
          headers:
            X-RateLimit-Limit:
              schema:
                type: integer
              description: Request limit per minute.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests left for the time window.
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    description: >-
                      The basic response containing the unique ID of the request
                      and the response status
                    required:
                      - meta
                    properties:
                      meta:
                        type: object
                        required:
                          - requestId
                          - status
                        properties:
                          requestId:
                            type: string
                          status:
                            type: number
                  - type: object
                    description: The error message should specify what cause the error
                    required:
                      - message
                    properties:
                      message:
                        type: string
  /users/upsert:
    post:
      description: Endpoint to create or update a user.
      summary: Create or update user
      operationId: upsertUser
      x-key-permissions:
        - TrackData
      x-codeSamples:
        - lang: JavaScript
          source: |-
            // https://github.com/journy-io/js-sdk

            import { Client } from "@journyio/sdk";

            const client = Client.withDefaults('your-api-key');

            await client.upsertUser({
              // required
              userId: "userId",
              email: "name@domain.tld",

              // optional
              properties: {
                full_name: "John Doe",
                first_name: "John",
                last_name: "Doe",
                phone: "123",
                registered_at: new Date(/* ... */),
                is_admin: true,
                age: 26,
                array_of_values: ["value1", "value2"],
                key_with_empty_value: "",
                this_property_will_be_deleted: null,
              },
            });
        - lang: PHP
          source: |-
            <?php

            // https://github.com/journy-io/php-sdk

            use JournyIO\SDK\Client;

            $client = Client::withDefaults("your-api-key");

            $client->upsertUser([
                // required
                "userId" => "userId",
                "email" => "name@domain.tld",

                // optional
                "properties" => [
                    "full_name" => "John Doe",
                    "first_name" => "John",
                    "last_name" => "Doe",
                    "phone" => "123",
                    "is_admin" => true,
                    "registered_at" => new \DateTimeImmutable("..."),
                    "age" => 26,
                    "array_of_values" => ["value1", "value2"],
                    "key_with_empty_value" => "",
                    "this_property_will_be_deleted" => null,
                ],
            ]);
        - lang: Python
          source: |-
            # https://github.com/journy-io/python-sdk

            from journyio.client import Client, Config
            from journyio.client import Properties
            from journyio.user_identified import UserIdentified
            from datetime import datetime

            config = Config("api-key-secret")
            http_client = HttpClientRequests()
            client = Client(http_client, config)

            user = UserIdentified("userId", "name@domain.tld")
            # or
            user = UserIdentified.by_user_id("userId")
            # or
            user = UserIdentified.by_email("name@domain.tld")

            properties = Properties()
            properties["full_name"] = "John Doe"
            properties["first_name"] = "John"
            properties["last_name"] = "Doe"
            properties["phone"] = "123"
            properties["is_admin"] = True
            properties["registered_at"] = datetime.now()
            properties["age"] = 26
            properties["array_of_values"] = ["value1", "value2"]
            properties["key_with_empty_value"] = ""
            properties["this_property_will_be_deleted"] = None

            client.upsert_user(user, properties)
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Update properties of a user
              required:
                - identification
              properties:
                identification:
                  type: object
                  description: 'User identification requires a userId, email or both'
                  properties:
                    email:
                      type: string
                      format: email
                      description: Email address of the user
                    userId:
                      type: string
                      format: user-id
                      description: Unique identifier for the user in your database
                  minProperties: 1
                properties:
                  type: object
                  description: >-
                    The properties being set, possible values are strings,
                    booleans, numbers and datetimes (ISO 8601)
                  additionalProperties:
                    oneOf:
                      - type: string
                        nullable: true
                      - type: boolean
                      - type: number
                      - type: string
                        format: datetime
                      - type: array
                        items:
                          type: string
                          format: non-empty-string
      responses:
        '201':
          description: Object was created
          headers:
            X-RateLimit-Limit:
              schema:
                type: integer
              description: Request limit per minute.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests left for the time window.
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    description: >-
                      The basic response containing the unique ID of the request
                      and the response status
                    required:
                      - meta
                    properties:
                      meta:
                        type: object
                        required:
                          - requestId
                          - status
                        properties:
                          requestId:
                            type: string
                          status:
                            type: number
                  - type: object
                    description: The object was created
                    required:
                      - message
                    properties:
                      message:
                        type: string
        '400':
          description: 'Bad request, some fields or parameters are incorrect'
          headers:
            X-RateLimit-Limit:
              schema:
                type: integer
              description: Request limit per minute.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests left for the time window.
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - type: object
                        description: >-
                          The basic response containing the unique ID of the
                          request and the response status
                        required:
                          - meta
                        properties:
                          meta:
                            type: object
                            required:
                              - requestId
                              - status
                            properties:
                              requestId:
                                type: string
                              status:
                                type: number
                      - type: object
                        description: The error message should specify what cause the error
                        required:
                          - message
                        properties:
                          message:
                            type: string
                  - type: object
                    description: Specify the fields and/ or parameters that had errors
                    required:
                      - errors
                    properties:
                      errors:
                        type: object
                        description: >-
                          Map that sums up all received values that seemed
                          incorrect
                        properties:
                          fields:
                            description: All input fields that seemed incorrect
                            type: object
                            additionalProperties:
                              type: string
                          parameters:
                            type: object
                            description: >-
                              All query-, header- and path- parameters that
                              seemed incorrect
                            properties:
                              query:
                                type: object
                                additionalProperties:
                                  type: string
                              header:
                                type: object
                                additionalProperties:
                                  type: string
                              path:
                                type: object
                                additionalProperties:
                                  type: string
        '401':
          description: >-
            No API Key was provided or the key is not authorised to perform the
            action
          headers:
            X-RateLimit-Limit:
              schema:
                type: integer
              description: Request limit per minute.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests left for the time window.
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    description: >-
                      The basic response containing the unique ID of the request
                      and the response status
                    required:
                      - meta
                    properties:
                      meta:
                        type: object
                        required:
                          - requestId
                          - status
                        properties:
                          requestId:
                            type: string
                          status:
                            type: number
                  - type: object
                    description: The error message should specify what cause the error
                    required:
                      - message
                    properties:
                      message:
                        type: string
        '403':
          description: The API Key provided is currently not enabled
          headers:
            X-RateLimit-Limit:
              schema:
                type: integer
              description: Request limit per minute.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests left for the time window.
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    description: >-
                      The basic response containing the unique ID of the request
                      and the response status
                    required:
                      - meta
                    properties:
                      meta:
                        type: object
                        required:
                          - requestId
                          - status
                        properties:
                          requestId:
                            type: string
                          status:
                            type: number
                  - type: object
                    description: The error message should specify what cause the error
                    required:
                      - message
                    properties:
                      message:
                        type: string
        '429':
          description: Too many API requests were send
          headers:
            X-RateLimit-Limit:
              schema:
                type: integer
              description: Request limit per minute.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests left for the time window.
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    description: >-
                      The basic response containing the unique ID of the request
                      and the response status
                    required:
                      - meta
                    properties:
                      meta:
                        type: object
                        required:
                          - requestId
                          - status
                        properties:
                          requestId:
                            type: string
                          status:
                            type: number
                  - type: object
                    description: The error message should specify what cause the error
                    required:
                      - message
                    properties:
                      message:
                        type: string
        '500':
          description: An unexpected error occurred
          headers:
            X-RateLimit-Limit:
              schema:
                type: integer
              description: Request limit per minute.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests left for the time window.
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    description: >-
                      The basic response containing the unique ID of the request
                      and the response status
                    required:
                      - meta
                    properties:
                      meta:
                        type: object
                        required:
                          - requestId
                          - status
                        properties:
                          requestId:
                            type: string
                          status:
                            type: number
                  - type: object
                    description: The error message should specify what cause the error
                    required:
                      - message
                    properties:
                      message:
                        type: string
  /accounts/upsert:
    post:
      description: Endpoint used to create or update an account.
      summary: Create or update account
      operationId: upsertAccount
      x-key-permissions:
        - TrackData
      x-codeSamples:
        - lang: JavaScript
          source: |-
            // https://github.com/journy-io/js-sdk

            import { Client } from "@journyio/sdk";

            const client = Client.withDefaults('your-api-key');

            await client.upsertAccount({
              // required
              accountId: "accountId",
              domain: "acme-inc.com",

              // optional
              properties: {
                name: "ACME, Inc",
                mrr: 399,
                plan: "Pro",
                registered_at: new Date(...),
                is_paying: true,
                key_with_empty_value: "",
                array_of_values: ["value1", "value2"],
                this_property_will_be_deleted: null,
              },

              // optional
              members: [
                { userId: "userId" },
                { userId: "userId" }
              ]
            });
        - lang: PHP
          source: |-
            <?php

            // https://github.com/journy-io/php-sdk

            use JournyIO\SDK\Client;

            $client = Client::withDefaults("your-api-key");

            $client->upsertAccount([
                "accountId" => "accountId",
                "domain" => "acme-inc.com",

                // optional
                "properties" => [
                    "name" => "ACME, Inc",
                    "mrr" => 399,
                    "plan" => "Pro",
                    "registered_at" => new \DateTimeImmutable("..."),
                    "is_paying" => true,
                    "key_with_empty_value" => "",
                    "array_of_values" => ["value1", "value2"],
                    "this_property_will_be_deleted" => null,
                ],

                // optional
                "members" => [
                    ["userId" => "userId"],
                    ["userId" => "userId"],
                ],
            ]);
        - lang: Python
          source: |-
            # https://github.com/journy-io/python-sdk

            from journyio.client import Client, Config
            from journyio.client import Properties
            from journyio.account_identified import AccountIdentified
            from journyio.user_identified import UserIdentified
            from datetime import datetime

            config = Config("api-key-secret")
            http_client = HttpClientRequests()
            client = Client(http_client, config)

            account = AccountIdentified("accountId", "acme-inc.com")
            # or
            account = AccountIdentified.by_account_id("accountId")
            # or
            account = AccountIdentified.by_domain("acme-inc.com")

            properties = Properties()
            properties["name"] = "ACME, Inc"
            properties["mrr"] = 399
            properties["plan"] = "Pro"
            properties["registered_at"] = datetime.now()
            properties["is_paying"] = True
            properties["key_with_empty_value"] = ""
            properties["this_property_will_be_deleted"] = None
            properties["array_of_values"] = ["value1", "value2"]

            member1 = UserIdentified.by_user_id("userId")
            member2 = UserIdentified.by_user_id("userId")

            client.upsert_account(account, properties, [member1, member2])
      tags:
        - Accounts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Update properties and/or members of an account
              required:
                - identification
              properties:
                identification:
                  type: object
                  description: 'Account identification requires an accountId, domain or both'
                  properties:
                    domain:
                      type: string
                      format: top-level-domain
                      description: >-
                        The domain associated with the account (e.g.
                        acme-inc.com)
                    accountId:
                      type: string
                      format: account-id
                      description: Unique identifier for the account in your database
                  minProperties: 1
                properties:
                  type: object
                  description: >-
                    The properties being set, possible values are strings,
                    booleans, numbers and datetimes (ISO 8601)
                  additionalProperties:
                    oneOf:
                      - type: string
                        nullable: true
                      - type: boolean
                      - type: number
                      - type: string
                        format: datetime
                      - type: array
                        items:
                          type: string
                          format: non-empty-string
                members:
                  description: The users that are member of this account
                  type: array
                  items:
                    type: object
                    description: 'Identification requires an accountId, domain or both'
                    required:
                      - identification
                    properties:
                      identification:
                        type: object
                        description: 'User identification requires a userId, email or both'
                        properties:
                          email:
                            type: string
                            format: email
                            description: Email address of the user
                          userId:
                            type: string
                            format: user-id
                            description: Unique identifier for the user in your database
                        minProperties: 1
      responses:
        '201':
          description: Object was created
          headers:
            X-RateLimit-Limit:
              schema:
                type: integer
              description: Request limit per minute.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests left for the time window.
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    description: >-
                      The basic response containing the unique ID of the request
                      and the response status
                    required:
                      - meta
                    properties:
                      meta:
                        type: object
                        required:
                          - requestId
                          - status
                        properties:
                          requestId:
                            type: string
                          status:
                            type: number
                  - type: object
                    description: The object was created
                    required:
                      - message
                    properties:
                      message:
                        type: string
        '400':
          description: 'Bad request, some fields or parameters are incorrect'
          headers:
            X-RateLimit-Limit:
              schema:
                type: integer
              description: Request limit per minute.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests left for the time window.
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - type: object
                        description: >-
                          The basic response containing the unique ID of the
                          request and the response status
                        required:
                          - meta
                        properties:
                          meta:
                            type: object
                            required:
                              - requestId
                              - status
                            properties:
                              requestId:
                                type: string
                              status:
                                type: number
                      - type: object
                        description: The error message should specify what cause the error
                        required:
                          - message
                        properties:
                          message:
                            type: string
                  - type: object
                    description: Specify the fields and/ or parameters that had errors
                    required:
                      - errors
                    properties:
                      errors:
                        type: object
                        description: >-
                          Map that sums up all received values that seemed
                          incorrect
                        properties:
                          fields:
                            description: All input fields that seemed incorrect
                            type: object
                            additionalProperties:
                              type: string
                          parameters:
                            type: object
                            description: >-
                              All query-, header- and path- parameters that
                              seemed incorrect
                            properties:
                              query:
                                type: object
                                additionalProperties:
                                  type: string
                              header:
                                type: object
                                additionalProperties:
                                  type: string
                              path:
                                type: object
                                additionalProperties:
                                  type: string
        '401':
          description: >-
            No API Key was provided or the key is not authorised to perform the
            action
          headers:
            X-RateLimit-Limit:
              schema:
                type: integer
              description: Request limit per minute.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests left for the time window.
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    description: >-
                      The basic response containing the unique ID of the request
                      and the response status
                    required:
                      - meta
                    properties:
                      meta:
                        type: object
                        required:
                          - requestId
                          - status
                        properties:
                          requestId:
                            type: string
                          status:
                            type: number
                  - type: object
                    description: The error message should specify what cause the error
                    required:
                      - message
                    properties:
                      message:
                        type: string
        '429':
          description: Too many API requests were send
          headers:
            X-RateLimit-Limit:
              schema:
                type: integer
              description: Request limit per minute.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests left for the time window.
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    description: >-
                      The basic response containing the unique ID of the request
                      and the response status
                    required:
                      - meta
                    properties:
                      meta:
                        type: object
                        required:
                          - requestId
                          - status
                        properties:
                          requestId:
                            type: string
                          status:
                            type: number
                  - type: object
                    description: The error message should specify what cause the error
                    required:
                      - message
                    properties:
                      message:
                        type: string
        '500':
          description: An unexpected error occurred
          headers:
            X-RateLimit-Limit:
              schema:
                type: integer
              description: Request limit per minute.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests left for the time window.
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    description: >-
                      The basic response containing the unique ID of the request
                      and the response status
                    required:
                      - meta
                    properties:
                      meta:
                        type: object
                        required:
                          - requestId
                          - status
                        properties:
                          requestId:
                            type: string
                          status:
                            type: number
                  - type: object
                    description: The error message should specify what cause the error
                    required:
                      - message
                    properties:
                      message:
                        type: string
  '/accounts/{accountId}/users':
    post:
      description: Endpoint used to add a user to an account.
      summary: Add user to account
      parameters:
        - in: path
          name: accountId
          description: Unique identifier for the account in your database
          required: true
          schema:
            type: string
      operationId: addUserToAccount
      x-key-permissions:
        - TrackData
      x-codeSamples:
        - lang: JavaScript
          source: |-
            // https://github.com/journy-io/js-sdk
            import { Client } from "@journyio/sdk";
            const client = Client.withDefaults('your-api-key');
            await client.addUserToAccount({
              accountId: "accountId",
              userId: "userId"
            });
        - lang: PHP
          source: |-
            <?php

            // https://github.com/journy-io/php-sdk

            use JournyIO\SDK\Client;

            $client = Client::withDefaults("your-api-key");

            $client->addUserToAccount(
                "accountId",
                "userId"
            );
        - lang: Python
          source: |-
            # https://github.com/journy-io/python-sdk

            from journyio.client import Client, Config

            config = Config("api-key-secret")
            http_client = HttpClientRequests()
            client = Client(http_client, config)

            client.add_user_to_account("accountId", "userId")
      tags:
        - Accounts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: The user being added/removed from the account
              required:
                - userId
              properties:
                userId:
                  type: string
                  format: user-id
                  description: Unique identifier for the user in your database
      responses:
        '201':
          description: Object was created
          headers:
            X-RateLimit-Limit:
              schema:
                type: integer
              description: Request limit per minute.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests left for the time window.
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    description: >-
                      The basic response containing the unique ID of the request
                      and the response status
                    required:
                      - meta
                    properties:
                      meta:
                        type: object
                        required:
                          - requestId
                          - status
                        properties:
                          requestId:
                            type: string
                          status:
                            type: number
                  - type: object
                    description: The object was created
                    required:
                      - message
                    properties:
                      message:
                        type: string
        '400':
          description: 'Bad request, some fields or parameters are incorrect'
          headers:
            X-RateLimit-Limit:
              schema:
                type: integer
              description: Request limit per minute.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests left for the time window.
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - type: object
                        description: >-
                          The basic response containing the unique ID of the
                          request and the response status
                        required:
                          - meta
                        properties:
                          meta:
                            type: object
                            required:
                              - requestId
                              - status
                            properties:
                              requestId:
                                type: string
                              status:
                                type: number
                      - type: object
                        description: The error message should specify what cause the error
                        required:
                          - message
                        properties:
                          message:
                            type: string
                  - type: object
                    description: Specify the fields and/ or parameters that had errors
                    required:
                      - errors
                    properties:
                      errors:
                        type: object
                        description: >-
                          Map that sums up all received values that seemed
                          incorrect
                        properties:
                          fields:
                            description: All input fields that seemed incorrect
                            type: object
                            additionalProperties:
                              type: string
                          parameters:
                            type: object
                            description: >-
                              All query-, header- and path- parameters that
                              seemed incorrect
                            properties:
                              query:
                                type: object
                                additionalProperties:
                                  type: string
                              header:
                                type: object
                                additionalProperties:
                                  type: string
                              path:
                                type: object
                                additionalProperties:
                                  type: string
        '401':
          description: >-
            No API Key was provided or the key is not authorised to perform the
            action
          headers:
            X-RateLimit-Limit:
              schema:
                type: integer
              description: Request limit per minute.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests left for the time window.
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    description: >-
                      The basic response containing the unique ID of the request
                      and the response status
                    required:
                      - meta
                    properties:
                      meta:
                        type: object
                        required:
                          - requestId
                          - status
                        properties:
                          requestId:
                            type: string
                          status:
                            type: number
                  - type: object
                    description: The error message should specify what cause the error
                    required:
                      - message
                    properties:
                      message:
                        type: string
        '429':
          description: Too many API requests were send
          headers:
            X-RateLimit-Limit:
              schema:
                type: integer
              description: Request limit per minute.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests left for the time window.
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    description: >-
                      The basic response containing the unique ID of the request
                      and the response status
                    required:
                      - meta
                    properties:
                      meta:
                        type: object
                        required:
                          - requestId
                          - status
                        properties:
                          requestId:
                            type: string
                          status:
                            type: number
                  - type: object
                    description: The error message should specify what cause the error
                    required:
                      - message
                    properties:
                      message:
                        type: string
        '500':
          description: An unexpected error occurred
          headers:
            X-RateLimit-Limit:
              schema:
                type: integer
              description: Request limit per minute.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests left for the time window.
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    description: >-
                      The basic response containing the unique ID of the request
                      and the response status
                    required:
                      - meta
                    properties:
                      meta:
                        type: object
                        required:
                          - requestId
                          - status
                        properties:
                          requestId:
                            type: string
                          status:
                            type: number
                  - type: object
                    description: The error message should specify what cause the error
                    required:
                      - message
                    properties:
                      message:
                        type: string
    delete:
      description: Endpoint used to remove a user from an account.
      summary: Remove user from account
      operationId: removeUserFromAccount
      parameters:
        - in: path
          name: accountId
          description: Unique identifier for the account in your database
          required: true
          schema:
            type: string
      x-key-permissions:
        - TrackData
      x-codeSamples:
        - lang: JavaScript
          source: |-
            // https://github.com/journy-io/js-sdk
            import { Client } from "@journyio/sdk";
            const client = Client.withDefaults('your-api-key');
            await client.removeUserFromAccount({
              accountId: "accountId",
              userId: "userId"
            });
        - lang: PHP
          source: |-
            <?php

            // https://github.com/journy-io/php-sdk

            use JournyIO\SDK\Client;

            $client = Client::withDefaults("your-api-key");

            $client->removeUserFromAccount(
                "accountId",
                "userId"
            );
        - lang: Python
          source: |-
            # https://github.com/journy-io/python-sdk

            from journyio.client import Client, Config

            config = Config("api-key-secret")
            http_client = HttpClientRequests()
            client = Client(http_client, config)

            client.remove_user_from_account("accountId", "userId")
      tags:
        - Accounts
      responses:
        '201':
          description: Object was created
          headers:
            X-RateLimit-Limit:
              schema:
                type: integer
              description: Request limit per minute.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests left for the time window.
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    description: >-
                      The basic response containing the unique ID of the request
                      and the response status
                    required:
                      - meta
                    properties:
                      meta:
                        type: object
                        required:
                          - requestId
                          - status
                        properties:
                          requestId:
                            type: string
                          status:
                            type: number
                  - type: object
                    description: The object was created
                    required:
                      - message
                    properties:
                      message:
                        type: string
        '400':
          description: 'Bad request, some fields or parameters are incorrect'
          headers:
            X-RateLimit-Limit:
              schema:
                type: integer
              description: Request limit per minute.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests left for the time window.
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - type: object
                        description: >-
                          The basic response containing the unique ID of the
                          request and the response status
                        required:
                          - meta
                        properties:
                          meta:
                            type: object
                            required:
                              - requestId
                              - status
                            properties:
                              requestId:
                                type: string
                              status:
                                type: number
                      - type: object
                        description: The error message should specify what cause the error
                        required:
                          - message
                        properties:
                          message:
                            type: string
                  - type: object
                    description: Specify the fields and/ or parameters that had errors
                    required:
                      - errors
                    properties:
                      errors:
                        type: object
                        description: >-
                          Map that sums up all received values that seemed
                          incorrect
                        properties:
                          fields:
                            description: All input fields that seemed incorrect
                            type: object
                            additionalProperties:
                              type: string
                          parameters:
                            type: object
                            description: >-
                              All query-, header- and path- parameters that
                              seemed incorrect
                            properties:
                              query:
                                type: object
                                additionalProperties:
                                  type: string
                              header:
                                type: object
                                additionalProperties:
                                  type: string
                              path:
                                type: object
                                additionalProperties:
                                  type: string
        '401':
          description: >-
            No API Key was provided or the key is not authorised to perform the
            action
          headers:
            X-RateLimit-Limit:
              schema:
                type: integer
              description: Request limit per minute.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests left for the time window.
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    description: >-
                      The basic response containing the unique ID of the request
                      and the response status
                    required:
                      - meta
                    properties:
                      meta:
                        type: object
                        required:
                          - requestId
                          - status
                        properties:
                          requestId:
                            type: string
                          status:
                            type: number
                  - type: object
                    description: The error message should specify what cause the error
                    required:
                      - message
                    properties:
                      message:
                        type: string
        '403':
          description: The API Key provided is currently not enabled
          headers:
            X-RateLimit-Limit:
              schema:
                type: integer
              description: Request limit per minute.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests left for the time window.
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    description: >-
                      The basic response containing the unique ID of the request
                      and the response status
                    required:
                      - meta
                    properties:
                      meta:
                        type: object
                        required:
                          - requestId
                          - status
                        properties:
                          requestId:
                            type: string
                          status:
                            type: number
                  - type: object
                    description: The error message should specify what cause the error
                    required:
                      - message
                    properties:
                      message:
                        type: string
        '429':
          description: Too many API requests were send
          headers:
            X-RateLimit-Limit:
              schema:
                type: integer
              description: Request limit per minute.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests left for the time window.
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    description: >-
                      The basic response containing the unique ID of the request
                      and the response status
                    required:
                      - meta
                    properties:
                      meta:
                        type: object
                        required:
                          - requestId
                          - status
                        properties:
                          requestId:
                            type: string
                          status:
                            type: number
                  - type: object
                    description: The error message should specify what cause the error
                    required:
                      - message
                    properties:
                      message:
                        type: string
        '500':
          description: An unexpected error occurred
          headers:
            X-RateLimit-Limit:
              schema:
                type: integer
              description: Request limit per minute.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests left for the time window.
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    description: >-
                      The basic response containing the unique ID of the request
                      and the response status
                    required:
                      - meta
                    properties:
                      meta:
                        type: object
                        required:
                          - requestId
                          - status
                        properties:
                          requestId:
                            type: string
                          status:
                            type: number
                  - type: object
                    description: The error message should specify what cause the error
                    required:
                      - message
                    properties:
                      message:
                        type: string
  /validate:
    get:
      description: >-
        Endpoint used to test the validity and some basic information about a
        specific API Key.
      summary: Validate API key
      operationId: getValidity
      x-codeSamples:
        - lang: JavaScript
          source: |-
            // https://github.com/journy-io/js-sdk

            import { Client } from "@journyio/sdk";

            const client = Client.withDefaults('your-api-key');

            const result = await client.getApiKeyDetails();

            if (result.success) {
              console.log(result.data.permissions); // string[]
            }
        - lang: PHP
          source: |-
            <?php

            // https://github.com/journy-io/php-sdk

            use JournyIO\SDK\Client;

            $client = Client::withDefaults("your-api-key");

            $call = $client->getApiKeyDetails();

            if ($call->succeeded()) {
                $result = $call->result();

                if ($result instanceof ApiKeyDetails) {
                    var_dump($result->getPermissions()); // string[]
                }
            } else {
                var_dump($call->errors());
            }
        - lang: Python
          source: |-
            # https://github.com/journy-io/python-sdk

            from journyio.client import Client, Config
            from journyio.results import Success

            config = Config("api-key-secret")
            http_client = HttpClientRequests()
            client = Client(http_client, config)

            client.get_api_key_details()

            if isinstance(result, Success):
                print(result.request_id)  # str
                print(result.calls_remaining)  # int
                print(result.data)  # ApiKeyDetails
                print(result.permissions)  # list of strings denoting the permissions
      tags:
        - Validation
      responses:
        '200':
          description: Key validation
          headers:
            X-RateLimit-Limit:
              schema:
                type: integer
              description: Request limit per minute.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests left for the time window.
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    description: >-
                      The basic response containing the unique ID of the request
                      and the response status
                    required:
                      - meta
                    properties:
                      meta:
                        type: object
                        required:
                          - requestId
                          - status
                        properties:
                          requestId:
                            type: string
                          status:
                            type: number
                  - type: object
                    required:
                      - data
                    properties:
                      data:
                        type: object
                        description: Validation of API Key
                        required:
                          - permissions
                        properties:
                          permissions:
                            type: array
                            items:
                              type: string
        '401':
          description: >-
            No API Key was provided or the key is not authorised to perform the
            action
          headers:
            X-RateLimit-Limit:
              schema:
                type: integer
              description: Request limit per minute.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests left for the time window.
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    description: >-
                      The basic response containing the unique ID of the request
                      and the response status
                    required:
                      - meta
                    properties:
                      meta:
                        type: object
                        required:
                          - requestId
                          - status
                        properties:
                          requestId:
                            type: string
                          status:
                            type: number
                  - type: object
                    description: The error message should specify what cause the error
                    required:
                      - message
                    properties:
                      message:
                        type: string
        '403':
          description: The API Key provided is currently not enabled
          headers:
            X-RateLimit-Limit:
              schema:
                type: integer
              description: Request limit per minute.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests left for the time window.
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    description: >-
                      The basic response containing the unique ID of the request
                      and the response status
                    required:
                      - meta
                    properties:
                      meta:
                        type: object
                        required:
                          - requestId
                          - status
                        properties:
                          requestId:
                            type: string
                          status:
                            type: number
                  - type: object
                    description: The error message should specify what cause the error
                    required:
                      - message
                    properties:
                      message:
                        type: string
        '429':
          description: Too many API requests were send
          headers:
            X-RateLimit-Limit:
              schema:
                type: integer
              description: Request limit per minute.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests left for the time window.
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    description: >-
                      The basic response containing the unique ID of the request
                      and the response status
                    required:
                      - meta
                    properties:
                      meta:
                        type: object
                        required:
                          - requestId
                          - status
                        properties:
                          requestId:
                            type: string
                          status:
                            type: number
                  - type: object
                    description: The error message should specify what cause the error
                    required:
                      - message
                    properties:
                      message:
                        type: string
        '500':
          description: An unexpected error occurred
          headers:
            X-RateLimit-Limit:
              schema:
                type: integer
              description: Request limit per minute.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests left for the time window.
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    description: >-
                      The basic response containing the unique ID of the request
                      and the response status
                    required:
                      - meta
                    properties:
                      meta:
                        type: object
                        required:
                          - requestId
                          - status
                        properties:
                          requestId:
                            type: string
                          status:
                            type: number
                  - type: object
                    description: The error message should specify what cause the error
                    required:
                      - message
                    properties:
                      message:
                        type: string
  /tracking/snippet:
    get:
      description: Endpoint used to get a snippet for a website.
      summary: Get snippet for a website
      operationId: getTrackingSnippet
      x-key-permissions:
        - GetTrackingSnippet
      x-codeSamples:
        - lang: JavaScript
          source: |-
            // https://github.com/journy-io/js-sdk

            import { Client } from "@journyio/sdk";

            const client = Client.withDefaults('your-api-key');

            const result = await client.getTrackingSnippet({
              domain: "www.journy.io",
            });

            if (result.success) {
              console.log(result.data.snippet); // string
              console.log(result.data.domain); // string
            }
        - lang: PHP
          source: |-
            <?php

            // https://github.com/journy-io/php-sdk

            use JournyIO\SDK\Client;

            $client = Client::withDefaults("your-api-key");

            $call = $client->getTrackingSnippet("blog.acme.com");

            if ($call->succeeded()) {
                $result = $call->result();

                if ($result instanceof TrackingSnippet) {
                    var_dump($result->getSnippet()); // string
                    var_dump($result->getDomain()); // string
                }
            } else {
                var_dump($call->errors());
            }
        - lang: Python
          source: |-
            # https://github.com/journy-io/python-sdk

            from journyio.client import Client, Config
            from journyio.results import Success

            config = Config("api-key-secret")
            http_client = HttpClientRequests()
            client = Client(http_client, config)

            client.get_tracking_snippet("blog.acme.com")

            if isinstance(result, Success):
              print(result.request_id)  # str
              print(result.calls_remaining)  # int
              print(result.data)  # TrackingSnippetResonse
              print(result.domain)  # str
              print(result.snippet)  # str
      tags:
        - Websites
      parameters:
        - in: query
          required: true
          name: domain
          description: The domain you want to receive a snippet for
          schema:
            type: string
            format: domain
      responses:
        '200':
          description: Snippet
          headers:
            X-RateLimit-Limit:
              schema:
                type: integer
              description: Request limit per minute.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests left for the time window.
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    description: >-
                      The basic response containing the unique ID of the request
                      and the response status
                    required:
                      - meta
                    properties:
                      meta:
                        type: object
                        required:
                          - requestId
                          - status
                        properties:
                          requestId:
                            type: string
                          status:
                            type: number
                  - type: object
                    required:
                      - data
                    properties:
                      data:
                        type: object
                        description: A snippet
                        required:
                          - domain
                          - snippet
                        properties:
                          domain:
                            type: string
                            format: domain
                          snippet:
                            type: string
        '400':
          description: 'Bad request, some fields or parameters are incorrect'
          headers:
            X-RateLimit-Limit:
              schema:
                type: integer
              description: Request limit per minute.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests left for the time window.
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - type: object
                        description: >-
                          The basic response containing the unique ID of the
                          request and the response status
                        required:
                          - meta
                        properties:
                          meta:
                            type: object
                            required:
                              - requestId
                              - status
                            properties:
                              requestId:
                                type: string
                              status:
                                type: number
                      - type: object
                        description: The error message should specify what cause the error
                        required:
                          - message
                        properties:
                          message:
                            type: string
                  - type: object
                    description: Specify the fields and/ or parameters that had errors
                    required:
                      - errors
                    properties:
                      errors:
                        type: object
                        description: >-
                          Map that sums up all received values that seemed
                          incorrect
                        properties:
                          fields:
                            description: All input fields that seemed incorrect
                            type: object
                            additionalProperties:
                              type: string
                          parameters:
                            type: object
                            description: >-
                              All query-, header- and path- parameters that
                              seemed incorrect
                            properties:
                              query:
                                type: object
                                additionalProperties:
                                  type: string
                              header:
                                type: object
                                additionalProperties:
                                  type: string
                              path:
                                type: object
                                additionalProperties:
                                  type: string
        '401':
          description: >-
            No API Key was provided or the key is not authorised to perform the
            action
          headers:
            X-RateLimit-Limit:
              schema:
                type: integer
              description: Request limit per minute.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests left for the time window.
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    description: >-
                      The basic response containing the unique ID of the request
                      and the response status
                    required:
                      - meta
                    properties:
                      meta:
                        type: object
                        required:
                          - requestId
                          - status
                        properties:
                          requestId:
                            type: string
                          status:
                            type: number
                  - type: object
                    description: The error message should specify what cause the error
                    required:
                      - message
                    properties:
                      message:
                        type: string
        '403':
          description: The API Key provided is currently not enabled
          headers:
            X-RateLimit-Limit:
              schema:
                type: integer
              description: Request limit per minute.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests left for the time window.
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    description: >-
                      The basic response containing the unique ID of the request
                      and the response status
                    required:
                      - meta
                    properties:
                      meta:
                        type: object
                        required:
                          - requestId
                          - status
                        properties:
                          requestId:
                            type: string
                          status:
                            type: number
                  - type: object
                    description: The error message should specify what cause the error
                    required:
                      - message
                    properties:
                      message:
                        type: string
        '404':
          description: Not found
          headers:
            X-RateLimit-Limit:
              schema:
                type: integer
              description: Request limit per minute.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests left for the time window.
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    description: >-
                      The basic response containing the unique ID of the request
                      and the response status
                    required:
                      - meta
                    properties:
                      meta:
                        type: object
                        required:
                          - requestId
                          - status
                        properties:
                          requestId:
                            type: string
                          status:
                            type: number
                  - type: object
                    description: The error message should specify what cause the error
                    required:
                      - message
                    properties:
                      message:
                        type: string
        '429':
          description: Too many API requests were send
          headers:
            X-RateLimit-Limit:
              schema:
                type: integer
              description: Request limit per minute.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests left for the time window.
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    description: >-
                      The basic response containing the unique ID of the request
                      and the response status
                    required:
                      - meta
                    properties:
                      meta:
                        type: object
                        required:
                          - requestId
                          - status
                        properties:
                          requestId:
                            type: string
                          status:
                            type: number
                  - type: object
                    description: The error message should specify what cause the error
                    required:
                      - message
                    properties:
                      message:
                        type: string
        '500':
          description: An unexpected error occurred
          headers:
            X-RateLimit-Limit:
              schema:
                type: integer
              description: Request limit per minute.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests left for the time window.
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    description: >-
                      The basic response containing the unique ID of the request
                      and the response status
                    required:
                      - meta
                    properties:
                      meta:
                        type: object
                        required:
                          - requestId
                          - status
                        properties:
                          requestId:
                            type: string
                          status:
                            type: number
                  - type: object
                    description: The error message should specify what cause the error
                    required:
                      - message
                    properties:
                      message:
                        type: string
components:
  securitySchemes:
    api_key:
      type: apiKey
      description: Represents API Key `X-Api-Key`
      name: X-Api-Key
      in: header